// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_LICHENGROWER$GROWCHECKER_HPP
#define NET_MINECRAFT_BLOCK_LICHENGROWER$GROWCHECKER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.LichenGrower$GrowChecker
 * Remapped: dkz$b
 */
namespace LichenGrower$GrowChecker {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dkz$b", "net/minecraft/world/level/block/MultifaceSpreader$SpreadConfig", "net/minecraft/class_7118$class_7120", "net/minecraft/block/LichenGrower$GrowChecker", "net/minecraft/src/C_213099_$C_213101_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getStateWithDirection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getStateForPlacement", "method_41459", "getStateWithDirection", "m_214136_"), "(Ldtc;Ldcc;Ljd;Lji;)Ldtc;");
    }

    static jobject getStateWithDirection(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getStateWithDirection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canGrow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canSpreadInto", "method_41457", "canGrow", "m_213973_"), "(Ldcc;Ljd;Ldkz$c;)Z");
    }

    static jboolean canGrow(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_canGrow();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getGrowTypes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpreadTypes", "method_41460", "getGrowTypes", "m_214109_"), "()[Ldkz$e;");
    }

    static jobject getGrowTypes(const jobject& obj) {
                
       const auto methodID = methodID_getGrowTypes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasDirection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasFace", "method_41463", "hasDirection", "m_221711_"), "(Ldtc;Lji;)Z");
    }

    static jboolean hasDirection(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_hasDirection();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__canGrow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isOtherBlockValidAsSource", "method_41462", "canGrow", "m_214107_"), "(Ldtc;)Z");
    }

    static jboolean _canGrow(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__canGrow();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___canGrow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canSpreadFrom", "method_41464", "canGrow", "m_221714_"), "(Ldtc;Lji;)Z");
    }

    static jboolean __canGrow(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID___canGrow();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_place() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "placeBlock", "method_41461", "place", "m_221701_"), "(Ldcx;Ldkz$c;Ldtc;Z)Z");
    }

    static jboolean place(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_place();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_LICHENGROWER$GROWCHECKER_HPP