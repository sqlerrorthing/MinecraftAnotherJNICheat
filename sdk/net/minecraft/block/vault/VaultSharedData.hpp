// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_VAULT_VAULTSHAREDDATA_HPP
#define NET_MINECRAFT_BLOCK_VAULT_VAULTSHAREDDATA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.vault.VaultSharedData
 * Remapped: dso
 */
namespace VaultSharedData {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dso", "net/minecraft/world/level/block/entity/vault/VaultSharedData", "net/minecraft/class_9205", "net/minecraft/block/vault/VaultSharedData", "net/minecraft/src/C_313454_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.block.vault.VaultSharedData#SHARED_DATA_KEY
    [[maybe_unused]] static jobject get_field_SHARED_DATA_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TAG_NAME", "field_48893", "SHARED_DATA_KEY", "f_315249_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.block.vault.VaultSharedData#SHARED_DATA_KEY
    [[maybe_unused]] static void set_field_SHARED_DATA_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TAG_NAME", "field_48893", "SHARED_DATA_KEY", "f_315249_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.block.vault.VaultSharedData#codec
    [[maybe_unused]] static jobject get_field_codec() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_48894", "codec", "f_314733_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.block.vault.VaultSharedData#codec
    [[maybe_unused]] static void set_field_codec(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_48894", "codec", "f_314733_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.vault.VaultSharedData#displayItem
    static jobject get_field_displayItem(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "displayItem", "field_48896", "displayItem", "f_316301_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.vault.VaultSharedData#displayItem
    static void set_field_displayItem(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "displayItem", "field_48896", "displayItem", "f_316301_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.vault.VaultSharedData#connectedPlayers
    static jobject get_field_connectedPlayers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "connectedPlayers", "field_48897", "connectedPlayers", "f_316286_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.vault.VaultSharedData#connectedPlayers
    static void set_field_connectedPlayers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "connectedPlayers", "field_48897", "connectedPlayers", "f_316286_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.vault.VaultSharedData#connectedParticlesRange
    static jdouble get_field_connectedParticlesRange(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "connectedParticlesRange", "field_48898", "connectedParticlesRange", "f_314556_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.vault.VaultSharedData#connectedParticlesRange
    static void set_field_connectedParticlesRange(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "connectedParticlesRange", "field_48898", "connectedParticlesRange", "f_314556_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.block.vault.VaultSharedData#dirty
    static jboolean get_field_dirty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "isDirty", "field_48895", "dirty", "f_315421_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.block.vault.VaultSharedData#dirty
    static void set_field_dirty(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "isDirty", "field_48895", "dirty", "f_315421_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getDisplayItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDisplayItem", "method_56787", "getDisplayItem", "m_321880_"), "()Lcuq;");
    }

    static jobject getDisplayItem(const jobject& obj) {
                
       const auto methodID = methodID_getDisplayItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasDisplayItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasDisplayItem", "method_56793", "hasDisplayItem", "m_323977_"), "()Z");
    }

    static jboolean hasDisplayItem(const jobject& obj) {
                
       const auto methodID = methodID_hasDisplayItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDisplayItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDisplayItem", "method_56790", "setDisplayItem", "m_319450_"), "(Lcuq;)V");
    }

    static void setDisplayItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDisplayItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasConnectedPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "hasConnectedPlayers", "method_56795", "hasConnectedPlayers", "m_321463_"), "()Z");
    }

    static jboolean hasConnectedPlayers(const jobject& obj) {
                
       const auto methodID = methodID_hasConnectedPlayers();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getConnectedPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getConnectedPlayers", "method_56797", "getConnectedPlayers", "m_324860_"), "()Ljava/util/Set;");
    }

    static jobject getConnectedPlayers(const jobject& obj) {
                
       const auto methodID = methodID_getConnectedPlayers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getConnectedParticlesRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "connectedParticlesRange", "method_56799", "getConnectedParticlesRange", "m_322015_"), "()D");
    }

    static jdouble getConnectedParticlesRange(const jobject& obj) {
                
       const auto methodID = methodID_getConnectedParticlesRange();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateConnectedPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateConnectedPlayersWithinRange", "method_56788", "updateConnectedPlayers", "m_321245_"), "(Laqu;Ljd;Ldsn;Ldsm;D)V");
    }

    static void updateConnectedPlayers(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_updateConnectedPlayers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_markDirty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "markDirty", "method_56800", "markDirty", "m_318900_"), "()V");
    }

    static void markDirty(const jobject& obj) {
                
       const auto methodID = methodID_markDirty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_copyFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "set", "method_56792", "copyFrom", "m_319383_"), "(Ldso;)V");
    }

    static void copyFrom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_copyFrom();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_VAULT_VAULTSHAREDDATA_HPP