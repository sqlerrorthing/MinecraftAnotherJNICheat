// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITYSHAPECONTEXT_HPP
#define NET_MINECRAFT_BLOCK_ENTITYSHAPECONTEXT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.EntityShapeContext
 * Remapped: exm
 */
namespace EntityShapeContext {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("exm", "net/minecraft/world/phys/shapes/EntityCollisionContext", "net/minecraft/class_3727", "net/minecraft/block/EntityShapeContext", "net/minecraft/src/C_3058_"));
        }
        return cachedClass;
    };

    // getter for static protected field net.minecraft.block.EntityShapeContext#ABSENT
    [[maybe_unused]] static jobject get_field_ABSENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_17593", "ABSENT", "f_82865_"), "Lexh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.block.EntityShapeContext#ABSENT
    [[maybe_unused]] static void set_field_ABSENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_17593", "ABSENT", "f_82865_"), "Lexh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.EntityShapeContext#descending
    static jboolean get_field_descending(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "descending", "field_16451", "descending", "f_82866_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.EntityShapeContext#descending
    static void set_field_descending(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "descending", "field_16451", "descending", "f_82866_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.EntityShapeContext#minY
    static jdouble get_field_minY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "entityBottom", "field_16450", "minY", "f_82867_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.EntityShapeContext#minY
    static void set_field_minY(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "entityBottom", "field_16450", "minY", "f_82867_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.EntityShapeContext#heldItem
    static jobject get_field_heldItem(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "heldItem", "field_17594", "heldItem", "f_82868_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.EntityShapeContext#heldItem
    static void set_field_heldItem(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "heldItem", "field_17594", "heldItem", "f_82868_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.EntityShapeContext#walkOnFluidPredicate
    static jobject get_field_walkOnFluidPredicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "canStandOnFluid", "field_24425", "walkOnFluidPredicate", "f_82869_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.EntityShapeContext#walkOnFluidPredicate
    static void set_field_walkOnFluidPredicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "canStandOnFluid", "field_24425", "walkOnFluidPredicate", "f_82869_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.EntityShapeContext#entity
    static jobject get_field_entity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "entity", "field_27935", "entity", "f_166002_"), "Lbsr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.EntityShapeContext#entity
    static void set_field_entity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "entity", "field_27935", "entity", "f_166002_"), "Lbsr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_isHolding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isHoldingItem", "method_17785", "isHolding", "m_7142_"), "(Lcul;)Z");
    }

    static jboolean isHolding(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isHolding();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canWalkOnFluid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canStandOnFluid", "method_27866", "canWalkOnFluid", "m_203682_"), "(Lepe;Lepe;)Z");
    }

    static jboolean canWalkOnFluid(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canWalkOnFluid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isDescending() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isDescending", "method_16193", "isDescending", "m_6226_"), "()Z");
    }

    static jboolean isDescending(const jobject& obj) {
                
       const auto methodID = methodID_isDescending();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAbove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isAbove", "method_16192", "isAbove", "m_6513_"), "(Lexv;Ljd;Z)Z");
    }

    static jboolean isAbove(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_isAbove();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getEntity", "method_32480", "getEntity", "m_193113_"), "()Lbsr;");
    }

    static jobject getEntity(const jobject& obj) {
                
       const auto methodID = methodID_getEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITYSHAPECONTEXT_HPP