// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_RAILPLACEMENTHELPER_HPP
#define NET_MINECRAFT_BLOCK_RAILPLACEMENTHELPER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.RailPlacementHelper
 * Remapped: dlz
 */
namespace RailPlacementHelper {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dlz", "net/minecraft/world/level/block/RailState", "net/minecraft/class_2452", "net/minecraft/block/RailPlacementHelper", "net/minecraft/src/C_1870_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.block.RailPlacementHelper#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "level", "field_11409", "world", "f_55414_"), "Ldcw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.RailPlacementHelper#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "level", "field_11409", "world", "f_55414_"), "Ldcw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.RailPlacementHelper#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "pos", "field_11410", "pos", "f_55415_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.RailPlacementHelper#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "pos", "field_11410", "pos", "f_55415_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.RailPlacementHelper#block
    static jobject get_field_block(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "block", "field_11411", "block", "f_55416_"), "Ldfn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.RailPlacementHelper#block
    static void set_field_block(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "block", "field_11411", "block", "f_55416_"), "Ldfn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.RailPlacementHelper#state
    static jobject get_field_state(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "state", "field_11406", "state", "f_55417_"), "Ldtc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.RailPlacementHelper#state
    static void set_field_state(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "state", "field_11406", "state", "f_55417_"), "Ldtc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.RailPlacementHelper#forbidCurves
    static jboolean get_field_forbidCurves(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "isStraight", "field_11408", "forbidCurves", "f_55418_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.RailPlacementHelper#forbidCurves
    static void set_field_forbidCurves(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "isStraight", "field_11408", "forbidCurves", "f_55418_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.RailPlacementHelper#neighbors
    static jobject get_field_neighbors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "connections", "field_11407", "neighbors", "f_55419_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.RailPlacementHelper#neighbors
    static void set_field_neighbors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "connections", "field_11407", "neighbors", "f_55419_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getNeighbors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getConnections", "method_10457", "getNeighbors", "m_55424_"), "()Ljava/util/List;");
    }

    static jobject getNeighbors(const jobject& obj) {
                
       const auto methodID = methodID_getNeighbors();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_computeNeighbors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateConnections", "method_10466", "computeNeighbors", "m_55427_"), "(Ldug;)V");
    }

    static void computeNeighbors(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_computeNeighbors();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateNeighborPositions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "removeSoftConnections", "method_10467", "updateNeighborPositions", "m_55445_"), "()V");
    }

    static void updateNeighborPositions(const jobject& obj) {
                
       const auto methodID = methodID_updateNeighborPositions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isVerticallyNearRail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasRail", "method_10456", "isVerticallyNearRail", "m_55429_"), "(Ljd;)Z");
    }

    static jboolean isVerticallyNearRail(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isVerticallyNearRail();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNeighboringRail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRail", "method_10458", "getNeighboringRail", "m_55438_"), "(Ljd;)Ldlz;");
    }

    static jobject getNeighboringRail(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getNeighboringRail();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isNeighbor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "connectsTo", "method_10464", "isNeighbor", "m_55425_"), "(Ldlz;)Z");
    }

    static jboolean isNeighbor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isNeighbor();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__isNeighbor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "hasConnection", "method_10463", "isNeighbor", "m_55443_"), "(Ljd;)Z");
    }

    static jboolean _isNeighbor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__isNeighbor();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNeighborCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "countPotentialConnections", "method_10460", "getNeighborCount", "m_55435_"), "()I");
    }

    static jint getNeighborCount(const jobject& obj) {
                
       const auto methodID = methodID_getNeighborCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_canConnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canConnectTo", "method_10455", "canConnect", "m_55436_"), "(Ldlz;)Z");
    }

    static jboolean canConnect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canConnect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_computeRailShape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "connectTo", "method_10461", "computeRailShape", "m_55441_"), "(Ldlz;)V");
    }

    static void computeRailShape(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_computeRailShape();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__canConnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "hasNeighborRail", "method_10465", "canConnect", "m_55446_"), "(Ljd;)Z");
    }

    static jboolean _canConnect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__canConnect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "place", "method_10459", "updateBlockState", "m_55431_"), "(ZZLdug;)Ldlz;");
    }

    static jobject updateBlockState(const jobject& obj, const jboolean& arg0, const jboolean& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateBlockState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getState", "method_10462", "getBlockState", "m_55440_"), "()Ldtc;");
    }

    static jobject getBlockState(const jobject& obj) {
                
       const auto methodID = methodID_getBlockState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_RAILPLACEMENTHELPER_HPP