// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_JUKEBOX_JUKEBOXMANAGER_HPP
#define NET_MINECRAFT_BLOCK_JUKEBOX_JUKEBOXMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.jukebox.JukeboxManager
 * Remapped: cuw
 */
namespace JukeboxManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cuw", "net/minecraft/world/item/JukeboxSongPlayer", "net/minecraft/class_9794", "net/minecraft/block/jukebox/JukeboxManager", "net/minecraft/src/C_336461_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.jukebox.JukeboxManager#TICKS_PER_SECOND
    [[maybe_unused]] static jint get_field_TICKS_PER_SECOND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PLAY_EVENT_INTERVAL_TICKS", "field_52032", "TICKS_PER_SECOND", "f_337088_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.jukebox.JukeboxManager#TICKS_PER_SECOND
    [[maybe_unused]] static void set_field_TICKS_PER_SECOND(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PLAY_EVENT_INTERVAL_TICKS", "field_52032", "TICKS_PER_SECOND", "f_337088_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.jukebox.JukeboxManager#ticksSinceSongStarted
    static jlong get_field_ticksSinceSongStarted(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "ticksSinceSongStarted", "field_52033", "ticksSinceSongStarted", "f_337384_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.jukebox.JukeboxManager#ticksSinceSongStarted
    static void set_field_ticksSinceSongStarted(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "ticksSinceSongStarted", "field_52033", "ticksSinceSongStarted", "f_337384_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.jukebox.JukeboxManager#song
    static jobject get_field_song(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "song", "field_52034", "song", "f_336722_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.jukebox.JukeboxManager#song
    static void set_field_song(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "song", "field_52034", "song", "f_336722_"), "Ljm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.jukebox.JukeboxManager#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "blockPos", "field_52035", "pos", "f_336994_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.jukebox.JukeboxManager#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "blockPos", "field_52035", "pos", "f_336994_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.jukebox.JukeboxManager#changeNotifier
    static jobject get_field_changeNotifier(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "onSongChanged", "field_52036", "changeNotifier", "f_336789_"), "Lcuw$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.jukebox.JukeboxManager#changeNotifier
    static void set_field_changeNotifier(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "onSongChanged", "field_52036", "changeNotifier", "f_336789_"), "Lcuw$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_isPlaying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isPlaying", "method_60754", "isPlaying", "m_339846_"), "()Z");
    }

    static jboolean isPlaying(const jobject& obj) {
                
       const auto methodID = methodID_isPlaying();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSong", "method_60759", "getSong", "m_339544_"), "()Lcuv;");
    }

    static jobject getSong(const jobject& obj) {
                
       const auto methodID = methodID_getSong();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTicksSinceSongStarted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getTicksSinceSongStarted", "method_60761", "getTicksSinceSongStarted", "m_338357_"), "()J");
    }

    static jlong getTicksSinceSongStarted(const jobject& obj) {
                
       const auto methodID = methodID_getTicksSinceSongStarted();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_setValues() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSongWithoutPlaying", "method_60758", "setValues", "m_339068_"), "(Ljm;J)V");
    }

    static void setValues(const jobject& obj, const jobject& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_setValues();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_startPlaying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "play", "method_60757", "startPlaying", "m_340018_"), "(Ldcx;Ljm;)V");
    }

    static void startPlaying(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_startPlaying();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_stopPlaying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stop", "method_60755", "stopPlaying", "m_339700_"), "(Ldcx;Ldtc;)V");
    }

    static void stopPlaying(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_stopPlaying();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "tick", "method_60760", "tick", "m_339352_"), "(Ldcx;Ldtc;)V");
    }

    static void tick(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_hasSecondPassed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "shouldEmitJukeboxPlayingEvent", "method_60763", "hasSecondPassed", "m_338795_"), "()Z");
    }

    static jboolean hasSecondPassed(const jobject& obj) {
                
       const auto methodID = methodID_hasSecondPassed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_spawnNoteParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnMusicParticles", "method_60756", "spawnNoteParticles", "m_339036_"), "(Ldcx;Ljd;)V");
    }

    static void spawnNoteParticles(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_spawnNoteParticles();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_JUKEBOX_JUKEBOXMANAGER_HPP