// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_LICHENGROWER$LICHENGROWCHECKER_HPP
#define NET_MINECRAFT_BLOCK_LICHENGROWER$LICHENGROWCHECKER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.LichenGrower$LichenGrowChecker
 * Remapped: dkz$a
 */
namespace LichenGrower$LichenGrowChecker {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dkz$a", "net/minecraft/world/level/block/MultifaceSpreader$DefaultSpreaderConfig", "net/minecraft/class_7118$class_7119", "net/minecraft/block/LichenGrower$LichenGrowChecker", "net/minecraft/src/C_213099_$C_213100_"));
        }
        return cachedClass;
    };

    // getter for protected field net.minecraft.block.LichenGrower$LichenGrowChecker#lichen
    static jobject get_field_lichen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "block", "field_37597", "lichen", "f_221681_"), "Ldky;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.block.LichenGrower$LichenGrowChecker#lichen
    static void set_field_lichen(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "block", "field_37597", "lichen", "f_221681_"), "Ldky;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getStateWithDirection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getStateForPlacement", "method_41459", "getStateWithDirection", "m_214136_"), "(Ldtc;Ldcc;Ljd;Lji;)Ldtc;");
    }

    static jobject getStateWithDirection(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getStateWithDirection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canGrow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stateCanBeReplaced", "method_41458", "canGrow", "m_213938_"), "(Ldcc;Ljd;Ljd;Lji;Ldtc;)Z");
    }

    static jboolean canGrow(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_canGrow();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID__canGrow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canSpreadInto", "method_41457", "canGrow", "m_213973_"), "(Ldcc;Ljd;Ldkz$c;)Z");
    }

    static jboolean _canGrow(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__canGrow();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_LICHENGROWER$LICHENGROWCHECKER_HPP