// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_INFESTEDBLOCK_HPP
#define NET_MINECRAFT_BLOCK_INFESTEDBLOCK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.InfestedBlock
 * Remapped: djx
 */
namespace InfestedBlock {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("djx", "net/minecraft/world/level/block/InfestedBlock", "net/minecraft/class_2384", "net/minecraft/block/InfestedBlock", "net/minecraft/src/C_1817_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.InfestedBlock#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_46373", "CODEC", "f_303003_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.InfestedBlock#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_46373", "CODEC", "f_303003_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.InfestedBlock#regularBlock
    static jobject get_field_regularBlock(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "hostBlock", "field_11178", "regularBlock", "f_54174_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.InfestedBlock#regularBlock
    static void set_field_regularBlock(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "hostBlock", "field_11178", "regularBlock", "f_54174_"), "Ldfy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.block.InfestedBlock#REGULAR_TO_INFESTED_BLOCK
    [[maybe_unused]] static jobject get_field_REGULAR_TO_INFESTED_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BLOCK_BY_HOST_BLOCK", "field_11179", "REGULAR_TO_INFESTED_BLOCK", "f_54175_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.InfestedBlock#REGULAR_TO_INFESTED_BLOCK
    [[maybe_unused]] static void set_field_REGULAR_TO_INFESTED_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BLOCK_BY_HOST_BLOCK", "field_11179", "REGULAR_TO_INFESTED_BLOCK", "f_54175_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.InfestedBlock#REGULAR_TO_INFESTED_STATE
    [[maybe_unused]] static jobject get_field_REGULAR_TO_INFESTED_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HOST_TO_INFESTED_STATES", "field_33564", "REGULAR_TO_INFESTED_STATE", "f_153421_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.InfestedBlock#REGULAR_TO_INFESTED_STATE
    [[maybe_unused]] static void set_field_REGULAR_TO_INFESTED_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HOST_TO_INFESTED_STATES", "field_33564", "REGULAR_TO_INFESTED_STATE", "f_153421_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.InfestedBlock#INFESTED_TO_REGULAR_STATE
    [[maybe_unused]] static jobject get_field_INFESTED_TO_REGULAR_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "INFESTED_TO_HOST_STATES", "field_33565", "INFESTED_TO_REGULAR_STATE", "f_153422_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.InfestedBlock#INFESTED_TO_REGULAR_STATE
    [[maybe_unused]] static void set_field_INFESTED_TO_REGULAR_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "INFESTED_TO_HOST_STATES", "field_33565", "INFESTED_TO_REGULAR_STATE", "f_153422_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "codec", "method_53969", "getCodec", "m_304657_"), "()Lcom/mojang/serialization/MapCodec;");
    }

    static jobject getCodec(const jobject& obj) {
                
       const auto methodID = methodID_getCodec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRegularBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getHostBlock", "method_10271", "getRegularBlock", "m_54192_"), "()Ldfy;");
    }

    static jobject getRegularBlock(const jobject& obj) {
                
       const auto methodID = methodID_getRegularBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInfestable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("m", "isCompatibleHostBlock", "method_10269", "isInfestable", "m_54195_"), "(Ldtc;)Z");
    }

    static jboolean isInfestable(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isInfestable();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_spawnSilverfish() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnInfestation", "method_24797", "spawnSilverfish", "m_54180_"), "(Laqu;Ljd;)V");
    }

    static void spawnSilverfish(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_spawnSilverfish();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onStacksDropped() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnAfterBreak", "method_9565", "onStacksDropped", "m_213646_"), "(Ldtc;Laqu;Ljd;Lcuq;Z)V");
    }

    static void onStacksDropped(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jboolean& arg4) {
                
       const auto methodID = methodID_onStacksDropped();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_fromRegularState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("n", "infestedStateByHost", "method_36366", "fromRegularState", "m_153430_"), "(Ldtc;)Ldtc;");
    }

    static jobject fromRegularState(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromRegularState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toRegularState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "hostStateByInfested", "method_10270", "toRegularState", "m_153432_"), "(Ldtc;)Ldtc;");
    }

    static jobject toRegularState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toRegularState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_copyProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getNewStateWithProperties", "method_36363", "copyProperties", "m_153423_"), "(Ljava/util/Map;Ldtc;Ljava/util/function/Supplier;)Ldtc;");
    }

    static jobject copyProperties(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_copyProperties();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_INFESTEDBLOCK_HPP