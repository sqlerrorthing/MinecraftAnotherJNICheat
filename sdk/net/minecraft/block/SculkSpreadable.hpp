// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_SCULKSPREADABLE_HPP
#define NET_MINECRAFT_BLOCK_SCULKSPREADABLE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.SculkSpreadable
 * Remapped: dmp
 */
namespace SculkSpreadable {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dmp", "net/minecraft/world/level/block/SculkBehaviour", "net/minecraft/class_7124", "net/minecraft/block/SculkSpreadable", "net/minecraft/src/C_213109_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.SculkSpreadable#VEIN_ONLY_SPREADER
    [[maybe_unused]] static jobject get_field_VEIN_ONLY_SPREADER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v_", "DEFAULT", "field_37602", "VEIN_ONLY_SPREADER", "f_222023_"), "Ldmp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.SculkSpreadable#VEIN_ONLY_SPREADER
    [[maybe_unused]] static void set_field_VEIN_ONLY_SPREADER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v_", "DEFAULT", "field_37602", "VEIN_ONLY_SPREADER", "f_222023_"), "Ldmp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSculkSpreadDelay", "method_41467", "getUpdate", "m_222025_"), "()B");
    }

    static jbyte getUpdate(const jobject& obj) {
                
       const auto methodID = methodID_getUpdate();
       return MinecraftSDK::env->CallByteMethod(obj, methodID);
    };
    
    static jmethodID methodID_spreadAtSamePosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onDischarged", "method_41468", "spreadAtSamePosition", "m_213805_"), "(Ldcx;Ldtc;Ljd;Layw;)V");
    }

    static void spreadAtSamePosition(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_spreadAtSamePosition();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_method_41470() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "depositCharge", "method_41470", "method_41470", "m_222030_"), "(Ldcx;Ljd;Layw;)Z");
    }

    static jboolean method_41470(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_method_41470();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_spread() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "attemptSpreadVein", "method_41469", "spread", "m_214094_"), "(Ldcx;Ljd;Ldtc;Ljava/util/Collection;Z)Z");
    }

    static jboolean spread(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jboolean& arg4) {
                
       const auto methodID = methodID_spread();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_shouldConvertToSpreadable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "canChangeBlockStateOnSpread", "method_41472", "shouldConvertToSpreadable", "m_213999_"), "()Z");
    }

    static jboolean shouldConvertToSpreadable(const jobject& obj) {
                
       const auto methodID = methodID_shouldConvertToSpreadable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDecay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j_", "updateDecayDelay", "method_41473", "getDecay", "m_213670_"), "(I)I");
    }

    static jint getDecay(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getDecay();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__spread() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "attemptUseCharge", "method_41471", "spread", "m_213628_"), "(Ldmu$a;Ldcx;Ljd;Layw;Ldmu;Z)I");
    }

    static jint _spread(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID__spread();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_SCULKSPREADABLE_HPP