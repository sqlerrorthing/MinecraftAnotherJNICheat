// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_SCULKVEINBLOCK$SCULKVEINGROWCHECKER_HPP
#define NET_MINECRAFT_BLOCK_SCULKVEINBLOCK$SCULKVEINGROWCHECKER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.SculkVeinBlock$SculkVeinGrowChecker
 * Remapped: dmv$a
 */
namespace SculkVeinBlock$SculkVeinGrowChecker {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dmv$a", "net/minecraft/world/level/block/SculkVeinBlock$SculkVeinSpreaderConfig", "net/minecraft/class_7130$class_7131", "net/minecraft/block/SculkVeinBlock$SculkVeinGrowChecker", "net/minecraft/src/C_213116_$C_213117_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.block.SculkVeinBlock$SculkVeinGrowChecker#growTypes
    static jobject get_field_growTypes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "spreadTypes", "field_37635", "growTypes", "f_222399_"), "[Ldkz$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.SculkVeinBlock$SculkVeinGrowChecker#growTypes
    static void set_field_growTypes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "spreadTypes", "field_37635", "growTypes", "f_222399_"), "[Ldkz$e;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_canGrow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stateCanBeReplaced", "method_41458", "canGrow", "m_213938_"), "(Ldcc;Ljd;Ljd;Lji;Ldtc;)Z");
    }

    static jboolean canGrow(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_canGrow();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getGrowTypes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpreadTypes", "method_41460", "getGrowTypes", "m_214109_"), "()[Ldkz$e;");
    }

    static jobject getGrowTypes(const jobject& obj) {
                
       const auto methodID = methodID_getGrowTypes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__canGrow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isOtherBlockValidAsSource", "method_41462", "canGrow", "m_214107_"), "(Ldtc;)Z");
    }

    static jboolean _canGrow(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__canGrow();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_SCULKVEINBLOCK$SCULKVEINGROWCHECKER_HPP