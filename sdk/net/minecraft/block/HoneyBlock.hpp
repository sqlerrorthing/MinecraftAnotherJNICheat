// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_HONEYBLOCK_HPP
#define NET_MINECRAFT_BLOCK_HONEYBLOCK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.HoneyBlock
 * Remapped: djs
 */
namespace HoneyBlock {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("djs", "net/minecraft/world/level/block/HoneyBlock", "net/minecraft/class_4622", "net/minecraft/block/HoneyBlock", "net/minecraft/src/C_1811_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.HoneyBlock#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_46369", "CODEC", "f_303767_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.HoneyBlock#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_46369", "CODEC", "f_303767_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.HoneyBlock#field_31101
    [[maybe_unused]] static jdouble get_field_field_31101() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST", "field_31101", "field_31101", "f_153367_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.HoneyBlock#field_31101
    [[maybe_unused]] static void set_field_field_31101(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST", "field_31101", "field_31101", "f_153367_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.HoneyBlock#field_31102
    [[maybe_unused]] static jdouble get_field_field_31102() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING", "field_31102", "field_31102", "f_153368_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.HoneyBlock#field_31102
    [[maybe_unused]] static void set_field_field_31102(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING", "field_31102", "field_31102", "f_153368_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.HoneyBlock#field_31103
    [[maybe_unused]] static jdouble get_field_field_31103() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "THROTTLE_SLIDE_SPEED_TO", "field_31103", "field_31103", "f_153369_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.HoneyBlock#field_31103
    [[maybe_unused]] static void set_field_field_31103(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "THROTTLE_SLIDE_SPEED_TO", "field_31103", "field_31103", "f_153369_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.HoneyBlock#TICKS_PER_SECOND
    [[maybe_unused]] static jint get_field_TICKS_PER_SECOND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SLIDE_ADVANCEMENT_CHECK_INTERVAL", "field_31104", "TICKS_PER_SECOND", "f_153370_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.HoneyBlock#TICKS_PER_SECOND
    [[maybe_unused]] static void set_field_TICKS_PER_SECOND(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SLIDE_ADVANCEMENT_CHECK_INTERVAL", "field_31104", "TICKS_PER_SECOND", "f_153370_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.block.HoneyBlock#SHAPE
    [[maybe_unused]] static jobject get_field_SHAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SHAPE", "field_21213", "SHAPE", "f_53982_"), "Lexv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.block.HoneyBlock#SHAPE
    [[maybe_unused]] static void set_field_SHAPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SHAPE", "field_21213", "SHAPE", "f_53982_"), "Lexv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "codec", "method_53969", "getCodec", "m_304657_"), "()Lcom/mojang/serialization/MapCodec;");
    }

    static jobject getCodec(const jobject& obj) {
                
       const auto methodID = methodID_getCodec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasHoneyBlockEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "doesEntityDoHoneyBlockSlideEffects", "method_24179", "hasHoneyBlockEffects", "m_54012_"), "(Lbsr;)Z");
    }

    static jboolean hasHoneyBlockEffects(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasHoneyBlockEffects();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getCollisionShape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getCollisionShape", "method_9549", "getCollisionShape", "m_5939_"), "(Ldtc;Ldcc;Ljd;Lexh;)Lexv;");
    }

    static jobject getCollisionShape(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getCollisionShape();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onLandedUpon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fallOn", "method_9554", "onLandedUpon", "m_142072_"), "(Ldcw;Ldtc;Ljd;Lbsr;F)V");
    }

    static void onLandedUpon(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jfloat& arg4) {
                
       const auto methodID = methodID_onLandedUpon();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_onEntityCollision() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "entityInside", "method_9548", "onEntityCollision", "m_7892_"), "(Ldtc;Ldcw;Ljd;Lbsr;)V");
    }

    static void onEntityCollision(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_onEntityCollision();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isSliding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isSlidingDown", "method_23356", "isSliding", "m_54007_"), "(Ljd;Lbsr;)Z");
    }

    static jboolean isSliding(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isSliding();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_triggerAdvancement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "maybeDoSlideAchievement", "method_24176", "triggerAdvancement", "m_53991_"), "(Lbsr;Ljd;)V");
    }

    static void triggerAdvancement(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_triggerAdvancement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateSlidingVelocity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "doSlideMovement", "method_24180", "updateSlidingVelocity", "m_54019_"), "(Lbsr;)V");
    }

    static void updateSlidingVelocity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateSlidingVelocity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addCollisionEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "maybeDoSlideEffects", "method_24177", "addCollisionEffects", "m_53994_"), "(Ldcw;Lbsr;)V");
    }

    static void addCollisionEffects(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addCollisionEffects();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addRegularParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "showSlideParticles", "method_24175", "addRegularParticles", "m_53986_"), "(Lbsr;)V");
    }

    static void addRegularParticles(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addRegularParticles();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addRichParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "showJumpParticles", "method_24178", "addRichParticles", "m_54010_"), "(Lbsr;)V");
    }

    static void addRichParticles(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addRichParticles();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "showParticles", "method_23355", "addParticles", "m_53988_"), "(Lbsr;I)V");
    }

    static void addParticles(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_addParticles();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_HONEYBLOCK_HPP