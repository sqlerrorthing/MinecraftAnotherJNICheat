// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_BLOCKS_HPP
#define NET_MINECRAFT_BLOCK_BLOCKS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.Blocks
 * Remapped: dga
 */
namespace Blocks {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dga", "net/minecraft/world/level/block/Blocks", "net/minecraft/class_2246", "net/minecraft/block/Blocks", "net/minecraft/src/C_1710_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.Blocks#SHULKER_BOX_SUFFOCATES_PREDICATE
    [[maybe_unused]] static jobject get_field_SHULKER_BOX_SUFFOCATES_PREDICATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tu", "NOT_CLOSED_SHULKER", "field_46288", "SHULKER_BOX_SUFFOCATES_PREDICATE", "f_303153_"), "Ldtb$f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.Blocks#SHULKER_BOX_SUFFOCATES_PREDICATE
    [[maybe_unused]] static void set_field_SHULKER_BOX_SUFFOCATES_PREDICATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tu", "NOT_CLOSED_SHULKER", "field_46288", "SHULKER_BOX_SUFFOCATES_PREDICATE", "f_303153_"), "Ldtb$f;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#AIR
    [[maybe_unused]] static jobject get_field_AIR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "AIR", "field_10124", "AIR", "f_50016_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#AIR
    [[maybe_unused]] static void set_field_AIR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "AIR", "field_10124", "AIR", "f_50016_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STONE
    [[maybe_unused]] static jobject get_field_STONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STONE", "field_10340", "STONE", "f_50069_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STONE
    [[maybe_unused]] static void set_field_STONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STONE", "field_10340", "STONE", "f_50069_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRANITE
    [[maybe_unused]] static jobject get_field_GRANITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "GRANITE", "field_10474", "GRANITE", "f_50122_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRANITE
    [[maybe_unused]] static void set_field_GRANITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "GRANITE", "field_10474", "GRANITE", "f_50122_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_GRANITE
    [[maybe_unused]] static jobject get_field_POLISHED_GRANITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "POLISHED_GRANITE", "field_10289", "POLISHED_GRANITE", "f_50175_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_GRANITE
    [[maybe_unused]] static void set_field_POLISHED_GRANITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "POLISHED_GRANITE", "field_10289", "POLISHED_GRANITE", "f_50175_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DIORITE
    [[maybe_unused]] static jobject get_field_DIORITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DIORITE", "field_10508", "DIORITE", "f_50228_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DIORITE
    [[maybe_unused]] static void set_field_DIORITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DIORITE", "field_10508", "DIORITE", "f_50228_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_DIORITE
    [[maybe_unused]] static jobject get_field_POLISHED_DIORITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "POLISHED_DIORITE", "field_10346", "POLISHED_DIORITE", "f_50281_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_DIORITE
    [[maybe_unused]] static void set_field_POLISHED_DIORITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "POLISHED_DIORITE", "field_10346", "POLISHED_DIORITE", "f_50281_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ANDESITE
    [[maybe_unused]] static jobject get_field_ANDESITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ANDESITE", "field_10115", "ANDESITE", "f_50334_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ANDESITE
    [[maybe_unused]] static void set_field_ANDESITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ANDESITE", "field_10115", "ANDESITE", "f_50334_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_ANDESITE
    [[maybe_unused]] static jobject get_field_POLISHED_ANDESITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "POLISHED_ANDESITE", "field_10093", "POLISHED_ANDESITE", "f_50387_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_ANDESITE
    [[maybe_unused]] static void set_field_POLISHED_ANDESITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "POLISHED_ANDESITE", "field_10093", "POLISHED_ANDESITE", "f_50387_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRASS_BLOCK
    [[maybe_unused]] static jobject get_field_GRASS_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "GRASS_BLOCK", "field_10219", "GRASS_BLOCK", "f_50440_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRASS_BLOCK
    [[maybe_unused]] static void set_field_GRASS_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "GRASS_BLOCK", "field_10219", "GRASS_BLOCK", "f_50440_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DIRT
    [[maybe_unused]] static jobject get_field_DIRT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DIRT", "field_10566", "DIRT", "f_50493_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DIRT
    [[maybe_unused]] static void set_field_DIRT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DIRT", "field_10566", "DIRT", "f_50493_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COARSE_DIRT
    [[maybe_unused]] static jobject get_field_COARSE_DIRT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "COARSE_DIRT", "field_10253", "COARSE_DIRT", "f_50546_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COARSE_DIRT
    [[maybe_unused]] static void set_field_COARSE_DIRT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "COARSE_DIRT", "field_10253", "COARSE_DIRT", "f_50546_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PODZOL
    [[maybe_unused]] static jobject get_field_PODZOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PODZOL", "field_10520", "PODZOL", "f_50599_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PODZOL
    [[maybe_unused]] static void set_field_PODZOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PODZOL", "field_10520", "PODZOL", "f_50599_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COBBLESTONE
    [[maybe_unused]] static jobject get_field_COBBLESTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "COBBLESTONE", "field_10445", "COBBLESTONE", "f_50652_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COBBLESTONE
    [[maybe_unused]] static void set_field_COBBLESTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "COBBLESTONE", "field_10445", "COBBLESTONE", "f_50652_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_PLANKS
    [[maybe_unused]] static jobject get_field_OAK_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "OAK_PLANKS", "field_10161", "OAK_PLANKS", "f_50705_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_PLANKS
    [[maybe_unused]] static void set_field_OAK_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "OAK_PLANKS", "field_10161", "OAK_PLANKS", "f_50705_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_PLANKS
    [[maybe_unused]] static jobject get_field_SPRUCE_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SPRUCE_PLANKS", "field_9975", "SPRUCE_PLANKS", "f_50741_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_PLANKS
    [[maybe_unused]] static void set_field_SPRUCE_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SPRUCE_PLANKS", "field_9975", "SPRUCE_PLANKS", "f_50741_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_PLANKS
    [[maybe_unused]] static jobject get_field_BIRCH_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "BIRCH_PLANKS", "field_10148", "BIRCH_PLANKS", "f_50742_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_PLANKS
    [[maybe_unused]] static void set_field_BIRCH_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "BIRCH_PLANKS", "field_10148", "BIRCH_PLANKS", "f_50742_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_PLANKS
    [[maybe_unused]] static jobject get_field_JUNGLE_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "JUNGLE_PLANKS", "field_10334", "JUNGLE_PLANKS", "f_50743_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_PLANKS
    [[maybe_unused]] static void set_field_JUNGLE_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "JUNGLE_PLANKS", "field_10334", "JUNGLE_PLANKS", "f_50743_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_PLANKS
    [[maybe_unused]] static jobject get_field_ACACIA_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "ACACIA_PLANKS", "field_10218", "ACACIA_PLANKS", "f_50744_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_PLANKS
    [[maybe_unused]] static void set_field_ACACIA_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "ACACIA_PLANKS", "field_10218", "ACACIA_PLANKS", "f_50744_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_PLANKS
    [[maybe_unused]] static jobject get_field_CHERRY_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "CHERRY_PLANKS", "field_42751", "CHERRY_PLANKS", "f_271304_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_PLANKS
    [[maybe_unused]] static void set_field_CHERRY_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "CHERRY_PLANKS", "field_42751", "CHERRY_PLANKS", "f_271304_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_PLANKS
    [[maybe_unused]] static jobject get_field_DARK_OAK_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "DARK_OAK_PLANKS", "field_10075", "DARK_OAK_PLANKS", "f_50745_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_PLANKS
    [[maybe_unused]] static void set_field_DARK_OAK_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "DARK_OAK_PLANKS", "field_10075", "DARK_OAK_PLANKS", "f_50745_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_PLANKS
    [[maybe_unused]] static jobject get_field_MANGROVE_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "MANGROVE_PLANKS", "field_37577", "MANGROVE_PLANKS", "f_220865_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_PLANKS
    [[maybe_unused]] static void set_field_MANGROVE_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "MANGROVE_PLANKS", "field_37577", "MANGROVE_PLANKS", "f_220865_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_PLANKS
    [[maybe_unused]] static jobject get_field_BAMBOO_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "BAMBOO_PLANKS", "field_40294", "BAMBOO_PLANKS", "f_244477_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_PLANKS
    [[maybe_unused]] static void set_field_BAMBOO_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "BAMBOO_PLANKS", "field_40294", "BAMBOO_PLANKS", "f_244477_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_MOSAIC
    [[maybe_unused]] static jobject get_field_BAMBOO_MOSAIC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "BAMBOO_MOSAIC", "field_40295", "BAMBOO_MOSAIC", "f_244489_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_MOSAIC
    [[maybe_unused]] static void set_field_BAMBOO_MOSAIC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "BAMBOO_MOSAIC", "field_40295", "BAMBOO_MOSAIC", "f_244489_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_SAPLING
    [[maybe_unused]] static jobject get_field_OAK_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "OAK_SAPLING", "field_10394", "OAK_SAPLING", "f_50746_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_SAPLING
    [[maybe_unused]] static void set_field_OAK_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "OAK_SAPLING", "field_10394", "OAK_SAPLING", "f_50746_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_SAPLING
    [[maybe_unused]] static jobject get_field_SPRUCE_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SPRUCE_SAPLING", "field_10217", "SPRUCE_SAPLING", "f_50747_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_SAPLING
    [[maybe_unused]] static void set_field_SPRUCE_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SPRUCE_SAPLING", "field_10217", "SPRUCE_SAPLING", "f_50747_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_SAPLING
    [[maybe_unused]] static jobject get_field_BIRCH_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "BIRCH_SAPLING", "field_10575", "BIRCH_SAPLING", "f_50748_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_SAPLING
    [[maybe_unused]] static void set_field_BIRCH_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "BIRCH_SAPLING", "field_10575", "BIRCH_SAPLING", "f_50748_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_SAPLING
    [[maybe_unused]] static jobject get_field_JUNGLE_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "JUNGLE_SAPLING", "field_10276", "JUNGLE_SAPLING", "f_50749_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_SAPLING
    [[maybe_unused]] static void set_field_JUNGLE_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "JUNGLE_SAPLING", "field_10276", "JUNGLE_SAPLING", "f_50749_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_SAPLING
    [[maybe_unused]] static jobject get_field_ACACIA_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "ACACIA_SAPLING", "field_10385", "ACACIA_SAPLING", "f_50750_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_SAPLING
    [[maybe_unused]] static void set_field_ACACIA_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "ACACIA_SAPLING", "field_10385", "ACACIA_SAPLING", "f_50750_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_SAPLING
    [[maybe_unused]] static jobject get_field_CHERRY_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "CHERRY_SAPLING", "field_42727", "CHERRY_SAPLING", "f_271334_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_SAPLING
    [[maybe_unused]] static void set_field_CHERRY_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "CHERRY_SAPLING", "field_42727", "CHERRY_SAPLING", "f_271334_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_SAPLING
    [[maybe_unused]] static jobject get_field_DARK_OAK_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "DARK_OAK_SAPLING", "field_10160", "DARK_OAK_SAPLING", "f_50751_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_SAPLING
    [[maybe_unused]] static void set_field_DARK_OAK_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "DARK_OAK_SAPLING", "field_10160", "DARK_OAK_SAPLING", "f_50751_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_PROPAGULE
    [[maybe_unused]] static jobject get_field_MANGROVE_PROPAGULE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "MANGROVE_PROPAGULE", "field_37544", "MANGROVE_PROPAGULE", "f_220831_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_PROPAGULE
    [[maybe_unused]] static void set_field_MANGROVE_PROPAGULE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "MANGROVE_PROPAGULE", "field_37544", "MANGROVE_PROPAGULE", "f_220831_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BEDROCK
    [[maybe_unused]] static jobject get_field_BEDROCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "BEDROCK", "field_9987", "BEDROCK", "f_50752_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BEDROCK
    [[maybe_unused]] static void set_field_BEDROCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "BEDROCK", "field_9987", "BEDROCK", "f_50752_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WATER
    [[maybe_unused]] static jobject get_field_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "WATER", "field_10382", "WATER", "f_49990_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WATER
    [[maybe_unused]] static void set_field_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "WATER", "field_10382", "WATER", "f_49990_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LAVA
    [[maybe_unused]] static jobject get_field_LAVA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "LAVA", "field_10164", "LAVA", "f_49991_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LAVA
    [[maybe_unused]] static void set_field_LAVA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "LAVA", "field_10164", "LAVA", "f_49991_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SAND
    [[maybe_unused]] static jobject get_field_SAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SAND", "field_10102", "SAND", "f_49992_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SAND
    [[maybe_unused]] static void set_field_SAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SAND", "field_10102", "SAND", "f_49992_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SUSPICIOUS_SAND
    [[maybe_unused]] static jobject get_field_SUSPICIOUS_SAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SUSPICIOUS_SAND", "field_42728", "SUSPICIOUS_SAND", "f_271439_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SUSPICIOUS_SAND
    [[maybe_unused]] static void set_field_SUSPICIOUS_SAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SUSPICIOUS_SAND", "field_42728", "SUSPICIOUS_SAND", "f_271439_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_SAND
    [[maybe_unused]] static jobject get_field_RED_SAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "RED_SAND", "field_10534", "RED_SAND", "f_49993_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_SAND
    [[maybe_unused]] static void set_field_RED_SAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "RED_SAND", "field_10534", "RED_SAND", "f_49993_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAVEL
    [[maybe_unused]] static jobject get_field_GRAVEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "GRAVEL", "field_10255", "GRAVEL", "f_49994_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAVEL
    [[maybe_unused]] static void set_field_GRAVEL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "GRAVEL", "field_10255", "GRAVEL", "f_49994_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SUSPICIOUS_GRAVEL
    [[maybe_unused]] static jobject get_field_SUSPICIOUS_GRAVEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SUSPICIOUS_GRAVEL", "field_43227", "SUSPICIOUS_GRAVEL", "f_276445_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SUSPICIOUS_GRAVEL
    [[maybe_unused]] static void set_field_SUSPICIOUS_GRAVEL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SUSPICIOUS_GRAVEL", "field_43227", "SUSPICIOUS_GRAVEL", "f_276445_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GOLD_ORE
    [[maybe_unused]] static jobject get_field_GOLD_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "GOLD_ORE", "field_10571", "GOLD_ORE", "f_49995_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GOLD_ORE
    [[maybe_unused]] static void set_field_GOLD_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "GOLD_ORE", "field_10571", "GOLD_ORE", "f_49995_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_GOLD_ORE
    [[maybe_unused]] static jobject get_field_DEEPSLATE_GOLD_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "DEEPSLATE_GOLD_ORE", "field_29026", "DEEPSLATE_GOLD_ORE", "f_152467_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_GOLD_ORE
    [[maybe_unused]] static void set_field_DEEPSLATE_GOLD_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "DEEPSLATE_GOLD_ORE", "field_29026", "DEEPSLATE_GOLD_ORE", "f_152467_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#IRON_ORE
    [[maybe_unused]] static jobject get_field_IRON_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "IRON_ORE", "field_10212", "IRON_ORE", "f_49996_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#IRON_ORE
    [[maybe_unused]] static void set_field_IRON_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "IRON_ORE", "field_10212", "IRON_ORE", "f_49996_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_IRON_ORE
    [[maybe_unused]] static jobject get_field_DEEPSLATE_IRON_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "DEEPSLATE_IRON_ORE", "field_29027", "DEEPSLATE_IRON_ORE", "f_152468_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_IRON_ORE
    [[maybe_unused]] static void set_field_DEEPSLATE_IRON_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "DEEPSLATE_IRON_ORE", "field_29027", "DEEPSLATE_IRON_ORE", "f_152468_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COAL_ORE
    [[maybe_unused]] static jobject get_field_COAL_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "COAL_ORE", "field_10418", "COAL_ORE", "f_49997_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COAL_ORE
    [[maybe_unused]] static void set_field_COAL_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "COAL_ORE", "field_10418", "COAL_ORE", "f_49997_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_COAL_ORE
    [[maybe_unused]] static jobject get_field_DEEPSLATE_COAL_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "DEEPSLATE_COAL_ORE", "field_29219", "DEEPSLATE_COAL_ORE", "f_152469_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_COAL_ORE
    [[maybe_unused]] static void set_field_DEEPSLATE_COAL_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "DEEPSLATE_COAL_ORE", "field_29219", "DEEPSLATE_COAL_ORE", "f_152469_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHER_GOLD_ORE
    [[maybe_unused]] static jobject get_field_NETHER_GOLD_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "NETHER_GOLD_ORE", "field_23077", "NETHER_GOLD_ORE", "f_49998_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHER_GOLD_ORE
    [[maybe_unused]] static void set_field_NETHER_GOLD_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "NETHER_GOLD_ORE", "field_23077", "NETHER_GOLD_ORE", "f_49998_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_LOG
    [[maybe_unused]] static jobject get_field_OAK_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "OAK_LOG", "field_10431", "OAK_LOG", "f_49999_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_LOG
    [[maybe_unused]] static void set_field_OAK_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "OAK_LOG", "field_10431", "OAK_LOG", "f_49999_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_LOG
    [[maybe_unused]] static jobject get_field_SPRUCE_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "SPRUCE_LOG", "field_10037", "SPRUCE_LOG", "f_50000_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_LOG
    [[maybe_unused]] static void set_field_SPRUCE_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "SPRUCE_LOG", "field_10037", "SPRUCE_LOG", "f_50000_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_LOG
    [[maybe_unused]] static jobject get_field_BIRCH_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "BIRCH_LOG", "field_10511", "BIRCH_LOG", "f_50001_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_LOG
    [[maybe_unused]] static void set_field_BIRCH_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "BIRCH_LOG", "field_10511", "BIRCH_LOG", "f_50001_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_LOG
    [[maybe_unused]] static jobject get_field_JUNGLE_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "JUNGLE_LOG", "field_10306", "JUNGLE_LOG", "f_50002_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_LOG
    [[maybe_unused]] static void set_field_JUNGLE_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "JUNGLE_LOG", "field_10306", "JUNGLE_LOG", "f_50002_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_LOG
    [[maybe_unused]] static jobject get_field_ACACIA_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "ACACIA_LOG", "field_10533", "ACACIA_LOG", "f_50003_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_LOG
    [[maybe_unused]] static void set_field_ACACIA_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "ACACIA_LOG", "field_10533", "ACACIA_LOG", "f_50003_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_LOG
    [[maybe_unused]] static jobject get_field_CHERRY_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "CHERRY_LOG", "field_42729", "CHERRY_LOG", "f_271170_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_LOG
    [[maybe_unused]] static void set_field_CHERRY_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "CHERRY_LOG", "field_42729", "CHERRY_LOG", "f_271170_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_LOG
    [[maybe_unused]] static jobject get_field_DARK_OAK_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "DARK_OAK_LOG", "field_10010", "DARK_OAK_LOG", "f_50004_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_LOG
    [[maybe_unused]] static void set_field_DARK_OAK_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "DARK_OAK_LOG", "field_10010", "DARK_OAK_LOG", "f_50004_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_LOG
    [[maybe_unused]] static jobject get_field_MANGROVE_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "MANGROVE_LOG", "field_37545", "MANGROVE_LOG", "f_220832_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_LOG
    [[maybe_unused]] static void set_field_MANGROVE_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "MANGROVE_LOG", "field_37545", "MANGROVE_LOG", "f_220832_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_ROOTS
    [[maybe_unused]] static jobject get_field_MANGROVE_ROOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "MANGROVE_ROOTS", "field_37546", "MANGROVE_ROOTS", "f_220833_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_ROOTS
    [[maybe_unused]] static void set_field_MANGROVE_ROOTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "MANGROVE_ROOTS", "field_37546", "MANGROVE_ROOTS", "f_220833_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MUDDY_MANGROVE_ROOTS
    [[maybe_unused]] static jobject get_field_MUDDY_MANGROVE_ROOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "MUDDY_MANGROVE_ROOTS", "field_37547", "MUDDY_MANGROVE_ROOTS", "f_220834_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MUDDY_MANGROVE_ROOTS
    [[maybe_unused]] static void set_field_MUDDY_MANGROVE_ROOTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "MUDDY_MANGROVE_ROOTS", "field_37547", "MUDDY_MANGROVE_ROOTS", "f_220834_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_BLOCK
    [[maybe_unused]] static jobject get_field_BAMBOO_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "BAMBOO_BLOCK", "field_41072", "BAMBOO_BLOCK", "f_256831_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_BLOCK
    [[maybe_unused]] static void set_field_BAMBOO_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "BAMBOO_BLOCK", "field_41072", "BAMBOO_BLOCK", "f_256831_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_SPRUCE_LOG
    [[maybe_unused]] static jobject get_field_STRIPPED_SPRUCE_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "STRIPPED_SPRUCE_LOG", "field_10436", "STRIPPED_SPRUCE_LOG", "f_50005_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_SPRUCE_LOG
    [[maybe_unused]] static void set_field_STRIPPED_SPRUCE_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "STRIPPED_SPRUCE_LOG", "field_10436", "STRIPPED_SPRUCE_LOG", "f_50005_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_BIRCH_LOG
    [[maybe_unused]] static jobject get_field_STRIPPED_BIRCH_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "STRIPPED_BIRCH_LOG", "field_10366", "STRIPPED_BIRCH_LOG", "f_50006_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_BIRCH_LOG
    [[maybe_unused]] static void set_field_STRIPPED_BIRCH_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "STRIPPED_BIRCH_LOG", "field_10366", "STRIPPED_BIRCH_LOG", "f_50006_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_JUNGLE_LOG
    [[maybe_unused]] static jobject get_field_STRIPPED_JUNGLE_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "STRIPPED_JUNGLE_LOG", "field_10254", "STRIPPED_JUNGLE_LOG", "f_50007_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_JUNGLE_LOG
    [[maybe_unused]] static void set_field_STRIPPED_JUNGLE_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "STRIPPED_JUNGLE_LOG", "field_10254", "STRIPPED_JUNGLE_LOG", "f_50007_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_ACACIA_LOG
    [[maybe_unused]] static jobject get_field_STRIPPED_ACACIA_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "STRIPPED_ACACIA_LOG", "field_10622", "STRIPPED_ACACIA_LOG", "f_50008_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_ACACIA_LOG
    [[maybe_unused]] static void set_field_STRIPPED_ACACIA_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "STRIPPED_ACACIA_LOG", "field_10622", "STRIPPED_ACACIA_LOG", "f_50008_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_CHERRY_LOG
    [[maybe_unused]] static jobject get_field_STRIPPED_CHERRY_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "STRIPPED_CHERRY_LOG", "field_42732", "STRIPPED_CHERRY_LOG", "f_271326_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_CHERRY_LOG
    [[maybe_unused]] static void set_field_STRIPPED_CHERRY_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "STRIPPED_CHERRY_LOG", "field_42732", "STRIPPED_CHERRY_LOG", "f_271326_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_DARK_OAK_LOG
    [[maybe_unused]] static jobject get_field_STRIPPED_DARK_OAK_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "STRIPPED_DARK_OAK_LOG", "field_10244", "STRIPPED_DARK_OAK_LOG", "f_50009_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_DARK_OAK_LOG
    [[maybe_unused]] static void set_field_STRIPPED_DARK_OAK_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "STRIPPED_DARK_OAK_LOG", "field_10244", "STRIPPED_DARK_OAK_LOG", "f_50009_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_OAK_LOG
    [[maybe_unused]] static jobject get_field_STRIPPED_OAK_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "STRIPPED_OAK_LOG", "field_10519", "STRIPPED_OAK_LOG", "f_50010_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_OAK_LOG
    [[maybe_unused]] static void set_field_STRIPPED_OAK_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "STRIPPED_OAK_LOG", "field_10519", "STRIPPED_OAK_LOG", "f_50010_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_MANGROVE_LOG
    [[maybe_unused]] static jobject get_field_STRIPPED_MANGROVE_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "STRIPPED_MANGROVE_LOG", "field_37548", "STRIPPED_MANGROVE_LOG", "f_220835_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_MANGROVE_LOG
    [[maybe_unused]] static void set_field_STRIPPED_MANGROVE_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "STRIPPED_MANGROVE_LOG", "field_37548", "STRIPPED_MANGROVE_LOG", "f_220835_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_BAMBOO_BLOCK
    [[maybe_unused]] static jobject get_field_STRIPPED_BAMBOO_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "STRIPPED_BAMBOO_BLOCK", "field_41073", "STRIPPED_BAMBOO_BLOCK", "f_256740_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_BAMBOO_BLOCK
    [[maybe_unused]] static void set_field_STRIPPED_BAMBOO_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "STRIPPED_BAMBOO_BLOCK", "field_41073", "STRIPPED_BAMBOO_BLOCK", "f_256740_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_WOOD
    [[maybe_unused]] static jobject get_field_OAK_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "OAK_WOOD", "field_10126", "OAK_WOOD", "f_50011_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_WOOD
    [[maybe_unused]] static void set_field_OAK_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "OAK_WOOD", "field_10126", "OAK_WOOD", "f_50011_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_WOOD
    [[maybe_unused]] static jobject get_field_SPRUCE_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "SPRUCE_WOOD", "field_10155", "SPRUCE_WOOD", "f_50012_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_WOOD
    [[maybe_unused]] static void set_field_SPRUCE_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "SPRUCE_WOOD", "field_10155", "SPRUCE_WOOD", "f_50012_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_WOOD
    [[maybe_unused]] static jobject get_field_BIRCH_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "BIRCH_WOOD", "field_10307", "BIRCH_WOOD", "f_50013_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_WOOD
    [[maybe_unused]] static void set_field_BIRCH_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "BIRCH_WOOD", "field_10307", "BIRCH_WOOD", "f_50013_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_WOOD
    [[maybe_unused]] static jobject get_field_JUNGLE_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "JUNGLE_WOOD", "field_10303", "JUNGLE_WOOD", "f_50014_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_WOOD
    [[maybe_unused]] static void set_field_JUNGLE_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "JUNGLE_WOOD", "field_10303", "JUNGLE_WOOD", "f_50014_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_WOOD
    [[maybe_unused]] static jobject get_field_ACACIA_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "ACACIA_WOOD", "field_9999", "ACACIA_WOOD", "f_50015_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_WOOD
    [[maybe_unused]] static void set_field_ACACIA_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "ACACIA_WOOD", "field_9999", "ACACIA_WOOD", "f_50015_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_WOOD
    [[maybe_unused]] static jobject get_field_CHERRY_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "CHERRY_WOOD", "field_42733", "CHERRY_WOOD", "f_271348_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_WOOD
    [[maybe_unused]] static void set_field_CHERRY_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "CHERRY_WOOD", "field_42733", "CHERRY_WOOD", "f_271348_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_WOOD
    [[maybe_unused]] static jobject get_field_DARK_OAK_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "DARK_OAK_WOOD", "field_10178", "DARK_OAK_WOOD", "f_50043_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_WOOD
    [[maybe_unused]] static void set_field_DARK_OAK_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "DARK_OAK_WOOD", "field_10178", "DARK_OAK_WOOD", "f_50043_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_WOOD
    [[maybe_unused]] static jobject get_field_MANGROVE_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "MANGROVE_WOOD", "field_37549", "MANGROVE_WOOD", "f_220836_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_WOOD
    [[maybe_unused]] static void set_field_MANGROVE_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "MANGROVE_WOOD", "field_37549", "MANGROVE_WOOD", "f_220836_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_OAK_WOOD
    [[maybe_unused]] static jobject get_field_STRIPPED_OAK_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "STRIPPED_OAK_WOOD", "field_10250", "STRIPPED_OAK_WOOD", "f_50044_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_OAK_WOOD
    [[maybe_unused]] static void set_field_STRIPPED_OAK_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "STRIPPED_OAK_WOOD", "field_10250", "STRIPPED_OAK_WOOD", "f_50044_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_SPRUCE_WOOD
    [[maybe_unused]] static jobject get_field_STRIPPED_SPRUCE_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "STRIPPED_SPRUCE_WOOD", "field_10558", "STRIPPED_SPRUCE_WOOD", "f_50045_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_SPRUCE_WOOD
    [[maybe_unused]] static void set_field_STRIPPED_SPRUCE_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "STRIPPED_SPRUCE_WOOD", "field_10558", "STRIPPED_SPRUCE_WOOD", "f_50045_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_BIRCH_WOOD
    [[maybe_unused]] static jobject get_field_STRIPPED_BIRCH_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "STRIPPED_BIRCH_WOOD", "field_10204", "STRIPPED_BIRCH_WOOD", "f_50046_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_BIRCH_WOOD
    [[maybe_unused]] static void set_field_STRIPPED_BIRCH_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "STRIPPED_BIRCH_WOOD", "field_10204", "STRIPPED_BIRCH_WOOD", "f_50046_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_JUNGLE_WOOD
    [[maybe_unused]] static jobject get_field_STRIPPED_JUNGLE_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "STRIPPED_JUNGLE_WOOD", "field_10084", "STRIPPED_JUNGLE_WOOD", "f_50047_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_JUNGLE_WOOD
    [[maybe_unused]] static void set_field_STRIPPED_JUNGLE_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "STRIPPED_JUNGLE_WOOD", "field_10084", "STRIPPED_JUNGLE_WOOD", "f_50047_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_ACACIA_WOOD
    [[maybe_unused]] static jobject get_field_STRIPPED_ACACIA_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "STRIPPED_ACACIA_WOOD", "field_10103", "STRIPPED_ACACIA_WOOD", "f_50048_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_ACACIA_WOOD
    [[maybe_unused]] static void set_field_STRIPPED_ACACIA_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "STRIPPED_ACACIA_WOOD", "field_10103", "STRIPPED_ACACIA_WOOD", "f_50048_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_CHERRY_WOOD
    [[maybe_unused]] static jobject get_field_STRIPPED_CHERRY_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "STRIPPED_CHERRY_WOOD", "field_42730", "STRIPPED_CHERRY_WOOD", "f_271145_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_CHERRY_WOOD
    [[maybe_unused]] static void set_field_STRIPPED_CHERRY_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "STRIPPED_CHERRY_WOOD", "field_42730", "STRIPPED_CHERRY_WOOD", "f_271145_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_DARK_OAK_WOOD
    [[maybe_unused]] static jobject get_field_STRIPPED_DARK_OAK_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "STRIPPED_DARK_OAK_WOOD", "field_10374", "STRIPPED_DARK_OAK_WOOD", "f_50049_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_DARK_OAK_WOOD
    [[maybe_unused]] static void set_field_STRIPPED_DARK_OAK_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "STRIPPED_DARK_OAK_WOOD", "field_10374", "STRIPPED_DARK_OAK_WOOD", "f_50049_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_MANGROVE_WOOD
    [[maybe_unused]] static jobject get_field_STRIPPED_MANGROVE_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "STRIPPED_MANGROVE_WOOD", "field_37550", "STRIPPED_MANGROVE_WOOD", "f_220837_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_MANGROVE_WOOD
    [[maybe_unused]] static void set_field_STRIPPED_MANGROVE_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "STRIPPED_MANGROVE_WOOD", "field_37550", "STRIPPED_MANGROVE_WOOD", "f_220837_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_LEAVES
    [[maybe_unused]] static jobject get_field_OAK_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "OAK_LEAVES", "field_10503", "OAK_LEAVES", "f_50050_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_LEAVES
    [[maybe_unused]] static void set_field_OAK_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "OAK_LEAVES", "field_10503", "OAK_LEAVES", "f_50050_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_LEAVES
    [[maybe_unused]] static jobject get_field_SPRUCE_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "SPRUCE_LEAVES", "field_9988", "SPRUCE_LEAVES", "f_50051_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_LEAVES
    [[maybe_unused]] static void set_field_SPRUCE_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "SPRUCE_LEAVES", "field_9988", "SPRUCE_LEAVES", "f_50051_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_LEAVES
    [[maybe_unused]] static jobject get_field_BIRCH_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "BIRCH_LEAVES", "field_10539", "BIRCH_LEAVES", "f_50052_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_LEAVES
    [[maybe_unused]] static void set_field_BIRCH_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "BIRCH_LEAVES", "field_10539", "BIRCH_LEAVES", "f_50052_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_LEAVES
    [[maybe_unused]] static jobject get_field_JUNGLE_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "JUNGLE_LEAVES", "field_10335", "JUNGLE_LEAVES", "f_50053_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_LEAVES
    [[maybe_unused]] static void set_field_JUNGLE_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "JUNGLE_LEAVES", "field_10335", "JUNGLE_LEAVES", "f_50053_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_LEAVES
    [[maybe_unused]] static jobject get_field_ACACIA_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "ACACIA_LEAVES", "field_10098", "ACACIA_LEAVES", "f_50054_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_LEAVES
    [[maybe_unused]] static void set_field_ACACIA_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "ACACIA_LEAVES", "field_10098", "ACACIA_LEAVES", "f_50054_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_LEAVES
    [[maybe_unused]] static jobject get_field_CHERRY_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "CHERRY_LEAVES", "field_42731", "CHERRY_LEAVES", "f_271115_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_LEAVES
    [[maybe_unused]] static void set_field_CHERRY_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "CHERRY_LEAVES", "field_42731", "CHERRY_LEAVES", "f_271115_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_LEAVES
    [[maybe_unused]] static jobject get_field_DARK_OAK_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "DARK_OAK_LEAVES", "field_10035", "DARK_OAK_LEAVES", "f_50055_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_LEAVES
    [[maybe_unused]] static void set_field_DARK_OAK_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "DARK_OAK_LEAVES", "field_10035", "DARK_OAK_LEAVES", "f_50055_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_LEAVES
    [[maybe_unused]] static jobject get_field_MANGROVE_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "MANGROVE_LEAVES", "field_37551", "MANGROVE_LEAVES", "f_220838_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_LEAVES
    [[maybe_unused]] static void set_field_MANGROVE_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "MANGROVE_LEAVES", "field_37551", "MANGROVE_LEAVES", "f_220838_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#AZALEA_LEAVES
    [[maybe_unused]] static jobject get_field_AZALEA_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "AZALEA_LEAVES", "field_28673", "AZALEA_LEAVES", "f_152470_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#AZALEA_LEAVES
    [[maybe_unused]] static void set_field_AZALEA_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "AZALEA_LEAVES", "field_28673", "AZALEA_LEAVES", "f_152470_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FLOWERING_AZALEA_LEAVES
    [[maybe_unused]] static jobject get_field_FLOWERING_AZALEA_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "FLOWERING_AZALEA_LEAVES", "field_28674", "FLOWERING_AZALEA_LEAVES", "f_152471_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FLOWERING_AZALEA_LEAVES
    [[maybe_unused]] static void set_field_FLOWERING_AZALEA_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "FLOWERING_AZALEA_LEAVES", "field_28674", "FLOWERING_AZALEA_LEAVES", "f_152471_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPONGE
    [[maybe_unused]] static jobject get_field_SPONGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "SPONGE", "field_10258", "SPONGE", "f_50056_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPONGE
    [[maybe_unused]] static void set_field_SPONGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "SPONGE", "field_10258", "SPONGE", "f_50056_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WET_SPONGE
    [[maybe_unused]] static jobject get_field_WET_SPONGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "WET_SPONGE", "field_10562", "WET_SPONGE", "f_50057_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WET_SPONGE
    [[maybe_unused]] static void set_field_WET_SPONGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "WET_SPONGE", "field_10562", "WET_SPONGE", "f_50057_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GLASS
    [[maybe_unused]] static jobject get_field_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "GLASS", "field_10033", "GLASS", "f_50058_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GLASS
    [[maybe_unused]] static void set_field_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "GLASS", "field_10033", "GLASS", "f_50058_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LAPIS_ORE
    [[maybe_unused]] static jobject get_field_LAPIS_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "LAPIS_ORE", "field_10090", "LAPIS_ORE", "f_50059_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LAPIS_ORE
    [[maybe_unused]] static void set_field_LAPIS_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "LAPIS_ORE", "field_10090", "LAPIS_ORE", "f_50059_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_LAPIS_ORE
    [[maybe_unused]] static jobject get_field_DEEPSLATE_LAPIS_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "DEEPSLATE_LAPIS_ORE", "field_29028", "DEEPSLATE_LAPIS_ORE", "f_152472_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_LAPIS_ORE
    [[maybe_unused]] static void set_field_DEEPSLATE_LAPIS_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "DEEPSLATE_LAPIS_ORE", "field_29028", "DEEPSLATE_LAPIS_ORE", "f_152472_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LAPIS_BLOCK
    [[maybe_unused]] static jobject get_field_LAPIS_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "LAPIS_BLOCK", "field_10441", "LAPIS_BLOCK", "f_50060_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LAPIS_BLOCK
    [[maybe_unused]] static void set_field_LAPIS_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "LAPIS_BLOCK", "field_10441", "LAPIS_BLOCK", "f_50060_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DISPENSER
    [[maybe_unused]] static jobject get_field_DISPENSER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "DISPENSER", "field_10200", "DISPENSER", "f_50061_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DISPENSER
    [[maybe_unused]] static void set_field_DISPENSER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "DISPENSER", "field_10200", "DISPENSER", "f_50061_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SANDSTONE
    [[maybe_unused]] static jobject get_field_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "SANDSTONE", "field_9979", "SANDSTONE", "f_50062_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SANDSTONE
    [[maybe_unused]] static void set_field_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "SANDSTONE", "field_9979", "SANDSTONE", "f_50062_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHISELED_SANDSTONE
    [[maybe_unused]] static jobject get_field_CHISELED_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "CHISELED_SANDSTONE", "field_10292", "CHISELED_SANDSTONE", "f_50063_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHISELED_SANDSTONE
    [[maybe_unused]] static void set_field_CHISELED_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "CHISELED_SANDSTONE", "field_10292", "CHISELED_SANDSTONE", "f_50063_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CUT_SANDSTONE
    [[maybe_unused]] static jobject get_field_CUT_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "CUT_SANDSTONE", "field_10361", "CUT_SANDSTONE", "f_50064_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CUT_SANDSTONE
    [[maybe_unused]] static void set_field_CUT_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "CUT_SANDSTONE", "field_10361", "CUT_SANDSTONE", "f_50064_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NOTE_BLOCK
    [[maybe_unused]] static jobject get_field_NOTE_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "NOTE_BLOCK", "field_10179", "NOTE_BLOCK", "f_50065_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NOTE_BLOCK
    [[maybe_unused]] static void set_field_NOTE_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "NOTE_BLOCK", "field_10179", "NOTE_BLOCK", "f_50065_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_BED
    [[maybe_unused]] static jobject get_field_WHITE_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "WHITE_BED", "field_10120", "WHITE_BED", "f_50066_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_BED
    [[maybe_unused]] static void set_field_WHITE_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "WHITE_BED", "field_10120", "WHITE_BED", "f_50066_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_BED
    [[maybe_unused]] static jobject get_field_ORANGE_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "ORANGE_BED", "field_10410", "ORANGE_BED", "f_50067_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_BED
    [[maybe_unused]] static void set_field_ORANGE_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "ORANGE_BED", "field_10410", "ORANGE_BED", "f_50067_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_BED
    [[maybe_unused]] static jobject get_field_MAGENTA_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "MAGENTA_BED", "field_10230", "MAGENTA_BED", "f_50068_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_BED
    [[maybe_unused]] static void set_field_MAGENTA_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "MAGENTA_BED", "field_10230", "MAGENTA_BED", "f_50068_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_BED
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "LIGHT_BLUE_BED", "field_10621", "LIGHT_BLUE_BED", "f_50017_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_BED
    [[maybe_unused]] static void set_field_LIGHT_BLUE_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "LIGHT_BLUE_BED", "field_10621", "LIGHT_BLUE_BED", "f_50017_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_BED
    [[maybe_unused]] static jobject get_field_YELLOW_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "YELLOW_BED", "field_10356", "YELLOW_BED", "f_50018_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_BED
    [[maybe_unused]] static void set_field_YELLOW_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "YELLOW_BED", "field_10356", "YELLOW_BED", "f_50018_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_BED
    [[maybe_unused]] static jobject get_field_LIME_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "LIME_BED", "field_10180", "LIME_BED", "f_50019_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_BED
    [[maybe_unused]] static void set_field_LIME_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "LIME_BED", "field_10180", "LIME_BED", "f_50019_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_BED
    [[maybe_unused]] static jobject get_field_PINK_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "PINK_BED", "field_10610", "PINK_BED", "f_50020_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_BED
    [[maybe_unused]] static void set_field_PINK_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "PINK_BED", "field_10610", "PINK_BED", "f_50020_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_BED
    [[maybe_unused]] static jobject get_field_GRAY_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "GRAY_BED", "field_10141", "GRAY_BED", "f_50021_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_BED
    [[maybe_unused]] static void set_field_GRAY_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "GRAY_BED", "field_10141", "GRAY_BED", "f_50021_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_BED
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "LIGHT_GRAY_BED", "field_10326", "LIGHT_GRAY_BED", "f_50022_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_BED
    [[maybe_unused]] static void set_field_LIGHT_GRAY_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "LIGHT_GRAY_BED", "field_10326", "LIGHT_GRAY_BED", "f_50022_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_BED
    [[maybe_unused]] static jobject get_field_CYAN_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "CYAN_BED", "field_10109", "CYAN_BED", "f_50023_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_BED
    [[maybe_unused]] static void set_field_CYAN_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "CYAN_BED", "field_10109", "CYAN_BED", "f_50023_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_BED
    [[maybe_unused]] static jobject get_field_PURPLE_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "PURPLE_BED", "field_10019", "PURPLE_BED", "f_50024_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_BED
    [[maybe_unused]] static void set_field_PURPLE_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "PURPLE_BED", "field_10019", "PURPLE_BED", "f_50024_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_BED
    [[maybe_unused]] static jobject get_field_BLUE_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "BLUE_BED", "field_10527", "BLUE_BED", "f_50025_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_BED
    [[maybe_unused]] static void set_field_BLUE_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "BLUE_BED", "field_10527", "BLUE_BED", "f_50025_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_BED
    [[maybe_unused]] static jobject get_field_BROWN_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "BROWN_BED", "field_10288", "BROWN_BED", "f_50026_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_BED
    [[maybe_unused]] static void set_field_BROWN_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "BROWN_BED", "field_10288", "BROWN_BED", "f_50026_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_BED
    [[maybe_unused]] static jobject get_field_GREEN_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "GREEN_BED", "field_10561", "GREEN_BED", "f_50027_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_BED
    [[maybe_unused]] static void set_field_GREEN_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "GREEN_BED", "field_10561", "GREEN_BED", "f_50027_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_BED
    [[maybe_unused]] static jobject get_field_RED_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "RED_BED", "field_10069", "RED_BED", "f_50028_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_BED
    [[maybe_unused]] static void set_field_RED_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "RED_BED", "field_10069", "RED_BED", "f_50028_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_BED
    [[maybe_unused]] static jobject get_field_BLACK_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bo", "BLACK_BED", "field_10461", "BLACK_BED", "f_50029_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_BED
    [[maybe_unused]] static void set_field_BLACK_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bo", "BLACK_BED", "field_10461", "BLACK_BED", "f_50029_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POWERED_RAIL
    [[maybe_unused]] static jobject get_field_POWERED_RAIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bp", "POWERED_RAIL", "field_10425", "POWERED_RAIL", "f_50030_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POWERED_RAIL
    [[maybe_unused]] static void set_field_POWERED_RAIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bp", "POWERED_RAIL", "field_10425", "POWERED_RAIL", "f_50030_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DETECTOR_RAIL
    [[maybe_unused]] static jobject get_field_DETECTOR_RAIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "DETECTOR_RAIL", "field_10025", "DETECTOR_RAIL", "f_50031_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DETECTOR_RAIL
    [[maybe_unused]] static void set_field_DETECTOR_RAIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "DETECTOR_RAIL", "field_10025", "DETECTOR_RAIL", "f_50031_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STICKY_PISTON
    [[maybe_unused]] static jobject get_field_STICKY_PISTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("br", "STICKY_PISTON", "field_10615", "STICKY_PISTON", "f_50032_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STICKY_PISTON
    [[maybe_unused]] static void set_field_STICKY_PISTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("br", "STICKY_PISTON", "field_10615", "STICKY_PISTON", "f_50032_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COBWEB
    [[maybe_unused]] static jobject get_field_COBWEB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "COBWEB", "field_10343", "COBWEB", "f_50033_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COBWEB
    [[maybe_unused]] static void set_field_COBWEB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "COBWEB", "field_10343", "COBWEB", "f_50033_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SHORT_GRASS
    [[maybe_unused]] static jobject get_field_SHORT_GRASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bt", "SHORT_GRASS", "field_10479", "SHORT_GRASS", "f_303709_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SHORT_GRASS
    [[maybe_unused]] static void set_field_SHORT_GRASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bt", "SHORT_GRASS", "field_10479", "SHORT_GRASS", "f_303709_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FERN
    [[maybe_unused]] static jobject get_field_FERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bu", "FERN", "field_10112", "FERN", "f_50035_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FERN
    [[maybe_unused]] static void set_field_FERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bu", "FERN", "field_10112", "FERN", "f_50035_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_BUSH
    [[maybe_unused]] static jobject get_field_DEAD_BUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bv", "DEAD_BUSH", "field_10428", "DEAD_BUSH", "f_50036_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_BUSH
    [[maybe_unused]] static void set_field_DEAD_BUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bv", "DEAD_BUSH", "field_10428", "DEAD_BUSH", "f_50036_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SEAGRASS
    [[maybe_unused]] static jobject get_field_SEAGRASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bw", "SEAGRASS", "field_10376", "SEAGRASS", "f_50037_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SEAGRASS
    [[maybe_unused]] static void set_field_SEAGRASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bw", "SEAGRASS", "field_10376", "SEAGRASS", "f_50037_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TALL_SEAGRASS
    [[maybe_unused]] static jobject get_field_TALL_SEAGRASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "TALL_SEAGRASS", "field_10238", "TALL_SEAGRASS", "f_50038_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TALL_SEAGRASS
    [[maybe_unused]] static void set_field_TALL_SEAGRASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "TALL_SEAGRASS", "field_10238", "TALL_SEAGRASS", "f_50038_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PISTON
    [[maybe_unused]] static jobject get_field_PISTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("by", "PISTON", "field_10560", "PISTON", "f_50039_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PISTON
    [[maybe_unused]] static void set_field_PISTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("by", "PISTON", "field_10560", "PISTON", "f_50039_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PISTON_HEAD
    [[maybe_unused]] static jobject get_field_PISTON_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bz", "PISTON_HEAD", "field_10379", "PISTON_HEAD", "f_50040_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PISTON_HEAD
    [[maybe_unused]] static void set_field_PISTON_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bz", "PISTON_HEAD", "field_10379", "PISTON_HEAD", "f_50040_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_WOOL
    [[maybe_unused]] static jobject get_field_WHITE_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bA", "WHITE_WOOL", "field_10446", "WHITE_WOOL", "f_50041_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_WOOL
    [[maybe_unused]] static void set_field_WHITE_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bA", "WHITE_WOOL", "field_10446", "WHITE_WOOL", "f_50041_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_WOOL
    [[maybe_unused]] static jobject get_field_ORANGE_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bB", "ORANGE_WOOL", "field_10095", "ORANGE_WOOL", "f_50042_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_WOOL
    [[maybe_unused]] static void set_field_ORANGE_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bB", "ORANGE_WOOL", "field_10095", "ORANGE_WOOL", "f_50042_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_WOOL
    [[maybe_unused]] static jobject get_field_MAGENTA_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bC", "MAGENTA_WOOL", "field_10215", "MAGENTA_WOOL", "f_50096_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_WOOL
    [[maybe_unused]] static void set_field_MAGENTA_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bC", "MAGENTA_WOOL", "field_10215", "MAGENTA_WOOL", "f_50096_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_WOOL
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bD", "LIGHT_BLUE_WOOL", "field_10294", "LIGHT_BLUE_WOOL", "f_50097_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_WOOL
    [[maybe_unused]] static void set_field_LIGHT_BLUE_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bD", "LIGHT_BLUE_WOOL", "field_10294", "LIGHT_BLUE_WOOL", "f_50097_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_WOOL
    [[maybe_unused]] static jobject get_field_YELLOW_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bE", "YELLOW_WOOL", "field_10490", "YELLOW_WOOL", "f_50098_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_WOOL
    [[maybe_unused]] static void set_field_YELLOW_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bE", "YELLOW_WOOL", "field_10490", "YELLOW_WOOL", "f_50098_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_WOOL
    [[maybe_unused]] static jobject get_field_LIME_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bF", "LIME_WOOL", "field_10028", "LIME_WOOL", "f_50099_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_WOOL
    [[maybe_unused]] static void set_field_LIME_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bF", "LIME_WOOL", "field_10028", "LIME_WOOL", "f_50099_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_WOOL
    [[maybe_unused]] static jobject get_field_PINK_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bG", "PINK_WOOL", "field_10459", "PINK_WOOL", "f_50100_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_WOOL
    [[maybe_unused]] static void set_field_PINK_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bG", "PINK_WOOL", "field_10459", "PINK_WOOL", "f_50100_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_WOOL
    [[maybe_unused]] static jobject get_field_GRAY_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "GRAY_WOOL", "field_10423", "GRAY_WOOL", "f_50101_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_WOOL
    [[maybe_unused]] static void set_field_GRAY_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "GRAY_WOOL", "field_10423", "GRAY_WOOL", "f_50101_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_WOOL
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "LIGHT_GRAY_WOOL", "field_10222", "LIGHT_GRAY_WOOL", "f_50102_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_WOOL
    [[maybe_unused]] static void set_field_LIGHT_GRAY_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "LIGHT_GRAY_WOOL", "field_10222", "LIGHT_GRAY_WOOL", "f_50102_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_WOOL
    [[maybe_unused]] static jobject get_field_CYAN_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "CYAN_WOOL", "field_10619", "CYAN_WOOL", "f_50103_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_WOOL
    [[maybe_unused]] static void set_field_CYAN_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "CYAN_WOOL", "field_10619", "CYAN_WOOL", "f_50103_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_WOOL
    [[maybe_unused]] static jobject get_field_PURPLE_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "PURPLE_WOOL", "field_10259", "PURPLE_WOOL", "f_50104_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_WOOL
    [[maybe_unused]] static void set_field_PURPLE_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "PURPLE_WOOL", "field_10259", "PURPLE_WOOL", "f_50104_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_WOOL
    [[maybe_unused]] static jobject get_field_BLUE_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "BLUE_WOOL", "field_10514", "BLUE_WOOL", "f_50105_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_WOOL
    [[maybe_unused]] static void set_field_BLUE_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "BLUE_WOOL", "field_10514", "BLUE_WOOL", "f_50105_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_WOOL
    [[maybe_unused]] static jobject get_field_BROWN_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "BROWN_WOOL", "field_10113", "BROWN_WOOL", "f_50106_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_WOOL
    [[maybe_unused]] static void set_field_BROWN_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "BROWN_WOOL", "field_10113", "BROWN_WOOL", "f_50106_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_WOOL
    [[maybe_unused]] static jobject get_field_GREEN_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "GREEN_WOOL", "field_10170", "GREEN_WOOL", "f_50107_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_WOOL
    [[maybe_unused]] static void set_field_GREEN_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "GREEN_WOOL", "field_10170", "GREEN_WOOL", "f_50107_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_WOOL
    [[maybe_unused]] static jobject get_field_RED_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bO", "RED_WOOL", "field_10314", "RED_WOOL", "f_50108_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_WOOL
    [[maybe_unused]] static void set_field_RED_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bO", "RED_WOOL", "field_10314", "RED_WOOL", "f_50108_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_WOOL
    [[maybe_unused]] static jobject get_field_BLACK_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bP", "BLACK_WOOL", "field_10146", "BLACK_WOOL", "f_50109_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_WOOL
    [[maybe_unused]] static void set_field_BLACK_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bP", "BLACK_WOOL", "field_10146", "BLACK_WOOL", "f_50109_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MOVING_PISTON
    [[maybe_unused]] static jobject get_field_MOVING_PISTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bQ", "MOVING_PISTON", "field_10008", "MOVING_PISTON", "f_50110_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MOVING_PISTON
    [[maybe_unused]] static void set_field_MOVING_PISTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bQ", "MOVING_PISTON", "field_10008", "MOVING_PISTON", "f_50110_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DANDELION
    [[maybe_unused]] static jobject get_field_DANDELION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bR", "DANDELION", "field_10182", "DANDELION", "f_50111_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DANDELION
    [[maybe_unused]] static void set_field_DANDELION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bR", "DANDELION", "field_10182", "DANDELION", "f_50111_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TORCHFLOWER
    [[maybe_unused]] static jobject get_field_TORCHFLOWER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bS", "TORCHFLOWER", "field_42734", "TORCHFLOWER", "f_271329_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TORCHFLOWER
    [[maybe_unused]] static void set_field_TORCHFLOWER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bS", "TORCHFLOWER", "field_42734", "TORCHFLOWER", "f_271329_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POPPY
    [[maybe_unused]] static jobject get_field_POPPY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bT", "POPPY", "field_10449", "POPPY", "f_50112_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POPPY
    [[maybe_unused]] static void set_field_POPPY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bT", "POPPY", "field_10449", "POPPY", "f_50112_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_ORCHID
    [[maybe_unused]] static jobject get_field_BLUE_ORCHID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bU", "BLUE_ORCHID", "field_10086", "BLUE_ORCHID", "f_50113_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_ORCHID
    [[maybe_unused]] static void set_field_BLUE_ORCHID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bU", "BLUE_ORCHID", "field_10086", "BLUE_ORCHID", "f_50113_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ALLIUM
    [[maybe_unused]] static jobject get_field_ALLIUM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bV", "ALLIUM", "field_10226", "ALLIUM", "f_50114_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ALLIUM
    [[maybe_unused]] static void set_field_ALLIUM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bV", "ALLIUM", "field_10226", "ALLIUM", "f_50114_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#AZURE_BLUET
    [[maybe_unused]] static jobject get_field_AZURE_BLUET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bW", "AZURE_BLUET", "field_10573", "AZURE_BLUET", "f_50115_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#AZURE_BLUET
    [[maybe_unused]] static void set_field_AZURE_BLUET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bW", "AZURE_BLUET", "field_10573", "AZURE_BLUET", "f_50115_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_TULIP
    [[maybe_unused]] static jobject get_field_RED_TULIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bX", "RED_TULIP", "field_10270", "RED_TULIP", "f_50116_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_TULIP
    [[maybe_unused]] static void set_field_RED_TULIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bX", "RED_TULIP", "field_10270", "RED_TULIP", "f_50116_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_TULIP
    [[maybe_unused]] static jobject get_field_ORANGE_TULIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bY", "ORANGE_TULIP", "field_10048", "ORANGE_TULIP", "f_50117_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_TULIP
    [[maybe_unused]] static void set_field_ORANGE_TULIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bY", "ORANGE_TULIP", "field_10048", "ORANGE_TULIP", "f_50117_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_TULIP
    [[maybe_unused]] static jobject get_field_WHITE_TULIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bZ", "WHITE_TULIP", "field_10156", "WHITE_TULIP", "f_50118_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_TULIP
    [[maybe_unused]] static void set_field_WHITE_TULIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bZ", "WHITE_TULIP", "field_10156", "WHITE_TULIP", "f_50118_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_TULIP
    [[maybe_unused]] static jobject get_field_PINK_TULIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ca", "PINK_TULIP", "field_10315", "PINK_TULIP", "f_50119_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_TULIP
    [[maybe_unused]] static void set_field_PINK_TULIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ca", "PINK_TULIP", "field_10315", "PINK_TULIP", "f_50119_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OXEYE_DAISY
    [[maybe_unused]] static jobject get_field_OXEYE_DAISY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cb", "OXEYE_DAISY", "field_10554", "OXEYE_DAISY", "f_50120_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OXEYE_DAISY
    [[maybe_unused]] static void set_field_OXEYE_DAISY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cb", "OXEYE_DAISY", "field_10554", "OXEYE_DAISY", "f_50120_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CORNFLOWER
    [[maybe_unused]] static jobject get_field_CORNFLOWER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "CORNFLOWER", "field_9995", "CORNFLOWER", "f_50121_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CORNFLOWER
    [[maybe_unused]] static void set_field_CORNFLOWER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "CORNFLOWER", "field_9995", "CORNFLOWER", "f_50121_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WITHER_ROSE
    [[maybe_unused]] static jobject get_field_WITHER_ROSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "WITHER_ROSE", "field_10606", "WITHER_ROSE", "f_50070_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WITHER_ROSE
    [[maybe_unused]] static void set_field_WITHER_ROSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "WITHER_ROSE", "field_10606", "WITHER_ROSE", "f_50070_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LILY_OF_THE_VALLEY
    [[maybe_unused]] static jobject get_field_LILY_OF_THE_VALLEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "LILY_OF_THE_VALLEY", "field_10548", "LILY_OF_THE_VALLEY", "f_50071_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LILY_OF_THE_VALLEY
    [[maybe_unused]] static void set_field_LILY_OF_THE_VALLEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "LILY_OF_THE_VALLEY", "field_10548", "LILY_OF_THE_VALLEY", "f_50071_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_MUSHROOM
    [[maybe_unused]] static jobject get_field_BROWN_MUSHROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "BROWN_MUSHROOM", "field_10251", "BROWN_MUSHROOM", "f_50072_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_MUSHROOM
    [[maybe_unused]] static void set_field_BROWN_MUSHROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "BROWN_MUSHROOM", "field_10251", "BROWN_MUSHROOM", "f_50072_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_MUSHROOM
    [[maybe_unused]] static jobject get_field_RED_MUSHROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "RED_MUSHROOM", "field_10559", "RED_MUSHROOM", "f_50073_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_MUSHROOM
    [[maybe_unused]] static void set_field_RED_MUSHROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "RED_MUSHROOM", "field_10559", "RED_MUSHROOM", "f_50073_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GOLD_BLOCK
    [[maybe_unused]] static jobject get_field_GOLD_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "GOLD_BLOCK", "field_10205", "GOLD_BLOCK", "f_50074_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GOLD_BLOCK
    [[maybe_unused]] static void set_field_GOLD_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "GOLD_BLOCK", "field_10205", "GOLD_BLOCK", "f_50074_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#IRON_BLOCK
    [[maybe_unused]] static jobject get_field_IRON_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "IRON_BLOCK", "field_10085", "IRON_BLOCK", "f_50075_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#IRON_BLOCK
    [[maybe_unused]] static void set_field_IRON_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "IRON_BLOCK", "field_10085", "IRON_BLOCK", "f_50075_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BRICKS
    [[maybe_unused]] static jobject get_field_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "BRICKS", "field_10104", "BRICKS", "f_50076_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BRICKS
    [[maybe_unused]] static void set_field_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "BRICKS", "field_10104", "BRICKS", "f_50076_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TNT
    [[maybe_unused]] static jobject get_field_TNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "TNT", "field_10375", "TNT", "f_50077_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TNT
    [[maybe_unused]] static void set_field_TNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "TNT", "field_10375", "TNT", "f_50077_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BOOKSHELF
    [[maybe_unused]] static jobject get_field_BOOKSHELF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "BOOKSHELF", "field_10504", "BOOKSHELF", "f_50078_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BOOKSHELF
    [[maybe_unused]] static void set_field_BOOKSHELF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "BOOKSHELF", "field_10504", "BOOKSHELF", "f_50078_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHISELED_BOOKSHELF
    [[maybe_unused]] static jobject get_field_CHISELED_BOOKSHELF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "CHISELED_BOOKSHELF", "field_40276", "CHISELED_BOOKSHELF", "f_244299_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHISELED_BOOKSHELF
    [[maybe_unused]] static void set_field_CHISELED_BOOKSHELF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "CHISELED_BOOKSHELF", "field_40276", "CHISELED_BOOKSHELF", "f_244299_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MOSSY_COBBLESTONE
    [[maybe_unused]] static jobject get_field_MOSSY_COBBLESTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "MOSSY_COBBLESTONE", "field_9989", "MOSSY_COBBLESTONE", "f_50079_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MOSSY_COBBLESTONE
    [[maybe_unused]] static void set_field_MOSSY_COBBLESTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "MOSSY_COBBLESTONE", "field_9989", "MOSSY_COBBLESTONE", "f_50079_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OBSIDIAN
    [[maybe_unused]] static jobject get_field_OBSIDIAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "OBSIDIAN", "field_10540", "OBSIDIAN", "f_50080_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OBSIDIAN
    [[maybe_unused]] static void set_field_OBSIDIAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "OBSIDIAN", "field_10540", "OBSIDIAN", "f_50080_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TORCH
    [[maybe_unused]] static jobject get_field_TORCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "TORCH", "field_10336", "TORCH", "f_50081_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TORCH
    [[maybe_unused]] static void set_field_TORCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "TORCH", "field_10336", "TORCH", "f_50081_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WALL_TORCH
    [[maybe_unused]] static jobject get_field_WALL_TORCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "WALL_TORCH", "field_10099", "WALL_TORCH", "f_50082_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WALL_TORCH
    [[maybe_unused]] static void set_field_WALL_TORCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "WALL_TORCH", "field_10099", "WALL_TORCH", "f_50082_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FIRE
    [[maybe_unused]] static jobject get_field_FIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "FIRE", "field_10036", "FIRE", "f_50083_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FIRE
    [[maybe_unused]] static void set_field_FIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "FIRE", "field_10036", "FIRE", "f_50083_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SOUL_FIRE
    [[maybe_unused]] static jobject get_field_SOUL_FIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "SOUL_FIRE", "field_22089", "SOUL_FIRE", "f_50084_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SOUL_FIRE
    [[maybe_unused]] static void set_field_SOUL_FIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "SOUL_FIRE", "field_22089", "SOUL_FIRE", "f_50084_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPAWNER
    [[maybe_unused]] static jobject get_field_SPAWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ct", "SPAWNER", "field_10260", "SPAWNER", "f_50085_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPAWNER
    [[maybe_unused]] static void set_field_SPAWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ct", "SPAWNER", "field_10260", "SPAWNER", "f_50085_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_STAIRS
    [[maybe_unused]] static jobject get_field_OAK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cu", "OAK_STAIRS", "field_10563", "OAK_STAIRS", "f_50086_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_STAIRS
    [[maybe_unused]] static void set_field_OAK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cu", "OAK_STAIRS", "field_10563", "OAK_STAIRS", "f_50086_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHEST
    [[maybe_unused]] static jobject get_field_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cv", "CHEST", "field_10034", "CHEST", "f_50087_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHEST
    [[maybe_unused]] static void set_field_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cv", "CHEST", "field_10034", "CHEST", "f_50087_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#REDSTONE_WIRE
    [[maybe_unused]] static jobject get_field_REDSTONE_WIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cw", "REDSTONE_WIRE", "field_10091", "REDSTONE_WIRE", "f_50088_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#REDSTONE_WIRE
    [[maybe_unused]] static void set_field_REDSTONE_WIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cw", "REDSTONE_WIRE", "field_10091", "REDSTONE_WIRE", "f_50088_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DIAMOND_ORE
    [[maybe_unused]] static jobject get_field_DIAMOND_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cx", "DIAMOND_ORE", "field_10442", "DIAMOND_ORE", "f_50089_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DIAMOND_ORE
    [[maybe_unused]] static void set_field_DIAMOND_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cx", "DIAMOND_ORE", "field_10442", "DIAMOND_ORE", "f_50089_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_DIAMOND_ORE
    [[maybe_unused]] static jobject get_field_DEEPSLATE_DIAMOND_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cy", "DEEPSLATE_DIAMOND_ORE", "field_29029", "DEEPSLATE_DIAMOND_ORE", "f_152474_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_DIAMOND_ORE
    [[maybe_unused]] static void set_field_DEEPSLATE_DIAMOND_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cy", "DEEPSLATE_DIAMOND_ORE", "field_29029", "DEEPSLATE_DIAMOND_ORE", "f_152474_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DIAMOND_BLOCK
    [[maybe_unused]] static jobject get_field_DIAMOND_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cz", "DIAMOND_BLOCK", "field_10201", "DIAMOND_BLOCK", "f_50090_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DIAMOND_BLOCK
    [[maybe_unused]] static void set_field_DIAMOND_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cz", "DIAMOND_BLOCK", "field_10201", "DIAMOND_BLOCK", "f_50090_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRAFTING_TABLE
    [[maybe_unused]] static jobject get_field_CRAFTING_TABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cA", "CRAFTING_TABLE", "field_9980", "CRAFTING_TABLE", "f_50091_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRAFTING_TABLE
    [[maybe_unused]] static void set_field_CRAFTING_TABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cA", "CRAFTING_TABLE", "field_9980", "CRAFTING_TABLE", "f_50091_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHEAT
    [[maybe_unused]] static jobject get_field_WHEAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cB", "WHEAT", "field_10293", "WHEAT", "f_50092_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHEAT
    [[maybe_unused]] static void set_field_WHEAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cB", "WHEAT", "field_10293", "WHEAT", "f_50092_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FARMLAND
    [[maybe_unused]] static jobject get_field_FARMLAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cC", "FARMLAND", "field_10362", "FARMLAND", "f_50093_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FARMLAND
    [[maybe_unused]] static void set_field_FARMLAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cC", "FARMLAND", "field_10362", "FARMLAND", "f_50093_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FURNACE
    [[maybe_unused]] static jobject get_field_FURNACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cD", "FURNACE", "field_10181", "FURNACE", "f_50094_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FURNACE
    [[maybe_unused]] static void set_field_FURNACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cD", "FURNACE", "field_10181", "FURNACE", "f_50094_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_SIGN
    [[maybe_unused]] static jobject get_field_OAK_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cE", "OAK_SIGN", "field_10121", "OAK_SIGN", "f_50095_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_SIGN
    [[maybe_unused]] static void set_field_OAK_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cE", "OAK_SIGN", "field_10121", "OAK_SIGN", "f_50095_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_SIGN
    [[maybe_unused]] static jobject get_field_SPRUCE_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cF", "SPRUCE_SIGN", "field_10411", "SPRUCE_SIGN", "f_50149_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_SIGN
    [[maybe_unused]] static void set_field_SPRUCE_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cF", "SPRUCE_SIGN", "field_10411", "SPRUCE_SIGN", "f_50149_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_SIGN
    [[maybe_unused]] static jobject get_field_BIRCH_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cG", "BIRCH_SIGN", "field_10231", "BIRCH_SIGN", "f_50150_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_SIGN
    [[maybe_unused]] static void set_field_BIRCH_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cG", "BIRCH_SIGN", "field_10231", "BIRCH_SIGN", "f_50150_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_SIGN
    [[maybe_unused]] static jobject get_field_ACACIA_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cH", "ACACIA_SIGN", "field_10284", "ACACIA_SIGN", "f_50151_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_SIGN
    [[maybe_unused]] static void set_field_ACACIA_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cH", "ACACIA_SIGN", "field_10284", "ACACIA_SIGN", "f_50151_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_SIGN
    [[maybe_unused]] static jobject get_field_CHERRY_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cI", "CHERRY_SIGN", "field_42735", "CHERRY_SIGN", "f_271516_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_SIGN
    [[maybe_unused]] static void set_field_CHERRY_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cI", "CHERRY_SIGN", "field_42735", "CHERRY_SIGN", "f_271516_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_SIGN
    [[maybe_unused]] static jobject get_field_JUNGLE_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cJ", "JUNGLE_SIGN", "field_10544", "JUNGLE_SIGN", "f_50152_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_SIGN
    [[maybe_unused]] static void set_field_JUNGLE_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cJ", "JUNGLE_SIGN", "field_10544", "JUNGLE_SIGN", "f_50152_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_SIGN
    [[maybe_unused]] static jobject get_field_DARK_OAK_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cK", "DARK_OAK_SIGN", "field_10330", "DARK_OAK_SIGN", "f_50153_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_SIGN
    [[maybe_unused]] static void set_field_DARK_OAK_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cK", "DARK_OAK_SIGN", "field_10330", "DARK_OAK_SIGN", "f_50153_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_SIGN
    [[maybe_unused]] static jobject get_field_MANGROVE_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cL", "MANGROVE_SIGN", "field_37554", "MANGROVE_SIGN", "f_220841_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_SIGN
    [[maybe_unused]] static void set_field_MANGROVE_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cL", "MANGROVE_SIGN", "field_37554", "MANGROVE_SIGN", "f_220841_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_SIGN
    [[maybe_unused]] static jobject get_field_BAMBOO_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cM", "BAMBOO_SIGN", "field_40277", "BAMBOO_SIGN", "f_244433_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_SIGN
    [[maybe_unused]] static void set_field_BAMBOO_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cM", "BAMBOO_SIGN", "field_40277", "BAMBOO_SIGN", "f_244433_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_DOOR
    [[maybe_unused]] static jobject get_field_OAK_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cN", "OAK_DOOR", "field_10149", "OAK_DOOR", "f_50154_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_DOOR
    [[maybe_unused]] static void set_field_OAK_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cN", "OAK_DOOR", "field_10149", "OAK_DOOR", "f_50154_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LADDER
    [[maybe_unused]] static jobject get_field_LADDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cO", "LADDER", "field_9983", "LADDER", "f_50155_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LADDER
    [[maybe_unused]] static void set_field_LADDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cO", "LADDER", "field_9983", "LADDER", "f_50155_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RAIL
    [[maybe_unused]] static jobject get_field_RAIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cP", "RAIL", "field_10167", "RAIL", "f_50156_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RAIL
    [[maybe_unused]] static void set_field_RAIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cP", "RAIL", "field_10167", "RAIL", "f_50156_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COBBLESTONE_STAIRS
    [[maybe_unused]] static jobject get_field_COBBLESTONE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cQ", "COBBLESTONE_STAIRS", "field_10596", "COBBLESTONE_STAIRS", "f_50157_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COBBLESTONE_STAIRS
    [[maybe_unused]] static void set_field_COBBLESTONE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cQ", "COBBLESTONE_STAIRS", "field_10596", "COBBLESTONE_STAIRS", "f_50157_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_WALL_SIGN
    [[maybe_unused]] static jobject get_field_OAK_WALL_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cR", "OAK_WALL_SIGN", "field_10187", "OAK_WALL_SIGN", "f_50158_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_WALL_SIGN
    [[maybe_unused]] static void set_field_OAK_WALL_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cR", "OAK_WALL_SIGN", "field_10187", "OAK_WALL_SIGN", "f_50158_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_WALL_SIGN
    [[maybe_unused]] static jobject get_field_SPRUCE_WALL_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cS", "SPRUCE_WALL_SIGN", "field_10088", "SPRUCE_WALL_SIGN", "f_50159_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_WALL_SIGN
    [[maybe_unused]] static void set_field_SPRUCE_WALL_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cS", "SPRUCE_WALL_SIGN", "field_10088", "SPRUCE_WALL_SIGN", "f_50159_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_WALL_SIGN
    [[maybe_unused]] static jobject get_field_BIRCH_WALL_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cT", "BIRCH_WALL_SIGN", "field_10391", "BIRCH_WALL_SIGN", "f_50160_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_WALL_SIGN
    [[maybe_unused]] static void set_field_BIRCH_WALL_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cT", "BIRCH_WALL_SIGN", "field_10391", "BIRCH_WALL_SIGN", "f_50160_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_WALL_SIGN
    [[maybe_unused]] static jobject get_field_ACACIA_WALL_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cU", "ACACIA_WALL_SIGN", "field_10401", "ACACIA_WALL_SIGN", "f_50161_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_WALL_SIGN
    [[maybe_unused]] static void set_field_ACACIA_WALL_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cU", "ACACIA_WALL_SIGN", "field_10401", "ACACIA_WALL_SIGN", "f_50161_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_WALL_SIGN
    [[maybe_unused]] static jobject get_field_CHERRY_WALL_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cV", "CHERRY_WALL_SIGN", "field_42736", "CHERRY_WALL_SIGN", "f_271107_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_WALL_SIGN
    [[maybe_unused]] static void set_field_CHERRY_WALL_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cV", "CHERRY_WALL_SIGN", "field_42736", "CHERRY_WALL_SIGN", "f_271107_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_WALL_SIGN
    [[maybe_unused]] static jobject get_field_JUNGLE_WALL_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cW", "JUNGLE_WALL_SIGN", "field_10587", "JUNGLE_WALL_SIGN", "f_50162_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_WALL_SIGN
    [[maybe_unused]] static void set_field_JUNGLE_WALL_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cW", "JUNGLE_WALL_SIGN", "field_10587", "JUNGLE_WALL_SIGN", "f_50162_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_WALL_SIGN
    [[maybe_unused]] static jobject get_field_DARK_OAK_WALL_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cX", "DARK_OAK_WALL_SIGN", "field_10265", "DARK_OAK_WALL_SIGN", "f_50163_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_WALL_SIGN
    [[maybe_unused]] static void set_field_DARK_OAK_WALL_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cX", "DARK_OAK_WALL_SIGN", "field_10265", "DARK_OAK_WALL_SIGN", "f_50163_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_WALL_SIGN
    [[maybe_unused]] static jobject get_field_MANGROVE_WALL_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cY", "MANGROVE_WALL_SIGN", "field_37552", "MANGROVE_WALL_SIGN", "f_220839_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_WALL_SIGN
    [[maybe_unused]] static void set_field_MANGROVE_WALL_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cY", "MANGROVE_WALL_SIGN", "field_37552", "MANGROVE_WALL_SIGN", "f_220839_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_WALL_SIGN
    [[maybe_unused]] static jobject get_field_BAMBOO_WALL_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cZ", "BAMBOO_WALL_SIGN", "field_40261", "BAMBOO_WALL_SIGN", "f_244608_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_WALL_SIGN
    [[maybe_unused]] static void set_field_BAMBOO_WALL_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cZ", "BAMBOO_WALL_SIGN", "field_40261", "BAMBOO_WALL_SIGN", "f_244608_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_OAK_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("da", "OAK_HANGING_SIGN", "field_40262", "OAK_HANGING_SIGN", "f_244319_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_HANGING_SIGN
    [[maybe_unused]] static void set_field_OAK_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("da", "OAK_HANGING_SIGN", "field_40262", "OAK_HANGING_SIGN", "f_244319_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_SPRUCE_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("db", "SPRUCE_HANGING_SIGN", "field_40263", "SPRUCE_HANGING_SIGN", "f_244633_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_HANGING_SIGN
    [[maybe_unused]] static void set_field_SPRUCE_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("db", "SPRUCE_HANGING_SIGN", "field_40263", "SPRUCE_HANGING_SIGN", "f_244633_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_BIRCH_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dc", "BIRCH_HANGING_SIGN", "field_40264", "BIRCH_HANGING_SIGN", "f_243890_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_HANGING_SIGN
    [[maybe_unused]] static void set_field_BIRCH_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dc", "BIRCH_HANGING_SIGN", "field_40264", "BIRCH_HANGING_SIGN", "f_243890_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_ACACIA_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dd", "ACACIA_HANGING_SIGN", "field_40265", "ACACIA_HANGING_SIGN", "f_243716_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_HANGING_SIGN
    [[maybe_unused]] static void set_field_ACACIA_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dd", "ACACIA_HANGING_SIGN", "field_40265", "ACACIA_HANGING_SIGN", "f_243716_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_CHERRY_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("de", "CHERRY_HANGING_SIGN", "field_42738", "CHERRY_HANGING_SIGN", "f_271116_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_HANGING_SIGN
    [[maybe_unused]] static void set_field_CHERRY_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("de", "CHERRY_HANGING_SIGN", "field_42738", "CHERRY_HANGING_SIGN", "f_271116_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_JUNGLE_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("df", "JUNGLE_HANGING_SIGN", "field_40266", "JUNGLE_HANGING_SIGN", "f_244263_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_HANGING_SIGN
    [[maybe_unused]] static void set_field_JUNGLE_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("df", "JUNGLE_HANGING_SIGN", "field_40266", "JUNGLE_HANGING_SIGN", "f_244263_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_DARK_OAK_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dg", "DARK_OAK_HANGING_SIGN", "field_40267", "DARK_OAK_HANGING_SIGN", "f_243960_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_HANGING_SIGN
    [[maybe_unused]] static void set_field_DARK_OAK_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dg", "DARK_OAK_HANGING_SIGN", "field_40267", "DARK_OAK_HANGING_SIGN", "f_243960_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_CRIMSON_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dh", "CRIMSON_HANGING_SIGN", "field_40268", "CRIMSON_HANGING_SIGN", "f_244147_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_HANGING_SIGN
    [[maybe_unused]] static void set_field_CRIMSON_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dh", "CRIMSON_HANGING_SIGN", "field_40268", "CRIMSON_HANGING_SIGN", "f_244147_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_WARPED_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("di", "WARPED_HANGING_SIGN", "field_40269", "WARPED_HANGING_SIGN", "f_244396_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_HANGING_SIGN
    [[maybe_unused]] static void set_field_WARPED_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("di", "WARPED_HANGING_SIGN", "field_40269", "WARPED_HANGING_SIGN", "f_244396_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_MANGROVE_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dj", "MANGROVE_HANGING_SIGN", "field_40270", "MANGROVE_HANGING_SIGN", "f_244485_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_HANGING_SIGN
    [[maybe_unused]] static void set_field_MANGROVE_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dj", "MANGROVE_HANGING_SIGN", "field_40270", "MANGROVE_HANGING_SIGN", "f_244485_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_BAMBOO_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dk", "BAMBOO_HANGING_SIGN", "field_40271", "BAMBOO_HANGING_SIGN", "f_244091_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_HANGING_SIGN
    [[maybe_unused]] static void set_field_BAMBOO_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dk", "BAMBOO_HANGING_SIGN", "field_40271", "BAMBOO_HANGING_SIGN", "f_244091_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_WALL_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_OAK_WALL_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dl", "OAK_WALL_HANGING_SIGN", "field_40272", "OAK_WALL_HANGING_SIGN", "f_244093_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_WALL_HANGING_SIGN
    [[maybe_unused]] static void set_field_OAK_WALL_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dl", "OAK_WALL_HANGING_SIGN", "field_40272", "OAK_WALL_HANGING_SIGN", "f_244093_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_WALL_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_SPRUCE_WALL_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dm", "SPRUCE_WALL_HANGING_SIGN", "field_40273", "SPRUCE_WALL_HANGING_SIGN", "f_243895_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_WALL_HANGING_SIGN
    [[maybe_unused]] static void set_field_SPRUCE_WALL_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dm", "SPRUCE_WALL_HANGING_SIGN", "field_40273", "SPRUCE_WALL_HANGING_SIGN", "f_243895_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_WALL_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_BIRCH_WALL_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dn", "BIRCH_WALL_HANGING_SIGN", "field_40274", "BIRCH_WALL_HANGING_SIGN", "f_244296_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_WALL_HANGING_SIGN
    [[maybe_unused]] static void set_field_BIRCH_WALL_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dn", "BIRCH_WALL_HANGING_SIGN", "field_40274", "BIRCH_WALL_HANGING_SIGN", "f_244296_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_WALL_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_ACACIA_WALL_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("do", "ACACIA_WALL_HANGING_SIGN", "field_40275", "ACACIA_WALL_HANGING_SIGN", "f_243773_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_WALL_HANGING_SIGN
    [[maybe_unused]] static void set_field_ACACIA_WALL_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("do", "ACACIA_WALL_HANGING_SIGN", "field_40275", "ACACIA_WALL_HANGING_SIGN", "f_243773_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_WALL_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_CHERRY_WALL_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dp", "CHERRY_WALL_HANGING_SIGN", "field_42739", "CHERRY_WALL_HANGING_SIGN", "f_271427_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_WALL_HANGING_SIGN
    [[maybe_unused]] static void set_field_CHERRY_WALL_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dp", "CHERRY_WALL_HANGING_SIGN", "field_42739", "CHERRY_WALL_HANGING_SIGN", "f_271427_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_WALL_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_JUNGLE_WALL_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dq", "JUNGLE_WALL_HANGING_SIGN", "field_40278", "JUNGLE_WALL_HANGING_SIGN", "f_243897_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_WALL_HANGING_SIGN
    [[maybe_unused]] static void set_field_JUNGLE_WALL_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dq", "JUNGLE_WALL_HANGING_SIGN", "field_40278", "JUNGLE_WALL_HANGING_SIGN", "f_243897_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_WALL_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_DARK_OAK_WALL_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dr", "DARK_OAK_WALL_HANGING_SIGN", "field_40279", "DARK_OAK_WALL_HANGING_SIGN", "f_243998_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_WALL_HANGING_SIGN
    [[maybe_unused]] static void set_field_DARK_OAK_WALL_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dr", "DARK_OAK_WALL_HANGING_SIGN", "field_40279", "DARK_OAK_WALL_HANGING_SIGN", "f_243998_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_WALL_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_MANGROVE_WALL_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ds", "MANGROVE_WALL_HANGING_SIGN", "field_40280", "MANGROVE_WALL_HANGING_SIGN", "f_244385_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_WALL_HANGING_SIGN
    [[maybe_unused]] static void set_field_MANGROVE_WALL_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ds", "MANGROVE_WALL_HANGING_SIGN", "field_40280", "MANGROVE_WALL_HANGING_SIGN", "f_244385_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_WALL_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_CRIMSON_WALL_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dt", "CRIMSON_WALL_HANGING_SIGN", "field_40281", "CRIMSON_WALL_HANGING_SIGN", "f_244281_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_WALL_HANGING_SIGN
    [[maybe_unused]] static void set_field_CRIMSON_WALL_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dt", "CRIMSON_WALL_HANGING_SIGN", "field_40281", "CRIMSON_WALL_HANGING_SIGN", "f_244281_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_WALL_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_WARPED_WALL_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("du", "WARPED_WALL_HANGING_SIGN", "field_40282", "WARPED_WALL_HANGING_SIGN", "f_244241_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_WALL_HANGING_SIGN
    [[maybe_unused]] static void set_field_WARPED_WALL_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("du", "WARPED_WALL_HANGING_SIGN", "field_40282", "WARPED_WALL_HANGING_SIGN", "f_244241_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_WALL_HANGING_SIGN
    [[maybe_unused]] static jobject get_field_BAMBOO_WALL_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dv", "BAMBOO_WALL_HANGING_SIGN", "field_40283", "BAMBOO_WALL_HANGING_SIGN", "f_244462_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_WALL_HANGING_SIGN
    [[maybe_unused]] static void set_field_BAMBOO_WALL_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dv", "BAMBOO_WALL_HANGING_SIGN", "field_40283", "BAMBOO_WALL_HANGING_SIGN", "f_244462_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LEVER
    [[maybe_unused]] static jobject get_field_LEVER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dw", "LEVER", "field_10363", "LEVER", "f_50164_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LEVER
    [[maybe_unused]] static void set_field_LEVER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dw", "LEVER", "field_10363", "LEVER", "f_50164_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STONE_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_STONE_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dx", "STONE_PRESSURE_PLATE", "field_10158", "STONE_PRESSURE_PLATE", "f_50165_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STONE_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_STONE_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dx", "STONE_PRESSURE_PLATE", "field_10158", "STONE_PRESSURE_PLATE", "f_50165_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#IRON_DOOR
    [[maybe_unused]] static jobject get_field_IRON_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dy", "IRON_DOOR", "field_9973", "IRON_DOOR", "f_50166_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#IRON_DOOR
    [[maybe_unused]] static void set_field_IRON_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dy", "IRON_DOOR", "field_9973", "IRON_DOOR", "f_50166_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_OAK_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dz", "OAK_PRESSURE_PLATE", "field_10484", "OAK_PRESSURE_PLATE", "f_50167_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_OAK_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dz", "OAK_PRESSURE_PLATE", "field_10484", "OAK_PRESSURE_PLATE", "f_50167_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_SPRUCE_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dA", "SPRUCE_PRESSURE_PLATE", "field_10332", "SPRUCE_PRESSURE_PLATE", "f_50168_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_SPRUCE_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dA", "SPRUCE_PRESSURE_PLATE", "field_10332", "SPRUCE_PRESSURE_PLATE", "f_50168_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_BIRCH_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dB", "BIRCH_PRESSURE_PLATE", "field_10592", "BIRCH_PRESSURE_PLATE", "f_50169_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_BIRCH_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dB", "BIRCH_PRESSURE_PLATE", "field_10592", "BIRCH_PRESSURE_PLATE", "f_50169_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_JUNGLE_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dC", "JUNGLE_PRESSURE_PLATE", "field_10026", "JUNGLE_PRESSURE_PLATE", "f_50170_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_JUNGLE_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dC", "JUNGLE_PRESSURE_PLATE", "field_10026", "JUNGLE_PRESSURE_PLATE", "f_50170_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_ACACIA_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dD", "ACACIA_PRESSURE_PLATE", "field_10397", "ACACIA_PRESSURE_PLATE", "f_50171_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_ACACIA_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dD", "ACACIA_PRESSURE_PLATE", "field_10397", "ACACIA_PRESSURE_PLATE", "f_50171_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_CHERRY_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dE", "CHERRY_PRESSURE_PLATE", "field_42737", "CHERRY_PRESSURE_PLATE", "f_271227_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_CHERRY_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dE", "CHERRY_PRESSURE_PLATE", "field_42737", "CHERRY_PRESSURE_PLATE", "f_271227_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_DARK_OAK_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dF", "DARK_OAK_PRESSURE_PLATE", "field_10470", "DARK_OAK_PRESSURE_PLATE", "f_50172_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_DARK_OAK_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dF", "DARK_OAK_PRESSURE_PLATE", "field_10470", "DARK_OAK_PRESSURE_PLATE", "f_50172_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_MANGROVE_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dG", "MANGROVE_PRESSURE_PLATE", "field_37553", "MANGROVE_PRESSURE_PLATE", "f_220840_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_MANGROVE_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dG", "MANGROVE_PRESSURE_PLATE", "field_37553", "MANGROVE_PRESSURE_PLATE", "f_220840_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_BAMBOO_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dH", "BAMBOO_PRESSURE_PLATE", "field_40284", "BAMBOO_PRESSURE_PLATE", "f_244183_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_BAMBOO_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dH", "BAMBOO_PRESSURE_PLATE", "field_40284", "BAMBOO_PRESSURE_PLATE", "f_244183_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#REDSTONE_ORE
    [[maybe_unused]] static jobject get_field_REDSTONE_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dI", "REDSTONE_ORE", "field_10080", "REDSTONE_ORE", "f_50173_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#REDSTONE_ORE
    [[maybe_unused]] static void set_field_REDSTONE_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dI", "REDSTONE_ORE", "field_10080", "REDSTONE_ORE", "f_50173_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_REDSTONE_ORE
    [[maybe_unused]] static jobject get_field_DEEPSLATE_REDSTONE_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dJ", "DEEPSLATE_REDSTONE_ORE", "field_29030", "DEEPSLATE_REDSTONE_ORE", "f_152473_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_REDSTONE_ORE
    [[maybe_unused]] static void set_field_DEEPSLATE_REDSTONE_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dJ", "DEEPSLATE_REDSTONE_ORE", "field_29030", "DEEPSLATE_REDSTONE_ORE", "f_152473_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#REDSTONE_TORCH
    [[maybe_unused]] static jobject get_field_REDSTONE_TORCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dK", "REDSTONE_TORCH", "field_10523", "REDSTONE_TORCH", "f_50174_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#REDSTONE_TORCH
    [[maybe_unused]] static void set_field_REDSTONE_TORCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dK", "REDSTONE_TORCH", "field_10523", "REDSTONE_TORCH", "f_50174_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#REDSTONE_WALL_TORCH
    [[maybe_unused]] static jobject get_field_REDSTONE_WALL_TORCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dL", "REDSTONE_WALL_TORCH", "field_10301", "REDSTONE_WALL_TORCH", "f_50123_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#REDSTONE_WALL_TORCH
    [[maybe_unused]] static void set_field_REDSTONE_WALL_TORCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dL", "REDSTONE_WALL_TORCH", "field_10301", "REDSTONE_WALL_TORCH", "f_50123_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STONE_BUTTON
    [[maybe_unused]] static jobject get_field_STONE_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dM", "STONE_BUTTON", "field_10494", "STONE_BUTTON", "f_50124_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STONE_BUTTON
    [[maybe_unused]] static void set_field_STONE_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dM", "STONE_BUTTON", "field_10494", "STONE_BUTTON", "f_50124_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SNOW
    [[maybe_unused]] static jobject get_field_SNOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dN", "SNOW", "field_10477", "SNOW", "f_50125_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SNOW
    [[maybe_unused]] static void set_field_SNOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dN", "SNOW", "field_10477", "SNOW", "f_50125_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ICE
    [[maybe_unused]] static jobject get_field_ICE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dO", "ICE", "field_10295", "ICE", "f_50126_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ICE
    [[maybe_unused]] static void set_field_ICE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dO", "ICE", "field_10295", "ICE", "f_50126_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SNOW_BLOCK
    [[maybe_unused]] static jobject get_field_SNOW_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dP", "SNOW_BLOCK", "field_10491", "SNOW_BLOCK", "f_50127_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SNOW_BLOCK
    [[maybe_unused]] static void set_field_SNOW_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dP", "SNOW_BLOCK", "field_10491", "SNOW_BLOCK", "f_50127_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CACTUS
    [[maybe_unused]] static jobject get_field_CACTUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dQ", "CACTUS", "field_10029", "CACTUS", "f_50128_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CACTUS
    [[maybe_unused]] static void set_field_CACTUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dQ", "CACTUS", "field_10029", "CACTUS", "f_50128_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CLAY
    [[maybe_unused]] static jobject get_field_CLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dR", "CLAY", "field_10460", "CLAY", "f_50129_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CLAY
    [[maybe_unused]] static void set_field_CLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dR", "CLAY", "field_10460", "CLAY", "f_50129_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SUGAR_CANE
    [[maybe_unused]] static jobject get_field_SUGAR_CANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dS", "SUGAR_CANE", "field_10424", "SUGAR_CANE", "f_50130_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SUGAR_CANE
    [[maybe_unused]] static void set_field_SUGAR_CANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dS", "SUGAR_CANE", "field_10424", "SUGAR_CANE", "f_50130_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUKEBOX
    [[maybe_unused]] static jobject get_field_JUKEBOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dT", "JUKEBOX", "field_10223", "JUKEBOX", "f_50131_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUKEBOX
    [[maybe_unused]] static void set_field_JUKEBOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dT", "JUKEBOX", "field_10223", "JUKEBOX", "f_50131_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_FENCE
    [[maybe_unused]] static jobject get_field_OAK_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dU", "OAK_FENCE", "field_10620", "OAK_FENCE", "f_50132_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_FENCE
    [[maybe_unused]] static void set_field_OAK_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dU", "OAK_FENCE", "field_10620", "OAK_FENCE", "f_50132_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHERRACK
    [[maybe_unused]] static jobject get_field_NETHERRACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dV", "NETHERRACK", "field_10515", "NETHERRACK", "f_50134_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHERRACK
    [[maybe_unused]] static void set_field_NETHERRACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dV", "NETHERRACK", "field_10515", "NETHERRACK", "f_50134_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SOUL_SAND
    [[maybe_unused]] static jobject get_field_SOUL_SAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dW", "SOUL_SAND", "field_10114", "SOUL_SAND", "f_50135_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SOUL_SAND
    [[maybe_unused]] static void set_field_SOUL_SAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dW", "SOUL_SAND", "field_10114", "SOUL_SAND", "f_50135_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SOUL_SOIL
    [[maybe_unused]] static jobject get_field_SOUL_SOIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dX", "SOUL_SOIL", "field_22090", "SOUL_SOIL", "f_50136_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SOUL_SOIL
    [[maybe_unused]] static void set_field_SOUL_SOIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dX", "SOUL_SOIL", "field_22090", "SOUL_SOIL", "f_50136_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BASALT
    [[maybe_unused]] static jobject get_field_BASALT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dY", "BASALT", "field_22091", "BASALT", "f_50137_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BASALT
    [[maybe_unused]] static void set_field_BASALT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dY", "BASALT", "field_22091", "BASALT", "f_50137_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_BASALT
    [[maybe_unused]] static jobject get_field_POLISHED_BASALT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dZ", "POLISHED_BASALT", "field_23151", "POLISHED_BASALT", "f_50138_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_BASALT
    [[maybe_unused]] static void set_field_POLISHED_BASALT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("dZ", "POLISHED_BASALT", "field_23151", "POLISHED_BASALT", "f_50138_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SOUL_TORCH
    [[maybe_unused]] static jobject get_field_SOUL_TORCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ea", "SOUL_TORCH", "field_22092", "SOUL_TORCH", "f_50139_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SOUL_TORCH
    [[maybe_unused]] static void set_field_SOUL_TORCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ea", "SOUL_TORCH", "field_22092", "SOUL_TORCH", "f_50139_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SOUL_WALL_TORCH
    [[maybe_unused]] static jobject get_field_SOUL_WALL_TORCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eb", "SOUL_WALL_TORCH", "field_22093", "SOUL_WALL_TORCH", "f_50140_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SOUL_WALL_TORCH
    [[maybe_unused]] static void set_field_SOUL_WALL_TORCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eb", "SOUL_WALL_TORCH", "field_22093", "SOUL_WALL_TORCH", "f_50140_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GLOWSTONE
    [[maybe_unused]] static jobject get_field_GLOWSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ec", "GLOWSTONE", "field_10171", "GLOWSTONE", "f_50141_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GLOWSTONE
    [[maybe_unused]] static void set_field_GLOWSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ec", "GLOWSTONE", "field_10171", "GLOWSTONE", "f_50141_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHER_PORTAL
    [[maybe_unused]] static jobject get_field_NETHER_PORTAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ed", "NETHER_PORTAL", "field_10316", "NETHER_PORTAL", "f_50142_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHER_PORTAL
    [[maybe_unused]] static void set_field_NETHER_PORTAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ed", "NETHER_PORTAL", "field_10316", "NETHER_PORTAL", "f_50142_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CARVED_PUMPKIN
    [[maybe_unused]] static jobject get_field_CARVED_PUMPKIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ee", "CARVED_PUMPKIN", "field_10147", "CARVED_PUMPKIN", "f_50143_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CARVED_PUMPKIN
    [[maybe_unused]] static void set_field_CARVED_PUMPKIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ee", "CARVED_PUMPKIN", "field_10147", "CARVED_PUMPKIN", "f_50143_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JACK_O_LANTERN
    [[maybe_unused]] static jobject get_field_JACK_O_LANTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ef", "JACK_O_LANTERN", "field_10009", "JACK_O_LANTERN", "f_50144_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JACK_O_LANTERN
    [[maybe_unused]] static void set_field_JACK_O_LANTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ef", "JACK_O_LANTERN", "field_10009", "JACK_O_LANTERN", "f_50144_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CAKE
    [[maybe_unused]] static jobject get_field_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eg", "CAKE", "field_10183", "CAKE", "f_50145_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CAKE
    [[maybe_unused]] static void set_field_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eg", "CAKE", "field_10183", "CAKE", "f_50145_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#REPEATER
    [[maybe_unused]] static jobject get_field_REPEATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eh", "REPEATER", "field_10450", "REPEATER", "f_50146_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#REPEATER
    [[maybe_unused]] static void set_field_REPEATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eh", "REPEATER", "field_10450", "REPEATER", "f_50146_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_WHITE_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ei", "WHITE_STAINED_GLASS", "field_10087", "WHITE_STAINED_GLASS", "f_50147_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_STAINED_GLASS
    [[maybe_unused]] static void set_field_WHITE_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ei", "WHITE_STAINED_GLASS", "field_10087", "WHITE_STAINED_GLASS", "f_50147_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_ORANGE_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ej", "ORANGE_STAINED_GLASS", "field_10227", "ORANGE_STAINED_GLASS", "f_50148_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_STAINED_GLASS
    [[maybe_unused]] static void set_field_ORANGE_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ej", "ORANGE_STAINED_GLASS", "field_10227", "ORANGE_STAINED_GLASS", "f_50148_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_MAGENTA_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ek", "MAGENTA_STAINED_GLASS", "field_10574", "MAGENTA_STAINED_GLASS", "f_50202_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_STAINED_GLASS
    [[maybe_unused]] static void set_field_MAGENTA_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ek", "MAGENTA_STAINED_GLASS", "field_10574", "MAGENTA_STAINED_GLASS", "f_50202_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("el", "LIGHT_BLUE_STAINED_GLASS", "field_10271", "LIGHT_BLUE_STAINED_GLASS", "f_50203_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_STAINED_GLASS
    [[maybe_unused]] static void set_field_LIGHT_BLUE_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("el", "LIGHT_BLUE_STAINED_GLASS", "field_10271", "LIGHT_BLUE_STAINED_GLASS", "f_50203_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_YELLOW_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("em", "YELLOW_STAINED_GLASS", "field_10049", "YELLOW_STAINED_GLASS", "f_50204_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_STAINED_GLASS
    [[maybe_unused]] static void set_field_YELLOW_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("em", "YELLOW_STAINED_GLASS", "field_10049", "YELLOW_STAINED_GLASS", "f_50204_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_LIME_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("en", "LIME_STAINED_GLASS", "field_10157", "LIME_STAINED_GLASS", "f_50205_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_STAINED_GLASS
    [[maybe_unused]] static void set_field_LIME_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("en", "LIME_STAINED_GLASS", "field_10157", "LIME_STAINED_GLASS", "f_50205_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_PINK_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eo", "PINK_STAINED_GLASS", "field_10317", "PINK_STAINED_GLASS", "f_50206_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_STAINED_GLASS
    [[maybe_unused]] static void set_field_PINK_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eo", "PINK_STAINED_GLASS", "field_10317", "PINK_STAINED_GLASS", "f_50206_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_GRAY_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ep", "GRAY_STAINED_GLASS", "field_10555", "GRAY_STAINED_GLASS", "f_50207_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_STAINED_GLASS
    [[maybe_unused]] static void set_field_GRAY_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ep", "GRAY_STAINED_GLASS", "field_10555", "GRAY_STAINED_GLASS", "f_50207_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eq", "LIGHT_GRAY_STAINED_GLASS", "field_9996", "LIGHT_GRAY_STAINED_GLASS", "f_50208_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_STAINED_GLASS
    [[maybe_unused]] static void set_field_LIGHT_GRAY_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eq", "LIGHT_GRAY_STAINED_GLASS", "field_9996", "LIGHT_GRAY_STAINED_GLASS", "f_50208_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_CYAN_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("er", "CYAN_STAINED_GLASS", "field_10248", "CYAN_STAINED_GLASS", "f_50209_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_STAINED_GLASS
    [[maybe_unused]] static void set_field_CYAN_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("er", "CYAN_STAINED_GLASS", "field_10248", "CYAN_STAINED_GLASS", "f_50209_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_PURPLE_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("es", "PURPLE_STAINED_GLASS", "field_10399", "PURPLE_STAINED_GLASS", "f_50210_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_STAINED_GLASS
    [[maybe_unused]] static void set_field_PURPLE_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("es", "PURPLE_STAINED_GLASS", "field_10399", "PURPLE_STAINED_GLASS", "f_50210_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_BLUE_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("et", "BLUE_STAINED_GLASS", "field_10060", "BLUE_STAINED_GLASS", "f_50211_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_STAINED_GLASS
    [[maybe_unused]] static void set_field_BLUE_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("et", "BLUE_STAINED_GLASS", "field_10060", "BLUE_STAINED_GLASS", "f_50211_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_BROWN_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eu", "BROWN_STAINED_GLASS", "field_10073", "BROWN_STAINED_GLASS", "f_50212_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_STAINED_GLASS
    [[maybe_unused]] static void set_field_BROWN_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eu", "BROWN_STAINED_GLASS", "field_10073", "BROWN_STAINED_GLASS", "f_50212_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_GREEN_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ev", "GREEN_STAINED_GLASS", "field_10357", "GREEN_STAINED_GLASS", "f_50213_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_STAINED_GLASS
    [[maybe_unused]] static void set_field_GREEN_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ev", "GREEN_STAINED_GLASS", "field_10357", "GREEN_STAINED_GLASS", "f_50213_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_RED_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ew", "RED_STAINED_GLASS", "field_10272", "RED_STAINED_GLASS", "f_50214_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_STAINED_GLASS
    [[maybe_unused]] static void set_field_RED_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ew", "RED_STAINED_GLASS", "field_10272", "RED_STAINED_GLASS", "f_50214_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_STAINED_GLASS
    [[maybe_unused]] static jobject get_field_BLACK_STAINED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ex", "BLACK_STAINED_GLASS", "field_9997", "BLACK_STAINED_GLASS", "f_50215_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_STAINED_GLASS
    [[maybe_unused]] static void set_field_BLACK_STAINED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ex", "BLACK_STAINED_GLASS", "field_9997", "BLACK_STAINED_GLASS", "f_50215_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_TRAPDOOR
    [[maybe_unused]] static jobject get_field_OAK_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ey", "OAK_TRAPDOOR", "field_10137", "OAK_TRAPDOOR", "f_50216_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_TRAPDOOR
    [[maybe_unused]] static void set_field_OAK_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ey", "OAK_TRAPDOOR", "field_10137", "OAK_TRAPDOOR", "f_50216_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_TRAPDOOR
    [[maybe_unused]] static jobject get_field_SPRUCE_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ez", "SPRUCE_TRAPDOOR", "field_10323", "SPRUCE_TRAPDOOR", "f_50217_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_TRAPDOOR
    [[maybe_unused]] static void set_field_SPRUCE_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ez", "SPRUCE_TRAPDOOR", "field_10323", "SPRUCE_TRAPDOOR", "f_50217_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_TRAPDOOR
    [[maybe_unused]] static jobject get_field_BIRCH_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eA", "BIRCH_TRAPDOOR", "field_10486", "BIRCH_TRAPDOOR", "f_50218_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_TRAPDOOR
    [[maybe_unused]] static void set_field_BIRCH_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eA", "BIRCH_TRAPDOOR", "field_10486", "BIRCH_TRAPDOOR", "f_50218_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_TRAPDOOR
    [[maybe_unused]] static jobject get_field_JUNGLE_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eB", "JUNGLE_TRAPDOOR", "field_10017", "JUNGLE_TRAPDOOR", "f_50219_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_TRAPDOOR
    [[maybe_unused]] static void set_field_JUNGLE_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eB", "JUNGLE_TRAPDOOR", "field_10017", "JUNGLE_TRAPDOOR", "f_50219_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_TRAPDOOR
    [[maybe_unused]] static jobject get_field_ACACIA_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eC", "ACACIA_TRAPDOOR", "field_10608", "ACACIA_TRAPDOOR", "f_50220_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_TRAPDOOR
    [[maybe_unused]] static void set_field_ACACIA_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eC", "ACACIA_TRAPDOOR", "field_10608", "ACACIA_TRAPDOOR", "f_50220_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_TRAPDOOR
    [[maybe_unused]] static jobject get_field_CHERRY_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eD", "CHERRY_TRAPDOOR", "field_42740", "CHERRY_TRAPDOOR", "f_271350_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_TRAPDOOR
    [[maybe_unused]] static void set_field_CHERRY_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eD", "CHERRY_TRAPDOOR", "field_42740", "CHERRY_TRAPDOOR", "f_271350_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_TRAPDOOR
    [[maybe_unused]] static jobject get_field_DARK_OAK_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eE", "DARK_OAK_TRAPDOOR", "field_10246", "DARK_OAK_TRAPDOOR", "f_50221_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_TRAPDOOR
    [[maybe_unused]] static void set_field_DARK_OAK_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eE", "DARK_OAK_TRAPDOOR", "field_10246", "DARK_OAK_TRAPDOOR", "f_50221_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_TRAPDOOR
    [[maybe_unused]] static jobject get_field_MANGROVE_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eF", "MANGROVE_TRAPDOOR", "field_37555", "MANGROVE_TRAPDOOR", "f_220842_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_TRAPDOOR
    [[maybe_unused]] static void set_field_MANGROVE_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eF", "MANGROVE_TRAPDOOR", "field_37555", "MANGROVE_TRAPDOOR", "f_220842_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_TRAPDOOR
    [[maybe_unused]] static jobject get_field_BAMBOO_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eG", "BAMBOO_TRAPDOOR", "field_40285", "BAMBOO_TRAPDOOR", "f_244549_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_TRAPDOOR
    [[maybe_unused]] static void set_field_BAMBOO_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eG", "BAMBOO_TRAPDOOR", "field_40285", "BAMBOO_TRAPDOOR", "f_244549_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STONE_BRICKS
    [[maybe_unused]] static jobject get_field_STONE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eH", "STONE_BRICKS", "field_10056", "STONE_BRICKS", "f_50222_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STONE_BRICKS
    [[maybe_unused]] static void set_field_STONE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eH", "STONE_BRICKS", "field_10056", "STONE_BRICKS", "f_50222_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MOSSY_STONE_BRICKS
    [[maybe_unused]] static jobject get_field_MOSSY_STONE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eI", "MOSSY_STONE_BRICKS", "field_10065", "MOSSY_STONE_BRICKS", "f_50223_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MOSSY_STONE_BRICKS
    [[maybe_unused]] static void set_field_MOSSY_STONE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eI", "MOSSY_STONE_BRICKS", "field_10065", "MOSSY_STONE_BRICKS", "f_50223_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRACKED_STONE_BRICKS
    [[maybe_unused]] static jobject get_field_CRACKED_STONE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eJ", "CRACKED_STONE_BRICKS", "field_10416", "CRACKED_STONE_BRICKS", "f_50224_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRACKED_STONE_BRICKS
    [[maybe_unused]] static void set_field_CRACKED_STONE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eJ", "CRACKED_STONE_BRICKS", "field_10416", "CRACKED_STONE_BRICKS", "f_50224_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHISELED_STONE_BRICKS
    [[maybe_unused]] static jobject get_field_CHISELED_STONE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eK", "CHISELED_STONE_BRICKS", "field_10552", "CHISELED_STONE_BRICKS", "f_50225_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHISELED_STONE_BRICKS
    [[maybe_unused]] static void set_field_CHISELED_STONE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eK", "CHISELED_STONE_BRICKS", "field_10552", "CHISELED_STONE_BRICKS", "f_50225_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PACKED_MUD
    [[maybe_unused]] static jobject get_field_PACKED_MUD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eL", "PACKED_MUD", "field_37556", "PACKED_MUD", "f_220843_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PACKED_MUD
    [[maybe_unused]] static void set_field_PACKED_MUD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eL", "PACKED_MUD", "field_37556", "PACKED_MUD", "f_220843_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MUD_BRICKS
    [[maybe_unused]] static jobject get_field_MUD_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eM", "MUD_BRICKS", "field_37557", "MUD_BRICKS", "f_220844_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MUD_BRICKS
    [[maybe_unused]] static void set_field_MUD_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eM", "MUD_BRICKS", "field_37557", "MUD_BRICKS", "f_220844_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#INFESTED_STONE
    [[maybe_unused]] static jobject get_field_INFESTED_STONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eN", "INFESTED_STONE", "field_10277", "INFESTED_STONE", "f_50226_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#INFESTED_STONE
    [[maybe_unused]] static void set_field_INFESTED_STONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eN", "INFESTED_STONE", "field_10277", "INFESTED_STONE", "f_50226_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#INFESTED_COBBLESTONE
    [[maybe_unused]] static jobject get_field_INFESTED_COBBLESTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eO", "INFESTED_COBBLESTONE", "field_10492", "INFESTED_COBBLESTONE", "f_50227_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#INFESTED_COBBLESTONE
    [[maybe_unused]] static void set_field_INFESTED_COBBLESTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eO", "INFESTED_COBBLESTONE", "field_10492", "INFESTED_COBBLESTONE", "f_50227_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#INFESTED_STONE_BRICKS
    [[maybe_unused]] static jobject get_field_INFESTED_STONE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eP", "INFESTED_STONE_BRICKS", "field_10387", "INFESTED_STONE_BRICKS", "f_50176_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#INFESTED_STONE_BRICKS
    [[maybe_unused]] static void set_field_INFESTED_STONE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eP", "INFESTED_STONE_BRICKS", "field_10387", "INFESTED_STONE_BRICKS", "f_50176_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#INFESTED_MOSSY_STONE_BRICKS
    [[maybe_unused]] static jobject get_field_INFESTED_MOSSY_STONE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eQ", "INFESTED_MOSSY_STONE_BRICKS", "field_10480", "INFESTED_MOSSY_STONE_BRICKS", "f_50177_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#INFESTED_MOSSY_STONE_BRICKS
    [[maybe_unused]] static void set_field_INFESTED_MOSSY_STONE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eQ", "INFESTED_MOSSY_STONE_BRICKS", "field_10480", "INFESTED_MOSSY_STONE_BRICKS", "f_50177_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#INFESTED_CRACKED_STONE_BRICKS
    [[maybe_unused]] static jobject get_field_INFESTED_CRACKED_STONE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eR", "INFESTED_CRACKED_STONE_BRICKS", "field_10100", "INFESTED_CRACKED_STONE_BRICKS", "f_50178_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#INFESTED_CRACKED_STONE_BRICKS
    [[maybe_unused]] static void set_field_INFESTED_CRACKED_STONE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eR", "INFESTED_CRACKED_STONE_BRICKS", "field_10100", "INFESTED_CRACKED_STONE_BRICKS", "f_50178_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#INFESTED_CHISELED_STONE_BRICKS
    [[maybe_unused]] static jobject get_field_INFESTED_CHISELED_STONE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eS", "INFESTED_CHISELED_STONE_BRICKS", "field_10176", "INFESTED_CHISELED_STONE_BRICKS", "f_50179_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#INFESTED_CHISELED_STONE_BRICKS
    [[maybe_unused]] static void set_field_INFESTED_CHISELED_STONE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eS", "INFESTED_CHISELED_STONE_BRICKS", "field_10176", "INFESTED_CHISELED_STONE_BRICKS", "f_50179_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_MUSHROOM_BLOCK
    [[maybe_unused]] static jobject get_field_BROWN_MUSHROOM_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eT", "BROWN_MUSHROOM_BLOCK", "field_10580", "BROWN_MUSHROOM_BLOCK", "f_50180_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_MUSHROOM_BLOCK
    [[maybe_unused]] static void set_field_BROWN_MUSHROOM_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eT", "BROWN_MUSHROOM_BLOCK", "field_10580", "BROWN_MUSHROOM_BLOCK", "f_50180_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_MUSHROOM_BLOCK
    [[maybe_unused]] static jobject get_field_RED_MUSHROOM_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eU", "RED_MUSHROOM_BLOCK", "field_10240", "RED_MUSHROOM_BLOCK", "f_50181_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_MUSHROOM_BLOCK
    [[maybe_unused]] static void set_field_RED_MUSHROOM_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eU", "RED_MUSHROOM_BLOCK", "field_10240", "RED_MUSHROOM_BLOCK", "f_50181_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MUSHROOM_STEM
    [[maybe_unused]] static jobject get_field_MUSHROOM_STEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eV", "MUSHROOM_STEM", "field_10556", "MUSHROOM_STEM", "f_50182_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MUSHROOM_STEM
    [[maybe_unused]] static void set_field_MUSHROOM_STEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eV", "MUSHROOM_STEM", "field_10556", "MUSHROOM_STEM", "f_50182_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#IRON_BARS
    [[maybe_unused]] static jobject get_field_IRON_BARS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eW", "IRON_BARS", "field_10576", "IRON_BARS", "f_50183_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#IRON_BARS
    [[maybe_unused]] static void set_field_IRON_BARS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eW", "IRON_BARS", "field_10576", "IRON_BARS", "f_50183_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHAIN
    [[maybe_unused]] static jobject get_field_CHAIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eX", "CHAIN", "field_23985", "CHAIN", "f_50184_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHAIN
    [[maybe_unused]] static void set_field_CHAIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eX", "CHAIN", "field_23985", "CHAIN", "f_50184_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GLASS_PANE
    [[maybe_unused]] static jobject get_field_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eY", "GLASS_PANE", "field_10285", "GLASS_PANE", "f_50185_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GLASS_PANE
    [[maybe_unused]] static void set_field_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eY", "GLASS_PANE", "field_10285", "GLASS_PANE", "f_50185_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PUMPKIN
    [[maybe_unused]] static jobject get_field_PUMPKIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eZ", "PUMPKIN", "field_46282", "PUMPKIN", "f_50133_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PUMPKIN
    [[maybe_unused]] static void set_field_PUMPKIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("eZ", "PUMPKIN", "field_46282", "PUMPKIN", "f_50133_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MELON
    [[maybe_unused]] static jobject get_field_MELON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fa", "MELON", "field_46283", "MELON", "f_50186_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MELON
    [[maybe_unused]] static void set_field_MELON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fa", "MELON", "field_46283", "MELON", "f_50186_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ATTACHED_PUMPKIN_STEM
    [[maybe_unused]] static jobject get_field_ATTACHED_PUMPKIN_STEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fb", "ATTACHED_PUMPKIN_STEM", "field_46284", "ATTACHED_PUMPKIN_STEM", "f_50187_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ATTACHED_PUMPKIN_STEM
    [[maybe_unused]] static void set_field_ATTACHED_PUMPKIN_STEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fb", "ATTACHED_PUMPKIN_STEM", "field_46284", "ATTACHED_PUMPKIN_STEM", "f_50187_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ATTACHED_MELON_STEM
    [[maybe_unused]] static jobject get_field_ATTACHED_MELON_STEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fc", "ATTACHED_MELON_STEM", "field_46285", "ATTACHED_MELON_STEM", "f_50188_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ATTACHED_MELON_STEM
    [[maybe_unused]] static void set_field_ATTACHED_MELON_STEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fc", "ATTACHED_MELON_STEM", "field_46285", "ATTACHED_MELON_STEM", "f_50188_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PUMPKIN_STEM
    [[maybe_unused]] static jobject get_field_PUMPKIN_STEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fd", "PUMPKIN_STEM", "field_46286", "PUMPKIN_STEM", "f_50189_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PUMPKIN_STEM
    [[maybe_unused]] static void set_field_PUMPKIN_STEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fd", "PUMPKIN_STEM", "field_46286", "PUMPKIN_STEM", "f_50189_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MELON_STEM
    [[maybe_unused]] static jobject get_field_MELON_STEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fe", "MELON_STEM", "field_46287", "MELON_STEM", "f_50190_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MELON_STEM
    [[maybe_unused]] static void set_field_MELON_STEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fe", "MELON_STEM", "field_46287", "MELON_STEM", "f_50190_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#VINE
    [[maybe_unused]] static jobject get_field_VINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ff", "VINE", "field_10597", "VINE", "f_50191_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#VINE
    [[maybe_unused]] static void set_field_VINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ff", "VINE", "field_10597", "VINE", "f_50191_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GLOW_LICHEN
    [[maybe_unused]] static jobject get_field_GLOW_LICHEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fg", "GLOW_LICHEN", "field_28411", "GLOW_LICHEN", "f_152475_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GLOW_LICHEN
    [[maybe_unused]] static void set_field_GLOW_LICHEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fg", "GLOW_LICHEN", "field_28411", "GLOW_LICHEN", "f_152475_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_FENCE_GATE
    [[maybe_unused]] static jobject get_field_OAK_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fh", "OAK_FENCE_GATE", "field_10188", "OAK_FENCE_GATE", "f_50192_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_FENCE_GATE
    [[maybe_unused]] static void set_field_OAK_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fh", "OAK_FENCE_GATE", "field_10188", "OAK_FENCE_GATE", "f_50192_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BRICK_STAIRS
    [[maybe_unused]] static jobject get_field_BRICK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fi", "BRICK_STAIRS", "field_10089", "BRICK_STAIRS", "f_50193_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BRICK_STAIRS
    [[maybe_unused]] static void set_field_BRICK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fi", "BRICK_STAIRS", "field_10089", "BRICK_STAIRS", "f_50193_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STONE_BRICK_STAIRS
    [[maybe_unused]] static jobject get_field_STONE_BRICK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fj", "STONE_BRICK_STAIRS", "field_10392", "STONE_BRICK_STAIRS", "f_50194_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STONE_BRICK_STAIRS
    [[maybe_unused]] static void set_field_STONE_BRICK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fj", "STONE_BRICK_STAIRS", "field_10392", "STONE_BRICK_STAIRS", "f_50194_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MUD_BRICK_STAIRS
    [[maybe_unused]] static jobject get_field_MUD_BRICK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fk", "MUD_BRICK_STAIRS", "field_37558", "MUD_BRICK_STAIRS", "f_220845_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MUD_BRICK_STAIRS
    [[maybe_unused]] static void set_field_MUD_BRICK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fk", "MUD_BRICK_STAIRS", "field_37558", "MUD_BRICK_STAIRS", "f_220845_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MYCELIUM
    [[maybe_unused]] static jobject get_field_MYCELIUM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fl", "MYCELIUM", "field_10402", "MYCELIUM", "f_50195_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MYCELIUM
    [[maybe_unused]] static void set_field_MYCELIUM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fl", "MYCELIUM", "field_10402", "MYCELIUM", "f_50195_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LILY_PAD
    [[maybe_unused]] static jobject get_field_LILY_PAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fm", "LILY_PAD", "field_10588", "LILY_PAD", "f_50196_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LILY_PAD
    [[maybe_unused]] static void set_field_LILY_PAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fm", "LILY_PAD", "field_10588", "LILY_PAD", "f_50196_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHER_BRICKS
    [[maybe_unused]] static jobject get_field_NETHER_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fn", "NETHER_BRICKS", "field_10266", "NETHER_BRICKS", "f_50197_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHER_BRICKS
    [[maybe_unused]] static void set_field_NETHER_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fn", "NETHER_BRICKS", "field_10266", "NETHER_BRICKS", "f_50197_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHER_BRICK_FENCE
    [[maybe_unused]] static jobject get_field_NETHER_BRICK_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fo", "NETHER_BRICK_FENCE", "field_10364", "NETHER_BRICK_FENCE", "f_50198_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHER_BRICK_FENCE
    [[maybe_unused]] static void set_field_NETHER_BRICK_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fo", "NETHER_BRICK_FENCE", "field_10364", "NETHER_BRICK_FENCE", "f_50198_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHER_BRICK_STAIRS
    [[maybe_unused]] static jobject get_field_NETHER_BRICK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fp", "NETHER_BRICK_STAIRS", "field_10159", "NETHER_BRICK_STAIRS", "f_50199_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHER_BRICK_STAIRS
    [[maybe_unused]] static void set_field_NETHER_BRICK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fp", "NETHER_BRICK_STAIRS", "field_10159", "NETHER_BRICK_STAIRS", "f_50199_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHER_WART
    [[maybe_unused]] static jobject get_field_NETHER_WART() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fq", "NETHER_WART", "field_9974", "NETHER_WART", "f_50200_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHER_WART
    [[maybe_unused]] static void set_field_NETHER_WART(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fq", "NETHER_WART", "field_9974", "NETHER_WART", "f_50200_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ENCHANTING_TABLE
    [[maybe_unused]] static jobject get_field_ENCHANTING_TABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fr", "ENCHANTING_TABLE", "field_10485", "ENCHANTING_TABLE", "f_50201_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ENCHANTING_TABLE
    [[maybe_unused]] static void set_field_ENCHANTING_TABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fr", "ENCHANTING_TABLE", "field_10485", "ENCHANTING_TABLE", "f_50201_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BREWING_STAND
    [[maybe_unused]] static jobject get_field_BREWING_STAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fs", "BREWING_STAND", "field_10333", "BREWING_STAND", "f_50255_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BREWING_STAND
    [[maybe_unused]] static void set_field_BREWING_STAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fs", "BREWING_STAND", "field_10333", "BREWING_STAND", "f_50255_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CAULDRON
    [[maybe_unused]] static jobject get_field_CAULDRON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ft", "CAULDRON", "field_10593", "CAULDRON", "f_50256_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CAULDRON
    [[maybe_unused]] static void set_field_CAULDRON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ft", "CAULDRON", "field_10593", "CAULDRON", "f_50256_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WATER_CAULDRON
    [[maybe_unused]] static jobject get_field_WATER_CAULDRON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fu", "WATER_CAULDRON", "field_27097", "WATER_CAULDRON", "f_152476_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WATER_CAULDRON
    [[maybe_unused]] static void set_field_WATER_CAULDRON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fu", "WATER_CAULDRON", "field_27097", "WATER_CAULDRON", "f_152476_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LAVA_CAULDRON
    [[maybe_unused]] static jobject get_field_LAVA_CAULDRON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fv", "LAVA_CAULDRON", "field_27098", "LAVA_CAULDRON", "f_152477_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LAVA_CAULDRON
    [[maybe_unused]] static void set_field_LAVA_CAULDRON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fv", "LAVA_CAULDRON", "field_27098", "LAVA_CAULDRON", "f_152477_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POWDER_SNOW_CAULDRON
    [[maybe_unused]] static jobject get_field_POWDER_SNOW_CAULDRON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fw", "POWDER_SNOW_CAULDRON", "field_27878", "POWDER_SNOW_CAULDRON", "f_152478_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POWDER_SNOW_CAULDRON
    [[maybe_unused]] static void set_field_POWDER_SNOW_CAULDRON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fw", "POWDER_SNOW_CAULDRON", "field_27878", "POWDER_SNOW_CAULDRON", "f_152478_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#END_PORTAL
    [[maybe_unused]] static jobject get_field_END_PORTAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fx", "END_PORTAL", "field_10027", "END_PORTAL", "f_50257_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#END_PORTAL
    [[maybe_unused]] static void set_field_END_PORTAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fx", "END_PORTAL", "field_10027", "END_PORTAL", "f_50257_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#END_PORTAL_FRAME
    [[maybe_unused]] static jobject get_field_END_PORTAL_FRAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fy", "END_PORTAL_FRAME", "field_10398", "END_PORTAL_FRAME", "f_50258_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#END_PORTAL_FRAME
    [[maybe_unused]] static void set_field_END_PORTAL_FRAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fy", "END_PORTAL_FRAME", "field_10398", "END_PORTAL_FRAME", "f_50258_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#END_STONE
    [[maybe_unused]] static jobject get_field_END_STONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fz", "END_STONE", "field_10471", "END_STONE", "f_50259_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#END_STONE
    [[maybe_unused]] static void set_field_END_STONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fz", "END_STONE", "field_10471", "END_STONE", "f_50259_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DRAGON_EGG
    [[maybe_unused]] static jobject get_field_DRAGON_EGG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fA", "DRAGON_EGG", "field_10081", "DRAGON_EGG", "f_50260_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DRAGON_EGG
    [[maybe_unused]] static void set_field_DRAGON_EGG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fA", "DRAGON_EGG", "field_10081", "DRAGON_EGG", "f_50260_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#REDSTONE_LAMP
    [[maybe_unused]] static jobject get_field_REDSTONE_LAMP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fB", "REDSTONE_LAMP", "field_10524", "REDSTONE_LAMP", "f_50261_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#REDSTONE_LAMP
    [[maybe_unused]] static void set_field_REDSTONE_LAMP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fB", "REDSTONE_LAMP", "field_10524", "REDSTONE_LAMP", "f_50261_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COCOA
    [[maybe_unused]] static jobject get_field_COCOA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fC", "COCOA", "field_10302", "COCOA", "f_50262_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COCOA
    [[maybe_unused]] static void set_field_COCOA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fC", "COCOA", "field_10302", "COCOA", "f_50262_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SANDSTONE_STAIRS
    [[maybe_unused]] static jobject get_field_SANDSTONE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fD", "SANDSTONE_STAIRS", "field_10142", "SANDSTONE_STAIRS", "f_50263_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SANDSTONE_STAIRS
    [[maybe_unused]] static void set_field_SANDSTONE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fD", "SANDSTONE_STAIRS", "field_10142", "SANDSTONE_STAIRS", "f_50263_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#EMERALD_ORE
    [[maybe_unused]] static jobject get_field_EMERALD_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fE", "EMERALD_ORE", "field_10013", "EMERALD_ORE", "f_50264_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#EMERALD_ORE
    [[maybe_unused]] static void set_field_EMERALD_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fE", "EMERALD_ORE", "field_10013", "EMERALD_ORE", "f_50264_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_EMERALD_ORE
    [[maybe_unused]] static jobject get_field_DEEPSLATE_EMERALD_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fF", "DEEPSLATE_EMERALD_ORE", "field_29220", "DEEPSLATE_EMERALD_ORE", "f_152479_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_EMERALD_ORE
    [[maybe_unused]] static void set_field_DEEPSLATE_EMERALD_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fF", "DEEPSLATE_EMERALD_ORE", "field_29220", "DEEPSLATE_EMERALD_ORE", "f_152479_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ENDER_CHEST
    [[maybe_unused]] static jobject get_field_ENDER_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fG", "ENDER_CHEST", "field_10443", "ENDER_CHEST", "f_50265_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ENDER_CHEST
    [[maybe_unused]] static void set_field_ENDER_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fG", "ENDER_CHEST", "field_10443", "ENDER_CHEST", "f_50265_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TRIPWIRE_HOOK
    [[maybe_unused]] static jobject get_field_TRIPWIRE_HOOK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fH", "TRIPWIRE_HOOK", "field_10348", "TRIPWIRE_HOOK", "f_50266_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TRIPWIRE_HOOK
    [[maybe_unused]] static void set_field_TRIPWIRE_HOOK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fH", "TRIPWIRE_HOOK", "field_10348", "TRIPWIRE_HOOK", "f_50266_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TRIPWIRE
    [[maybe_unused]] static jobject get_field_TRIPWIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fI", "TRIPWIRE", "field_10589", "TRIPWIRE", "f_50267_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TRIPWIRE
    [[maybe_unused]] static void set_field_TRIPWIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fI", "TRIPWIRE", "field_10589", "TRIPWIRE", "f_50267_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#EMERALD_BLOCK
    [[maybe_unused]] static jobject get_field_EMERALD_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fJ", "EMERALD_BLOCK", "field_10234", "EMERALD_BLOCK", "f_50268_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#EMERALD_BLOCK
    [[maybe_unused]] static void set_field_EMERALD_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fJ", "EMERALD_BLOCK", "field_10234", "EMERALD_BLOCK", "f_50268_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_STAIRS
    [[maybe_unused]] static jobject get_field_SPRUCE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fK", "SPRUCE_STAIRS", "field_10569", "SPRUCE_STAIRS", "f_50269_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_STAIRS
    [[maybe_unused]] static void set_field_SPRUCE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fK", "SPRUCE_STAIRS", "field_10569", "SPRUCE_STAIRS", "f_50269_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_STAIRS
    [[maybe_unused]] static jobject get_field_BIRCH_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fL", "BIRCH_STAIRS", "field_10408", "BIRCH_STAIRS", "f_50270_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_STAIRS
    [[maybe_unused]] static void set_field_BIRCH_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fL", "BIRCH_STAIRS", "field_10408", "BIRCH_STAIRS", "f_50270_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_STAIRS
    [[maybe_unused]] static jobject get_field_JUNGLE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fM", "JUNGLE_STAIRS", "field_10122", "JUNGLE_STAIRS", "f_50271_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_STAIRS
    [[maybe_unused]] static void set_field_JUNGLE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fM", "JUNGLE_STAIRS", "field_10122", "JUNGLE_STAIRS", "f_50271_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COMMAND_BLOCK
    [[maybe_unused]] static jobject get_field_COMMAND_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fN", "COMMAND_BLOCK", "field_10525", "COMMAND_BLOCK", "f_50272_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COMMAND_BLOCK
    [[maybe_unused]] static void set_field_COMMAND_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fN", "COMMAND_BLOCK", "field_10525", "COMMAND_BLOCK", "f_50272_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BEACON
    [[maybe_unused]] static jobject get_field_BEACON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fO", "BEACON", "field_10327", "BEACON", "f_50273_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BEACON
    [[maybe_unused]] static void set_field_BEACON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fO", "BEACON", "field_10327", "BEACON", "f_50273_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COBBLESTONE_WALL
    [[maybe_unused]] static jobject get_field_COBBLESTONE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fP", "COBBLESTONE_WALL", "field_10625", "COBBLESTONE_WALL", "f_50274_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COBBLESTONE_WALL
    [[maybe_unused]] static void set_field_COBBLESTONE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fP", "COBBLESTONE_WALL", "field_10625", "COBBLESTONE_WALL", "f_50274_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MOSSY_COBBLESTONE_WALL
    [[maybe_unused]] static jobject get_field_MOSSY_COBBLESTONE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fQ", "MOSSY_COBBLESTONE_WALL", "field_9990", "MOSSY_COBBLESTONE_WALL", "f_50275_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MOSSY_COBBLESTONE_WALL
    [[maybe_unused]] static void set_field_MOSSY_COBBLESTONE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fQ", "MOSSY_COBBLESTONE_WALL", "field_9990", "MOSSY_COBBLESTONE_WALL", "f_50275_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FLOWER_POT
    [[maybe_unused]] static jobject get_field_FLOWER_POT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fR", "FLOWER_POT", "field_10495", "FLOWER_POT", "f_50276_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FLOWER_POT
    [[maybe_unused]] static void set_field_FLOWER_POT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fR", "FLOWER_POT", "field_10495", "FLOWER_POT", "f_50276_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_TORCHFLOWER
    [[maybe_unused]] static jobject get_field_POTTED_TORCHFLOWER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fS", "POTTED_TORCHFLOWER", "field_42741", "POTTED_TORCHFLOWER", "f_271468_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_TORCHFLOWER
    [[maybe_unused]] static void set_field_POTTED_TORCHFLOWER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fS", "POTTED_TORCHFLOWER", "field_42741", "POTTED_TORCHFLOWER", "f_271468_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_OAK_SAPLING
    [[maybe_unused]] static jobject get_field_POTTED_OAK_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fT", "POTTED_OAK_SAPLING", "field_10468", "POTTED_OAK_SAPLING", "f_50277_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_OAK_SAPLING
    [[maybe_unused]] static void set_field_POTTED_OAK_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fT", "POTTED_OAK_SAPLING", "field_10468", "POTTED_OAK_SAPLING", "f_50277_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_SPRUCE_SAPLING
    [[maybe_unused]] static jobject get_field_POTTED_SPRUCE_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fU", "POTTED_SPRUCE_SAPLING", "field_10192", "POTTED_SPRUCE_SAPLING", "f_50278_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_SPRUCE_SAPLING
    [[maybe_unused]] static void set_field_POTTED_SPRUCE_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fU", "POTTED_SPRUCE_SAPLING", "field_10192", "POTTED_SPRUCE_SAPLING", "f_50278_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_BIRCH_SAPLING
    [[maybe_unused]] static jobject get_field_POTTED_BIRCH_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fV", "POTTED_BIRCH_SAPLING", "field_10577", "POTTED_BIRCH_SAPLING", "f_50279_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_BIRCH_SAPLING
    [[maybe_unused]] static void set_field_POTTED_BIRCH_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fV", "POTTED_BIRCH_SAPLING", "field_10577", "POTTED_BIRCH_SAPLING", "f_50279_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_JUNGLE_SAPLING
    [[maybe_unused]] static jobject get_field_POTTED_JUNGLE_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fW", "POTTED_JUNGLE_SAPLING", "field_10304", "POTTED_JUNGLE_SAPLING", "f_50280_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_JUNGLE_SAPLING
    [[maybe_unused]] static void set_field_POTTED_JUNGLE_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fW", "POTTED_JUNGLE_SAPLING", "field_10304", "POTTED_JUNGLE_SAPLING", "f_50280_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_ACACIA_SAPLING
    [[maybe_unused]] static jobject get_field_POTTED_ACACIA_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fX", "POTTED_ACACIA_SAPLING", "field_10564", "POTTED_ACACIA_SAPLING", "f_50229_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_ACACIA_SAPLING
    [[maybe_unused]] static void set_field_POTTED_ACACIA_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fX", "POTTED_ACACIA_SAPLING", "field_10564", "POTTED_ACACIA_SAPLING", "f_50229_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_CHERRY_SAPLING
    [[maybe_unused]] static jobject get_field_POTTED_CHERRY_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fY", "POTTED_CHERRY_SAPLING", "field_42742", "POTTED_CHERRY_SAPLING", "f_271106_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_CHERRY_SAPLING
    [[maybe_unused]] static void set_field_POTTED_CHERRY_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fY", "POTTED_CHERRY_SAPLING", "field_42742", "POTTED_CHERRY_SAPLING", "f_271106_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_DARK_OAK_SAPLING
    [[maybe_unused]] static jobject get_field_POTTED_DARK_OAK_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fZ", "POTTED_DARK_OAK_SAPLING", "field_10076", "POTTED_DARK_OAK_SAPLING", "f_50230_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_DARK_OAK_SAPLING
    [[maybe_unused]] static void set_field_POTTED_DARK_OAK_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("fZ", "POTTED_DARK_OAK_SAPLING", "field_10076", "POTTED_DARK_OAK_SAPLING", "f_50230_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_MANGROVE_PROPAGULE
    [[maybe_unused]] static jobject get_field_POTTED_MANGROVE_PROPAGULE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ga", "POTTED_MANGROVE_PROPAGULE", "field_37560", "POTTED_MANGROVE_PROPAGULE", "f_220847_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_MANGROVE_PROPAGULE
    [[maybe_unused]] static void set_field_POTTED_MANGROVE_PROPAGULE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ga", "POTTED_MANGROVE_PROPAGULE", "field_37560", "POTTED_MANGROVE_PROPAGULE", "f_220847_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_FERN
    [[maybe_unused]] static jobject get_field_POTTED_FERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gb", "POTTED_FERN", "field_10128", "POTTED_FERN", "f_50231_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_FERN
    [[maybe_unused]] static void set_field_POTTED_FERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gb", "POTTED_FERN", "field_10128", "POTTED_FERN", "f_50231_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_DANDELION
    [[maybe_unused]] static jobject get_field_POTTED_DANDELION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gc", "POTTED_DANDELION", "field_10354", "POTTED_DANDELION", "f_50232_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_DANDELION
    [[maybe_unused]] static void set_field_POTTED_DANDELION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gc", "POTTED_DANDELION", "field_10354", "POTTED_DANDELION", "f_50232_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_POPPY
    [[maybe_unused]] static jobject get_field_POTTED_POPPY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gd", "POTTED_POPPY", "field_10151", "POTTED_POPPY", "f_50233_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_POPPY
    [[maybe_unused]] static void set_field_POTTED_POPPY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gd", "POTTED_POPPY", "field_10151", "POTTED_POPPY", "f_50233_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_BLUE_ORCHID
    [[maybe_unused]] static jobject get_field_POTTED_BLUE_ORCHID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ge", "POTTED_BLUE_ORCHID", "field_9981", "POTTED_BLUE_ORCHID", "f_50234_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_BLUE_ORCHID
    [[maybe_unused]] static void set_field_POTTED_BLUE_ORCHID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ge", "POTTED_BLUE_ORCHID", "field_9981", "POTTED_BLUE_ORCHID", "f_50234_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_ALLIUM
    [[maybe_unused]] static jobject get_field_POTTED_ALLIUM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gf", "POTTED_ALLIUM", "field_10162", "POTTED_ALLIUM", "f_50235_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_ALLIUM
    [[maybe_unused]] static void set_field_POTTED_ALLIUM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gf", "POTTED_ALLIUM", "field_10162", "POTTED_ALLIUM", "f_50235_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_AZURE_BLUET
    [[maybe_unused]] static jobject get_field_POTTED_AZURE_BLUET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gg", "POTTED_AZURE_BLUET", "field_10365", "POTTED_AZURE_BLUET", "f_50236_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_AZURE_BLUET
    [[maybe_unused]] static void set_field_POTTED_AZURE_BLUET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gg", "POTTED_AZURE_BLUET", "field_10365", "POTTED_AZURE_BLUET", "f_50236_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_RED_TULIP
    [[maybe_unused]] static jobject get_field_POTTED_RED_TULIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gh", "POTTED_RED_TULIP", "field_10598", "POTTED_RED_TULIP", "f_50237_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_RED_TULIP
    [[maybe_unused]] static void set_field_POTTED_RED_TULIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gh", "POTTED_RED_TULIP", "field_10598", "POTTED_RED_TULIP", "f_50237_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_ORANGE_TULIP
    [[maybe_unused]] static jobject get_field_POTTED_ORANGE_TULIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gi", "POTTED_ORANGE_TULIP", "field_10249", "POTTED_ORANGE_TULIP", "f_50238_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_ORANGE_TULIP
    [[maybe_unused]] static void set_field_POTTED_ORANGE_TULIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gi", "POTTED_ORANGE_TULIP", "field_10249", "POTTED_ORANGE_TULIP", "f_50238_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_WHITE_TULIP
    [[maybe_unused]] static jobject get_field_POTTED_WHITE_TULIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gj", "POTTED_WHITE_TULIP", "field_10400", "POTTED_WHITE_TULIP", "f_50239_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_WHITE_TULIP
    [[maybe_unused]] static void set_field_POTTED_WHITE_TULIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gj", "POTTED_WHITE_TULIP", "field_10400", "POTTED_WHITE_TULIP", "f_50239_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_PINK_TULIP
    [[maybe_unused]] static jobject get_field_POTTED_PINK_TULIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gk", "POTTED_PINK_TULIP", "field_10061", "POTTED_PINK_TULIP", "f_50240_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_PINK_TULIP
    [[maybe_unused]] static void set_field_POTTED_PINK_TULIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gk", "POTTED_PINK_TULIP", "field_10061", "POTTED_PINK_TULIP", "f_50240_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_OXEYE_DAISY
    [[maybe_unused]] static jobject get_field_POTTED_OXEYE_DAISY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gl", "POTTED_OXEYE_DAISY", "field_10074", "POTTED_OXEYE_DAISY", "f_50241_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_OXEYE_DAISY
    [[maybe_unused]] static void set_field_POTTED_OXEYE_DAISY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gl", "POTTED_OXEYE_DAISY", "field_10074", "POTTED_OXEYE_DAISY", "f_50241_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_CORNFLOWER
    [[maybe_unused]] static jobject get_field_POTTED_CORNFLOWER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gm", "POTTED_CORNFLOWER", "field_10358", "POTTED_CORNFLOWER", "f_50242_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_CORNFLOWER
    [[maybe_unused]] static void set_field_POTTED_CORNFLOWER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gm", "POTTED_CORNFLOWER", "field_10358", "POTTED_CORNFLOWER", "f_50242_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_LILY_OF_THE_VALLEY
    [[maybe_unused]] static jobject get_field_POTTED_LILY_OF_THE_VALLEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gn", "POTTED_LILY_OF_THE_VALLEY", "field_10273", "POTTED_LILY_OF_THE_VALLEY", "f_50243_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_LILY_OF_THE_VALLEY
    [[maybe_unused]] static void set_field_POTTED_LILY_OF_THE_VALLEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gn", "POTTED_LILY_OF_THE_VALLEY", "field_10273", "POTTED_LILY_OF_THE_VALLEY", "f_50243_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_WITHER_ROSE
    [[maybe_unused]] static jobject get_field_POTTED_WITHER_ROSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("go", "POTTED_WITHER_ROSE", "field_9998", "POTTED_WITHER_ROSE", "f_50244_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_WITHER_ROSE
    [[maybe_unused]] static void set_field_POTTED_WITHER_ROSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("go", "POTTED_WITHER_ROSE", "field_9998", "POTTED_WITHER_ROSE", "f_50244_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_RED_MUSHROOM
    [[maybe_unused]] static jobject get_field_POTTED_RED_MUSHROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gp", "POTTED_RED_MUSHROOM", "field_10138", "POTTED_RED_MUSHROOM", "f_50245_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_RED_MUSHROOM
    [[maybe_unused]] static void set_field_POTTED_RED_MUSHROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gp", "POTTED_RED_MUSHROOM", "field_10138", "POTTED_RED_MUSHROOM", "f_50245_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_BROWN_MUSHROOM
    [[maybe_unused]] static jobject get_field_POTTED_BROWN_MUSHROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gq", "POTTED_BROWN_MUSHROOM", "field_10324", "POTTED_BROWN_MUSHROOM", "f_50246_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_BROWN_MUSHROOM
    [[maybe_unused]] static void set_field_POTTED_BROWN_MUSHROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gq", "POTTED_BROWN_MUSHROOM", "field_10324", "POTTED_BROWN_MUSHROOM", "f_50246_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_DEAD_BUSH
    [[maybe_unused]] static jobject get_field_POTTED_DEAD_BUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gr", "POTTED_DEAD_BUSH", "field_10487", "POTTED_DEAD_BUSH", "f_50247_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_DEAD_BUSH
    [[maybe_unused]] static void set_field_POTTED_DEAD_BUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gr", "POTTED_DEAD_BUSH", "field_10487", "POTTED_DEAD_BUSH", "f_50247_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_CACTUS
    [[maybe_unused]] static jobject get_field_POTTED_CACTUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gs", "POTTED_CACTUS", "field_10018", "POTTED_CACTUS", "f_50248_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_CACTUS
    [[maybe_unused]] static void set_field_POTTED_CACTUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gs", "POTTED_CACTUS", "field_10018", "POTTED_CACTUS", "f_50248_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CARROTS
    [[maybe_unused]] static jobject get_field_CARROTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gt", "CARROTS", "field_10609", "CARROTS", "f_50249_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CARROTS
    [[maybe_unused]] static void set_field_CARROTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gt", "CARROTS", "field_10609", "CARROTS", "f_50249_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTATOES
    [[maybe_unused]] static jobject get_field_POTATOES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gu", "POTATOES", "field_10247", "POTATOES", "f_50250_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTATOES
    [[maybe_unused]] static void set_field_POTATOES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gu", "POTATOES", "field_10247", "POTATOES", "f_50250_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_BUTTON
    [[maybe_unused]] static jobject get_field_OAK_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gv", "OAK_BUTTON", "field_10057", "OAK_BUTTON", "f_50251_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_BUTTON
    [[maybe_unused]] static void set_field_OAK_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gv", "OAK_BUTTON", "field_10057", "OAK_BUTTON", "f_50251_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_BUTTON
    [[maybe_unused]] static jobject get_field_SPRUCE_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gw", "SPRUCE_BUTTON", "field_10066", "SPRUCE_BUTTON", "f_50252_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_BUTTON
    [[maybe_unused]] static void set_field_SPRUCE_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gw", "SPRUCE_BUTTON", "field_10066", "SPRUCE_BUTTON", "f_50252_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_BUTTON
    [[maybe_unused]] static jobject get_field_BIRCH_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gx", "BIRCH_BUTTON", "field_10417", "BIRCH_BUTTON", "f_50253_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_BUTTON
    [[maybe_unused]] static void set_field_BIRCH_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gx", "BIRCH_BUTTON", "field_10417", "BIRCH_BUTTON", "f_50253_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_BUTTON
    [[maybe_unused]] static jobject get_field_JUNGLE_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gy", "JUNGLE_BUTTON", "field_10553", "JUNGLE_BUTTON", "f_50254_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_BUTTON
    [[maybe_unused]] static void set_field_JUNGLE_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gy", "JUNGLE_BUTTON", "field_10553", "JUNGLE_BUTTON", "f_50254_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_BUTTON
    [[maybe_unused]] static jobject get_field_ACACIA_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gz", "ACACIA_BUTTON", "field_10278", "ACACIA_BUTTON", "f_50308_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_BUTTON
    [[maybe_unused]] static void set_field_ACACIA_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gz", "ACACIA_BUTTON", "field_10278", "ACACIA_BUTTON", "f_50308_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_BUTTON
    [[maybe_unused]] static jobject get_field_CHERRY_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gA", "CHERRY_BUTTON", "field_42743", "CHERRY_BUTTON", "f_271396_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_BUTTON
    [[maybe_unused]] static void set_field_CHERRY_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gA", "CHERRY_BUTTON", "field_42743", "CHERRY_BUTTON", "f_271396_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_BUTTON
    [[maybe_unused]] static jobject get_field_DARK_OAK_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gB", "DARK_OAK_BUTTON", "field_10493", "DARK_OAK_BUTTON", "f_50309_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_BUTTON
    [[maybe_unused]] static void set_field_DARK_OAK_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gB", "DARK_OAK_BUTTON", "field_10493", "DARK_OAK_BUTTON", "f_50309_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_BUTTON
    [[maybe_unused]] static jobject get_field_MANGROVE_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gC", "MANGROVE_BUTTON", "field_37559", "MANGROVE_BUTTON", "f_220846_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_BUTTON
    [[maybe_unused]] static void set_field_MANGROVE_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gC", "MANGROVE_BUTTON", "field_37559", "MANGROVE_BUTTON", "f_220846_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_BUTTON
    [[maybe_unused]] static jobject get_field_BAMBOO_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gD", "BAMBOO_BUTTON", "field_40286", "BAMBOO_BUTTON", "f_244625_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_BUTTON
    [[maybe_unused]] static void set_field_BAMBOO_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gD", "BAMBOO_BUTTON", "field_40286", "BAMBOO_BUTTON", "f_244625_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SKELETON_SKULL
    [[maybe_unused]] static jobject get_field_SKELETON_SKULL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gE", "SKELETON_SKULL", "field_10481", "SKELETON_SKULL", "f_50310_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SKELETON_SKULL
    [[maybe_unused]] static void set_field_SKELETON_SKULL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gE", "SKELETON_SKULL", "field_10481", "SKELETON_SKULL", "f_50310_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SKELETON_WALL_SKULL
    [[maybe_unused]] static jobject get_field_SKELETON_WALL_SKULL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gF", "SKELETON_WALL_SKULL", "field_10388", "SKELETON_WALL_SKULL", "f_50311_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SKELETON_WALL_SKULL
    [[maybe_unused]] static void set_field_SKELETON_WALL_SKULL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gF", "SKELETON_WALL_SKULL", "field_10388", "SKELETON_WALL_SKULL", "f_50311_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WITHER_SKELETON_SKULL
    [[maybe_unused]] static jobject get_field_WITHER_SKELETON_SKULL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gG", "WITHER_SKELETON_SKULL", "field_10177", "WITHER_SKELETON_SKULL", "f_50312_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WITHER_SKELETON_SKULL
    [[maybe_unused]] static void set_field_WITHER_SKELETON_SKULL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gG", "WITHER_SKELETON_SKULL", "field_10177", "WITHER_SKELETON_SKULL", "f_50312_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WITHER_SKELETON_WALL_SKULL
    [[maybe_unused]] static jobject get_field_WITHER_SKELETON_WALL_SKULL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gH", "WITHER_SKELETON_WALL_SKULL", "field_10101", "WITHER_SKELETON_WALL_SKULL", "f_50313_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WITHER_SKELETON_WALL_SKULL
    [[maybe_unused]] static void set_field_WITHER_SKELETON_WALL_SKULL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gH", "WITHER_SKELETON_WALL_SKULL", "field_10101", "WITHER_SKELETON_WALL_SKULL", "f_50313_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ZOMBIE_HEAD
    [[maybe_unused]] static jobject get_field_ZOMBIE_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gI", "ZOMBIE_HEAD", "field_10241", "ZOMBIE_HEAD", "f_50314_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ZOMBIE_HEAD
    [[maybe_unused]] static void set_field_ZOMBIE_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gI", "ZOMBIE_HEAD", "field_10241", "ZOMBIE_HEAD", "f_50314_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ZOMBIE_WALL_HEAD
    [[maybe_unused]] static jobject get_field_ZOMBIE_WALL_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gJ", "ZOMBIE_WALL_HEAD", "field_10581", "ZOMBIE_WALL_HEAD", "f_50315_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ZOMBIE_WALL_HEAD
    [[maybe_unused]] static void set_field_ZOMBIE_WALL_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gJ", "ZOMBIE_WALL_HEAD", "field_10581", "ZOMBIE_WALL_HEAD", "f_50315_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PLAYER_HEAD
    [[maybe_unused]] static jobject get_field_PLAYER_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gK", "PLAYER_HEAD", "field_10432", "PLAYER_HEAD", "f_50316_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PLAYER_HEAD
    [[maybe_unused]] static void set_field_PLAYER_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gK", "PLAYER_HEAD", "field_10432", "PLAYER_HEAD", "f_50316_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PLAYER_WALL_HEAD
    [[maybe_unused]] static jobject get_field_PLAYER_WALL_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gL", "PLAYER_WALL_HEAD", "field_10208", "PLAYER_WALL_HEAD", "f_50317_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PLAYER_WALL_HEAD
    [[maybe_unused]] static void set_field_PLAYER_WALL_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gL", "PLAYER_WALL_HEAD", "field_10208", "PLAYER_WALL_HEAD", "f_50317_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CREEPER_HEAD
    [[maybe_unused]] static jobject get_field_CREEPER_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gM", "CREEPER_HEAD", "field_10042", "CREEPER_HEAD", "f_50318_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CREEPER_HEAD
    [[maybe_unused]] static void set_field_CREEPER_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gM", "CREEPER_HEAD", "field_10042", "CREEPER_HEAD", "f_50318_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CREEPER_WALL_HEAD
    [[maybe_unused]] static jobject get_field_CREEPER_WALL_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gN", "CREEPER_WALL_HEAD", "field_10509", "CREEPER_WALL_HEAD", "f_50319_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CREEPER_WALL_HEAD
    [[maybe_unused]] static void set_field_CREEPER_WALL_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gN", "CREEPER_WALL_HEAD", "field_10509", "CREEPER_WALL_HEAD", "f_50319_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DRAGON_HEAD
    [[maybe_unused]] static jobject get_field_DRAGON_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gO", "DRAGON_HEAD", "field_10337", "DRAGON_HEAD", "f_50320_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DRAGON_HEAD
    [[maybe_unused]] static void set_field_DRAGON_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gO", "DRAGON_HEAD", "field_10337", "DRAGON_HEAD", "f_50320_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DRAGON_WALL_HEAD
    [[maybe_unused]] static jobject get_field_DRAGON_WALL_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gP", "DRAGON_WALL_HEAD", "field_10472", "DRAGON_WALL_HEAD", "f_50321_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DRAGON_WALL_HEAD
    [[maybe_unused]] static void set_field_DRAGON_WALL_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gP", "DRAGON_WALL_HEAD", "field_10472", "DRAGON_WALL_HEAD", "f_50321_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PIGLIN_HEAD
    [[maybe_unused]] static jobject get_field_PIGLIN_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gQ", "PIGLIN_HEAD", "field_41305", "PIGLIN_HEAD", "f_260630_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PIGLIN_HEAD
    [[maybe_unused]] static void set_field_PIGLIN_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gQ", "PIGLIN_HEAD", "field_41305", "PIGLIN_HEAD", "f_260630_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PIGLIN_WALL_HEAD
    [[maybe_unused]] static jobject get_field_PIGLIN_WALL_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gR", "PIGLIN_WALL_HEAD", "field_41306", "PIGLIN_WALL_HEAD", "f_260585_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PIGLIN_WALL_HEAD
    [[maybe_unused]] static void set_field_PIGLIN_WALL_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gR", "PIGLIN_WALL_HEAD", "field_41306", "PIGLIN_WALL_HEAD", "f_260585_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ANVIL
    [[maybe_unused]] static jobject get_field_ANVIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gS", "ANVIL", "field_10535", "ANVIL", "f_50322_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ANVIL
    [[maybe_unused]] static void set_field_ANVIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gS", "ANVIL", "field_10535", "ANVIL", "f_50322_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHIPPED_ANVIL
    [[maybe_unused]] static jobject get_field_CHIPPED_ANVIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gT", "CHIPPED_ANVIL", "field_10105", "CHIPPED_ANVIL", "f_50323_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHIPPED_ANVIL
    [[maybe_unused]] static void set_field_CHIPPED_ANVIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gT", "CHIPPED_ANVIL", "field_10105", "CHIPPED_ANVIL", "f_50323_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DAMAGED_ANVIL
    [[maybe_unused]] static jobject get_field_DAMAGED_ANVIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gU", "DAMAGED_ANVIL", "field_10414", "DAMAGED_ANVIL", "f_50324_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DAMAGED_ANVIL
    [[maybe_unused]] static void set_field_DAMAGED_ANVIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gU", "DAMAGED_ANVIL", "field_10414", "DAMAGED_ANVIL", "f_50324_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TRAPPED_CHEST
    [[maybe_unused]] static jobject get_field_TRAPPED_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gV", "TRAPPED_CHEST", "field_10380", "TRAPPED_CHEST", "f_50325_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TRAPPED_CHEST
    [[maybe_unused]] static void set_field_TRAPPED_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gV", "TRAPPED_CHEST", "field_10380", "TRAPPED_CHEST", "f_50325_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_WEIGHTED_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_LIGHT_WEIGHTED_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gW", "LIGHT_WEIGHTED_PRESSURE_PLATE", "field_10224", "LIGHT_WEIGHTED_PRESSURE_PLATE", "f_50326_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_WEIGHTED_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_LIGHT_WEIGHTED_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gW", "LIGHT_WEIGHTED_PRESSURE_PLATE", "field_10224", "LIGHT_WEIGHTED_PRESSURE_PLATE", "f_50326_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#HEAVY_WEIGHTED_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_HEAVY_WEIGHTED_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gX", "HEAVY_WEIGHTED_PRESSURE_PLATE", "field_10582", "HEAVY_WEIGHTED_PRESSURE_PLATE", "f_50327_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#HEAVY_WEIGHTED_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_HEAVY_WEIGHTED_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gX", "HEAVY_WEIGHTED_PRESSURE_PLATE", "field_10582", "HEAVY_WEIGHTED_PRESSURE_PLATE", "f_50327_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COMPARATOR
    [[maybe_unused]] static jobject get_field_COMPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gY", "COMPARATOR", "field_10377", "COMPARATOR", "f_50328_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COMPARATOR
    [[maybe_unused]] static void set_field_COMPARATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gY", "COMPARATOR", "field_10377", "COMPARATOR", "f_50328_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DAYLIGHT_DETECTOR
    [[maybe_unused]] static jobject get_field_DAYLIGHT_DETECTOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gZ", "DAYLIGHT_DETECTOR", "field_10429", "DAYLIGHT_DETECTOR", "f_50329_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DAYLIGHT_DETECTOR
    [[maybe_unused]] static void set_field_DAYLIGHT_DETECTOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("gZ", "DAYLIGHT_DETECTOR", "field_10429", "DAYLIGHT_DETECTOR", "f_50329_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#REDSTONE_BLOCK
    [[maybe_unused]] static jobject get_field_REDSTONE_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ha", "REDSTONE_BLOCK", "field_10002", "REDSTONE_BLOCK", "f_50330_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#REDSTONE_BLOCK
    [[maybe_unused]] static void set_field_REDSTONE_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ha", "REDSTONE_BLOCK", "field_10002", "REDSTONE_BLOCK", "f_50330_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHER_QUARTZ_ORE
    [[maybe_unused]] static jobject get_field_NETHER_QUARTZ_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hb", "NETHER_QUARTZ_ORE", "field_10213", "NETHER_QUARTZ_ORE", "f_50331_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHER_QUARTZ_ORE
    [[maybe_unused]] static void set_field_NETHER_QUARTZ_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hb", "NETHER_QUARTZ_ORE", "field_10213", "NETHER_QUARTZ_ORE", "f_50331_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#HOPPER
    [[maybe_unused]] static jobject get_field_HOPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hc", "HOPPER", "field_10312", "HOPPER", "f_50332_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#HOPPER
    [[maybe_unused]] static void set_field_HOPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hc", "HOPPER", "field_10312", "HOPPER", "f_50332_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#QUARTZ_BLOCK
    [[maybe_unused]] static jobject get_field_QUARTZ_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hd", "QUARTZ_BLOCK", "field_10153", "QUARTZ_BLOCK", "f_50333_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#QUARTZ_BLOCK
    [[maybe_unused]] static void set_field_QUARTZ_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hd", "QUARTZ_BLOCK", "field_10153", "QUARTZ_BLOCK", "f_50333_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHISELED_QUARTZ_BLOCK
    [[maybe_unused]] static jobject get_field_CHISELED_QUARTZ_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("he", "CHISELED_QUARTZ_BLOCK", "field_10044", "CHISELED_QUARTZ_BLOCK", "f_50282_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHISELED_QUARTZ_BLOCK
    [[maybe_unused]] static void set_field_CHISELED_QUARTZ_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("he", "CHISELED_QUARTZ_BLOCK", "field_10044", "CHISELED_QUARTZ_BLOCK", "f_50282_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#QUARTZ_PILLAR
    [[maybe_unused]] static jobject get_field_QUARTZ_PILLAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hf", "QUARTZ_PILLAR", "field_10437", "QUARTZ_PILLAR", "f_50283_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#QUARTZ_PILLAR
    [[maybe_unused]] static void set_field_QUARTZ_PILLAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hf", "QUARTZ_PILLAR", "field_10437", "QUARTZ_PILLAR", "f_50283_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#QUARTZ_STAIRS
    [[maybe_unused]] static jobject get_field_QUARTZ_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hg", "QUARTZ_STAIRS", "field_10451", "QUARTZ_STAIRS", "f_50284_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#QUARTZ_STAIRS
    [[maybe_unused]] static void set_field_QUARTZ_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hg", "QUARTZ_STAIRS", "field_10451", "QUARTZ_STAIRS", "f_50284_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACTIVATOR_RAIL
    [[maybe_unused]] static jobject get_field_ACTIVATOR_RAIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hh", "ACTIVATOR_RAIL", "field_10546", "ACTIVATOR_RAIL", "f_50285_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACTIVATOR_RAIL
    [[maybe_unused]] static void set_field_ACTIVATOR_RAIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hh", "ACTIVATOR_RAIL", "field_10546", "ACTIVATOR_RAIL", "f_50285_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DROPPER
    [[maybe_unused]] static jobject get_field_DROPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hi", "DROPPER", "field_10228", "DROPPER", "f_50286_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DROPPER
    [[maybe_unused]] static void set_field_DROPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hi", "DROPPER", "field_10228", "DROPPER", "f_50286_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_TERRACOTTA
    [[maybe_unused]] static jobject get_field_WHITE_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hj", "WHITE_TERRACOTTA", "field_10611", "WHITE_TERRACOTTA", "f_50287_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_TERRACOTTA
    [[maybe_unused]] static void set_field_WHITE_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hj", "WHITE_TERRACOTTA", "field_10611", "WHITE_TERRACOTTA", "f_50287_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_TERRACOTTA
    [[maybe_unused]] static jobject get_field_ORANGE_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hk", "ORANGE_TERRACOTTA", "field_10184", "ORANGE_TERRACOTTA", "f_50288_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_TERRACOTTA
    [[maybe_unused]] static void set_field_ORANGE_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hk", "ORANGE_TERRACOTTA", "field_10184", "ORANGE_TERRACOTTA", "f_50288_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_TERRACOTTA
    [[maybe_unused]] static jobject get_field_MAGENTA_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hl", "MAGENTA_TERRACOTTA", "field_10015", "MAGENTA_TERRACOTTA", "f_50289_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_TERRACOTTA
    [[maybe_unused]] static void set_field_MAGENTA_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hl", "MAGENTA_TERRACOTTA", "field_10015", "MAGENTA_TERRACOTTA", "f_50289_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_TERRACOTTA
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hm", "LIGHT_BLUE_TERRACOTTA", "field_10325", "LIGHT_BLUE_TERRACOTTA", "f_50290_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_TERRACOTTA
    [[maybe_unused]] static void set_field_LIGHT_BLUE_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hm", "LIGHT_BLUE_TERRACOTTA", "field_10325", "LIGHT_BLUE_TERRACOTTA", "f_50290_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_TERRACOTTA
    [[maybe_unused]] static jobject get_field_YELLOW_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hn", "YELLOW_TERRACOTTA", "field_10143", "YELLOW_TERRACOTTA", "f_50291_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_TERRACOTTA
    [[maybe_unused]] static void set_field_YELLOW_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hn", "YELLOW_TERRACOTTA", "field_10143", "YELLOW_TERRACOTTA", "f_50291_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_TERRACOTTA
    [[maybe_unused]] static jobject get_field_LIME_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ho", "LIME_TERRACOTTA", "field_10014", "LIME_TERRACOTTA", "f_50292_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_TERRACOTTA
    [[maybe_unused]] static void set_field_LIME_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ho", "LIME_TERRACOTTA", "field_10014", "LIME_TERRACOTTA", "f_50292_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_TERRACOTTA
    [[maybe_unused]] static jobject get_field_PINK_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hp", "PINK_TERRACOTTA", "field_10444", "PINK_TERRACOTTA", "f_50293_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_TERRACOTTA
    [[maybe_unused]] static void set_field_PINK_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hp", "PINK_TERRACOTTA", "field_10444", "PINK_TERRACOTTA", "f_50293_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_TERRACOTTA
    [[maybe_unused]] static jobject get_field_GRAY_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hq", "GRAY_TERRACOTTA", "field_10349", "GRAY_TERRACOTTA", "f_50294_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_TERRACOTTA
    [[maybe_unused]] static void set_field_GRAY_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hq", "GRAY_TERRACOTTA", "field_10349", "GRAY_TERRACOTTA", "f_50294_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_TERRACOTTA
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hr", "LIGHT_GRAY_TERRACOTTA", "field_10590", "LIGHT_GRAY_TERRACOTTA", "f_50295_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_TERRACOTTA
    [[maybe_unused]] static void set_field_LIGHT_GRAY_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hr", "LIGHT_GRAY_TERRACOTTA", "field_10590", "LIGHT_GRAY_TERRACOTTA", "f_50295_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_TERRACOTTA
    [[maybe_unused]] static jobject get_field_CYAN_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hs", "CYAN_TERRACOTTA", "field_10235", "CYAN_TERRACOTTA", "f_50296_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_TERRACOTTA
    [[maybe_unused]] static void set_field_CYAN_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hs", "CYAN_TERRACOTTA", "field_10235", "CYAN_TERRACOTTA", "f_50296_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_TERRACOTTA
    [[maybe_unused]] static jobject get_field_PURPLE_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ht", "PURPLE_TERRACOTTA", "field_10570", "PURPLE_TERRACOTTA", "f_50297_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_TERRACOTTA
    [[maybe_unused]] static void set_field_PURPLE_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ht", "PURPLE_TERRACOTTA", "field_10570", "PURPLE_TERRACOTTA", "f_50297_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_TERRACOTTA
    [[maybe_unused]] static jobject get_field_BLUE_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hu", "BLUE_TERRACOTTA", "field_10409", "BLUE_TERRACOTTA", "f_50298_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_TERRACOTTA
    [[maybe_unused]] static void set_field_BLUE_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hu", "BLUE_TERRACOTTA", "field_10409", "BLUE_TERRACOTTA", "f_50298_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_TERRACOTTA
    [[maybe_unused]] static jobject get_field_BROWN_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hv", "BROWN_TERRACOTTA", "field_10123", "BROWN_TERRACOTTA", "f_50299_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_TERRACOTTA
    [[maybe_unused]] static void set_field_BROWN_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hv", "BROWN_TERRACOTTA", "field_10123", "BROWN_TERRACOTTA", "f_50299_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_TERRACOTTA
    [[maybe_unused]] static jobject get_field_GREEN_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hw", "GREEN_TERRACOTTA", "field_10526", "GREEN_TERRACOTTA", "f_50300_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_TERRACOTTA
    [[maybe_unused]] static void set_field_GREEN_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hw", "GREEN_TERRACOTTA", "field_10526", "GREEN_TERRACOTTA", "f_50300_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_RED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hx", "RED_TERRACOTTA", "field_10328", "RED_TERRACOTTA", "f_50301_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_TERRACOTTA
    [[maybe_unused]] static void set_field_RED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hx", "RED_TERRACOTTA", "field_10328", "RED_TERRACOTTA", "f_50301_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_TERRACOTTA
    [[maybe_unused]] static jobject get_field_BLACK_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hy", "BLACK_TERRACOTTA", "field_10626", "BLACK_TERRACOTTA", "f_50302_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_TERRACOTTA
    [[maybe_unused]] static void set_field_BLACK_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hy", "BLACK_TERRACOTTA", "field_10626", "BLACK_TERRACOTTA", "f_50302_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_WHITE_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hz", "WHITE_STAINED_GLASS_PANE", "field_9991", "WHITE_STAINED_GLASS_PANE", "f_50303_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_WHITE_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hz", "WHITE_STAINED_GLASS_PANE", "field_9991", "WHITE_STAINED_GLASS_PANE", "f_50303_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_ORANGE_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hA", "ORANGE_STAINED_GLASS_PANE", "field_10496", "ORANGE_STAINED_GLASS_PANE", "f_50304_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_ORANGE_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hA", "ORANGE_STAINED_GLASS_PANE", "field_10496", "ORANGE_STAINED_GLASS_PANE", "f_50304_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_MAGENTA_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hB", "MAGENTA_STAINED_GLASS_PANE", "field_10469", "MAGENTA_STAINED_GLASS_PANE", "f_50305_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_MAGENTA_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hB", "MAGENTA_STAINED_GLASS_PANE", "field_10469", "MAGENTA_STAINED_GLASS_PANE", "f_50305_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hC", "LIGHT_BLUE_STAINED_GLASS_PANE", "field_10193", "LIGHT_BLUE_STAINED_GLASS_PANE", "f_50306_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_LIGHT_BLUE_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hC", "LIGHT_BLUE_STAINED_GLASS_PANE", "field_10193", "LIGHT_BLUE_STAINED_GLASS_PANE", "f_50306_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_YELLOW_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hD", "YELLOW_STAINED_GLASS_PANE", "field_10578", "YELLOW_STAINED_GLASS_PANE", "f_50307_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_YELLOW_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hD", "YELLOW_STAINED_GLASS_PANE", "field_10578", "YELLOW_STAINED_GLASS_PANE", "f_50307_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_LIME_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hE", "LIME_STAINED_GLASS_PANE", "field_10305", "LIME_STAINED_GLASS_PANE", "f_50361_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_LIME_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hE", "LIME_STAINED_GLASS_PANE", "field_10305", "LIME_STAINED_GLASS_PANE", "f_50361_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_PINK_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hF", "PINK_STAINED_GLASS_PANE", "field_10565", "PINK_STAINED_GLASS_PANE", "f_50362_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_PINK_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hF", "PINK_STAINED_GLASS_PANE", "field_10565", "PINK_STAINED_GLASS_PANE", "f_50362_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_GRAY_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hG", "GRAY_STAINED_GLASS_PANE", "field_10077", "GRAY_STAINED_GLASS_PANE", "f_50363_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_GRAY_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hG", "GRAY_STAINED_GLASS_PANE", "field_10077", "GRAY_STAINED_GLASS_PANE", "f_50363_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hH", "LIGHT_GRAY_STAINED_GLASS_PANE", "field_10129", "LIGHT_GRAY_STAINED_GLASS_PANE", "f_50364_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_LIGHT_GRAY_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hH", "LIGHT_GRAY_STAINED_GLASS_PANE", "field_10129", "LIGHT_GRAY_STAINED_GLASS_PANE", "f_50364_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_CYAN_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hI", "CYAN_STAINED_GLASS_PANE", "field_10355", "CYAN_STAINED_GLASS_PANE", "f_50365_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_CYAN_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hI", "CYAN_STAINED_GLASS_PANE", "field_10355", "CYAN_STAINED_GLASS_PANE", "f_50365_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_PURPLE_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hJ", "PURPLE_STAINED_GLASS_PANE", "field_10152", "PURPLE_STAINED_GLASS_PANE", "f_50366_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_PURPLE_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hJ", "PURPLE_STAINED_GLASS_PANE", "field_10152", "PURPLE_STAINED_GLASS_PANE", "f_50366_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_BLUE_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hK", "BLUE_STAINED_GLASS_PANE", "field_9982", "BLUE_STAINED_GLASS_PANE", "f_50367_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_BLUE_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hK", "BLUE_STAINED_GLASS_PANE", "field_9982", "BLUE_STAINED_GLASS_PANE", "f_50367_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_BROWN_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hL", "BROWN_STAINED_GLASS_PANE", "field_10163", "BROWN_STAINED_GLASS_PANE", "f_50368_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_BROWN_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hL", "BROWN_STAINED_GLASS_PANE", "field_10163", "BROWN_STAINED_GLASS_PANE", "f_50368_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_GREEN_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hM", "GREEN_STAINED_GLASS_PANE", "field_10419", "GREEN_STAINED_GLASS_PANE", "f_50369_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_GREEN_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hM", "GREEN_STAINED_GLASS_PANE", "field_10419", "GREEN_STAINED_GLASS_PANE", "f_50369_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_RED_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hN", "RED_STAINED_GLASS_PANE", "field_10118", "RED_STAINED_GLASS_PANE", "f_50370_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_RED_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hN", "RED_STAINED_GLASS_PANE", "field_10118", "RED_STAINED_GLASS_PANE", "f_50370_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_STAINED_GLASS_PANE
    [[maybe_unused]] static jobject get_field_BLACK_STAINED_GLASS_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hO", "BLACK_STAINED_GLASS_PANE", "field_10070", "BLACK_STAINED_GLASS_PANE", "f_50371_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_STAINED_GLASS_PANE
    [[maybe_unused]] static void set_field_BLACK_STAINED_GLASS_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hO", "BLACK_STAINED_GLASS_PANE", "field_10070", "BLACK_STAINED_GLASS_PANE", "f_50371_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_STAIRS
    [[maybe_unused]] static jobject get_field_ACACIA_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hP", "ACACIA_STAIRS", "field_10256", "ACACIA_STAIRS", "f_50372_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_STAIRS
    [[maybe_unused]] static void set_field_ACACIA_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hP", "ACACIA_STAIRS", "field_10256", "ACACIA_STAIRS", "f_50372_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_STAIRS
    [[maybe_unused]] static jobject get_field_CHERRY_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hQ", "CHERRY_STAIRS", "field_42744", "CHERRY_STAIRS", "f_271206_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_STAIRS
    [[maybe_unused]] static void set_field_CHERRY_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hQ", "CHERRY_STAIRS", "field_42744", "CHERRY_STAIRS", "f_271206_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_STAIRS
    [[maybe_unused]] static jobject get_field_DARK_OAK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hR", "DARK_OAK_STAIRS", "field_10616", "DARK_OAK_STAIRS", "f_50373_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_STAIRS
    [[maybe_unused]] static void set_field_DARK_OAK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hR", "DARK_OAK_STAIRS", "field_10616", "DARK_OAK_STAIRS", "f_50373_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_STAIRS
    [[maybe_unused]] static jobject get_field_MANGROVE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hS", "MANGROVE_STAIRS", "field_37561", "MANGROVE_STAIRS", "f_220848_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_STAIRS
    [[maybe_unused]] static void set_field_MANGROVE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hS", "MANGROVE_STAIRS", "field_37561", "MANGROVE_STAIRS", "f_220848_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_STAIRS
    [[maybe_unused]] static jobject get_field_BAMBOO_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hT", "BAMBOO_STAIRS", "field_40287", "BAMBOO_STAIRS", "f_243755_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_STAIRS
    [[maybe_unused]] static void set_field_BAMBOO_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hT", "BAMBOO_STAIRS", "field_40287", "BAMBOO_STAIRS", "f_243755_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_MOSAIC_STAIRS
    [[maybe_unused]] static jobject get_field_BAMBOO_MOSAIC_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hU", "BAMBOO_MOSAIC_STAIRS", "field_40288", "BAMBOO_MOSAIC_STAIRS", "f_244193_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_MOSAIC_STAIRS
    [[maybe_unused]] static void set_field_BAMBOO_MOSAIC_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hU", "BAMBOO_MOSAIC_STAIRS", "field_40288", "BAMBOO_MOSAIC_STAIRS", "f_244193_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SLIME_BLOCK
    [[maybe_unused]] static jobject get_field_SLIME_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hV", "SLIME_BLOCK", "field_10030", "SLIME_BLOCK", "f_50374_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SLIME_BLOCK
    [[maybe_unused]] static void set_field_SLIME_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hV", "SLIME_BLOCK", "field_10030", "SLIME_BLOCK", "f_50374_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BARRIER
    [[maybe_unused]] static jobject get_field_BARRIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hW", "BARRIER", "field_10499", "BARRIER", "f_50375_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BARRIER
    [[maybe_unused]] static void set_field_BARRIER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hW", "BARRIER", "field_10499", "BARRIER", "f_50375_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT
    [[maybe_unused]] static jobject get_field_LIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hX", "LIGHT", "field_31037", "LIGHT", "f_152480_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT
    [[maybe_unused]] static void set_field_LIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hX", "LIGHT", "field_31037", "LIGHT", "f_152480_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#IRON_TRAPDOOR
    [[maybe_unused]] static jobject get_field_IRON_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hY", "IRON_TRAPDOOR", "field_10453", "IRON_TRAPDOOR", "f_50376_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#IRON_TRAPDOOR
    [[maybe_unused]] static void set_field_IRON_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hY", "IRON_TRAPDOOR", "field_10453", "IRON_TRAPDOOR", "f_50376_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PRISMARINE
    [[maybe_unused]] static jobject get_field_PRISMARINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hZ", "PRISMARINE", "field_10135", "PRISMARINE", "f_50377_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PRISMARINE
    [[maybe_unused]] static void set_field_PRISMARINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("hZ", "PRISMARINE", "field_10135", "PRISMARINE", "f_50377_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PRISMARINE_BRICKS
    [[maybe_unused]] static jobject get_field_PRISMARINE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ia", "PRISMARINE_BRICKS", "field_10006", "PRISMARINE_BRICKS", "f_50378_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PRISMARINE_BRICKS
    [[maybe_unused]] static void set_field_PRISMARINE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ia", "PRISMARINE_BRICKS", "field_10006", "PRISMARINE_BRICKS", "f_50378_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_PRISMARINE
    [[maybe_unused]] static jobject get_field_DARK_PRISMARINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ib", "DARK_PRISMARINE", "field_10297", "DARK_PRISMARINE", "f_50379_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_PRISMARINE
    [[maybe_unused]] static void set_field_DARK_PRISMARINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ib", "DARK_PRISMARINE", "field_10297", "DARK_PRISMARINE", "f_50379_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PRISMARINE_STAIRS
    [[maybe_unused]] static jobject get_field_PRISMARINE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ic", "PRISMARINE_STAIRS", "field_10350", "PRISMARINE_STAIRS", "f_50380_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PRISMARINE_STAIRS
    [[maybe_unused]] static void set_field_PRISMARINE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ic", "PRISMARINE_STAIRS", "field_10350", "PRISMARINE_STAIRS", "f_50380_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PRISMARINE_BRICK_STAIRS
    [[maybe_unused]] static jobject get_field_PRISMARINE_BRICK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("id", "PRISMARINE_BRICK_STAIRS", "field_10190", "PRISMARINE_BRICK_STAIRS", "f_50381_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PRISMARINE_BRICK_STAIRS
    [[maybe_unused]] static void set_field_PRISMARINE_BRICK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("id", "PRISMARINE_BRICK_STAIRS", "field_10190", "PRISMARINE_BRICK_STAIRS", "f_50381_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_PRISMARINE_STAIRS
    [[maybe_unused]] static jobject get_field_DARK_PRISMARINE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ie", "DARK_PRISMARINE_STAIRS", "field_10130", "DARK_PRISMARINE_STAIRS", "f_50382_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_PRISMARINE_STAIRS
    [[maybe_unused]] static void set_field_DARK_PRISMARINE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ie", "DARK_PRISMARINE_STAIRS", "field_10130", "DARK_PRISMARINE_STAIRS", "f_50382_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PRISMARINE_SLAB
    [[maybe_unused]] static jobject get_field_PRISMARINE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("if", "PRISMARINE_SLAB", "field_10389", "PRISMARINE_SLAB", "f_50383_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PRISMARINE_SLAB
    [[maybe_unused]] static void set_field_PRISMARINE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("if", "PRISMARINE_SLAB", "field_10389", "PRISMARINE_SLAB", "f_50383_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PRISMARINE_BRICK_SLAB
    [[maybe_unused]] static jobject get_field_PRISMARINE_BRICK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ig", "PRISMARINE_BRICK_SLAB", "field_10236", "PRISMARINE_BRICK_SLAB", "f_50384_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PRISMARINE_BRICK_SLAB
    [[maybe_unused]] static void set_field_PRISMARINE_BRICK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ig", "PRISMARINE_BRICK_SLAB", "field_10236", "PRISMARINE_BRICK_SLAB", "f_50384_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_PRISMARINE_SLAB
    [[maybe_unused]] static jobject get_field_DARK_PRISMARINE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ih", "DARK_PRISMARINE_SLAB", "field_10623", "DARK_PRISMARINE_SLAB", "f_50385_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_PRISMARINE_SLAB
    [[maybe_unused]] static void set_field_DARK_PRISMARINE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ih", "DARK_PRISMARINE_SLAB", "field_10623", "DARK_PRISMARINE_SLAB", "f_50385_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SEA_LANTERN
    [[maybe_unused]] static jobject get_field_SEA_LANTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ii", "SEA_LANTERN", "field_10174", "SEA_LANTERN", "f_50386_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SEA_LANTERN
    [[maybe_unused]] static void set_field_SEA_LANTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ii", "SEA_LANTERN", "field_10174", "SEA_LANTERN", "f_50386_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#HAY_BLOCK
    [[maybe_unused]] static jobject get_field_HAY_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ij", "HAY_BLOCK", "field_10359", "HAY_BLOCK", "f_50335_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#HAY_BLOCK
    [[maybe_unused]] static void set_field_HAY_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ij", "HAY_BLOCK", "field_10359", "HAY_BLOCK", "f_50335_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_CARPET
    [[maybe_unused]] static jobject get_field_WHITE_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ik", "WHITE_CARPET", "field_10466", "WHITE_CARPET", "f_50336_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_CARPET
    [[maybe_unused]] static void set_field_WHITE_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ik", "WHITE_CARPET", "field_10466", "WHITE_CARPET", "f_50336_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_CARPET
    [[maybe_unused]] static jobject get_field_ORANGE_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("il", "ORANGE_CARPET", "field_9977", "ORANGE_CARPET", "f_50337_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_CARPET
    [[maybe_unused]] static void set_field_ORANGE_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("il", "ORANGE_CARPET", "field_9977", "ORANGE_CARPET", "f_50337_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_CARPET
    [[maybe_unused]] static jobject get_field_MAGENTA_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("im", "MAGENTA_CARPET", "field_10482", "MAGENTA_CARPET", "f_50338_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_CARPET
    [[maybe_unused]] static void set_field_MAGENTA_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("im", "MAGENTA_CARPET", "field_10482", "MAGENTA_CARPET", "f_50338_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_CARPET
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("in", "LIGHT_BLUE_CARPET", "field_10290", "LIGHT_BLUE_CARPET", "f_50339_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_CARPET
    [[maybe_unused]] static void set_field_LIGHT_BLUE_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("in", "LIGHT_BLUE_CARPET", "field_10290", "LIGHT_BLUE_CARPET", "f_50339_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_CARPET
    [[maybe_unused]] static jobject get_field_YELLOW_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("io", "YELLOW_CARPET", "field_10512", "YELLOW_CARPET", "f_50340_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_CARPET
    [[maybe_unused]] static void set_field_YELLOW_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("io", "YELLOW_CARPET", "field_10512", "YELLOW_CARPET", "f_50340_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_CARPET
    [[maybe_unused]] static jobject get_field_LIME_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ip", "LIME_CARPET", "field_10040", "LIME_CARPET", "f_50341_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_CARPET
    [[maybe_unused]] static void set_field_LIME_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ip", "LIME_CARPET", "field_10040", "LIME_CARPET", "f_50341_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_CARPET
    [[maybe_unused]] static jobject get_field_PINK_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iq", "PINK_CARPET", "field_10393", "PINK_CARPET", "f_50342_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_CARPET
    [[maybe_unused]] static void set_field_PINK_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iq", "PINK_CARPET", "field_10393", "PINK_CARPET", "f_50342_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_CARPET
    [[maybe_unused]] static jobject get_field_GRAY_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ir", "GRAY_CARPET", "field_10591", "GRAY_CARPET", "f_50343_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_CARPET
    [[maybe_unused]] static void set_field_GRAY_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ir", "GRAY_CARPET", "field_10591", "GRAY_CARPET", "f_50343_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_CARPET
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("is", "LIGHT_GRAY_CARPET", "field_10209", "LIGHT_GRAY_CARPET", "f_50344_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_CARPET
    [[maybe_unused]] static void set_field_LIGHT_GRAY_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("is", "LIGHT_GRAY_CARPET", "field_10209", "LIGHT_GRAY_CARPET", "f_50344_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_CARPET
    [[maybe_unused]] static jobject get_field_CYAN_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("it", "CYAN_CARPET", "field_10433", "CYAN_CARPET", "f_50345_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_CARPET
    [[maybe_unused]] static void set_field_CYAN_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("it", "CYAN_CARPET", "field_10433", "CYAN_CARPET", "f_50345_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_CARPET
    [[maybe_unused]] static jobject get_field_PURPLE_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iu", "PURPLE_CARPET", "field_10510", "PURPLE_CARPET", "f_50346_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_CARPET
    [[maybe_unused]] static void set_field_PURPLE_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iu", "PURPLE_CARPET", "field_10510", "PURPLE_CARPET", "f_50346_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_CARPET
    [[maybe_unused]] static jobject get_field_BLUE_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iv", "BLUE_CARPET", "field_10043", "BLUE_CARPET", "f_50347_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_CARPET
    [[maybe_unused]] static void set_field_BLUE_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iv", "BLUE_CARPET", "field_10043", "BLUE_CARPET", "f_50347_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_CARPET
    [[maybe_unused]] static jobject get_field_BROWN_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iw", "BROWN_CARPET", "field_10473", "BROWN_CARPET", "f_50348_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_CARPET
    [[maybe_unused]] static void set_field_BROWN_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iw", "BROWN_CARPET", "field_10473", "BROWN_CARPET", "f_50348_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_CARPET
    [[maybe_unused]] static jobject get_field_GREEN_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ix", "GREEN_CARPET", "field_10338", "GREEN_CARPET", "f_50349_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_CARPET
    [[maybe_unused]] static void set_field_GREEN_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ix", "GREEN_CARPET", "field_10338", "GREEN_CARPET", "f_50349_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_CARPET
    [[maybe_unused]] static jobject get_field_RED_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iy", "RED_CARPET", "field_10536", "RED_CARPET", "f_50350_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_CARPET
    [[maybe_unused]] static void set_field_RED_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iy", "RED_CARPET", "field_10536", "RED_CARPET", "f_50350_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_CARPET
    [[maybe_unused]] static jobject get_field_BLACK_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iz", "BLACK_CARPET", "field_10106", "BLACK_CARPET", "f_50351_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_CARPET
    [[maybe_unused]] static void set_field_BLACK_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iz", "BLACK_CARPET", "field_10106", "BLACK_CARPET", "f_50351_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TERRACOTTA
    [[maybe_unused]] static jobject get_field_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iA", "TERRACOTTA", "field_10415", "TERRACOTTA", "f_50352_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TERRACOTTA
    [[maybe_unused]] static void set_field_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iA", "TERRACOTTA", "field_10415", "TERRACOTTA", "f_50352_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COAL_BLOCK
    [[maybe_unused]] static jobject get_field_COAL_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iB", "COAL_BLOCK", "field_10381", "COAL_BLOCK", "f_50353_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COAL_BLOCK
    [[maybe_unused]] static void set_field_COAL_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iB", "COAL_BLOCK", "field_10381", "COAL_BLOCK", "f_50353_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PACKED_ICE
    [[maybe_unused]] static jobject get_field_PACKED_ICE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iC", "PACKED_ICE", "field_10225", "PACKED_ICE", "f_50354_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PACKED_ICE
    [[maybe_unused]] static void set_field_PACKED_ICE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iC", "PACKED_ICE", "field_10225", "PACKED_ICE", "f_50354_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SUNFLOWER
    [[maybe_unused]] static jobject get_field_SUNFLOWER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iD", "SUNFLOWER", "field_10583", "SUNFLOWER", "f_50355_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SUNFLOWER
    [[maybe_unused]] static void set_field_SUNFLOWER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iD", "SUNFLOWER", "field_10583", "SUNFLOWER", "f_50355_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LILAC
    [[maybe_unused]] static jobject get_field_LILAC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iE", "LILAC", "field_10378", "LILAC", "f_50356_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LILAC
    [[maybe_unused]] static void set_field_LILAC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iE", "LILAC", "field_10378", "LILAC", "f_50356_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ROSE_BUSH
    [[maybe_unused]] static jobject get_field_ROSE_BUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iF", "ROSE_BUSH", "field_10430", "ROSE_BUSH", "f_50357_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ROSE_BUSH
    [[maybe_unused]] static void set_field_ROSE_BUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iF", "ROSE_BUSH", "field_10430", "ROSE_BUSH", "f_50357_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PEONY
    [[maybe_unused]] static jobject get_field_PEONY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iG", "PEONY", "field_10003", "PEONY", "f_50358_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PEONY
    [[maybe_unused]] static void set_field_PEONY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iG", "PEONY", "field_10003", "PEONY", "f_50358_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TALL_GRASS
    [[maybe_unused]] static jobject get_field_TALL_GRASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iH", "TALL_GRASS", "field_10214", "TALL_GRASS", "f_50359_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TALL_GRASS
    [[maybe_unused]] static void set_field_TALL_GRASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iH", "TALL_GRASS", "field_10214", "TALL_GRASS", "f_50359_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LARGE_FERN
    [[maybe_unused]] static jobject get_field_LARGE_FERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iI", "LARGE_FERN", "field_10313", "LARGE_FERN", "f_50360_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LARGE_FERN
    [[maybe_unused]] static void set_field_LARGE_FERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iI", "LARGE_FERN", "field_10313", "LARGE_FERN", "f_50360_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_BANNER
    [[maybe_unused]] static jobject get_field_WHITE_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iJ", "WHITE_BANNER", "field_10154", "WHITE_BANNER", "f_50414_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_BANNER
    [[maybe_unused]] static void set_field_WHITE_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iJ", "WHITE_BANNER", "field_10154", "WHITE_BANNER", "f_50414_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_BANNER
    [[maybe_unused]] static jobject get_field_ORANGE_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iK", "ORANGE_BANNER", "field_10045", "ORANGE_BANNER", "f_50415_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_BANNER
    [[maybe_unused]] static void set_field_ORANGE_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iK", "ORANGE_BANNER", "field_10045", "ORANGE_BANNER", "f_50415_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_BANNER
    [[maybe_unused]] static jobject get_field_MAGENTA_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iL", "MAGENTA_BANNER", "field_10438", "MAGENTA_BANNER", "f_50416_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_BANNER
    [[maybe_unused]] static void set_field_MAGENTA_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iL", "MAGENTA_BANNER", "field_10438", "MAGENTA_BANNER", "f_50416_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_BANNER
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iM", "LIGHT_BLUE_BANNER", "field_10452", "LIGHT_BLUE_BANNER", "f_50417_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_BANNER
    [[maybe_unused]] static void set_field_LIGHT_BLUE_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iM", "LIGHT_BLUE_BANNER", "field_10452", "LIGHT_BLUE_BANNER", "f_50417_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_BANNER
    [[maybe_unused]] static jobject get_field_YELLOW_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iN", "YELLOW_BANNER", "field_10547", "YELLOW_BANNER", "f_50418_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_BANNER
    [[maybe_unused]] static void set_field_YELLOW_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iN", "YELLOW_BANNER", "field_10547", "YELLOW_BANNER", "f_50418_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_BANNER
    [[maybe_unused]] static jobject get_field_LIME_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iO", "LIME_BANNER", "field_10229", "LIME_BANNER", "f_50419_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_BANNER
    [[maybe_unused]] static void set_field_LIME_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iO", "LIME_BANNER", "field_10229", "LIME_BANNER", "f_50419_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_BANNER
    [[maybe_unused]] static jobject get_field_PINK_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iP", "PINK_BANNER", "field_10612", "PINK_BANNER", "f_50420_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_BANNER
    [[maybe_unused]] static void set_field_PINK_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iP", "PINK_BANNER", "field_10612", "PINK_BANNER", "f_50420_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_BANNER
    [[maybe_unused]] static jobject get_field_GRAY_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iQ", "GRAY_BANNER", "field_10185", "GRAY_BANNER", "f_50421_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_BANNER
    [[maybe_unused]] static void set_field_GRAY_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iQ", "GRAY_BANNER", "field_10185", "GRAY_BANNER", "f_50421_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_BANNER
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iR", "LIGHT_GRAY_BANNER", "field_9985", "LIGHT_GRAY_BANNER", "f_50422_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_BANNER
    [[maybe_unused]] static void set_field_LIGHT_GRAY_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iR", "LIGHT_GRAY_BANNER", "field_9985", "LIGHT_GRAY_BANNER", "f_50422_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_BANNER
    [[maybe_unused]] static jobject get_field_CYAN_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iS", "CYAN_BANNER", "field_10165", "CYAN_BANNER", "f_50423_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_BANNER
    [[maybe_unused]] static void set_field_CYAN_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iS", "CYAN_BANNER", "field_10165", "CYAN_BANNER", "f_50423_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_BANNER
    [[maybe_unused]] static jobject get_field_PURPLE_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iT", "PURPLE_BANNER", "field_10368", "PURPLE_BANNER", "f_50424_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_BANNER
    [[maybe_unused]] static void set_field_PURPLE_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iT", "PURPLE_BANNER", "field_10368", "PURPLE_BANNER", "f_50424_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_BANNER
    [[maybe_unused]] static jobject get_field_BLUE_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iU", "BLUE_BANNER", "field_10281", "BLUE_BANNER", "f_50425_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_BANNER
    [[maybe_unused]] static void set_field_BLUE_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iU", "BLUE_BANNER", "field_10281", "BLUE_BANNER", "f_50425_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_BANNER
    [[maybe_unused]] static jobject get_field_BROWN_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iV", "BROWN_BANNER", "field_10602", "BROWN_BANNER", "f_50426_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_BANNER
    [[maybe_unused]] static void set_field_BROWN_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iV", "BROWN_BANNER", "field_10602", "BROWN_BANNER", "f_50426_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_BANNER
    [[maybe_unused]] static jobject get_field_GREEN_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iW", "GREEN_BANNER", "field_10198", "GREEN_BANNER", "f_50427_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_BANNER
    [[maybe_unused]] static void set_field_GREEN_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iW", "GREEN_BANNER", "field_10198", "GREEN_BANNER", "f_50427_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_BANNER
    [[maybe_unused]] static jobject get_field_RED_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iX", "RED_BANNER", "field_10406", "RED_BANNER", "f_50428_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_BANNER
    [[maybe_unused]] static void set_field_RED_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iX", "RED_BANNER", "field_10406", "RED_BANNER", "f_50428_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_BANNER
    [[maybe_unused]] static jobject get_field_BLACK_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iY", "BLACK_BANNER", "field_10062", "BLACK_BANNER", "f_50429_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_BANNER
    [[maybe_unused]] static void set_field_BLACK_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iY", "BLACK_BANNER", "field_10062", "BLACK_BANNER", "f_50429_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_WALL_BANNER
    [[maybe_unused]] static jobject get_field_WHITE_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iZ", "WHITE_WALL_BANNER", "field_10202", "WHITE_WALL_BANNER", "f_50430_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_WALL_BANNER
    [[maybe_unused]] static void set_field_WHITE_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("iZ", "WHITE_WALL_BANNER", "field_10202", "WHITE_WALL_BANNER", "f_50430_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_WALL_BANNER
    [[maybe_unused]] static jobject get_field_ORANGE_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ja", "ORANGE_WALL_BANNER", "field_10599", "ORANGE_WALL_BANNER", "f_50431_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_WALL_BANNER
    [[maybe_unused]] static void set_field_ORANGE_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ja", "ORANGE_WALL_BANNER", "field_10599", "ORANGE_WALL_BANNER", "f_50431_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_WALL_BANNER
    [[maybe_unused]] static jobject get_field_MAGENTA_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jb", "MAGENTA_WALL_BANNER", "field_10274", "MAGENTA_WALL_BANNER", "f_50432_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_WALL_BANNER
    [[maybe_unused]] static void set_field_MAGENTA_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jb", "MAGENTA_WALL_BANNER", "field_10274", "MAGENTA_WALL_BANNER", "f_50432_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_WALL_BANNER
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jc", "LIGHT_BLUE_WALL_BANNER", "field_10050", "LIGHT_BLUE_WALL_BANNER", "f_50433_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_WALL_BANNER
    [[maybe_unused]] static void set_field_LIGHT_BLUE_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jc", "LIGHT_BLUE_WALL_BANNER", "field_10050", "LIGHT_BLUE_WALL_BANNER", "f_50433_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_WALL_BANNER
    [[maybe_unused]] static jobject get_field_YELLOW_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jd", "YELLOW_WALL_BANNER", "field_10139", "YELLOW_WALL_BANNER", "f_50434_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_WALL_BANNER
    [[maybe_unused]] static void set_field_YELLOW_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jd", "YELLOW_WALL_BANNER", "field_10139", "YELLOW_WALL_BANNER", "f_50434_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_WALL_BANNER
    [[maybe_unused]] static jobject get_field_LIME_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("je", "LIME_WALL_BANNER", "field_10318", "LIME_WALL_BANNER", "f_50435_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_WALL_BANNER
    [[maybe_unused]] static void set_field_LIME_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("je", "LIME_WALL_BANNER", "field_10318", "LIME_WALL_BANNER", "f_50435_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_WALL_BANNER
    [[maybe_unused]] static jobject get_field_PINK_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jf", "PINK_WALL_BANNER", "field_10531", "PINK_WALL_BANNER", "f_50436_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_WALL_BANNER
    [[maybe_unused]] static void set_field_PINK_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jf", "PINK_WALL_BANNER", "field_10531", "PINK_WALL_BANNER", "f_50436_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_WALL_BANNER
    [[maybe_unused]] static jobject get_field_GRAY_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jg", "GRAY_WALL_BANNER", "field_10267", "GRAY_WALL_BANNER", "f_50437_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_WALL_BANNER
    [[maybe_unused]] static void set_field_GRAY_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jg", "GRAY_WALL_BANNER", "field_10267", "GRAY_WALL_BANNER", "f_50437_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_WALL_BANNER
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jh", "LIGHT_GRAY_WALL_BANNER", "field_10604", "LIGHT_GRAY_WALL_BANNER", "f_50438_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_WALL_BANNER
    [[maybe_unused]] static void set_field_LIGHT_GRAY_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jh", "LIGHT_GRAY_WALL_BANNER", "field_10604", "LIGHT_GRAY_WALL_BANNER", "f_50438_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_WALL_BANNER
    [[maybe_unused]] static jobject get_field_CYAN_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ji", "CYAN_WALL_BANNER", "field_10372", "CYAN_WALL_BANNER", "f_50439_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_WALL_BANNER
    [[maybe_unused]] static void set_field_CYAN_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ji", "CYAN_WALL_BANNER", "field_10372", "CYAN_WALL_BANNER", "f_50439_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_WALL_BANNER
    [[maybe_unused]] static jobject get_field_PURPLE_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jj", "PURPLE_WALL_BANNER", "field_10054", "PURPLE_WALL_BANNER", "f_50388_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_WALL_BANNER
    [[maybe_unused]] static void set_field_PURPLE_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jj", "PURPLE_WALL_BANNER", "field_10054", "PURPLE_WALL_BANNER", "f_50388_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_WALL_BANNER
    [[maybe_unused]] static jobject get_field_BLUE_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jk", "BLUE_WALL_BANNER", "field_10067", "BLUE_WALL_BANNER", "f_50389_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_WALL_BANNER
    [[maybe_unused]] static void set_field_BLUE_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jk", "BLUE_WALL_BANNER", "field_10067", "BLUE_WALL_BANNER", "f_50389_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_WALL_BANNER
    [[maybe_unused]] static jobject get_field_BROWN_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jl", "BROWN_WALL_BANNER", "field_10370", "BROWN_WALL_BANNER", "f_50390_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_WALL_BANNER
    [[maybe_unused]] static void set_field_BROWN_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jl", "BROWN_WALL_BANNER", "field_10370", "BROWN_WALL_BANNER", "f_50390_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_WALL_BANNER
    [[maybe_unused]] static jobject get_field_GREEN_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jm", "GREEN_WALL_BANNER", "field_10594", "GREEN_WALL_BANNER", "f_50391_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_WALL_BANNER
    [[maybe_unused]] static void set_field_GREEN_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jm", "GREEN_WALL_BANNER", "field_10594", "GREEN_WALL_BANNER", "f_50391_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_WALL_BANNER
    [[maybe_unused]] static jobject get_field_RED_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jn", "RED_WALL_BANNER", "field_10279", "RED_WALL_BANNER", "f_50392_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_WALL_BANNER
    [[maybe_unused]] static void set_field_RED_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jn", "RED_WALL_BANNER", "field_10279", "RED_WALL_BANNER", "f_50392_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_WALL_BANNER
    [[maybe_unused]] static jobject get_field_BLACK_WALL_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jo", "BLACK_WALL_BANNER", "field_10537", "BLACK_WALL_BANNER", "f_50393_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_WALL_BANNER
    [[maybe_unused]] static void set_field_BLACK_WALL_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jo", "BLACK_WALL_BANNER", "field_10537", "BLACK_WALL_BANNER", "f_50393_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_SANDSTONE
    [[maybe_unused]] static jobject get_field_RED_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jp", "RED_SANDSTONE", "field_10344", "RED_SANDSTONE", "f_50394_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_SANDSTONE
    [[maybe_unused]] static void set_field_RED_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jp", "RED_SANDSTONE", "field_10344", "RED_SANDSTONE", "f_50394_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHISELED_RED_SANDSTONE
    [[maybe_unused]] static jobject get_field_CHISELED_RED_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jq", "CHISELED_RED_SANDSTONE", "field_10117", "CHISELED_RED_SANDSTONE", "f_50395_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHISELED_RED_SANDSTONE
    [[maybe_unused]] static void set_field_CHISELED_RED_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jq", "CHISELED_RED_SANDSTONE", "field_10117", "CHISELED_RED_SANDSTONE", "f_50395_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CUT_RED_SANDSTONE
    [[maybe_unused]] static jobject get_field_CUT_RED_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jr", "CUT_RED_SANDSTONE", "field_10518", "CUT_RED_SANDSTONE", "f_50396_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CUT_RED_SANDSTONE
    [[maybe_unused]] static void set_field_CUT_RED_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jr", "CUT_RED_SANDSTONE", "field_10518", "CUT_RED_SANDSTONE", "f_50396_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_SANDSTONE_STAIRS
    [[maybe_unused]] static jobject get_field_RED_SANDSTONE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("js", "RED_SANDSTONE_STAIRS", "field_10420", "RED_SANDSTONE_STAIRS", "f_50397_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_SANDSTONE_STAIRS
    [[maybe_unused]] static void set_field_RED_SANDSTONE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("js", "RED_SANDSTONE_STAIRS", "field_10420", "RED_SANDSTONE_STAIRS", "f_50397_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OAK_SLAB
    [[maybe_unused]] static jobject get_field_OAK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jt", "OAK_SLAB", "field_10119", "OAK_SLAB", "f_50398_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OAK_SLAB
    [[maybe_unused]] static void set_field_OAK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jt", "OAK_SLAB", "field_10119", "OAK_SLAB", "f_50398_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_SLAB
    [[maybe_unused]] static jobject get_field_SPRUCE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ju", "SPRUCE_SLAB", "field_10071", "SPRUCE_SLAB", "f_50399_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_SLAB
    [[maybe_unused]] static void set_field_SPRUCE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ju", "SPRUCE_SLAB", "field_10071", "SPRUCE_SLAB", "f_50399_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_SLAB
    [[maybe_unused]] static jobject get_field_BIRCH_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jv", "BIRCH_SLAB", "field_10257", "BIRCH_SLAB", "f_50400_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_SLAB
    [[maybe_unused]] static void set_field_BIRCH_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jv", "BIRCH_SLAB", "field_10257", "BIRCH_SLAB", "f_50400_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_SLAB
    [[maybe_unused]] static jobject get_field_JUNGLE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jw", "JUNGLE_SLAB", "field_10617", "JUNGLE_SLAB", "f_50401_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_SLAB
    [[maybe_unused]] static void set_field_JUNGLE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jw", "JUNGLE_SLAB", "field_10617", "JUNGLE_SLAB", "f_50401_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_SLAB
    [[maybe_unused]] static jobject get_field_ACACIA_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jx", "ACACIA_SLAB", "field_10031", "ACACIA_SLAB", "f_50402_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_SLAB
    [[maybe_unused]] static void set_field_ACACIA_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jx", "ACACIA_SLAB", "field_10031", "ACACIA_SLAB", "f_50402_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_SLAB
    [[maybe_unused]] static jobject get_field_CHERRY_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jy", "CHERRY_SLAB", "field_42746", "CHERRY_SLAB", "f_271301_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_SLAB
    [[maybe_unused]] static void set_field_CHERRY_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jy", "CHERRY_SLAB", "field_42746", "CHERRY_SLAB", "f_271301_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_SLAB
    [[maybe_unused]] static jobject get_field_DARK_OAK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jz", "DARK_OAK_SLAB", "field_10500", "DARK_OAK_SLAB", "f_50403_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_SLAB
    [[maybe_unused]] static void set_field_DARK_OAK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jz", "DARK_OAK_SLAB", "field_10500", "DARK_OAK_SLAB", "f_50403_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_SLAB
    [[maybe_unused]] static jobject get_field_MANGROVE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jA", "MANGROVE_SLAB", "field_37564", "MANGROVE_SLAB", "f_220851_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_SLAB
    [[maybe_unused]] static void set_field_MANGROVE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jA", "MANGROVE_SLAB", "field_37564", "MANGROVE_SLAB", "f_220851_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_SLAB
    [[maybe_unused]] static jobject get_field_BAMBOO_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jB", "BAMBOO_SLAB", "field_40292", "BAMBOO_SLAB", "f_244004_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_SLAB
    [[maybe_unused]] static void set_field_BAMBOO_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jB", "BAMBOO_SLAB", "field_40292", "BAMBOO_SLAB", "f_244004_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_MOSAIC_SLAB
    [[maybe_unused]] static jobject get_field_BAMBOO_MOSAIC_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jC", "BAMBOO_MOSAIC_SLAB", "field_40293", "BAMBOO_MOSAIC_SLAB", "f_244230_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_MOSAIC_SLAB
    [[maybe_unused]] static void set_field_BAMBOO_MOSAIC_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jC", "BAMBOO_MOSAIC_SLAB", "field_40293", "BAMBOO_MOSAIC_SLAB", "f_244230_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STONE_SLAB
    [[maybe_unused]] static jobject get_field_STONE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jD", "STONE_SLAB", "field_10454", "STONE_SLAB", "f_50404_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STONE_SLAB
    [[maybe_unused]] static void set_field_STONE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jD", "STONE_SLAB", "field_10454", "STONE_SLAB", "f_50404_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOOTH_STONE_SLAB
    [[maybe_unused]] static jobject get_field_SMOOTH_STONE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jE", "SMOOTH_STONE_SLAB", "field_10136", "SMOOTH_STONE_SLAB", "f_50405_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOOTH_STONE_SLAB
    [[maybe_unused]] static void set_field_SMOOTH_STONE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jE", "SMOOTH_STONE_SLAB", "field_10136", "SMOOTH_STONE_SLAB", "f_50405_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SANDSTONE_SLAB
    [[maybe_unused]] static jobject get_field_SANDSTONE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jF", "SANDSTONE_SLAB", "field_10007", "SANDSTONE_SLAB", "f_50406_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SANDSTONE_SLAB
    [[maybe_unused]] static void set_field_SANDSTONE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jF", "SANDSTONE_SLAB", "field_10007", "SANDSTONE_SLAB", "f_50406_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CUT_SANDSTONE_SLAB
    [[maybe_unused]] static jobject get_field_CUT_SANDSTONE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jG", "CUT_SANDSTONE_SLAB", "field_18890", "CUT_SANDSTONE_SLAB", "f_50407_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CUT_SANDSTONE_SLAB
    [[maybe_unused]] static void set_field_CUT_SANDSTONE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jG", "CUT_SANDSTONE_SLAB", "field_18890", "CUT_SANDSTONE_SLAB", "f_50407_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PETRIFIED_OAK_SLAB
    [[maybe_unused]] static jobject get_field_PETRIFIED_OAK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jH", "PETRIFIED_OAK_SLAB", "field_10298", "PETRIFIED_OAK_SLAB", "f_50408_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PETRIFIED_OAK_SLAB
    [[maybe_unused]] static void set_field_PETRIFIED_OAK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jH", "PETRIFIED_OAK_SLAB", "field_10298", "PETRIFIED_OAK_SLAB", "f_50408_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COBBLESTONE_SLAB
    [[maybe_unused]] static jobject get_field_COBBLESTONE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jI", "COBBLESTONE_SLAB", "field_10351", "COBBLESTONE_SLAB", "f_50409_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COBBLESTONE_SLAB
    [[maybe_unused]] static void set_field_COBBLESTONE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jI", "COBBLESTONE_SLAB", "field_10351", "COBBLESTONE_SLAB", "f_50409_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BRICK_SLAB
    [[maybe_unused]] static jobject get_field_BRICK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jJ", "BRICK_SLAB", "field_10191", "BRICK_SLAB", "f_50410_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BRICK_SLAB
    [[maybe_unused]] static void set_field_BRICK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jJ", "BRICK_SLAB", "field_10191", "BRICK_SLAB", "f_50410_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STONE_BRICK_SLAB
    [[maybe_unused]] static jobject get_field_STONE_BRICK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jK", "STONE_BRICK_SLAB", "field_10131", "STONE_BRICK_SLAB", "f_50411_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STONE_BRICK_SLAB
    [[maybe_unused]] static void set_field_STONE_BRICK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jK", "STONE_BRICK_SLAB", "field_10131", "STONE_BRICK_SLAB", "f_50411_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MUD_BRICK_SLAB
    [[maybe_unused]] static jobject get_field_MUD_BRICK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jL", "MUD_BRICK_SLAB", "field_37562", "MUD_BRICK_SLAB", "f_220849_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MUD_BRICK_SLAB
    [[maybe_unused]] static void set_field_MUD_BRICK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jL", "MUD_BRICK_SLAB", "field_37562", "MUD_BRICK_SLAB", "f_220849_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHER_BRICK_SLAB
    [[maybe_unused]] static jobject get_field_NETHER_BRICK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jM", "NETHER_BRICK_SLAB", "field_10390", "NETHER_BRICK_SLAB", "f_50412_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHER_BRICK_SLAB
    [[maybe_unused]] static void set_field_NETHER_BRICK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jM", "NETHER_BRICK_SLAB", "field_10390", "NETHER_BRICK_SLAB", "f_50412_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#QUARTZ_SLAB
    [[maybe_unused]] static jobject get_field_QUARTZ_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jN", "QUARTZ_SLAB", "field_10237", "QUARTZ_SLAB", "f_50413_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#QUARTZ_SLAB
    [[maybe_unused]] static void set_field_QUARTZ_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jN", "QUARTZ_SLAB", "field_10237", "QUARTZ_SLAB", "f_50413_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_SANDSTONE_SLAB
    [[maybe_unused]] static jobject get_field_RED_SANDSTONE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jO", "RED_SANDSTONE_SLAB", "field_10624", "RED_SANDSTONE_SLAB", "f_50467_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_SANDSTONE_SLAB
    [[maybe_unused]] static void set_field_RED_SANDSTONE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jO", "RED_SANDSTONE_SLAB", "field_10624", "RED_SANDSTONE_SLAB", "f_50467_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CUT_RED_SANDSTONE_SLAB
    [[maybe_unused]] static jobject get_field_CUT_RED_SANDSTONE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jP", "CUT_RED_SANDSTONE_SLAB", "field_18891", "CUT_RED_SANDSTONE_SLAB", "f_50468_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CUT_RED_SANDSTONE_SLAB
    [[maybe_unused]] static void set_field_CUT_RED_SANDSTONE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jP", "CUT_RED_SANDSTONE_SLAB", "field_18891", "CUT_RED_SANDSTONE_SLAB", "f_50468_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPUR_SLAB
    [[maybe_unused]] static jobject get_field_PURPUR_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jQ", "PURPUR_SLAB", "field_10175", "PURPUR_SLAB", "f_50469_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPUR_SLAB
    [[maybe_unused]] static void set_field_PURPUR_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jQ", "PURPUR_SLAB", "field_10175", "PURPUR_SLAB", "f_50469_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOOTH_STONE
    [[maybe_unused]] static jobject get_field_SMOOTH_STONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jR", "SMOOTH_STONE", "field_10360", "SMOOTH_STONE", "f_50470_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOOTH_STONE
    [[maybe_unused]] static void set_field_SMOOTH_STONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jR", "SMOOTH_STONE", "field_10360", "SMOOTH_STONE", "f_50470_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOOTH_SANDSTONE
    [[maybe_unused]] static jobject get_field_SMOOTH_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jS", "SMOOTH_SANDSTONE", "field_10467", "SMOOTH_SANDSTONE", "f_50471_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOOTH_SANDSTONE
    [[maybe_unused]] static void set_field_SMOOTH_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jS", "SMOOTH_SANDSTONE", "field_10467", "SMOOTH_SANDSTONE", "f_50471_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOOTH_QUARTZ
    [[maybe_unused]] static jobject get_field_SMOOTH_QUARTZ() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jT", "SMOOTH_QUARTZ", "field_9978", "SMOOTH_QUARTZ", "f_50472_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOOTH_QUARTZ
    [[maybe_unused]] static void set_field_SMOOTH_QUARTZ(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jT", "SMOOTH_QUARTZ", "field_9978", "SMOOTH_QUARTZ", "f_50472_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOOTH_RED_SANDSTONE
    [[maybe_unused]] static jobject get_field_SMOOTH_RED_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jU", "SMOOTH_RED_SANDSTONE", "field_10483", "SMOOTH_RED_SANDSTONE", "f_50473_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOOTH_RED_SANDSTONE
    [[maybe_unused]] static void set_field_SMOOTH_RED_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jU", "SMOOTH_RED_SANDSTONE", "field_10483", "SMOOTH_RED_SANDSTONE", "f_50473_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_FENCE_GATE
    [[maybe_unused]] static jobject get_field_SPRUCE_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jV", "SPRUCE_FENCE_GATE", "field_10291", "SPRUCE_FENCE_GATE", "f_50474_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_FENCE_GATE
    [[maybe_unused]] static void set_field_SPRUCE_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jV", "SPRUCE_FENCE_GATE", "field_10291", "SPRUCE_FENCE_GATE", "f_50474_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_FENCE_GATE
    [[maybe_unused]] static jobject get_field_BIRCH_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jW", "BIRCH_FENCE_GATE", "field_10513", "BIRCH_FENCE_GATE", "f_50475_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_FENCE_GATE
    [[maybe_unused]] static void set_field_BIRCH_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jW", "BIRCH_FENCE_GATE", "field_10513", "BIRCH_FENCE_GATE", "f_50475_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_FENCE_GATE
    [[maybe_unused]] static jobject get_field_JUNGLE_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jX", "JUNGLE_FENCE_GATE", "field_10041", "JUNGLE_FENCE_GATE", "f_50476_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_FENCE_GATE
    [[maybe_unused]] static void set_field_JUNGLE_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jX", "JUNGLE_FENCE_GATE", "field_10041", "JUNGLE_FENCE_GATE", "f_50476_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_FENCE_GATE
    [[maybe_unused]] static jobject get_field_ACACIA_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jY", "ACACIA_FENCE_GATE", "field_10457", "ACACIA_FENCE_GATE", "f_50477_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_FENCE_GATE
    [[maybe_unused]] static void set_field_ACACIA_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jY", "ACACIA_FENCE_GATE", "field_10457", "ACACIA_FENCE_GATE", "f_50477_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_FENCE_GATE
    [[maybe_unused]] static jobject get_field_CHERRY_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jZ", "CHERRY_FENCE_GATE", "field_42745", "CHERRY_FENCE_GATE", "f_271274_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_FENCE_GATE
    [[maybe_unused]] static void set_field_CHERRY_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("jZ", "CHERRY_FENCE_GATE", "field_42745", "CHERRY_FENCE_GATE", "f_271274_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_FENCE_GATE
    [[maybe_unused]] static jobject get_field_DARK_OAK_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ka", "DARK_OAK_FENCE_GATE", "field_10196", "DARK_OAK_FENCE_GATE", "f_50478_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_FENCE_GATE
    [[maybe_unused]] static void set_field_DARK_OAK_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ka", "DARK_OAK_FENCE_GATE", "field_10196", "DARK_OAK_FENCE_GATE", "f_50478_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_FENCE_GATE
    [[maybe_unused]] static jobject get_field_MANGROVE_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kb", "MANGROVE_FENCE_GATE", "field_37563", "MANGROVE_FENCE_GATE", "f_220850_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_FENCE_GATE
    [[maybe_unused]] static void set_field_MANGROVE_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kb", "MANGROVE_FENCE_GATE", "field_37563", "MANGROVE_FENCE_GATE", "f_220850_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_FENCE_GATE
    [[maybe_unused]] static jobject get_field_BAMBOO_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kc", "BAMBOO_FENCE_GATE", "field_40289", "BAMBOO_FENCE_GATE", "f_244313_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_FENCE_GATE
    [[maybe_unused]] static void set_field_BAMBOO_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kc", "BAMBOO_FENCE_GATE", "field_40289", "BAMBOO_FENCE_GATE", "f_244313_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_FENCE
    [[maybe_unused]] static jobject get_field_SPRUCE_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kd", "SPRUCE_FENCE", "field_10020", "SPRUCE_FENCE", "f_50479_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_FENCE
    [[maybe_unused]] static void set_field_SPRUCE_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kd", "SPRUCE_FENCE", "field_10020", "SPRUCE_FENCE", "f_50479_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_FENCE
    [[maybe_unused]] static jobject get_field_BIRCH_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ke", "BIRCH_FENCE", "field_10299", "BIRCH_FENCE", "f_50480_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_FENCE
    [[maybe_unused]] static void set_field_BIRCH_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ke", "BIRCH_FENCE", "field_10299", "BIRCH_FENCE", "f_50480_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_FENCE
    [[maybe_unused]] static jobject get_field_JUNGLE_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kf", "JUNGLE_FENCE", "field_10319", "JUNGLE_FENCE", "f_50481_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_FENCE
    [[maybe_unused]] static void set_field_JUNGLE_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kf", "JUNGLE_FENCE", "field_10319", "JUNGLE_FENCE", "f_50481_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_FENCE
    [[maybe_unused]] static jobject get_field_ACACIA_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kg", "ACACIA_FENCE", "field_10144", "ACACIA_FENCE", "f_50482_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_FENCE
    [[maybe_unused]] static void set_field_ACACIA_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kg", "ACACIA_FENCE", "field_10144", "ACACIA_FENCE", "f_50482_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_FENCE
    [[maybe_unused]] static jobject get_field_CHERRY_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kh", "CHERRY_FENCE", "field_42747", "CHERRY_FENCE", "f_271219_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_FENCE
    [[maybe_unused]] static void set_field_CHERRY_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kh", "CHERRY_FENCE", "field_42747", "CHERRY_FENCE", "f_271219_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_FENCE
    [[maybe_unused]] static jobject get_field_DARK_OAK_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ki", "DARK_OAK_FENCE", "field_10132", "DARK_OAK_FENCE", "f_50483_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_FENCE
    [[maybe_unused]] static void set_field_DARK_OAK_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ki", "DARK_OAK_FENCE", "field_10132", "DARK_OAK_FENCE", "f_50483_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_FENCE
    [[maybe_unused]] static jobject get_field_MANGROVE_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kj", "MANGROVE_FENCE", "field_37565", "MANGROVE_FENCE", "f_220852_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_FENCE
    [[maybe_unused]] static void set_field_MANGROVE_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kj", "MANGROVE_FENCE", "field_37565", "MANGROVE_FENCE", "f_220852_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_FENCE
    [[maybe_unused]] static jobject get_field_BAMBOO_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kk", "BAMBOO_FENCE", "field_40290", "BAMBOO_FENCE", "f_244641_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_FENCE
    [[maybe_unused]] static void set_field_BAMBOO_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kk", "BAMBOO_FENCE", "field_40290", "BAMBOO_FENCE", "f_244641_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPRUCE_DOOR
    [[maybe_unused]] static jobject get_field_SPRUCE_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kl", "SPRUCE_DOOR", "field_10521", "SPRUCE_DOOR", "f_50484_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPRUCE_DOOR
    [[maybe_unused]] static void set_field_SPRUCE_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kl", "SPRUCE_DOOR", "field_10521", "SPRUCE_DOOR", "f_50484_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIRCH_DOOR
    [[maybe_unused]] static jobject get_field_BIRCH_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("km", "BIRCH_DOOR", "field_10352", "BIRCH_DOOR", "f_50485_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIRCH_DOOR
    [[maybe_unused]] static void set_field_BIRCH_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("km", "BIRCH_DOOR", "field_10352", "BIRCH_DOOR", "f_50485_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JUNGLE_DOOR
    [[maybe_unused]] static jobject get_field_JUNGLE_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kn", "JUNGLE_DOOR", "field_10627", "JUNGLE_DOOR", "f_50486_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JUNGLE_DOOR
    [[maybe_unused]] static void set_field_JUNGLE_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kn", "JUNGLE_DOOR", "field_10627", "JUNGLE_DOOR", "f_50486_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ACACIA_DOOR
    [[maybe_unused]] static jobject get_field_ACACIA_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ko", "ACACIA_DOOR", "field_10232", "ACACIA_DOOR", "f_50487_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ACACIA_DOOR
    [[maybe_unused]] static void set_field_ACACIA_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ko", "ACACIA_DOOR", "field_10232", "ACACIA_DOOR", "f_50487_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHERRY_DOOR
    [[maybe_unused]] static jobject get_field_CHERRY_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kp", "CHERRY_DOOR", "field_42748", "CHERRY_DOOR", "f_271169_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHERRY_DOOR
    [[maybe_unused]] static void set_field_CHERRY_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kp", "CHERRY_DOOR", "field_42748", "CHERRY_DOOR", "f_271169_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DARK_OAK_DOOR
    [[maybe_unused]] static jobject get_field_DARK_OAK_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kq", "DARK_OAK_DOOR", "field_10403", "DARK_OAK_DOOR", "f_50488_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DARK_OAK_DOOR
    [[maybe_unused]] static void set_field_DARK_OAK_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kq", "DARK_OAK_DOOR", "field_10403", "DARK_OAK_DOOR", "f_50488_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MANGROVE_DOOR
    [[maybe_unused]] static jobject get_field_MANGROVE_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kr", "MANGROVE_DOOR", "field_37566", "MANGROVE_DOOR", "f_220853_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MANGROVE_DOOR
    [[maybe_unused]] static void set_field_MANGROVE_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kr", "MANGROVE_DOOR", "field_37566", "MANGROVE_DOOR", "f_220853_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_DOOR
    [[maybe_unused]] static jobject get_field_BAMBOO_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ks", "BAMBOO_DOOR", "field_40291", "BAMBOO_DOOR", "f_244648_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_DOOR
    [[maybe_unused]] static void set_field_BAMBOO_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ks", "BAMBOO_DOOR", "field_40291", "BAMBOO_DOOR", "f_244648_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#END_ROD
    [[maybe_unused]] static jobject get_field_END_ROD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kt", "END_ROD", "field_10455", "END_ROD", "f_50489_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#END_ROD
    [[maybe_unused]] static void set_field_END_ROD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kt", "END_ROD", "field_10455", "END_ROD", "f_50489_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHORUS_PLANT
    [[maybe_unused]] static jobject get_field_CHORUS_PLANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ku", "CHORUS_PLANT", "field_10021", "CHORUS_PLANT", "f_50490_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHORUS_PLANT
    [[maybe_unused]] static void set_field_CHORUS_PLANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ku", "CHORUS_PLANT", "field_10021", "CHORUS_PLANT", "f_50490_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHORUS_FLOWER
    [[maybe_unused]] static jobject get_field_CHORUS_FLOWER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kv", "CHORUS_FLOWER", "field_10528", "CHORUS_FLOWER", "f_50491_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHORUS_FLOWER
    [[maybe_unused]] static void set_field_CHORUS_FLOWER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kv", "CHORUS_FLOWER", "field_10528", "CHORUS_FLOWER", "f_50491_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPUR_BLOCK
    [[maybe_unused]] static jobject get_field_PURPUR_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kw", "PURPUR_BLOCK", "field_10286", "PURPUR_BLOCK", "f_50492_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPUR_BLOCK
    [[maybe_unused]] static void set_field_PURPUR_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kw", "PURPUR_BLOCK", "field_10286", "PURPUR_BLOCK", "f_50492_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPUR_PILLAR
    [[maybe_unused]] static jobject get_field_PURPUR_PILLAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kx", "PURPUR_PILLAR", "field_10505", "PURPUR_PILLAR", "f_50441_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPUR_PILLAR
    [[maybe_unused]] static void set_field_PURPUR_PILLAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kx", "PURPUR_PILLAR", "field_10505", "PURPUR_PILLAR", "f_50441_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPUR_STAIRS
    [[maybe_unused]] static jobject get_field_PURPUR_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ky", "PURPUR_STAIRS", "field_9992", "PURPUR_STAIRS", "f_50442_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPUR_STAIRS
    [[maybe_unused]] static void set_field_PURPUR_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ky", "PURPUR_STAIRS", "field_9992", "PURPUR_STAIRS", "f_50442_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#END_STONE_BRICKS
    [[maybe_unused]] static jobject get_field_END_STONE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kz", "END_STONE_BRICKS", "field_10462", "END_STONE_BRICKS", "f_50443_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#END_STONE_BRICKS
    [[maybe_unused]] static void set_field_END_STONE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kz", "END_STONE_BRICKS", "field_10462", "END_STONE_BRICKS", "f_50443_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TORCHFLOWER_CROP
    [[maybe_unused]] static jobject get_field_TORCHFLOWER_CROP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kA", "TORCHFLOWER_CROP", "field_42749", "TORCHFLOWER_CROP", "f_271410_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TORCHFLOWER_CROP
    [[maybe_unused]] static void set_field_TORCHFLOWER_CROP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kA", "TORCHFLOWER_CROP", "field_42749", "TORCHFLOWER_CROP", "f_271410_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PITCHER_CROP
    [[maybe_unused]] static jobject get_field_PITCHER_CROP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kB", "PITCHER_CROP", "field_43228", "PITCHER_CROP", "f_276665_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PITCHER_CROP
    [[maybe_unused]] static void set_field_PITCHER_CROP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kB", "PITCHER_CROP", "field_43228", "PITCHER_CROP", "f_276665_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PITCHER_PLANT
    [[maybe_unused]] static jobject get_field_PITCHER_PLANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kC", "PITCHER_PLANT", "field_43229", "PITCHER_PLANT", "f_276668_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PITCHER_PLANT
    [[maybe_unused]] static void set_field_PITCHER_PLANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kC", "PITCHER_PLANT", "field_43229", "PITCHER_PLANT", "f_276668_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BEETROOTS
    [[maybe_unused]] static jobject get_field_BEETROOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kD", "BEETROOTS", "field_10341", "BEETROOTS", "f_50444_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BEETROOTS
    [[maybe_unused]] static void set_field_BEETROOTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kD", "BEETROOTS", "field_10341", "BEETROOTS", "f_50444_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DIRT_PATH
    [[maybe_unused]] static jobject get_field_DIRT_PATH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kE", "DIRT_PATH", "field_10194", "DIRT_PATH", "f_152481_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DIRT_PATH
    [[maybe_unused]] static void set_field_DIRT_PATH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kE", "DIRT_PATH", "field_10194", "DIRT_PATH", "f_152481_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#END_GATEWAY
    [[maybe_unused]] static jobject get_field_END_GATEWAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kF", "END_GATEWAY", "field_10613", "END_GATEWAY", "f_50446_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#END_GATEWAY
    [[maybe_unused]] static void set_field_END_GATEWAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kF", "END_GATEWAY", "field_10613", "END_GATEWAY", "f_50446_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#REPEATING_COMMAND_BLOCK
    [[maybe_unused]] static jobject get_field_REPEATING_COMMAND_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kG", "REPEATING_COMMAND_BLOCK", "field_10263", "REPEATING_COMMAND_BLOCK", "f_50447_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#REPEATING_COMMAND_BLOCK
    [[maybe_unused]] static void set_field_REPEATING_COMMAND_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kG", "REPEATING_COMMAND_BLOCK", "field_10263", "REPEATING_COMMAND_BLOCK", "f_50447_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHAIN_COMMAND_BLOCK
    [[maybe_unused]] static jobject get_field_CHAIN_COMMAND_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kH", "CHAIN_COMMAND_BLOCK", "field_10395", "CHAIN_COMMAND_BLOCK", "f_50448_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHAIN_COMMAND_BLOCK
    [[maybe_unused]] static void set_field_CHAIN_COMMAND_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kH", "CHAIN_COMMAND_BLOCK", "field_10395", "CHAIN_COMMAND_BLOCK", "f_50448_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FROSTED_ICE
    [[maybe_unused]] static jobject get_field_FROSTED_ICE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kI", "FROSTED_ICE", "field_10110", "FROSTED_ICE", "f_50449_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FROSTED_ICE
    [[maybe_unused]] static void set_field_FROSTED_ICE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kI", "FROSTED_ICE", "field_10110", "FROSTED_ICE", "f_50449_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGMA_BLOCK
    [[maybe_unused]] static jobject get_field_MAGMA_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kJ", "MAGMA_BLOCK", "field_10092", "MAGMA_BLOCK", "f_50450_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGMA_BLOCK
    [[maybe_unused]] static void set_field_MAGMA_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kJ", "MAGMA_BLOCK", "field_10092", "MAGMA_BLOCK", "f_50450_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHER_WART_BLOCK
    [[maybe_unused]] static jobject get_field_NETHER_WART_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kK", "NETHER_WART_BLOCK", "field_10541", "NETHER_WART_BLOCK", "f_50451_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHER_WART_BLOCK
    [[maybe_unused]] static void set_field_NETHER_WART_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kK", "NETHER_WART_BLOCK", "field_10541", "NETHER_WART_BLOCK", "f_50451_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_NETHER_BRICKS
    [[maybe_unused]] static jobject get_field_RED_NETHER_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kL", "RED_NETHER_BRICKS", "field_9986", "RED_NETHER_BRICKS", "f_50452_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_NETHER_BRICKS
    [[maybe_unused]] static void set_field_RED_NETHER_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kL", "RED_NETHER_BRICKS", "field_9986", "RED_NETHER_BRICKS", "f_50452_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BONE_BLOCK
    [[maybe_unused]] static jobject get_field_BONE_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kM", "BONE_BLOCK", "field_10166", "BONE_BLOCK", "f_50453_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BONE_BLOCK
    [[maybe_unused]] static void set_field_BONE_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kM", "BONE_BLOCK", "field_10166", "BONE_BLOCK", "f_50453_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRUCTURE_VOID
    [[maybe_unused]] static jobject get_field_STRUCTURE_VOID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kN", "STRUCTURE_VOID", "field_10369", "STRUCTURE_VOID", "f_50454_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRUCTURE_VOID
    [[maybe_unused]] static void set_field_STRUCTURE_VOID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kN", "STRUCTURE_VOID", "field_10369", "STRUCTURE_VOID", "f_50454_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OBSERVER
    [[maybe_unused]] static jobject get_field_OBSERVER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kO", "OBSERVER", "field_10282", "OBSERVER", "f_50455_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OBSERVER
    [[maybe_unused]] static void set_field_OBSERVER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kO", "OBSERVER", "field_10282", "OBSERVER", "f_50455_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SHULKER_BOX
    [[maybe_unused]] static jobject get_field_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kP", "SHULKER_BOX", "field_10603", "SHULKER_BOX", "f_50456_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SHULKER_BOX
    [[maybe_unused]] static void set_field_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kP", "SHULKER_BOX", "field_10603", "SHULKER_BOX", "f_50456_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_WHITE_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kQ", "WHITE_SHULKER_BOX", "field_10199", "WHITE_SHULKER_BOX", "f_50457_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_SHULKER_BOX
    [[maybe_unused]] static void set_field_WHITE_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kQ", "WHITE_SHULKER_BOX", "field_10199", "WHITE_SHULKER_BOX", "f_50457_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_ORANGE_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kR", "ORANGE_SHULKER_BOX", "field_10407", "ORANGE_SHULKER_BOX", "f_50458_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_SHULKER_BOX
    [[maybe_unused]] static void set_field_ORANGE_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kR", "ORANGE_SHULKER_BOX", "field_10407", "ORANGE_SHULKER_BOX", "f_50458_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_MAGENTA_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kS", "MAGENTA_SHULKER_BOX", "field_10063", "MAGENTA_SHULKER_BOX", "f_50459_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_SHULKER_BOX
    [[maybe_unused]] static void set_field_MAGENTA_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kS", "MAGENTA_SHULKER_BOX", "field_10063", "MAGENTA_SHULKER_BOX", "f_50459_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kT", "LIGHT_BLUE_SHULKER_BOX", "field_10203", "LIGHT_BLUE_SHULKER_BOX", "f_50460_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_SHULKER_BOX
    [[maybe_unused]] static void set_field_LIGHT_BLUE_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kT", "LIGHT_BLUE_SHULKER_BOX", "field_10203", "LIGHT_BLUE_SHULKER_BOX", "f_50460_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_YELLOW_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kU", "YELLOW_SHULKER_BOX", "field_10600", "YELLOW_SHULKER_BOX", "f_50461_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_SHULKER_BOX
    [[maybe_unused]] static void set_field_YELLOW_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kU", "YELLOW_SHULKER_BOX", "field_10600", "YELLOW_SHULKER_BOX", "f_50461_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_LIME_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kV", "LIME_SHULKER_BOX", "field_10275", "LIME_SHULKER_BOX", "f_50462_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_SHULKER_BOX
    [[maybe_unused]] static void set_field_LIME_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kV", "LIME_SHULKER_BOX", "field_10275", "LIME_SHULKER_BOX", "f_50462_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_PINK_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kW", "PINK_SHULKER_BOX", "field_10051", "PINK_SHULKER_BOX", "f_50463_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_SHULKER_BOX
    [[maybe_unused]] static void set_field_PINK_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kW", "PINK_SHULKER_BOX", "field_10051", "PINK_SHULKER_BOX", "f_50463_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_GRAY_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kX", "GRAY_SHULKER_BOX", "field_10140", "GRAY_SHULKER_BOX", "f_50464_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_SHULKER_BOX
    [[maybe_unused]] static void set_field_GRAY_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kX", "GRAY_SHULKER_BOX", "field_10140", "GRAY_SHULKER_BOX", "f_50464_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kY", "LIGHT_GRAY_SHULKER_BOX", "field_10320", "LIGHT_GRAY_SHULKER_BOX", "f_50465_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_SHULKER_BOX
    [[maybe_unused]] static void set_field_LIGHT_GRAY_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kY", "LIGHT_GRAY_SHULKER_BOX", "field_10320", "LIGHT_GRAY_SHULKER_BOX", "f_50465_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_CYAN_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kZ", "CYAN_SHULKER_BOX", "field_10532", "CYAN_SHULKER_BOX", "f_50466_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_SHULKER_BOX
    [[maybe_unused]] static void set_field_CYAN_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("kZ", "CYAN_SHULKER_BOX", "field_10532", "CYAN_SHULKER_BOX", "f_50466_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_PURPLE_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("la", "PURPLE_SHULKER_BOX", "field_10268", "PURPLE_SHULKER_BOX", "f_50520_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_SHULKER_BOX
    [[maybe_unused]] static void set_field_PURPLE_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("la", "PURPLE_SHULKER_BOX", "field_10268", "PURPLE_SHULKER_BOX", "f_50520_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_BLUE_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lb", "BLUE_SHULKER_BOX", "field_10605", "BLUE_SHULKER_BOX", "f_50521_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_SHULKER_BOX
    [[maybe_unused]] static void set_field_BLUE_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lb", "BLUE_SHULKER_BOX", "field_10605", "BLUE_SHULKER_BOX", "f_50521_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_BROWN_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lc", "BROWN_SHULKER_BOX", "field_10373", "BROWN_SHULKER_BOX", "f_50522_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_SHULKER_BOX
    [[maybe_unused]] static void set_field_BROWN_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lc", "BROWN_SHULKER_BOX", "field_10373", "BROWN_SHULKER_BOX", "f_50522_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_GREEN_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ld", "GREEN_SHULKER_BOX", "field_10055", "GREEN_SHULKER_BOX", "f_50523_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_SHULKER_BOX
    [[maybe_unused]] static void set_field_GREEN_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ld", "GREEN_SHULKER_BOX", "field_10055", "GREEN_SHULKER_BOX", "f_50523_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_RED_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("le", "RED_SHULKER_BOX", "field_10068", "RED_SHULKER_BOX", "f_50524_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_SHULKER_BOX
    [[maybe_unused]] static void set_field_RED_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("le", "RED_SHULKER_BOX", "field_10068", "RED_SHULKER_BOX", "f_50524_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_BLACK_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lf", "BLACK_SHULKER_BOX", "field_10371", "BLACK_SHULKER_BOX", "f_50525_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_SHULKER_BOX
    [[maybe_unused]] static void set_field_BLACK_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lf", "BLACK_SHULKER_BOX", "field_10371", "BLACK_SHULKER_BOX", "f_50525_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_WHITE_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lg", "WHITE_GLAZED_TERRACOTTA", "field_10595", "WHITE_GLAZED_TERRACOTTA", "f_50526_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_WHITE_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lg", "WHITE_GLAZED_TERRACOTTA", "field_10595", "WHITE_GLAZED_TERRACOTTA", "f_50526_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_ORANGE_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lh", "ORANGE_GLAZED_TERRACOTTA", "field_10280", "ORANGE_GLAZED_TERRACOTTA", "f_50527_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_ORANGE_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lh", "ORANGE_GLAZED_TERRACOTTA", "field_10280", "ORANGE_GLAZED_TERRACOTTA", "f_50527_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_MAGENTA_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("li", "MAGENTA_GLAZED_TERRACOTTA", "field_10538", "MAGENTA_GLAZED_TERRACOTTA", "f_50528_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_MAGENTA_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("li", "MAGENTA_GLAZED_TERRACOTTA", "field_10538", "MAGENTA_GLAZED_TERRACOTTA", "f_50528_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lj", "LIGHT_BLUE_GLAZED_TERRACOTTA", "field_10345", "LIGHT_BLUE_GLAZED_TERRACOTTA", "f_50529_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_LIGHT_BLUE_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lj", "LIGHT_BLUE_GLAZED_TERRACOTTA", "field_10345", "LIGHT_BLUE_GLAZED_TERRACOTTA", "f_50529_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_YELLOW_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lk", "YELLOW_GLAZED_TERRACOTTA", "field_10096", "YELLOW_GLAZED_TERRACOTTA", "f_50530_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_YELLOW_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lk", "YELLOW_GLAZED_TERRACOTTA", "field_10096", "YELLOW_GLAZED_TERRACOTTA", "f_50530_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_LIME_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ll", "LIME_GLAZED_TERRACOTTA", "field_10046", "LIME_GLAZED_TERRACOTTA", "f_50531_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_LIME_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ll", "LIME_GLAZED_TERRACOTTA", "field_10046", "LIME_GLAZED_TERRACOTTA", "f_50531_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_PINK_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lm", "PINK_GLAZED_TERRACOTTA", "field_10567", "PINK_GLAZED_TERRACOTTA", "f_50532_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_PINK_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lm", "PINK_GLAZED_TERRACOTTA", "field_10567", "PINK_GLAZED_TERRACOTTA", "f_50532_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_GRAY_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ln", "GRAY_GLAZED_TERRACOTTA", "field_10220", "GRAY_GLAZED_TERRACOTTA", "f_50533_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_GRAY_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ln", "GRAY_GLAZED_TERRACOTTA", "field_10220", "GRAY_GLAZED_TERRACOTTA", "f_50533_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lo", "LIGHT_GRAY_GLAZED_TERRACOTTA", "field_10052", "LIGHT_GRAY_GLAZED_TERRACOTTA", "f_50534_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_LIGHT_GRAY_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lo", "LIGHT_GRAY_GLAZED_TERRACOTTA", "field_10052", "LIGHT_GRAY_GLAZED_TERRACOTTA", "f_50534_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_CYAN_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lp", "CYAN_GLAZED_TERRACOTTA", "field_10078", "CYAN_GLAZED_TERRACOTTA", "f_50535_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_CYAN_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lp", "CYAN_GLAZED_TERRACOTTA", "field_10078", "CYAN_GLAZED_TERRACOTTA", "f_50535_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_PURPLE_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lq", "PURPLE_GLAZED_TERRACOTTA", "field_10426", "PURPLE_GLAZED_TERRACOTTA", "f_50536_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_PURPLE_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lq", "PURPLE_GLAZED_TERRACOTTA", "field_10426", "PURPLE_GLAZED_TERRACOTTA", "f_50536_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_BLUE_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lr", "BLUE_GLAZED_TERRACOTTA", "field_10550", "BLUE_GLAZED_TERRACOTTA", "f_50537_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_BLUE_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lr", "BLUE_GLAZED_TERRACOTTA", "field_10550", "BLUE_GLAZED_TERRACOTTA", "f_50537_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_BROWN_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ls", "BROWN_GLAZED_TERRACOTTA", "field_10004", "BROWN_GLAZED_TERRACOTTA", "f_50538_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_BROWN_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ls", "BROWN_GLAZED_TERRACOTTA", "field_10004", "BROWN_GLAZED_TERRACOTTA", "f_50538_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_GREEN_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lt", "GREEN_GLAZED_TERRACOTTA", "field_10475", "GREEN_GLAZED_TERRACOTTA", "f_50539_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_GREEN_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lt", "GREEN_GLAZED_TERRACOTTA", "field_10475", "GREEN_GLAZED_TERRACOTTA", "f_50539_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_RED_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lu", "RED_GLAZED_TERRACOTTA", "field_10383", "RED_GLAZED_TERRACOTTA", "f_50540_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_RED_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lu", "RED_GLAZED_TERRACOTTA", "field_10383", "RED_GLAZED_TERRACOTTA", "f_50540_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_BLACK_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lv", "BLACK_GLAZED_TERRACOTTA", "field_10501", "BLACK_GLAZED_TERRACOTTA", "f_50541_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_BLACK_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lv", "BLACK_GLAZED_TERRACOTTA", "field_10501", "BLACK_GLAZED_TERRACOTTA", "f_50541_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_CONCRETE
    [[maybe_unused]] static jobject get_field_WHITE_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lw", "WHITE_CONCRETE", "field_10107", "WHITE_CONCRETE", "f_50542_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_CONCRETE
    [[maybe_unused]] static void set_field_WHITE_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lw", "WHITE_CONCRETE", "field_10107", "WHITE_CONCRETE", "f_50542_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_CONCRETE
    [[maybe_unused]] static jobject get_field_ORANGE_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lx", "ORANGE_CONCRETE", "field_10210", "ORANGE_CONCRETE", "f_50543_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_CONCRETE
    [[maybe_unused]] static void set_field_ORANGE_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lx", "ORANGE_CONCRETE", "field_10210", "ORANGE_CONCRETE", "f_50543_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_CONCRETE
    [[maybe_unused]] static jobject get_field_MAGENTA_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ly", "MAGENTA_CONCRETE", "field_10585", "MAGENTA_CONCRETE", "f_50544_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_CONCRETE
    [[maybe_unused]] static void set_field_MAGENTA_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ly", "MAGENTA_CONCRETE", "field_10585", "MAGENTA_CONCRETE", "f_50544_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_CONCRETE
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lz", "LIGHT_BLUE_CONCRETE", "field_10242", "LIGHT_BLUE_CONCRETE", "f_50545_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_CONCRETE
    [[maybe_unused]] static void set_field_LIGHT_BLUE_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lz", "LIGHT_BLUE_CONCRETE", "field_10242", "LIGHT_BLUE_CONCRETE", "f_50545_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_CONCRETE
    [[maybe_unused]] static jobject get_field_YELLOW_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lA", "YELLOW_CONCRETE", "field_10542", "YELLOW_CONCRETE", "f_50494_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_CONCRETE
    [[maybe_unused]] static void set_field_YELLOW_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lA", "YELLOW_CONCRETE", "field_10542", "YELLOW_CONCRETE", "f_50494_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_CONCRETE
    [[maybe_unused]] static jobject get_field_LIME_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lB", "LIME_CONCRETE", "field_10421", "LIME_CONCRETE", "f_50495_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_CONCRETE
    [[maybe_unused]] static void set_field_LIME_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lB", "LIME_CONCRETE", "field_10421", "LIME_CONCRETE", "f_50495_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_CONCRETE
    [[maybe_unused]] static jobject get_field_PINK_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lC", "PINK_CONCRETE", "field_10434", "PINK_CONCRETE", "f_50496_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_CONCRETE
    [[maybe_unused]] static void set_field_PINK_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lC", "PINK_CONCRETE", "field_10434", "PINK_CONCRETE", "f_50496_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_CONCRETE
    [[maybe_unused]] static jobject get_field_GRAY_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lD", "GRAY_CONCRETE", "field_10038", "GRAY_CONCRETE", "f_50497_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_CONCRETE
    [[maybe_unused]] static void set_field_GRAY_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lD", "GRAY_CONCRETE", "field_10038", "GRAY_CONCRETE", "f_50497_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_CONCRETE
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lE", "LIGHT_GRAY_CONCRETE", "field_10172", "LIGHT_GRAY_CONCRETE", "f_50498_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_CONCRETE
    [[maybe_unused]] static void set_field_LIGHT_GRAY_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lE", "LIGHT_GRAY_CONCRETE", "field_10172", "LIGHT_GRAY_CONCRETE", "f_50498_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_CONCRETE
    [[maybe_unused]] static jobject get_field_CYAN_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lF", "CYAN_CONCRETE", "field_10308", "CYAN_CONCRETE", "f_50499_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_CONCRETE
    [[maybe_unused]] static void set_field_CYAN_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lF", "CYAN_CONCRETE", "field_10308", "CYAN_CONCRETE", "f_50499_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_CONCRETE
    [[maybe_unused]] static jobject get_field_PURPLE_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lG", "PURPLE_CONCRETE", "field_10206", "PURPLE_CONCRETE", "f_50500_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_CONCRETE
    [[maybe_unused]] static void set_field_PURPLE_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lG", "PURPLE_CONCRETE", "field_10206", "PURPLE_CONCRETE", "f_50500_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_CONCRETE
    [[maybe_unused]] static jobject get_field_BLUE_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lH", "BLUE_CONCRETE", "field_10011", "BLUE_CONCRETE", "f_50501_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_CONCRETE
    [[maybe_unused]] static void set_field_BLUE_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lH", "BLUE_CONCRETE", "field_10011", "BLUE_CONCRETE", "f_50501_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_CONCRETE
    [[maybe_unused]] static jobject get_field_BROWN_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lI", "BROWN_CONCRETE", "field_10439", "BROWN_CONCRETE", "f_50502_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_CONCRETE
    [[maybe_unused]] static void set_field_BROWN_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lI", "BROWN_CONCRETE", "field_10439", "BROWN_CONCRETE", "f_50502_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_CONCRETE
    [[maybe_unused]] static jobject get_field_GREEN_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lJ", "GREEN_CONCRETE", "field_10367", "GREEN_CONCRETE", "f_50503_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_CONCRETE
    [[maybe_unused]] static void set_field_GREEN_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lJ", "GREEN_CONCRETE", "field_10367", "GREEN_CONCRETE", "f_50503_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_CONCRETE
    [[maybe_unused]] static jobject get_field_RED_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lK", "RED_CONCRETE", "field_10058", "RED_CONCRETE", "f_50504_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_CONCRETE
    [[maybe_unused]] static void set_field_RED_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lK", "RED_CONCRETE", "field_10058", "RED_CONCRETE", "f_50504_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_CONCRETE
    [[maybe_unused]] static jobject get_field_BLACK_CONCRETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lL", "BLACK_CONCRETE", "field_10458", "BLACK_CONCRETE", "f_50505_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_CONCRETE
    [[maybe_unused]] static void set_field_BLACK_CONCRETE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lL", "BLACK_CONCRETE", "field_10458", "BLACK_CONCRETE", "f_50505_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_WHITE_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lM", "WHITE_CONCRETE_POWDER", "field_10197", "WHITE_CONCRETE_POWDER", "f_50506_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_WHITE_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lM", "WHITE_CONCRETE_POWDER", "field_10197", "WHITE_CONCRETE_POWDER", "f_50506_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_ORANGE_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lN", "ORANGE_CONCRETE_POWDER", "field_10022", "ORANGE_CONCRETE_POWDER", "f_50507_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_ORANGE_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lN", "ORANGE_CONCRETE_POWDER", "field_10022", "ORANGE_CONCRETE_POWDER", "f_50507_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_MAGENTA_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lO", "MAGENTA_CONCRETE_POWDER", "field_10300", "MAGENTA_CONCRETE_POWDER", "f_50508_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_MAGENTA_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lO", "MAGENTA_CONCRETE_POWDER", "field_10300", "MAGENTA_CONCRETE_POWDER", "f_50508_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lP", "LIGHT_BLUE_CONCRETE_POWDER", "field_10321", "LIGHT_BLUE_CONCRETE_POWDER", "f_50509_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_LIGHT_BLUE_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lP", "LIGHT_BLUE_CONCRETE_POWDER", "field_10321", "LIGHT_BLUE_CONCRETE_POWDER", "f_50509_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_YELLOW_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lQ", "YELLOW_CONCRETE_POWDER", "field_10145", "YELLOW_CONCRETE_POWDER", "f_50510_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_YELLOW_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lQ", "YELLOW_CONCRETE_POWDER", "field_10145", "YELLOW_CONCRETE_POWDER", "f_50510_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_LIME_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lR", "LIME_CONCRETE_POWDER", "field_10133", "LIME_CONCRETE_POWDER", "f_50511_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_LIME_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lR", "LIME_CONCRETE_POWDER", "field_10133", "LIME_CONCRETE_POWDER", "f_50511_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_PINK_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lS", "PINK_CONCRETE_POWDER", "field_10522", "PINK_CONCRETE_POWDER", "f_50512_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_PINK_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lS", "PINK_CONCRETE_POWDER", "field_10522", "PINK_CONCRETE_POWDER", "f_50512_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_GRAY_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lT", "GRAY_CONCRETE_POWDER", "field_10353", "GRAY_CONCRETE_POWDER", "f_50513_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_GRAY_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lT", "GRAY_CONCRETE_POWDER", "field_10353", "GRAY_CONCRETE_POWDER", "f_50513_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lU", "LIGHT_GRAY_CONCRETE_POWDER", "field_10628", "LIGHT_GRAY_CONCRETE_POWDER", "f_50514_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_LIGHT_GRAY_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lU", "LIGHT_GRAY_CONCRETE_POWDER", "field_10628", "LIGHT_GRAY_CONCRETE_POWDER", "f_50514_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_CYAN_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lV", "CYAN_CONCRETE_POWDER", "field_10233", "CYAN_CONCRETE_POWDER", "f_50515_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_CYAN_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lV", "CYAN_CONCRETE_POWDER", "field_10233", "CYAN_CONCRETE_POWDER", "f_50515_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_PURPLE_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lW", "PURPLE_CONCRETE_POWDER", "field_10404", "PURPLE_CONCRETE_POWDER", "f_50516_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_PURPLE_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lW", "PURPLE_CONCRETE_POWDER", "field_10404", "PURPLE_CONCRETE_POWDER", "f_50516_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_BLUE_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lX", "BLUE_CONCRETE_POWDER", "field_10456", "BLUE_CONCRETE_POWDER", "f_50517_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_BLUE_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lX", "BLUE_CONCRETE_POWDER", "field_10456", "BLUE_CONCRETE_POWDER", "f_50517_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_BROWN_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lY", "BROWN_CONCRETE_POWDER", "field_10023", "BROWN_CONCRETE_POWDER", "f_50518_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_BROWN_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lY", "BROWN_CONCRETE_POWDER", "field_10023", "BROWN_CONCRETE_POWDER", "f_50518_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_GREEN_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lZ", "GREEN_CONCRETE_POWDER", "field_10529", "GREEN_CONCRETE_POWDER", "f_50519_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_GREEN_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("lZ", "GREEN_CONCRETE_POWDER", "field_10529", "GREEN_CONCRETE_POWDER", "f_50519_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_RED_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ma", "RED_CONCRETE_POWDER", "field_10287", "RED_CONCRETE_POWDER", "f_50573_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_RED_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ma", "RED_CONCRETE_POWDER", "field_10287", "RED_CONCRETE_POWDER", "f_50573_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_BLACK_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mb", "BLACK_CONCRETE_POWDER", "field_10506", "BLACK_CONCRETE_POWDER", "f_50574_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_CONCRETE_POWDER
    [[maybe_unused]] static void set_field_BLACK_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mb", "BLACK_CONCRETE_POWDER", "field_10506", "BLACK_CONCRETE_POWDER", "f_50574_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#KELP
    [[maybe_unused]] static jobject get_field_KELP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mc", "KELP", "field_9993", "KELP", "f_50575_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#KELP
    [[maybe_unused]] static void set_field_KELP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mc", "KELP", "field_9993", "KELP", "f_50575_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#KELP_PLANT
    [[maybe_unused]] static jobject get_field_KELP_PLANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("md", "KELP_PLANT", "field_10463", "KELP_PLANT", "f_50576_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#KELP_PLANT
    [[maybe_unused]] static void set_field_KELP_PLANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("md", "KELP_PLANT", "field_10463", "KELP_PLANT", "f_50576_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DRIED_KELP_BLOCK
    [[maybe_unused]] static jobject get_field_DRIED_KELP_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("me", "DRIED_KELP_BLOCK", "field_10342", "DRIED_KELP_BLOCK", "f_50577_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DRIED_KELP_BLOCK
    [[maybe_unused]] static void set_field_DRIED_KELP_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("me", "DRIED_KELP_BLOCK", "field_10342", "DRIED_KELP_BLOCK", "f_50577_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TURTLE_EGG
    [[maybe_unused]] static jobject get_field_TURTLE_EGG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mf", "TURTLE_EGG", "field_10195", "TURTLE_EGG", "f_50578_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TURTLE_EGG
    [[maybe_unused]] static void set_field_TURTLE_EGG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mf", "TURTLE_EGG", "field_10195", "TURTLE_EGG", "f_50578_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SNIFFER_EGG
    [[maybe_unused]] static jobject get_field_SNIFFER_EGG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mg", "SNIFFER_EGG", "field_43230", "SNIFFER_EGG", "f_276643_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SNIFFER_EGG
    [[maybe_unused]] static void set_field_SNIFFER_EGG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mg", "SNIFFER_EGG", "field_43230", "SNIFFER_EGG", "f_276643_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_TUBE_CORAL_BLOCK
    [[maybe_unused]] static jobject get_field_DEAD_TUBE_CORAL_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mh", "DEAD_TUBE_CORAL_BLOCK", "field_10614", "DEAD_TUBE_CORAL_BLOCK", "f_50579_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_TUBE_CORAL_BLOCK
    [[maybe_unused]] static void set_field_DEAD_TUBE_CORAL_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mh", "DEAD_TUBE_CORAL_BLOCK", "field_10614", "DEAD_TUBE_CORAL_BLOCK", "f_50579_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_BRAIN_CORAL_BLOCK
    [[maybe_unused]] static jobject get_field_DEAD_BRAIN_CORAL_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mi", "DEAD_BRAIN_CORAL_BLOCK", "field_10264", "DEAD_BRAIN_CORAL_BLOCK", "f_50580_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_BRAIN_CORAL_BLOCK
    [[maybe_unused]] static void set_field_DEAD_BRAIN_CORAL_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mi", "DEAD_BRAIN_CORAL_BLOCK", "field_10264", "DEAD_BRAIN_CORAL_BLOCK", "f_50580_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_BUBBLE_CORAL_BLOCK
    [[maybe_unused]] static jobject get_field_DEAD_BUBBLE_CORAL_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mj", "DEAD_BUBBLE_CORAL_BLOCK", "field_10396", "DEAD_BUBBLE_CORAL_BLOCK", "f_50581_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_BUBBLE_CORAL_BLOCK
    [[maybe_unused]] static void set_field_DEAD_BUBBLE_CORAL_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mj", "DEAD_BUBBLE_CORAL_BLOCK", "field_10396", "DEAD_BUBBLE_CORAL_BLOCK", "f_50581_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_FIRE_CORAL_BLOCK
    [[maybe_unused]] static jobject get_field_DEAD_FIRE_CORAL_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mk", "DEAD_FIRE_CORAL_BLOCK", "field_10111", "DEAD_FIRE_CORAL_BLOCK", "f_50582_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_FIRE_CORAL_BLOCK
    [[maybe_unused]] static void set_field_DEAD_FIRE_CORAL_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mk", "DEAD_FIRE_CORAL_BLOCK", "field_10111", "DEAD_FIRE_CORAL_BLOCK", "f_50582_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_HORN_CORAL_BLOCK
    [[maybe_unused]] static jobject get_field_DEAD_HORN_CORAL_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ml", "DEAD_HORN_CORAL_BLOCK", "field_10488", "DEAD_HORN_CORAL_BLOCK", "f_50583_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_HORN_CORAL_BLOCK
    [[maybe_unused]] static void set_field_DEAD_HORN_CORAL_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ml", "DEAD_HORN_CORAL_BLOCK", "field_10488", "DEAD_HORN_CORAL_BLOCK", "f_50583_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TUBE_CORAL_BLOCK
    [[maybe_unused]] static jobject get_field_TUBE_CORAL_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mm", "TUBE_CORAL_BLOCK", "field_10309", "TUBE_CORAL_BLOCK", "f_50584_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TUBE_CORAL_BLOCK
    [[maybe_unused]] static void set_field_TUBE_CORAL_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mm", "TUBE_CORAL_BLOCK", "field_10309", "TUBE_CORAL_BLOCK", "f_50584_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BRAIN_CORAL_BLOCK
    [[maybe_unused]] static jobject get_field_BRAIN_CORAL_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mn", "BRAIN_CORAL_BLOCK", "field_10629", "BRAIN_CORAL_BLOCK", "f_50585_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BRAIN_CORAL_BLOCK
    [[maybe_unused]] static void set_field_BRAIN_CORAL_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mn", "BRAIN_CORAL_BLOCK", "field_10629", "BRAIN_CORAL_BLOCK", "f_50585_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BUBBLE_CORAL_BLOCK
    [[maybe_unused]] static jobject get_field_BUBBLE_CORAL_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mo", "BUBBLE_CORAL_BLOCK", "field_10000", "BUBBLE_CORAL_BLOCK", "f_50586_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BUBBLE_CORAL_BLOCK
    [[maybe_unused]] static void set_field_BUBBLE_CORAL_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mo", "BUBBLE_CORAL_BLOCK", "field_10000", "BUBBLE_CORAL_BLOCK", "f_50586_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FIRE_CORAL_BLOCK
    [[maybe_unused]] static jobject get_field_FIRE_CORAL_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mp", "FIRE_CORAL_BLOCK", "field_10516", "FIRE_CORAL_BLOCK", "f_50587_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FIRE_CORAL_BLOCK
    [[maybe_unused]] static void set_field_FIRE_CORAL_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mp", "FIRE_CORAL_BLOCK", "field_10516", "FIRE_CORAL_BLOCK", "f_50587_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#HORN_CORAL_BLOCK
    [[maybe_unused]] static jobject get_field_HORN_CORAL_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mq", "HORN_CORAL_BLOCK", "field_10464", "HORN_CORAL_BLOCK", "f_50588_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#HORN_CORAL_BLOCK
    [[maybe_unused]] static void set_field_HORN_CORAL_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mq", "HORN_CORAL_BLOCK", "field_10464", "HORN_CORAL_BLOCK", "f_50588_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_TUBE_CORAL
    [[maybe_unused]] static jobject get_field_DEAD_TUBE_CORAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mr", "DEAD_TUBE_CORAL", "field_10082", "DEAD_TUBE_CORAL", "f_50589_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_TUBE_CORAL
    [[maybe_unused]] static void set_field_DEAD_TUBE_CORAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mr", "DEAD_TUBE_CORAL", "field_10082", "DEAD_TUBE_CORAL", "f_50589_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_BRAIN_CORAL
    [[maybe_unused]] static jobject get_field_DEAD_BRAIN_CORAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ms", "DEAD_BRAIN_CORAL", "field_10572", "DEAD_BRAIN_CORAL", "f_50590_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_BRAIN_CORAL
    [[maybe_unused]] static void set_field_DEAD_BRAIN_CORAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ms", "DEAD_BRAIN_CORAL", "field_10572", "DEAD_BRAIN_CORAL", "f_50590_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_BUBBLE_CORAL
    [[maybe_unused]] static jobject get_field_DEAD_BUBBLE_CORAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mt", "DEAD_BUBBLE_CORAL", "field_10296", "DEAD_BUBBLE_CORAL", "f_50591_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_BUBBLE_CORAL
    [[maybe_unused]] static void set_field_DEAD_BUBBLE_CORAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mt", "DEAD_BUBBLE_CORAL", "field_10296", "DEAD_BUBBLE_CORAL", "f_50591_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_FIRE_CORAL
    [[maybe_unused]] static jobject get_field_DEAD_FIRE_CORAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mu", "DEAD_FIRE_CORAL", "field_10579", "DEAD_FIRE_CORAL", "f_50592_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_FIRE_CORAL
    [[maybe_unused]] static void set_field_DEAD_FIRE_CORAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mu", "DEAD_FIRE_CORAL", "field_10579", "DEAD_FIRE_CORAL", "f_50592_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_HORN_CORAL
    [[maybe_unused]] static jobject get_field_DEAD_HORN_CORAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mv", "DEAD_HORN_CORAL", "field_10032", "DEAD_HORN_CORAL", "f_50593_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_HORN_CORAL
    [[maybe_unused]] static void set_field_DEAD_HORN_CORAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mv", "DEAD_HORN_CORAL", "field_10032", "DEAD_HORN_CORAL", "f_50593_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TUBE_CORAL
    [[maybe_unused]] static jobject get_field_TUBE_CORAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mw", "TUBE_CORAL", "field_10125", "TUBE_CORAL", "f_50594_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TUBE_CORAL
    [[maybe_unused]] static void set_field_TUBE_CORAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mw", "TUBE_CORAL", "field_10125", "TUBE_CORAL", "f_50594_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BRAIN_CORAL
    [[maybe_unused]] static jobject get_field_BRAIN_CORAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mx", "BRAIN_CORAL", "field_10339", "BRAIN_CORAL", "f_50595_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BRAIN_CORAL
    [[maybe_unused]] static void set_field_BRAIN_CORAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mx", "BRAIN_CORAL", "field_10339", "BRAIN_CORAL", "f_50595_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BUBBLE_CORAL
    [[maybe_unused]] static jobject get_field_BUBBLE_CORAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("my", "BUBBLE_CORAL", "field_10134", "BUBBLE_CORAL", "f_50596_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BUBBLE_CORAL
    [[maybe_unused]] static void set_field_BUBBLE_CORAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("my", "BUBBLE_CORAL", "field_10134", "BUBBLE_CORAL", "f_50596_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FIRE_CORAL
    [[maybe_unused]] static jobject get_field_FIRE_CORAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mz", "FIRE_CORAL", "field_10618", "FIRE_CORAL", "f_50597_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FIRE_CORAL
    [[maybe_unused]] static void set_field_FIRE_CORAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mz", "FIRE_CORAL", "field_10618", "FIRE_CORAL", "f_50597_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#HORN_CORAL
    [[maybe_unused]] static jobject get_field_HORN_CORAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mA", "HORN_CORAL", "field_10169", "HORN_CORAL", "f_50598_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#HORN_CORAL
    [[maybe_unused]] static void set_field_HORN_CORAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mA", "HORN_CORAL", "field_10169", "HORN_CORAL", "f_50598_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_TUBE_CORAL_FAN
    [[maybe_unused]] static jobject get_field_DEAD_TUBE_CORAL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mB", "DEAD_TUBE_CORAL_FAN", "field_10448", "DEAD_TUBE_CORAL_FAN", "f_50547_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_TUBE_CORAL_FAN
    [[maybe_unused]] static void set_field_DEAD_TUBE_CORAL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mB", "DEAD_TUBE_CORAL_FAN", "field_10448", "DEAD_TUBE_CORAL_FAN", "f_50547_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_BRAIN_CORAL_FAN
    [[maybe_unused]] static jobject get_field_DEAD_BRAIN_CORAL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mC", "DEAD_BRAIN_CORAL_FAN", "field_10097", "DEAD_BRAIN_CORAL_FAN", "f_50548_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_BRAIN_CORAL_FAN
    [[maybe_unused]] static void set_field_DEAD_BRAIN_CORAL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mC", "DEAD_BRAIN_CORAL_FAN", "field_10097", "DEAD_BRAIN_CORAL_FAN", "f_50548_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_BUBBLE_CORAL_FAN
    [[maybe_unused]] static jobject get_field_DEAD_BUBBLE_CORAL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mD", "DEAD_BUBBLE_CORAL_FAN", "field_10047", "DEAD_BUBBLE_CORAL_FAN", "f_50549_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_BUBBLE_CORAL_FAN
    [[maybe_unused]] static void set_field_DEAD_BUBBLE_CORAL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mD", "DEAD_BUBBLE_CORAL_FAN", "field_10047", "DEAD_BUBBLE_CORAL_FAN", "f_50549_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_FIRE_CORAL_FAN
    [[maybe_unused]] static jobject get_field_DEAD_FIRE_CORAL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mE", "DEAD_FIRE_CORAL_FAN", "field_10568", "DEAD_FIRE_CORAL_FAN", "f_50550_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_FIRE_CORAL_FAN
    [[maybe_unused]] static void set_field_DEAD_FIRE_CORAL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mE", "DEAD_FIRE_CORAL_FAN", "field_10568", "DEAD_FIRE_CORAL_FAN", "f_50550_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_HORN_CORAL_FAN
    [[maybe_unused]] static jobject get_field_DEAD_HORN_CORAL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mF", "DEAD_HORN_CORAL_FAN", "field_10221", "DEAD_HORN_CORAL_FAN", "f_50551_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_HORN_CORAL_FAN
    [[maybe_unused]] static void set_field_DEAD_HORN_CORAL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mF", "DEAD_HORN_CORAL_FAN", "field_10221", "DEAD_HORN_CORAL_FAN", "f_50551_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TUBE_CORAL_FAN
    [[maybe_unused]] static jobject get_field_TUBE_CORAL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mG", "TUBE_CORAL_FAN", "field_10053", "TUBE_CORAL_FAN", "f_50552_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TUBE_CORAL_FAN
    [[maybe_unused]] static void set_field_TUBE_CORAL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mG", "TUBE_CORAL_FAN", "field_10053", "TUBE_CORAL_FAN", "f_50552_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BRAIN_CORAL_FAN
    [[maybe_unused]] static jobject get_field_BRAIN_CORAL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mH", "BRAIN_CORAL_FAN", "field_10079", "BRAIN_CORAL_FAN", "f_50553_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BRAIN_CORAL_FAN
    [[maybe_unused]] static void set_field_BRAIN_CORAL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mH", "BRAIN_CORAL_FAN", "field_10079", "BRAIN_CORAL_FAN", "f_50553_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BUBBLE_CORAL_FAN
    [[maybe_unused]] static jobject get_field_BUBBLE_CORAL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mI", "BUBBLE_CORAL_FAN", "field_10427", "BUBBLE_CORAL_FAN", "f_50554_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BUBBLE_CORAL_FAN
    [[maybe_unused]] static void set_field_BUBBLE_CORAL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mI", "BUBBLE_CORAL_FAN", "field_10427", "BUBBLE_CORAL_FAN", "f_50554_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FIRE_CORAL_FAN
    [[maybe_unused]] static jobject get_field_FIRE_CORAL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mJ", "FIRE_CORAL_FAN", "field_10551", "FIRE_CORAL_FAN", "f_50555_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FIRE_CORAL_FAN
    [[maybe_unused]] static void set_field_FIRE_CORAL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mJ", "FIRE_CORAL_FAN", "field_10551", "FIRE_CORAL_FAN", "f_50555_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#HORN_CORAL_FAN
    [[maybe_unused]] static jobject get_field_HORN_CORAL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mK", "HORN_CORAL_FAN", "field_10005", "HORN_CORAL_FAN", "f_50556_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#HORN_CORAL_FAN
    [[maybe_unused]] static void set_field_HORN_CORAL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mK", "HORN_CORAL_FAN", "field_10005", "HORN_CORAL_FAN", "f_50556_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_TUBE_CORAL_WALL_FAN
    [[maybe_unused]] static jobject get_field_DEAD_TUBE_CORAL_WALL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mL", "DEAD_TUBE_CORAL_WALL_FAN", "field_10347", "DEAD_TUBE_CORAL_WALL_FAN", "f_50557_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_TUBE_CORAL_WALL_FAN
    [[maybe_unused]] static void set_field_DEAD_TUBE_CORAL_WALL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mL", "DEAD_TUBE_CORAL_WALL_FAN", "field_10347", "DEAD_TUBE_CORAL_WALL_FAN", "f_50557_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_BRAIN_CORAL_WALL_FAN
    [[maybe_unused]] static jobject get_field_DEAD_BRAIN_CORAL_WALL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mM", "DEAD_BRAIN_CORAL_WALL_FAN", "field_10116", "DEAD_BRAIN_CORAL_WALL_FAN", "f_50558_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_BRAIN_CORAL_WALL_FAN
    [[maybe_unused]] static void set_field_DEAD_BRAIN_CORAL_WALL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mM", "DEAD_BRAIN_CORAL_WALL_FAN", "field_10116", "DEAD_BRAIN_CORAL_WALL_FAN", "f_50558_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_BUBBLE_CORAL_WALL_FAN
    [[maybe_unused]] static jobject get_field_DEAD_BUBBLE_CORAL_WALL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mN", "DEAD_BUBBLE_CORAL_WALL_FAN", "field_10094", "DEAD_BUBBLE_CORAL_WALL_FAN", "f_50559_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_BUBBLE_CORAL_WALL_FAN
    [[maybe_unused]] static void set_field_DEAD_BUBBLE_CORAL_WALL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mN", "DEAD_BUBBLE_CORAL_WALL_FAN", "field_10094", "DEAD_BUBBLE_CORAL_WALL_FAN", "f_50559_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_FIRE_CORAL_WALL_FAN
    [[maybe_unused]] static jobject get_field_DEAD_FIRE_CORAL_WALL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mO", "DEAD_FIRE_CORAL_WALL_FAN", "field_10557", "DEAD_FIRE_CORAL_WALL_FAN", "f_50560_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_FIRE_CORAL_WALL_FAN
    [[maybe_unused]] static void set_field_DEAD_FIRE_CORAL_WALL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mO", "DEAD_FIRE_CORAL_WALL_FAN", "field_10557", "DEAD_FIRE_CORAL_WALL_FAN", "f_50560_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEAD_HORN_CORAL_WALL_FAN
    [[maybe_unused]] static jobject get_field_DEAD_HORN_CORAL_WALL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mP", "DEAD_HORN_CORAL_WALL_FAN", "field_10239", "DEAD_HORN_CORAL_WALL_FAN", "f_50561_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEAD_HORN_CORAL_WALL_FAN
    [[maybe_unused]] static void set_field_DEAD_HORN_CORAL_WALL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mP", "DEAD_HORN_CORAL_WALL_FAN", "field_10239", "DEAD_HORN_CORAL_WALL_FAN", "f_50561_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TUBE_CORAL_WALL_FAN
    [[maybe_unused]] static jobject get_field_TUBE_CORAL_WALL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mQ", "TUBE_CORAL_WALL_FAN", "field_10584", "TUBE_CORAL_WALL_FAN", "f_50562_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TUBE_CORAL_WALL_FAN
    [[maybe_unused]] static void set_field_TUBE_CORAL_WALL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mQ", "TUBE_CORAL_WALL_FAN", "field_10584", "TUBE_CORAL_WALL_FAN", "f_50562_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BRAIN_CORAL_WALL_FAN
    [[maybe_unused]] static jobject get_field_BRAIN_CORAL_WALL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mR", "BRAIN_CORAL_WALL_FAN", "field_10186", "BRAIN_CORAL_WALL_FAN", "f_50563_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BRAIN_CORAL_WALL_FAN
    [[maybe_unused]] static void set_field_BRAIN_CORAL_WALL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mR", "BRAIN_CORAL_WALL_FAN", "field_10186", "BRAIN_CORAL_WALL_FAN", "f_50563_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BUBBLE_CORAL_WALL_FAN
    [[maybe_unused]] static jobject get_field_BUBBLE_CORAL_WALL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mS", "BUBBLE_CORAL_WALL_FAN", "field_10447", "BUBBLE_CORAL_WALL_FAN", "f_50564_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BUBBLE_CORAL_WALL_FAN
    [[maybe_unused]] static void set_field_BUBBLE_CORAL_WALL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mS", "BUBBLE_CORAL_WALL_FAN", "field_10447", "BUBBLE_CORAL_WALL_FAN", "f_50564_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FIRE_CORAL_WALL_FAN
    [[maybe_unused]] static jobject get_field_FIRE_CORAL_WALL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mT", "FIRE_CORAL_WALL_FAN", "field_10498", "FIRE_CORAL_WALL_FAN", "f_50565_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FIRE_CORAL_WALL_FAN
    [[maybe_unused]] static void set_field_FIRE_CORAL_WALL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mT", "FIRE_CORAL_WALL_FAN", "field_10498", "FIRE_CORAL_WALL_FAN", "f_50565_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#HORN_CORAL_WALL_FAN
    [[maybe_unused]] static jobject get_field_HORN_CORAL_WALL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mU", "HORN_CORAL_WALL_FAN", "field_9976", "HORN_CORAL_WALL_FAN", "f_50566_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#HORN_CORAL_WALL_FAN
    [[maybe_unused]] static void set_field_HORN_CORAL_WALL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mU", "HORN_CORAL_WALL_FAN", "field_9976", "HORN_CORAL_WALL_FAN", "f_50566_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SEA_PICKLE
    [[maybe_unused]] static jobject get_field_SEA_PICKLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mV", "SEA_PICKLE", "field_10476", "SEA_PICKLE", "f_50567_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SEA_PICKLE
    [[maybe_unused]] static void set_field_SEA_PICKLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mV", "SEA_PICKLE", "field_10476", "SEA_PICKLE", "f_50567_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_ICE
    [[maybe_unused]] static jobject get_field_BLUE_ICE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mW", "BLUE_ICE", "field_10384", "BLUE_ICE", "f_50568_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_ICE
    [[maybe_unused]] static void set_field_BLUE_ICE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mW", "BLUE_ICE", "field_10384", "BLUE_ICE", "f_50568_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CONDUIT
    [[maybe_unused]] static jobject get_field_CONDUIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mX", "CONDUIT", "field_10502", "CONDUIT", "f_50569_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CONDUIT
    [[maybe_unused]] static void set_field_CONDUIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mX", "CONDUIT", "field_10502", "CONDUIT", "f_50569_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO_SAPLING
    [[maybe_unused]] static jobject get_field_BAMBOO_SAPLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mY", "BAMBOO_SAPLING", "field_10108", "BAMBOO_SAPLING", "f_50570_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO_SAPLING
    [[maybe_unused]] static void set_field_BAMBOO_SAPLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mY", "BAMBOO_SAPLING", "field_10108", "BAMBOO_SAPLING", "f_50570_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BAMBOO
    [[maybe_unused]] static jobject get_field_BAMBOO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mZ", "BAMBOO", "field_10211", "BAMBOO", "f_50571_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BAMBOO
    [[maybe_unused]] static void set_field_BAMBOO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("mZ", "BAMBOO", "field_10211", "BAMBOO", "f_50571_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_BAMBOO
    [[maybe_unused]] static jobject get_field_POTTED_BAMBOO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("na", "POTTED_BAMBOO", "field_10586", "POTTED_BAMBOO", "f_50572_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_BAMBOO
    [[maybe_unused]] static void set_field_POTTED_BAMBOO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("na", "POTTED_BAMBOO", "field_10586", "POTTED_BAMBOO", "f_50572_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#VOID_AIR
    [[maybe_unused]] static jobject get_field_VOID_AIR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nb", "VOID_AIR", "field_10243", "VOID_AIR", "f_50626_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#VOID_AIR
    [[maybe_unused]] static void set_field_VOID_AIR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nb", "VOID_AIR", "field_10243", "VOID_AIR", "f_50626_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CAVE_AIR
    [[maybe_unused]] static jobject get_field_CAVE_AIR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nc", "CAVE_AIR", "field_10543", "CAVE_AIR", "f_50627_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CAVE_AIR
    [[maybe_unused]] static void set_field_CAVE_AIR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nc", "CAVE_AIR", "field_10543", "CAVE_AIR", "f_50627_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BUBBLE_COLUMN
    [[maybe_unused]] static jobject get_field_BUBBLE_COLUMN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nd", "BUBBLE_COLUMN", "field_10422", "BUBBLE_COLUMN", "f_50628_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BUBBLE_COLUMN
    [[maybe_unused]] static void set_field_BUBBLE_COLUMN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nd", "BUBBLE_COLUMN", "field_10422", "BUBBLE_COLUMN", "f_50628_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_GRANITE_STAIRS
    [[maybe_unused]] static jobject get_field_POLISHED_GRANITE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ne", "POLISHED_GRANITE_STAIRS", "field_10435", "POLISHED_GRANITE_STAIRS", "f_50629_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_GRANITE_STAIRS
    [[maybe_unused]] static void set_field_POLISHED_GRANITE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ne", "POLISHED_GRANITE_STAIRS", "field_10435", "POLISHED_GRANITE_STAIRS", "f_50629_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOOTH_RED_SANDSTONE_STAIRS
    [[maybe_unused]] static jobject get_field_SMOOTH_RED_SANDSTONE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nf", "SMOOTH_RED_SANDSTONE_STAIRS", "field_10039", "SMOOTH_RED_SANDSTONE_STAIRS", "f_50630_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOOTH_RED_SANDSTONE_STAIRS
    [[maybe_unused]] static void set_field_SMOOTH_RED_SANDSTONE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nf", "SMOOTH_RED_SANDSTONE_STAIRS", "field_10039", "SMOOTH_RED_SANDSTONE_STAIRS", "f_50630_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MOSSY_STONE_BRICK_STAIRS
    [[maybe_unused]] static jobject get_field_MOSSY_STONE_BRICK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ng", "MOSSY_STONE_BRICK_STAIRS", "field_10173", "MOSSY_STONE_BRICK_STAIRS", "f_50631_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MOSSY_STONE_BRICK_STAIRS
    [[maybe_unused]] static void set_field_MOSSY_STONE_BRICK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ng", "MOSSY_STONE_BRICK_STAIRS", "field_10173", "MOSSY_STONE_BRICK_STAIRS", "f_50631_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_DIORITE_STAIRS
    [[maybe_unused]] static jobject get_field_POLISHED_DIORITE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nh", "POLISHED_DIORITE_STAIRS", "field_10310", "POLISHED_DIORITE_STAIRS", "f_50632_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_DIORITE_STAIRS
    [[maybe_unused]] static void set_field_POLISHED_DIORITE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nh", "POLISHED_DIORITE_STAIRS", "field_10310", "POLISHED_DIORITE_STAIRS", "f_50632_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MOSSY_COBBLESTONE_STAIRS
    [[maybe_unused]] static jobject get_field_MOSSY_COBBLESTONE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ni", "MOSSY_COBBLESTONE_STAIRS", "field_10207", "MOSSY_COBBLESTONE_STAIRS", "f_50633_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MOSSY_COBBLESTONE_STAIRS
    [[maybe_unused]] static void set_field_MOSSY_COBBLESTONE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ni", "MOSSY_COBBLESTONE_STAIRS", "field_10207", "MOSSY_COBBLESTONE_STAIRS", "f_50633_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#END_STONE_BRICK_STAIRS
    [[maybe_unused]] static jobject get_field_END_STONE_BRICK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nj", "END_STONE_BRICK_STAIRS", "field_10012", "END_STONE_BRICK_STAIRS", "f_50634_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#END_STONE_BRICK_STAIRS
    [[maybe_unused]] static void set_field_END_STONE_BRICK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nj", "END_STONE_BRICK_STAIRS", "field_10012", "END_STONE_BRICK_STAIRS", "f_50634_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STONE_STAIRS
    [[maybe_unused]] static jobject get_field_STONE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nk", "STONE_STAIRS", "field_10440", "STONE_STAIRS", "f_50635_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STONE_STAIRS
    [[maybe_unused]] static void set_field_STONE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nk", "STONE_STAIRS", "field_10440", "STONE_STAIRS", "f_50635_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOOTH_SANDSTONE_STAIRS
    [[maybe_unused]] static jobject get_field_SMOOTH_SANDSTONE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nl", "SMOOTH_SANDSTONE_STAIRS", "field_10549", "SMOOTH_SANDSTONE_STAIRS", "f_50636_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOOTH_SANDSTONE_STAIRS
    [[maybe_unused]] static void set_field_SMOOTH_SANDSTONE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nl", "SMOOTH_SANDSTONE_STAIRS", "field_10549", "SMOOTH_SANDSTONE_STAIRS", "f_50636_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOOTH_QUARTZ_STAIRS
    [[maybe_unused]] static jobject get_field_SMOOTH_QUARTZ_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nm", "SMOOTH_QUARTZ_STAIRS", "field_10245", "SMOOTH_QUARTZ_STAIRS", "f_50637_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOOTH_QUARTZ_STAIRS
    [[maybe_unused]] static void set_field_SMOOTH_QUARTZ_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nm", "SMOOTH_QUARTZ_STAIRS", "field_10245", "SMOOTH_QUARTZ_STAIRS", "f_50637_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRANITE_STAIRS
    [[maybe_unused]] static jobject get_field_GRANITE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nn", "GRANITE_STAIRS", "field_10607", "GRANITE_STAIRS", "f_50638_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRANITE_STAIRS
    [[maybe_unused]] static void set_field_GRANITE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nn", "GRANITE_STAIRS", "field_10607", "GRANITE_STAIRS", "f_50638_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ANDESITE_STAIRS
    [[maybe_unused]] static jobject get_field_ANDESITE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("no", "ANDESITE_STAIRS", "field_10386", "ANDESITE_STAIRS", "f_50639_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ANDESITE_STAIRS
    [[maybe_unused]] static void set_field_ANDESITE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("no", "ANDESITE_STAIRS", "field_10386", "ANDESITE_STAIRS", "f_50639_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_NETHER_BRICK_STAIRS
    [[maybe_unused]] static jobject get_field_RED_NETHER_BRICK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("np", "RED_NETHER_BRICK_STAIRS", "field_10497", "RED_NETHER_BRICK_STAIRS", "f_50640_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_NETHER_BRICK_STAIRS
    [[maybe_unused]] static void set_field_RED_NETHER_BRICK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("np", "RED_NETHER_BRICK_STAIRS", "field_10497", "RED_NETHER_BRICK_STAIRS", "f_50640_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_ANDESITE_STAIRS
    [[maybe_unused]] static jobject get_field_POLISHED_ANDESITE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nq", "POLISHED_ANDESITE_STAIRS", "field_9994", "POLISHED_ANDESITE_STAIRS", "f_50641_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_ANDESITE_STAIRS
    [[maybe_unused]] static void set_field_POLISHED_ANDESITE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nq", "POLISHED_ANDESITE_STAIRS", "field_9994", "POLISHED_ANDESITE_STAIRS", "f_50641_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DIORITE_STAIRS
    [[maybe_unused]] static jobject get_field_DIORITE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nr", "DIORITE_STAIRS", "field_10216", "DIORITE_STAIRS", "f_50642_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DIORITE_STAIRS
    [[maybe_unused]] static void set_field_DIORITE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nr", "DIORITE_STAIRS", "field_10216", "DIORITE_STAIRS", "f_50642_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_GRANITE_SLAB
    [[maybe_unused]] static jobject get_field_POLISHED_GRANITE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ns", "POLISHED_GRANITE_SLAB", "field_10329", "POLISHED_GRANITE_SLAB", "f_50643_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_GRANITE_SLAB
    [[maybe_unused]] static void set_field_POLISHED_GRANITE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ns", "POLISHED_GRANITE_SLAB", "field_10329", "POLISHED_GRANITE_SLAB", "f_50643_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOOTH_RED_SANDSTONE_SLAB
    [[maybe_unused]] static jobject get_field_SMOOTH_RED_SANDSTONE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nt", "SMOOTH_RED_SANDSTONE_SLAB", "field_10283", "SMOOTH_RED_SANDSTONE_SLAB", "f_50644_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOOTH_RED_SANDSTONE_SLAB
    [[maybe_unused]] static void set_field_SMOOTH_RED_SANDSTONE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nt", "SMOOTH_RED_SANDSTONE_SLAB", "field_10283", "SMOOTH_RED_SANDSTONE_SLAB", "f_50644_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MOSSY_STONE_BRICK_SLAB
    [[maybe_unused]] static jobject get_field_MOSSY_STONE_BRICK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nu", "MOSSY_STONE_BRICK_SLAB", "field_10024", "MOSSY_STONE_BRICK_SLAB", "f_50645_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MOSSY_STONE_BRICK_SLAB
    [[maybe_unused]] static void set_field_MOSSY_STONE_BRICK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nu", "MOSSY_STONE_BRICK_SLAB", "field_10024", "MOSSY_STONE_BRICK_SLAB", "f_50645_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_DIORITE_SLAB
    [[maybe_unused]] static jobject get_field_POLISHED_DIORITE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nv", "POLISHED_DIORITE_SLAB", "field_10412", "POLISHED_DIORITE_SLAB", "f_50646_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_DIORITE_SLAB
    [[maybe_unused]] static void set_field_POLISHED_DIORITE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nv", "POLISHED_DIORITE_SLAB", "field_10412", "POLISHED_DIORITE_SLAB", "f_50646_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MOSSY_COBBLESTONE_SLAB
    [[maybe_unused]] static jobject get_field_MOSSY_COBBLESTONE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nw", "MOSSY_COBBLESTONE_SLAB", "field_10405", "MOSSY_COBBLESTONE_SLAB", "f_50647_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MOSSY_COBBLESTONE_SLAB
    [[maybe_unused]] static void set_field_MOSSY_COBBLESTONE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nw", "MOSSY_COBBLESTONE_SLAB", "field_10405", "MOSSY_COBBLESTONE_SLAB", "f_50647_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#END_STONE_BRICK_SLAB
    [[maybe_unused]] static jobject get_field_END_STONE_BRICK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nx", "END_STONE_BRICK_SLAB", "field_10064", "END_STONE_BRICK_SLAB", "f_50648_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#END_STONE_BRICK_SLAB
    [[maybe_unused]] static void set_field_END_STONE_BRICK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nx", "END_STONE_BRICK_SLAB", "field_10064", "END_STONE_BRICK_SLAB", "f_50648_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOOTH_SANDSTONE_SLAB
    [[maybe_unused]] static jobject get_field_SMOOTH_SANDSTONE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ny", "SMOOTH_SANDSTONE_SLAB", "field_10262", "SMOOTH_SANDSTONE_SLAB", "f_50649_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOOTH_SANDSTONE_SLAB
    [[maybe_unused]] static void set_field_SMOOTH_SANDSTONE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ny", "SMOOTH_SANDSTONE_SLAB", "field_10262", "SMOOTH_SANDSTONE_SLAB", "f_50649_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOOTH_QUARTZ_SLAB
    [[maybe_unused]] static jobject get_field_SMOOTH_QUARTZ_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nz", "SMOOTH_QUARTZ_SLAB", "field_10601", "SMOOTH_QUARTZ_SLAB", "f_50650_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOOTH_QUARTZ_SLAB
    [[maybe_unused]] static void set_field_SMOOTH_QUARTZ_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nz", "SMOOTH_QUARTZ_SLAB", "field_10601", "SMOOTH_QUARTZ_SLAB", "f_50650_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRANITE_SLAB
    [[maybe_unused]] static jobject get_field_GRANITE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nA", "GRANITE_SLAB", "field_10189", "GRANITE_SLAB", "f_50651_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRANITE_SLAB
    [[maybe_unused]] static void set_field_GRANITE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nA", "GRANITE_SLAB", "field_10189", "GRANITE_SLAB", "f_50651_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ANDESITE_SLAB
    [[maybe_unused]] static jobject get_field_ANDESITE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nB", "ANDESITE_SLAB", "field_10016", "ANDESITE_SLAB", "f_50600_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ANDESITE_SLAB
    [[maybe_unused]] static void set_field_ANDESITE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nB", "ANDESITE_SLAB", "field_10016", "ANDESITE_SLAB", "f_50600_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_NETHER_BRICK_SLAB
    [[maybe_unused]] static jobject get_field_RED_NETHER_BRICK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nC", "RED_NETHER_BRICK_SLAB", "field_10478", "RED_NETHER_BRICK_SLAB", "f_50601_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_NETHER_BRICK_SLAB
    [[maybe_unused]] static void set_field_RED_NETHER_BRICK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nC", "RED_NETHER_BRICK_SLAB", "field_10478", "RED_NETHER_BRICK_SLAB", "f_50601_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_ANDESITE_SLAB
    [[maybe_unused]] static jobject get_field_POLISHED_ANDESITE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nD", "POLISHED_ANDESITE_SLAB", "field_10322", "POLISHED_ANDESITE_SLAB", "f_50602_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_ANDESITE_SLAB
    [[maybe_unused]] static void set_field_POLISHED_ANDESITE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nD", "POLISHED_ANDESITE_SLAB", "field_10322", "POLISHED_ANDESITE_SLAB", "f_50602_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DIORITE_SLAB
    [[maybe_unused]] static jobject get_field_DIORITE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nE", "DIORITE_SLAB", "field_10507", "DIORITE_SLAB", "f_50603_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DIORITE_SLAB
    [[maybe_unused]] static void set_field_DIORITE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nE", "DIORITE_SLAB", "field_10507", "DIORITE_SLAB", "f_50603_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BRICK_WALL
    [[maybe_unused]] static jobject get_field_BRICK_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nF", "BRICK_WALL", "field_10269", "BRICK_WALL", "f_50604_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BRICK_WALL
    [[maybe_unused]] static void set_field_BRICK_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nF", "BRICK_WALL", "field_10269", "BRICK_WALL", "f_50604_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PRISMARINE_WALL
    [[maybe_unused]] static jobject get_field_PRISMARINE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nG", "PRISMARINE_WALL", "field_10530", "PRISMARINE_WALL", "f_50605_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PRISMARINE_WALL
    [[maybe_unused]] static void set_field_PRISMARINE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nG", "PRISMARINE_WALL", "field_10530", "PRISMARINE_WALL", "f_50605_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_SANDSTONE_WALL
    [[maybe_unused]] static jobject get_field_RED_SANDSTONE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nH", "RED_SANDSTONE_WALL", "field_10413", "RED_SANDSTONE_WALL", "f_50606_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_SANDSTONE_WALL
    [[maybe_unused]] static void set_field_RED_SANDSTONE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nH", "RED_SANDSTONE_WALL", "field_10413", "RED_SANDSTONE_WALL", "f_50606_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MOSSY_STONE_BRICK_WALL
    [[maybe_unused]] static jobject get_field_MOSSY_STONE_BRICK_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nI", "MOSSY_STONE_BRICK_WALL", "field_10059", "MOSSY_STONE_BRICK_WALL", "f_50607_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MOSSY_STONE_BRICK_WALL
    [[maybe_unused]] static void set_field_MOSSY_STONE_BRICK_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nI", "MOSSY_STONE_BRICK_WALL", "field_10059", "MOSSY_STONE_BRICK_WALL", "f_50607_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRANITE_WALL
    [[maybe_unused]] static jobject get_field_GRANITE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nJ", "GRANITE_WALL", "field_10072", "GRANITE_WALL", "f_50608_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRANITE_WALL
    [[maybe_unused]] static void set_field_GRANITE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nJ", "GRANITE_WALL", "field_10072", "GRANITE_WALL", "f_50608_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STONE_BRICK_WALL
    [[maybe_unused]] static jobject get_field_STONE_BRICK_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nK", "STONE_BRICK_WALL", "field_10252", "STONE_BRICK_WALL", "f_50609_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STONE_BRICK_WALL
    [[maybe_unused]] static void set_field_STONE_BRICK_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nK", "STONE_BRICK_WALL", "field_10252", "STONE_BRICK_WALL", "f_50609_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MUD_BRICK_WALL
    [[maybe_unused]] static jobject get_field_MUD_BRICK_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nL", "MUD_BRICK_WALL", "field_37567", "MUD_BRICK_WALL", "f_220854_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MUD_BRICK_WALL
    [[maybe_unused]] static void set_field_MUD_BRICK_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nL", "MUD_BRICK_WALL", "field_37567", "MUD_BRICK_WALL", "f_220854_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHER_BRICK_WALL
    [[maybe_unused]] static jobject get_field_NETHER_BRICK_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nM", "NETHER_BRICK_WALL", "field_10127", "NETHER_BRICK_WALL", "f_50610_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHER_BRICK_WALL
    [[maybe_unused]] static void set_field_NETHER_BRICK_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nM", "NETHER_BRICK_WALL", "field_10127", "NETHER_BRICK_WALL", "f_50610_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ANDESITE_WALL
    [[maybe_unused]] static jobject get_field_ANDESITE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nN", "ANDESITE_WALL", "field_10489", "ANDESITE_WALL", "f_50611_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ANDESITE_WALL
    [[maybe_unused]] static void set_field_ANDESITE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nN", "ANDESITE_WALL", "field_10489", "ANDESITE_WALL", "f_50611_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_NETHER_BRICK_WALL
    [[maybe_unused]] static jobject get_field_RED_NETHER_BRICK_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nO", "RED_NETHER_BRICK_WALL", "field_10311", "RED_NETHER_BRICK_WALL", "f_50612_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_NETHER_BRICK_WALL
    [[maybe_unused]] static void set_field_RED_NETHER_BRICK_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nO", "RED_NETHER_BRICK_WALL", "field_10311", "RED_NETHER_BRICK_WALL", "f_50612_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SANDSTONE_WALL
    [[maybe_unused]] static jobject get_field_SANDSTONE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nP", "SANDSTONE_WALL", "field_10630", "SANDSTONE_WALL", "f_50613_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SANDSTONE_WALL
    [[maybe_unused]] static void set_field_SANDSTONE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nP", "SANDSTONE_WALL", "field_10630", "SANDSTONE_WALL", "f_50613_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#END_STONE_BRICK_WALL
    [[maybe_unused]] static jobject get_field_END_STONE_BRICK_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nQ", "END_STONE_BRICK_WALL", "field_10001", "END_STONE_BRICK_WALL", "f_50614_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#END_STONE_BRICK_WALL
    [[maybe_unused]] static void set_field_END_STONE_BRICK_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nQ", "END_STONE_BRICK_WALL", "field_10001", "END_STONE_BRICK_WALL", "f_50614_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DIORITE_WALL
    [[maybe_unused]] static jobject get_field_DIORITE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nR", "DIORITE_WALL", "field_10517", "DIORITE_WALL", "f_50615_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DIORITE_WALL
    [[maybe_unused]] static void set_field_DIORITE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nR", "DIORITE_WALL", "field_10517", "DIORITE_WALL", "f_50615_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SCAFFOLDING
    [[maybe_unused]] static jobject get_field_SCAFFOLDING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nS", "SCAFFOLDING", "field_16492", "SCAFFOLDING", "f_50616_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SCAFFOLDING
    [[maybe_unused]] static void set_field_SCAFFOLDING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nS", "SCAFFOLDING", "field_16492", "SCAFFOLDING", "f_50616_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LOOM
    [[maybe_unused]] static jobject get_field_LOOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nT", "LOOM", "field_10083", "LOOM", "f_50617_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LOOM
    [[maybe_unused]] static void set_field_LOOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nT", "LOOM", "field_10083", "LOOM", "f_50617_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BARREL
    [[maybe_unused]] static jobject get_field_BARREL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nU", "BARREL", "field_16328", "BARREL", "f_50618_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BARREL
    [[maybe_unused]] static void set_field_BARREL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nU", "BARREL", "field_16328", "BARREL", "f_50618_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOKER
    [[maybe_unused]] static jobject get_field_SMOKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nV", "SMOKER", "field_16334", "SMOKER", "f_50619_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOKER
    [[maybe_unused]] static void set_field_SMOKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nV", "SMOKER", "field_16334", "SMOKER", "f_50619_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLAST_FURNACE
    [[maybe_unused]] static jobject get_field_BLAST_FURNACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nW", "BLAST_FURNACE", "field_16333", "BLAST_FURNACE", "f_50620_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLAST_FURNACE
    [[maybe_unused]] static void set_field_BLAST_FURNACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nW", "BLAST_FURNACE", "field_16333", "BLAST_FURNACE", "f_50620_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CARTOGRAPHY_TABLE
    [[maybe_unused]] static jobject get_field_CARTOGRAPHY_TABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nX", "CARTOGRAPHY_TABLE", "field_16336", "CARTOGRAPHY_TABLE", "f_50621_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CARTOGRAPHY_TABLE
    [[maybe_unused]] static void set_field_CARTOGRAPHY_TABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nX", "CARTOGRAPHY_TABLE", "field_16336", "CARTOGRAPHY_TABLE", "f_50621_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FLETCHING_TABLE
    [[maybe_unused]] static jobject get_field_FLETCHING_TABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nY", "FLETCHING_TABLE", "field_16331", "FLETCHING_TABLE", "f_50622_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FLETCHING_TABLE
    [[maybe_unused]] static void set_field_FLETCHING_TABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nY", "FLETCHING_TABLE", "field_16331", "FLETCHING_TABLE", "f_50622_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRINDSTONE
    [[maybe_unused]] static jobject get_field_GRINDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nZ", "GRINDSTONE", "field_16337", "GRINDSTONE", "f_50623_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRINDSTONE
    [[maybe_unused]] static void set_field_GRINDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("nZ", "GRINDSTONE", "field_16337", "GRINDSTONE", "f_50623_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LECTERN
    [[maybe_unused]] static jobject get_field_LECTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oa", "LECTERN", "field_16330", "LECTERN", "f_50624_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LECTERN
    [[maybe_unused]] static void set_field_LECTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oa", "LECTERN", "field_16330", "LECTERN", "f_50624_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMITHING_TABLE
    [[maybe_unused]] static jobject get_field_SMITHING_TABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ob", "SMITHING_TABLE", "field_16329", "SMITHING_TABLE", "f_50625_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMITHING_TABLE
    [[maybe_unused]] static void set_field_SMITHING_TABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ob", "SMITHING_TABLE", "field_16329", "SMITHING_TABLE", "f_50625_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STONECUTTER
    [[maybe_unused]] static jobject get_field_STONECUTTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oc", "STONECUTTER", "field_16335", "STONECUTTER", "f_50679_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STONECUTTER
    [[maybe_unused]] static void set_field_STONECUTTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oc", "STONECUTTER", "field_16335", "STONECUTTER", "f_50679_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BELL
    [[maybe_unused]] static jobject get_field_BELL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("od", "BELL", "field_16332", "BELL", "f_50680_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BELL
    [[maybe_unused]] static void set_field_BELL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("od", "BELL", "field_16332", "BELL", "f_50680_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LANTERN
    [[maybe_unused]] static jobject get_field_LANTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oe", "LANTERN", "field_16541", "LANTERN", "f_50681_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LANTERN
    [[maybe_unused]] static void set_field_LANTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oe", "LANTERN", "field_16541", "LANTERN", "f_50681_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SOUL_LANTERN
    [[maybe_unused]] static jobject get_field_SOUL_LANTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("of", "SOUL_LANTERN", "field_22110", "SOUL_LANTERN", "f_50682_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SOUL_LANTERN
    [[maybe_unused]] static void set_field_SOUL_LANTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("of", "SOUL_LANTERN", "field_22110", "SOUL_LANTERN", "f_50682_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CAMPFIRE
    [[maybe_unused]] static jobject get_field_CAMPFIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("og", "CAMPFIRE", "field_17350", "CAMPFIRE", "f_50683_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CAMPFIRE
    [[maybe_unused]] static void set_field_CAMPFIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("og", "CAMPFIRE", "field_17350", "CAMPFIRE", "f_50683_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SOUL_CAMPFIRE
    [[maybe_unused]] static jobject get_field_SOUL_CAMPFIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oh", "SOUL_CAMPFIRE", "field_23860", "SOUL_CAMPFIRE", "f_50684_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SOUL_CAMPFIRE
    [[maybe_unused]] static void set_field_SOUL_CAMPFIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oh", "SOUL_CAMPFIRE", "field_23860", "SOUL_CAMPFIRE", "f_50684_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SWEET_BERRY_BUSH
    [[maybe_unused]] static jobject get_field_SWEET_BERRY_BUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oi", "SWEET_BERRY_BUSH", "field_16999", "SWEET_BERRY_BUSH", "f_50685_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SWEET_BERRY_BUSH
    [[maybe_unused]] static void set_field_SWEET_BERRY_BUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oi", "SWEET_BERRY_BUSH", "field_16999", "SWEET_BERRY_BUSH", "f_50685_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_STEM
    [[maybe_unused]] static jobject get_field_WARPED_STEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oj", "WARPED_STEM", "field_22111", "WARPED_STEM", "f_50686_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_STEM
    [[maybe_unused]] static void set_field_WARPED_STEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oj", "WARPED_STEM", "field_22111", "WARPED_STEM", "f_50686_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_WARPED_STEM
    [[maybe_unused]] static jobject get_field_STRIPPED_WARPED_STEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ok", "STRIPPED_WARPED_STEM", "field_22112", "STRIPPED_WARPED_STEM", "f_50687_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_WARPED_STEM
    [[maybe_unused]] static void set_field_STRIPPED_WARPED_STEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ok", "STRIPPED_WARPED_STEM", "field_22112", "STRIPPED_WARPED_STEM", "f_50687_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_HYPHAE
    [[maybe_unused]] static jobject get_field_WARPED_HYPHAE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ol", "WARPED_HYPHAE", "field_22503", "WARPED_HYPHAE", "f_50688_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_HYPHAE
    [[maybe_unused]] static void set_field_WARPED_HYPHAE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ol", "WARPED_HYPHAE", "field_22503", "WARPED_HYPHAE", "f_50688_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_WARPED_HYPHAE
    [[maybe_unused]] static jobject get_field_STRIPPED_WARPED_HYPHAE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("om", "STRIPPED_WARPED_HYPHAE", "field_22504", "STRIPPED_WARPED_HYPHAE", "f_50689_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_WARPED_HYPHAE
    [[maybe_unused]] static void set_field_STRIPPED_WARPED_HYPHAE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("om", "STRIPPED_WARPED_HYPHAE", "field_22504", "STRIPPED_WARPED_HYPHAE", "f_50689_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_NYLIUM
    [[maybe_unused]] static jobject get_field_WARPED_NYLIUM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("on", "WARPED_NYLIUM", "field_22113", "WARPED_NYLIUM", "f_50690_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_NYLIUM
    [[maybe_unused]] static void set_field_WARPED_NYLIUM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("on", "WARPED_NYLIUM", "field_22113", "WARPED_NYLIUM", "f_50690_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_FUNGUS
    [[maybe_unused]] static jobject get_field_WARPED_FUNGUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oo", "WARPED_FUNGUS", "field_22114", "WARPED_FUNGUS", "f_50691_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_FUNGUS
    [[maybe_unused]] static void set_field_WARPED_FUNGUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oo", "WARPED_FUNGUS", "field_22114", "WARPED_FUNGUS", "f_50691_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_WART_BLOCK
    [[maybe_unused]] static jobject get_field_WARPED_WART_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("op", "WARPED_WART_BLOCK", "field_22115", "WARPED_WART_BLOCK", "f_50692_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_WART_BLOCK
    [[maybe_unused]] static void set_field_WARPED_WART_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("op", "WARPED_WART_BLOCK", "field_22115", "WARPED_WART_BLOCK", "f_50692_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_ROOTS
    [[maybe_unused]] static jobject get_field_WARPED_ROOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oq", "WARPED_ROOTS", "field_22116", "WARPED_ROOTS", "f_50693_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_ROOTS
    [[maybe_unused]] static void set_field_WARPED_ROOTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oq", "WARPED_ROOTS", "field_22116", "WARPED_ROOTS", "f_50693_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHER_SPROUTS
    [[maybe_unused]] static jobject get_field_NETHER_SPROUTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("or", "NETHER_SPROUTS", "field_22117", "NETHER_SPROUTS", "f_50694_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHER_SPROUTS
    [[maybe_unused]] static void set_field_NETHER_SPROUTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("or", "NETHER_SPROUTS", "field_22117", "NETHER_SPROUTS", "f_50694_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_STEM
    [[maybe_unused]] static jobject get_field_CRIMSON_STEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("os", "CRIMSON_STEM", "field_22118", "CRIMSON_STEM", "f_50695_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_STEM
    [[maybe_unused]] static void set_field_CRIMSON_STEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("os", "CRIMSON_STEM", "field_22118", "CRIMSON_STEM", "f_50695_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_CRIMSON_STEM
    [[maybe_unused]] static jobject get_field_STRIPPED_CRIMSON_STEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ot", "STRIPPED_CRIMSON_STEM", "field_22119", "STRIPPED_CRIMSON_STEM", "f_50696_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_CRIMSON_STEM
    [[maybe_unused]] static void set_field_STRIPPED_CRIMSON_STEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ot", "STRIPPED_CRIMSON_STEM", "field_22119", "STRIPPED_CRIMSON_STEM", "f_50696_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_HYPHAE
    [[maybe_unused]] static jobject get_field_CRIMSON_HYPHAE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ou", "CRIMSON_HYPHAE", "field_22505", "CRIMSON_HYPHAE", "f_50697_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_HYPHAE
    [[maybe_unused]] static void set_field_CRIMSON_HYPHAE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ou", "CRIMSON_HYPHAE", "field_22505", "CRIMSON_HYPHAE", "f_50697_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRIPPED_CRIMSON_HYPHAE
    [[maybe_unused]] static jobject get_field_STRIPPED_CRIMSON_HYPHAE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ov", "STRIPPED_CRIMSON_HYPHAE", "field_22506", "STRIPPED_CRIMSON_HYPHAE", "f_50698_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRIPPED_CRIMSON_HYPHAE
    [[maybe_unused]] static void set_field_STRIPPED_CRIMSON_HYPHAE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ov", "STRIPPED_CRIMSON_HYPHAE", "field_22506", "STRIPPED_CRIMSON_HYPHAE", "f_50698_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_NYLIUM
    [[maybe_unused]] static jobject get_field_CRIMSON_NYLIUM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ow", "CRIMSON_NYLIUM", "field_22120", "CRIMSON_NYLIUM", "f_50699_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_NYLIUM
    [[maybe_unused]] static void set_field_CRIMSON_NYLIUM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ow", "CRIMSON_NYLIUM", "field_22120", "CRIMSON_NYLIUM", "f_50699_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_FUNGUS
    [[maybe_unused]] static jobject get_field_CRIMSON_FUNGUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ox", "CRIMSON_FUNGUS", "field_22121", "CRIMSON_FUNGUS", "f_50700_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_FUNGUS
    [[maybe_unused]] static void set_field_CRIMSON_FUNGUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ox", "CRIMSON_FUNGUS", "field_22121", "CRIMSON_FUNGUS", "f_50700_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SHROOMLIGHT
    [[maybe_unused]] static jobject get_field_SHROOMLIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oy", "SHROOMLIGHT", "field_22122", "SHROOMLIGHT", "f_50701_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SHROOMLIGHT
    [[maybe_unused]] static void set_field_SHROOMLIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oy", "SHROOMLIGHT", "field_22122", "SHROOMLIGHT", "f_50701_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WEEPING_VINES
    [[maybe_unused]] static jobject get_field_WEEPING_VINES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oz", "WEEPING_VINES", "field_22123", "WEEPING_VINES", "f_50702_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WEEPING_VINES
    [[maybe_unused]] static void set_field_WEEPING_VINES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oz", "WEEPING_VINES", "field_22123", "WEEPING_VINES", "f_50702_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WEEPING_VINES_PLANT
    [[maybe_unused]] static jobject get_field_WEEPING_VINES_PLANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oA", "WEEPING_VINES_PLANT", "field_22124", "WEEPING_VINES_PLANT", "f_50703_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WEEPING_VINES_PLANT
    [[maybe_unused]] static void set_field_WEEPING_VINES_PLANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oA", "WEEPING_VINES_PLANT", "field_22124", "WEEPING_VINES_PLANT", "f_50703_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TWISTING_VINES
    [[maybe_unused]] static jobject get_field_TWISTING_VINES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oB", "TWISTING_VINES", "field_23078", "TWISTING_VINES", "f_50704_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TWISTING_VINES
    [[maybe_unused]] static void set_field_TWISTING_VINES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oB", "TWISTING_VINES", "field_23078", "TWISTING_VINES", "f_50704_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TWISTING_VINES_PLANT
    [[maybe_unused]] static jobject get_field_TWISTING_VINES_PLANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oC", "TWISTING_VINES_PLANT", "field_23079", "TWISTING_VINES_PLANT", "f_50653_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TWISTING_VINES_PLANT
    [[maybe_unused]] static void set_field_TWISTING_VINES_PLANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oC", "TWISTING_VINES_PLANT", "field_23079", "TWISTING_VINES_PLANT", "f_50653_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_ROOTS
    [[maybe_unused]] static jobject get_field_CRIMSON_ROOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oD", "CRIMSON_ROOTS", "field_22125", "CRIMSON_ROOTS", "f_50654_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_ROOTS
    [[maybe_unused]] static void set_field_CRIMSON_ROOTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oD", "CRIMSON_ROOTS", "field_22125", "CRIMSON_ROOTS", "f_50654_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_PLANKS
    [[maybe_unused]] static jobject get_field_CRIMSON_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oE", "CRIMSON_PLANKS", "field_22126", "CRIMSON_PLANKS", "f_50655_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_PLANKS
    [[maybe_unused]] static void set_field_CRIMSON_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oE", "CRIMSON_PLANKS", "field_22126", "CRIMSON_PLANKS", "f_50655_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_PLANKS
    [[maybe_unused]] static jobject get_field_WARPED_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oF", "WARPED_PLANKS", "field_22127", "WARPED_PLANKS", "f_50656_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_PLANKS
    [[maybe_unused]] static void set_field_WARPED_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oF", "WARPED_PLANKS", "field_22127", "WARPED_PLANKS", "f_50656_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_SLAB
    [[maybe_unused]] static jobject get_field_CRIMSON_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oG", "CRIMSON_SLAB", "field_22128", "CRIMSON_SLAB", "f_50657_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_SLAB
    [[maybe_unused]] static void set_field_CRIMSON_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oG", "CRIMSON_SLAB", "field_22128", "CRIMSON_SLAB", "f_50657_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_SLAB
    [[maybe_unused]] static jobject get_field_WARPED_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oH", "WARPED_SLAB", "field_22129", "WARPED_SLAB", "f_50658_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_SLAB
    [[maybe_unused]] static void set_field_WARPED_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oH", "WARPED_SLAB", "field_22129", "WARPED_SLAB", "f_50658_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_CRIMSON_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oI", "CRIMSON_PRESSURE_PLATE", "field_22130", "CRIMSON_PRESSURE_PLATE", "f_50659_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_CRIMSON_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oI", "CRIMSON_PRESSURE_PLATE", "field_22130", "CRIMSON_PRESSURE_PLATE", "f_50659_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_WARPED_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oJ", "WARPED_PRESSURE_PLATE", "field_22131", "WARPED_PRESSURE_PLATE", "f_50660_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_WARPED_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oJ", "WARPED_PRESSURE_PLATE", "field_22131", "WARPED_PRESSURE_PLATE", "f_50660_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_FENCE
    [[maybe_unused]] static jobject get_field_CRIMSON_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oK", "CRIMSON_FENCE", "field_22132", "CRIMSON_FENCE", "f_50661_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_FENCE
    [[maybe_unused]] static void set_field_CRIMSON_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oK", "CRIMSON_FENCE", "field_22132", "CRIMSON_FENCE", "f_50661_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_FENCE
    [[maybe_unused]] static jobject get_field_WARPED_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oL", "WARPED_FENCE", "field_22133", "WARPED_FENCE", "f_50662_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_FENCE
    [[maybe_unused]] static void set_field_WARPED_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oL", "WARPED_FENCE", "field_22133", "WARPED_FENCE", "f_50662_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_TRAPDOOR
    [[maybe_unused]] static jobject get_field_CRIMSON_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oM", "CRIMSON_TRAPDOOR", "field_22094", "CRIMSON_TRAPDOOR", "f_50663_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_TRAPDOOR
    [[maybe_unused]] static void set_field_CRIMSON_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oM", "CRIMSON_TRAPDOOR", "field_22094", "CRIMSON_TRAPDOOR", "f_50663_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_TRAPDOOR
    [[maybe_unused]] static jobject get_field_WARPED_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oN", "WARPED_TRAPDOOR", "field_22095", "WARPED_TRAPDOOR", "f_50664_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_TRAPDOOR
    [[maybe_unused]] static void set_field_WARPED_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oN", "WARPED_TRAPDOOR", "field_22095", "WARPED_TRAPDOOR", "f_50664_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_FENCE_GATE
    [[maybe_unused]] static jobject get_field_CRIMSON_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oO", "CRIMSON_FENCE_GATE", "field_22096", "CRIMSON_FENCE_GATE", "f_50665_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_FENCE_GATE
    [[maybe_unused]] static void set_field_CRIMSON_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oO", "CRIMSON_FENCE_GATE", "field_22096", "CRIMSON_FENCE_GATE", "f_50665_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_FENCE_GATE
    [[maybe_unused]] static jobject get_field_WARPED_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oP", "WARPED_FENCE_GATE", "field_22097", "WARPED_FENCE_GATE", "f_50666_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_FENCE_GATE
    [[maybe_unused]] static void set_field_WARPED_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oP", "WARPED_FENCE_GATE", "field_22097", "WARPED_FENCE_GATE", "f_50666_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_STAIRS
    [[maybe_unused]] static jobject get_field_CRIMSON_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oQ", "CRIMSON_STAIRS", "field_22098", "CRIMSON_STAIRS", "f_50667_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_STAIRS
    [[maybe_unused]] static void set_field_CRIMSON_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oQ", "CRIMSON_STAIRS", "field_22098", "CRIMSON_STAIRS", "f_50667_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_STAIRS
    [[maybe_unused]] static jobject get_field_WARPED_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oR", "WARPED_STAIRS", "field_22099", "WARPED_STAIRS", "f_50668_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_STAIRS
    [[maybe_unused]] static void set_field_WARPED_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oR", "WARPED_STAIRS", "field_22099", "WARPED_STAIRS", "f_50668_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_BUTTON
    [[maybe_unused]] static jobject get_field_CRIMSON_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oS", "CRIMSON_BUTTON", "field_22100", "CRIMSON_BUTTON", "f_50669_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_BUTTON
    [[maybe_unused]] static void set_field_CRIMSON_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oS", "CRIMSON_BUTTON", "field_22100", "CRIMSON_BUTTON", "f_50669_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_BUTTON
    [[maybe_unused]] static jobject get_field_WARPED_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oT", "WARPED_BUTTON", "field_22101", "WARPED_BUTTON", "f_50670_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_BUTTON
    [[maybe_unused]] static void set_field_WARPED_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oT", "WARPED_BUTTON", "field_22101", "WARPED_BUTTON", "f_50670_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_DOOR
    [[maybe_unused]] static jobject get_field_CRIMSON_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oU", "CRIMSON_DOOR", "field_22102", "CRIMSON_DOOR", "f_50671_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_DOOR
    [[maybe_unused]] static void set_field_CRIMSON_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oU", "CRIMSON_DOOR", "field_22102", "CRIMSON_DOOR", "f_50671_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_DOOR
    [[maybe_unused]] static jobject get_field_WARPED_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oV", "WARPED_DOOR", "field_22103", "WARPED_DOOR", "f_50672_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_DOOR
    [[maybe_unused]] static void set_field_WARPED_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oV", "WARPED_DOOR", "field_22103", "WARPED_DOOR", "f_50672_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_SIGN
    [[maybe_unused]] static jobject get_field_CRIMSON_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oW", "CRIMSON_SIGN", "field_22104", "CRIMSON_SIGN", "f_50673_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_SIGN
    [[maybe_unused]] static void set_field_CRIMSON_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oW", "CRIMSON_SIGN", "field_22104", "CRIMSON_SIGN", "f_50673_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_SIGN
    [[maybe_unused]] static jobject get_field_WARPED_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oX", "WARPED_SIGN", "field_22105", "WARPED_SIGN", "f_50674_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_SIGN
    [[maybe_unused]] static void set_field_WARPED_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oX", "WARPED_SIGN", "field_22105", "WARPED_SIGN", "f_50674_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRIMSON_WALL_SIGN
    [[maybe_unused]] static jobject get_field_CRIMSON_WALL_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oY", "CRIMSON_WALL_SIGN", "field_22106", "CRIMSON_WALL_SIGN", "f_50675_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRIMSON_WALL_SIGN
    [[maybe_unused]] static void set_field_CRIMSON_WALL_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oY", "CRIMSON_WALL_SIGN", "field_22106", "CRIMSON_WALL_SIGN", "f_50675_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WARPED_WALL_SIGN
    [[maybe_unused]] static jobject get_field_WARPED_WALL_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oZ", "WARPED_WALL_SIGN", "field_22107", "WARPED_WALL_SIGN", "f_50676_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WARPED_WALL_SIGN
    [[maybe_unused]] static void set_field_WARPED_WALL_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("oZ", "WARPED_WALL_SIGN", "field_22107", "WARPED_WALL_SIGN", "f_50676_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#STRUCTURE_BLOCK
    [[maybe_unused]] static jobject get_field_STRUCTURE_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pa", "STRUCTURE_BLOCK", "field_10465", "STRUCTURE_BLOCK", "f_50677_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#STRUCTURE_BLOCK
    [[maybe_unused]] static void set_field_STRUCTURE_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pa", "STRUCTURE_BLOCK", "field_10465", "STRUCTURE_BLOCK", "f_50677_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#JIGSAW
    [[maybe_unused]] static jobject get_field_JIGSAW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pb", "JIGSAW", "field_16540", "JIGSAW", "f_50678_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#JIGSAW
    [[maybe_unused]] static void set_field_JIGSAW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pb", "JIGSAW", "field_16540", "JIGSAW", "f_50678_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COMPOSTER
    [[maybe_unused]] static jobject get_field_COMPOSTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pc", "COMPOSTER", "field_17563", "COMPOSTER", "f_50715_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COMPOSTER
    [[maybe_unused]] static void set_field_COMPOSTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pc", "COMPOSTER", "field_17563", "COMPOSTER", "f_50715_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TARGET
    [[maybe_unused]] static jobject get_field_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pd", "TARGET", "field_22422", "TARGET", "f_50716_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TARGET
    [[maybe_unused]] static void set_field_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pd", "TARGET", "field_22422", "TARGET", "f_50716_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BEE_NEST
    [[maybe_unused]] static jobject get_field_BEE_NEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pe", "BEE_NEST", "field_20421", "BEE_NEST", "f_50717_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BEE_NEST
    [[maybe_unused]] static void set_field_BEE_NEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pe", "BEE_NEST", "field_20421", "BEE_NEST", "f_50717_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BEEHIVE
    [[maybe_unused]] static jobject get_field_BEEHIVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pf", "BEEHIVE", "field_20422", "BEEHIVE", "f_50718_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BEEHIVE
    [[maybe_unused]] static void set_field_BEEHIVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pf", "BEEHIVE", "field_20422", "BEEHIVE", "f_50718_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#HONEY_BLOCK
    [[maybe_unused]] static jobject get_field_HONEY_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pg", "HONEY_BLOCK", "field_21211", "HONEY_BLOCK", "f_50719_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#HONEY_BLOCK
    [[maybe_unused]] static void set_field_HONEY_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pg", "HONEY_BLOCK", "field_21211", "HONEY_BLOCK", "f_50719_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#HONEYCOMB_BLOCK
    [[maybe_unused]] static jobject get_field_HONEYCOMB_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ph", "HONEYCOMB_BLOCK", "field_21212", "HONEYCOMB_BLOCK", "f_50720_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#HONEYCOMB_BLOCK
    [[maybe_unused]] static void set_field_HONEYCOMB_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ph", "HONEYCOMB_BLOCK", "field_21212", "HONEYCOMB_BLOCK", "f_50720_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#NETHERITE_BLOCK
    [[maybe_unused]] static jobject get_field_NETHERITE_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pi", "NETHERITE_BLOCK", "field_22108", "NETHERITE_BLOCK", "f_50721_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#NETHERITE_BLOCK
    [[maybe_unused]] static void set_field_NETHERITE_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pi", "NETHERITE_BLOCK", "field_22108", "NETHERITE_BLOCK", "f_50721_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ANCIENT_DEBRIS
    [[maybe_unused]] static jobject get_field_ANCIENT_DEBRIS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pj", "ANCIENT_DEBRIS", "field_22109", "ANCIENT_DEBRIS", "f_50722_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ANCIENT_DEBRIS
    [[maybe_unused]] static void set_field_ANCIENT_DEBRIS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pj", "ANCIENT_DEBRIS", "field_22109", "ANCIENT_DEBRIS", "f_50722_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRYING_OBSIDIAN
    [[maybe_unused]] static jobject get_field_CRYING_OBSIDIAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pk", "CRYING_OBSIDIAN", "field_22423", "CRYING_OBSIDIAN", "f_50723_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRYING_OBSIDIAN
    [[maybe_unused]] static void set_field_CRYING_OBSIDIAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pk", "CRYING_OBSIDIAN", "field_22423", "CRYING_OBSIDIAN", "f_50723_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RESPAWN_ANCHOR
    [[maybe_unused]] static jobject get_field_RESPAWN_ANCHOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pl", "RESPAWN_ANCHOR", "field_23152", "RESPAWN_ANCHOR", "f_50724_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RESPAWN_ANCHOR
    [[maybe_unused]] static void set_field_RESPAWN_ANCHOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pl", "RESPAWN_ANCHOR", "field_23152", "RESPAWN_ANCHOR", "f_50724_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_CRIMSON_FUNGUS
    [[maybe_unused]] static jobject get_field_POTTED_CRIMSON_FUNGUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pm", "POTTED_CRIMSON_FUNGUS", "field_22424", "POTTED_CRIMSON_FUNGUS", "f_50725_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_CRIMSON_FUNGUS
    [[maybe_unused]] static void set_field_POTTED_CRIMSON_FUNGUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pm", "POTTED_CRIMSON_FUNGUS", "field_22424", "POTTED_CRIMSON_FUNGUS", "f_50725_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_WARPED_FUNGUS
    [[maybe_unused]] static jobject get_field_POTTED_WARPED_FUNGUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pn", "POTTED_WARPED_FUNGUS", "field_22425", "POTTED_WARPED_FUNGUS", "f_50726_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_WARPED_FUNGUS
    [[maybe_unused]] static void set_field_POTTED_WARPED_FUNGUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pn", "POTTED_WARPED_FUNGUS", "field_22425", "POTTED_WARPED_FUNGUS", "f_50726_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_CRIMSON_ROOTS
    [[maybe_unused]] static jobject get_field_POTTED_CRIMSON_ROOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("po", "POTTED_CRIMSON_ROOTS", "field_22426", "POTTED_CRIMSON_ROOTS", "f_50727_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_CRIMSON_ROOTS
    [[maybe_unused]] static void set_field_POTTED_CRIMSON_ROOTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("po", "POTTED_CRIMSON_ROOTS", "field_22426", "POTTED_CRIMSON_ROOTS", "f_50727_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_WARPED_ROOTS
    [[maybe_unused]] static jobject get_field_POTTED_WARPED_ROOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pp", "POTTED_WARPED_ROOTS", "field_22427", "POTTED_WARPED_ROOTS", "f_50728_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_WARPED_ROOTS
    [[maybe_unused]] static void set_field_POTTED_WARPED_ROOTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pp", "POTTED_WARPED_ROOTS", "field_22427", "POTTED_WARPED_ROOTS", "f_50728_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LODESTONE
    [[maybe_unused]] static jobject get_field_LODESTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pq", "LODESTONE", "field_23261", "LODESTONE", "f_50729_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LODESTONE
    [[maybe_unused]] static void set_field_LODESTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pq", "LODESTONE", "field_23261", "LODESTONE", "f_50729_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACKSTONE
    [[maybe_unused]] static jobject get_field_BLACKSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pr", "BLACKSTONE", "field_23869", "BLACKSTONE", "f_50730_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACKSTONE
    [[maybe_unused]] static void set_field_BLACKSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pr", "BLACKSTONE", "field_23869", "BLACKSTONE", "f_50730_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACKSTONE_STAIRS
    [[maybe_unused]] static jobject get_field_BLACKSTONE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ps", "BLACKSTONE_STAIRS", "field_23870", "BLACKSTONE_STAIRS", "f_50731_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACKSTONE_STAIRS
    [[maybe_unused]] static void set_field_BLACKSTONE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ps", "BLACKSTONE_STAIRS", "field_23870", "BLACKSTONE_STAIRS", "f_50731_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACKSTONE_WALL
    [[maybe_unused]] static jobject get_field_BLACKSTONE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pt", "BLACKSTONE_WALL", "field_23871", "BLACKSTONE_WALL", "f_50732_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACKSTONE_WALL
    [[maybe_unused]] static void set_field_BLACKSTONE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pt", "BLACKSTONE_WALL", "field_23871", "BLACKSTONE_WALL", "f_50732_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACKSTONE_SLAB
    [[maybe_unused]] static jobject get_field_BLACKSTONE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pu", "BLACKSTONE_SLAB", "field_23872", "BLACKSTONE_SLAB", "f_50733_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACKSTONE_SLAB
    [[maybe_unused]] static void set_field_BLACKSTONE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pu", "BLACKSTONE_SLAB", "field_23872", "BLACKSTONE_SLAB", "f_50733_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE
    [[maybe_unused]] static jobject get_field_POLISHED_BLACKSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pv", "POLISHED_BLACKSTONE", "field_23873", "POLISHED_BLACKSTONE", "f_50734_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE
    [[maybe_unused]] static void set_field_POLISHED_BLACKSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pv", "POLISHED_BLACKSTONE", "field_23873", "POLISHED_BLACKSTONE", "f_50734_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_BRICKS
    [[maybe_unused]] static jobject get_field_POLISHED_BLACKSTONE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pw", "POLISHED_BLACKSTONE_BRICKS", "field_23874", "POLISHED_BLACKSTONE_BRICKS", "f_50735_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_BRICKS
    [[maybe_unused]] static void set_field_POLISHED_BLACKSTONE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pw", "POLISHED_BLACKSTONE_BRICKS", "field_23874", "POLISHED_BLACKSTONE_BRICKS", "f_50735_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRACKED_POLISHED_BLACKSTONE_BRICKS
    [[maybe_unused]] static jobject get_field_CRACKED_POLISHED_BLACKSTONE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("px", "CRACKED_POLISHED_BLACKSTONE_BRICKS", "field_23875", "CRACKED_POLISHED_BLACKSTONE_BRICKS", "f_50736_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRACKED_POLISHED_BLACKSTONE_BRICKS
    [[maybe_unused]] static void set_field_CRACKED_POLISHED_BLACKSTONE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("px", "CRACKED_POLISHED_BLACKSTONE_BRICKS", "field_23875", "CRACKED_POLISHED_BLACKSTONE_BRICKS", "f_50736_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHISELED_POLISHED_BLACKSTONE
    [[maybe_unused]] static jobject get_field_CHISELED_POLISHED_BLACKSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("py", "CHISELED_POLISHED_BLACKSTONE", "field_23876", "CHISELED_POLISHED_BLACKSTONE", "f_50737_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHISELED_POLISHED_BLACKSTONE
    [[maybe_unused]] static void set_field_CHISELED_POLISHED_BLACKSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("py", "CHISELED_POLISHED_BLACKSTONE", "field_23876", "CHISELED_POLISHED_BLACKSTONE", "f_50737_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_BRICK_SLAB
    [[maybe_unused]] static jobject get_field_POLISHED_BLACKSTONE_BRICK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pz", "POLISHED_BLACKSTONE_BRICK_SLAB", "field_23877", "POLISHED_BLACKSTONE_BRICK_SLAB", "f_50738_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_BRICK_SLAB
    [[maybe_unused]] static void set_field_POLISHED_BLACKSTONE_BRICK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pz", "POLISHED_BLACKSTONE_BRICK_SLAB", "field_23877", "POLISHED_BLACKSTONE_BRICK_SLAB", "f_50738_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_BRICK_STAIRS
    [[maybe_unused]] static jobject get_field_POLISHED_BLACKSTONE_BRICK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pA", "POLISHED_BLACKSTONE_BRICK_STAIRS", "field_23878", "POLISHED_BLACKSTONE_BRICK_STAIRS", "f_50739_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_BRICK_STAIRS
    [[maybe_unused]] static void set_field_POLISHED_BLACKSTONE_BRICK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pA", "POLISHED_BLACKSTONE_BRICK_STAIRS", "field_23878", "POLISHED_BLACKSTONE_BRICK_STAIRS", "f_50739_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_BRICK_WALL
    [[maybe_unused]] static jobject get_field_POLISHED_BLACKSTONE_BRICK_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pB", "POLISHED_BLACKSTONE_BRICK_WALL", "field_23879", "POLISHED_BLACKSTONE_BRICK_WALL", "f_50740_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_BRICK_WALL
    [[maybe_unused]] static void set_field_POLISHED_BLACKSTONE_BRICK_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pB", "POLISHED_BLACKSTONE_BRICK_WALL", "field_23879", "POLISHED_BLACKSTONE_BRICK_WALL", "f_50740_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GILDED_BLACKSTONE
    [[maybe_unused]] static jobject get_field_GILDED_BLACKSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pC", "GILDED_BLACKSTONE", "field_23880", "GILDED_BLACKSTONE", "f_50706_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GILDED_BLACKSTONE
    [[maybe_unused]] static void set_field_GILDED_BLACKSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pC", "GILDED_BLACKSTONE", "field_23880", "GILDED_BLACKSTONE", "f_50706_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_STAIRS
    [[maybe_unused]] static jobject get_field_POLISHED_BLACKSTONE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pD", "POLISHED_BLACKSTONE_STAIRS", "field_23861", "POLISHED_BLACKSTONE_STAIRS", "f_50707_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_STAIRS
    [[maybe_unused]] static void set_field_POLISHED_BLACKSTONE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pD", "POLISHED_BLACKSTONE_STAIRS", "field_23861", "POLISHED_BLACKSTONE_STAIRS", "f_50707_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_SLAB
    [[maybe_unused]] static jobject get_field_POLISHED_BLACKSTONE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pE", "POLISHED_BLACKSTONE_SLAB", "field_23862", "POLISHED_BLACKSTONE_SLAB", "f_50708_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_SLAB
    [[maybe_unused]] static void set_field_POLISHED_BLACKSTONE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pE", "POLISHED_BLACKSTONE_SLAB", "field_23862", "POLISHED_BLACKSTONE_SLAB", "f_50708_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_POLISHED_BLACKSTONE_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pF", "POLISHED_BLACKSTONE_PRESSURE_PLATE", "field_23863", "POLISHED_BLACKSTONE_PRESSURE_PLATE", "f_50709_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_PRESSURE_PLATE
    [[maybe_unused]] static void set_field_POLISHED_BLACKSTONE_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pF", "POLISHED_BLACKSTONE_PRESSURE_PLATE", "field_23863", "POLISHED_BLACKSTONE_PRESSURE_PLATE", "f_50709_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_BUTTON
    [[maybe_unused]] static jobject get_field_POLISHED_BLACKSTONE_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pG", "POLISHED_BLACKSTONE_BUTTON", "field_23864", "POLISHED_BLACKSTONE_BUTTON", "f_50710_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_BUTTON
    [[maybe_unused]] static void set_field_POLISHED_BLACKSTONE_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pG", "POLISHED_BLACKSTONE_BUTTON", "field_23864", "POLISHED_BLACKSTONE_BUTTON", "f_50710_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_WALL
    [[maybe_unused]] static jobject get_field_POLISHED_BLACKSTONE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pH", "POLISHED_BLACKSTONE_WALL", "field_23865", "POLISHED_BLACKSTONE_WALL", "f_50711_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_BLACKSTONE_WALL
    [[maybe_unused]] static void set_field_POLISHED_BLACKSTONE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pH", "POLISHED_BLACKSTONE_WALL", "field_23865", "POLISHED_BLACKSTONE_WALL", "f_50711_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHISELED_NETHER_BRICKS
    [[maybe_unused]] static jobject get_field_CHISELED_NETHER_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pI", "CHISELED_NETHER_BRICKS", "field_23866", "CHISELED_NETHER_BRICKS", "f_50712_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHISELED_NETHER_BRICKS
    [[maybe_unused]] static void set_field_CHISELED_NETHER_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pI", "CHISELED_NETHER_BRICKS", "field_23866", "CHISELED_NETHER_BRICKS", "f_50712_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRACKED_NETHER_BRICKS
    [[maybe_unused]] static jobject get_field_CRACKED_NETHER_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pJ", "CRACKED_NETHER_BRICKS", "field_23867", "CRACKED_NETHER_BRICKS", "f_50713_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRACKED_NETHER_BRICKS
    [[maybe_unused]] static void set_field_CRACKED_NETHER_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pJ", "CRACKED_NETHER_BRICKS", "field_23867", "CRACKED_NETHER_BRICKS", "f_50713_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#QUARTZ_BRICKS
    [[maybe_unused]] static jobject get_field_QUARTZ_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pK", "QUARTZ_BRICKS", "field_23868", "QUARTZ_BRICKS", "f_50714_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#QUARTZ_BRICKS
    [[maybe_unused]] static void set_field_QUARTZ_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pK", "QUARTZ_BRICKS", "field_23868", "QUARTZ_BRICKS", "f_50714_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CANDLE
    [[maybe_unused]] static jobject get_field_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pL", "CANDLE", "field_27099", "CANDLE", "f_152482_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CANDLE
    [[maybe_unused]] static void set_field_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pL", "CANDLE", "field_27099", "CANDLE", "f_152482_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_CANDLE
    [[maybe_unused]] static jobject get_field_WHITE_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pM", "WHITE_CANDLE", "field_27100", "WHITE_CANDLE", "f_152483_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_CANDLE
    [[maybe_unused]] static void set_field_WHITE_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pM", "WHITE_CANDLE", "field_27100", "WHITE_CANDLE", "f_152483_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_CANDLE
    [[maybe_unused]] static jobject get_field_ORANGE_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pN", "ORANGE_CANDLE", "field_27101", "ORANGE_CANDLE", "f_152484_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_CANDLE
    [[maybe_unused]] static void set_field_ORANGE_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pN", "ORANGE_CANDLE", "field_27101", "ORANGE_CANDLE", "f_152484_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_CANDLE
    [[maybe_unused]] static jobject get_field_MAGENTA_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pO", "MAGENTA_CANDLE", "field_27102", "MAGENTA_CANDLE", "f_152511_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_CANDLE
    [[maybe_unused]] static void set_field_MAGENTA_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pO", "MAGENTA_CANDLE", "field_27102", "MAGENTA_CANDLE", "f_152511_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_CANDLE
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pP", "LIGHT_BLUE_CANDLE", "field_27103", "LIGHT_BLUE_CANDLE", "f_152512_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_CANDLE
    [[maybe_unused]] static void set_field_LIGHT_BLUE_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pP", "LIGHT_BLUE_CANDLE", "field_27103", "LIGHT_BLUE_CANDLE", "f_152512_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_CANDLE
    [[maybe_unused]] static jobject get_field_YELLOW_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pQ", "YELLOW_CANDLE", "field_27104", "YELLOW_CANDLE", "f_152513_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_CANDLE
    [[maybe_unused]] static void set_field_YELLOW_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pQ", "YELLOW_CANDLE", "field_27104", "YELLOW_CANDLE", "f_152513_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_CANDLE
    [[maybe_unused]] static jobject get_field_LIME_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pR", "LIME_CANDLE", "field_27105", "LIME_CANDLE", "f_152514_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_CANDLE
    [[maybe_unused]] static void set_field_LIME_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pR", "LIME_CANDLE", "field_27105", "LIME_CANDLE", "f_152514_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_CANDLE
    [[maybe_unused]] static jobject get_field_PINK_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pS", "PINK_CANDLE", "field_27106", "PINK_CANDLE", "f_152515_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_CANDLE
    [[maybe_unused]] static void set_field_PINK_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pS", "PINK_CANDLE", "field_27106", "PINK_CANDLE", "f_152515_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_CANDLE
    [[maybe_unused]] static jobject get_field_GRAY_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pT", "GRAY_CANDLE", "field_27107", "GRAY_CANDLE", "f_152516_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_CANDLE
    [[maybe_unused]] static void set_field_GRAY_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pT", "GRAY_CANDLE", "field_27107", "GRAY_CANDLE", "f_152516_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_CANDLE
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pU", "LIGHT_GRAY_CANDLE", "field_27108", "LIGHT_GRAY_CANDLE", "f_152517_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_CANDLE
    [[maybe_unused]] static void set_field_LIGHT_GRAY_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pU", "LIGHT_GRAY_CANDLE", "field_27108", "LIGHT_GRAY_CANDLE", "f_152517_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_CANDLE
    [[maybe_unused]] static jobject get_field_CYAN_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pV", "CYAN_CANDLE", "field_27109", "CYAN_CANDLE", "f_152518_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_CANDLE
    [[maybe_unused]] static void set_field_CYAN_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pV", "CYAN_CANDLE", "field_27109", "CYAN_CANDLE", "f_152518_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_CANDLE
    [[maybe_unused]] static jobject get_field_PURPLE_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pW", "PURPLE_CANDLE", "field_27110", "PURPLE_CANDLE", "f_152519_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_CANDLE
    [[maybe_unused]] static void set_field_PURPLE_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pW", "PURPLE_CANDLE", "field_27110", "PURPLE_CANDLE", "f_152519_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_CANDLE
    [[maybe_unused]] static jobject get_field_BLUE_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pX", "BLUE_CANDLE", "field_27111", "BLUE_CANDLE", "f_152520_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_CANDLE
    [[maybe_unused]] static void set_field_BLUE_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pX", "BLUE_CANDLE", "field_27111", "BLUE_CANDLE", "f_152520_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_CANDLE
    [[maybe_unused]] static jobject get_field_BROWN_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pY", "BROWN_CANDLE", "field_27112", "BROWN_CANDLE", "f_152521_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_CANDLE
    [[maybe_unused]] static void set_field_BROWN_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pY", "BROWN_CANDLE", "field_27112", "BROWN_CANDLE", "f_152521_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_CANDLE
    [[maybe_unused]] static jobject get_field_GREEN_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pZ", "GREEN_CANDLE", "field_27113", "GREEN_CANDLE", "f_152522_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_CANDLE
    [[maybe_unused]] static void set_field_GREEN_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("pZ", "GREEN_CANDLE", "field_27113", "GREEN_CANDLE", "f_152522_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_CANDLE
    [[maybe_unused]] static jobject get_field_RED_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qa", "RED_CANDLE", "field_27140", "RED_CANDLE", "f_152523_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_CANDLE
    [[maybe_unused]] static void set_field_RED_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qa", "RED_CANDLE", "field_27140", "RED_CANDLE", "f_152523_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_CANDLE
    [[maybe_unused]] static jobject get_field_BLACK_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qb", "BLACK_CANDLE", "field_27141", "BLACK_CANDLE", "f_152524_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_CANDLE
    [[maybe_unused]] static void set_field_BLACK_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qb", "BLACK_CANDLE", "field_27141", "BLACK_CANDLE", "f_152524_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qc", "CANDLE_CAKE", "field_27142", "CANDLE_CAKE", "f_152525_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CANDLE_CAKE
    [[maybe_unused]] static void set_field_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qc", "CANDLE_CAKE", "field_27142", "CANDLE_CAKE", "f_152525_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WHITE_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_WHITE_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qd", "WHITE_CANDLE_CAKE", "field_27143", "WHITE_CANDLE_CAKE", "f_152526_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WHITE_CANDLE_CAKE
    [[maybe_unused]] static void set_field_WHITE_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qd", "WHITE_CANDLE_CAKE", "field_27143", "WHITE_CANDLE_CAKE", "f_152526_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ORANGE_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_ORANGE_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qe", "ORANGE_CANDLE_CAKE", "field_27144", "ORANGE_CANDLE_CAKE", "f_152527_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ORANGE_CANDLE_CAKE
    [[maybe_unused]] static void set_field_ORANGE_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qe", "ORANGE_CANDLE_CAKE", "field_27144", "ORANGE_CANDLE_CAKE", "f_152527_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MAGENTA_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_MAGENTA_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qf", "MAGENTA_CANDLE_CAKE", "field_27145", "MAGENTA_CANDLE_CAKE", "f_152528_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MAGENTA_CANDLE_CAKE
    [[maybe_unused]] static void set_field_MAGENTA_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qf", "MAGENTA_CANDLE_CAKE", "field_27145", "MAGENTA_CANDLE_CAKE", "f_152528_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qg", "LIGHT_BLUE_CANDLE_CAKE", "field_27146", "LIGHT_BLUE_CANDLE_CAKE", "f_152529_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_BLUE_CANDLE_CAKE
    [[maybe_unused]] static void set_field_LIGHT_BLUE_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qg", "LIGHT_BLUE_CANDLE_CAKE", "field_27146", "LIGHT_BLUE_CANDLE_CAKE", "f_152529_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#YELLOW_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_YELLOW_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qh", "YELLOW_CANDLE_CAKE", "field_27147", "YELLOW_CANDLE_CAKE", "f_152530_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#YELLOW_CANDLE_CAKE
    [[maybe_unused]] static void set_field_YELLOW_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qh", "YELLOW_CANDLE_CAKE", "field_27147", "YELLOW_CANDLE_CAKE", "f_152530_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIME_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_LIME_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qi", "LIME_CANDLE_CAKE", "field_27148", "LIME_CANDLE_CAKE", "f_152531_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIME_CANDLE_CAKE
    [[maybe_unused]] static void set_field_LIME_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qi", "LIME_CANDLE_CAKE", "field_27148", "LIME_CANDLE_CAKE", "f_152531_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_PINK_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qj", "PINK_CANDLE_CAKE", "field_27149", "PINK_CANDLE_CAKE", "f_152532_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_CANDLE_CAKE
    [[maybe_unused]] static void set_field_PINK_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qj", "PINK_CANDLE_CAKE", "field_27149", "PINK_CANDLE_CAKE", "f_152532_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GRAY_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_GRAY_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qk", "GRAY_CANDLE_CAKE", "field_27150", "GRAY_CANDLE_CAKE", "f_152533_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GRAY_CANDLE_CAKE
    [[maybe_unused]] static void set_field_GRAY_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qk", "GRAY_CANDLE_CAKE", "field_27150", "GRAY_CANDLE_CAKE", "f_152533_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ql", "LIGHT_GRAY_CANDLE_CAKE", "field_27151", "LIGHT_GRAY_CANDLE_CAKE", "f_152534_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHT_GRAY_CANDLE_CAKE
    [[maybe_unused]] static void set_field_LIGHT_GRAY_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ql", "LIGHT_GRAY_CANDLE_CAKE", "field_27151", "LIGHT_GRAY_CANDLE_CAKE", "f_152534_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CYAN_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_CYAN_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qm", "CYAN_CANDLE_CAKE", "field_27152", "CYAN_CANDLE_CAKE", "f_152535_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CYAN_CANDLE_CAKE
    [[maybe_unused]] static void set_field_CYAN_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qm", "CYAN_CANDLE_CAKE", "field_27152", "CYAN_CANDLE_CAKE", "f_152535_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PURPLE_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_PURPLE_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qn", "PURPLE_CANDLE_CAKE", "field_27153", "PURPLE_CANDLE_CAKE", "f_152536_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PURPLE_CANDLE_CAKE
    [[maybe_unused]] static void set_field_PURPLE_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qn", "PURPLE_CANDLE_CAKE", "field_27153", "PURPLE_CANDLE_CAKE", "f_152536_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLUE_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_BLUE_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qo", "BLUE_CANDLE_CAKE", "field_27154", "BLUE_CANDLE_CAKE", "f_152485_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLUE_CANDLE_CAKE
    [[maybe_unused]] static void set_field_BLUE_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qo", "BLUE_CANDLE_CAKE", "field_27154", "BLUE_CANDLE_CAKE", "f_152485_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BROWN_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_BROWN_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qp", "BROWN_CANDLE_CAKE", "field_27155", "BROWN_CANDLE_CAKE", "f_152486_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BROWN_CANDLE_CAKE
    [[maybe_unused]] static void set_field_BROWN_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qp", "BROWN_CANDLE_CAKE", "field_27155", "BROWN_CANDLE_CAKE", "f_152486_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#GREEN_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_GREEN_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qq", "GREEN_CANDLE_CAKE", "field_27156", "GREEN_CANDLE_CAKE", "f_152487_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#GREEN_CANDLE_CAKE
    [[maybe_unused]] static void set_field_GREEN_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qq", "GREEN_CANDLE_CAKE", "field_27156", "GREEN_CANDLE_CAKE", "f_152487_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RED_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_RED_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qr", "RED_CANDLE_CAKE", "field_27157", "RED_CANDLE_CAKE", "f_152488_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RED_CANDLE_CAKE
    [[maybe_unused]] static void set_field_RED_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qr", "RED_CANDLE_CAKE", "field_27157", "RED_CANDLE_CAKE", "f_152488_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BLACK_CANDLE_CAKE
    [[maybe_unused]] static jobject get_field_BLACK_CANDLE_CAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qs", "BLACK_CANDLE_CAKE", "field_27158", "BLACK_CANDLE_CAKE", "f_152489_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BLACK_CANDLE_CAKE
    [[maybe_unused]] static void set_field_BLACK_CANDLE_CAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qs", "BLACK_CANDLE_CAKE", "field_27158", "BLACK_CANDLE_CAKE", "f_152489_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#AMETHYST_BLOCK
    [[maybe_unused]] static jobject get_field_AMETHYST_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qt", "AMETHYST_BLOCK", "field_27159", "AMETHYST_BLOCK", "f_152490_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#AMETHYST_BLOCK
    [[maybe_unused]] static void set_field_AMETHYST_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qt", "AMETHYST_BLOCK", "field_27159", "AMETHYST_BLOCK", "f_152490_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BUDDING_AMETHYST
    [[maybe_unused]] static jobject get_field_BUDDING_AMETHYST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qu", "BUDDING_AMETHYST", "field_27160", "BUDDING_AMETHYST", "f_152491_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BUDDING_AMETHYST
    [[maybe_unused]] static void set_field_BUDDING_AMETHYST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qu", "BUDDING_AMETHYST", "field_27160", "BUDDING_AMETHYST", "f_152491_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#AMETHYST_CLUSTER
    [[maybe_unused]] static jobject get_field_AMETHYST_CLUSTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qv", "AMETHYST_CLUSTER", "field_27161", "AMETHYST_CLUSTER", "f_152492_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#AMETHYST_CLUSTER
    [[maybe_unused]] static void set_field_AMETHYST_CLUSTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qv", "AMETHYST_CLUSTER", "field_27161", "AMETHYST_CLUSTER", "f_152492_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LARGE_AMETHYST_BUD
    [[maybe_unused]] static jobject get_field_LARGE_AMETHYST_BUD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qw", "LARGE_AMETHYST_BUD", "field_27162", "LARGE_AMETHYST_BUD", "f_152493_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LARGE_AMETHYST_BUD
    [[maybe_unused]] static void set_field_LARGE_AMETHYST_BUD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qw", "LARGE_AMETHYST_BUD", "field_27162", "LARGE_AMETHYST_BUD", "f_152493_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MEDIUM_AMETHYST_BUD
    [[maybe_unused]] static jobject get_field_MEDIUM_AMETHYST_BUD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qx", "MEDIUM_AMETHYST_BUD", "field_27163", "MEDIUM_AMETHYST_BUD", "f_152494_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MEDIUM_AMETHYST_BUD
    [[maybe_unused]] static void set_field_MEDIUM_AMETHYST_BUD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qx", "MEDIUM_AMETHYST_BUD", "field_27163", "MEDIUM_AMETHYST_BUD", "f_152494_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMALL_AMETHYST_BUD
    [[maybe_unused]] static jobject get_field_SMALL_AMETHYST_BUD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qy", "SMALL_AMETHYST_BUD", "field_27164", "SMALL_AMETHYST_BUD", "f_152495_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMALL_AMETHYST_BUD
    [[maybe_unused]] static void set_field_SMALL_AMETHYST_BUD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qy", "SMALL_AMETHYST_BUD", "field_27164", "SMALL_AMETHYST_BUD", "f_152495_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TUFF
    [[maybe_unused]] static jobject get_field_TUFF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qz", "TUFF", "field_27165", "TUFF", "f_152496_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TUFF
    [[maybe_unused]] static void set_field_TUFF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qz", "TUFF", "field_27165", "TUFF", "f_152496_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TUFF_SLAB
    [[maybe_unused]] static jobject get_field_TUFF_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qA", "TUFF_SLAB", "field_47027", "TUFF_SLAB", "f_303571_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TUFF_SLAB
    [[maybe_unused]] static void set_field_TUFF_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qA", "TUFF_SLAB", "field_47027", "TUFF_SLAB", "f_303571_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TUFF_STAIRS
    [[maybe_unused]] static jobject get_field_TUFF_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qB", "TUFF_STAIRS", "field_47028", "TUFF_STAIRS", "f_303426_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TUFF_STAIRS
    [[maybe_unused]] static void set_field_TUFF_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qB", "TUFF_STAIRS", "field_47028", "TUFF_STAIRS", "f_303426_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TUFF_WALL
    [[maybe_unused]] static jobject get_field_TUFF_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qC", "TUFF_WALL", "field_47029", "TUFF_WALL", "f_302213_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TUFF_WALL
    [[maybe_unused]] static void set_field_TUFF_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qC", "TUFF_WALL", "field_47029", "TUFF_WALL", "f_302213_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_TUFF
    [[maybe_unused]] static jobject get_field_POLISHED_TUFF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qD", "POLISHED_TUFF", "field_47030", "POLISHED_TUFF", "f_303652_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_TUFF
    [[maybe_unused]] static void set_field_POLISHED_TUFF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qD", "POLISHED_TUFF", "field_47030", "POLISHED_TUFF", "f_303652_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_TUFF_SLAB
    [[maybe_unused]] static jobject get_field_POLISHED_TUFF_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qE", "POLISHED_TUFF_SLAB", "field_47031", "POLISHED_TUFF_SLAB", "f_302914_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_TUFF_SLAB
    [[maybe_unused]] static void set_field_POLISHED_TUFF_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qE", "POLISHED_TUFF_SLAB", "field_47031", "POLISHED_TUFF_SLAB", "f_302914_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_TUFF_STAIRS
    [[maybe_unused]] static jobject get_field_POLISHED_TUFF_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qF", "POLISHED_TUFF_STAIRS", "field_47032", "POLISHED_TUFF_STAIRS", "f_302449_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_TUFF_STAIRS
    [[maybe_unused]] static void set_field_POLISHED_TUFF_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qF", "POLISHED_TUFF_STAIRS", "field_47032", "POLISHED_TUFF_STAIRS", "f_302449_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_TUFF_WALL
    [[maybe_unused]] static jobject get_field_POLISHED_TUFF_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qG", "POLISHED_TUFF_WALL", "field_47033", "POLISHED_TUFF_WALL", "f_302818_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_TUFF_WALL
    [[maybe_unused]] static void set_field_POLISHED_TUFF_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qG", "POLISHED_TUFF_WALL", "field_47033", "POLISHED_TUFF_WALL", "f_302818_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHISELED_TUFF
    [[maybe_unused]] static jobject get_field_CHISELED_TUFF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qH", "CHISELED_TUFF", "field_47034", "CHISELED_TUFF", "f_302743_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHISELED_TUFF
    [[maybe_unused]] static void set_field_CHISELED_TUFF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qH", "CHISELED_TUFF", "field_47034", "CHISELED_TUFF", "f_302743_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TUFF_BRICKS
    [[maybe_unused]] static jobject get_field_TUFF_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qI", "TUFF_BRICKS", "field_47035", "TUFF_BRICKS", "f_303547_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TUFF_BRICKS
    [[maybe_unused]] static void set_field_TUFF_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qI", "TUFF_BRICKS", "field_47035", "TUFF_BRICKS", "f_303547_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TUFF_BRICK_SLAB
    [[maybe_unused]] static jobject get_field_TUFF_BRICK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qJ", "TUFF_BRICK_SLAB", "field_47036", "TUFF_BRICK_SLAB", "f_303545_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TUFF_BRICK_SLAB
    [[maybe_unused]] static void set_field_TUFF_BRICK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qJ", "TUFF_BRICK_SLAB", "field_47036", "TUFF_BRICK_SLAB", "f_303545_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TUFF_BRICK_STAIRS
    [[maybe_unused]] static jobject get_field_TUFF_BRICK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qK", "TUFF_BRICK_STAIRS", "field_47037", "TUFF_BRICK_STAIRS", "f_303371_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TUFF_BRICK_STAIRS
    [[maybe_unused]] static void set_field_TUFF_BRICK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qK", "TUFF_BRICK_STAIRS", "field_47037", "TUFF_BRICK_STAIRS", "f_303371_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TUFF_BRICK_WALL
    [[maybe_unused]] static jobject get_field_TUFF_BRICK_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qL", "TUFF_BRICK_WALL", "field_47038", "TUFF_BRICK_WALL", "f_303237_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TUFF_BRICK_WALL
    [[maybe_unused]] static void set_field_TUFF_BRICK_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qL", "TUFF_BRICK_WALL", "field_47038", "TUFF_BRICK_WALL", "f_303237_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHISELED_TUFF_BRICKS
    [[maybe_unused]] static jobject get_field_CHISELED_TUFF_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qM", "CHISELED_TUFF_BRICKS", "field_47039", "CHISELED_TUFF_BRICKS", "f_302382_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHISELED_TUFF_BRICKS
    [[maybe_unused]] static void set_field_CHISELED_TUFF_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qM", "CHISELED_TUFF_BRICKS", "field_47039", "CHISELED_TUFF_BRICKS", "f_302382_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CALCITE
    [[maybe_unused]] static jobject get_field_CALCITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qN", "CALCITE", "field_27114", "CALCITE", "f_152497_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CALCITE
    [[maybe_unused]] static void set_field_CALCITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qN", "CALCITE", "field_27114", "CALCITE", "f_152497_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TINTED_GLASS
    [[maybe_unused]] static jobject get_field_TINTED_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qO", "TINTED_GLASS", "field_27115", "TINTED_GLASS", "f_152498_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TINTED_GLASS
    [[maybe_unused]] static void set_field_TINTED_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qO", "TINTED_GLASS", "field_27115", "TINTED_GLASS", "f_152498_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POWDER_SNOW
    [[maybe_unused]] static jobject get_field_POWDER_SNOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qP", "POWDER_SNOW", "field_27879", "POWDER_SNOW", "f_152499_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POWDER_SNOW
    [[maybe_unused]] static void set_field_POWDER_SNOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qP", "POWDER_SNOW", "field_27879", "POWDER_SNOW", "f_152499_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SCULK_SENSOR
    [[maybe_unused]] static jobject get_field_SCULK_SENSOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qQ", "SCULK_SENSOR", "field_28108", "SCULK_SENSOR", "f_152500_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SCULK_SENSOR
    [[maybe_unused]] static void set_field_SCULK_SENSOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qQ", "SCULK_SENSOR", "field_28108", "SCULK_SENSOR", "f_152500_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CALIBRATED_SCULK_SENSOR
    [[maybe_unused]] static jobject get_field_CALIBRATED_SCULK_SENSOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qR", "CALIBRATED_SCULK_SENSOR", "field_43231", "CALIBRATED_SCULK_SENSOR", "f_276595_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CALIBRATED_SCULK_SENSOR
    [[maybe_unused]] static void set_field_CALIBRATED_SCULK_SENSOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qR", "CALIBRATED_SCULK_SENSOR", "field_43231", "CALIBRATED_SCULK_SENSOR", "f_276595_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SCULK
    [[maybe_unused]] static jobject get_field_SCULK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qS", "SCULK", "field_37568", "SCULK", "f_220855_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SCULK
    [[maybe_unused]] static void set_field_SCULK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qS", "SCULK", "field_37568", "SCULK", "f_220855_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SCULK_VEIN
    [[maybe_unused]] static jobject get_field_SCULK_VEIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qT", "SCULK_VEIN", "field_37569", "SCULK_VEIN", "f_220856_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SCULK_VEIN
    [[maybe_unused]] static void set_field_SCULK_VEIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qT", "SCULK_VEIN", "field_37569", "SCULK_VEIN", "f_220856_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SCULK_CATALYST
    [[maybe_unused]] static jobject get_field_SCULK_CATALYST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qU", "SCULK_CATALYST", "field_37570", "SCULK_CATALYST", "f_220857_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SCULK_CATALYST
    [[maybe_unused]] static void set_field_SCULK_CATALYST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qU", "SCULK_CATALYST", "field_37570", "SCULK_CATALYST", "f_220857_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SCULK_SHRIEKER
    [[maybe_unused]] static jobject get_field_SCULK_SHRIEKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qV", "SCULK_SHRIEKER", "field_37571", "SCULK_SHRIEKER", "f_220858_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SCULK_SHRIEKER
    [[maybe_unused]] static void set_field_SCULK_SHRIEKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qV", "SCULK_SHRIEKER", "field_37571", "SCULK_SHRIEKER", "f_220858_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COPPER_BLOCK
    [[maybe_unused]] static jobject get_field_COPPER_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qW", "COPPER_BLOCK", "field_27119", "COPPER_BLOCK", "f_152504_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COPPER_BLOCK
    [[maybe_unused]] static void set_field_COPPER_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qW", "COPPER_BLOCK", "field_27119", "COPPER_BLOCK", "f_152504_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#EXPOSED_COPPER
    [[maybe_unused]] static jobject get_field_EXPOSED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qX", "EXPOSED_COPPER", "field_27118", "EXPOSED_COPPER", "f_152503_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#EXPOSED_COPPER
    [[maybe_unused]] static void set_field_EXPOSED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qX", "EXPOSED_COPPER", "field_27118", "EXPOSED_COPPER", "f_152503_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WEATHERED_COPPER
    [[maybe_unused]] static jobject get_field_WEATHERED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qY", "WEATHERED_COPPER", "field_27117", "WEATHERED_COPPER", "f_152502_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WEATHERED_COPPER
    [[maybe_unused]] static void set_field_WEATHERED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qY", "WEATHERED_COPPER", "field_27117", "WEATHERED_COPPER", "f_152502_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OXIDIZED_COPPER
    [[maybe_unused]] static jobject get_field_OXIDIZED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qZ", "OXIDIZED_COPPER", "field_27116", "OXIDIZED_COPPER", "f_152501_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OXIDIZED_COPPER
    [[maybe_unused]] static void set_field_OXIDIZED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("qZ", "OXIDIZED_COPPER", "field_27116", "OXIDIZED_COPPER", "f_152501_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COPPER_ORE
    [[maybe_unused]] static jobject get_field_COPPER_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ra", "COPPER_ORE", "field_27120", "COPPER_ORE", "f_152505_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COPPER_ORE
    [[maybe_unused]] static void set_field_COPPER_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ra", "COPPER_ORE", "field_27120", "COPPER_ORE", "f_152505_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_COPPER_ORE
    [[maybe_unused]] static jobject get_field_DEEPSLATE_COPPER_ORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rb", "DEEPSLATE_COPPER_ORE", "field_29221", "DEEPSLATE_COPPER_ORE", "f_152506_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_COPPER_ORE
    [[maybe_unused]] static void set_field_DEEPSLATE_COPPER_ORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rb", "DEEPSLATE_COPPER_ORE", "field_29221", "DEEPSLATE_COPPER_ORE", "f_152506_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OXIDIZED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_OXIDIZED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rc", "OXIDIZED_CUT_COPPER", "field_27121", "OXIDIZED_CUT_COPPER", "f_152507_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OXIDIZED_CUT_COPPER
    [[maybe_unused]] static void set_field_OXIDIZED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rc", "OXIDIZED_CUT_COPPER", "field_27121", "OXIDIZED_CUT_COPPER", "f_152507_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WEATHERED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_WEATHERED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rd", "WEATHERED_CUT_COPPER", "field_27122", "WEATHERED_CUT_COPPER", "f_152508_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WEATHERED_CUT_COPPER
    [[maybe_unused]] static void set_field_WEATHERED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rd", "WEATHERED_CUT_COPPER", "field_27122", "WEATHERED_CUT_COPPER", "f_152508_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#EXPOSED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_EXPOSED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("re", "EXPOSED_CUT_COPPER", "field_27123", "EXPOSED_CUT_COPPER", "f_152509_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#EXPOSED_CUT_COPPER
    [[maybe_unused]] static void set_field_EXPOSED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("re", "EXPOSED_CUT_COPPER", "field_27123", "EXPOSED_CUT_COPPER", "f_152509_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CUT_COPPER
    [[maybe_unused]] static jobject get_field_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rf", "CUT_COPPER", "field_27124", "CUT_COPPER", "f_152510_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CUT_COPPER
    [[maybe_unused]] static void set_field_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rf", "CUT_COPPER", "field_27124", "CUT_COPPER", "f_152510_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OXIDIZED_CHISELED_COPPER
    [[maybe_unused]] static jobject get_field_OXIDIZED_CHISELED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rg", "OXIDIZED_CHISELED_COPPER", "field_47054", "OXIDIZED_CHISELED_COPPER", "f_303811_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OXIDIZED_CHISELED_COPPER
    [[maybe_unused]] static void set_field_OXIDIZED_CHISELED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rg", "OXIDIZED_CHISELED_COPPER", "field_47054", "OXIDIZED_CHISELED_COPPER", "f_303811_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WEATHERED_CHISELED_COPPER
    [[maybe_unused]] static jobject get_field_WEATHERED_CHISELED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rh", "WEATHERED_CHISELED_COPPER", "field_47055", "WEATHERED_CHISELED_COPPER", "f_302507_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WEATHERED_CHISELED_COPPER
    [[maybe_unused]] static void set_field_WEATHERED_CHISELED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rh", "WEATHERED_CHISELED_COPPER", "field_47055", "WEATHERED_CHISELED_COPPER", "f_302507_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#EXPOSED_CHISELED_COPPER
    [[maybe_unused]] static jobject get_field_EXPOSED_CHISELED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ri", "EXPOSED_CHISELED_COPPER", "field_47056", "EXPOSED_CHISELED_COPPER", "f_303448_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#EXPOSED_CHISELED_COPPER
    [[maybe_unused]] static void set_field_EXPOSED_CHISELED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ri", "EXPOSED_CHISELED_COPPER", "field_47056", "EXPOSED_CHISELED_COPPER", "f_303448_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHISELED_COPPER
    [[maybe_unused]] static jobject get_field_CHISELED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rj", "CHISELED_COPPER", "field_47057", "CHISELED_COPPER", "f_302689_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHISELED_COPPER
    [[maybe_unused]] static void set_field_CHISELED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rj", "CHISELED_COPPER", "field_47057", "CHISELED_COPPER", "f_302689_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_CHISELED_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_OXIDIZED_CHISELED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rk", "WAXED_OXIDIZED_CHISELED_COPPER", "field_47058", "WAXED_OXIDIZED_CHISELED_COPPER", "f_303118_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_CHISELED_COPPER
    [[maybe_unused]] static void set_field_WAXED_OXIDIZED_CHISELED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rk", "WAXED_OXIDIZED_CHISELED_COPPER", "field_47058", "WAXED_OXIDIZED_CHISELED_COPPER", "f_303118_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_CHISELED_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_WEATHERED_CHISELED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rl", "WAXED_WEATHERED_CHISELED_COPPER", "field_47059", "WAXED_WEATHERED_CHISELED_COPPER", "f_302612_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_CHISELED_COPPER
    [[maybe_unused]] static void set_field_WAXED_WEATHERED_CHISELED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rl", "WAXED_WEATHERED_CHISELED_COPPER", "field_47059", "WAXED_WEATHERED_CHISELED_COPPER", "f_302612_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_CHISELED_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_EXPOSED_CHISELED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rm", "WAXED_EXPOSED_CHISELED_COPPER", "field_47060", "WAXED_EXPOSED_CHISELED_COPPER", "f_302554_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_CHISELED_COPPER
    [[maybe_unused]] static void set_field_WAXED_EXPOSED_CHISELED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rm", "WAXED_EXPOSED_CHISELED_COPPER", "field_47060", "WAXED_EXPOSED_CHISELED_COPPER", "f_302554_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_CHISELED_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_CHISELED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rn", "WAXED_CHISELED_COPPER", "field_47061", "WAXED_CHISELED_COPPER", "f_303363_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_CHISELED_COPPER
    [[maybe_unused]] static void set_field_WAXED_CHISELED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rn", "WAXED_CHISELED_COPPER", "field_47061", "WAXED_CHISELED_COPPER", "f_303363_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OXIDIZED_CUT_COPPER_STAIRS
    [[maybe_unused]] static jobject get_field_OXIDIZED_CUT_COPPER_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ro", "OXIDIZED_CUT_COPPER_STAIRS", "field_27125", "OXIDIZED_CUT_COPPER_STAIRS", "f_152563_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OXIDIZED_CUT_COPPER_STAIRS
    [[maybe_unused]] static void set_field_OXIDIZED_CUT_COPPER_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ro", "OXIDIZED_CUT_COPPER_STAIRS", "field_27125", "OXIDIZED_CUT_COPPER_STAIRS", "f_152563_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WEATHERED_CUT_COPPER_STAIRS
    [[maybe_unused]] static jobject get_field_WEATHERED_CUT_COPPER_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rp", "WEATHERED_CUT_COPPER_STAIRS", "field_27126", "WEATHERED_CUT_COPPER_STAIRS", "f_152564_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WEATHERED_CUT_COPPER_STAIRS
    [[maybe_unused]] static void set_field_WEATHERED_CUT_COPPER_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rp", "WEATHERED_CUT_COPPER_STAIRS", "field_27126", "WEATHERED_CUT_COPPER_STAIRS", "f_152564_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#EXPOSED_CUT_COPPER_STAIRS
    [[maybe_unused]] static jobject get_field_EXPOSED_CUT_COPPER_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rq", "EXPOSED_CUT_COPPER_STAIRS", "field_27127", "EXPOSED_CUT_COPPER_STAIRS", "f_152565_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#EXPOSED_CUT_COPPER_STAIRS
    [[maybe_unused]] static void set_field_EXPOSED_CUT_COPPER_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rq", "EXPOSED_CUT_COPPER_STAIRS", "field_27127", "EXPOSED_CUT_COPPER_STAIRS", "f_152565_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CUT_COPPER_STAIRS
    [[maybe_unused]] static jobject get_field_CUT_COPPER_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rr", "CUT_COPPER_STAIRS", "field_27128", "CUT_COPPER_STAIRS", "f_152566_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CUT_COPPER_STAIRS
    [[maybe_unused]] static void set_field_CUT_COPPER_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rr", "CUT_COPPER_STAIRS", "field_27128", "CUT_COPPER_STAIRS", "f_152566_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OXIDIZED_CUT_COPPER_SLAB
    [[maybe_unused]] static jobject get_field_OXIDIZED_CUT_COPPER_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rs", "OXIDIZED_CUT_COPPER_SLAB", "field_27129", "OXIDIZED_CUT_COPPER_SLAB", "f_152567_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OXIDIZED_CUT_COPPER_SLAB
    [[maybe_unused]] static void set_field_OXIDIZED_CUT_COPPER_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rs", "OXIDIZED_CUT_COPPER_SLAB", "field_27129", "OXIDIZED_CUT_COPPER_SLAB", "f_152567_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WEATHERED_CUT_COPPER_SLAB
    [[maybe_unused]] static jobject get_field_WEATHERED_CUT_COPPER_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rt", "WEATHERED_CUT_COPPER_SLAB", "field_27130", "WEATHERED_CUT_COPPER_SLAB", "f_152568_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WEATHERED_CUT_COPPER_SLAB
    [[maybe_unused]] static void set_field_WEATHERED_CUT_COPPER_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rt", "WEATHERED_CUT_COPPER_SLAB", "field_27130", "WEATHERED_CUT_COPPER_SLAB", "f_152568_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#EXPOSED_CUT_COPPER_SLAB
    [[maybe_unused]] static jobject get_field_EXPOSED_CUT_COPPER_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ru", "EXPOSED_CUT_COPPER_SLAB", "field_27131", "EXPOSED_CUT_COPPER_SLAB", "f_152569_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#EXPOSED_CUT_COPPER_SLAB
    [[maybe_unused]] static void set_field_EXPOSED_CUT_COPPER_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ru", "EXPOSED_CUT_COPPER_SLAB", "field_27131", "EXPOSED_CUT_COPPER_SLAB", "f_152569_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CUT_COPPER_SLAB
    [[maybe_unused]] static jobject get_field_CUT_COPPER_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rv", "CUT_COPPER_SLAB", "field_27132", "CUT_COPPER_SLAB", "f_152570_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CUT_COPPER_SLAB
    [[maybe_unused]] static void set_field_CUT_COPPER_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rv", "CUT_COPPER_SLAB", "field_27132", "CUT_COPPER_SLAB", "f_152570_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_COPPER_BLOCK
    [[maybe_unused]] static jobject get_field_WAXED_COPPER_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rw", "WAXED_COPPER_BLOCK", "field_27133", "WAXED_COPPER_BLOCK", "f_152571_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_COPPER_BLOCK
    [[maybe_unused]] static void set_field_WAXED_COPPER_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rw", "WAXED_COPPER_BLOCK", "field_27133", "WAXED_COPPER_BLOCK", "f_152571_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_WEATHERED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rx", "WAXED_WEATHERED_COPPER", "field_27134", "WAXED_WEATHERED_COPPER", "f_152572_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_COPPER
    [[maybe_unused]] static void set_field_WAXED_WEATHERED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rx", "WAXED_WEATHERED_COPPER", "field_27134", "WAXED_WEATHERED_COPPER", "f_152572_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_EXPOSED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ry", "WAXED_EXPOSED_COPPER", "field_27135", "WAXED_EXPOSED_COPPER", "f_152573_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_COPPER
    [[maybe_unused]] static void set_field_WAXED_EXPOSED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ry", "WAXED_EXPOSED_COPPER", "field_27135", "WAXED_EXPOSED_COPPER", "f_152573_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_OXIDIZED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rz", "WAXED_OXIDIZED_COPPER", "field_33407", "WAXED_OXIDIZED_COPPER", "f_152574_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_COPPER
    [[maybe_unused]] static void set_field_WAXED_OXIDIZED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rz", "WAXED_OXIDIZED_COPPER", "field_33407", "WAXED_OXIDIZED_COPPER", "f_152574_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_OXIDIZED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rA", "WAXED_OXIDIZED_CUT_COPPER", "field_33408", "WAXED_OXIDIZED_CUT_COPPER", "f_152575_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_CUT_COPPER
    [[maybe_unused]] static void set_field_WAXED_OXIDIZED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rA", "WAXED_OXIDIZED_CUT_COPPER", "field_33408", "WAXED_OXIDIZED_CUT_COPPER", "f_152575_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_WEATHERED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rB", "WAXED_WEATHERED_CUT_COPPER", "field_27136", "WAXED_WEATHERED_CUT_COPPER", "f_152576_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_CUT_COPPER
    [[maybe_unused]] static void set_field_WAXED_WEATHERED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rB", "WAXED_WEATHERED_CUT_COPPER", "field_27136", "WAXED_WEATHERED_CUT_COPPER", "f_152576_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_EXPOSED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rC", "WAXED_EXPOSED_CUT_COPPER", "field_27137", "WAXED_EXPOSED_CUT_COPPER", "f_152577_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_CUT_COPPER
    [[maybe_unused]] static void set_field_WAXED_EXPOSED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rC", "WAXED_EXPOSED_CUT_COPPER", "field_27137", "WAXED_EXPOSED_CUT_COPPER", "f_152577_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rD", "WAXED_CUT_COPPER", "field_27138", "WAXED_CUT_COPPER", "f_152578_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_CUT_COPPER
    [[maybe_unused]] static void set_field_WAXED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rD", "WAXED_CUT_COPPER", "field_27138", "WAXED_CUT_COPPER", "f_152578_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_CUT_COPPER_STAIRS
    [[maybe_unused]] static jobject get_field_WAXED_OXIDIZED_CUT_COPPER_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rE", "WAXED_OXIDIZED_CUT_COPPER_STAIRS", "field_33409", "WAXED_OXIDIZED_CUT_COPPER_STAIRS", "f_152579_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_CUT_COPPER_STAIRS
    [[maybe_unused]] static void set_field_WAXED_OXIDIZED_CUT_COPPER_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rE", "WAXED_OXIDIZED_CUT_COPPER_STAIRS", "field_33409", "WAXED_OXIDIZED_CUT_COPPER_STAIRS", "f_152579_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_CUT_COPPER_STAIRS
    [[maybe_unused]] static jobject get_field_WAXED_WEATHERED_CUT_COPPER_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rF", "WAXED_WEATHERED_CUT_COPPER_STAIRS", "field_27139", "WAXED_WEATHERED_CUT_COPPER_STAIRS", "f_152580_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_CUT_COPPER_STAIRS
    [[maybe_unused]] static void set_field_WAXED_WEATHERED_CUT_COPPER_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rF", "WAXED_WEATHERED_CUT_COPPER_STAIRS", "field_27139", "WAXED_WEATHERED_CUT_COPPER_STAIRS", "f_152580_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_CUT_COPPER_STAIRS
    [[maybe_unused]] static jobject get_field_WAXED_EXPOSED_CUT_COPPER_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rG", "WAXED_EXPOSED_CUT_COPPER_STAIRS", "field_27166", "WAXED_EXPOSED_CUT_COPPER_STAIRS", "f_152581_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_CUT_COPPER_STAIRS
    [[maybe_unused]] static void set_field_WAXED_EXPOSED_CUT_COPPER_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rG", "WAXED_EXPOSED_CUT_COPPER_STAIRS", "field_27166", "WAXED_EXPOSED_CUT_COPPER_STAIRS", "f_152581_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_CUT_COPPER_STAIRS
    [[maybe_unused]] static jobject get_field_WAXED_CUT_COPPER_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rH", "WAXED_CUT_COPPER_STAIRS", "field_27167", "WAXED_CUT_COPPER_STAIRS", "f_152582_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_CUT_COPPER_STAIRS
    [[maybe_unused]] static void set_field_WAXED_CUT_COPPER_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rH", "WAXED_CUT_COPPER_STAIRS", "field_27167", "WAXED_CUT_COPPER_STAIRS", "f_152582_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_CUT_COPPER_SLAB
    [[maybe_unused]] static jobject get_field_WAXED_OXIDIZED_CUT_COPPER_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rI", "WAXED_OXIDIZED_CUT_COPPER_SLAB", "field_33410", "WAXED_OXIDIZED_CUT_COPPER_SLAB", "f_152583_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_CUT_COPPER_SLAB
    [[maybe_unused]] static void set_field_WAXED_OXIDIZED_CUT_COPPER_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rI", "WAXED_OXIDIZED_CUT_COPPER_SLAB", "field_33410", "WAXED_OXIDIZED_CUT_COPPER_SLAB", "f_152583_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_CUT_COPPER_SLAB
    [[maybe_unused]] static jobject get_field_WAXED_WEATHERED_CUT_COPPER_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rJ", "WAXED_WEATHERED_CUT_COPPER_SLAB", "field_27168", "WAXED_WEATHERED_CUT_COPPER_SLAB", "f_152584_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_CUT_COPPER_SLAB
    [[maybe_unused]] static void set_field_WAXED_WEATHERED_CUT_COPPER_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rJ", "WAXED_WEATHERED_CUT_COPPER_SLAB", "field_27168", "WAXED_WEATHERED_CUT_COPPER_SLAB", "f_152584_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_CUT_COPPER_SLAB
    [[maybe_unused]] static jobject get_field_WAXED_EXPOSED_CUT_COPPER_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rK", "WAXED_EXPOSED_CUT_COPPER_SLAB", "field_27169", "WAXED_EXPOSED_CUT_COPPER_SLAB", "f_152585_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_CUT_COPPER_SLAB
    [[maybe_unused]] static void set_field_WAXED_EXPOSED_CUT_COPPER_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rK", "WAXED_EXPOSED_CUT_COPPER_SLAB", "field_27169", "WAXED_EXPOSED_CUT_COPPER_SLAB", "f_152585_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_CUT_COPPER_SLAB
    [[maybe_unused]] static jobject get_field_WAXED_CUT_COPPER_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rL", "WAXED_CUT_COPPER_SLAB", "field_27170", "WAXED_CUT_COPPER_SLAB", "f_152586_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_CUT_COPPER_SLAB
    [[maybe_unused]] static void set_field_WAXED_CUT_COPPER_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rL", "WAXED_CUT_COPPER_SLAB", "field_27170", "WAXED_CUT_COPPER_SLAB", "f_152586_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COPPER_DOOR
    [[maybe_unused]] static jobject get_field_COPPER_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rM", "COPPER_DOOR", "field_47040", "COPPER_DOOR", "f_302565_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COPPER_DOOR
    [[maybe_unused]] static void set_field_COPPER_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rM", "COPPER_DOOR", "field_47040", "COPPER_DOOR", "f_302565_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#EXPOSED_COPPER_DOOR
    [[maybe_unused]] static jobject get_field_EXPOSED_COPPER_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rN", "EXPOSED_COPPER_DOOR", "field_47041", "EXPOSED_COPPER_DOOR", "f_303201_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#EXPOSED_COPPER_DOOR
    [[maybe_unused]] static void set_field_EXPOSED_COPPER_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rN", "EXPOSED_COPPER_DOOR", "field_47041", "EXPOSED_COPPER_DOOR", "f_303201_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OXIDIZED_COPPER_DOOR
    [[maybe_unused]] static jobject get_field_OXIDIZED_COPPER_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rO", "OXIDIZED_COPPER_DOOR", "field_47042", "OXIDIZED_COPPER_DOOR", "f_303016_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OXIDIZED_COPPER_DOOR
    [[maybe_unused]] static void set_field_OXIDIZED_COPPER_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rO", "OXIDIZED_COPPER_DOOR", "field_47042", "OXIDIZED_COPPER_DOOR", "f_303016_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WEATHERED_COPPER_DOOR
    [[maybe_unused]] static jobject get_field_WEATHERED_COPPER_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rP", "WEATHERED_COPPER_DOOR", "field_47043", "WEATHERED_COPPER_DOOR", "f_303010_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WEATHERED_COPPER_DOOR
    [[maybe_unused]] static void set_field_WEATHERED_COPPER_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rP", "WEATHERED_COPPER_DOOR", "field_47043", "WEATHERED_COPPER_DOOR", "f_303010_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_COPPER_DOOR
    [[maybe_unused]] static jobject get_field_WAXED_COPPER_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rQ", "WAXED_COPPER_DOOR", "field_47044", "WAXED_COPPER_DOOR", "f_302634_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_COPPER_DOOR
    [[maybe_unused]] static void set_field_WAXED_COPPER_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rQ", "WAXED_COPPER_DOOR", "field_47044", "WAXED_COPPER_DOOR", "f_302634_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_COPPER_DOOR
    [[maybe_unused]] static jobject get_field_WAXED_EXPOSED_COPPER_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rR", "WAXED_EXPOSED_COPPER_DOOR", "field_47045", "WAXED_EXPOSED_COPPER_DOOR", "f_303222_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_COPPER_DOOR
    [[maybe_unused]] static void set_field_WAXED_EXPOSED_COPPER_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rR", "WAXED_EXPOSED_COPPER_DOOR", "field_47045", "WAXED_EXPOSED_COPPER_DOOR", "f_303222_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_COPPER_DOOR
    [[maybe_unused]] static jobject get_field_WAXED_OXIDIZED_COPPER_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rS", "WAXED_OXIDIZED_COPPER_DOOR", "field_47046", "WAXED_OXIDIZED_COPPER_DOOR", "f_303692_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_COPPER_DOOR
    [[maybe_unused]] static void set_field_WAXED_OXIDIZED_COPPER_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rS", "WAXED_OXIDIZED_COPPER_DOOR", "field_47046", "WAXED_OXIDIZED_COPPER_DOOR", "f_303692_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_COPPER_DOOR
    [[maybe_unused]] static jobject get_field_WAXED_WEATHERED_COPPER_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rT", "WAXED_WEATHERED_COPPER_DOOR", "field_47047", "WAXED_WEATHERED_COPPER_DOOR", "f_302853_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_COPPER_DOOR
    [[maybe_unused]] static void set_field_WAXED_WEATHERED_COPPER_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rT", "WAXED_WEATHERED_COPPER_DOOR", "field_47047", "WAXED_WEATHERED_COPPER_DOOR", "f_302853_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COPPER_TRAPDOOR
    [[maybe_unused]] static jobject get_field_COPPER_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rU", "COPPER_TRAPDOOR", "field_47048", "COPPER_TRAPDOOR", "f_303635_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COPPER_TRAPDOOR
    [[maybe_unused]] static void set_field_COPPER_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rU", "COPPER_TRAPDOOR", "field_47048", "COPPER_TRAPDOOR", "f_303635_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#EXPOSED_COPPER_TRAPDOOR
    [[maybe_unused]] static jobject get_field_EXPOSED_COPPER_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rV", "EXPOSED_COPPER_TRAPDOOR", "field_47049", "EXPOSED_COPPER_TRAPDOOR", "f_303609_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#EXPOSED_COPPER_TRAPDOOR
    [[maybe_unused]] static void set_field_EXPOSED_COPPER_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rV", "EXPOSED_COPPER_TRAPDOOR", "field_47049", "EXPOSED_COPPER_TRAPDOOR", "f_303609_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OXIDIZED_COPPER_TRAPDOOR
    [[maybe_unused]] static jobject get_field_OXIDIZED_COPPER_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rW", "OXIDIZED_COPPER_TRAPDOOR", "field_47050", "OXIDIZED_COPPER_TRAPDOOR", "f_302247_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OXIDIZED_COPPER_TRAPDOOR
    [[maybe_unused]] static void set_field_OXIDIZED_COPPER_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rW", "OXIDIZED_COPPER_TRAPDOOR", "field_47050", "OXIDIZED_COPPER_TRAPDOOR", "f_302247_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WEATHERED_COPPER_TRAPDOOR
    [[maybe_unused]] static jobject get_field_WEATHERED_COPPER_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rX", "WEATHERED_COPPER_TRAPDOOR", "field_47051", "WEATHERED_COPPER_TRAPDOOR", "f_302627_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WEATHERED_COPPER_TRAPDOOR
    [[maybe_unused]] static void set_field_WEATHERED_COPPER_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rX", "WEATHERED_COPPER_TRAPDOOR", "field_47051", "WEATHERED_COPPER_TRAPDOOR", "f_302627_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_COPPER_TRAPDOOR
    [[maybe_unused]] static jobject get_field_WAXED_COPPER_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rY", "WAXED_COPPER_TRAPDOOR", "field_47052", "WAXED_COPPER_TRAPDOOR", "f_302395_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_COPPER_TRAPDOOR
    [[maybe_unused]] static void set_field_WAXED_COPPER_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rY", "WAXED_COPPER_TRAPDOOR", "field_47052", "WAXED_COPPER_TRAPDOOR", "f_302395_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_COPPER_TRAPDOOR
    [[maybe_unused]] static jobject get_field_WAXED_EXPOSED_COPPER_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rZ", "WAXED_EXPOSED_COPPER_TRAPDOOR", "field_47053", "WAXED_EXPOSED_COPPER_TRAPDOOR", "f_302272_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_COPPER_TRAPDOOR
    [[maybe_unused]] static void set_field_WAXED_EXPOSED_COPPER_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("rZ", "WAXED_EXPOSED_COPPER_TRAPDOOR", "field_47053", "WAXED_EXPOSED_COPPER_TRAPDOOR", "f_302272_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_COPPER_TRAPDOOR
    [[maybe_unused]] static jobject get_field_WAXED_OXIDIZED_COPPER_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sa", "WAXED_OXIDIZED_COPPER_TRAPDOOR", "field_47062", "WAXED_OXIDIZED_COPPER_TRAPDOOR", "f_303101_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_COPPER_TRAPDOOR
    [[maybe_unused]] static void set_field_WAXED_OXIDIZED_COPPER_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sa", "WAXED_OXIDIZED_COPPER_TRAPDOOR", "field_47062", "WAXED_OXIDIZED_COPPER_TRAPDOOR", "f_303101_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_COPPER_TRAPDOOR
    [[maybe_unused]] static jobject get_field_WAXED_WEATHERED_COPPER_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sb", "WAXED_WEATHERED_COPPER_TRAPDOOR", "field_47063", "WAXED_WEATHERED_COPPER_TRAPDOOR", "f_303663_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_COPPER_TRAPDOOR
    [[maybe_unused]] static void set_field_WAXED_WEATHERED_COPPER_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sb", "WAXED_WEATHERED_COPPER_TRAPDOOR", "field_47063", "WAXED_WEATHERED_COPPER_TRAPDOOR", "f_303663_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COPPER_GRATE
    [[maybe_unused]] static jobject get_field_COPPER_GRATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sc", "COPPER_GRATE", "field_47064", "COPPER_GRATE", "f_303215_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COPPER_GRATE
    [[maybe_unused]] static void set_field_COPPER_GRATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sc", "COPPER_GRATE", "field_47064", "COPPER_GRATE", "f_303215_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#EXPOSED_COPPER_GRATE
    [[maybe_unused]] static jobject get_field_EXPOSED_COPPER_GRATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sd", "EXPOSED_COPPER_GRATE", "field_47065", "EXPOSED_COPPER_GRATE", "f_302995_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#EXPOSED_COPPER_GRATE
    [[maybe_unused]] static void set_field_EXPOSED_COPPER_GRATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sd", "EXPOSED_COPPER_GRATE", "field_47065", "EXPOSED_COPPER_GRATE", "f_302995_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WEATHERED_COPPER_GRATE
    [[maybe_unused]] static jobject get_field_WEATHERED_COPPER_GRATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("se", "WEATHERED_COPPER_GRATE", "field_47066", "WEATHERED_COPPER_GRATE", "f_303236_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WEATHERED_COPPER_GRATE
    [[maybe_unused]] static void set_field_WEATHERED_COPPER_GRATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("se", "WEATHERED_COPPER_GRATE", "field_47066", "WEATHERED_COPPER_GRATE", "f_303236_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OXIDIZED_COPPER_GRATE
    [[maybe_unused]] static jobject get_field_OXIDIZED_COPPER_GRATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sf", "OXIDIZED_COPPER_GRATE", "field_47067", "OXIDIZED_COPPER_GRATE", "f_303549_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OXIDIZED_COPPER_GRATE
    [[maybe_unused]] static void set_field_OXIDIZED_COPPER_GRATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sf", "OXIDIZED_COPPER_GRATE", "field_47067", "OXIDIZED_COPPER_GRATE", "f_303549_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_COPPER_GRATE
    [[maybe_unused]] static jobject get_field_WAXED_COPPER_GRATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sg", "WAXED_COPPER_GRATE", "field_47068", "WAXED_COPPER_GRATE", "f_303013_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_COPPER_GRATE
    [[maybe_unused]] static void set_field_WAXED_COPPER_GRATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sg", "WAXED_COPPER_GRATE", "field_47068", "WAXED_COPPER_GRATE", "f_303013_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_COPPER_GRATE
    [[maybe_unused]] static jobject get_field_WAXED_EXPOSED_COPPER_GRATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sh", "WAXED_EXPOSED_COPPER_GRATE", "field_47069", "WAXED_EXPOSED_COPPER_GRATE", "f_303410_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_COPPER_GRATE
    [[maybe_unused]] static void set_field_WAXED_EXPOSED_COPPER_GRATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sh", "WAXED_EXPOSED_COPPER_GRATE", "field_47069", "WAXED_EXPOSED_COPPER_GRATE", "f_303410_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_COPPER_GRATE
    [[maybe_unused]] static jobject get_field_WAXED_WEATHERED_COPPER_GRATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("si", "WAXED_WEATHERED_COPPER_GRATE", "field_47070", "WAXED_WEATHERED_COPPER_GRATE", "f_302872_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_COPPER_GRATE
    [[maybe_unused]] static void set_field_WAXED_WEATHERED_COPPER_GRATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("si", "WAXED_WEATHERED_COPPER_GRATE", "field_47070", "WAXED_WEATHERED_COPPER_GRATE", "f_302872_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_COPPER_GRATE
    [[maybe_unused]] static jobject get_field_WAXED_OXIDIZED_COPPER_GRATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sj", "WAXED_OXIDIZED_COPPER_GRATE", "field_47071", "WAXED_OXIDIZED_COPPER_GRATE", "f_303373_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_COPPER_GRATE
    [[maybe_unused]] static void set_field_WAXED_OXIDIZED_COPPER_GRATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sj", "WAXED_OXIDIZED_COPPER_GRATE", "field_47071", "WAXED_OXIDIZED_COPPER_GRATE", "f_303373_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COPPER_BULB
    [[maybe_unused]] static jobject get_field_COPPER_BULB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sk", "COPPER_BULB", "field_47072", "COPPER_BULB", "f_302358_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COPPER_BULB
    [[maybe_unused]] static void set_field_COPPER_BULB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sk", "COPPER_BULB", "field_47072", "COPPER_BULB", "f_302358_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#EXPOSED_COPPER_BULB
    [[maybe_unused]] static jobject get_field_EXPOSED_COPPER_BULB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sl", "EXPOSED_COPPER_BULB", "field_47073", "EXPOSED_COPPER_BULB", "f_303271_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#EXPOSED_COPPER_BULB
    [[maybe_unused]] static void set_field_EXPOSED_COPPER_BULB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sl", "EXPOSED_COPPER_BULB", "field_47073", "EXPOSED_COPPER_BULB", "f_303271_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WEATHERED_COPPER_BULB
    [[maybe_unused]] static jobject get_field_WEATHERED_COPPER_BULB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sm", "WEATHERED_COPPER_BULB", "field_47074", "WEATHERED_COPPER_BULB", "f_303674_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WEATHERED_COPPER_BULB
    [[maybe_unused]] static void set_field_WEATHERED_COPPER_BULB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sm", "WEATHERED_COPPER_BULB", "field_47074", "WEATHERED_COPPER_BULB", "f_303674_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OXIDIZED_COPPER_BULB
    [[maybe_unused]] static jobject get_field_OXIDIZED_COPPER_BULB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sn", "OXIDIZED_COPPER_BULB", "field_47075", "OXIDIZED_COPPER_BULB", "f_302668_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OXIDIZED_COPPER_BULB
    [[maybe_unused]] static void set_field_OXIDIZED_COPPER_BULB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sn", "OXIDIZED_COPPER_BULB", "field_47075", "OXIDIZED_COPPER_BULB", "f_302668_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_COPPER_BULB
    [[maybe_unused]] static jobject get_field_WAXED_COPPER_BULB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("so", "WAXED_COPPER_BULB", "field_47076", "WAXED_COPPER_BULB", "f_302439_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_COPPER_BULB
    [[maybe_unused]] static void set_field_WAXED_COPPER_BULB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("so", "WAXED_COPPER_BULB", "field_47076", "WAXED_COPPER_BULB", "f_302439_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_COPPER_BULB
    [[maybe_unused]] static jobject get_field_WAXED_EXPOSED_COPPER_BULB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sp", "WAXED_EXPOSED_COPPER_BULB", "field_47077", "WAXED_EXPOSED_COPPER_BULB", "f_303797_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_EXPOSED_COPPER_BULB
    [[maybe_unused]] static void set_field_WAXED_EXPOSED_COPPER_BULB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sp", "WAXED_EXPOSED_COPPER_BULB", "field_47077", "WAXED_EXPOSED_COPPER_BULB", "f_303797_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_COPPER_BULB
    [[maybe_unused]] static jobject get_field_WAXED_WEATHERED_COPPER_BULB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sq", "WAXED_WEATHERED_COPPER_BULB", "field_47078", "WAXED_WEATHERED_COPPER_BULB", "f_302556_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_WEATHERED_COPPER_BULB
    [[maybe_unused]] static void set_field_WAXED_WEATHERED_COPPER_BULB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sq", "WAXED_WEATHERED_COPPER_BULB", "field_47078", "WAXED_WEATHERED_COPPER_BULB", "f_302556_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_COPPER_BULB
    [[maybe_unused]] static jobject get_field_WAXED_OXIDIZED_COPPER_BULB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sr", "WAXED_OXIDIZED_COPPER_BULB", "field_47079", "WAXED_OXIDIZED_COPPER_BULB", "f_302347_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#WAXED_OXIDIZED_COPPER_BULB
    [[maybe_unused]] static void set_field_WAXED_OXIDIZED_COPPER_BULB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sr", "WAXED_OXIDIZED_COPPER_BULB", "field_47079", "WAXED_OXIDIZED_COPPER_BULB", "f_302347_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#LIGHTNING_ROD
    [[maybe_unused]] static jobject get_field_LIGHTNING_ROD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ss", "LIGHTNING_ROD", "field_27171", "LIGHTNING_ROD", "f_152587_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#LIGHTNING_ROD
    [[maybe_unused]] static void set_field_LIGHTNING_ROD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ss", "LIGHTNING_ROD", "field_27171", "LIGHTNING_ROD", "f_152587_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POINTED_DRIPSTONE
    [[maybe_unused]] static jobject get_field_POINTED_DRIPSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("st", "POINTED_DRIPSTONE", "field_28048", "POINTED_DRIPSTONE", "f_152588_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POINTED_DRIPSTONE
    [[maybe_unused]] static void set_field_POINTED_DRIPSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("st", "POINTED_DRIPSTONE", "field_28048", "POINTED_DRIPSTONE", "f_152588_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DRIPSTONE_BLOCK
    [[maybe_unused]] static jobject get_field_DRIPSTONE_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("su", "DRIPSTONE_BLOCK", "field_28049", "DRIPSTONE_BLOCK", "f_152537_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DRIPSTONE_BLOCK
    [[maybe_unused]] static void set_field_DRIPSTONE_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("su", "DRIPSTONE_BLOCK", "field_28049", "DRIPSTONE_BLOCK", "f_152537_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CAVE_VINES
    [[maybe_unused]] static jobject get_field_CAVE_VINES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sv", "CAVE_VINES", "field_28675", "CAVE_VINES", "f_152538_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CAVE_VINES
    [[maybe_unused]] static void set_field_CAVE_VINES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sv", "CAVE_VINES", "field_28675", "CAVE_VINES", "f_152538_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CAVE_VINES_PLANT
    [[maybe_unused]] static jobject get_field_CAVE_VINES_PLANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sw", "CAVE_VINES_PLANT", "field_28676", "CAVE_VINES_PLANT", "f_152539_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CAVE_VINES_PLANT
    [[maybe_unused]] static void set_field_CAVE_VINES_PLANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sw", "CAVE_VINES_PLANT", "field_28676", "CAVE_VINES_PLANT", "f_152539_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SPORE_BLOSSOM
    [[maybe_unused]] static jobject get_field_SPORE_BLOSSOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sx", "SPORE_BLOSSOM", "field_28677", "SPORE_BLOSSOM", "f_152540_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SPORE_BLOSSOM
    [[maybe_unused]] static void set_field_SPORE_BLOSSOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sx", "SPORE_BLOSSOM", "field_28677", "SPORE_BLOSSOM", "f_152540_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#AZALEA
    [[maybe_unused]] static jobject get_field_AZALEA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sy", "AZALEA", "field_28678", "AZALEA", "f_152541_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#AZALEA
    [[maybe_unused]] static void set_field_AZALEA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sy", "AZALEA", "field_28678", "AZALEA", "f_152541_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FLOWERING_AZALEA
    [[maybe_unused]] static jobject get_field_FLOWERING_AZALEA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sz", "FLOWERING_AZALEA", "field_28679", "FLOWERING_AZALEA", "f_152542_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FLOWERING_AZALEA
    [[maybe_unused]] static void set_field_FLOWERING_AZALEA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sz", "FLOWERING_AZALEA", "field_28679", "FLOWERING_AZALEA", "f_152542_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MOSS_CARPET
    [[maybe_unused]] static jobject get_field_MOSS_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sA", "MOSS_CARPET", "field_28680", "MOSS_CARPET", "f_152543_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MOSS_CARPET
    [[maybe_unused]] static void set_field_MOSS_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sA", "MOSS_CARPET", "field_28680", "MOSS_CARPET", "f_152543_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PINK_PETALS
    [[maybe_unused]] static jobject get_field_PINK_PETALS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sB", "PINK_PETALS", "field_42750", "PINK_PETALS", "f_271445_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PINK_PETALS
    [[maybe_unused]] static void set_field_PINK_PETALS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sB", "PINK_PETALS", "field_42750", "PINK_PETALS", "f_271445_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MOSS_BLOCK
    [[maybe_unused]] static jobject get_field_MOSS_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sC", "MOSS_BLOCK", "field_28681", "MOSS_BLOCK", "f_152544_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MOSS_BLOCK
    [[maybe_unused]] static void set_field_MOSS_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sC", "MOSS_BLOCK", "field_28681", "MOSS_BLOCK", "f_152544_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIG_DRIPLEAF
    [[maybe_unused]] static jobject get_field_BIG_DRIPLEAF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sD", "BIG_DRIPLEAF", "field_28682", "BIG_DRIPLEAF", "f_152545_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIG_DRIPLEAF
    [[maybe_unused]] static void set_field_BIG_DRIPLEAF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sD", "BIG_DRIPLEAF", "field_28682", "BIG_DRIPLEAF", "f_152545_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#BIG_DRIPLEAF_STEM
    [[maybe_unused]] static jobject get_field_BIG_DRIPLEAF_STEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sE", "BIG_DRIPLEAF_STEM", "field_28683", "BIG_DRIPLEAF_STEM", "f_152546_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#BIG_DRIPLEAF_STEM
    [[maybe_unused]] static void set_field_BIG_DRIPLEAF_STEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sE", "BIG_DRIPLEAF_STEM", "field_28683", "BIG_DRIPLEAF_STEM", "f_152546_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMALL_DRIPLEAF
    [[maybe_unused]] static jobject get_field_SMALL_DRIPLEAF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sF", "SMALL_DRIPLEAF", "field_28684", "SMALL_DRIPLEAF", "f_152547_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMALL_DRIPLEAF
    [[maybe_unused]] static void set_field_SMALL_DRIPLEAF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sF", "SMALL_DRIPLEAF", "field_28684", "SMALL_DRIPLEAF", "f_152547_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#HANGING_ROOTS
    [[maybe_unused]] static jobject get_field_HANGING_ROOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sG", "HANGING_ROOTS", "field_28686", "HANGING_ROOTS", "f_152548_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#HANGING_ROOTS
    [[maybe_unused]] static void set_field_HANGING_ROOTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sG", "HANGING_ROOTS", "field_28686", "HANGING_ROOTS", "f_152548_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#ROOTED_DIRT
    [[maybe_unused]] static jobject get_field_ROOTED_DIRT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sH", "ROOTED_DIRT", "field_28685", "ROOTED_DIRT", "f_152549_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#ROOTED_DIRT
    [[maybe_unused]] static void set_field_ROOTED_DIRT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sH", "ROOTED_DIRT", "field_28685", "ROOTED_DIRT", "f_152549_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#MUD
    [[maybe_unused]] static jobject get_field_MUD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sI", "MUD", "field_37576", "MUD", "f_220864_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#MUD
    [[maybe_unused]] static void set_field_MUD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sI", "MUD", "field_37576", "MUD", "f_220864_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE
    [[maybe_unused]] static jobject get_field_DEEPSLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sJ", "DEEPSLATE", "field_28888", "DEEPSLATE", "f_152550_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE
    [[maybe_unused]] static void set_field_DEEPSLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sJ", "DEEPSLATE", "field_28888", "DEEPSLATE", "f_152550_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COBBLED_DEEPSLATE
    [[maybe_unused]] static jobject get_field_COBBLED_DEEPSLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sK", "COBBLED_DEEPSLATE", "field_29031", "COBBLED_DEEPSLATE", "f_152551_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COBBLED_DEEPSLATE
    [[maybe_unused]] static void set_field_COBBLED_DEEPSLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sK", "COBBLED_DEEPSLATE", "field_29031", "COBBLED_DEEPSLATE", "f_152551_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COBBLED_DEEPSLATE_STAIRS
    [[maybe_unused]] static jobject get_field_COBBLED_DEEPSLATE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sL", "COBBLED_DEEPSLATE_STAIRS", "field_28889", "COBBLED_DEEPSLATE_STAIRS", "f_152552_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COBBLED_DEEPSLATE_STAIRS
    [[maybe_unused]] static void set_field_COBBLED_DEEPSLATE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sL", "COBBLED_DEEPSLATE_STAIRS", "field_28889", "COBBLED_DEEPSLATE_STAIRS", "f_152552_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COBBLED_DEEPSLATE_SLAB
    [[maybe_unused]] static jobject get_field_COBBLED_DEEPSLATE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sM", "COBBLED_DEEPSLATE_SLAB", "field_28890", "COBBLED_DEEPSLATE_SLAB", "f_152553_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COBBLED_DEEPSLATE_SLAB
    [[maybe_unused]] static void set_field_COBBLED_DEEPSLATE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sM", "COBBLED_DEEPSLATE_SLAB", "field_28890", "COBBLED_DEEPSLATE_SLAB", "f_152553_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#COBBLED_DEEPSLATE_WALL
    [[maybe_unused]] static jobject get_field_COBBLED_DEEPSLATE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sN", "COBBLED_DEEPSLATE_WALL", "field_28891", "COBBLED_DEEPSLATE_WALL", "f_152554_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#COBBLED_DEEPSLATE_WALL
    [[maybe_unused]] static void set_field_COBBLED_DEEPSLATE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sN", "COBBLED_DEEPSLATE_WALL", "field_28891", "COBBLED_DEEPSLATE_WALL", "f_152554_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_DEEPSLATE
    [[maybe_unused]] static jobject get_field_POLISHED_DEEPSLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sO", "POLISHED_DEEPSLATE", "field_28892", "POLISHED_DEEPSLATE", "f_152555_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_DEEPSLATE
    [[maybe_unused]] static void set_field_POLISHED_DEEPSLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sO", "POLISHED_DEEPSLATE", "field_28892", "POLISHED_DEEPSLATE", "f_152555_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_DEEPSLATE_STAIRS
    [[maybe_unused]] static jobject get_field_POLISHED_DEEPSLATE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sP", "POLISHED_DEEPSLATE_STAIRS", "field_28893", "POLISHED_DEEPSLATE_STAIRS", "f_152556_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_DEEPSLATE_STAIRS
    [[maybe_unused]] static void set_field_POLISHED_DEEPSLATE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sP", "POLISHED_DEEPSLATE_STAIRS", "field_28893", "POLISHED_DEEPSLATE_STAIRS", "f_152556_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_DEEPSLATE_SLAB
    [[maybe_unused]] static jobject get_field_POLISHED_DEEPSLATE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sQ", "POLISHED_DEEPSLATE_SLAB", "field_28894", "POLISHED_DEEPSLATE_SLAB", "f_152557_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_DEEPSLATE_SLAB
    [[maybe_unused]] static void set_field_POLISHED_DEEPSLATE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sQ", "POLISHED_DEEPSLATE_SLAB", "field_28894", "POLISHED_DEEPSLATE_SLAB", "f_152557_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POLISHED_DEEPSLATE_WALL
    [[maybe_unused]] static jobject get_field_POLISHED_DEEPSLATE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sR", "POLISHED_DEEPSLATE_WALL", "field_28895", "POLISHED_DEEPSLATE_WALL", "f_152558_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POLISHED_DEEPSLATE_WALL
    [[maybe_unused]] static void set_field_POLISHED_DEEPSLATE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sR", "POLISHED_DEEPSLATE_WALL", "field_28895", "POLISHED_DEEPSLATE_WALL", "f_152558_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_TILES
    [[maybe_unused]] static jobject get_field_DEEPSLATE_TILES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sS", "DEEPSLATE_TILES", "field_28896", "DEEPSLATE_TILES", "f_152559_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_TILES
    [[maybe_unused]] static void set_field_DEEPSLATE_TILES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sS", "DEEPSLATE_TILES", "field_28896", "DEEPSLATE_TILES", "f_152559_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_TILE_STAIRS
    [[maybe_unused]] static jobject get_field_DEEPSLATE_TILE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sT", "DEEPSLATE_TILE_STAIRS", "field_28897", "DEEPSLATE_TILE_STAIRS", "f_152560_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_TILE_STAIRS
    [[maybe_unused]] static void set_field_DEEPSLATE_TILE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sT", "DEEPSLATE_TILE_STAIRS", "field_28897", "DEEPSLATE_TILE_STAIRS", "f_152560_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_TILE_SLAB
    [[maybe_unused]] static jobject get_field_DEEPSLATE_TILE_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sU", "DEEPSLATE_TILE_SLAB", "field_28898", "DEEPSLATE_TILE_SLAB", "f_152561_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_TILE_SLAB
    [[maybe_unused]] static void set_field_DEEPSLATE_TILE_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sU", "DEEPSLATE_TILE_SLAB", "field_28898", "DEEPSLATE_TILE_SLAB", "f_152561_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_TILE_WALL
    [[maybe_unused]] static jobject get_field_DEEPSLATE_TILE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sV", "DEEPSLATE_TILE_WALL", "field_28899", "DEEPSLATE_TILE_WALL", "f_152562_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_TILE_WALL
    [[maybe_unused]] static void set_field_DEEPSLATE_TILE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sV", "DEEPSLATE_TILE_WALL", "field_28899", "DEEPSLATE_TILE_WALL", "f_152562_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_BRICKS
    [[maybe_unused]] static jobject get_field_DEEPSLATE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sW", "DEEPSLATE_BRICKS", "field_28900", "DEEPSLATE_BRICKS", "f_152589_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_BRICKS
    [[maybe_unused]] static void set_field_DEEPSLATE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sW", "DEEPSLATE_BRICKS", "field_28900", "DEEPSLATE_BRICKS", "f_152589_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_BRICK_STAIRS
    [[maybe_unused]] static jobject get_field_DEEPSLATE_BRICK_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sX", "DEEPSLATE_BRICK_STAIRS", "field_28901", "DEEPSLATE_BRICK_STAIRS", "f_152590_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_BRICK_STAIRS
    [[maybe_unused]] static void set_field_DEEPSLATE_BRICK_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sX", "DEEPSLATE_BRICK_STAIRS", "field_28901", "DEEPSLATE_BRICK_STAIRS", "f_152590_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_BRICK_SLAB
    [[maybe_unused]] static jobject get_field_DEEPSLATE_BRICK_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sY", "DEEPSLATE_BRICK_SLAB", "field_28902", "DEEPSLATE_BRICK_SLAB", "f_152591_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_BRICK_SLAB
    [[maybe_unused]] static void set_field_DEEPSLATE_BRICK_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sY", "DEEPSLATE_BRICK_SLAB", "field_28902", "DEEPSLATE_BRICK_SLAB", "f_152591_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DEEPSLATE_BRICK_WALL
    [[maybe_unused]] static jobject get_field_DEEPSLATE_BRICK_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sZ", "DEEPSLATE_BRICK_WALL", "field_28903", "DEEPSLATE_BRICK_WALL", "f_152592_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DEEPSLATE_BRICK_WALL
    [[maybe_unused]] static void set_field_DEEPSLATE_BRICK_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("sZ", "DEEPSLATE_BRICK_WALL", "field_28903", "DEEPSLATE_BRICK_WALL", "f_152592_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CHISELED_DEEPSLATE
    [[maybe_unused]] static jobject get_field_CHISELED_DEEPSLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ta", "CHISELED_DEEPSLATE", "field_28904", "CHISELED_DEEPSLATE", "f_152593_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CHISELED_DEEPSLATE
    [[maybe_unused]] static void set_field_CHISELED_DEEPSLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ta", "CHISELED_DEEPSLATE", "field_28904", "CHISELED_DEEPSLATE", "f_152593_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRACKED_DEEPSLATE_BRICKS
    [[maybe_unused]] static jobject get_field_CRACKED_DEEPSLATE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tb", "CRACKED_DEEPSLATE_BRICKS", "field_29222", "CRACKED_DEEPSLATE_BRICKS", "f_152594_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRACKED_DEEPSLATE_BRICKS
    [[maybe_unused]] static void set_field_CRACKED_DEEPSLATE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tb", "CRACKED_DEEPSLATE_BRICKS", "field_29222", "CRACKED_DEEPSLATE_BRICKS", "f_152594_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRACKED_DEEPSLATE_TILES
    [[maybe_unused]] static jobject get_field_CRACKED_DEEPSLATE_TILES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tc", "CRACKED_DEEPSLATE_TILES", "field_29223", "CRACKED_DEEPSLATE_TILES", "f_152595_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRACKED_DEEPSLATE_TILES
    [[maybe_unused]] static void set_field_CRACKED_DEEPSLATE_TILES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tc", "CRACKED_DEEPSLATE_TILES", "field_29223", "CRACKED_DEEPSLATE_TILES", "f_152595_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#INFESTED_DEEPSLATE
    [[maybe_unused]] static jobject get_field_INFESTED_DEEPSLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("td", "INFESTED_DEEPSLATE", "field_29224", "INFESTED_DEEPSLATE", "f_152596_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#INFESTED_DEEPSLATE
    [[maybe_unused]] static void set_field_INFESTED_DEEPSLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("td", "INFESTED_DEEPSLATE", "field_29224", "INFESTED_DEEPSLATE", "f_152596_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#SMOOTH_BASALT
    [[maybe_unused]] static jobject get_field_SMOOTH_BASALT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("te", "SMOOTH_BASALT", "field_29032", "SMOOTH_BASALT", "f_152597_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#SMOOTH_BASALT
    [[maybe_unused]] static void set_field_SMOOTH_BASALT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("te", "SMOOTH_BASALT", "field_29032", "SMOOTH_BASALT", "f_152597_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RAW_IRON_BLOCK
    [[maybe_unused]] static jobject get_field_RAW_IRON_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tf", "RAW_IRON_BLOCK", "field_33508", "RAW_IRON_BLOCK", "f_152598_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RAW_IRON_BLOCK
    [[maybe_unused]] static void set_field_RAW_IRON_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tf", "RAW_IRON_BLOCK", "field_33508", "RAW_IRON_BLOCK", "f_152598_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RAW_COPPER_BLOCK
    [[maybe_unused]] static jobject get_field_RAW_COPPER_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tg", "RAW_COPPER_BLOCK", "field_33509", "RAW_COPPER_BLOCK", "f_152599_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RAW_COPPER_BLOCK
    [[maybe_unused]] static void set_field_RAW_COPPER_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tg", "RAW_COPPER_BLOCK", "field_33509", "RAW_COPPER_BLOCK", "f_152599_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#RAW_GOLD_BLOCK
    [[maybe_unused]] static jobject get_field_RAW_GOLD_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("th", "RAW_GOLD_BLOCK", "field_33510", "RAW_GOLD_BLOCK", "f_152600_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#RAW_GOLD_BLOCK
    [[maybe_unused]] static void set_field_RAW_GOLD_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("th", "RAW_GOLD_BLOCK", "field_33510", "RAW_GOLD_BLOCK", "f_152600_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_AZALEA_BUSH
    [[maybe_unused]] static jobject get_field_POTTED_AZALEA_BUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ti", "POTTED_AZALEA", "field_33918", "POTTED_AZALEA_BUSH", "f_152601_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_AZALEA_BUSH
    [[maybe_unused]] static void set_field_POTTED_AZALEA_BUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ti", "POTTED_AZALEA", "field_33918", "POTTED_AZALEA_BUSH", "f_152601_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#POTTED_FLOWERING_AZALEA_BUSH
    [[maybe_unused]] static jobject get_field_POTTED_FLOWERING_AZALEA_BUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tj", "POTTED_FLOWERING_AZALEA", "field_33919", "POTTED_FLOWERING_AZALEA_BUSH", "f_152602_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#POTTED_FLOWERING_AZALEA_BUSH
    [[maybe_unused]] static void set_field_POTTED_FLOWERING_AZALEA_BUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tj", "POTTED_FLOWERING_AZALEA", "field_33919", "POTTED_FLOWERING_AZALEA_BUSH", "f_152602_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#OCHRE_FROGLIGHT
    [[maybe_unused]] static jobject get_field_OCHRE_FROGLIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tk", "OCHRE_FROGLIGHT", "field_37572", "OCHRE_FROGLIGHT", "f_220859_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#OCHRE_FROGLIGHT
    [[maybe_unused]] static void set_field_OCHRE_FROGLIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tk", "OCHRE_FROGLIGHT", "field_37572", "OCHRE_FROGLIGHT", "f_220859_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#VERDANT_FROGLIGHT
    [[maybe_unused]] static jobject get_field_VERDANT_FROGLIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tl", "VERDANT_FROGLIGHT", "field_37573", "VERDANT_FROGLIGHT", "f_220860_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#VERDANT_FROGLIGHT
    [[maybe_unused]] static void set_field_VERDANT_FROGLIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tl", "VERDANT_FROGLIGHT", "field_37573", "VERDANT_FROGLIGHT", "f_220860_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#PEARLESCENT_FROGLIGHT
    [[maybe_unused]] static jobject get_field_PEARLESCENT_FROGLIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tm", "PEARLESCENT_FROGLIGHT", "field_37574", "PEARLESCENT_FROGLIGHT", "f_220861_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#PEARLESCENT_FROGLIGHT
    [[maybe_unused]] static void set_field_PEARLESCENT_FROGLIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tm", "PEARLESCENT_FROGLIGHT", "field_37574", "PEARLESCENT_FROGLIGHT", "f_220861_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#FROGSPAWN
    [[maybe_unused]] static jobject get_field_FROGSPAWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tn", "FROGSPAWN", "field_37575", "FROGSPAWN", "f_220862_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#FROGSPAWN
    [[maybe_unused]] static void set_field_FROGSPAWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tn", "FROGSPAWN", "field_37575", "FROGSPAWN", "f_220862_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#REINFORCED_DEEPSLATE
    [[maybe_unused]] static jobject get_field_REINFORCED_DEEPSLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("to", "REINFORCED_DEEPSLATE", "field_38420", "REINFORCED_DEEPSLATE", "f_220863_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#REINFORCED_DEEPSLATE
    [[maybe_unused]] static void set_field_REINFORCED_DEEPSLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("to", "REINFORCED_DEEPSLATE", "field_38420", "REINFORCED_DEEPSLATE", "f_220863_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#DECORATED_POT
    [[maybe_unused]] static jobject get_field_DECORATED_POT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tp", "DECORATED_POT", "field_42752", "DECORATED_POT", "f_271197_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#DECORATED_POT
    [[maybe_unused]] static void set_field_DECORATED_POT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tp", "DECORATED_POT", "field_42752", "DECORATED_POT", "f_271197_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#CRAFTER
    [[maybe_unused]] static jobject get_field_CRAFTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tq", "CRAFTER", "field_46797", "CRAFTER", "f_303044_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#CRAFTER
    [[maybe_unused]] static void set_field_CRAFTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tq", "CRAFTER", "field_46797", "CRAFTER", "f_303044_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#TRIAL_SPAWNER
    [[maybe_unused]] static jobject get_field_TRIAL_SPAWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tr", "TRIAL_SPAWNER", "field_47336", "TRIAL_SPAWNER", "f_302964_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#TRIAL_SPAWNER
    [[maybe_unused]] static void set_field_TRIAL_SPAWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tr", "TRIAL_SPAWNER", "field_47336", "TRIAL_SPAWNER", "f_302964_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#VAULT
    [[maybe_unused]] static jobject get_field_VAULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ts", "VAULT", "field_48851", "VAULT", "f_316985_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#VAULT
    [[maybe_unused]] static void set_field_VAULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ts", "VAULT", "field_48851", "VAULT", "f_316985_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.Blocks#HEAVY_CORE
    [[maybe_unused]] static jobject get_field_HEAVY_CORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tt", "HEAVY_CORE", "field_49830", "HEAVY_CORE", "f_314894_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.Blocks#HEAVY_CORE
    [[maybe_unused]] static void set_field_HEAVY_CORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("tt", "HEAVY_CORE", "field_49830", "HEAVY_CORE", "f_314894_"), "Ldfy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createLightLevelFromLitBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "litBlockEmission", "method_26107", "createLightLevelFromLitBlockState", "m_50759_"), "(I)Ljava/util/function/ToIntFunction;");
    }

    static jobject createLightLevelFromLitBlockState(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createLightLevelFromLitBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createMapColorFromWaterloggedBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "waterloggedMapColor", "method_59823", "createMapColorFromWaterloggedBlockState", "m_321610_"), "(Lepi;)Ljava/util/function/Function;");
    }

    static jobject createMapColorFromWaterloggedBlockState(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createMapColorFromWaterloggedBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_never() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "never", "method_26114", "never", "m_50778_"), "(Ldtc;Ldcc;Ljd;Lbsx;)Ljava/lang/Boolean;");
    }

    static jobject never(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_never();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_always() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "always", "method_26123", "always", "m_50809_"), "(Ldtc;Ldcc;Ljd;Lbsx;)Ljava/lang/Boolean;");
    }

    static jobject always(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_always();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canSpawnOnLeaves() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "ocelotOrParrot", "method_26126", "canSpawnOnLeaves", "m_50821_"), "(Ldtc;Ldcc;Ljd;Lbsx;)Ljava/lang/Boolean;");
    }

    static jobject canSpawnOnLeaves(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_canSpawnOnLeaves();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createBedBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bed", "method_26109", "createBedBlock", "m_50764_"), "(Lcti;)Ldfy;");
    }

    static jobject createBedBlock(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createBedBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createLogBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "log", "method_26117", "createLogBlock", "m_284204_"), "(Lepi;Lepi;)Ldfy;");
    }

    static jobject createLogBlock(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createLogBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__createLogBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "log", "method_47375", "createLogBlock", "m_284306_"), "(Lepi;Lepi;Ldnm;)Ldfy;");
    }

    static jobject _createLogBlock(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__createLogBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createNetherStemBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "netherStem", "method_26115", "createNetherStemBlock", "m_284519_"), "(Lepi;)Ldfy;");
    }

    static jobject createNetherStemBlock(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createNetherStemBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__always() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "always", "method_26113", "always", "m_50774_"), "(Ldtc;Ldcc;Ljd;)Z");
    }

    static jboolean _always(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__always();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__never() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "never", "method_26122", "never", "m_50805_"), "(Ldtc;Ldcc;Ljd;)Z");
    }

    static jboolean _never(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__never();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createStainedGlassBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "stainedGlass", "method_26120", "createStainedGlassBlock", "m_50801_"), "(Lcti;)Ldfy;");
    }

    static jobject createStainedGlassBlock(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createStainedGlassBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createLeavesBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "leaves", "method_26106", "createLeavesBlock", "m_152614_"), "(Ldnm;)Ldfy;");
    }

    static jobject createLeavesBlock(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createLeavesBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createShulkerBoxBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "shulkerBox", "method_26110", "createShulkerBoxBlock", "m_50766_"), "(Lcti;Lepi;)Ldfy;");
    }

    static jobject createShulkerBoxBlock(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createShulkerBoxBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createPistonBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "pistonBase", "method_26119", "createPistonBlock", "m_50798_"), "(Z)Ldfy;");
    }

    static jobject createPistonBlock(const jboolean& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createPistonBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createWoodenButtonBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "woodenButton", "method_45451", "createWoodenButtonBlock", "m_278156_"), "(Ldtr;)Ldfy;");
    }

    static jobject createWoodenButtonBlock(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createWoodenButtonBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createStoneButtonBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "stoneButton", "method_45453", "createStoneButtonBlock", "m_246720_"), "()Ldfy;");
    }

    static jobject createStoneButtonBlock() {
       const auto clazz = self();
       const auto methodID = methodID_createStoneButtonBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createFlowerPotBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "flowerPot", "method_50000", "createFlowerPotBlock", "m_278189_"), "(Ldfy;)Ldfy;");
    }

    static jobject createFlowerPotBlock(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createFlowerPotBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createCandleBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "candle", "method_50001", "createCandleBlock", "m_284429_"), "(Lepi;)Ldfy;");
    }

    static jobject createCandleBlock(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createCandleBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createOldStairsBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "legacyStair", "method_55133", "createOldStairsBlock", "m_307476_"), "(Ldfy;)Ldfy;");
    }

    static jobject createOldStairsBlock(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createOldStairsBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createStairsBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "stair", "method_53980", "createStairsBlock", "m_306583_"), "(Ldfy;)Ldfy;");
    }

    static jobject createStairsBlock(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createStairsBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_9492", "register", "m_50795_"), "(Ljava/lang/String;Ldfy;)Ldfy;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_52571", "register", "m_294586_"), "(Lakq;Ldfy;)Ldfy;");
    }

    static jobject _register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_refreshShapeCache() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "rebuildCache", "method_26979", "refreshShapeCache", "m_50758_"), "()V");
    }

    static void refreshShapeCache() {
       const auto clazz = self();
       const auto methodID = methodID_refreshShapeCache();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_BLOCKS_HPP