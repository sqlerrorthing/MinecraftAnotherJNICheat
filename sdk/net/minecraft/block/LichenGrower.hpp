// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_LICHENGROWER_HPP
#define NET_MINECRAFT_BLOCK_LICHENGROWER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.LichenGrower
 * Remapped: dkz
 */
namespace LichenGrower {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dkz", "net/minecraft/world/level/block/MultifaceSpreader", "net/minecraft/class_7118", "net/minecraft/block/LichenGrower", "net/minecraft/src/C_213099_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.LichenGrower#GROW_TYPES
    [[maybe_unused]] static jobject get_field_GROW_TYPES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_SPREAD_ORDER", "field_37595", "GROW_TYPES", "f_221586_"), "[Ldkz$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.LichenGrower#GROW_TYPES
    [[maybe_unused]] static void set_field_GROW_TYPES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_SPREAD_ORDER", "field_37595", "GROW_TYPES", "f_221586_"), "[Ldkz$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.LichenGrower#growChecker
    static jobject get_field_growChecker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "config", "field_37596", "growChecker", "f_221587_"), "Ldkz$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.LichenGrower#growChecker
    static void set_field_growChecker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "config", "field_37596", "growChecker", "f_221587_"), "Ldkz$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_canGrow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canSpreadInAnyDirection", "method_41443", "canGrow", "m_221601_"), "(Ldtc;Ldcc;Ljd;Lji;)Z");
    }

    static jboolean canGrow(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_canGrow();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_grow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spreadFromRandomFaceTowardRandomDirection", "method_41450", "grow", "m_221619_"), "(Ldtc;Ldcx;Ljd;Layw;)Ljava/util/Optional;");
    }

    static jobject grow(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_grow();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__grow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spreadAll", "method_41452", "grow", "m_221657_"), "(Ldtc;Ldcx;Ljd;Z)J");
    }

    static jlong _grow(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID__grow();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID___grow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spreadFromFaceTowardRandomDirection", "method_41447", "grow", "m_221630_"), "(Ldtc;Ldcx;Ljd;Lji;Layw;Z)Ljava/util/Optional;");
    }

    static jobject __grow(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID___grow();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID____grow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spreadFromFaceTowardAllDirections", "method_41448", "grow", "m_221644_"), "(Ldtc;Ldcx;Ljd;Lji;Z)J");
    }

    static jlong ___grow(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jboolean& arg4) {
                
       const auto methodID = methodID____grow();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_____grow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spreadFromFaceTowardDirection", "method_41446", "grow", "m_221637_"), "(Ldtc;Ldcx;Ljd;Lji;Lji;Z)Ljava/util/Optional;");
    }

    static jobject ____grow(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID_____grow();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getGrowPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpreadFromFaceTowardDirection", "method_41445", "getGrowPos", "m_221612_"), "(Ldtc;Ldcc;Ljd;Lji;Lji;Ldkz$d;)Ljava/util/Optional;");
    }

    static jobject getGrowPos(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_getGrowPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_place() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spreadToFace", "method_41441", "place", "m_221593_"), "(Ldcx;Ldkz$c;Z)Ljava/util/Optional;");
    }

    static jobject place(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_place();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_LICHENGROWER_HPP