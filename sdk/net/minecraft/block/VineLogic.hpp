// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_VINELOGIC_HPP
#define NET_MINECRAFT_BLOCK_VINELOGIC_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.VineLogic
 * Remapped: dle
 */
namespace VineLogic {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dle", "net/minecraft/world/level/block/NetherVines", "net/minecraft/class_4949", "net/minecraft/block/VineLogic", "net/minecraft/src/C_1845_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.VineLogic#field_31198
    [[maybe_unused]] static jdouble get_field_field_31198() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BONEMEAL_GROW_PROBABILITY_DECREASE_RATE", "field_31198", "field_31198", "f_153987_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.VineLogic#field_31198
    [[maybe_unused]] static void set_field_field_31198(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BONEMEAL_GROW_PROBABILITY_DECREASE_RATE", "field_31198", "field_31198", "f_153987_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.VineLogic#field_31197
    [[maybe_unused]] static jdouble get_field_field_31197() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GROW_PER_TICK_PROBABILITY", "field_31197", "field_31197", "f_153986_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.VineLogic#field_31197
    [[maybe_unused]] static void set_field_field_31197(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GROW_PER_TICK_PROBABILITY", "field_31197", "field_31197", "f_153986_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    static jmethodID methodID_isValidForWeepingStem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isValidGrowthState", "method_25961", "isValidForWeepingStem", "m_54963_"), "(Ldtc;)Z");
    }

    static jboolean isValidForWeepingStem(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isValidForWeepingStem();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getGrowthLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlocksToGrowWhenBonemealed", "method_26381", "getGrowthLength", "m_221803_"), "(Layw;)I");
    }

    static jint getGrowthLength(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getGrowthLength();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_VINELOGIC_HPP