// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_DOUBLEBLOCKPROPERTIES$TYPE_HPP
#define NET_MINECRAFT_BLOCK_DOUBLEBLOCKPROPERTIES$TYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.DoubleBlockProperties$Type
 * Remapped: dif$a
 */
namespace DoubleBlockProperties$Type {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dif$a", "net/minecraft/world/level/block/DoubleBlockCombiner$BlockType", "net/minecraft/class_4732$class_4733", "net/minecraft/block/DoubleBlockProperties$Type", "net/minecraft/src/C_1766_$C_1767_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.DoubleBlockProperties$Type#SINGLE
    [[maybe_unused]] static jobject get_field_SINGLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SINGLE", "field_21783", "SINGLE", "SINGLE"), "Ldif$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.DoubleBlockProperties$Type#SINGLE
    [[maybe_unused]] static void set_field_SINGLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SINGLE", "field_21783", "SINGLE", "SINGLE"), "Ldif$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.DoubleBlockProperties$Type#FIRST
    [[maybe_unused]] static jobject get_field_FIRST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FIRST", "field_21784", "FIRST", "FIRST"), "Ldif$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.DoubleBlockProperties$Type#FIRST
    [[maybe_unused]] static void set_field_FIRST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FIRST", "field_21784", "FIRST", "FIRST"), "Ldif$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.DoubleBlockProperties$Type#SECOND
    [[maybe_unused]] static jobject get_field_SECOND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SECOND", "field_21785", "SECOND", "SECOND"), "Ldif$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.DoubleBlockProperties$Type#SECOND
    [[maybe_unused]] static void set_field_SECOND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SECOND", "field_21785", "SECOND", "SECOND"), "Ldif$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Ldif$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Ldif$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_DOUBLEBLOCKPROPERTIES$TYPE_HPP