// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_PATTERN_BLOCKPATTERNBUILDER_HPP
#define NET_MINECRAFT_BLOCK_PATTERN_BLOCKPATTERNBUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.pattern.BlockPatternBuilder
 * Remapped: dti
 */
namespace BlockPatternBuilder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dti", "net/minecraft/world/level/block/state/pattern/BlockPatternBuilder", "net/minecraft/class_2697", "net/minecraft/block/pattern/BlockPatternBuilder", "net/minecraft/src/C_2074_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.pattern.BlockPatternBuilder#JOINER
    [[maybe_unused]] static jobject get_field_JOINER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "COMMA_JOINED", "field_12340", "JOINER", "f_61236_"), "Lcom/google/common/base/Joiner;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.pattern.BlockPatternBuilder#JOINER
    [[maybe_unused]] static void set_field_JOINER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "COMMA_JOINED", "field_12340", "JOINER", "f_61236_"), "Lcom/google/common/base/Joiner;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.pattern.BlockPatternBuilder#aisles
    static jobject get_field_aisles(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "pattern", "field_12344", "aisles", "f_61237_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.pattern.BlockPatternBuilder#aisles
    static void set_field_aisles(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "pattern", "field_12344", "aisles", "f_61237_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.pattern.BlockPatternBuilder#charMap
    static jobject get_field_charMap(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "lookup", "field_12343", "charMap", "f_61238_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.pattern.BlockPatternBuilder#charMap
    static void set_field_charMap(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "lookup", "field_12343", "charMap", "f_61238_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.pattern.BlockPatternBuilder#height
    static jint get_field_height(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "height", "field_12342", "height", "f_61239_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.pattern.BlockPatternBuilder#height
    static void set_field_height(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "height", "field_12342", "height", "f_61239_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.pattern.BlockPatternBuilder#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "width", "field_12341", "width", "f_61240_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.pattern.BlockPatternBuilder#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "width", "field_12341", "width", "f_61240_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_aisle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "aisle", "method_11702", "aisle", "m_61247_"), "([Ljava/lang/String;)Ldti;");
    }

    static jobject aisle(const jobject& obj, const jarray& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_aisle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "start", "method_11701", "start", "m_61243_"), "()Ldti;");
    }

    static jobject start() {
       const auto clazz = self();
       const auto methodID = methodID_start();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_where() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "where", "method_11700", "where", "m_61244_"), "(CLjava/util/function/Predicate;)Ldti;");
    }

    static jobject where(const jobject& obj, const jchar& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_where();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "build", "method_11704", "build", "m_61249_"), "()Ldth;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_bakePredicates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "createPattern", "method_11703", "bakePredicates", "m_61250_"), "()[[[Ljava/util/function/Predicate;");
    }

    static jobject bakePredicates(const jobject& obj) {
                
       const auto methodID = methodID_bakePredicates();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "ensureAllCharactersMatched", "method_11705", "validate", "m_61251_"), "()V");
    }

    static void validate(const jobject& obj) {
                
       const auto methodID = methodID_validate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_PATTERN_BLOCKPATTERNBUILDER_HPP