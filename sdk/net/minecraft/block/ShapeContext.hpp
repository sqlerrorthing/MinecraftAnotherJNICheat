// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_SHAPECONTEXT_HPP
#define NET_MINECRAFT_BLOCK_SHAPECONTEXT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.ShapeContext
 * Remapped: exh
 */
namespace ShapeContext {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("exh", "net/minecraft/world/phys/shapes/CollisionContext", "net/minecraft/class_3726", "net/minecraft/block/ShapeContext", "net/minecraft/src/C_3051_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_absent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "empty", "method_16194", "absent", "m_82749_"), "()Lexh;");
    }

    static jobject absent() {
       const auto clazz = self();
       const auto methodID = methodID_absent();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "of", "method_16195", "of", "m_82750_"), "(Lbsr;)Lexh;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isDescending() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isDescending", "method_16193", "isDescending", "m_6226_"), "()Z");
    }

    static jboolean isDescending(const jobject& obj) {
                
       const auto methodID = methodID_isDescending();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAbove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isAbove", "method_16192", "isAbove", "m_6513_"), "(Lexv;Ljd;Z)Z");
    }

    static jboolean isAbove(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_isAbove();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isHolding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isHoldingItem", "method_17785", "isHolding", "m_7142_"), "(Lcul;)Z");
    }

    static jboolean isHolding(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isHolding();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canWalkOnFluid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canStandOnFluid", "method_27866", "canWalkOnFluid", "m_203682_"), "(Lepe;Lepe;)Z");
    }

    static jboolean canWalkOnFluid(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canWalkOnFluid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_SHAPECONTEXT_HPP