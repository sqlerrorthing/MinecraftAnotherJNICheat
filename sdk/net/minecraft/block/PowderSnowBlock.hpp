// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_POWDERSNOWBLOCK_HPP
#define NET_MINECRAFT_BLOCK_POWDERSNOWBLOCK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.PowderSnowBlock
 * Remapped: dlt
 */
namespace PowderSnowBlock {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dlt", "net/minecraft/world/level/block/PowderSnowBlock", "net/minecraft/class_5635", "net/minecraft/block/PowderSnowBlock", "net/minecraft/src/C_141221_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.PowderSnowBlock#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_46415", "CODEC", "f_302680_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.PowderSnowBlock#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_46415", "CODEC", "f_302680_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.PowderSnowBlock#field_31216
    [[maybe_unused]] static jfloat get_field_field_31216() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HORIZONTAL_PARTICLE_MOMENTUM_FACTOR", "field_31216", "field_31216", "f_154246_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.PowderSnowBlock#field_31216
    [[maybe_unused]] static void set_field_field_31216(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HORIZONTAL_PARTICLE_MOMENTUM_FACTOR", "field_31216", "field_31216", "f_154246_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.PowderSnowBlock#HORIZONTAL_MOVEMENT_MULTIPLIER
    [[maybe_unused]] static jfloat get_field_HORIZONTAL_MOVEMENT_MULTIPLIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER", "field_31217", "HORIZONTAL_MOVEMENT_MULTIPLIER", "f_154247_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.PowderSnowBlock#HORIZONTAL_MOVEMENT_MULTIPLIER
    [[maybe_unused]] static void set_field_HORIZONTAL_MOVEMENT_MULTIPLIER(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER", "field_31217", "HORIZONTAL_MOVEMENT_MULTIPLIER", "f_154247_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.PowderSnowBlock#VERTICAL_MOVEMENT_MULTIPLIER
    [[maybe_unused]] static jfloat get_field_VERTICAL_MOVEMENT_MULTIPLIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "IN_BLOCK_VERTICAL_SPEED_MULTIPLIER", "field_31218", "VERTICAL_MOVEMENT_MULTIPLIER", "f_154248_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.PowderSnowBlock#VERTICAL_MOVEMENT_MULTIPLIER
    [[maybe_unused]] static void set_field_VERTICAL_MOVEMENT_MULTIPLIER(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "IN_BLOCK_VERTICAL_SPEED_MULTIPLIER", "field_31218", "VERTICAL_MOVEMENT_MULTIPLIER", "f_154248_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.PowderSnowBlock#field_31219
    [[maybe_unused]] static jfloat get_field_field_31219() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NUM_BLOCKS_TO_FALL_INTO_BLOCK", "field_31219", "field_31219", "f_154249_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.PowderSnowBlock#field_31219
    [[maybe_unused]] static void set_field_field_31219(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NUM_BLOCKS_TO_FALL_INTO_BLOCK", "field_31219", "field_31219", "f_154249_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.PowderSnowBlock#FALLING_SHAPE
    [[maybe_unused]] static jobject get_field_FALLING_SHAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "FALLING_COLLISION_SHAPE", "field_31220", "FALLING_SHAPE", "f_154250_"), "Lexv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.PowderSnowBlock#FALLING_SHAPE
    [[maybe_unused]] static void set_field_FALLING_SHAPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "FALLING_COLLISION_SHAPE", "field_31220", "FALLING_SHAPE", "f_154250_"), "Lexv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.PowderSnowBlock#field_36189
    [[maybe_unused]] static jdouble get_field_field_36189() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MINIMUM_FALL_DISTANCE_FOR_SOUND", "field_36189", "field_36189", "f_196692_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.PowderSnowBlock#field_36189
    [[maybe_unused]] static void set_field_field_36189(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MINIMUM_FALL_DISTANCE_FOR_SOUND", "field_36189", "field_36189", "f_196692_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.PowderSnowBlock#SMALL_FALL_SOUND_MAX_DISTANCE
    [[maybe_unused]] static jdouble get_field_SMALL_FALL_SOUND_MAX_DISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND", "field_36190", "SMALL_FALL_SOUND_MAX_DISTANCE", "f_196693_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.PowderSnowBlock#SMALL_FALL_SOUND_MAX_DISTANCE
    [[maybe_unused]] static void set_field_SMALL_FALL_SOUND_MAX_DISTANCE(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND", "field_36190", "SMALL_FALL_SOUND_MAX_DISTANCE", "f_196693_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    static jmethodID methodID_getCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "codec", "method_53969", "getCodec", "m_304657_"), "()Lcom/mojang/serialization/MapCodec;");
    }

    static jobject getCodec(const jobject& obj) {
                
       const auto methodID = methodID_getCodec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSideInvisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "skipRendering", "method_9522", "isSideInvisible", "m_6104_"), "(Ldtc;Ldtc;Lji;)Z");
    }

    static jboolean isSideInvisible(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_isSideInvisible();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getCullingShape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getOcclusionShape", "method_9571", "getCullingShape", "m_7952_"), "(Ldtc;Ldcc;Ljd;)Lexv;");
    }

    static jobject getCullingShape(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getCullingShape();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onEntityCollision() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "entityInside", "method_9548", "onEntityCollision", "m_7892_"), "(Ldtc;Ldcw;Ljd;Lbsr;)V");
    }

    static void onEntityCollision(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_onEntityCollision();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onLandedUpon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fallOn", "method_9554", "onLandedUpon", "m_142072_"), "(Ldcw;Ldtc;Ljd;Lbsr;F)V");
    }

    static void onLandedUpon(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jfloat& arg4) {
                
       const auto methodID = methodID_onLandedUpon();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getCollisionShape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getCollisionShape", "method_9549", "getCollisionShape", "m_5939_"), "(Ldtc;Ldcc;Ljd;Lexh;)Lexv;");
    }

    static jobject getCollisionShape(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getCollisionShape();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getCameraCollisionShape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getVisualShape", "method_26159", "getCameraCollisionShape", "m_5909_"), "(Ldtc;Ldcc;Ljd;Lexh;)Lexv;");
    }

    static jobject getCameraCollisionShape(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getCameraCollisionShape();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canWalkOnPowderSnow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canEntityWalkOnPowderSnow", "method_32355", "canWalkOnPowderSnow", "m_154255_"), "(Lbsr;)Z");
    }

    static jboolean canWalkOnPowderSnow(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_canWalkOnPowderSnow();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_tryDrainFluid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pickupBlock", "method_9700", "tryDrainFluid", "m_142598_"), "(Lcmx;Ldcx;Ljd;Ldtc;)Lcuq;");
    }

    static jobject tryDrainFluid(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_tryDrainFluid();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getBucketFillSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aw_", "getPickupSound", "method_32351", "getBucketFillSound", "m_142298_"), "()Ljava/util/Optional;");
    }

    static jobject getBucketFillSound(const jobject& obj) {
                
       const auto methodID = methodID_getBucketFillSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canPathfindThrough() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isPathfindable", "method_9516", "canPathfindThrough", "m_7357_"), "(Ldtc;Lept;)Z");
    }

    static jboolean canPathfindThrough(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canPathfindThrough();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_POWDERSNOWBLOCK_HPP