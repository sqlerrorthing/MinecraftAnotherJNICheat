// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_SPAWNER_MOBSPAWNERLOGIC_HPP
#define NET_MINECRAFT_BLOCK_SPAWNER_MOBSPAWNERLOGIC_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.spawner.MobSpawnerLogic
 * Remapped: dby
 */
namespace MobSpawnerLogic {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dby", "net/minecraft/world/level/BaseSpawner", "net/minecraft/class_1917", "net/minecraft/block/spawner/MobSpawnerLogic", "net/minecraft/src/C_1554_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.spawner.MobSpawnerLogic#SPAWN_DATA_KEY
    [[maybe_unused]] static jobject get_field_SPAWN_DATA_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPAWN_DATA_TAG", "field_40877", "SPAWN_DATA_KEY", "f_254624_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.spawner.MobSpawnerLogic#SPAWN_DATA_KEY
    [[maybe_unused]] static void set_field_SPAWN_DATA_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPAWN_DATA_TAG", "field_40877", "SPAWN_DATA_KEY", "f_254624_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.spawner.MobSpawnerLogic#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_9156", "LOGGER", "f_45441_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_9156", "LOGGER", "f_45441_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.spawner.MobSpawnerLogic#field_30951
    [[maybe_unused]] static jint get_field_field_30951() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "EVENT_SPAWN", "field_30951", "field_30951", "f_151303_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#field_30951
    [[maybe_unused]] static void set_field_field_30951(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "EVENT_SPAWN", "field_30951", "field_30951", "f_151303_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.MobSpawnerLogic#spawnDelay
    static jint get_field_spawnDelay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "spawnDelay", "field_9154", "spawnDelay", "f_45442_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#spawnDelay
    static void set_field_spawnDelay(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "spawnDelay", "field_9154", "spawnDelay", "f_45442_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.MobSpawnerLogic#spawnPotentials
    static jobject get_field_spawnPotentials(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "spawnPotentials", "field_9152", "spawnPotentials", "f_45443_"), "Lbpb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#spawnPotentials
    static void set_field_spawnPotentials(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "spawnPotentials", "field_9152", "spawnPotentials", "f_45443_"), "Lbpb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.MobSpawnerLogic#spawnEntry
    static jobject get_field_spawnEntry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "nextSpawnData", "field_9155", "spawnEntry", "f_45444_"), "Lddo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#spawnEntry
    static void set_field_spawnEntry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "nextSpawnData", "field_9155", "spawnEntry", "f_45444_"), "Lddo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.MobSpawnerLogic#rotation
    static jdouble get_field_rotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "spin", "field_9161", "rotation", "f_45445_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#rotation
    static void set_field_rotation(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "spin", "field_9161", "rotation", "f_45445_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.MobSpawnerLogic#lastRotation
    static jdouble get_field_lastRotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "oSpin", "field_9159", "lastRotation", "f_45446_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#lastRotation
    static void set_field_lastRotation(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "oSpin", "field_9159", "lastRotation", "f_45446_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.MobSpawnerLogic#minSpawnDelay
    static jint get_field_minSpawnDelay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "minSpawnDelay", "field_9151", "minSpawnDelay", "f_45447_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#minSpawnDelay
    static void set_field_minSpawnDelay(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "minSpawnDelay", "field_9151", "minSpawnDelay", "f_45447_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.MobSpawnerLogic#maxSpawnDelay
    static jint get_field_maxSpawnDelay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "maxSpawnDelay", "field_9150", "maxSpawnDelay", "f_45448_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#maxSpawnDelay
    static void set_field_maxSpawnDelay(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "maxSpawnDelay", "field_9150", "maxSpawnDelay", "f_45448_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.MobSpawnerLogic#spawnCount
    static jint get_field_spawnCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "spawnCount", "field_9149", "spawnCount", "f_45449_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#spawnCount
    static void set_field_spawnCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "spawnCount", "field_9149", "spawnCount", "f_45449_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.MobSpawnerLogic#renderedEntity
    static jobject get_field_renderedEntity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "displayEntity", "field_9153", "renderedEntity", "f_45450_"), "Lbsr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#renderedEntity
    static void set_field_renderedEntity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "displayEntity", "field_9153", "renderedEntity", "f_45450_"), "Lbsr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.MobSpawnerLogic#maxNearbyEntities
    static jint get_field_maxNearbyEntities(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "maxNearbyEntities", "field_9160", "maxNearbyEntities", "f_45451_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#maxNearbyEntities
    static void set_field_maxNearbyEntities(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "maxNearbyEntities", "field_9160", "maxNearbyEntities", "f_45451_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.MobSpawnerLogic#requiredPlayerRange
    static jint get_field_requiredPlayerRange(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "requiredPlayerRange", "field_9158", "requiredPlayerRange", "f_45452_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#requiredPlayerRange
    static void set_field_requiredPlayerRange(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "requiredPlayerRange", "field_9158", "requiredPlayerRange", "f_45452_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.MobSpawnerLogic#spawnRange
    static jint get_field_spawnRange(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "spawnRange", "field_9157", "spawnRange", "f_45453_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.MobSpawnerLogic#spawnRange
    static void set_field_spawnRange(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "spawnRange", "field_9157", "spawnRange", "f_45453_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_setEntityId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setEntityId", "method_8274", "setEntityId", "m_253197_"), "(Lbsx;Ldcw;Layw;Ljd;)V");
    }

    static void setEntityId(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_setEntityId();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isPlayerInRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isNearPlayer", "method_8284", "isPlayerInRange", "m_151343_"), "(Ldcw;Ljd;)Z");
    }

    static jboolean isPlayerInRange(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isPlayerInRange();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_clientTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clientTick", "method_31589", "clientTick", "m_151319_"), "(Ldcw;Ljd;)V");
    }

    static void clientTick(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_clientTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_serverTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "serverTick", "method_31588", "serverTick", "m_151311_"), "(Laqu;Ljd;)V");
    }

    static void serverTick(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_serverTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateSpawns() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "delay", "method_8282", "updateSpawns", "m_151350_"), "(Ldcw;Ljd;)V");
    }

    static void updateSpawns(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_updateSpawns();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_8280", "readNbt", "m_151328_"), "(Ldcw;Ljd;Lub;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "save", "method_8272", "writeNbt", "m_186381_"), "(Lub;)Lub;");
    }

    static jobject writeNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRenderedEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getOrCreateDisplayEntity", "method_8283", "getRenderedEntity", "m_253067_"), "(Ldcw;Ljd;)Lbsr;");
    }

    static jobject getRenderedEntity(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getRenderedEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEventTriggered", "method_8275", "handleStatus", "m_151316_"), "(Ldcw;I)Z");
    }

    static jboolean handleStatus(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_handleStatus();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setSpawnEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setNextSpawnData", "method_8277", "setSpawnEntry", "m_142667_"), "(Ldcw;Ljd;Lddo;)V");
    }

    static void setSpawnEntry(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_setSpawnEntry();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getSpawnEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOrCreateNextSpawnData", "method_46404", "getSpawnEntry", "m_253144_"), "(Ldcw;Layw;Ljd;)Lddo;");
    }

    static jobject getSpawnEntry(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getSpawnEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_sendStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "broadcastEvent", "method_8273", "sendStatus", "m_142523_"), "(Ldcw;Ljd;I)V");
    }

    static void sendStatus(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_sendStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpin", "method_8278", "getRotation", "m_45473_"), "()D");
    }

    static jdouble getRotation(const jobject& obj) {
                
       const auto methodID = methodID_getRotation();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLastRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getoSpin", "method_8279", "getLastRotation", "m_45474_"), "()D");
    }

    static jdouble getLastRotation(const jobject& obj) {
                
       const auto methodID = methodID_getLastRotation();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_SPAWNER_MOBSPAWNERLOGIC_HPP