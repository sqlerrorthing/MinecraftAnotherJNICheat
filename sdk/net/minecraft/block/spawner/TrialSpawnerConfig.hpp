// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_SPAWNER_TRIALSPAWNERCONFIG_HPP
#define NET_MINECRAFT_BLOCK_SPAWNER_TRIALSPAWNERCONFIG_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.spawner.TrialSpawnerConfig
 * Remapped: dsg
 */
namespace TrialSpawnerConfig {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dsg", "net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfig", "net/minecraft/class_8965", "net/minecraft/block/spawner/TrialSpawnerConfig", "net/minecraft/src/C_302073_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerConfig#spawnRange
    static jint get_field_spawnRange(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "spawnRange", "comp_2103", "spawnRange", "f_302636_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerConfig#spawnRange
    static void set_field_spawnRange(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "spawnRange", "comp_2103", "spawnRange", "f_302636_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerConfig#totalMobs
    static jfloat get_field_totalMobs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "totalMobs", "comp_2104", "totalMobs", "f_303527_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerConfig#totalMobs
    static void set_field_totalMobs(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "totalMobs", "comp_2104", "totalMobs", "f_303527_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerConfig#simultaneousMobs
    static jfloat get_field_simultaneousMobs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "simultaneousMobs", "comp_2105", "simultaneousMobs", "f_303822_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerConfig#simultaneousMobs
    static void set_field_simultaneousMobs(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "simultaneousMobs", "comp_2105", "simultaneousMobs", "f_303822_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerConfig#totalMobsAddedPerPlayer
    static jfloat get_field_totalMobsAddedPerPlayer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "totalMobsAddedPerPlayer", "comp_2106", "totalMobsAddedPerPlayer", "f_303267_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerConfig#totalMobsAddedPerPlayer
    static void set_field_totalMobsAddedPerPlayer(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "totalMobsAddedPerPlayer", "comp_2106", "totalMobsAddedPerPlayer", "f_303267_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerConfig#simultaneousMobsAddedPerPlayer
    static jfloat get_field_simultaneousMobsAddedPerPlayer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "simultaneousMobsAddedPerPlayer", "comp_2107", "simultaneousMobsAddedPerPlayer", "f_303451_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerConfig#simultaneousMobsAddedPerPlayer
    static void set_field_simultaneousMobsAddedPerPlayer(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "simultaneousMobsAddedPerPlayer", "comp_2107", "simultaneousMobsAddedPerPlayer", "f_303451_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerConfig#ticksBetweenSpawn
    static jint get_field_ticksBetweenSpawn(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "ticksBetweenSpawn", "comp_2108", "ticksBetweenSpawn", "f_303452_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerConfig#ticksBetweenSpawn
    static void set_field_ticksBetweenSpawn(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "ticksBetweenSpawn", "comp_2108", "ticksBetweenSpawn", "f_303452_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerConfig#spawnPotentialsDefinition
    static jobject get_field_spawnPotentialsDefinition(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "spawnPotentialsDefinition", "comp_2110", "spawnPotentialsDefinition", "f_303733_"), "Lbpb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerConfig#spawnPotentialsDefinition
    static void set_field_spawnPotentialsDefinition(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "spawnPotentialsDefinition", "comp_2110", "spawnPotentialsDefinition", "f_303733_"), "Lbpb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerConfig#lootTablesToEject
    static jobject get_field_lootTablesToEject(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "lootTablesToEject", "comp_2111", "lootTablesToEject", "f_302816_"), "Lbpb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerConfig#lootTablesToEject
    static void set_field_lootTablesToEject(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "lootTablesToEject", "comp_2111", "lootTablesToEject", "f_302816_"), "Lbpb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerConfig#itemsToDropWhenOminous
    static jobject get_field_itemsToDropWhenOminous(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "itemsToDropWhenOminous", "comp_2552", "itemsToDropWhenOminous", "f_315702_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerConfig#itemsToDropWhenOminous
    static void set_field_itemsToDropWhenOminous(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "itemsToDropWhenOminous", "comp_2552", "itemsToDropWhenOminous", "f_315702_"), "Lakq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.block.spawner.TrialSpawnerConfig#DEFAULT
    [[maybe_unused]] static jobject get_field_DEFAULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT", "field_47367", "DEFAULT", "f_303284_"), "Ldsg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.spawner.TrialSpawnerConfig#DEFAULT
    [[maybe_unused]] static void set_field_DEFAULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT", "field_47367", "DEFAULT", "f_303284_"), "Ldsg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.spawner.TrialSpawnerConfig#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_47368", "CODEC", "f_314242_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.spawner.TrialSpawnerConfig#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_47368", "CODEC", "f_314242_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getTotalMobs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateTargetTotalMobs", "method_55179", "getTotalMobs", "m_306590_"), "(I)I");
    }

    static jint getTotalMobs(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getTotalMobs();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSimultaneousMobs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "calculateTargetSimultaneousMobs", "method_55181", "getSimultaneousMobs", "m_306918_"), "(I)I");
    }

    static jint getSimultaneousMobs(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getSimultaneousMobs();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCooldownLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "ticksBetweenItemSpawners", "method_58712", "getCooldownLength", "m_324829_"), "()J");
    }

    static jlong getCooldownLength(const jobject& obj) {
                
       const auto methodID = methodID_getCooldownLength();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__spawnRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "spawnRange", "comp_2103", "spawnRange", "f_302636_"), "()I");
    }

    static jint _spawnRange(const jobject& obj) {
                
       const auto methodID = methodID__spawnRange();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__totalMobs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "totalMobs", "comp_2104", "totalMobs", "f_303527_"), "()F");
    }

    static jfloat _totalMobs(const jobject& obj) {
                
       const auto methodID = methodID__totalMobs();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__simultaneousMobs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "simultaneousMobs", "comp_2105", "simultaneousMobs", "f_303822_"), "()F");
    }

    static jfloat _simultaneousMobs(const jobject& obj) {
                
       const auto methodID = methodID__simultaneousMobs();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__totalMobsAddedPerPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "totalMobsAddedPerPlayer", "comp_2106", "totalMobsAddedPerPlayer", "f_303267_"), "()F");
    }

    static jfloat _totalMobsAddedPerPlayer(const jobject& obj) {
                
       const auto methodID = methodID__totalMobsAddedPerPlayer();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__simultaneousMobsAddedPerPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "simultaneousMobsAddedPerPlayer", "comp_2107", "simultaneousMobsAddedPerPlayer", "f_303451_"), "()F");
    }

    static jfloat _simultaneousMobsAddedPerPlayer(const jobject& obj) {
                
       const auto methodID = methodID__simultaneousMobsAddedPerPlayer();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__ticksBetweenSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "ticksBetweenSpawn", "comp_2108", "ticksBetweenSpawn", "f_303452_"), "()I");
    }

    static jint _ticksBetweenSpawn(const jobject& obj) {
                
       const auto methodID = methodID__ticksBetweenSpawn();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__spawnPotentialsDefinition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "spawnPotentialsDefinition", "comp_2110", "spawnPotentialsDefinition", "f_303733_"), "()Lbpb;");
    }

    static jobject _spawnPotentialsDefinition(const jobject& obj) {
                
       const auto methodID = methodID__spawnPotentialsDefinition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__lootTablesToEject() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "lootTablesToEject", "comp_2111", "lootTablesToEject", "f_302816_"), "()Lbpb;");
    }

    static jobject _lootTablesToEject(const jobject& obj) {
                
       const auto methodID = methodID__lootTablesToEject();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__itemsToDropWhenOminous() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "itemsToDropWhenOminous", "comp_2552", "itemsToDropWhenOminous", "f_315702_"), "()Lakq;");
    }

    static jobject _itemsToDropWhenOminous(const jobject& obj) {
                
       const auto methodID = methodID__itemsToDropWhenOminous();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_SPAWNER_TRIALSPAWNERCONFIG_HPP