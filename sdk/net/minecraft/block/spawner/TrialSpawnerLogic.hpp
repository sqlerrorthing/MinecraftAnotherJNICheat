// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_SPAWNER_TRIALSPAWNERLOGIC_HPP
#define NET_MINECRAFT_BLOCK_SPAWNER_TRIALSPAWNERLOGIC_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.spawner.TrialSpawnerLogic
 * Remapped: dsf
 */
namespace TrialSpawnerLogic {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dsf", "net/minecraft/world/level/block/entity/trialspawner/TrialSpawner", "net/minecraft/class_8963", "net/minecraft/block/spawner/TrialSpawnerLogic", "net/minecraft/src/C_301982_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.spawner.TrialSpawnerLogic#NORMAL_CONFIG_NBT_KEY
    [[maybe_unused]] static jobject get_field_NORMAL_CONFIG_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NORMAL_CONFIG_TAG_NAME", "field_50177", "NORMAL_CONFIG_NBT_KEY", "f_316473_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.spawner.TrialSpawnerLogic#NORMAL_CONFIG_NBT_KEY
    [[maybe_unused]] static void set_field_NORMAL_CONFIG_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NORMAL_CONFIG_TAG_NAME", "field_50177", "NORMAL_CONFIG_NBT_KEY", "f_316473_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.spawner.TrialSpawnerLogic#OMINOUS_CONFIG_NBT_KEY
    [[maybe_unused]] static jobject get_field_OMINOUS_CONFIG_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "OMINOUS_CONFIG_TAG_NAME", "field_50178", "OMINOUS_CONFIG_NBT_KEY", "f_314681_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.spawner.TrialSpawnerLogic#OMINOUS_CONFIG_NBT_KEY
    [[maybe_unused]] static void set_field_OMINOUS_CONFIG_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "OMINOUS_CONFIG_TAG_NAME", "field_50178", "OMINOUS_CONFIG_NBT_KEY", "f_314681_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.spawner.TrialSpawnerLogic#field_47358
    [[maybe_unused]] static jint get_field_field_47358() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DETECT_PLAYER_SPAWN_BUFFER", "field_47358", "field_47358", "f_302637_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.spawner.TrialSpawnerLogic#field_47358
    [[maybe_unused]] static void set_field_field_47358(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DETECT_PLAYER_SPAWN_BUFFER", "field_47358", "field_47358", "f_302637_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#field_50179
    [[maybe_unused]] static jint get_field_field_50179() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_TARGET_COOLDOWN_LENGTH", "field_50179", "field_50179", "f_316421_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#field_50179
    [[maybe_unused]] static void set_field_field_50179(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_TARGET_COOLDOWN_LENGTH", "field_50179", "field_50179", "f_316421_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#field_50180
    [[maybe_unused]] static jint get_field_field_50180() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DEFAULT_PLAYER_SCAN_RANGE", "field_50180", "field_50180", "f_315941_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#field_50180
    [[maybe_unused]] static void set_field_field_50180(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DEFAULT_PLAYER_SCAN_RANGE", "field_50180", "field_50180", "f_315941_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#MAX_ENTITY_DISTANCE
    [[maybe_unused]] static jint get_field_MAX_ENTITY_DISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "MAX_MOB_TRACKING_DISTANCE", "field_47359", "MAX_ENTITY_DISTANCE", "f_302891_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#MAX_ENTITY_DISTANCE
    [[maybe_unused]] static void set_field_MAX_ENTITY_DISTANCE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "MAX_MOB_TRACKING_DISTANCE", "field_47359", "MAX_ENTITY_DISTANCE", "f_302891_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#MAX_ENTITY_DISTANCE_SQUARED
    [[maybe_unused]] static jint get_field_MAX_ENTITY_DISTANCE_SQUARED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MAX_MOB_TRACKING_DISTANCE_SQR", "field_47360", "MAX_ENTITY_DISTANCE_SQUARED", "f_303092_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#MAX_ENTITY_DISTANCE_SQUARED
    [[maybe_unused]] static void set_field_MAX_ENTITY_DISTANCE_SQUARED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MAX_MOB_TRACKING_DISTANCE_SQR", "field_47360", "MAX_ENTITY_DISTANCE_SQUARED", "f_303092_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#field_47361
    [[maybe_unused]] static jfloat get_field_field_47361() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SPAWNING_AMBIENT_SOUND_CHANCE", "field_47361", "field_47361", "f_302617_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#field_47361
    [[maybe_unused]] static void set_field_field_47361(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SPAWNING_AMBIENT_SOUND_CHANCE", "field_47361", "field_47361", "f_302617_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerLogic#normalConfig
    static jobject get_field_normalConfig(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "normalConfig", "field_50181", "normalConfig", "f_314388_"), "Ldsg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#normalConfig
    static void set_field_normalConfig(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "normalConfig", "field_50181", "normalConfig", "f_314388_"), "Ldsg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerLogic#ominousConfig
    static jobject get_field_ominousConfig(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "ominousConfig", "field_50182", "ominousConfig", "f_314347_"), "Ldsg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#ominousConfig
    static void set_field_ominousConfig(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "ominousConfig", "field_50182", "ominousConfig", "f_314347_"), "Ldsg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerLogic#data
    static jobject get_field_data(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "data", "field_47363", "data", "f_302910_"), "Ldsh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#data
    static void set_field_data(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "data", "field_47363", "data", "f_302910_"), "Ldsh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerLogic#entityDetectionRange
    static jint get_field_entityDetectionRange(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "requiredPlayerRange", "field_50183", "entityDetectionRange", "f_315564_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#entityDetectionRange
    static void set_field_entityDetectionRange(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "requiredPlayerRange", "field_50183", "entityDetectionRange", "f_315564_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerLogic#cooldownLength
    static jint get_field_cooldownLength(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "targetCooldownLength", "field_50184", "cooldownLength", "f_316987_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#cooldownLength
    static void set_field_cooldownLength(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "targetCooldownLength", "field_50184", "cooldownLength", "f_316987_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerLogic#trialSpawner
    static jobject get_field_trialSpawner(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "stateAccessor", "field_47364", "trialSpawner", "f_302785_"), "Ldsf$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#trialSpawner
    static void set_field_trialSpawner(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "stateAccessor", "field_47364", "trialSpawner", "f_302785_"), "Ldsf$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerLogic#entityDetector
    static jobject get_field_entityDetector(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "playerDetector", "field_47365", "entityDetector", "f_302944_"), "Ldse;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#entityDetector
    static void set_field_entityDetector(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "playerDetector", "field_47365", "entityDetector", "f_302944_"), "Ldse;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerLogic#entitySelector
    static jobject get_field_entitySelector(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "entitySelector", "field_48864", "entitySelector", "f_314166_"), "Ldse$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#entitySelector
    static void set_field_entitySelector(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "entitySelector", "field_48864", "entitySelector", "f_314166_"), "Ldse$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerLogic#forceActivate
    static jboolean get_field_forceActivate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "overridePeacefulAndMobSpawnRule", "field_47366", "forceActivate", "f_302722_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#forceActivate
    static void set_field_forceActivate(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "overridePeacefulAndMobSpawnRule", "field_47366", "forceActivate", "f_302722_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.spawner.TrialSpawnerLogic#ominous
    static jboolean get_field_ominous(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "isOminous", "field_50185", "ominous", "f_315367_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.spawner.TrialSpawnerLogic#ominous
    static void set_field_ominous(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "isOminous", "field_50185", "ominous", "f_315367_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_codec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "codec", "method_55156", "codec", "m_307687_"), "()Lcom/mojang/serialization/Codec;");
    }

    static jobject codec(const jobject& obj) {
                
       const auto methodID = methodID_codec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getConfig", "method_55170", "getConfig", "m_306177_"), "()Ldsg;");
    }

    static jobject getConfig(const jobject& obj) {
                
       const auto methodID = methodID_getConfig();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNormalConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getNormalConfig", "method_58703", "getNormalConfig", "m_319548_"), "()Ldsg;");
    }

    static jobject getNormalConfig(const jobject& obj) {
                
       const auto methodID = methodID_getNormalConfig();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOminousConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getOminousConfig", "method_58704", "getOminousConfig", "m_320710_"), "()Ldsg;");
    }

    static jobject getOminousConfig(const jobject& obj) {
                
       const auto methodID = methodID_getOminousConfig();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOminousConfigForSerialization() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getOminousConfigForSerialization", "method_58708", "getOminousConfigForSerialization", "m_324376_"), "()Ldsg;");
    }

    static jobject getOminousConfigForSerialization(const jobject& obj) {
                
       const auto methodID = methodID_getOminousConfigForSerialization();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setOminous() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyOminous", "method_58700", "setOminous", "m_324951_"), "(Laqu;Ljd;)V");
    }

    static void setOminous(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setOminous();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setNotOminous() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "removeOminous", "method_58702", "setNotOminous", "m_324138_"), "(Laqu;Ljd;)V");
    }

    static void setNotOminous(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setNotOminous();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isOminous() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isOminous", "method_58705", "isOminous", "m_322987_"), "()Z");
    }

    static jboolean isOminous(const jobject& obj) {
                
       const auto methodID = methodID_isOminous();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getData", "method_55174", "getData", "m_305472_"), "()Ldsh;");
    }

    static jobject getData(const jobject& obj) {
                
       const auto methodID = methodID_getData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCooldownLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getTargetCooldownLength", "method_58706", "getCooldownLength", "m_320388_"), "()I");
    }

    static jint getCooldownLength(const jobject& obj) {
                
       const auto methodID = methodID_getCooldownLength();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDetectionRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getRequiredPlayerRange", "method_58707", "getDetectionRadius", "m_321887_"), "()I");
    }

    static jint getDetectionRadius(const jobject& obj) {
                
       const auto methodID = methodID_getDetectionRadius();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpawnerState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getState", "method_55175", "getSpawnerState", "m_305684_"), "()Ldsi;");
    }

    static jobject getSpawnerState(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnerState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSpawnerState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setState", "method_55163", "setSpawnerState", "m_304838_"), "(Ldcw;Ldsi;)V");
    }

    static void setSpawnerState(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setSpawnerState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateListeners() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "markUpdated", "method_55176", "updateListeners", "m_306727_"), "()V");
    }

    static void updateListeners(const jobject& obj) {
                
       const auto methodID = methodID_updateListeners();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntityDetector() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getPlayerDetector", "method_55177", "getEntityDetector", "m_305791_"), "()Ldse;");
    }

    static jobject getEntityDetector(const jobject& obj) {
                
       const auto methodID = methodID_getEntityDetector();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntitySelector() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getEntitySelector", "method_56728", "getEntitySelector", "m_323449_"), "()Ldse$a;");
    }

    static jobject getEntitySelector(const jobject& obj) {
                
       const auto methodID = methodID_getEntitySelector();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canActivate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canSpawnInLevel", "method_55162", "canActivate", "m_305592_"), "(Ldcw;)Z");
    }

    static jboolean canActivate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canActivate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_trySpawnMob() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "spawnMob", "method_55158", "trySpawnMob", "m_305361_"), "(Laqu;Ljd;)Ljava/util/Optional;");
    }

    static jobject trySpawnMob(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_trySpawnMob();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_ejectLootTable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "ejectReward", "method_55159", "ejectLootTable", "m_306218_"), "(Laqu;Ljd;Lakq;)V");
    }

    static void ejectLootTable(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_ejectLootTable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_tickClient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickClient", "method_55165", "tickClient", "m_304902_"), "(Ldcw;Ljd;Z)V");
    }

    static void tickClient(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_tickClient();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_tickServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickServer", "method_55171", "tickServer", "m_306335_"), "(Laqu;Ljd;Z)V");
    }

    static void tickServer(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_tickServer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_shouldRemoveMobFromData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldMobBeUntracked", "method_55160", "shouldRemoveMobFromData", "m_306734_"), "(Laqu;Ljd;Ljava/util/UUID;)Z");
    }

    static jboolean shouldRemoveMobFromData(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_shouldRemoveMobFromData();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_hasLineOfSight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "inLineOfSight", "method_55164", "hasLineOfSight", "m_306844_"), "(Ldcw;Lexc;Lexc;)Z");
    }

    static jboolean hasLineOfSight(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_hasLineOfSight();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addMobSpawnParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addSpawnParticles", "method_55166", "addMobSpawnParticles", "m_320714_"), "(Ldcw;Ljd;Layw;Llq;)V");
    }

    static void addMobSpawnParticles(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_addMobSpawnParticles();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_addTrialOmenParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addBecomeOminousParticles", "method_58701", "addTrialOmenParticles", "m_307155_"), "(Ldcw;Ljd;Layw;)V");
    }

    static void addTrialOmenParticles(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_addTrialOmenParticles();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addDetectionParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addDetectPlayerParticles", "method_55167", "addDetectionParticles", "m_306813_"), "(Ldcw;Ljd;Layw;ILlk;)V");
    }

    static void addDetectionParticles(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_addDetectionParticles();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_addEjectItemParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "addEjectItemParticles", "method_55173", "addEjectItemParticles", "m_306726_"), "(Ldcw;Ljd;Layw;)V");
    }

    static void addEjectItemParticles(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_addEjectItemParticles();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setEntityDetector() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPlayerDetector", "method_55168", "setEntityDetector", "m_305658_"), "(Ldse;)V");
    }

    static void setEntityDetector(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setEntityDetector();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__forceActivate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "overridePeacefulAndMobSpawnRule", "method_55178", "forceActivate", "m_306621_"), "()V");
    }

    static void _forceActivate(const jobject& obj) {
                
       const auto methodID = methodID__forceActivate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_SPAWNER_TRIALSPAWNERLOGIC_HPP