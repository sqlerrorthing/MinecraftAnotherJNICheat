// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_SPAWNER_ENTITYDETECTOR$SELECTOR_HPP
#define NET_MINECRAFT_BLOCK_SPAWNER_ENTITYDETECTOR$SELECTOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.spawner.EntityDetector$Selector
 * Remapped: dse$a
 */
namespace EntityDetector$Selector {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dse$a", "net/minecraft/world/level/block/entity/trialspawner/PlayerDetector$EntitySelector", "net/minecraft/class_8962$class_9198", "net/minecraft/block/spawner/EntityDetector$Selector", "net/minecraft/src/C_302097_$C_313467_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.spawner.EntityDetector$Selector#IN_WORLD
    [[maybe_unused]] static jobject get_field_IN_WORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SELECT_FROM_LEVEL", "field_48862", "IN_WORLD", "f_315930_"), "Ldse$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.spawner.EntityDetector$Selector#IN_WORLD
    [[maybe_unused]] static void set_field_IN_WORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SELECT_FROM_LEVEL", "field_48862", "IN_WORLD", "f_315930_"), "Ldse$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPlayers", "method_56725", "getPlayers", "m_320811_"), "(Laqu;Ljava/util/function/Predicate;)Ljava/util/List;");
    }

    static jobject getPlayers(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getPlayers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntities", "method_56724", "getEntities", "m_322662_"), "(Laqu;Ldxn;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;");
    }

    static jobject getEntities(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getEntities();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_ofPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "onlySelectPlayer", "method_56726", "ofPlayer", "m_320374_"), "(Lcmx;)Ldse$a;");
    }

    static jobject ofPlayer(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_ofPlayer();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_ofPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "onlySelectPlayers", "method_56727", "ofPlayers", "m_321883_"), "(Ljava/util/List;)Ldse$a;");
    }

    static jobject ofPlayers(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_ofPlayers();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_SPAWNER_ENTITYDETECTOR$SELECTOR_HPP