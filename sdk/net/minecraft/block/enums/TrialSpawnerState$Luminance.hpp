// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENUMS_TRIALSPAWNERSTATE$LUMINANCE_HPP
#define NET_MINECRAFT_BLOCK_ENUMS_TRIALSPAWNERSTATE$LUMINANCE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.enums.TrialSpawnerState$Luminance
 * Remapped: dsi$a
 */
namespace TrialSpawnerState$Luminance {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dsi$a", "net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState$LightLevel", "net/minecraft/class_8967$class_8968", "net/minecraft/block/enums/TrialSpawnerState$Luminance", "net/minecraft/src/C_302094_$C_301991_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.enums.TrialSpawnerState$Luminance#NONE
    [[maybe_unused]] static jint get_field_NONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UNLIT", "field_47398", "NONE", "f_303256_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.enums.TrialSpawnerState$Luminance#NONE
    [[maybe_unused]] static void set_field_NONE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UNLIT", "field_47398", "NONE", "f_303256_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.enums.TrialSpawnerState$Luminance#LOW
    [[maybe_unused]] static jint get_field_LOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HALF_LIT", "field_47399", "LOW", "f_302741_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.enums.TrialSpawnerState$Luminance#LOW
    [[maybe_unused]] static void set_field_LOW(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HALF_LIT", "field_47399", "LOW", "f_302741_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.enums.TrialSpawnerState$Luminance#HIGH
    [[maybe_unused]] static jint get_field_HIGH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LIT", "field_47400", "HIGH", "f_303097_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.enums.TrialSpawnerState$Luminance#HIGH
    [[maybe_unused]] static void set_field_HIGH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LIT", "field_47400", "HIGH", "f_303097_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

};

#endif // NET_MINECRAFT_BLOCK_ENUMS_TRIALSPAWNERSTATE$LUMINANCE_HPP