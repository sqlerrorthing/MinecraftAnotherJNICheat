// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_JUKEBOXBLOCKENTITY_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_JUKEBOXBLOCKENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.JukeboxBlockEntity
 * Remapped: drj
 */
namespace JukeboxBlockEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("drj", "net/minecraft/world/level/block/entity/JukeboxBlockEntity", "net/minecraft/class_2619", "net/minecraft/block/entity/JukeboxBlockEntity", "net/minecraft/src/C_2015_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.entity.JukeboxBlockEntity#RECORD_ITEM_NBT_KEY
    [[maybe_unused]] static jobject get_field_RECORD_ITEM_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SONG_ITEM_TAG_ID", "field_52064", "RECORD_ITEM_NBT_KEY", "f_337261_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.JukeboxBlockEntity#RECORD_ITEM_NBT_KEY
    [[maybe_unused]] static void set_field_RECORD_ITEM_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SONG_ITEM_TAG_ID", "field_52064", "RECORD_ITEM_NBT_KEY", "f_337261_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.JukeboxBlockEntity#TICKS_SINCE_SONG_STARTED_NBT_KEY
    [[maybe_unused]] static jobject get_field_TICKS_SINCE_SONG_STARTED_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TICKS_SINCE_SONG_STARTED_TAG_ID", "field_52065", "TICKS_SINCE_SONG_STARTED_NBT_KEY", "f_336741_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.JukeboxBlockEntity#TICKS_SINCE_SONG_STARTED_NBT_KEY
    [[maybe_unused]] static void set_field_TICKS_SINCE_SONG_STARTED_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TICKS_SINCE_SONG_STARTED_TAG_ID", "field_52065", "TICKS_SINCE_SONG_STARTED_NBT_KEY", "f_336741_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.JukeboxBlockEntity#recordStack
    static jobject get_field_recordStack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "item", "field_46507", "recordStack", "f_303331_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.JukeboxBlockEntity#recordStack
    static void set_field_recordStack(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "item", "field_46507", "recordStack", "f_303331_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.JukeboxBlockEntity#manager
    static jobject get_field_manager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "jukeboxSongPlayer", "field_52066", "manager", "f_337052_"), "Lcuw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.JukeboxBlockEntity#manager
    static void set_field_manager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "jukeboxSongPlayer", "field_52066", "manager", "f_337052_"), "Lcuw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getSongPlayer", "method_60784", "getManager", "m_338555_"), "()Lcuw;");
    }

    static jobject getManager(const jobject& obj) {
                
       const auto methodID = methodID_getManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onManagerChange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "onSongChanged", "method_60785", "onManagerChange", "m_338418_"), "()V");
    }

    static void onManagerChange(const jobject& obj) {
                
       const auto methodID = methodID_onManagerChange();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onRecordStackChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "notifyItemChangedInJukebox", "method_60782", "onRecordStackChanged", "m_269320_"), "(Z)V");
    }

    static void onRecordStackChanged(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_onRecordStackChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dropRecord() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "popOutTheItem", "method_49213", "dropRecord", "m_272252_"), "()V");
    }

    static void dropRecord(const jobject& obj) {
                
       const auto methodID = methodID_dropRecord();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_44370", "tick", "m_272276_"), "(Ldcw;Ljd;Ldtc;Ldrj;)V");
    }

    static void tick(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getComparatorOutput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "getComparatorOutput", "method_60992", "getComparatorOutput", "m_340269_"), "()I");
    }

    static jint getComparatorOutput(const jobject& obj) {
                
       const auto methodID = methodID_getComparatorOutput();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAdditional", "method_11014", "readNbt", "m_318667_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveAdditional", "method_11007", "writeNbt", "m_183515_"), "(Lub;Ljo$a;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getTheItem", "method_54079", "getStack", "m_306082_"), "()Lcuq;");
    }

    static jobject getStack(const jobject& obj) {
                
       const auto methodID = methodID_getStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_decreaseStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "splitTheItem", "method_54078", "decreaseStack", "m_305214_"), "(I)Lcuq;");
    }

    static jobject decreaseStack(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_decreaseStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setTheItem", "method_54077", "setStack", "m_305072_"), "(Lcuq;)V");
    }

    static void setStack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMaxCountPerStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("al_", "getMaxStackSize", "method_5444", "getMaxCountPerStack", "m_6893_"), "()I");
    }

    static jint getMaxCountPerStack(const jobject& obj) {
                
       const auto methodID = methodID_getMaxCountPerStack();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_asBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getContainerBlockEntity", "method_54080", "asBlockEntity", "m_304707_"), "()Ldqh;");
    }

    static jobject asBlockEntity(const jobject& obj) {
                
       const auto methodID = methodID_asBlockEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canPlaceItem", "method_5437", "isValid", "m_7013_"), "(ILcuq;)Z");
    }

    static jboolean isValid(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isValid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canTransferTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canTakeItem", "method_49104", "canTransferTo", "m_271862_"), "(Lbqk;ILcuq;)Z");
    }

    static jboolean canTransferTo(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_canTransferTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setDisc() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setSongItemWithoutPlaying", "method_49210", "setDisc", "m_339691_"), "(Lcuq;)V");
    }

    static void setDisc(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDisc();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_reloadDisc() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "tryForcePlaySong", "method_60786", "reloadDisc", "m_340133_"), "()V");
    }

    static void reloadDisc(const jobject& obj) {
                
       const auto methodID = methodID_reloadDisc();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_JUKEBOXBLOCKENTITY_HPP