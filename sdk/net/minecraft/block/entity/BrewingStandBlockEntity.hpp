// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_BREWINGSTANDBLOCKENTITY_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_BREWINGSTANDBLOCKENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.BrewingStandBlockEntity
 * Remapped: dqk
 */
namespace BrewingStandBlockEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dqk", "net/minecraft/world/level/block/entity/BrewingStandBlockEntity", "net/minecraft/class_2589", "net/minecraft/block/entity/BrewingStandBlockEntity", "net/minecraft/src/C_1994_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#INPUT_SLOT_INDEX
    [[maybe_unused]] static jint get_field_INPUT_SLOT_INDEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "INGREDIENT_SLOT", "field_31328", "INPUT_SLOT_INDEX", "f_155280_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#INPUT_SLOT_INDEX
    [[maybe_unused]] static void set_field_INPUT_SLOT_INDEX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "INGREDIENT_SLOT", "field_31328", "INPUT_SLOT_INDEX", "f_155280_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#FUEL_SLOT_INDEX
    [[maybe_unused]] static jint get_field_FUEL_SLOT_INDEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "FUEL_SLOT", "field_31329", "FUEL_SLOT_INDEX", "f_155281_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#FUEL_SLOT_INDEX
    [[maybe_unused]] static void set_field_FUEL_SLOT_INDEX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "FUEL_SLOT", "field_31329", "FUEL_SLOT_INDEX", "f_155281_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#TOP_SLOTS
    [[maybe_unused]] static jint get_field_TOP_SLOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SLOTS_FOR_UP", "field_11886", "TOP_SLOTS", "f_58972_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#TOP_SLOTS
    [[maybe_unused]] static void set_field_TOP_SLOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SLOTS_FOR_UP", "field_11886", "TOP_SLOTS", "f_58972_"), "[I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#BOTTOM_SLOTS
    [[maybe_unused]] static jint get_field_BOTTOM_SLOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SLOTS_FOR_DOWN", "field_11879", "BOTTOM_SLOTS", "f_58973_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#BOTTOM_SLOTS
    [[maybe_unused]] static void set_field_BOTTOM_SLOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SLOTS_FOR_DOWN", "field_11879", "BOTTOM_SLOTS", "f_58973_"), "[I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#SIDE_SLOTS
    [[maybe_unused]] static jint get_field_SIDE_SLOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SLOTS_FOR_SIDES", "field_11880", "SIDE_SLOTS", "f_58974_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#SIDE_SLOTS
    [[maybe_unused]] static void set_field_SIDE_SLOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SLOTS_FOR_SIDES", "field_11880", "SIDE_SLOTS", "f_58974_"), "[I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BrewingStandBlockEntity#MAX_FUEL_USES
    [[maybe_unused]] static jint get_field_MAX_FUEL_USES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FUEL_USES", "field_31324", "MAX_FUEL_USES", "f_155276_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BrewingStandBlockEntity#MAX_FUEL_USES
    [[maybe_unused]] static void set_field_MAX_FUEL_USES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FUEL_USES", "field_31324", "MAX_FUEL_USES", "f_155276_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BrewingStandBlockEntity#BREW_TIME_PROPERTY_INDEX
    [[maybe_unused]] static jint get_field_BREW_TIME_PROPERTY_INDEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DATA_BREW_TIME", "field_31325", "BREW_TIME_PROPERTY_INDEX", "f_155277_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BrewingStandBlockEntity#BREW_TIME_PROPERTY_INDEX
    [[maybe_unused]] static void set_field_BREW_TIME_PROPERTY_INDEX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DATA_BREW_TIME", "field_31325", "BREW_TIME_PROPERTY_INDEX", "f_155277_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BrewingStandBlockEntity#FUEL_PROPERTY_INDEX
    [[maybe_unused]] static jint get_field_FUEL_PROPERTY_INDEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_FUEL_USES", "field_31326", "FUEL_PROPERTY_INDEX", "f_155278_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BrewingStandBlockEntity#FUEL_PROPERTY_INDEX
    [[maybe_unused]] static void set_field_FUEL_PROPERTY_INDEX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_FUEL_USES", "field_31326", "FUEL_PROPERTY_INDEX", "f_155278_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BrewingStandBlockEntity#PROPERTY_COUNT
    [[maybe_unused]] static jint get_field_PROPERTY_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NUM_DATA_VALUES", "field_31327", "PROPERTY_COUNT", "f_155279_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BrewingStandBlockEntity#PROPERTY_COUNT
    [[maybe_unused]] static void set_field_PROPERTY_COUNT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NUM_DATA_VALUES", "field_31327", "PROPERTY_COUNT", "f_155279_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BrewingStandBlockEntity#inventory
    static jobject get_field_inventory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "items", "field_11882", "inventory", "f_58975_"), "Ljv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#inventory
    static void set_field_inventory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "items", "field_11882", "inventory", "f_58975_"), "Ljv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.block.entity.BrewingStandBlockEntity#brewTime
    static jint get_field_brewTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "brewTime", "field_11878", "brewTime", "f_58976_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.block.entity.BrewingStandBlockEntity#brewTime
    static void set_field_brewTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "brewTime", "field_11878", "brewTime", "f_58976_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BrewingStandBlockEntity#slotsEmptyLastTick
    static jboolean get_field_slotsEmptyLastTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "lastPotionCount", "field_11883", "slotsEmptyLastTick", "f_58977_"), "[Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#slotsEmptyLastTick
    static void set_field_slotsEmptyLastTick(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "lastPotionCount", "field_11883", "slotsEmptyLastTick", "f_58977_"), "[Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BrewingStandBlockEntity#itemBrewing
    static jobject get_field_itemBrewing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "ingredient", "field_11881", "itemBrewing", "f_58978_"), "Lcul;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrewingStandBlockEntity#itemBrewing
    static void set_field_itemBrewing(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "ingredient", "field_11881", "itemBrewing", "f_58978_"), "Lcul;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.block.entity.BrewingStandBlockEntity#fuel
    static jint get_field_fuel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "fuel", "field_11885", "fuel", "f_58979_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.block.entity.BrewingStandBlockEntity#fuel
    static void set_field_fuel(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "fuel", "field_11885", "fuel", "f_58979_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.block.entity.BrewingStandBlockEntity#propertyDelegate
    static jobject get_field_propertyDelegate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "dataAccess", "field_17381", "propertyDelegate", "f_58971_"), "Lcqf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.block.entity.BrewingStandBlockEntity#propertyDelegate
    static void set_field_propertyDelegate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "dataAccess", "field_17381", "propertyDelegate", "f_58971_"), "Lcqf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getContainerName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getDefaultName", "method_17823", "getContainerName", "m_6820_"), "()Lwz;");
    }

    static jobject getContainerName(const jobject& obj) {
                
       const auto methodID = methodID_getContainerName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_size() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getContainerSize", "method_5439", "size", "m_6643_"), "()I");
    }

    static jint size(const jobject& obj) {
                
       const auto methodID = methodID_size();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeldStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getItems", "method_11282", "getHeldStacks", "m_58617_"), "()Ljv;");
    }

    static jobject getHeldStacks(const jobject& obj) {
                
       const auto methodID = methodID_getHeldStacks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHeldStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItems", "method_11281", "setHeldStacks", "m_58609_"), "(Ljv;)V");
    }

    static void setHeldStacks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setHeldStacks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "serverTick", "method_31665", "tick", "m_155285_"), "(Ldcw;Ljd;Ldtc;Ldqk;)V");
    }

    static void tick(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getSlotsEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getPotionBits", "method_11028", "getSlotsEmpty", "m_59029_"), "()[Z");
    }

    static jboolean getSlotsEmpty(const jobject& obj) {
                
       const auto methodID = methodID_getSlotsEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canCraft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isBrewable", "method_11027", "canCraft", "m_155294_"), "(Lcwt;Ljv;)Z");
    }

    static jboolean canCraft(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canCraft();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_craft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "doBrew", "method_11029", "craft", "m_155290_"), "(Ldcw;Ljd;Ljv;)V");
    }

    static void craft(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_craft();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAdditional", "method_11014", "readNbt", "m_318667_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveAdditional", "method_11007", "writeNbt", "m_183515_"), "(Lub;Ljo$a;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canPlaceItem", "method_5437", "isValid", "m_7013_"), "(ILcuq;)Z");
    }

    static jboolean isValid(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isValid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getAvailableSlots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSlotsForFace", "method_5494", "getAvailableSlots", "m_7071_"), "(Lji;)[I");
    }

    static jint getAvailableSlots(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAvailableSlots();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canInsert() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canPlaceItemThroughFace", "method_5492", "canInsert", "m_7155_"), "(ILcuq;Lji;)Z");
    }

    static jboolean canInsert(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_canInsert();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_canExtract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canTakeItemThroughFace", "method_5493", "canExtract", "m_7157_"), "(ILcuq;Lji;)Z");
    }

    static jboolean canExtract(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_canExtract();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createScreenHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createMenu", "method_5465", "createScreenHandler", "m_6555_"), "(ILcmw;)Lcpu;");
    }

    static jobject createScreenHandler(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createScreenHandler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_BREWINGSTANDBLOCKENTITY_HPP