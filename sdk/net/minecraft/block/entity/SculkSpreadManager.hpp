// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_SCULKSPREADMANAGER_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_SCULKSPREADMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.SculkSpreadManager
 * Remapped: dmu
 */
namespace SculkSpreadManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dmu", "net/minecraft/world/level/block/SculkSpreader", "net/minecraft/class_7128", "net/minecraft/block/entity/SculkSpreadManager", "net/minecraft/src/C_213114_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.entity.SculkSpreadManager#field_37609
    [[maybe_unused]] static jint get_field_field_37609() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_GROWTH_RATE_RADIUS", "field_37609", "field_37609", "f_222233_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.SculkSpreadManager#field_37609
    [[maybe_unused]] static void set_field_field_37609(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_GROWTH_RATE_RADIUS", "field_37609", "field_37609", "f_222233_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.SculkSpreadManager#MAX_CHARGE
    [[maybe_unused]] static jint get_field_MAX_CHARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_CHARGE", "field_37610", "MAX_CHARGE", "f_222234_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.SculkSpreadManager#MAX_CHARGE
    [[maybe_unused]] static void set_field_MAX_CHARGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_CHARGE", "field_37610", "MAX_CHARGE", "f_222234_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.SculkSpreadManager#field_37611
    [[maybe_unused]] static jfloat get_field_field_37611() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_DECAY_FACTOR", "field_37611", "field_37611", "f_222235_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.SculkSpreadManager#field_37611
    [[maybe_unused]] static void set_field_field_37611(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_DECAY_FACTOR", "field_37611", "field_37611", "f_222235_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.SculkSpreadManager#MAX_CURSORS
    [[maybe_unused]] static jint get_field_MAX_CURSORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAX_CURSORS", "field_37613", "MAX_CURSORS", "f_222237_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSpreadManager#MAX_CURSORS
    [[maybe_unused]] static void set_field_MAX_CURSORS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAX_CURSORS", "field_37613", "MAX_CURSORS", "f_222237_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.SculkSpreadManager#field_37612
    [[maybe_unused]] static jint get_field_field_37612() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SHRIEKER_PLACEMENT_RATE", "field_37612", "field_37612", "f_222236_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.SculkSpreadManager#field_37612
    [[maybe_unused]] static void set_field_field_37612(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SHRIEKER_PLACEMENT_RATE", "field_37612", "field_37612", "f_222236_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.block.entity.SculkSpreadManager#worldGen
    static jboolean get_field_worldGen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "isWorldGeneration", "field_37614", "worldGen", "f_222238_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.block.entity.SculkSpreadManager#worldGen
    static void set_field_worldGen(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "isWorldGeneration", "field_37614", "worldGen", "f_222238_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SculkSpreadManager#replaceableTag
    static jobject get_field_replaceableTag(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "replaceableBlocks", "field_37615", "replaceableTag", "f_222239_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSpreadManager#replaceableTag
    static void set_field_replaceableTag(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "replaceableBlocks", "field_37615", "replaceableTag", "f_222239_"), "Lawu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SculkSpreadManager#extraBlockChance
    static jint get_field_extraBlockChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "growthSpawnCost", "field_37616", "extraBlockChance", "f_222240_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSpreadManager#extraBlockChance
    static void set_field_extraBlockChance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "growthSpawnCost", "field_37616", "extraBlockChance", "f_222240_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SculkSpreadManager#maxDistance
    static jint get_field_maxDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "noGrowthRadius", "field_37617", "maxDistance", "f_222241_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSpreadManager#maxDistance
    static void set_field_maxDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "noGrowthRadius", "field_37617", "maxDistance", "f_222241_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SculkSpreadManager#spreadChance
    static jint get_field_spreadChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "chargeDecayRate", "field_37618", "spreadChance", "f_222242_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSpreadManager#spreadChance
    static void set_field_spreadChance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "chargeDecayRate", "field_37618", "spreadChance", "f_222242_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SculkSpreadManager#decayChance
    static jint get_field_decayChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "additionalDecayRate", "field_37619", "decayChance", "f_222243_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSpreadManager#decayChance
    static void set_field_decayChance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "additionalDecayRate", "field_37619", "decayChance", "f_222243_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SculkSpreadManager#cursors
    static jobject get_field_cursors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "cursors", "field_37620", "cursors", "f_222244_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSpreadManager#cursors
    static void set_field_cursors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "cursors", "field_37620", "cursors", "f_222244_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.SculkSpreadManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "LOGGER", "field_37621", "LOGGER", "f_222245_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSpreadManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "LOGGER", "field_37621", "LOGGER", "f_222245_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createLevelSpreader", "method_41478", "create", "m_222254_"), "()Ldmu;");
    }

    static jobject create() {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createWorldGen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createWorldGenSpreader", "method_41485", "createWorldGen", "m_222274_"), "()Ldmu;");
    }

    static jobject createWorldGen() {
       const auto clazz = self();
       const auto methodID = methodID_createWorldGen();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getReplaceableTag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "replaceableBlocks", "method_41487", "getReplaceableTag", "m_222277_"), "()Lawu;");
    }

    static jobject getReplaceableTag(const jobject& obj) {
                
       const auto methodID = methodID_getReplaceableTag();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getExtraBlockChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "growthSpawnCost", "method_41488", "getExtraBlockChance", "m_222278_"), "()I");
    }

    static jint getExtraBlockChance(const jobject& obj) {
                
       const auto methodID = methodID_getExtraBlockChance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "noGrowthRadius", "method_41489", "getMaxDistance", "m_222279_"), "()I");
    }

    static jint getMaxDistance(const jobject& obj) {
                
       const auto methodID = methodID_getMaxDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpreadChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "chargeDecayRate", "method_41490", "getSpreadChance", "m_222280_"), "()I");
    }

    static jint getSpreadChance(const jobject& obj) {
                
       const auto methodID = methodID_getSpreadChance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDecayChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "additionalDecayRate", "method_41491", "getDecayChance", "m_222281_"), "()I");
    }

    static jint getDecayChance(const jobject& obj) {
                
       const auto methodID = methodID_getDecayChance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isWorldGen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "isWorldGeneration", "method_41492", "isWorldGen", "m_222282_"), "()Z");
    }

    static jboolean isWorldGen(const jobject& obj) {
                
       const auto methodID = methodID_isWorldGen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCursors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getCursors", "method_41493", "getCursors", "m_222283_"), "()Ljava/util/List;");
    }

    static jobject getCursors(const jobject& obj) {
                
       const auto methodID = methodID_getCursors();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_clearCursors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "clear", "method_41494", "clearCursors", "m_222284_"), "()V");
    }

    static void clearCursors(const jobject& obj) {
                
       const auto methodID = methodID_clearCursors();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_41483", "readNbt", "m_222269_"), "(Lub;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "save", "method_41486", "writeNbt", "m_222275_"), "(Lub;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_spread() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addCursors", "method_41482", "spread", "m_222266_"), "(Ljd;I)V");
    }

    static void spread(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_spread();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addCursor", "method_41480", "addCursor", "m_222260_"), "(Ldmu$a;)V");
    }

    static void addCursor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addCursor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateCursors", "method_41479", "tick", "m_222255_"), "(Ldcx;Ljd;Layw;Z)V");
    }

    static void tick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_SCULKSPREADMANAGER_HPP