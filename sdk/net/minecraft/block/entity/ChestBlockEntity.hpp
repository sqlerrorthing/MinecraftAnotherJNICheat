// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_CHESTBLOCKENTITY_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_CHESTBLOCKENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.ChestBlockEntity
 * Remapped: dqo
 */
namespace ChestBlockEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dqo", "net/minecraft/world/level/block/entity/ChestBlockEntity", "net/minecraft/class_2595", "net/minecraft/block/entity/ChestBlockEntity", "net/minecraft/src/C_1997_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.entity.ChestBlockEntity#VIEWER_COUNT_UPDATE_EVENT_TYPE
    [[maybe_unused]] static jint get_field_VIEWER_COUNT_UPDATE_EVENT_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "EVENT_SET_OPEN_COUNT", "field_31332", "VIEWER_COUNT_UPDATE_EVENT_TYPE", "f_155323_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.ChestBlockEntity#VIEWER_COUNT_UPDATE_EVENT_TYPE
    [[maybe_unused]] static void set_field_VIEWER_COUNT_UPDATE_EVENT_TYPE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "EVENT_SET_OPEN_COUNT", "field_31332", "VIEWER_COUNT_UPDATE_EVENT_TYPE", "f_155323_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.ChestBlockEntity#inventory
    static jobject get_field_inventory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "items", "field_11927", "inventory", "f_59073_"), "Ljv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.ChestBlockEntity#inventory
    static void set_field_inventory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "items", "field_11927", "inventory", "f_59073_"), "Ljv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.ChestBlockEntity#stateManager
    static jobject get_field_stateManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "openersCounter", "field_27209", "stateManager", "f_155324_"), "Ldqu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.ChestBlockEntity#stateManager
    static void set_field_stateManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "openersCounter", "field_27209", "stateManager", "f_155324_"), "Ldqu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.ChestBlockEntity#lidAnimator
    static jobject get_field_lidAnimator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "chestLidController", "field_27210", "lidAnimator", "f_155325_"), "Ldqp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.ChestBlockEntity#lidAnimator
    static void set_field_lidAnimator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "chestLidController", "field_27210", "lidAnimator", "f_155325_"), "Ldqp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_size() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getContainerSize", "method_5439", "size", "m_6643_"), "()I");
    }

    static jint size(const jobject& obj) {
                
       const auto methodID = methodID_size();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getContainerName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getDefaultName", "method_17823", "getContainerName", "m_6820_"), "()Lwz;");
    }

    static jobject getContainerName(const jobject& obj) {
                
       const auto methodID = methodID_getContainerName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAdditional", "method_11014", "readNbt", "m_318667_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveAdditional", "method_11007", "writeNbt", "m_183515_"), "(Lub;Ljo$a;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_clientTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "lidAnimateTick", "method_31670", "clientTick", "m_155343_"), "(Ldcw;Ljd;Ldtc;Ldqo;)V");
    }

    static void clientTick(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_clientTick();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_playSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "playSound", "method_11050", "playSound", "m_155338_"), "(Ldcw;Ljd;Ldtc;Lavo;)V");
    }

    static void playSound(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_playSound();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onSyncedBlockEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "triggerEvent", "method_11004", "onSyncedBlockEvent", "m_7531_"), "(II)Z");
    }

    static jboolean onSyncedBlockEvent(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_onSyncedBlockEvent();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d_", "startOpen", "method_5435", "onOpen", "m_5856_"), "(Lcmx;)V");
    }

    static void onOpen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onOpen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onClose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "stopOpen", "method_5432", "onClose", "m_5785_"), "(Lcmx;)V");
    }

    static void onClose(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onClose();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHeldStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getItems", "method_11282", "getHeldStacks", "m_58617_"), "()Ljv;");
    }

    static jobject getHeldStacks(const jobject& obj) {
                
       const auto methodID = methodID_getHeldStacks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHeldStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItems", "method_11281", "setHeldStacks", "m_58609_"), "(Ljv;)V");
    }

    static void setHeldStacks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setHeldStacks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAnimationProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOpenNess", "method_11274", "getAnimationProgress", "m_6683_"), "(F)F");
    }

    static jfloat getAnimationProgress(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getAnimationProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPlayersLookingInChestCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getOpenCount", "method_11048", "getPlayersLookingInChestCount", "m_59086_"), "(Ldcc;Ljd;)I");
    }

    static jint getPlayersLookingInChestCount(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getPlayersLookingInChestCount();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_copyInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "swapContents", "method_11047", "copyInventory", "m_59103_"), "(Ldqo;Ldqo;)V");
    }

    static void copyInventory(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_copyInventory();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createScreenHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createMenu", "method_5465", "createScreenHandler", "m_6555_"), "(ILcmw;)Lcpu;");
    }

    static jobject createScreenHandler(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createScreenHandler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onScheduledTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "recheckOpen", "method_31671", "onScheduledTick", "m_155350_"), "()V");
    }

    static void onScheduledTick(const jobject& obj) {
                
       const auto methodID = methodID_onScheduledTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onViewerCountUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "signalOpenCount", "method_11049", "onViewerCountUpdate", "m_142151_"), "(Ldcw;Ljd;Ldtc;II)V");
    }

    static void onViewerCountUpdate(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_onViewerCountUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_CHESTBLOCKENTITY_HPP