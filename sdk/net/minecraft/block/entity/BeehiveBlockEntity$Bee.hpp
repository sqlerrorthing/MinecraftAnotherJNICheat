// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_BEEHIVEBLOCKENTITY$BEE_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_BEEHIVEBLOCKENTITY$BEE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.BeehiveBlockEntity$Bee
 * Remapped: dqe$a
 */
namespace BeehiveBlockEntity$Bee {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dqe$a", "net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData", "net/minecraft/class_4482$class_4483", "net/minecraft/block/entity/BeehiveBlockEntity$Bee", "net/minecraft/src/C_1985_$C_1987_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.block.entity.BeehiveBlockEntity$Bee#data
    static jobject get_field_data(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "occupant", "field_49410", "data", "f_314157_"), "Ldqe$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BeehiveBlockEntity$Bee#data
    static void set_field_data(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "occupant", "field_49410", "data", "f_314157_"), "Ldqe$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BeehiveBlockEntity$Bee#ticksInHive
    static jint get_field_ticksInHive(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "ticksInHive", "field_20426", "ticksInHive", "f_58783_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BeehiveBlockEntity$Bee#ticksInHive
    static void set_field_ticksInHive(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "ticksInHive", "field_20426", "ticksInHive", "f_58783_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_canExitHive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_57581", "canExitHive", "m_320808_"), "()Z");
    }

    static jboolean canExitHive(const jobject& obj) {
                
       const auto methodID = methodID_canExitHive();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_createData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "toOccupant", "method_57582", "createData", "m_323874_"), "()Ldqe$c;");
    }

    static jobject createData(const jobject& obj) {
                
       const auto methodID = methodID_createData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasNectar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "hasNectar", "method_57583", "hasNectar", "m_322251_"), "()Z");
    }

    static jboolean hasNectar(const jobject& obj) {
                
       const auto methodID = methodID_hasNectar();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_BEEHIVEBLOCKENTITY$BEE_HPP