// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_SCULKSENSORBLOCKENTITY_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_SCULKSENSORBLOCKENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.SculkSensorBlockEntity
 * Remapped: drp
 */
namespace SculkSensorBlockEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("drp", "net/minecraft/world/level/block/entity/SculkSensorBlockEntity", "net/minecraft/class_5704", "net/minecraft/block/entity/SculkSensorBlockEntity", "net/minecraft/src/C_141250_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.entity.SculkSensorBlockEntity#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_38236", "LOGGER", "f_222794_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSensorBlockEntity#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_38236", "LOGGER", "f_222794_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SculkSensorBlockEntity#listenerData
    static jobject get_field_listenerData(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "vibrationData", "field_44615", "listenerData", "f_279553_"), "Ldyi$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSensorBlockEntity#listenerData
    static void set_field_listenerData(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "vibrationData", "field_44615", "listenerData", "f_279553_"), "Ldyi$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SculkSensorBlockEntity#listener
    static jobject get_field_listener(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "vibrationListener", "field_28118", "listener", "f_279626_"), "Ldyi$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSensorBlockEntity#listener
    static void set_field_listener(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "vibrationListener", "field_28118", "listener", "f_279626_"), "Ldyi$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SculkSensorBlockEntity#callback
    static jobject get_field_callback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "vibrationUser", "field_43291", "callback", "f_279572_"), "Ldyi$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSensorBlockEntity#callback
    static void set_field_callback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "vibrationUser", "field_43291", "callback", "f_279572_"), "Ldyi$d;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SculkSensorBlockEntity#lastVibrationFrequency
    static jint get_field_lastVibrationFrequency(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "lastVibrationFrequency", "field_28119", "lastVibrationFrequency", "f_155633_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SculkSensorBlockEntity#lastVibrationFrequency
    static void set_field_lastVibrationFrequency(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "lastVibrationFrequency", "field_28119", "lastVibrationFrequency", "f_155633_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_createCallback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createVibrationUser", "method_49831", "createCallback", "m_280175_"), "()Ldyi$d;");
    }

    static jobject createCallback(const jobject& obj) {
                
       const auto methodID = methodID_createCallback();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAdditional", "method_11014", "readNbt", "m_318667_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveAdditional", "method_11007", "writeNbt", "m_183515_"), "(Lub;Ljo$a;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getVibrationListenerData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "getVibrationData", "method_51298", "getVibrationListenerData", "m_280002_"), "()Ldyi$a;");
    }

    static jobject getVibrationListenerData(const jobject& obj) {
                
       const auto methodID = methodID_getVibrationListenerData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVibrationCallback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gn", "getVibrationUser", "method_51299", "getVibrationCallback", "m_280445_"), "()Ldyi$d;");
    }

    static jobject getVibrationCallback(const jobject& obj) {
                
       const auto methodID = methodID_getVibrationCallback();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLastVibrationFrequency() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getLastVibrationFrequency", "method_32912", "getLastVibrationFrequency", "m_155656_"), "()I");
    }

    static jint getLastVibrationFrequency(const jobject& obj) {
                
       const auto methodID = methodID_getLastVibrationFrequency();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setLastVibrationFrequency() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLastVibrationFrequency", "method_44213", "setLastVibrationFrequency", "m_222800_"), "(I)V");
    }

    static void setLastVibrationFrequency(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setLastVibrationFrequency();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEventListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getListener", "method_32911", "getEventListener", "m_280221_"), "()Ldyi$b;");
    }

    static jobject getEventListener(const jobject& obj) {
                
       const auto methodID = methodID_getEventListener();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_SCULKSENSORBLOCKENTITY_HPP