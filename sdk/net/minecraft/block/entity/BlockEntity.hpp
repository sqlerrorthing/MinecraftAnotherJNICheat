// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_BLOCKENTITY_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_BLOCKENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.BlockEntity
 * Remapped: dqh
 */
namespace BlockEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dqh", "net/minecraft/world/level/block/entity/BlockEntity", "net/minecraft/class_2586", "net/minecraft/block/entity/BlockEntity", "net/minecraft/src/C_1991_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.entity.BlockEntity#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LOGGER", "field_11868", "LOGGER", "f_58854_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BlockEntity#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LOGGER", "field_11868", "LOGGER", "f_58854_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BlockEntity#type
    static jobject get_field_type(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "type", "field_11864", "type", "f_58855_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BlockEntity#type
    static void set_field_type(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "type", "field_11864", "type", "f_58855_"), "Ldqj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.block.entity.BlockEntity#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "level", "field_11863", "world", "f_58857_"), "Ldcw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.block.entity.BlockEntity#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "level", "field_11863", "world", "f_58857_"), "Ldcw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.block.entity.BlockEntity#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "worldPosition", "field_11867", "pos", "f_58858_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.block.entity.BlockEntity#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "worldPosition", "field_11867", "pos", "f_58858_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.block.entity.BlockEntity#removed
    static jboolean get_field_removed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "remove", "field_11865", "removed", "f_58859_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.block.entity.BlockEntity#removed
    static void set_field_removed(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "remove", "field_11865", "removed", "f_58859_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BlockEntity#cachedState
    static jobject get_field_cachedState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "blockState", "field_11866", "cachedState", "f_58856_"), "Ldtc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BlockEntity#cachedState
    static void set_field_cachedState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "blockState", "field_11866", "cachedState", "f_58856_"), "Ldtc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BlockEntity#components
    static jobject get_field_components(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "components", "field_50172", "components", "f_314183_"), "Lkm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BlockEntity#components
    static void set_field_components(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "components", "field_50172", "components", "f_314183_"), "Lkm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_posFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getPosFromTag", "method_38239", "posFromNbt", "m_187472_"), "(Lub;)Ljd;");
    }

    static jobject posFromNbt(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_posFromNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getLevel", "method_10997", "getWorld", "m_58904_"), "()Ldcw;");
    }

    static jobject getWorld(const jobject& obj) {
                
       const auto methodID = methodID_getWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLevel", "method_31662", "setWorld", "m_142339_"), "(Ldcw;)V");
    }

    static void setWorld(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setWorld();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "hasLevel", "method_11002", "hasWorld", "m_58898_"), "()Z");
    }

    static jboolean hasWorld(const jobject& obj) {
                
       const auto methodID = methodID_hasWorld();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAdditional", "method_11014", "readNbt", "m_318667_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_read() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "loadWithComponents", "method_58690", "read", "m_320998_"), "(Lub;Ljo$a;)V");
    }

    static void read(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_read();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readComponentlessNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "loadCustomOnly", "method_58691", "readComponentlessNbt", "m_324273_"), "(Lub;Ljo$a;)V");
    }

    static void readComponentlessNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readComponentlessNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveAdditional", "method_11007", "writeNbt", "m_183515_"), "(Lub;Ljo$a;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createNbtWithIdentifyingData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveWithFullMetadata", "method_38242", "createNbtWithIdentifyingData", "m_187480_"), "(Ljo$a;)Lub;");
    }

    static jobject createNbtWithIdentifyingData(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createNbtWithIdentifyingData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createNbtWithId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "saveWithId", "method_38243", "createNbtWithId", "m_187481_"), "(Ljo$a;)Lub;");
    }

    static jobject createNbtWithId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createNbtWithId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "saveWithoutMetadata", "method_38244", "createNbt", "m_187482_"), "(Ljo$a;)Lub;");
    }

    static jobject createNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createComponentlessNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "saveCustomOnly", "method_58692", "createComponentlessNbt", "m_320696_"), "(Ljo$a;)Lub;");
    }

    static jobject createComponentlessNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createComponentlessNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createComponentlessNbtWithIdentifyingData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "saveCustomAndMetadata", "method_59535", "createComponentlessNbtWithIdentifyingData", "m_319785_"), "(Ljo$a;)Lub;");
    }

    static jobject createComponentlessNbtWithIdentifyingData(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createComponentlessNbtWithIdentifyingData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeIdToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "saveId", "method_38241", "writeIdToNbt", "m_187474_"), "(Lub;)V");
    }

    static void writeIdToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeIdToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__writeIdToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addEntityType", "method_38238", "writeIdToNbt", "m_187468_"), "(Lub;Ldqj;)V");
    }

    static void _writeIdToNbt(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__writeIdToNbt();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setStackNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "saveToItem", "method_38240", "setStackNbt", "m_187476_"), "(Lcuq;Ljo$a;)V");
    }

    static void setStackNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setStackNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeIdentifyingData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "saveMetadata", "method_10999", "writeIdentifyingData", "m_187478_"), "(Lub;)V");
    }

    static void writeIdentifyingData(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeIdentifyingData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "loadStatic", "method_11005", "createFromNbt", "m_155241_"), "(Ljd;Ldtc;Lub;Ljo$a;)Ldqh;");
    }

    static jobject createFromNbt(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createFromNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_markDirty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setChanged", "method_5431", "markDirty", "m_6596_"), "()V");
    }

    static void markDirty(const jobject& obj) {
                
       const auto methodID = methodID_markDirty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__markDirty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setChanged", "method_31663", "markDirty", "m_155232_"), "(Ldcw;Ljd;Ldtc;)V");
    }

    static void _markDirty(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__markDirty();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aD_", "getBlockPos", "method_11016", "getPos", "m_58899_"), "()Ljd;");
    }

    static jobject getPos(const jobject& obj) {
                
       const auto methodID = methodID_getPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCachedState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getBlockState", "method_11010", "getCachedState", "m_58900_"), "()Ldtc;");
    }

    static jobject getCachedState(const jobject& obj) {
                
       const auto methodID = methodID_getCachedState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toUpdatePacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("az_", "getUpdatePacket", "method_38235", "toUpdatePacket", "m_58483_"), "()Lzg;");
    }

    static jobject toUpdatePacket(const jobject& obj) {
                
       const auto methodID = methodID_toUpdatePacket();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toInitialChunkDataNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getUpdateTag", "method_16887", "toInitialChunkDataNbt", "m_5995_"), "(Ljo$a;)Lub;");
    }

    static jobject toInitialChunkDataNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toInitialChunkDataNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isRemoved() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "isRemoved", "method_11015", "isRemoved", "m_58901_"), "()Z");
    }

    static jboolean isRemoved(const jobject& obj) {
                
       const auto methodID = methodID_isRemoved();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_markRemoved() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aA_", "setRemoved", "method_11012", "markRemoved", "m_7651_"), "()V");
    }

    static void markRemoved(const jobject& obj) {
                
       const auto methodID = methodID_markRemoved();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_cancelRemoval() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "clearRemoved", "method_10996", "cancelRemoval", "m_6339_"), "()V");
    }

    static void cancelRemoval(const jobject& obj) {
                
       const auto methodID = methodID_cancelRemoval();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onSyncedBlockEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "triggerEvent", "method_11004", "onSyncedBlockEvent", "m_7531_"), "(II)Z");
    }

    static jboolean onSyncedBlockEvent(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_onSyncedBlockEvent();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_populateCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillCrashReportCategory", "method_11003", "populateCrashReport", "m_58886_"), "(Lp;)V");
    }

    static void populateCrashReport(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_populateCrashReport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_copyItemDataRequiresOperator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "onlyOpCanSetNbt", "method_11011", "copyItemDataRequiresOperator", "m_6326_"), "()Z");
    }

    static jboolean copyItemDataRequiresOperator(const jobject& obj) {
                
       const auto methodID = methodID_copyItemDataRequiresOperator();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "getType", "method_11017", "getType", "m_58903_"), "()Ldqj;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCachedState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setBlockState", "method_31664", "setCachedState", "m_155250_"), "(Ldtc;)V");
    }

    static void setCachedState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCachedState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyImplicitComponents", "method_57568", "readComponents", "m_318741_"), "(Ldqh$b;)V");
    }

    static void readComponents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readComponents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__readComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyComponentsFromItemStack", "method_58683", "readComponents", "m_322533_"), "(Lcuq;)V");
    }

    static void _readComponents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__readComponents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___readComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyComponents", "method_58685", "readComponents", "m_322221_"), "(Lkm;Lkn;)V");
    }

    static void __readComponents(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID___readComponents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "collectImplicitComponents", "method_57567", "addComponents", "m_318837_"), "(Lkm$a;)V");
    }

    static void addComponents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addComponents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeFromCopiedStackNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeComponentsFromTag", "method_57569", "removeFromCopiedStackNbt", "m_318942_"), "(Lub;)V");
    }

    static void removeFromCopiedStackNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeFromCopiedStackNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createComponentMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "collectComponents", "method_57590", "createComponentMap", "m_321843_"), "()Lkm;");
    }

    static jobject createComponentMap(const jobject& obj) {
                
       const auto methodID = methodID_createComponentMap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "components", "method_58693", "getComponents", "m_324356_"), "()Lkm;");
    }

    static jobject getComponents(const jobject& obj) {
                
       const auto methodID = methodID_getComponents();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setComponents", "method_58684", "setComponents", "m_323608_"), "(Lkm;)V");
    }

    static void setComponents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setComponents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tryParseCustomName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseCustomNameSafe", "method_59894", "tryParseCustomName", "m_336414_"), "(Ljava/lang/String;Ljo$a;)Lwz;");
    }

    static jobject tryParseCustomName(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_tryParseCustomName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_BLOCKENTITY_HPP