// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_SHULKERBOXBLOCKENTITY_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_SHULKERBOXBLOCKENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.ShulkerBoxBlockEntity
 * Remapped: drr
 */
namespace ShulkerBoxBlockEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("drr", "net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity", "net/minecraft/class_2627", "net/minecraft/block/entity/ShulkerBoxBlockEntity", "net/minecraft/src/C_2021_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#field_31354
    [[maybe_unused]] static jint get_field_field_31354() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "COLUMNS", "field_31354", "field_31354", "f_155657_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#field_31354
    [[maybe_unused]] static void set_field_field_31354(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "COLUMNS", "field_31354", "field_31354", "f_155657_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#field_31355
    [[maybe_unused]] static jint get_field_field_31355() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ROWS", "field_31355", "field_31355", "f_155658_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#field_31355
    [[maybe_unused]] static void set_field_field_31355(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ROWS", "field_31355", "field_31355", "f_155658_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#INVENTORY_SIZE
    [[maybe_unused]] static jint get_field_INVENTORY_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CONTAINER_SIZE", "field_31356", "INVENTORY_SIZE", "f_155659_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#INVENTORY_SIZE
    [[maybe_unused]] static void set_field_INVENTORY_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CONTAINER_SIZE", "field_31356", "INVENTORY_SIZE", "f_155659_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#field_31357
    [[maybe_unused]] static jint get_field_field_31357() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "EVENT_SET_OPEN_COUNT", "field_31357", "field_31357", "f_155660_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#field_31357
    [[maybe_unused]] static void set_field_field_31357(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "EVENT_SET_OPEN_COUNT", "field_31357", "field_31357", "f_155660_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#field_31358
    [[maybe_unused]] static jint get_field_field_31358() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "OPENING_TICK_LENGTH", "field_31358", "field_31358", "f_155661_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#field_31358
    [[maybe_unused]] static void set_field_field_31358(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "OPENING_TICK_LENGTH", "field_31358", "field_31358", "f_155661_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#field_31359
    [[maybe_unused]] static jfloat get_field_field_31359() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MAX_LID_HEIGHT", "field_31359", "field_31359", "f_155662_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#field_31359
    [[maybe_unused]] static void set_field_field_31359(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MAX_LID_HEIGHT", "field_31359", "field_31359", "f_155662_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#field_31360
    [[maybe_unused]] static jfloat get_field_field_31360() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MAX_LID_ROTATION", "field_31360", "field_31360", "f_155663_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.ShulkerBoxBlockEntity#field_31360
    [[maybe_unused]] static void set_field_field_31360(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MAX_LID_ROTATION", "field_31360", "field_31360", "f_155663_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.ShulkerBoxBlockEntity#AVAILABLE_SLOTS
    [[maybe_unused]] static jint get_field_AVAILABLE_SLOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SLOTS", "field_12059", "AVAILABLE_SLOTS", "f_59644_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.ShulkerBoxBlockEntity#AVAILABLE_SLOTS
    [[maybe_unused]] static void set_field_AVAILABLE_SLOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SLOTS", "field_12059", "AVAILABLE_SLOTS", "f_59644_"), "[I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.ShulkerBoxBlockEntity#inventory
    static jobject get_field_inventory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "itemStacks", "field_12054", "inventory", "f_59645_"), "Ljv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.ShulkerBoxBlockEntity#inventory
    static void set_field_inventory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "itemStacks", "field_12054", "inventory", "f_59645_"), "Ljv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.ShulkerBoxBlockEntity#viewerCount
    static jint get_field_viewerCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "openCount", "field_12053", "viewerCount", "f_59646_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.ShulkerBoxBlockEntity#viewerCount
    static void set_field_viewerCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "openCount", "field_12053", "viewerCount", "f_59646_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.ShulkerBoxBlockEntity#animationStage
    static jobject get_field_animationStage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "animationStatus", "field_12057", "animationStage", "f_59647_"), "Ldrr$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.ShulkerBoxBlockEntity#animationStage
    static void set_field_animationStage(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "animationStatus", "field_12057", "animationStage", "f_59647_"), "Ldrr$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.ShulkerBoxBlockEntity#animationProgress
    static jfloat get_field_animationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "progress", "field_12056", "animationProgress", "f_59648_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.ShulkerBoxBlockEntity#animationProgress
    static void set_field_animationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "progress", "field_12056", "animationProgress", "f_59648_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.ShulkerBoxBlockEntity#prevAnimationProgress
    static jfloat get_field_prevAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "progressOld", "field_12055", "prevAnimationProgress", "f_59649_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.ShulkerBoxBlockEntity#prevAnimationProgress
    static void set_field_prevAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "progressOld", "field_12055", "prevAnimationProgress", "f_59649_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.ShulkerBoxBlockEntity#cachedColor
    static jobject get_field_cachedColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "color", "field_12060", "cachedColor", "f_59650_"), "Lcti;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.ShulkerBoxBlockEntity#cachedColor
    static void set_field_cachedColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "color", "field_12060", "cachedColor", "f_59650_"), "Lcti;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_31694", "tick", "m_155672_"), "(Ldcw;Ljd;Ldtc;Ldrr;)V");
    }

    static void tick(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_updateAnimation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updateAnimation", "method_11318", "updateAnimation", "m_155679_"), "(Ldcw;Ljd;Ldtc;)V");
    }

    static void updateAnimation(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateAnimation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getAnimationStage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getAnimationStatus", "method_11313", "getAnimationStage", "m_59700_"), "()Ldrr$a;");
    }

    static jobject getAnimationStage(const jobject& obj) {
                
       const auto methodID = methodID_getAnimationStage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBoundingBox", "method_11314", "getBoundingBox", "m_59666_"), "(Ldtc;)Lewx;");
    }

    static jobject getBoundingBox(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBoundingBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_pushEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "moveCollidedEntities", "method_11316", "pushEntities", "m_155683_"), "(Ldcw;Ljd;Ldtc;)V");
    }

    static void pushEntities(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_pushEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_size() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getContainerSize", "method_5439", "size", "m_6643_"), "()I");
    }

    static jint size(const jobject& obj) {
                
       const auto methodID = methodID_size();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_onSyncedBlockEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "triggerEvent", "method_11004", "onSyncedBlockEvent", "m_7531_"), "(II)Z");
    }

    static jboolean onSyncedBlockEvent(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_onSyncedBlockEvent();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateNeighborStates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "doNeighborUpdates", "method_20047", "updateNeighborStates", "m_155687_"), "(Ldcw;Ljd;Ldtc;)V");
    }

    static void updateNeighborStates(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_updateNeighborStates();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d_", "startOpen", "method_5435", "onOpen", "m_5856_"), "(Lcmx;)V");
    }

    static void onOpen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onOpen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onClose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "stopOpen", "method_5432", "onClose", "m_5785_"), "(Lcmx;)V");
    }

    static void onClose(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onClose();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getContainerName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getDefaultName", "method_17823", "getContainerName", "m_6820_"), "()Lwz;");
    }

    static jobject getContainerName(const jobject& obj) {
                
       const auto methodID = methodID_getContainerName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAdditional", "method_11014", "readNbt", "m_318667_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveAdditional", "method_11007", "writeNbt", "m_183515_"), "(Lub;Ljo$a;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readInventoryNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "loadFromTag", "method_11319", "readInventoryNbt", "m_59693_"), "(Lub;Ljo$a;)V");
    }

    static void readInventoryNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readInventoryNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getHeldStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getItems", "method_11282", "getHeldStacks", "m_58617_"), "()Ljv;");
    }

    static jobject getHeldStacks(const jobject& obj) {
                
       const auto methodID = methodID_getHeldStacks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHeldStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItems", "method_11281", "setHeldStacks", "m_58609_"), "(Ljv;)V");
    }

    static void setHeldStacks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setHeldStacks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAvailableSlots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSlotsForFace", "method_5494", "getAvailableSlots", "m_7071_"), "(Lji;)[I");
    }

    static jint getAvailableSlots(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAvailableSlots();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canInsert() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canPlaceItemThroughFace", "method_5492", "canInsert", "m_7155_"), "(ILcuq;Lji;)Z");
    }

    static jboolean canInsert(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_canInsert();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_canExtract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canTakeItemThroughFace", "method_5493", "canExtract", "m_7157_"), "(ILcuq;Lji;)Z");
    }

    static jboolean canExtract(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_canExtract();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getAnimationProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getProgress", "method_11312", "getAnimationProgress", "m_59657_"), "(F)F");
    }

    static jfloat getAnimationProgress(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getAnimationProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "getColor", "method_11320", "getColor", "m_59701_"), "()Lcti;");
    }

    static jobject getColor(const jobject& obj) {
                
       const auto methodID = methodID_getColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createScreenHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createMenu", "method_5465", "createScreenHandler", "m_6555_"), "(ILcmw;)Lcpu;");
    }

    static jobject createScreenHandler(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createScreenHandler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_suffocates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "isClosed", "method_27093", "suffocates", "m_59702_"), "()Z");
    }

    static jboolean suffocates(const jobject& obj) {
                
       const auto methodID = methodID_suffocates();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_SHULKERBOXBLOCKENTITY_HPP