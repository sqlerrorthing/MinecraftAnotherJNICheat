// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_SKULLBLOCKENTITY_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_SKULLBLOCKENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.SkullBlockEntity
 * Remapped: dru
 */
namespace SkullBlockEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dru", "net/minecraft/world/level/block/entity/SkullBlockEntity", "net/minecraft/class_2631", "net/minecraft/block/entity/SkullBlockEntity", "net/minecraft/src/C_2025_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.entity.SkullBlockEntity#PROFILE_NBT_KEY
    [[maybe_unused]] static jobject get_field_PROFILE_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TAG_PROFILE", "field_49762", "PROFILE_NBT_KEY", "f_314169_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SkullBlockEntity#PROFILE_NBT_KEY
    [[maybe_unused]] static void set_field_PROFILE_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TAG_PROFILE", "field_49762", "PROFILE_NBT_KEY", "f_314169_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.SkullBlockEntity#NOTE_BLOCK_SOUND_NBT_KEY
    [[maybe_unused]] static jobject get_field_NOTE_BLOCK_SOUND_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TAG_NOTE_BLOCK_SOUND", "field_41602", "NOTE_BLOCK_SOUND_NBT_KEY", "f_262238_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SkullBlockEntity#NOTE_BLOCK_SOUND_NBT_KEY
    [[maybe_unused]] static void set_field_NOTE_BLOCK_SOUND_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TAG_NOTE_BLOCK_SOUND", "field_41602", "NOTE_BLOCK_SOUND_NBT_KEY", "f_262238_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.SkullBlockEntity#CUSTOM_NAME_NBT_KEY
    [[maybe_unused]] static jobject get_field_CUSTOM_NAME_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TAG_CUSTOM_NAME", "field_49763", "CUSTOM_NAME_NBT_KEY", "f_314338_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SkullBlockEntity#CUSTOM_NAME_NBT_KEY
    [[maybe_unused]] static void set_field_CUSTOM_NAME_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TAG_CUSTOM_NAME", "field_49763", "CUSTOM_NAME_NBT_KEY", "f_314338_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.SkullBlockEntity#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LOGGER", "field_49764", "LOGGER", "f_314011_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SkullBlockEntity#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LOGGER", "field_49764", "LOGGER", "f_314011_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.SkullBlockEntity#currentExecutor
    [[maybe_unused]] static jobject get_field_currentExecutor() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "mainThreadExecutor", "field_34029", "currentExecutor", "f_182457_"), "Ljava/util/concurrent/Executor;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SkullBlockEntity#currentExecutor
    [[maybe_unused]] static void set_field_currentExecutor(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "mainThreadExecutor", "field_34029", "currentExecutor", "f_182457_"), "Ljava/util/concurrent/Executor;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.SkullBlockEntity#nameToProfileCache
    [[maybe_unused]] static jobject get_field_nameToProfileCache() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "profileCacheByName", "field_51356", "nameToProfileCache", "f_315372_"), "Lcom/google/common/cache/LoadingCache;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SkullBlockEntity#nameToProfileCache
    [[maybe_unused]] static void set_field_nameToProfileCache(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "profileCacheByName", "field_51356", "nameToProfileCache", "f_315372_"), "Lcom/google/common/cache/LoadingCache;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.SkullBlockEntity#uuidToProfileCache
    [[maybe_unused]] static jobject get_field_uuidToProfileCache() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "profileCacheById", "field_51357", "uuidToProfileCache", "f_315920_"), "Lcom/google/common/cache/LoadingCache;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SkullBlockEntity#uuidToProfileCache
    [[maybe_unused]] static void set_field_uuidToProfileCache(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "profileCacheById", "field_51357", "uuidToProfileCache", "f_315920_"), "Lcom/google/common/cache/LoadingCache;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.SkullBlockEntity#EXECUTOR
    [[maybe_unused]] static jobject get_field_EXECUTOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CHECKED_MAIN_THREAD_EXECUTOR", "field_45147", "EXECUTOR", "f_291574_"), "Ljava/util/concurrent/Executor;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.SkullBlockEntity#EXECUTOR
    [[maybe_unused]] static void set_field_EXECUTOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CHECKED_MAIN_THREAD_EXECUTOR", "field_45147", "EXECUTOR", "f_291574_"), "Ljava/util/concurrent/Executor;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SkullBlockEntity#owner
    static jobject get_field_owner(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "owner", "field_12087", "owner", "f_59757_"), "Lcxu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SkullBlockEntity#owner
    static void set_field_owner(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "owner", "field_12087", "owner", "f_59757_"), "Lcxu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SkullBlockEntity#noteBlockSound
    static jobject get_field_noteBlockSound(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "noteBlockSound", "field_41603", "noteBlockSound", "f_262250_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SkullBlockEntity#noteBlockSound
    static void set_field_noteBlockSound(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "noteBlockSound", "field_41603", "noteBlockSound", "f_262250_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SkullBlockEntity#poweredTicks
    static jint get_field_poweredTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "animationTickCount", "field_41315", "poweredTicks", "f_260504_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SkullBlockEntity#poweredTicks
    static void set_field_poweredTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "animationTickCount", "field_41315", "poweredTicks", "f_260504_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SkullBlockEntity#powered
    static jboolean get_field_powered(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "isAnimating", "field_41316", "powered", "f_260642_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SkullBlockEntity#powered
    static void set_field_powered(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "isAnimating", "field_41316", "powered", "f_260642_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.SkullBlockEntity#customName
    static jobject get_field_customName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "customName", "field_49765", "customName", "f_314450_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.SkullBlockEntity#customName
    static void set_field_customName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "customName", "field_49765", "customName", "f_314450_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_setServices() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setup", "method_39765", "setServices", "m_222885_"), "(Lalm;Ljava/util/concurrent/Executor;)V");
    }

    static void setServices(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_setServices();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_fetchProfileByName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fetchProfileByName", "method_59536", "fetchProfileByName", "m_319852_"), "(Ljava/lang/String;Lalm;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject fetchProfileByName(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_fetchProfileByName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_fetchProfileByUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fetchProfileById", "method_59540", "fetchProfileByUuid", "m_321119_"), "(Ljava/util/UUID;Lalm;Ljava/util/function/BooleanSupplier;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject fetchProfileByUuid(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_fetchProfileByUuid();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_clearServices() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "clear", "method_39766", "clearServices", "m_196704_"), "()V");
    }

    static void clearServices() {
       const auto clazz = self();
       const auto methodID = methodID_clearServices();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveAdditional", "method_11007", "writeNbt", "m_183515_"), "(Lub;Ljo$a;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAdditional", "method_11014", "readNbt", "m_318667_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "animation", "method_47589", "tick", "m_261318_"), "(Ldcw;Ljd;Ldtc;Ldru;)V");
    }

    static void tick(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getPoweredTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAnimation", "method_47588", "getPoweredTicks", "m_261082_"), "(F)F");
    }

    static jfloat getPoweredTicks(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getPoweredTicks();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOwner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getOwnerProfile", "method_11334", "getOwner", "m_59779_"), "()Lcxu;");
    }

    static jobject getOwner(const jobject& obj) {
                
       const auto methodID = methodID_getOwner();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNoteBlockSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getNoteBlockSound", "method_47888", "getNoteBlockSound", "m_262374_"), "()Lakr;");
    }

    static jobject getNoteBlockSound(const jobject& obj) {
                
       const auto methodID = methodID_getNoteBlockSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toUpdatePacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getUpdatePacket", "method_38250", "toUpdatePacket", "m_58483_"), "()Lacb;");
    }

    static jobject toUpdatePacket(const jobject& obj) {
                
       const auto methodID = methodID_toUpdatePacket();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toInitialChunkDataNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getUpdateTag", "method_16887", "toInitialChunkDataNbt", "m_5995_"), "(Ljo$a;)Lub;");
    }

    static jobject toInitialChunkDataNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toInitialChunkDataNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setOwner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOwner", "method_11333", "setOwner", "m_59769_"), "(Lcxu;)V");
    }

    static void setOwner(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOwner();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_loadOwnerProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "updateOwnerProfile", "method_11339", "loadOwnerProperties", "m_59780_"), "()V");
    }

    static void loadOwnerProperties(const jobject& obj) {
                
       const auto methodID = methodID_loadOwnerProperties();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__fetchProfileByName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fetchGameProfile", "method_52580", "fetchProfileByName", "m_295759_"), "(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject _fetchProfileByName(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__fetchProfileByName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__fetchProfileByUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fetchGameProfile", "method_59539", "fetchProfileByUuid", "m_319014_"), "(Ljava/util/UUID;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject _fetchProfileByUuid(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__fetchProfileByUuid();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_readComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyImplicitComponents", "method_57568", "readComponents", "m_318741_"), "(Ldqh$b;)V");
    }

    static void readComponents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readComponents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "collectImplicitComponents", "method_57567", "addComponents", "m_318837_"), "(Lkm$a;)V");
    }

    static void addComponents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addComponents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeFromCopiedStackNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeComponentsFromTag", "method_57569", "removeFromCopiedStackNbt", "m_318942_"), "(Lub;)V");
    }

    static void removeFromCopiedStackNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeFromCopiedStackNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_SKULLBLOCKENTITY_HPP