// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_ABSTRACTFURNACEBLOCKENTITY_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_ABSTRACTFURNACEBLOCKENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.AbstractFurnaceBlockEntity
 * Remapped: dpv
 */
namespace AbstractFurnaceBlockEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dpv", "net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity", "net/minecraft/class_2609", "net/minecraft/block/entity/AbstractFurnaceBlockEntity", "net/minecraft/src/C_1972_"));
        }
        return cachedClass;
    };

    // getter for static protected field net.minecraft.block.entity.AbstractFurnaceBlockEntity#INPUT_SLOT_INDEX
    [[maybe_unused]] static jint get_field_INPUT_SLOT_INDEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SLOT_INPUT", "field_31286", "INPUT_SLOT_INDEX", "f_154980_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.block.entity.AbstractFurnaceBlockEntity#INPUT_SLOT_INDEX
    [[maybe_unused]] static void set_field_INPUT_SLOT_INDEX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SLOT_INPUT", "field_31286", "INPUT_SLOT_INDEX", "f_154980_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.block.entity.AbstractFurnaceBlockEntity#FUEL_SLOT_INDEX
    [[maybe_unused]] static jint get_field_FUEL_SLOT_INDEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SLOT_FUEL", "field_31287", "FUEL_SLOT_INDEX", "f_154981_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.block.entity.AbstractFurnaceBlockEntity#FUEL_SLOT_INDEX
    [[maybe_unused]] static void set_field_FUEL_SLOT_INDEX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SLOT_FUEL", "field_31287", "FUEL_SLOT_INDEX", "f_154981_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.block.entity.AbstractFurnaceBlockEntity#OUTPUT_SLOT_INDEX
    [[maybe_unused]] static jint get_field_OUTPUT_SLOT_INDEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SLOT_RESULT", "field_31288", "OUTPUT_SLOT_INDEX", "f_154982_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.block.entity.AbstractFurnaceBlockEntity#OUTPUT_SLOT_INDEX
    [[maybe_unused]] static void set_field_OUTPUT_SLOT_INDEX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SLOT_RESULT", "field_31288", "OUTPUT_SLOT_INDEX", "f_154982_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#BURN_TIME_PROPERTY_INDEX
    [[maybe_unused]] static jint get_field_BURN_TIME_PROPERTY_INDEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DATA_LIT_TIME", "field_31289", "BURN_TIME_PROPERTY_INDEX", "f_154983_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#BURN_TIME_PROPERTY_INDEX
    [[maybe_unused]] static void set_field_BURN_TIME_PROPERTY_INDEX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DATA_LIT_TIME", "field_31289", "BURN_TIME_PROPERTY_INDEX", "f_154983_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.AbstractFurnaceBlockEntity#TOP_SLOTS
    [[maybe_unused]] static jint get_field_TOP_SLOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SLOTS_FOR_UP", "field_11987", "TOP_SLOTS", "f_58313_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.AbstractFurnaceBlockEntity#TOP_SLOTS
    [[maybe_unused]] static void set_field_TOP_SLOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SLOTS_FOR_UP", "field_11987", "TOP_SLOTS", "f_58313_"), "[I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.AbstractFurnaceBlockEntity#BOTTOM_SLOTS
    [[maybe_unused]] static jint get_field_BOTTOM_SLOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SLOTS_FOR_DOWN", "field_11982", "BOTTOM_SLOTS", "f_58314_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.AbstractFurnaceBlockEntity#BOTTOM_SLOTS
    [[maybe_unused]] static void set_field_BOTTOM_SLOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SLOTS_FOR_DOWN", "field_11982", "BOTTOM_SLOTS", "f_58314_"), "[I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.AbstractFurnaceBlockEntity#SIDE_SLOTS
    [[maybe_unused]] static jint get_field_SIDE_SLOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SLOTS_FOR_SIDES", "field_11983", "SIDE_SLOTS", "f_58315_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.AbstractFurnaceBlockEntity#SIDE_SLOTS
    [[maybe_unused]] static void set_field_SIDE_SLOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SLOTS_FOR_SIDES", "field_11983", "SIDE_SLOTS", "f_58315_"), "[I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#FUEL_TIME_PROPERTY_INDEX
    [[maybe_unused]] static jint get_field_FUEL_TIME_PROPERTY_INDEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DATA_LIT_DURATION", "field_31290", "FUEL_TIME_PROPERTY_INDEX", "f_154984_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#FUEL_TIME_PROPERTY_INDEX
    [[maybe_unused]] static void set_field_FUEL_TIME_PROPERTY_INDEX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DATA_LIT_DURATION", "field_31290", "FUEL_TIME_PROPERTY_INDEX", "f_154984_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#COOK_TIME_PROPERTY_INDEX
    [[maybe_unused]] static jint get_field_COOK_TIME_PROPERTY_INDEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DATA_COOKING_PROGRESS", "field_31291", "COOK_TIME_PROPERTY_INDEX", "f_154985_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#COOK_TIME_PROPERTY_INDEX
    [[maybe_unused]] static void set_field_COOK_TIME_PROPERTY_INDEX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DATA_COOKING_PROGRESS", "field_31291", "COOK_TIME_PROPERTY_INDEX", "f_154985_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#COOK_TIME_TOTAL_PROPERTY_INDEX
    [[maybe_unused]] static jint get_field_COOK_TIME_TOTAL_PROPERTY_INDEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DATA_COOKING_TOTAL_TIME", "field_31292", "COOK_TIME_TOTAL_PROPERTY_INDEX", "f_154986_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#COOK_TIME_TOTAL_PROPERTY_INDEX
    [[maybe_unused]] static void set_field_COOK_TIME_TOTAL_PROPERTY_INDEX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DATA_COOKING_TOTAL_TIME", "field_31292", "COOK_TIME_TOTAL_PROPERTY_INDEX", "f_154986_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#PROPERTY_COUNT
    [[maybe_unused]] static jint get_field_PROPERTY_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "NUM_DATA_VALUES", "field_31293", "PROPERTY_COUNT", "f_154987_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#PROPERTY_COUNT
    [[maybe_unused]] static void set_field_PROPERTY_COUNT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "NUM_DATA_VALUES", "field_31293", "PROPERTY_COUNT", "f_154987_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#DEFAULT_COOK_TIME
    [[maybe_unused]] static jint get_field_DEFAULT_COOK_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "BURN_TIME_STANDARD", "field_31294", "DEFAULT_COOK_TIME", "f_154988_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#DEFAULT_COOK_TIME
    [[maybe_unused]] static void set_field_DEFAULT_COOK_TIME(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "BURN_TIME_STANDARD", "field_31294", "DEFAULT_COOK_TIME", "f_154988_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#field_31295
    [[maybe_unused]] static jint get_field_field_31295() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BURN_COOL_SPEED", "field_31295", "field_31295", "f_154989_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.AbstractFurnaceBlockEntity#field_31295
    [[maybe_unused]] static void set_field_field_31295(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BURN_COOL_SPEED", "field_31295", "field_31295", "f_154989_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.block.entity.AbstractFurnaceBlockEntity#inventory
    static jobject get_field_inventory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "items", "field_11984", "inventory", "f_58310_"), "Ljv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.block.entity.AbstractFurnaceBlockEntity#inventory
    static void set_field_inventory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "items", "field_11984", "inventory", "f_58310_"), "Ljv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.block.entity.AbstractFurnaceBlockEntity#burnTime
    static jint get_field_burnTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "litTime", "field_11981", "burnTime", "f_58316_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.block.entity.AbstractFurnaceBlockEntity#burnTime
    static void set_field_burnTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "litTime", "field_11981", "burnTime", "f_58316_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.block.entity.AbstractFurnaceBlockEntity#fuelTime
    static jint get_field_fuelTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "litDuration", "field_11980", "fuelTime", "f_58317_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.block.entity.AbstractFurnaceBlockEntity#fuelTime
    static void set_field_fuelTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "litDuration", "field_11980", "fuelTime", "f_58317_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.block.entity.AbstractFurnaceBlockEntity#cookTime
    static jint get_field_cookTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "cookingProgress", "field_11989", "cookTime", "f_58318_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.block.entity.AbstractFurnaceBlockEntity#cookTime
    static void set_field_cookTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "cookingProgress", "field_11989", "cookTime", "f_58318_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.block.entity.AbstractFurnaceBlockEntity#cookTimeTotal
    static jint get_field_cookTimeTotal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "cookingTotalTime", "field_11988", "cookTimeTotal", "f_58319_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.block.entity.AbstractFurnaceBlockEntity#cookTimeTotal
    static void set_field_cookTimeTotal(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "cookingTotalTime", "field_11988", "cookTimeTotal", "f_58319_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.AbstractFurnaceBlockEntity#fuelTimes
    [[maybe_unused]] static jobject get_field_fuelTimes() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "fuelCache", "field_48375", "fuelTimes", "f_315506_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.AbstractFurnaceBlockEntity#fuelTimes
    [[maybe_unused]] static void set_field_fuelTimes(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "fuelCache", "field_48375", "fuelTimes", "f_315506_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.block.entity.AbstractFurnaceBlockEntity#propertyDelegate
    static jobject get_field_propertyDelegate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "dataAccess", "field_17374", "propertyDelegate", "f_58311_"), "Lcqf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.block.entity.AbstractFurnaceBlockEntity#propertyDelegate
    static void set_field_propertyDelegate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "dataAccess", "field_17374", "propertyDelegate", "f_58311_"), "Lcqf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.AbstractFurnaceBlockEntity#recipesUsed
    static jobject get_field_recipesUsed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "recipesUsed", "field_11986", "recipesUsed", "f_58320_"), "Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.AbstractFurnaceBlockEntity#recipesUsed
    static void set_field_recipesUsed(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "recipesUsed", "field_11986", "recipesUsed", "f_58320_"), "Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.AbstractFurnaceBlockEntity#matchGetter
    static jobject get_field_matchGetter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "quickCheck", "field_38234", "matchGetter", "f_222691_"), "Lczd$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.AbstractFurnaceBlockEntity#matchGetter
    static void set_field_matchGetter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "quickCheck", "field_38234", "matchGetter", "f_222691_"), "Lczd$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_clearFuelTimes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "invalidateCache", "method_56120", "clearFuelTimes", "m_323223_"), "()V");
    }

    static void clearFuelTimes() {
       const auto clazz = self();
       const auto methodID = methodID_clearFuelTimes();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createFuelTimeMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "getFuel", "method_11196", "createFuelTimeMap", "m_58423_"), "()Ljava/util/Map;");
    }

    static jobject createFuelTimeMap() {
       const auto clazz = self();
       const auto methodID = methodID_createFuelTimeMap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_isNonFlammableWood() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isNeverAFurnaceFuel", "method_26395", "isNonFlammableWood", "m_58397_"), "(Lcul;)Z");
    }

    static jboolean isNonFlammableWood(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isNonFlammableWood();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addFuel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_11194", "addFuel", "m_204302_"), "(Ljava/util/Map;Lawu;I)V");
    }

    static void addFuel(const jobject& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_addFuel();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__addFuel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_11202", "addFuel", "m_58374_"), "(Ljava/util/Map;Ldcv;I)V");
    }

    static void _addFuel(const jobject& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__addFuel();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isBurning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "isLit", "method_11201", "isBurning", "m_58425_"), "()Z");
    }

    static jboolean isBurning(const jobject& obj) {
                
       const auto methodID = methodID_isBurning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAdditional", "method_11014", "readNbt", "m_318667_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveAdditional", "method_11007", "writeNbt", "m_183515_"), "(Lub;Ljo$a;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "serverTick", "method_31651", "tick", "m_155013_"), "(Ldcw;Ljd;Ldtc;Ldpv;)V");
    }

    static void tick(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canAcceptRecipeOutput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canBurn", "method_11192", "canAcceptRecipeOutput", "m_155005_"), "(Lka;Lczb;Ljv;I)Z");
    }

    static jboolean canAcceptRecipeOutput(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_canAcceptRecipeOutput();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_craftRecipe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "burn", "method_11203", "craftRecipe", "m_266209_"), "(Lka;Lczb;Ljv;I)Z");
    }

    static jboolean craftRecipe(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_craftRecipe();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getFuelTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getBurnDuration", "method_11200", "getFuelTime", "m_7743_"), "(Lcuq;)I");
    }

    static jint getFuelTime(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFuelTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCookTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getTotalCookTime", "method_17029", "getCookTime", "m_222692_"), "(Ldcw;Ldpv;)I");
    }

    static jint getCookTime(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getCookTime();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canUseAsFuel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "isFuel", "method_11195", "canUseAsFuel", "m_58399_"), "(Lcuq;)Z");
    }

    static jboolean canUseAsFuel(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_canUseAsFuel();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getAvailableSlots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSlotsForFace", "method_5494", "getAvailableSlots", "m_7071_"), "(Lji;)[I");
    }

    static jint getAvailableSlots(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAvailableSlots();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canInsert() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canPlaceItemThroughFace", "method_5492", "canInsert", "m_7155_"), "(ILcuq;Lji;)Z");
    }

    static jboolean canInsert(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_canInsert();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_canExtract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canTakeItemThroughFace", "method_5493", "canExtract", "m_7157_"), "(ILcuq;Lji;)Z");
    }

    static jboolean canExtract(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_canExtract();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_size() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getContainerSize", "method_5439", "size", "m_6643_"), "()I");
    }

    static jint size(const jobject& obj) {
                
       const auto methodID = methodID_size();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeldStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getItems", "method_11282", "getHeldStacks", "m_58617_"), "()Ljv;");
    }

    static jobject getHeldStacks(const jobject& obj) {
                
       const auto methodID = methodID_getHeldStacks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHeldStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItems", "method_11281", "setHeldStacks", "m_58609_"), "(Ljv;)V");
    }

    static void setHeldStacks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setHeldStacks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItem", "method_5447", "setStack", "m_6836_"), "(ILcuq;)V");
    }

    static void setStack(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canPlaceItem", "method_5437", "isValid", "m_7013_"), "(ILcuq;)Z");
    }

    static jboolean isValid(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isValid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setLastRecipe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setRecipeUsed", "method_7662", "setLastRecipe", "m_40156_"), "(Lczb;)V");
    }

    static void setLastRecipe(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setLastRecipe();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLastRecipe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getRecipeUsed", "method_7663", "getLastRecipe", "m_40158_"), "()Lczb;");
    }

    static jobject getLastRecipe(const jobject& obj) {
                
       const auto methodID = methodID_getLastRecipe();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_unlockLastRecipe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "awardUsedRecipes", "method_7664", "unlockLastRecipe", "m_58395_"), "(Lcmx;Ljava/util/List;)V");
    }

    static void unlockLastRecipe(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_unlockLastRecipe();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_dropExperienceForRecipesUsed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "awardUsedRecipesAndPopExperience", "method_17763", "dropExperienceForRecipesUsed", "m_155003_"), "(Laqv;)V");
    }

    static void dropExperienceForRecipesUsed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dropExperienceForRecipesUsed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRecipesUsedAndDropExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRecipesToAwardAndPopExperience", "method_27354", "getRecipesUsedAndDropExperience", "m_154995_"), "(Laqu;Lexc;)Ljava/util/List;");
    }

    static jobject getRecipesUsedAndDropExperience(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getRecipesUsedAndDropExperience();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_dropExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createExperience", "method_17760", "dropExperience", "m_154998_"), "(Laqu;Lexc;IF)V");
    }

    static void dropExperience(const jobject& arg0, const jobject& arg1, const jint& arg2, const jfloat& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_dropExperience();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_provideRecipeInputs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillStackedContents", "method_7683", "provideRecipeInputs", "m_5809_"), "(Lcnb;)V");
    }

    static void provideRecipeInputs(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_provideRecipeInputs();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_ABSTRACTFURNACEBLOCKENTITY_HPP