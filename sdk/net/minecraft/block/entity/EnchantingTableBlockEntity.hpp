// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_ENCHANTINGTABLEBLOCKENTITY_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_ENCHANTINGTABLEBLOCKENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.EnchantingTableBlockEntity
 * Remapped: drc
 */
namespace EnchantingTableBlockEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("drc", "net/minecraft/world/level/block/entity/EnchantingTableBlockEntity", "net/minecraft/class_2605", "net/minecraft/block/entity/EnchantingTableBlockEntity", "net/minecraft/src/C_313415_"));
        }
        return cachedClass;
    };

    // getter for public field net.minecraft.block.entity.EnchantingTableBlockEntity#ticks
    static jint get_field_ticks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "time", "field_11961", "ticks", "f_315885_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.EnchantingTableBlockEntity#ticks
    static void set_field_ticks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "time", "field_11961", "ticks", "f_315885_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.block.entity.EnchantingTableBlockEntity#nextPageAngle
    static jfloat get_field_nextPageAngle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "flip", "field_11958", "nextPageAngle", "f_315289_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.EnchantingTableBlockEntity#nextPageAngle
    static void set_field_nextPageAngle(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "flip", "field_11958", "nextPageAngle", "f_315289_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.block.entity.EnchantingTableBlockEntity#pageAngle
    static jfloat get_field_pageAngle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "oFlip", "field_11960", "pageAngle", "f_316058_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.EnchantingTableBlockEntity#pageAngle
    static void set_field_pageAngle(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "oFlip", "field_11960", "pageAngle", "f_316058_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.block.entity.EnchantingTableBlockEntity#flipRandom
    static jfloat get_field_flipRandom(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "flipT", "field_11969", "flipRandom", "f_315152_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.EnchantingTableBlockEntity#flipRandom
    static void set_field_flipRandom(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "flipT", "field_11969", "flipRandom", "f_315152_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.block.entity.EnchantingTableBlockEntity#flipTurn
    static jfloat get_field_flipTurn(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "flipA", "field_11967", "flipTurn", "f_316618_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.EnchantingTableBlockEntity#flipTurn
    static void set_field_flipTurn(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "flipA", "field_11967", "flipTurn", "f_316618_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.block.entity.EnchantingTableBlockEntity#nextPageTurningSpeed
    static jfloat get_field_nextPageTurningSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "open", "field_11966", "nextPageTurningSpeed", "f_316041_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.EnchantingTableBlockEntity#nextPageTurningSpeed
    static void set_field_nextPageTurningSpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "open", "field_11966", "nextPageTurningSpeed", "f_316041_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.block.entity.EnchantingTableBlockEntity#pageTurningSpeed
    static jfloat get_field_pageTurningSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "oOpen", "field_11965", "pageTurningSpeed", "f_314967_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.EnchantingTableBlockEntity#pageTurningSpeed
    static void set_field_pageTurningSpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "oOpen", "field_11965", "pageTurningSpeed", "f_314967_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.block.entity.EnchantingTableBlockEntity#bookRotation
    static jfloat get_field_bookRotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "rot", "field_11964", "bookRotation", "f_313927_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.EnchantingTableBlockEntity#bookRotation
    static void set_field_bookRotation(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "rot", "field_11964", "bookRotation", "f_313927_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.block.entity.EnchantingTableBlockEntity#lastBookRotation
    static jfloat get_field_lastBookRotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "oRot", "field_11963", "lastBookRotation", "f_317009_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.EnchantingTableBlockEntity#lastBookRotation
    static void set_field_lastBookRotation(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "oRot", "field_11963", "lastBookRotation", "f_317009_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.block.entity.EnchantingTableBlockEntity#targetBookRotation
    static jfloat get_field_targetBookRotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "tRot", "field_11962", "targetBookRotation", "f_316197_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.EnchantingTableBlockEntity#targetBookRotation
    static void set_field_targetBookRotation(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "tRot", "field_11962", "targetBookRotation", "f_316197_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.EnchantingTableBlockEntity#RANDOM
    [[maybe_unused]] static jobject get_field_RANDOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "RANDOM", "field_11968", "RANDOM", "f_315765_"), "Layw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.EnchantingTableBlockEntity#RANDOM
    [[maybe_unused]] static void set_field_RANDOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "RANDOM", "field_11968", "RANDOM", "f_315765_"), "Layw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.EnchantingTableBlockEntity#customName
    static jobject get_field_customName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "name", "field_11959", "customName", "f_314480_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.EnchantingTableBlockEntity#customName
    static void set_field_customName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "name", "field_11959", "customName", "f_314480_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveAdditional", "method_11007", "writeNbt", "m_183515_"), "(Lub;Ljo$a;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAdditional", "method_11014", "readNbt", "m_318667_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bookAnimationTick", "method_31688", "tick", "m_320089_"), "(Ldcw;Ljd;Ldtc;Ldrc;)V");
    }

    static void tick(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ah", "getName", "method_5477", "getName", "m_7755_"), "()Lwz;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCustomName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCustomName", "method_11179", "setCustomName", "m_321991_"), "(Lwz;)V");
    }

    static void setCustomName(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCustomName();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCustomName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aj", "getCustomName", "method_5797", "getCustomName", "m_7770_"), "()Lwz;");
    }

    static jobject getCustomName(const jobject& obj) {
                
       const auto methodID = methodID_getCustomName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyImplicitComponents", "method_57568", "readComponents", "m_318741_"), "(Ldqh$b;)V");
    }

    static void readComponents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readComponents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "collectImplicitComponents", "method_57567", "addComponents", "m_318837_"), "(Lkm$a;)V");
    }

    static void addComponents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addComponents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeFromCopiedStackNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeComponentsFromTag", "method_57569", "removeFromCopiedStackNbt", "m_318942_"), "(Lub;)V");
    }

    static void removeFromCopiedStackNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeFromCopiedStackNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_ENCHANTINGTABLEBLOCKENTITY_HPP