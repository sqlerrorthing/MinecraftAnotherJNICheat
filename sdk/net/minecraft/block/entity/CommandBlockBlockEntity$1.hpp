// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_COMMANDBLOCKBLOCKENTITY$1_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_COMMANDBLOCKBLOCKENTITY$1_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.CommandBlockBlockEntity$1
 * Remapped: dqr$1
 */
namespace CommandBlockBlockEntity$1 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dqr$1", "net/minecraft/world/level/block/entity/CommandBlockEntity$1", "net/minecraft/class_2593$1", "net/minecraft/block/entity/CommandBlockBlockEntity$1", "net/minecraft/src/C_1998_$C_1999_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_setCommand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCommand", "method_8286", "setCommand", "m_6590_"), "(Ljava/lang/String;)V");
    }

    static void setCommand(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCommand();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getLevel", "method_8293", "getWorld", "m_5991_"), "()Laqu;");
    }

    static jobject getWorld(const jobject& obj) {
                
       const auto methodID = methodID_getWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_markDirty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "onUpdated", "method_8295", "markDirty", "m_7368_"), "()V");
    }

    static void markDirty(const jobject& obj) {
                
       const auto methodID = methodID_markDirty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getPosition", "method_8300", "getPos", "m_6607_"), "()Lexc;");
    }

    static jobject getPos(const jobject& obj) {
                
       const auto methodID = methodID_getPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "createCommandSourceStack", "method_8303", "getSource", "m_6712_"), "()Let;");
    }

    static jobject getSource(const jobject& obj) {
                
       const auto methodID = methodID_getSource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEditable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "isValid", "method_52175", "isEditable", "m_288209_"), "()Z");
    }

    static jboolean isEditable(const jobject& obj) {
                
       const auto methodID = methodID_isEditable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_COMMANDBLOCKBLOCKENTITY$1_HPP