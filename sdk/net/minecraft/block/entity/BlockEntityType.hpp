// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_BLOCKENTITYTYPE_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_BLOCKENTITYTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.BlockEntityType
 * Remapped: dqj
 */
namespace BlockEntityType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dqj", "net/minecraft/world/level/block/entity/BlockEntityType", "net/minecraft/class_2591", "net/minecraft/block/entity/BlockEntityType", "net/minecraft/src/C_1992_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.entity.BlockEntityType#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "LOGGER", "field_11893", "LOGGER", "f_58913_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BlockEntityType#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "LOGGER", "field_11893", "LOGGER", "f_58913_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#FURNACE
    [[maybe_unused]] static jobject get_field_FURNACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FURNACE", "field_11903", "FURNACE", "f_58917_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#FURNACE
    [[maybe_unused]] static void set_field_FURNACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FURNACE", "field_11903", "FURNACE", "f_58917_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#CHEST
    [[maybe_unused]] static jobject get_field_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CHEST", "field_11914", "CHEST", "f_58918_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#CHEST
    [[maybe_unused]] static void set_field_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CHEST", "field_11914", "CHEST", "f_58918_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#TRAPPED_CHEST
    [[maybe_unused]] static jobject get_field_TRAPPED_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TRAPPED_CHEST", "field_11891", "TRAPPED_CHEST", "f_58919_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#TRAPPED_CHEST
    [[maybe_unused]] static void set_field_TRAPPED_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TRAPPED_CHEST", "field_11891", "TRAPPED_CHEST", "f_58919_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#ENDER_CHEST
    [[maybe_unused]] static jobject get_field_ENDER_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ENDER_CHEST", "field_11901", "ENDER_CHEST", "f_58920_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#ENDER_CHEST
    [[maybe_unused]] static void set_field_ENDER_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ENDER_CHEST", "field_11901", "ENDER_CHEST", "f_58920_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#JUKEBOX
    [[maybe_unused]] static jobject get_field_JUKEBOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "JUKEBOX", "field_11907", "JUKEBOX", "f_58921_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#JUKEBOX
    [[maybe_unused]] static void set_field_JUKEBOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "JUKEBOX", "field_11907", "JUKEBOX", "f_58921_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#DISPENSER
    [[maybe_unused]] static jobject get_field_DISPENSER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DISPENSER", "field_11887", "DISPENSER", "f_58922_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#DISPENSER
    [[maybe_unused]] static void set_field_DISPENSER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DISPENSER", "field_11887", "DISPENSER", "f_58922_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#DROPPER
    [[maybe_unused]] static jobject get_field_DROPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DROPPER", "field_11899", "DROPPER", "f_58923_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#DROPPER
    [[maybe_unused]] static void set_field_DROPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DROPPER", "field_11899", "DROPPER", "f_58923_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#SIGN
    [[maybe_unused]] static jobject get_field_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SIGN", "field_11911", "SIGN", "f_58924_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#SIGN
    [[maybe_unused]] static void set_field_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SIGN", "field_11911", "SIGN", "f_58924_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#HANGING_SIGN
    [[maybe_unused]] static jobject get_field_HANGING_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "HANGING_SIGN", "field_40330", "HANGING_SIGN", "f_244529_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#HANGING_SIGN
    [[maybe_unused]] static void set_field_HANGING_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "HANGING_SIGN", "field_40330", "HANGING_SIGN", "f_244529_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#MOB_SPAWNER
    [[maybe_unused]] static jobject get_field_MOB_SPAWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MOB_SPAWNER", "field_11889", "MOB_SPAWNER", "f_58925_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#MOB_SPAWNER
    [[maybe_unused]] static void set_field_MOB_SPAWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MOB_SPAWNER", "field_11889", "MOB_SPAWNER", "f_58925_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#PISTON
    [[maybe_unused]] static jobject get_field_PISTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PISTON", "field_11897", "PISTON", "f_58926_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#PISTON
    [[maybe_unused]] static void set_field_PISTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PISTON", "field_11897", "PISTON", "f_58926_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#BREWING_STAND
    [[maybe_unused]] static jobject get_field_BREWING_STAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BREWING_STAND", "field_11894", "BREWING_STAND", "f_58927_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#BREWING_STAND
    [[maybe_unused]] static void set_field_BREWING_STAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BREWING_STAND", "field_11894", "BREWING_STAND", "f_58927_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#ENCHANTING_TABLE
    [[maybe_unused]] static jobject get_field_ENCHANTING_TABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "ENCHANTING_TABLE", "field_11912", "ENCHANTING_TABLE", "f_58928_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#ENCHANTING_TABLE
    [[maybe_unused]] static void set_field_ENCHANTING_TABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "ENCHANTING_TABLE", "field_11912", "ENCHANTING_TABLE", "f_58928_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#END_PORTAL
    [[maybe_unused]] static jobject get_field_END_PORTAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "END_PORTAL", "field_11898", "END_PORTAL", "f_58929_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#END_PORTAL
    [[maybe_unused]] static void set_field_END_PORTAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "END_PORTAL", "field_11898", "END_PORTAL", "f_58929_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#BEACON
    [[maybe_unused]] static jobject get_field_BEACON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "BEACON", "field_11890", "BEACON", "f_58930_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#BEACON
    [[maybe_unused]] static void set_field_BEACON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "BEACON", "field_11890", "BEACON", "f_58930_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#SKULL
    [[maybe_unused]] static jobject get_field_SKULL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SKULL", "field_11913", "SKULL", "f_58931_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#SKULL
    [[maybe_unused]] static void set_field_SKULL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SKULL", "field_11913", "SKULL", "f_58931_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#DAYLIGHT_DETECTOR
    [[maybe_unused]] static jobject get_field_DAYLIGHT_DETECTOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DAYLIGHT_DETECTOR", "field_11900", "DAYLIGHT_DETECTOR", "f_58932_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#DAYLIGHT_DETECTOR
    [[maybe_unused]] static void set_field_DAYLIGHT_DETECTOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DAYLIGHT_DETECTOR", "field_11900", "DAYLIGHT_DETECTOR", "f_58932_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#HOPPER
    [[maybe_unused]] static jobject get_field_HOPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "HOPPER", "field_11888", "HOPPER", "f_58933_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#HOPPER
    [[maybe_unused]] static void set_field_HOPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "HOPPER", "field_11888", "HOPPER", "f_58933_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#COMPARATOR
    [[maybe_unused]] static jobject get_field_COMPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "COMPARATOR", "field_11908", "COMPARATOR", "f_58934_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#COMPARATOR
    [[maybe_unused]] static void set_field_COMPARATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "COMPARATOR", "field_11908", "COMPARATOR", "f_58934_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#BANNER
    [[maybe_unused]] static jobject get_field_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "BANNER", "field_11905", "BANNER", "f_58935_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#BANNER
    [[maybe_unused]] static void set_field_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "BANNER", "field_11905", "BANNER", "f_58935_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#STRUCTURE_BLOCK
    [[maybe_unused]] static jobject get_field_STRUCTURE_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "STRUCTURE_BLOCK", "field_11895", "STRUCTURE_BLOCK", "f_58936_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#STRUCTURE_BLOCK
    [[maybe_unused]] static void set_field_STRUCTURE_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "STRUCTURE_BLOCK", "field_11895", "STRUCTURE_BLOCK", "f_58936_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#END_GATEWAY
    [[maybe_unused]] static jobject get_field_END_GATEWAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "END_GATEWAY", "field_11906", "END_GATEWAY", "f_58937_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#END_GATEWAY
    [[maybe_unused]] static void set_field_END_GATEWAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "END_GATEWAY", "field_11906", "END_GATEWAY", "f_58937_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#COMMAND_BLOCK
    [[maybe_unused]] static jobject get_field_COMMAND_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "COMMAND_BLOCK", "field_11904", "COMMAND_BLOCK", "f_58938_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#COMMAND_BLOCK
    [[maybe_unused]] static void set_field_COMMAND_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "COMMAND_BLOCK", "field_11904", "COMMAND_BLOCK", "f_58938_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#SHULKER_BOX
    [[maybe_unused]] static jobject get_field_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SHULKER_BOX", "field_11896", "SHULKER_BOX", "f_58939_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#SHULKER_BOX
    [[maybe_unused]] static void set_field_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SHULKER_BOX", "field_11896", "SHULKER_BOX", "f_58939_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#BED
    [[maybe_unused]] static jobject get_field_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "BED", "field_11910", "BED", "f_58940_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#BED
    [[maybe_unused]] static void set_field_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "BED", "field_11910", "BED", "f_58940_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#CONDUIT
    [[maybe_unused]] static jobject get_field_CONDUIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "CONDUIT", "field_11902", "CONDUIT", "f_58941_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#CONDUIT
    [[maybe_unused]] static void set_field_CONDUIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "CONDUIT", "field_11902", "CONDUIT", "f_58941_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#BARREL
    [[maybe_unused]] static jobject get_field_BARREL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "BARREL", "field_16411", "BARREL", "f_58942_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#BARREL
    [[maybe_unused]] static void set_field_BARREL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "BARREL", "field_16411", "BARREL", "f_58942_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#SMOKER
    [[maybe_unused]] static jobject get_field_SMOKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SMOKER", "field_16414", "SMOKER", "f_58906_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#SMOKER
    [[maybe_unused]] static void set_field_SMOKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SMOKER", "field_16414", "SMOKER", "f_58906_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#BLAST_FURNACE
    [[maybe_unused]] static jobject get_field_BLAST_FURNACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "BLAST_FURNACE", "field_16415", "BLAST_FURNACE", "f_58907_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#BLAST_FURNACE
    [[maybe_unused]] static void set_field_BLAST_FURNACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "BLAST_FURNACE", "field_16415", "BLAST_FURNACE", "f_58907_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#LECTERN
    [[maybe_unused]] static jobject get_field_LECTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "LECTERN", "field_16412", "LECTERN", "f_58908_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#LECTERN
    [[maybe_unused]] static void set_field_LECTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "LECTERN", "field_16412", "LECTERN", "f_58908_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#BELL
    [[maybe_unused]] static jobject get_field_BELL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "BELL", "field_16413", "BELL", "f_58909_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#BELL
    [[maybe_unused]] static void set_field_BELL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "BELL", "field_16413", "BELL", "f_58909_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#JIGSAW
    [[maybe_unused]] static jobject get_field_JIGSAW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "JIGSAW", "field_16549", "JIGSAW", "f_58910_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#JIGSAW
    [[maybe_unused]] static void set_field_JIGSAW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "JIGSAW", "field_16549", "JIGSAW", "f_58910_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#CAMPFIRE
    [[maybe_unused]] static jobject get_field_CAMPFIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "CAMPFIRE", "field_17380", "CAMPFIRE", "f_58911_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#CAMPFIRE
    [[maybe_unused]] static void set_field_CAMPFIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "CAMPFIRE", "field_17380", "CAMPFIRE", "f_58911_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#BEEHIVE
    [[maybe_unused]] static jobject get_field_BEEHIVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "BEEHIVE", "field_20431", "BEEHIVE", "f_58912_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#BEEHIVE
    [[maybe_unused]] static void set_field_BEEHIVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "BEEHIVE", "field_20431", "BEEHIVE", "f_58912_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#SCULK_SENSOR
    [[maybe_unused]] static jobject get_field_SCULK_SENSOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SCULK_SENSOR", "field_28117", "SCULK_SENSOR", "f_155257_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#SCULK_SENSOR
    [[maybe_unused]] static void set_field_SCULK_SENSOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SCULK_SENSOR", "field_28117", "SCULK_SENSOR", "f_155257_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#CALIBRATED_SCULK_SENSOR
    [[maybe_unused]] static jobject get_field_CALIBRATED_SCULK_SENSOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "CALIBRATED_SCULK_SENSOR", "field_43258", "CALIBRATED_SCULK_SENSOR", "f_276581_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#CALIBRATED_SCULK_SENSOR
    [[maybe_unused]] static void set_field_CALIBRATED_SCULK_SENSOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "CALIBRATED_SCULK_SENSOR", "field_43258", "CALIBRATED_SCULK_SENSOR", "f_276581_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#SCULK_CATALYST
    [[maybe_unused]] static jobject get_field_SCULK_CATALYST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SCULK_CATALYST", "field_37647", "SCULK_CATALYST", "f_222758_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#SCULK_CATALYST
    [[maybe_unused]] static void set_field_SCULK_CATALYST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SCULK_CATALYST", "field_37647", "SCULK_CATALYST", "f_222758_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#SCULK_SHRIEKER
    [[maybe_unused]] static jobject get_field_SCULK_SHRIEKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SCULK_SHRIEKER", "field_37648", "SCULK_SHRIEKER", "f_222759_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#SCULK_SHRIEKER
    [[maybe_unused]] static void set_field_SCULK_SHRIEKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SCULK_SHRIEKER", "field_37648", "SCULK_SHRIEKER", "f_222759_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#CHISELED_BOOKSHELF
    [[maybe_unused]] static jobject get_field_CHISELED_BOOKSHELF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "CHISELED_BOOKSHELF", "field_40329", "CHISELED_BOOKSHELF", "f_244310_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#CHISELED_BOOKSHELF
    [[maybe_unused]] static void set_field_CHISELED_BOOKSHELF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "CHISELED_BOOKSHELF", "field_40329", "CHISELED_BOOKSHELF", "f_244310_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#BRUSHABLE_BLOCK
    [[maybe_unused]] static jobject get_field_BRUSHABLE_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "BRUSHABLE_BLOCK", "field_42780", "BRUSHABLE_BLOCK", "f_271323_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#BRUSHABLE_BLOCK
    [[maybe_unused]] static void set_field_BRUSHABLE_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "BRUSHABLE_BLOCK", "field_42780", "BRUSHABLE_BLOCK", "f_271323_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#DECORATED_POT
    [[maybe_unused]] static jobject get_field_DECORATED_POT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "DECORATED_POT", "field_42781", "DECORATED_POT", "f_271291_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#DECORATED_POT
    [[maybe_unused]] static void set_field_DECORATED_POT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "DECORATED_POT", "field_42781", "DECORATED_POT", "f_271291_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#CRAFTER
    [[maybe_unused]] static jobject get_field_CRAFTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "CRAFTER", "field_46808", "CRAFTER", "f_302698_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#CRAFTER
    [[maybe_unused]] static void set_field_CRAFTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "CRAFTER", "field_46808", "CRAFTER", "f_302698_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#TRIAL_SPAWNER
    [[maybe_unused]] static jobject get_field_TRIAL_SPAWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "TRIAL_SPAWNER", "field_47352", "TRIAL_SPAWNER", "f_303206_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#TRIAL_SPAWNER
    [[maybe_unused]] static void set_field_TRIAL_SPAWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "TRIAL_SPAWNER", "field_47352", "TRIAL_SPAWNER", "f_303206_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.BlockEntityType#VAULT
    [[maybe_unused]] static jobject get_field_VAULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "VAULT", "field_48859", "VAULT", "f_316672_"), "Ldqj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.BlockEntityType#VAULT
    [[maybe_unused]] static void set_field_VAULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "VAULT", "field_48859", "VAULT", "f_316672_"), "Ldqj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BlockEntityType#factory
    static jobject get_field_factory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "factory", "field_11892", "factory", "f_58914_"), "Ldqj$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BlockEntityType#factory
    static void set_field_factory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "factory", "field_11892", "factory", "f_58914_"), "Ldqj$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BlockEntityType#blocks
    static jobject get_field_blocks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "validBlocks", "field_19315", "blocks", "f_58915_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BlockEntityType#blocks
    static void set_field_blocks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "validBlocks", "field_19315", "blocks", "f_58915_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BlockEntityType#type
    static jobject get_field_type(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "dataType", "field_11909", "type", "f_58916_"), "Lcom/mojang/datafixers/types/Type;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BlockEntityType#type
    static void set_field_type(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "dataType", "field_11909", "type", "f_58916_"), "Lcom/mojang/datafixers/types/Type;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BlockEntityType#registryEntry
    static jobject get_field_registryEntry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "builtInRegistryHolder", "field_45786", "registryEntry", "f_290724_"), "Ljm$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BlockEntityType#registryEntry
    static void set_field_registryEntry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "builtInRegistryHolder", "field_45786", "registryEntry", "f_290724_"), "Ljm$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getKey", "method_11033", "getId", "m_58954_"), "(Ldqj;)Lakr;");
    }

    static jobject getId(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getId();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_11030", "create", "m_58956_"), "(Ljava/lang/String;Ldqj$b;)Ldqj;");
    }

    static jobject create(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_instantiate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_11032", "instantiate", "m_155264_"), "(Ljd;Ldtc;)Ldqh;");
    }

    static jobject instantiate(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_instantiate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_supports() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isValid", "method_20526", "supports", "m_155262_"), "(Ldtc;)Z");
    }

    static jboolean supports(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_supports();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRegistryEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "builtInRegistryHolder", "method_53254", "getRegistryEntry", "m_294149_"), "()Ljm$c;");
    }

    static jobject getRegistryEntry(const jobject& obj) {
                
       const auto methodID = methodID_getRegistryEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlockEntity", "method_24182", "get", "m_58949_"), "(Ldcc;Ljd;)Ldqh;");
    }

    static jobject get(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_BLOCKENTITYTYPE_HPP