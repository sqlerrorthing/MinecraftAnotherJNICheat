// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_VAULTBLOCKENTITY$SERVER_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_VAULTBLOCKENTITY$SERVER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.VaultBlockEntity$Server
 * Remapped: dsk$b
 */
namespace VaultBlockEntity$Server {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dsk$b", "net/minecraft/world/level/block/entity/vault/VaultBlockEntity$Server", "net/minecraft/class_9199$class_9201", "net/minecraft/block/entity/VaultBlockEntity$Server", "net/minecraft/src/C_313346_$C_313408_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.entity.VaultBlockEntity$Server#UNLOCK_TIME
    [[maybe_unused]] static jint get_field_UNLOCK_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UNLOCKING_DELAY_TICKS", "field_48875", "UNLOCK_TIME", "f_314328_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.VaultBlockEntity$Server#UNLOCK_TIME
    [[maybe_unused]] static void set_field_UNLOCK_TIME(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UNLOCKING_DELAY_TICKS", "field_48875", "UNLOCK_TIME", "f_314328_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.VaultBlockEntity$Server#DISPLAY_UPDATE_INTERVAL
    [[maybe_unused]] static jint get_field_DISPLAY_UPDATE_INTERVAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DISPLAY_CYCLE_TICK_RATE", "field_48876", "DISPLAY_UPDATE_INTERVAL", "f_315248_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.VaultBlockEntity$Server#DISPLAY_UPDATE_INTERVAL
    [[maybe_unused]] static void set_field_DISPLAY_UPDATE_INTERVAL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DISPLAY_CYCLE_TICK_RATE", "field_48876", "DISPLAY_UPDATE_INTERVAL", "f_315248_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.VaultBlockEntity$Server#FAILED_UNLOCK_COOLDOWN
    [[maybe_unused]] static jint get_field_FAILED_UNLOCK_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "INSERT_FAIL_SOUND_BUFFER_TICKS", "field_48877", "FAILED_UNLOCK_COOLDOWN", "f_316099_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.VaultBlockEntity$Server#FAILED_UNLOCK_COOLDOWN
    [[maybe_unused]] static void set_field_FAILED_UNLOCK_COOLDOWN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "INSERT_FAIL_SOUND_BUFFER_TICKS", "field_48877", "FAILED_UNLOCK_COOLDOWN", "f_316099_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_56756", "tick", "m_318871_"), "(Laqu;Ljd;Ldtc;Ldsm;Ldsn;Ldso;)V");
    }

    static void tick(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_tryUnlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tryInsertKey", "method_56757", "tryUnlock", "m_321007_"), "(Laqu;Ljd;Ldtc;Ldsm;Ldsn;Ldso;Lcmx;Lcuq;)V");
    }

    static void tryUnlock(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6, const jobject& arg7) {
       const auto clazz = self();
       const auto methodID = methodID_tryUnlock();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_changeVaultState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setVaultState", "method_56758", "changeVaultState", "m_318999_"), "(Laqu;Ljd;Ldtc;Ldtc;Ldsm;Ldso;)V");
    }

    static void changeVaultState(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_changeVaultState();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_updateDisplayItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "cycleDisplayItemFromLootTable", "method_56753", "updateDisplayItem", "m_321879_"), "(Laqu;Ldsp;Ldsm;Ldso;Ljd;)V");
    }

    static void updateDisplayItem(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_updateDisplayItem();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_generateDisplayItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomDisplayItemFromLootTable", "method_56755", "generateDisplayItem", "m_321020_"), "(Laqu;Ljd;Lakq;)Lcuq;");
    }

    static jobject generateDisplayItem(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_generateDisplayItem();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_unlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "unlock", "method_56754", "unlock", "m_320999_"), "(Laqu;Ldtc;Ljd;Ldsm;Ldsn;Ldso;Ljava/util/List;)V");
    }

    static void unlock(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6) {
       const auto clazz = self();
       const auto methodID = methodID_unlock();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_generateLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "resolveItemsToEject", "method_56751", "generateLoot", "m_323202_"), "(Laqu;Ldsm;Ljd;Lcmx;)Ljava/util/List;");
    }

    static jobject generateLoot(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_generateLoot();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canBeUnlocked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canEjectReward", "method_56760", "canBeUnlocked", "m_322366_"), "(Ldsm;Ldsp;)Z");
    }

    static jboolean canBeUnlocked(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canBeUnlocked();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isValidKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isValidToInsert", "method_56759", "isValidKey", "m_320541_"), "(Ldsm;Lcuq;)Z");
    }

    static jboolean isValidKey(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isValidKey();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldUpdateDisplayItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldCycleDisplayItem", "method_56750", "shouldUpdateDisplayItem", "m_320131_"), "(JLdsp;)Z");
    }

    static jboolean shouldUpdateDisplayItem(const jlong& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_shouldUpdateDisplayItem();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_playFailedUnlockSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "playInsertFailSound", "method_56752", "playFailedUnlockSound", "m_324764_"), "(Laqu;Ldsn;Ljd;Lavo;)V");
    }

    static void playFailedUnlockSound(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_playFailedUnlockSound();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_VAULTBLOCKENTITY$SERVER_HPP