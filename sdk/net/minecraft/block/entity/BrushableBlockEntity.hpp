// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_BRUSHABLEBLOCKENTITY_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_BRUSHABLEBLOCKENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.BrushableBlockEntity
 * Remapped: dql
 */
namespace BrushableBlockEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dql", "net/minecraft/world/level/block/entity/BrushableBlockEntity", "net/minecraft/class_8174", "net/minecraft/block/entity/BrushableBlockEntity", "net/minecraft/src/C_276404_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.entity.BrushableBlockEntity#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_42801", "LOGGER", "f_276497_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_42801", "LOGGER", "f_276497_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.BrushableBlockEntity#LOOT_TABLE_NBT_KEY
    [[maybe_unused]] static jobject get_field_LOOT_TABLE_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOOT_TABLE_TAG", "field_42802", "LOOT_TABLE_NBT_KEY", "f_276647_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#LOOT_TABLE_NBT_KEY
    [[maybe_unused]] static void set_field_LOOT_TABLE_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOOT_TABLE_TAG", "field_42802", "LOOT_TABLE_NBT_KEY", "f_276647_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.BrushableBlockEntity#LOOT_TABLE_SEED_NBT_KEY
    [[maybe_unused]] static jobject get_field_LOOT_TABLE_SEED_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOOT_TABLE_SEED_TAG", "field_42803", "LOOT_TABLE_SEED_NBT_KEY", "f_276481_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#LOOT_TABLE_SEED_NBT_KEY
    [[maybe_unused]] static void set_field_LOOT_TABLE_SEED_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOOT_TABLE_SEED_TAG", "field_42803", "LOOT_TABLE_SEED_NBT_KEY", "f_276481_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.BrushableBlockEntity#HIT_DIRECTION_NBT_KEY
    [[maybe_unused]] static jobject get_field_HIT_DIRECTION_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HIT_DIRECTION_TAG", "field_42804", "HIT_DIRECTION_NBT_KEY", "f_276606_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#HIT_DIRECTION_NBT_KEY
    [[maybe_unused]] static void set_field_HIT_DIRECTION_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HIT_DIRECTION_TAG", "field_42804", "HIT_DIRECTION_NBT_KEY", "f_276606_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.BrushableBlockEntity#ITEM_NBT_KEY
    [[maybe_unused]] static jobject get_field_ITEM_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ITEM_TAG", "field_42805", "ITEM_NBT_KEY", "f_276577_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#ITEM_NBT_KEY
    [[maybe_unused]] static void set_field_ITEM_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ITEM_TAG", "field_42805", "ITEM_NBT_KEY", "f_276577_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.BrushableBlockEntity#field_42806
    [[maybe_unused]] static jint get_field_field_42806() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "BRUSH_COOLDOWN_TICKS", "field_42806", "field_42806", "f_276551_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#field_42806
    [[maybe_unused]] static void set_field_field_42806(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "BRUSH_COOLDOWN_TICKS", "field_42806", "field_42806", "f_276551_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.BrushableBlockEntity#field_42807
    [[maybe_unused]] static jint get_field_field_42807() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "BRUSH_RESET_TICKS", "field_42807", "field_42807", "f_276499_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#field_42807
    [[maybe_unused]] static void set_field_field_42807(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "BRUSH_RESET_TICKS", "field_42807", "field_42807", "f_276499_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.BrushableBlockEntity#field_42808
    [[maybe_unused]] static jint get_field_field_42808() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "REQUIRED_BRUSHES_TO_BREAK", "field_42808", "field_42808", "f_276583_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#field_42808
    [[maybe_unused]] static void set_field_field_42808(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "REQUIRED_BRUSHES_TO_BREAK", "field_42808", "field_42808", "f_276583_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BrushableBlockEntity#brushesCount
    static jint get_field_brushesCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "brushCount", "field_42809", "brushesCount", "f_276531_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#brushesCount
    static void set_field_brushesCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "brushCount", "field_42809", "brushesCount", "f_276531_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BrushableBlockEntity#nextDustTime
    static jlong get_field_nextDustTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "brushCountResetsAtTick", "field_42810", "nextDustTime", "f_276679_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#nextDustTime
    static void set_field_nextDustTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "brushCountResetsAtTick", "field_42810", "nextDustTime", "f_276679_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BrushableBlockEntity#nextBrushTime
    static jlong get_field_nextBrushTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "coolDownEndsAtTick", "field_42811", "nextBrushTime", "f_276557_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#nextBrushTime
    static void set_field_nextBrushTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "coolDownEndsAtTick", "field_42811", "nextBrushTime", "f_276557_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BrushableBlockEntity#item
    static jobject get_field_item(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "item", "field_42812", "item", "f_276563_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#item
    static void set_field_item(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "item", "field_42812", "item", "f_276563_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BrushableBlockEntity#hitDirection
    static jobject get_field_hitDirection(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "hitDirection", "field_42813", "hitDirection", "f_276638_"), "Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#hitDirection
    static void set_field_hitDirection(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "hitDirection", "field_42813", "hitDirection", "f_276638_"), "Lji;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BrushableBlockEntity#lootTable
    static jobject get_field_lootTable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "lootTable", "field_42814", "lootTable", "f_276466_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#lootTable
    static void set_field_lootTable(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "lootTable", "field_42814", "lootTable", "f_276466_"), "Lakq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.BrushableBlockEntity#lootTableSeed
    static jlong get_field_lootTableSeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "lootTableSeed", "field_42815", "lootTableSeed", "f_276487_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.BrushableBlockEntity#lootTableSeed
    static void set_field_lootTableSeed(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "lootTableSeed", "field_42815", "lootTableSeed", "f_276487_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_brush() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "brush", "method_49215", "brush", "m_276923_"), "(JLcmx;Lji;)Z");
    }

    static jboolean brush(const jobject& obj, const jlong& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_brush();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_generateItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "unpackLootTable", "method_49217", "generateItem", "m_276797_"), "(Lcmx;)V");
    }

    static void generateItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_generateItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_finishBrushing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "brushingCompleted", "method_49218", "finishBrushing", "m_276980_"), "(Lcmx;)V");
    }

    static void finishBrushing(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_finishBrushing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_spawnItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "dropContent", "method_49220", "spawnItem", "m_276934_"), "(Lcmx;)V");
    }

    static void spawnItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_spawnItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_scheduledTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "checkReset", "method_49219", "scheduledTick", "m_277175_"), "()V");
    }

    static void scheduledTick(const jobject& obj) {
                
       const auto methodID = methodID_scheduledTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_readLootTableFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "tryLoadLootTable", "method_49222", "readLootTableFromNbt", "m_276996_"), "(Lub;)Z");
    }

    static jboolean readLootTableFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readLootTableFromNbt();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeLootTableToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "trySaveLootTable", "method_49223", "writeLootTableToNbt", "m_277014_"), "(Lub;)Z");
    }

    static jboolean writeLootTableToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeLootTableToNbt();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toInitialChunkDataNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getUpdateTag", "method_16887", "toInitialChunkDataNbt", "m_5995_"), "(Ljo$a;)Lub;");
    }

    static jobject toInitialChunkDataNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toInitialChunkDataNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toUpdatePacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getUpdatePacket", "method_49221", "toUpdatePacket", "m_58483_"), "()Lacb;");
    }

    static jobject toUpdatePacket(const jobject& obj) {
                
       const auto methodID = methodID_toUpdatePacket();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAdditional", "method_11014", "readNbt", "m_318667_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveAdditional", "method_11007", "writeNbt", "m_183515_"), "(Lub;Ljo$a;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setLootTable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLootTable", "method_49216", "setLootTable", "m_277049_"), "(Lakq;J)V");
    }

    static void setLootTable(const jobject& obj, const jobject& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_setLootTable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getDustedLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getCompletionState", "method_49226", "getDustedLevel", "m_276942_"), "()I");
    }

    static jint getDustedLevel(const jobject& obj) {
                
       const auto methodID = methodID_getDustedLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHitDirection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHitDirection", "method_49224", "getHitDirection", "m_277042_"), "()Lji;");
    }

    static jobject getHitDirection(const jobject& obj) {
                
       const auto methodID = methodID_getHitDirection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getItem", "method_49225", "getItem", "m_277047_"), "()Lcuq;");
    }

    static jobject getItem(const jobject& obj) {
                
       const auto methodID = methodID_getItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_BRUSHABLEBLOCKENTITY_HPP