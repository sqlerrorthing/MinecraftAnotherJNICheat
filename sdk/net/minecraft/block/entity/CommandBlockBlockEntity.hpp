// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_COMMANDBLOCKBLOCKENTITY_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_COMMANDBLOCKBLOCKENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.CommandBlockBlockEntity
 * Remapped: dqr
 */
namespace CommandBlockBlockEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dqr", "net/minecraft/world/level/block/entity/CommandBlockEntity", "net/minecraft/class_2593", "net/minecraft/block/entity/CommandBlockBlockEntity", "net/minecraft/src/C_1998_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.block.entity.CommandBlockBlockEntity#powered
    static jboolean get_field_powered(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "powered", "field_11919", "powered", "f_59123_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.CommandBlockBlockEntity#powered
    static void set_field_powered(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "powered", "field_11919", "powered", "f_59123_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.CommandBlockBlockEntity#auto
    static jboolean get_field_auto(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "auto", "field_11918", "auto", "f_59124_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.CommandBlockBlockEntity#auto
    static void set_field_auto(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "auto", "field_11918", "auto", "f_59124_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.CommandBlockBlockEntity#conditionMet
    static jboolean get_field_conditionMet(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "conditionMet", "field_11917", "conditionMet", "f_59125_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.CommandBlockBlockEntity#conditionMet
    static void set_field_conditionMet(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "conditionMet", "field_11917", "conditionMet", "f_59125_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.CommandBlockBlockEntity#commandExecutor
    static jobject get_field_commandExecutor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "commandBlock", "field_11920", "commandExecutor", "f_59127_"), "Ldbx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.CommandBlockBlockEntity#commandExecutor
    static void set_field_commandExecutor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "commandBlock", "field_11920", "commandExecutor", "f_59127_"), "Ldbx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveAdditional", "method_11007", "writeNbt", "m_183515_"), "(Lub;Ljo$a;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAdditional", "method_11014", "readNbt", "m_318667_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_copyItemDataRequiresOperator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "onlyOpCanSetNbt", "method_11011", "copyItemDataRequiresOperator", "m_6326_"), "()Z");
    }

    static jboolean copyItemDataRequiresOperator(const jobject& obj) {
                
       const auto methodID = methodID_copyItemDataRequiresOperator();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCommandExecutor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getCommandBlock", "method_11040", "getCommandExecutor", "m_59141_"), "()Ldbx;");
    }

    static jobject getCommandExecutor(const jobject& obj) {
                
       const auto methodID = methodID_getCommandExecutor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPowered() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPowered", "method_11038", "setPowered", "m_59135_"), "(Z)V");
    }

    static void setPowered(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setPowered();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPowered() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isPowered", "method_11043", "isPowered", "m_59142_"), "()Z");
    }

    static jboolean isPowered(const jobject& obj) {
                
       const auto methodID = methodID_isPowered();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAuto() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isAutomatic", "method_11042", "isAuto", "m_59143_"), "()Z");
    }

    static jboolean isAuto(const jobject& obj) {
                
       const auto methodID = methodID_isAuto();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setAuto() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setAutomatic", "method_11041", "setAuto", "m_59137_"), "(Z)V");
    }

    static void setAuto(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setAuto();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateCommandBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "onModeSwitch", "method_23359", "updateCommandBlock", "m_59144_"), "()V");
    }

    static void updateCommandBlock(const jobject& obj) {
                
       const auto methodID = methodID_updateCommandBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_scheduleAutoTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "scheduleTick", "method_23360", "scheduleAutoTick", "m_59152_"), "()V");
    }

    static void scheduleAutoTick(const jobject& obj) {
                
       const auto methodID = methodID_scheduleAutoTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isConditionMet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "wasConditionMet", "method_11044", "isConditionMet", "m_59145_"), "()Z");
    }

    static jboolean isConditionMet(const jobject& obj) {
                
       const auto methodID = methodID_isConditionMet();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateConditionMet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "markConditionMet", "method_11045", "updateConditionMet", "m_59146_"), "()Z");
    }

    static jboolean updateConditionMet(const jobject& obj) {
                
       const auto methodID = methodID_updateConditionMet();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCommandBlockType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getMode", "method_11039", "getCommandBlockType", "m_59148_"), "()Ldqr$a;");
    }

    static jobject getCommandBlockType(const jobject& obj) {
                
       const auto methodID = methodID_getCommandBlockType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isConditionalCommandBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "isConditional", "method_11046", "isConditionalCommandBlock", "m_59151_"), "()Z");
    }

    static jboolean isConditionalCommandBlock(const jobject& obj) {
                
       const auto methodID = methodID_isConditionalCommandBlock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_readComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyImplicitComponents", "method_57568", "readComponents", "m_318741_"), "(Ldqh$b;)V");
    }

    static void readComponents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readComponents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "collectImplicitComponents", "method_57567", "addComponents", "m_318837_"), "(Lkm$a;)V");
    }

    static void addComponents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addComponents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeFromCopiedStackNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeComponentsFromTag", "method_57569", "removeFromCopiedStackNbt", "m_318942_"), "(Lub;)V");
    }

    static void removeFromCopiedStackNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeFromCopiedStackNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_COMMANDBLOCKBLOCKENTITY_HPP