// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_ENTITY_HOPPERBLOCKENTITY_HPP
#define NET_MINECRAFT_BLOCK_ENTITY_HOPPERBLOCKENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.entity.HopperBlockEntity
 * Remapped: drh
 */
namespace HopperBlockEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("drh", "net/minecraft/world/level/block/entity/HopperBlockEntity", "net/minecraft/class_2614", "net/minecraft/block/entity/HopperBlockEntity", "net/minecraft/src/C_2010_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.block.entity.HopperBlockEntity#TRANSFER_COOLDOWN
    [[maybe_unused]] static jint get_field_TRANSFER_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MOVE_ITEM_SPEED", "field_31341", "TRANSFER_COOLDOWN", "f_155547_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.HopperBlockEntity#TRANSFER_COOLDOWN
    [[maybe_unused]] static void set_field_TRANSFER_COOLDOWN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MOVE_ITEM_SPEED", "field_31341", "TRANSFER_COOLDOWN", "f_155547_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.entity.HopperBlockEntity#INVENTORY_SIZE
    [[maybe_unused]] static jint get_field_INVENTORY_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "HOPPER_CONTAINER_SIZE", "field_31342", "INVENTORY_SIZE", "f_155548_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.entity.HopperBlockEntity#INVENTORY_SIZE
    [[maybe_unused]] static void set_field_INVENTORY_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "HOPPER_CONTAINER_SIZE", "field_31342", "INVENTORY_SIZE", "f_155548_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.block.entity.HopperBlockEntity#AVAILABLE_SLOTS_CACHE
    [[maybe_unused]] static jint get_field_AVAILABLE_SLOTS_CACHE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CACHED_SLOTS", "field_49100", "AVAILABLE_SLOTS_CACHE", "f_315191_"), "[[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.HopperBlockEntity#AVAILABLE_SLOTS_CACHE
    [[maybe_unused]] static void set_field_AVAILABLE_SLOTS_CACHE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CACHED_SLOTS", "field_49100", "AVAILABLE_SLOTS_CACHE", "f_315191_"), "[[I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.HopperBlockEntity#inventory
    static jobject get_field_inventory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "items", "field_12024", "inventory", "f_59301_"), "Ljv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.HopperBlockEntity#inventory
    static void set_field_inventory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "items", "field_12024", "inventory", "f_59301_"), "Ljv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.HopperBlockEntity#transferCooldown
    static jint get_field_transferCooldown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "cooldownTime", "field_12023", "transferCooldown", "f_59302_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.HopperBlockEntity#transferCooldown
    static void set_field_transferCooldown(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "cooldownTime", "field_12023", "transferCooldown", "f_59302_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.HopperBlockEntity#lastTickTime
    static jlong get_field_lastTickTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "tickedGameTime", "field_12022", "lastTickTime", "f_59303_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.HopperBlockEntity#lastTickTime
    static void set_field_lastTickTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "tickedGameTime", "field_12022", "lastTickTime", "f_59303_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.block.entity.HopperBlockEntity#facing
    static jobject get_field_facing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "facing", "field_49101", "facing", "f_315657_"), "Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.block.entity.HopperBlockEntity#facing
    static void set_field_facing(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "facing", "field_49101", "facing", "f_315657_"), "Lji;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAdditional", "method_11014", "readNbt", "m_318667_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveAdditional", "method_11007", "writeNbt", "m_183515_"), "(Lub;Ljo$a;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_size() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getContainerSize", "method_5439", "size", "m_6643_"), "()I");
    }

    static jint size(const jobject& obj) {
                
       const auto methodID = methodID_size();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeItem", "method_5434", "removeStack", "m_7407_"), "(II)Lcuq;");
    }

    static jobject removeStack(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_removeStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItem", "method_5447", "setStack", "m_6836_"), "(ILcuq;)V");
    }

    static void setStack(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setCachedState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setBlockState", "method_31664", "setCachedState", "m_155250_"), "(Ldtc;)V");
    }

    static void setCachedState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCachedState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getContainerName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getDefaultName", "method_17823", "getContainerName", "m_6820_"), "()Lwz;");
    }

    static jobject getContainerName(const jobject& obj) {
                
       const auto methodID = methodID_getContainerName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_serverTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "pushItemsTick", "method_31692", "serverTick", "m_155573_"), "(Ldcw;Ljd;Ldtc;Ldrh;)V");
    }

    static void serverTick(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_serverTick();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_insertAndExtract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tryMoveItems", "method_11243", "insertAndExtract", "m_155578_"), "(Ldcw;Ljd;Ldtc;Ldrh;Ljava/util/function/BooleanSupplier;)Z");
    }

    static jboolean insertAndExtract(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_insertAndExtract();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_isFull() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "inventoryFull", "method_11256", "isFull", "m_59404_"), "()Z");
    }

    static jboolean isFull(const jobject& obj) {
                
       const auto methodID = methodID_isFull();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_insert() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "ejectItems", "method_11246", "insert", "m_155562_"), "(Ldcw;Ljd;Ldrh;)Z");
    }

    static jboolean insert(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_insert();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getAvailableSlots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getSlots", "method_17767", "getAvailableSlots", "m_59339_"), "(Lbqk;Lji;)[I");
    }

    static jint getAvailableSlots(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getAvailableSlots();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_indexArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "createFlatSlots", "method_57011", "indexArray", "m_323455_"), "(I)[I");
    }

    static jint indexArray(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_indexArray();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isInventoryFull() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isFullContainer", "method_11258", "isInventoryFull", "m_59385_"), "(Lbqk;Lji;)Z");
    }

    static jboolean isInventoryFull(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isInventoryFull();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_extract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "suckInItems", "method_11241", "extract", "m_155552_"), "(Ldcw;Ldrg;)Z");
    }

    static jboolean extract(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_extract();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__extract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tryTakeInItemFromSlot", "method_11261", "extract", "m_59354_"), "(Ldrg;Lbqk;ILji;)Z");
    }

    static jboolean _extract(const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__extract();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID___extract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addItem", "method_11247", "extract", "m_59331_"), "(Lbqk;Lcjh;)Z");
    }

    static jboolean __extract(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID___extract();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_transfer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addItem", "method_11260", "transfer", "m_59326_"), "(Lbqk;Lbqk;Lcuq;Lji;)Lcuq;");
    }

    static jobject transfer(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_transfer();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canInsert() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canPlaceItemInContainer", "method_11244", "canInsert", "m_59334_"), "(Lbqk;Lcuq;ILji;)Z");
    }

    static jboolean canInsert(const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_canInsert();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canExtract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canTakeItemFromContainer", "method_11252", "canExtract", "m_271906_"), "(Lbqk;Lbqk;Lcuq;ILji;)Z");
    }

    static jboolean canExtract(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_canExtract();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID__transfer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "tryMoveInItem", "method_11253", "transfer", "m_59320_"), "(Lbqk;Lbqk;Lcuq;ILji;)Lcuq;");
    }

    static jobject _transfer(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID__transfer();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getOutputInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getAttachedContainer", "method_11255", "getOutputInventory", "m_155592_"), "(Ldcw;Ljd;Ldrh;)Lbqk;");
    }

    static jobject getOutputInventory(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getOutputInventory();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getInputInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getSourceContainer", "method_11248", "getInputInventory", "m_155596_"), "(Ldcw;Ldrg;Ljd;Ldtc;)Lbqk;");
    }

    static jobject getInputInventory(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getInputInventory();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getInputItemEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getItemsAtAndAbove", "method_11237", "getInputItemEntities", "m_155589_"), "(Ldcw;Ldrg;)Ljava/util/List;");
    }

    static jobject getInputItemEntities(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getInputItemEntities();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getInventoryAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getContainerAt", "method_11250", "getInventoryAt", "m_59390_"), "(Ldcw;Ljd;)Lbqk;");
    }

    static jobject getInventoryAt(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getInventoryAt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getInventoryAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getContainerAt", "method_11251", "getInventoryAt", "m_59347_"), "(Ldcw;Ljd;Ldtc;DDD)Lbqk;");
    }

    static jobject _getInventoryAt(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5) {
       const auto clazz = self();
       const auto methodID = methodID__getInventoryAt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getBlockInventoryAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getBlockContainer", "method_57010", "getBlockInventoryAt", "m_319514_"), "(Ldcw;Ljd;Ldtc;)Lbqk;");
    }

    static jobject getBlockInventoryAt(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getBlockInventoryAt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getEntityInventoryAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntityContainer", "method_57009", "getEntityInventoryAt", "m_322585_"), "(Ldcw;DDD)Lbqk;");
    }

    static jobject getEntityInventoryAt(const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getEntityInventoryAt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canMergeItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canMergeItems", "method_11254", "canMergeItems", "m_59344_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean canMergeItems(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canMergeItems();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getHopperX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "getLevelX", "method_11266", "getHopperX", "m_6343_"), "()D");
    }

    static jdouble getHopperX(const jobject& obj) {
                
       const auto methodID = methodID_getHopperX();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHopperY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "getLevelY", "method_11264", "getHopperY", "m_6358_"), "()D");
    }

    static jdouble getHopperY(const jobject& obj) {
                
       const auto methodID = methodID_getHopperY();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHopperZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "getLevelZ", "method_11265", "getHopperZ", "m_6446_"), "()D");
    }

    static jdouble getHopperZ(const jobject& obj) {
                
       const auto methodID = methodID_getHopperZ();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_canBlockFromAbove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "isGridAligned", "method_57081", "canBlockFromAbove", "m_320496_"), "()Z");
    }

    static jboolean canBlockFromAbove(const jobject& obj) {
                
       const auto methodID = methodID_canBlockFromAbove();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setTransferCooldown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setCooldown", "method_11238", "setTransferCooldown", "m_59395_"), "(I)V");
    }

    static void setTransferCooldown(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setTransferCooldown();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_needsCooldown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "isOnCooldown", "method_11239", "needsCooldown", "m_59407_"), "()Z");
    }

    static jboolean needsCooldown(const jobject& obj) {
                
       const auto methodID = methodID_needsCooldown();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDisabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "isOnCustomCooldown", "method_11242", "isDisabled", "m_59409_"), "()Z");
    }

    static jboolean isDisabled(const jobject& obj) {
                
       const auto methodID = methodID_isDisabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeldStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getItems", "method_11282", "getHeldStacks", "m_58617_"), "()Ljv;");
    }

    static jobject getHeldStacks(const jobject& obj) {
                
       const auto methodID = methodID_getHeldStacks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHeldStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItems", "method_11281", "setHeldStacks", "m_58609_"), "(Ljv;)V");
    }

    static void setHeldStacks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setHeldStacks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onEntityCollided() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "entityInside", "method_11236", "onEntityCollided", "m_155567_"), "(Ldcw;Ljd;Ldtc;Lbsr;Ldrh;)V");
    }

    static void onEntityCollided(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_onEntityCollided();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_createScreenHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createMenu", "method_5465", "createScreenHandler", "m_6555_"), "(ILcmw;)Lcpu;");
    }

    static jobject createScreenHandler(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createScreenHandler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_ENTITY_HOPPERBLOCKENTITY_HPP