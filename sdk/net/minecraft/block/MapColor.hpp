// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_BLOCK_MAPCOLOR_HPP
#define NET_MINECRAFT_BLOCK_MAPCOLOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.block.MapColor
 * Remapped: epi
 */
namespace MapColor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("epi", "net/minecraft/world/level/material/MapColor", "net/minecraft/class_3620", "net/minecraft/block/MapColor", "net/minecraft/src/C_283734_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.block.MapColor#COLORS
    [[maybe_unused]] static jobject get_field_COLORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "MATERIAL_COLORS", "field_16006", "COLORS", "f_283862_"), "[Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.block.MapColor#COLORS
    [[maybe_unused]] static void set_field_COLORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "MATERIAL_COLORS", "field_16006", "COLORS", "f_283862_"), "[Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#CLEAR
    [[maybe_unused]] static jobject get_field_CLEAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NONE", "field_16008", "CLEAR", "f_283808_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#CLEAR
    [[maybe_unused]] static void set_field_CLEAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NONE", "field_16008", "CLEAR", "f_283808_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#PALE_GREEN
    [[maybe_unused]] static jobject get_field_PALE_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GRASS", "field_15999", "PALE_GREEN", "f_283824_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#PALE_GREEN
    [[maybe_unused]] static void set_field_PALE_GREEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GRASS", "field_15999", "PALE_GREEN", "f_283824_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#PALE_YELLOW
    [[maybe_unused]] static jobject get_field_PALE_YELLOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SAND", "field_15986", "PALE_YELLOW", "f_283761_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#PALE_YELLOW
    [[maybe_unused]] static void set_field_PALE_YELLOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SAND", "field_15986", "PALE_YELLOW", "f_283761_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#WHITE_GRAY
    [[maybe_unused]] static jobject get_field_WHITE_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "WOOL", "field_15979", "WHITE_GRAY", "f_283930_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#WHITE_GRAY
    [[maybe_unused]] static void set_field_WHITE_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "WOOL", "field_15979", "WHITE_GRAY", "f_283930_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#BRIGHT_RED
    [[maybe_unused]] static jobject get_field_BRIGHT_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FIRE", "field_16002", "BRIGHT_RED", "f_283816_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#BRIGHT_RED
    [[maybe_unused]] static void set_field_BRIGHT_RED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FIRE", "field_16002", "BRIGHT_RED", "f_283816_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#PALE_PURPLE
    [[maybe_unused]] static jobject get_field_PALE_PURPLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ICE", "field_16016", "PALE_PURPLE", "f_283828_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#PALE_PURPLE
    [[maybe_unused]] static void set_field_PALE_PURPLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ICE", "field_16016", "PALE_PURPLE", "f_283828_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#IRON_GRAY
    [[maybe_unused]] static jobject get_field_IRON_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "METAL", "field_16005", "IRON_GRAY", "f_283906_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#IRON_GRAY
    [[maybe_unused]] static void set_field_IRON_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "METAL", "field_16005", "IRON_GRAY", "f_283906_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#DARK_GREEN
    [[maybe_unused]] static jobject get_field_DARK_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PLANT", "field_16004", "DARK_GREEN", "f_283915_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#DARK_GREEN
    [[maybe_unused]] static void set_field_DARK_GREEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PLANT", "field_16004", "DARK_GREEN", "f_283915_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#WHITE
    [[maybe_unused]] static jobject get_field_WHITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SNOW", "field_16022", "WHITE", "f_283811_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#WHITE
    [[maybe_unused]] static void set_field_WHITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SNOW", "field_16022", "WHITE", "f_283811_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#LIGHT_BLUE_GRAY
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "CLAY", "field_15976", "LIGHT_BLUE_GRAY", "f_283744_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#LIGHT_BLUE_GRAY
    [[maybe_unused]] static void set_field_LIGHT_BLUE_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "CLAY", "field_15976", "LIGHT_BLUE_GRAY", "f_283744_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#DIRT_BROWN
    [[maybe_unused]] static jobject get_field_DIRT_BROWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "DIRT", "field_16000", "DIRT_BROWN", "f_283762_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#DIRT_BROWN
    [[maybe_unused]] static void set_field_DIRT_BROWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "DIRT", "field_16000", "DIRT_BROWN", "f_283762_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#STONE_GRAY
    [[maybe_unused]] static jobject get_field_STONE_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "STONE", "field_16023", "STONE_GRAY", "f_283947_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#STONE_GRAY
    [[maybe_unused]] static void set_field_STONE_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "STONE", "field_16023", "STONE_GRAY", "f_283947_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#WATER_BLUE
    [[maybe_unused]] static jobject get_field_WATER_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "WATER", "field_16019", "WATER_BLUE", "f_283864_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#WATER_BLUE
    [[maybe_unused]] static void set_field_WATER_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "WATER", "field_16019", "WATER_BLUE", "f_283864_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#OAK_TAN
    [[maybe_unused]] static jobject get_field_OAK_TAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "WOOD", "field_15996", "OAK_TAN", "f_283825_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#OAK_TAN
    [[maybe_unused]] static void set_field_OAK_TAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "WOOD", "field_15996", "OAK_TAN", "f_283825_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#OFF_WHITE
    [[maybe_unused]] static jobject get_field_OFF_WHITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "QUARTZ", "field_16025", "OFF_WHITE", "f_283942_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#OFF_WHITE
    [[maybe_unused]] static void set_field_OFF_WHITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "QUARTZ", "field_16025", "OFF_WHITE", "f_283942_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#ORANGE
    [[maybe_unused]] static jobject get_field_ORANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "COLOR_ORANGE", "field_15987", "ORANGE", "f_283750_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#ORANGE
    [[maybe_unused]] static void set_field_ORANGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "COLOR_ORANGE", "field_15987", "ORANGE", "f_283750_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#MAGENTA
    [[maybe_unused]] static jobject get_field_MAGENTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "COLOR_MAGENTA", "field_15998", "MAGENTA", "f_283931_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#MAGENTA
    [[maybe_unused]] static void set_field_MAGENTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "COLOR_MAGENTA", "field_15998", "MAGENTA", "f_283931_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#LIGHT_BLUE
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "COLOR_LIGHT_BLUE", "field_16024", "LIGHT_BLUE", "f_283869_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#LIGHT_BLUE
    [[maybe_unused]] static void set_field_LIGHT_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "COLOR_LIGHT_BLUE", "field_16024", "LIGHT_BLUE", "f_283869_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#YELLOW
    [[maybe_unused]] static jobject get_field_YELLOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "COLOR_YELLOW", "field_16010", "YELLOW", "f_283832_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#YELLOW
    [[maybe_unused]] static void set_field_YELLOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "COLOR_YELLOW", "field_16010", "YELLOW", "f_283832_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#LIME
    [[maybe_unused]] static jobject get_field_LIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "COLOR_LIGHT_GREEN", "field_15997", "LIME", "f_283916_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#LIME
    [[maybe_unused]] static void set_field_LIME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "COLOR_LIGHT_GREEN", "field_15997", "LIME", "f_283916_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#PINK
    [[maybe_unused]] static jobject get_field_PINK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "COLOR_PINK", "field_16030", "PINK", "f_283765_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#PINK
    [[maybe_unused]] static void set_field_PINK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "COLOR_PINK", "field_16030", "PINK", "f_283765_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#GRAY
    [[maybe_unused]] static jobject get_field_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "COLOR_GRAY", "field_15978", "GRAY", "f_283818_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#GRAY
    [[maybe_unused]] static void set_field_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "COLOR_GRAY", "field_15978", "GRAY", "f_283818_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#LIGHT_GRAY
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "COLOR_LIGHT_GRAY", "field_15993", "LIGHT_GRAY", "f_283779_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#LIGHT_GRAY
    [[maybe_unused]] static void set_field_LIGHT_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "COLOR_LIGHT_GRAY", "field_15993", "LIGHT_GRAY", "f_283779_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#CYAN
    [[maybe_unused]] static jobject get_field_CYAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "COLOR_CYAN", "field_16026", "CYAN", "f_283772_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#CYAN
    [[maybe_unused]] static void set_field_CYAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "COLOR_CYAN", "field_16026", "CYAN", "f_283772_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#PURPLE
    [[maybe_unused]] static jobject get_field_PURPLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "COLOR_PURPLE", "field_16014", "PURPLE", "f_283889_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#PURPLE
    [[maybe_unused]] static void set_field_PURPLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "COLOR_PURPLE", "field_16014", "PURPLE", "f_283889_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#BLUE
    [[maybe_unused]] static jobject get_field_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "COLOR_BLUE", "field_15984", "BLUE", "f_283743_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#BLUE
    [[maybe_unused]] static void set_field_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "COLOR_BLUE", "field_15984", "BLUE", "f_283743_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#BROWN
    [[maybe_unused]] static jobject get_field_BROWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "COLOR_BROWN", "field_15977", "BROWN", "f_283748_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#BROWN
    [[maybe_unused]] static void set_field_BROWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "COLOR_BROWN", "field_15977", "BROWN", "f_283748_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#GREEN
    [[maybe_unused]] static jobject get_field_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "COLOR_GREEN", "field_15995", "GREEN", "f_283784_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#GREEN
    [[maybe_unused]] static void set_field_GREEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "COLOR_GREEN", "field_15995", "GREEN", "f_283784_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#RED
    [[maybe_unused]] static jobject get_field_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "COLOR_RED", "field_16020", "RED", "f_283913_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#RED
    [[maybe_unused]] static void set_field_RED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "COLOR_RED", "field_16020", "RED", "f_283913_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#BLACK
    [[maybe_unused]] static jobject get_field_BLACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "COLOR_BLACK", "field_16009", "BLACK", "f_283927_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#BLACK
    [[maybe_unused]] static void set_field_BLACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "COLOR_BLACK", "field_16009", "BLACK", "f_283927_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#GOLD
    [[maybe_unused]] static jobject get_field_GOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "GOLD", "field_15994", "GOLD", "f_283757_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#GOLD
    [[maybe_unused]] static void set_field_GOLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "GOLD", "field_15994", "GOLD", "f_283757_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#DIAMOND_BLUE
    [[maybe_unused]] static jobject get_field_DIAMOND_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "DIAMOND", "field_15983", "DIAMOND_BLUE", "f_283821_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#DIAMOND_BLUE
    [[maybe_unused]] static void set_field_DIAMOND_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "DIAMOND", "field_15983", "DIAMOND_BLUE", "f_283821_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#LAPIS_BLUE
    [[maybe_unused]] static jobject get_field_LAPIS_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "LAPIS", "field_15980", "LAPIS_BLUE", "f_283933_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#LAPIS_BLUE
    [[maybe_unused]] static void set_field_LAPIS_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "LAPIS", "field_15980", "LAPIS_BLUE", "f_283933_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#EMERALD_GREEN
    [[maybe_unused]] static jobject get_field_EMERALD_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "EMERALD", "field_16001", "EMERALD_GREEN", "f_283812_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#EMERALD_GREEN
    [[maybe_unused]] static void set_field_EMERALD_GREEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "EMERALD", "field_16001", "EMERALD_GREEN", "f_283812_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#SPRUCE_BROWN
    [[maybe_unused]] static jobject get_field_SPRUCE_BROWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "PODZOL", "field_16017", "SPRUCE_BROWN", "f_283819_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#SPRUCE_BROWN
    [[maybe_unused]] static void set_field_SPRUCE_BROWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "PODZOL", "field_16017", "SPRUCE_BROWN", "f_283819_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#DARK_RED
    [[maybe_unused]] static jobject get_field_DARK_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "NETHER", "field_16012", "DARK_RED", "f_283820_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#DARK_RED
    [[maybe_unused]] static void set_field_DARK_RED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "NETHER", "field_16012", "DARK_RED", "f_283820_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_WHITE
    [[maybe_unused]] static jobject get_field_TERRACOTTA_WHITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "TERRACOTTA_WHITE", "field_16003", "TERRACOTTA_WHITE", "f_283919_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_WHITE
    [[maybe_unused]] static void set_field_TERRACOTTA_WHITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "TERRACOTTA_WHITE", "field_16003", "TERRACOTTA_WHITE", "f_283919_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_ORANGE
    [[maybe_unused]] static jobject get_field_TERRACOTTA_ORANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "TERRACOTTA_ORANGE", "field_15981", "TERRACOTTA_ORANGE", "f_283895_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_ORANGE
    [[maybe_unused]] static void set_field_TERRACOTTA_ORANGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "TERRACOTTA_ORANGE", "field_15981", "TERRACOTTA_ORANGE", "f_283895_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_MAGENTA
    [[maybe_unused]] static jobject get_field_TERRACOTTA_MAGENTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "TERRACOTTA_MAGENTA", "field_15985", "TERRACOTTA_MAGENTA", "f_283850_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_MAGENTA
    [[maybe_unused]] static void set_field_TERRACOTTA_MAGENTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "TERRACOTTA_MAGENTA", "field_15985", "TERRACOTTA_MAGENTA", "f_283850_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_LIGHT_BLUE
    [[maybe_unused]] static jobject get_field_TERRACOTTA_LIGHT_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "TERRACOTTA_LIGHT_BLUE", "field_15991", "TERRACOTTA_LIGHT_BLUE", "f_283791_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_LIGHT_BLUE
    [[maybe_unused]] static void set_field_TERRACOTTA_LIGHT_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "TERRACOTTA_LIGHT_BLUE", "field_15991", "TERRACOTTA_LIGHT_BLUE", "f_283791_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_YELLOW
    [[maybe_unused]] static jobject get_field_TERRACOTTA_YELLOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "TERRACOTTA_YELLOW", "field_16013", "TERRACOTTA_YELLOW", "f_283843_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_YELLOW
    [[maybe_unused]] static void set_field_TERRACOTTA_YELLOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "TERRACOTTA_YELLOW", "field_16013", "TERRACOTTA_YELLOW", "f_283843_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_LIME
    [[maybe_unused]] static jobject get_field_TERRACOTTA_LIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "TERRACOTTA_LIGHT_GREEN", "field_16018", "TERRACOTTA_LIME", "f_283778_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_LIME
    [[maybe_unused]] static void set_field_TERRACOTTA_LIME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "TERRACOTTA_LIGHT_GREEN", "field_16018", "TERRACOTTA_LIME", "f_283778_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_PINK
    [[maybe_unused]] static jobject get_field_TERRACOTTA_PINK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "TERRACOTTA_PINK", "field_15989", "TERRACOTTA_PINK", "f_283870_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_PINK
    [[maybe_unused]] static void set_field_TERRACOTTA_PINK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "TERRACOTTA_PINK", "field_15989", "TERRACOTTA_PINK", "f_283870_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_GRAY
    [[maybe_unused]] static jobject get_field_TERRACOTTA_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "TERRACOTTA_GRAY", "field_16027", "TERRACOTTA_GRAY", "f_283861_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_GRAY
    [[maybe_unused]] static void set_field_TERRACOTTA_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "TERRACOTTA_GRAY", "field_16027", "TERRACOTTA_GRAY", "f_283861_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_LIGHT_GRAY
    [[maybe_unused]] static jobject get_field_TERRACOTTA_LIGHT_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "TERRACOTTA_LIGHT_GRAY", "field_15988", "TERRACOTTA_LIGHT_GRAY", "f_283907_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_LIGHT_GRAY
    [[maybe_unused]] static void set_field_TERRACOTTA_LIGHT_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "TERRACOTTA_LIGHT_GRAY", "field_15988", "TERRACOTTA_LIGHT_GRAY", "f_283907_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_CYAN
    [[maybe_unused]] static jobject get_field_TERRACOTTA_CYAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "TERRACOTTA_CYAN", "field_15990", "TERRACOTTA_CYAN", "f_283846_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_CYAN
    [[maybe_unused]] static void set_field_TERRACOTTA_CYAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "TERRACOTTA_CYAN", "field_15990", "TERRACOTTA_CYAN", "f_283846_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_PURPLE
    [[maybe_unused]] static jobject get_field_TERRACOTTA_PURPLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "TERRACOTTA_PURPLE", "field_16029", "TERRACOTTA_PURPLE", "f_283892_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_PURPLE
    [[maybe_unused]] static void set_field_TERRACOTTA_PURPLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "TERRACOTTA_PURPLE", "field_16029", "TERRACOTTA_PURPLE", "f_283892_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_BLUE
    [[maybe_unused]] static jobject get_field_TERRACOTTA_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "TERRACOTTA_BLUE", "field_16015", "TERRACOTTA_BLUE", "f_283908_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_BLUE
    [[maybe_unused]] static void set_field_TERRACOTTA_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "TERRACOTTA_BLUE", "field_16015", "TERRACOTTA_BLUE", "f_283908_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_BROWN
    [[maybe_unused]] static jobject get_field_TERRACOTTA_BROWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "TERRACOTTA_BROWN", "field_15992", "TERRACOTTA_BROWN", "f_283774_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_BROWN
    [[maybe_unused]] static void set_field_TERRACOTTA_BROWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "TERRACOTTA_BROWN", "field_15992", "TERRACOTTA_BROWN", "f_283774_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_GREEN
    [[maybe_unused]] static jobject get_field_TERRACOTTA_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "TERRACOTTA_GREEN", "field_16028", "TERRACOTTA_GREEN", "f_283856_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_GREEN
    [[maybe_unused]] static void set_field_TERRACOTTA_GREEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "TERRACOTTA_GREEN", "field_16028", "TERRACOTTA_GREEN", "f_283856_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_RED
    [[maybe_unused]] static jobject get_field_TERRACOTTA_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "TERRACOTTA_RED", "field_15982", "TERRACOTTA_RED", "f_283798_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_RED
    [[maybe_unused]] static void set_field_TERRACOTTA_RED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "TERRACOTTA_RED", "field_15982", "TERRACOTTA_RED", "f_283798_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TERRACOTTA_BLACK
    [[maybe_unused]] static jobject get_field_TERRACOTTA_BLACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "TERRACOTTA_BLACK", "field_16007", "TERRACOTTA_BLACK", "f_283771_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TERRACOTTA_BLACK
    [[maybe_unused]] static void set_field_TERRACOTTA_BLACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "TERRACOTTA_BLACK", "field_16007", "TERRACOTTA_BLACK", "f_283771_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#DULL_RED
    [[maybe_unused]] static jobject get_field_DULL_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "CRIMSON_NYLIUM", "field_25702", "DULL_RED", "f_283909_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#DULL_RED
    [[maybe_unused]] static void set_field_DULL_RED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "CRIMSON_NYLIUM", "field_25702", "DULL_RED", "f_283909_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#DULL_PINK
    [[maybe_unused]] static jobject get_field_DULL_PINK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "CRIMSON_STEM", "field_25703", "DULL_PINK", "f_283804_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#DULL_PINK
    [[maybe_unused]] static void set_field_DULL_PINK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "CRIMSON_STEM", "field_25703", "DULL_PINK", "f_283804_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#DARK_CRIMSON
    [[maybe_unused]] static jobject get_field_DARK_CRIMSON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "CRIMSON_HYPHAE", "field_25704", "DARK_CRIMSON", "f_283883_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#DARK_CRIMSON
    [[maybe_unused]] static void set_field_DARK_CRIMSON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "CRIMSON_HYPHAE", "field_25704", "DARK_CRIMSON", "f_283883_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#TEAL
    [[maybe_unused]] static jobject get_field_TEAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "WARPED_NYLIUM", "field_25705", "TEAL", "f_283745_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#TEAL
    [[maybe_unused]] static void set_field_TEAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "WARPED_NYLIUM", "field_25705", "TEAL", "f_283745_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#DARK_AQUA
    [[maybe_unused]] static jobject get_field_DARK_AQUA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "WARPED_STEM", "field_25706", "DARK_AQUA", "f_283749_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#DARK_AQUA
    [[maybe_unused]] static void set_field_DARK_AQUA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "WARPED_STEM", "field_25706", "DARK_AQUA", "f_283749_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#DARK_DULL_PINK
    [[maybe_unused]] static jobject get_field_DARK_DULL_PINK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "WARPED_HYPHAE", "field_25707", "DARK_DULL_PINK", "f_283807_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#DARK_DULL_PINK
    [[maybe_unused]] static void set_field_DARK_DULL_PINK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "WARPED_HYPHAE", "field_25707", "DARK_DULL_PINK", "f_283807_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#BRIGHT_TEAL
    [[maybe_unused]] static jobject get_field_BRIGHT_TEAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "WARPED_WART_BLOCK", "field_25708", "BRIGHT_TEAL", "f_283898_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#BRIGHT_TEAL
    [[maybe_unused]] static void set_field_BRIGHT_TEAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "WARPED_WART_BLOCK", "field_25708", "BRIGHT_TEAL", "f_283898_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#DEEPSLATE_GRAY
    [[maybe_unused]] static jobject get_field_DEEPSLATE_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "DEEPSLATE", "field_33532", "DEEPSLATE_GRAY", "f_283875_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#DEEPSLATE_GRAY
    [[maybe_unused]] static void set_field_DEEPSLATE_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "DEEPSLATE", "field_33532", "DEEPSLATE_GRAY", "f_283875_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#RAW_IRON_PINK
    [[maybe_unused]] static jobject get_field_RAW_IRON_PINK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "RAW_IRON", "field_33533", "RAW_IRON_PINK", "f_283877_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#RAW_IRON_PINK
    [[maybe_unused]] static void set_field_RAW_IRON_PINK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "RAW_IRON", "field_33533", "RAW_IRON_PINK", "f_283877_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.block.MapColor#LICHEN_GREEN
    [[maybe_unused]] static jobject get_field_LICHEN_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "GLOW_LICHEN", "field_33617", "LICHEN_GREEN", "f_283769_"), "Lepi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#LICHEN_GREEN
    [[maybe_unused]] static void set_field_LICHEN_GREEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "GLOW_LICHEN", "field_33617", "LICHEN_GREEN", "f_283769_"), "Lepi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.block.MapColor#color
    static jint get_field_color(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "col", "field_16011", "color", "f_283871_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#color
    static void set_field_color(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "col", "field_16011", "color", "f_283871_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.block.MapColor#id
    static jint get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("al", "id", "field_16021", "id", "f_283805_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.block.MapColor#id
    static void set_field_id(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("al", "id", "field_16021", "id", "f_283805_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getRenderColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateRGBColor", "method_15820", "getRenderColor", "m_284280_"), "(Lepi$a;)I");
    }

    static jint getRenderColor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getRenderColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "byId", "method_38479", "get", "m_284175_"), "(I)Lepi;");
    }

    static jobject get(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getUnchecked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "byIdUnsafe", "method_38482", "getUnchecked", "m_284381_"), "(I)Lepi;");
    }

    static jobject getUnchecked(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getUnchecked();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__getRenderColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getColorFromPackedId", "method_38480", "getRenderColor", "m_284315_"), "(I)I");
    }

    static jint _getRenderColor(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__getRenderColor();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getRenderColorByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getPackedId", "method_38481", "getRenderColorByte", "m_284523_"), "(Lepi$a;)B");
    }

    static jbyte getRenderColorByte(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getRenderColorByte();
       return MinecraftSDK::env->CallByteMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_BLOCK_MAPCOLOR_HPP