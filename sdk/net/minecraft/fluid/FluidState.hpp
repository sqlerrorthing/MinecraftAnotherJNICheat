// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_FLUID_FLUIDSTATE_HPP
#define NET_MINECRAFT_FLUID_FLUIDSTATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.fluid.FluidState
 * Remapped: epe
 */
namespace FluidState {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("epe", "net/minecraft/world/level/material/FluidState", "net/minecraft/class_3610", "net/minecraft/fluid/FluidState", "net/minecraft/src/C_2691_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.fluid.FluidState#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_25018", "CODEC", "f_76146_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.fluid.FluidState#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_25018", "CODEC", "f_76146_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.fluid.FluidState#field_31727
    [[maybe_unused]] static jint get_field_field_31727() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "AMOUNT_MAX", "field_31727", "field_31727", "f_164510_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.fluid.FluidState#field_31727
    [[maybe_unused]] static void set_field_field_31727(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "AMOUNT_MAX", "field_31727", "field_31727", "f_164510_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.fluid.FluidState#field_31728
    [[maybe_unused]] static jint get_field_field_31728() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "AMOUNT_FULL", "field_31728", "field_31728", "f_164511_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.fluid.FluidState#field_31728
    [[maybe_unused]] static void set_field_field_31728(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "AMOUNT_FULL", "field_31728", "field_31728", "f_164511_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_getFluid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getType", "method_15772", "getFluid", "m_76152_"), "()Lepd;");
    }

    static jobject getFluid(const jobject& obj) {
                
       const auto methodID = methodID_getFluid();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isStill() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isSource", "method_15771", "isStill", "m_76170_"), "()Z");
    }

    static jboolean isStill(const jobject& obj) {
                
       const auto methodID = methodID_isStill();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEqualAndStill() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isSourceOfType", "method_33659", "isEqualAndStill", "m_164512_"), "(Lepd;)Z");
    }

    static jboolean isEqualAndStill(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isEqualAndStill();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isEmpty", "method_15769", "isEmpty", "m_76178_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getHeight", "method_15763", "getHeight", "m_76155_"), "(Ldcc;Ljd;)F");
    }

    static jfloat getHeight(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getHeight();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getOwnHeight", "method_20785", "getHeight", "m_76182_"), "()F");
    }

    static jfloat _getHeight(const jobject& obj) {
                
       const auto methodID = methodID__getHeight();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getAmount", "method_15761", "getLevel", "m_76186_"), "()I");
    }

    static jint getLevel(const jobject& obj) {
                
       const auto methodID = methodID_getLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_canFlowTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "shouldRenderBackwardUpFace", "method_15756", "canFlowTo", "m_76171_"), "(Ldcc;Ljd;)Z");
    }

    static jboolean canFlowTo(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canFlowTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onScheduledTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_15770", "onScheduledTick", "m_76163_"), "(Ldcw;Ljd;)V");
    }

    static void onScheduledTick(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onScheduledTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_randomDisplayTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "animateTick", "method_15768", "randomDisplayTick", "m_230558_"), "(Ldcw;Ljd;Layw;)V");
    }

    static void randomDisplayTick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_randomDisplayTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_hasRandomTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isRandomlyTicking", "method_15773", "hasRandomTicks", "m_76187_"), "()Z");
    }

    static jboolean hasRandomTicks(const jobject& obj) {
                
       const auto methodID = methodID_hasRandomTicks();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_onRandomTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "randomTick", "method_15757", "onRandomTick", "m_230562_"), "(Ldcw;Ljd;Layw;)V");
    }

    static void onRandomTick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onRandomTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getVelocity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getFlow", "method_15758", "getVelocity", "m_76179_"), "(Ldcc;Ljd;)Lexc;");
    }

    static jobject getVelocity(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getVelocity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "createLegacyBlock", "method_15759", "getBlockState", "m_76188_"), "()Ldtc;");
    }

    static jobject getBlockState(const jobject& obj) {
                
       const auto methodID = methodID_getBlockState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getDripParticle", "method_15766", "getParticle", "m_76189_"), "()Llk;");
    }

    static jobject getParticle(const jobject& obj) {
                
       const auto methodID = methodID_getParticle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isIn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_15767", "isIn", "m_205070_"), "(Lawu;)Z");
    }

    static jboolean isIn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isIn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__isIn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_40179", "isIn", "m_205072_"), "(Ljq;)Z");
    }

    static jboolean _isIn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__isIn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "is", "method_39360", "isOf", "m_192917_"), "(Lepd;)Z");
    }

    static jboolean isOf(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isOf();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBlastResistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getExplosionResistance", "method_15760", "getBlastResistance", "m_76190_"), "()F");
    }

    static jfloat getBlastResistance(const jobject& obj) {
                
       const auto methodID = methodID_getBlastResistance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_canBeReplacedWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canBeReplacedWith", "method_15764", "canBeReplacedWith", "m_76158_"), "(Ldcc;Ljd;Lepd;Lji;)Z");
    }

    static jboolean canBeReplacedWith(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_canBeReplacedWith();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getShape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getShape", "method_17776", "getShape", "m_76183_"), "(Ldcc;Ljd;)Lexv;");
    }

    static jobject getShape(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getShape();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getRegistryEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "holder", "method_40180", "getRegistryEntry", "m_205074_"), "()Ljm;");
    }

    static jobject getRegistryEntry(const jobject& obj) {
                
       const auto methodID = methodID_getRegistryEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_streamTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getTags", "method_40181", "streamTags", "m_205075_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamTags(const jobject& obj) {
                
       const auto methodID = methodID_streamTags();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_FLUID_FLUIDSTATE_HPP