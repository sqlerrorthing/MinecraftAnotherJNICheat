// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_FLUID_LAVAFLUID_HPP
#define NET_MINECRAFT_FLUID_LAVAFLUID_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.fluid.LavaFluid
 * Remapped: eph
 */
namespace LavaFluid {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eph", "net/minecraft/world/level/material/LavaFluid", "net/minecraft/class_3616", "net/minecraft/fluid/LavaFluid", "net/minecraft/src/C_2693_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.fluid.LavaFluid#MIN_HEIGHT_TO_REPLACE
    [[maybe_unused]] static jfloat get_field_MIN_HEIGHT_TO_REPLACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MIN_LEVEL_CUTOFF", "field_31729", "MIN_HEIGHT_TO_REPLACE", "f_164528_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.fluid.LavaFluid#MIN_HEIGHT_TO_REPLACE
    [[maybe_unused]] static void set_field_MIN_HEIGHT_TO_REPLACE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MIN_LEVEL_CUTOFF", "field_31729", "MIN_HEIGHT_TO_REPLACE", "f_164528_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    static jmethodID methodID_getFlowing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getFlowing", "method_15750", "getFlowing", "m_5615_"), "()Lepd;");
    }

    static jobject getFlowing(const jobject& obj) {
                
       const auto methodID = methodID_getFlowing();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStill() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getSource", "method_15751", "getStill", "m_5613_"), "()Lepd;");
    }

    static jobject getStill(const jobject& obj) {
                
       const auto methodID = methodID_getStill();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBucketItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBucket", "method_15774", "getBucketItem", "m_6859_"), "()Lcul;");
    }

    static jobject getBucketItem(const jobject& obj) {
                
       const auto methodID = methodID_getBucketItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_randomDisplayTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "animateTick", "method_15776", "randomDisplayTick", "m_213811_"), "(Ldcw;Ljd;Lepe;Layw;)V");
    }

    static void randomDisplayTick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_randomDisplayTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onRandomTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "randomTick", "method_15792", "onRandomTick", "m_213812_"), "(Ldcw;Ljd;Lepe;Layw;)V");
    }

    static void onRandomTick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_onRandomTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canLightFire() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasFlammableNeighbours", "method_15819", "canLightFire", "m_76227_"), "(Ldcz;Ljd;)Z");
    }

    static jboolean canLightFire(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canLightFire();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_hasBurnableBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isFlammable", "method_15817", "hasBurnableBlock", "m_76245_"), "(Ldcz;Ljd;)Z");
    }

    static jboolean hasBurnableBlock(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_hasBurnableBlock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getDripParticle", "method_15787", "getParticle", "m_7792_"), "()Llk;");
    }

    static jobject getParticle(const jobject& obj) {
                
       const auto methodID = methodID_getParticle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_beforeBreakingBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "beforeDestroyingBlock", "method_15730", "beforeBreakingBlock", "m_7456_"), "(Ldcx;Ljd;Ldtc;)V");
    }

    static void beforeBreakingBlock(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_beforeBreakingBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getFlowSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSlopeFindDistance", "method_15733", "getFlowSpeed", "m_6719_"), "(Ldcz;)I");
    }

    static jint getFlowSpeed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFlowSpeed();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createLegacyBlock", "method_15790", "toBlockState", "m_5804_"), "(Lepe;)Ldtc;");
    }

    static jobject toBlockState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toBlockState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_matchesType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isSame", "method_15780", "matchesType", "m_6212_"), "(Lepd;)Z");
    }

    static jboolean matchesType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_matchesType();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLevelDecreasePerBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getDropOff", "method_15739", "getLevelDecreasePerBlock", "m_6713_"), "(Ldcz;)I");
    }

    static jint getLevelDecreasePerBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getLevelDecreasePerBlock();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canBeReplacedWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canBeReplacedWith", "method_15777", "canBeReplacedWith", "m_5486_"), "(Lepe;Ldcc;Ljd;Lepd;Lji;)Z");
    }

    static jboolean canBeReplacedWith(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_canBeReplacedWith();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getTickRate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getTickDelay", "method_15789", "getTickRate", "m_6718_"), "(Ldcz;)I");
    }

    static jint getTickRate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTickRate();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNextTickDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpreadDelay", "method_15753", "getNextTickDelay", "m_6886_"), "(Ldcw;Ljd;Lepe;Lepe;)I");
    }

    static jint getNextTickDelay(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getNextTickDelay();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_playExtinguishEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fizz", "method_15818", "playExtinguishEvent", "m_76212_"), "(Ldcx;Ljd;)V");
    }

    static void playExtinguishEvent(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_playExtinguishEvent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isInfinite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canConvertToSource", "method_15737", "isInfinite", "m_6760_"), "(Ldcw;)Z");
    }

    static jboolean isInfinite(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isInfinite();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_flow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spreadTo", "method_15745", "flow", "m_6364_"), "(Ldcx;Ljd;Ldtc;Lji;Lepe;)V");
    }

    static void flow(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_flow();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_hasRandomTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isRandomlyTicking", "method_15795", "hasRandomTicks", "m_6685_"), "()Z");
    }

    static jboolean hasRandomTicks(const jobject& obj) {
                
       const auto methodID = methodID_hasRandomTicks();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlastResistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getExplosionResistance", "method_15784", "getBlastResistance", "m_6752_"), "()F");
    }

    static jfloat getBlastResistance(const jobject& obj) {
                
       const auto methodID = methodID_getBlastResistance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBucketFillSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getPickupSound", "method_32359", "getBucketFillSound", "m_142520_"), "()Ljava/util/Optional;");
    }

    static jobject getBucketFillSound(const jobject& obj) {
                
       const auto methodID = methodID_getBucketFillSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_FLUID_LAVAFLUID_HPP