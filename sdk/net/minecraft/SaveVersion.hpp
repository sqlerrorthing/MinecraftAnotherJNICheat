// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SAVEVERSION_HPP
#define NET_MINECRAFT_SAVEVERSION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.SaveVersion
 * Remapped: eqx
 */
namespace SaveVersion {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eqx", "net/minecraft/world/level/storage/DataVersion", "net/minecraft/class_6595", "net/minecraft/SaveVersion", "net/minecraft/src/C_183034_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.SaveVersion#id
    static jint get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "version", "field_34769", "id", "f_192994_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.SaveVersion#id
    static void set_field_id(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "version", "field_34769", "id", "f_192994_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.SaveVersion#series
    static jobject get_field_series(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "series", "field_34770", "series", "f_192995_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.SaveVersion#series
    static void set_field_series(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "series", "field_34770", "series", "f_192995_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.SaveVersion#MAIN_SERIES
    [[maybe_unused]] static jobject get_field_MAIN_SERIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAIN_SERIES", "field_34768", "MAIN_SERIES", "f_192993_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SaveVersion#MAIN_SERIES
    [[maybe_unused]] static void set_field_MAIN_SERIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAIN_SERIES", "field_34768", "MAIN_SERIES", "f_192993_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_isNotMainSeries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isSideSeries", "method_38490", "isNotMainSeries", "m_193002_"), "()Z");
    }

    static jboolean isNotMainSeries(const jobject& obj) {
                
       const auto methodID = methodID_isNotMainSeries();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSeries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSeries", "method_38492", "getSeries", "m_193005_"), "()Ljava/lang/String;");
    }

    static jobject getSeries(const jobject& obj) {
                
       const auto methodID = methodID_getSeries();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getVersion", "method_38494", "getId", "m_193006_"), "()I");
    }

    static jint getId(const jobject& obj) {
                
       const auto methodID = methodID_getId();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAvailableTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isCompatible", "method_38493", "isAvailableTo", "m_193003_"), "(Leqx;)Z");
    }

    static jboolean isAvailableTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isAvailableTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SAVEVERSION_HPP