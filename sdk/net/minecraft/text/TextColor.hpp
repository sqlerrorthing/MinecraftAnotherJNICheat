// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_TEXT_TEXTCOLOR_HPP
#define NET_MINECRAFT_TEXT_TEXTCOLOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.text.TextColor
 * Remapped: xy
 */
namespace TextColor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("xy", "net/minecraft/network/chat/TextColor", "net/minecraft/class_5251", "net/minecraft/text/TextColor", "net/minecraft/src/C_5024_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.text.TextColor#RGB_PREFIX
    [[maybe_unused]] static jobject get_field_RGB_PREFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CUSTOM_COLOR_PREFIX", "field_33291", "RGB_PREFIX", "f_178538_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.text.TextColor#RGB_PREFIX
    [[maybe_unused]] static void set_field_RGB_PREFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CUSTOM_COLOR_PREFIX", "field_33291", "RGB_PREFIX", "f_178538_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.text.TextColor#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_39242", "CODEC", "f_237295_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.TextColor#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_39242", "CODEC", "f_237295_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.text.TextColor#FORMATTING_TO_COLOR
    [[maybe_unused]] static jobject get_field_FORMATTING_TO_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LEGACY_FORMAT_TO_COLOR", "field_24362", "FORMATTING_TO_COLOR", "f_131255_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.text.TextColor#FORMATTING_TO_COLOR
    [[maybe_unused]] static void set_field_FORMATTING_TO_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LEGACY_FORMAT_TO_COLOR", "field_24362", "FORMATTING_TO_COLOR", "f_131255_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.text.TextColor#BY_NAME
    [[maybe_unused]] static jobject get_field_BY_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NAMED_COLORS", "field_24363", "BY_NAME", "f_131256_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.text.TextColor#BY_NAME
    [[maybe_unused]] static void set_field_BY_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NAMED_COLORS", "field_24363", "BY_NAME", "f_131256_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.text.TextColor#rgb
    static jint get_field_rgb(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "value", "field_24364", "rgb", "f_131257_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.text.TextColor#rgb
    static void set_field_rgb(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "value", "field_24364", "rgb", "f_131257_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.text.TextColor#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "name", "field_24365", "name", "f_131258_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.text.TextColor#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "name", "field_24365", "name", "f_131258_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getRgb() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getValue", "method_27716", "getRgb", "m_131265_"), "()I");
    }

    static jint getRgb(const jobject& obj) {
                
       const auto methodID = methodID_getRgb();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "serialize", "method_27721", "getName", "m_131274_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHexCode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "formatValue", "method_27723", "getHexCode", "m_131277_"), "()Ljava/lang/String;");
    }

    static jobject getHexCode(const jobject& obj) {
                
       const auto methodID = methodID_getHexCode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_fromFormatting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromLegacyFormat", "method_27718", "fromFormatting", "m_131270_"), "(Ln;)Lxy;");
    }

    static jobject fromFormatting(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromFormatting();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromRgb() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromRgb", "method_27717", "fromRgb", "m_131266_"), "(I)Lxy;");
    }

    static jobject fromRgb(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromRgb();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseColor", "method_27719", "parse", "m_131268_"), "(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;");
    }

    static jobject parse(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_parse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_TEXT_TEXTCOLOR_HPP