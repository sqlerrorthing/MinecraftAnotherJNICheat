// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_TEXT_TRANSLATABLETEXTCONTENT_HPP
#define NET_MINECRAFT_TEXT_TRANSLATABLETEXTCONTENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.text.TranslatableTextContent
 * Remapped: yk
 */
namespace TranslatableTextContent {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("yk", "net/minecraft/network/chat/contents/TranslatableContents", "net/minecraft/class_2588", "net/minecraft/text/TranslatableTextContent", "net/minecraft/src/C_213523_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.text.TranslatableTextContent#EMPTY_ARGUMENTS
    [[maybe_unused]] static jobject get_field_EMPTY_ARGUMENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_ARGS", "field_24367", "EMPTY_ARGUMENTS", "f_237494_"), "[Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.TranslatableTextContent#EMPTY_ARGUMENTS
    [[maybe_unused]] static void set_field_EMPTY_ARGUMENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_ARGS", "field_24367", "EMPTY_ARGUMENTS", "f_237494_"), "[Ljava/lang/Object;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.text.TranslatableTextContent#OBJECT_ARGUMENT_CODEC
    [[maybe_unused]] static jobject get_field_OBJECT_ARGUMENT_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PRIMITIVE_ARG_CODEC", "field_46635", "OBJECT_ARGUMENT_CODEC", "f_303238_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.text.TranslatableTextContent#OBJECT_ARGUMENT_CODEC
    [[maybe_unused]] static void set_field_OBJECT_ARGUMENT_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PRIMITIVE_ARG_CODEC", "field_46635", "OBJECT_ARGUMENT_CODEC", "f_303238_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.text.TranslatableTextContent#ARGUMENT_CODEC
    [[maybe_unused]] static jobject get_field_ARGUMENT_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ARG_CODEC", "field_46636", "ARGUMENT_CODEC", "f_302806_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.text.TranslatableTextContent#ARGUMENT_CODEC
    [[maybe_unused]] static void set_field_ARGUMENT_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ARG_CODEC", "field_46636", "ARGUMENT_CODEC", "f_302806_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.text.TranslatableTextContent#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_46633", "CODEC", "f_302832_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.TranslatableTextContent#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_46633", "CODEC", "f_302832_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.text.TranslatableTextContent#TYPE
    [[maybe_unused]] static jobject get_field_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TYPE", "field_46634", "TYPE", "f_303657_"), "Lxa$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.TranslatableTextContent#TYPE
    [[maybe_unused]] static void set_field_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TYPE", "field_46634", "TYPE", "f_303657_"), "Lxa$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.text.TranslatableTextContent#LITERAL_PERCENT_SIGN
    [[maybe_unused]] static jobject get_field_LITERAL_PERCENT_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TEXT_PERCENT", "field_24368", "LITERAL_PERCENT_SIGN", "f_237495_"), "Lxe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.text.TranslatableTextContent#LITERAL_PERCENT_SIGN
    [[maybe_unused]] static void set_field_LITERAL_PERCENT_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TEXT_PERCENT", "field_24368", "LITERAL_PERCENT_SIGN", "f_237495_"), "Lxe;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.text.TranslatableTextContent#NULL_ARGUMENT
    [[maybe_unused]] static jobject get_field_NULL_ARGUMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "TEXT_NULL", "field_24369", "NULL_ARGUMENT", "f_237496_"), "Lxe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.text.TranslatableTextContent#NULL_ARGUMENT
    [[maybe_unused]] static void set_field_NULL_ARGUMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "TEXT_NULL", "field_24369", "NULL_ARGUMENT", "f_237496_"), "Lxe;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.text.TranslatableTextContent#key
    static jobject get_field_key(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "key", "field_11876", "key", "f_237497_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.text.TranslatableTextContent#key
    static void set_field_key(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "key", "field_11876", "key", "f_237497_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.text.TranslatableTextContent#fallback
    static jobject get_field_fallback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "fallback", "field_41875", "fallback", "f_263792_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.text.TranslatableTextContent#fallback
    static void set_field_fallback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "fallback", "field_41875", "fallback", "f_263792_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.text.TranslatableTextContent#args
    static jobject get_field_args(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "args", "field_11875", "args", "f_237498_"), "[Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.text.TranslatableTextContent#args
    static void set_field_args(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "args", "field_11875", "args", "f_237498_"), "[Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.text.TranslatableTextContent#languageCache
    static jobject get_field_languageCache(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "decomposedWith", "field_25317", "languageCache", "f_237499_"), "Ltw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.text.TranslatableTextContent#languageCache
    static void set_field_languageCache(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "decomposedWith", "field_25317", "languageCache", "f_237499_"), "Ltw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.text.TranslatableTextContent#translations
    static jobject get_field_translations(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "decomposedParts", "field_11877", "translations", "f_237500_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.text.TranslatableTextContent#translations
    static void set_field_translations(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "decomposedParts", "field_11877", "translations", "f_237500_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.text.TranslatableTextContent#ARG_FORMAT
    [[maybe_unused]] static jobject get_field_ARG_FORMAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "FORMAT_PATTERN", "field_11872", "ARG_FORMAT", "f_237501_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.text.TranslatableTextContent#ARG_FORMAT
    [[maybe_unused]] static void set_field_ARG_FORMAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "FORMAT_PATTERN", "field_11872", "ARG_FORMAT", "f_237501_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "filterAllowedArguments", "method_54245", "validate", "m_307068_"), "(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;");
    }

    static jobject validate(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_validate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isPrimitive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isAllowedPrimitiveArgument", "method_54238", "isPrimitive", "m_306839_"), "(Ljava/lang/Object;)Z");
    }

    static jboolean isPrimitive(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isPrimitive();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toOptionalList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "adjustArgs", "method_54244", "toOptionalList", "m_307058_"), "([Ljava/lang/Object;)Ljava/util/Optional;");
    }

    static jobject toOptionalList(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_toOptionalList();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_toArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "adjustArgs", "method_54241", "toArray", "m_306736_"), "(Ljava/util/Optional;)[Ljava/lang/Object;");
    }

    static jobject toArray(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toArray();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_54239", "of", "m_307802_"), "(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)Lyk;");
    }

    static jobject of(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "type", "method_54163", "getType", "m_304650_"), "()Lxa$a;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateTranslations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "decompose", "method_11025", "updateTranslations", "m_237524_"), "()V");
    }

    static void updateTranslations(const jobject& obj) {
                
       const auto methodID = methodID_updateTranslations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_forEachPart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "decomposeTemplate", "method_11024", "forEachPart", "m_237515_"), "(Ljava/lang/String;Ljava/util/function/Consumer;)V");
    }

    static void forEachPart(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_forEachPart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getArg() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getArgument", "method_29434", "getArg", "m_237509_"), "(I)Lxe;");
    }

    static jobject getArg(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getArg();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_27660", "visit", "m_213724_"), "(Lxe$b;Lxw;)Ljava/util/Optional;");
    }

    static jobject visit(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_visit();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__visit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_27659", "visit", "m_213874_"), "(Lxe$a;)Ljava/util/Optional;");
    }

    static jobject _visit(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__visit();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resolve", "method_10890", "parse", "m_213698_"), "(Let;Lbsr;I)Lxn;");
    }

    static jobject parse(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_parse();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getKey", "method_11022", "getKey", "m_237508_"), "()Ljava/lang/String;");
    }

    static jobject getKey(const jobject& obj) {
                
       const auto methodID = methodID_getKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFallback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getFallback", "method_48323", "getFallback", "m_264577_"), "()Ljava/lang/String;");
    }

    static jobject getFallback(const jobject& obj) {
                
       const auto methodID = methodID_getFallback();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getArgs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getArgs", "method_11023", "getArgs", "m_237523_"), "()[Ljava/lang/Object;");
    }

    static jobject getArgs(const jobject& obj) {
                
       const auto methodID = methodID_getArgs();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_TEXT_TRANSLATABLETEXTCONTENT_HPP