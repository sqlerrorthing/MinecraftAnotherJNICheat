// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_TEXT_STYLE_HPP
#define NET_MINECRAFT_TEXT_STYLE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.text.Style
 * Remapped: xw
 */
namespace Style {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("xw", "net/minecraft/network/chat/Style", "net/minecraft/class_2583", "net/minecraft/text/Style", "net/minecraft/src/C_5020_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.text.Style#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_24360", "EMPTY", "f_131099_"), "Lxw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.Style#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_24360", "EMPTY", "f_131099_"), "Lxw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.text.Style#DEFAULT_FONT_ID
    [[maybe_unused]] static jobject get_field_DEFAULT_FONT_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_FONT", "field_24359", "DEFAULT_FONT_ID", "f_131100_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.Style#DEFAULT_FONT_ID
    [[maybe_unused]] static void set_field_DEFAULT_FONT_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_FONT", "field_24359", "DEFAULT_FONT_ID", "f_131100_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.text.Style#color
    static jobject get_field_color(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "color", "field_11855", "color", "f_131101_"), "Lxy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.text.Style#color
    static void set_field_color(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "color", "field_11855", "color", "f_131101_"), "Lxy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.text.Style#bold
    static jobject get_field_bold(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "bold", "field_11856", "bold", "f_131102_"), "Ljava/lang/Boolean;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.text.Style#bold
    static void set_field_bold(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "bold", "field_11856", "bold", "f_131102_"), "Ljava/lang/Boolean;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.text.Style#italic
    static jobject get_field_italic(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "italic", "field_11852", "italic", "f_131103_"), "Ljava/lang/Boolean;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.text.Style#italic
    static void set_field_italic(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "italic", "field_11852", "italic", "f_131103_"), "Ljava/lang/Boolean;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.text.Style#underlined
    static jobject get_field_underlined(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "underlined", "field_11851", "underlined", "f_131104_"), "Ljava/lang/Boolean;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.text.Style#underlined
    static void set_field_underlined(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "underlined", "field_11851", "underlined", "f_131104_"), "Ljava/lang/Boolean;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.text.Style#strikethrough
    static jobject get_field_strikethrough(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "strikethrough", "field_11857", "strikethrough", "f_131105_"), "Ljava/lang/Boolean;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.text.Style#strikethrough
    static void set_field_strikethrough(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "strikethrough", "field_11857", "strikethrough", "f_131105_"), "Ljava/lang/Boolean;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.text.Style#obfuscated
    static jobject get_field_obfuscated(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "obfuscated", "field_11861", "obfuscated", "f_131106_"), "Ljava/lang/Boolean;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.text.Style#obfuscated
    static void set_field_obfuscated(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "obfuscated", "field_11861", "obfuscated", "f_131106_"), "Ljava/lang/Boolean;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.text.Style#clickEvent
    static jobject get_field_clickEvent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "clickEvent", "field_11853", "clickEvent", "f_131107_"), "Lwx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.text.Style#clickEvent
    static void set_field_clickEvent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "clickEvent", "field_11853", "clickEvent", "f_131107_"), "Lwx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.text.Style#hoverEvent
    static jobject get_field_hoverEvent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "hoverEvent", "field_11858", "hoverEvent", "f_131108_"), "Lxf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.text.Style#hoverEvent
    static void set_field_hoverEvent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "hoverEvent", "field_11858", "hoverEvent", "f_131108_"), "Lxf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.text.Style#insertion
    static jobject get_field_insertion(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "insertion", "field_11859", "insertion", "f_131109_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.text.Style#insertion
    static void set_field_insertion(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "insertion", "field_11859", "insertion", "f_131109_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.text.Style#font
    static jobject get_field_font(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "font", "field_24361", "font", "f_131110_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.text.Style#font
    static void set_field_font(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "font", "field_24361", "font", "f_131110_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_43870", "of", "m_237257_"), "(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lxw;");
    }

    static jobject of(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6, const jobject& arg7, const jobject& arg8, const jobject& arg9) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_getColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getColor", "method_10973", "getColor", "m_131135_"), "()Lxy;");
    }

    static jobject getColor(const jobject& obj) {
                
       const auto methodID = methodID_getColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isBold() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isBold", "method_10984", "isBold", "m_131154_"), "()Z");
    }

    static jboolean isBold(const jobject& obj) {
                
       const auto methodID = methodID_isBold();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isItalic() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isItalic", "method_10966", "isItalic", "m_131161_"), "()Z");
    }

    static jboolean isItalic(const jobject& obj) {
                
       const auto methodID = methodID_isItalic();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isStrikethrough() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isStrikethrough", "method_10986", "isStrikethrough", "m_131168_"), "()Z");
    }

    static jboolean isStrikethrough(const jobject& obj) {
                
       const auto methodID = methodID_isStrikethrough();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isUnderlined() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isUnderlined", "method_10965", "isUnderlined", "m_131171_"), "()Z");
    }

    static jboolean isUnderlined(const jobject& obj) {
                
       const auto methodID = methodID_isUnderlined();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isObfuscated() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isObfuscated", "method_10987", "isObfuscated", "m_131176_"), "()Z");
    }

    static jboolean isObfuscated(const jobject& obj) {
                
       const auto methodID = methodID_isObfuscated();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "isEmpty", "method_10967", "isEmpty", "m_131179_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getClickEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getClickEvent", "method_10970", "getClickEvent", "m_131182_"), "()Lwx;");
    }

    static jobject getClickEvent(const jobject& obj) {
                
       const auto methodID = methodID_getClickEvent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHoverEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getHoverEvent", "method_10969", "getHoverEvent", "m_131186_"), "()Lxf;");
    }

    static jobject getHoverEvent(const jobject& obj) {
                
       const auto methodID = methodID_getHoverEvent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getInsertion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getInsertion", "method_10955", "getInsertion", "m_131189_"), "()Ljava/lang/String;");
    }

    static jobject getInsertion(const jobject& obj) {
                
       const auto methodID = methodID_getInsertion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFont() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getFont", "method_27708", "getFont", "m_131192_"), "()Lakr;");
    }

    static jobject getFont(const jobject& obj) {
                
       const auto methodID = methodID_getFont();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_with() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "checkEmptyAfterChange", "method_54210", "with", "m_304787_"), "(Lxw;Ljava/lang/Object;Ljava/lang/Object;)Lxw;");
    }

    static jobject with(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_with();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_withColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withColor", "method_27703", "withColor", "m_131148_"), "(Lxy;)Lxw;");
    }

    static jobject withColor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__withColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withColor", "method_10977", "withColor", "m_131140_"), "(Ln;)Lxw;");
    }

    static jobject _withColor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__withColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___withColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withColor", "method_36139", "withColor", "m_178520_"), "(I)Lxw;");
    }

    static jobject __withColor(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID___withColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withBold() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withBold", "method_10982", "withBold", "m_131136_"), "(Ljava/lang/Boolean;)Lxw;");
    }

    static jobject withBold(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withBold();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withItalic() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "withItalic", "method_10978", "withItalic", "m_131155_"), "(Ljava/lang/Boolean;)Lxw;");
    }

    static jobject withItalic(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withItalic();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withUnderline() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "withUnderlined", "method_30938", "withUnderline", "m_131162_"), "(Ljava/lang/Boolean;)Lxw;");
    }

    static jobject withUnderline(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withUnderline();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withStrikethrough() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "withStrikethrough", "method_36140", "withStrikethrough", "m_178522_"), "(Ljava/lang/Boolean;)Lxw;");
    }

    static jobject withStrikethrough(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withStrikethrough();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withObfuscated() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "withObfuscated", "method_36141", "withObfuscated", "m_178524_"), "(Ljava/lang/Boolean;)Lxw;");
    }

    static jobject withObfuscated(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withObfuscated();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withClickEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withClickEvent", "method_10958", "withClickEvent", "m_131142_"), "(Lwx;)Lxw;");
    }

    static jobject withClickEvent(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withClickEvent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withHoverEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withHoverEvent", "method_10949", "withHoverEvent", "m_131144_"), "(Lxf;)Lxw;");
    }

    static jobject withHoverEvent(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withHoverEvent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withInsertion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withInsertion", "method_10975", "withInsertion", "m_131138_"), "(Ljava/lang/String;)Lxw;");
    }

    static jobject withInsertion(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withInsertion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withFont() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withFont", "method_27704", "withFont", "m_131150_"), "(Lakr;)Lxw;");
    }

    static jobject withFont(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withFont();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withFormatting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "applyFormat", "method_27706", "withFormatting", "m_131157_"), "(Ln;)Lxw;");
    }

    static jobject withFormatting(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withFormatting();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withExclusiveFormatting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "applyLegacyFormat", "method_27707", "withExclusiveFormatting", "m_131164_"), "(Ln;)Lxw;");
    }

    static jobject withExclusiveFormatting(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withExclusiveFormatting();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__withFormatting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyFormats", "method_27705", "withFormatting", "m_131152_"), "([Ln;)Lxw;");
    }

    static jobject _withFormatting(const jobject& obj, const jarray& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__withFormatting();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_withParent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyTo", "method_27702", "withParent", "m_131146_"), "(Lxw;)Lxw;");
    }

    static jobject withParent(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withParent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_TEXT_STYLE_HPP