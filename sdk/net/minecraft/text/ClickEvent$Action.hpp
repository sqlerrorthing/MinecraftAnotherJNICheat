// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_TEXT_CLICKEVENT$ACTION_HPP
#define NET_MINECRAFT_TEXT_CLICKEVENT$ACTION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.text.ClickEvent$Action
 * Remapped: wx$a
 */
namespace ClickEvent$Action {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("wx$a", "net/minecraft/network/chat/ClickEvent$Action", "net/minecraft/class_2558$class_2559", "net/minecraft/text/ClickEvent$Action", "net/minecraft/src/C_4993_$C_4994_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.text.ClickEvent$Action#OPEN_URL
    [[maybe_unused]] static jobject get_field_OPEN_URL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "OPEN_URL", "field_11749", "OPEN_URL", "OPEN_URL"), "Lwx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.ClickEvent$Action#OPEN_URL
    [[maybe_unused]] static void set_field_OPEN_URL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "OPEN_URL", "field_11749", "OPEN_URL", "OPEN_URL"), "Lwx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.text.ClickEvent$Action#OPEN_FILE
    [[maybe_unused]] static jobject get_field_OPEN_FILE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "OPEN_FILE", "field_11746", "OPEN_FILE", "OPEN_FILE"), "Lwx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.ClickEvent$Action#OPEN_FILE
    [[maybe_unused]] static void set_field_OPEN_FILE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "OPEN_FILE", "field_11746", "OPEN_FILE", "OPEN_FILE"), "Lwx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.text.ClickEvent$Action#RUN_COMMAND
    [[maybe_unused]] static jobject get_field_RUN_COMMAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RUN_COMMAND", "field_11750", "RUN_COMMAND", "RUN_COMMAND"), "Lwx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.ClickEvent$Action#RUN_COMMAND
    [[maybe_unused]] static void set_field_RUN_COMMAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RUN_COMMAND", "field_11750", "RUN_COMMAND", "RUN_COMMAND"), "Lwx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.text.ClickEvent$Action#SUGGEST_COMMAND
    [[maybe_unused]] static jobject get_field_SUGGEST_COMMAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SUGGEST_COMMAND", "field_11745", "SUGGEST_COMMAND", "SUGGEST_COMMAND"), "Lwx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.ClickEvent$Action#SUGGEST_COMMAND
    [[maybe_unused]] static void set_field_SUGGEST_COMMAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SUGGEST_COMMAND", "field_11745", "SUGGEST_COMMAND", "SUGGEST_COMMAND"), "Lwx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.text.ClickEvent$Action#CHANGE_PAGE
    [[maybe_unused]] static jobject get_field_CHANGE_PAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CHANGE_PAGE", "field_11748", "CHANGE_PAGE", "CHANGE_PAGE"), "Lwx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.ClickEvent$Action#CHANGE_PAGE
    [[maybe_unused]] static void set_field_CHANGE_PAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CHANGE_PAGE", "field_11748", "CHANGE_PAGE", "CHANGE_PAGE"), "Lwx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.text.ClickEvent$Action#COPY_TO_CLIPBOARD
    [[maybe_unused]] static jobject get_field_COPY_TO_CLIPBOARD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "COPY_TO_CLIPBOARD", "field_21462", "COPY_TO_CLIPBOARD", "COPY_TO_CLIPBOARD"), "Lwx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.ClickEvent$Action#COPY_TO_CLIPBOARD
    [[maybe_unused]] static void set_field_COPY_TO_CLIPBOARD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "COPY_TO_CLIPBOARD", "field_21462", "COPY_TO_CLIPBOARD", "COPY_TO_CLIPBOARD"), "Lwx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.text.ClickEvent$Action#UNVALIDATED_CODEC
    [[maybe_unused]] static jobject get_field_UNVALIDATED_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "UNSAFE_CODEC", "field_46595", "UNVALIDATED_CODEC", "f_303760_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.ClickEvent$Action#UNVALIDATED_CODEC
    [[maybe_unused]] static void set_field_UNVALIDATED_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "UNSAFE_CODEC", "field_46595", "UNVALIDATED_CODEC", "f_303760_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.text.ClickEvent$Action#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CODEC", "field_46596", "CODEC", "f_303637_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.text.ClickEvent$Action#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CODEC", "field_46596", "CODEC", "f_303637_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.text.ClickEvent$Action#userDefinable
    static jboolean get_field_userDefinable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "allowFromServer", "field_11744", "userDefinable", "f_130635_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.text.ClickEvent$Action#userDefinable
    static void set_field_userDefinable(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "allowFromServer", "field_11744", "userDefinable", "f_130635_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.text.ClickEvent$Action#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "name", "field_11742", "name", "f_130636_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.text.ClickEvent$Action#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "name", "field_11742", "name", "f_130636_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lwx$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lwx$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isUserDefinable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isAllowedFromServer", "method_10847", "isUserDefinable", "m_130644_"), "()Z");
    }

    static jboolean isUserDefinable(const jobject& obj) {
                
       const auto methodID = methodID_isUserDefinable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_asString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getSerializedName", "method_15434", "asString", "m_7912_"), "()Ljava/lang/String;");
    }

    static jobject asString(const jobject& obj) {
                
       const auto methodID = methodID_asString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "filterForSerialization", "method_54152", "validate", "m_306018_"), "(Lwx$a;)Lcom/mojang/serialization/DataResult;");
    }

    static jobject validate(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_validate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_TEXT_CLICKEVENT$ACTION_HPP