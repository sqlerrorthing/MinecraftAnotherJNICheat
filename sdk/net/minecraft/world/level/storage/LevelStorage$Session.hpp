// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_LEVEL_STORAGE_LEVELSTORAGE$SESSION_HPP
#define NET_MINECRAFT_WORLD_LEVEL_STORAGE_LEVELSTORAGE$SESSION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.level.storage.LevelStorage$Session
 * Remapped: erf$c
 */
namespace LevelStorage$Session {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("erf$c", "net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess", "net/minecraft/class_32$class_5143", "net/minecraft/world/level/storage/LevelStorage$Session", "net/minecraft/src/C_2785_$C_2786_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.world.level.storage.LevelStorage$Session#lock
    static jobject get_field_lock(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lock", "field_23767", "lock", "f_78270_"), "Laxt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.level.storage.LevelStorage$Session#lock
    static void set_field_lock(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lock", "field_23767", "lock", "f_78270_"), "Laxt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.level.storage.LevelStorage$Session#directory
    static jobject get_field_directory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "levelDirectory", "field_23768", "directory", "f_230867_"), "Lerf$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.level.storage.LevelStorage$Session#directory
    static void set_field_directory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "levelDirectory", "field_23768", "directory", "f_230867_"), "Lerf$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.storage.LevelStorage$Session#directoryName
    static jobject get_field_directoryName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "levelId", "field_23769", "directoryName", "f_78272_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.LevelStorage$Session#directoryName
    static void set_field_directoryName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "levelId", "field_23769", "directoryName", "f_78272_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.storage.LevelStorage$Session#paths
    static jobject get_field_paths(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "resources", "field_24190", "paths", "f_78273_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.LevelStorage$Session#paths
    static void set_field_paths(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "resources", "field_24190", "paths", "f_78273_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getUsableSpace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "estimateDiskSpace", "method_57628", "getUsableSpace", "m_322538_"), "()J");
    }

    static jlong getUsableSpace(const jobject& obj) {
                
       const auto methodID = methodID_getUsableSpace();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldShowLowDiskSpaceWarning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "checkForLowDiskSpace", "method_57629", "shouldShowLowDiskSpaceWarning", "m_323802_"), "()Z");
    }

    static jboolean shouldShowLowDiskSpaceWarning(const jobject& obj) {
                
       const auto methodID = methodID_shouldShowLowDiskSpaceWarning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tryClose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "safeClose", "method_54532", "tryClose", "m_306156_"), "()V");
    }

    static void tryClose(const jobject& obj) {
                
       const auto methodID = methodID_tryClose();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLevelStorage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "parent", "method_52617", "getLevelStorage", "m_295711_"), "()Lerf;");
    }

    static jobject getLevelStorage(const jobject& obj) {
                
       const auto methodID = methodID_getLevelStorage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDirectory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getLevelDirectory", "method_54543", "getDirectory", "m_306248_"), "()Lerf$b;");
    }

    static jobject getDirectory(const jobject& obj) {
                
       const auto methodID = methodID_getDirectory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDirectoryName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getLevelId", "method_27005", "getDirectoryName", "m_78277_"), "()Ljava/lang/String;");
    }

    static jobject getDirectoryName(const jobject& obj) {
                
       const auto methodID = methodID_getDirectoryName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__getDirectory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getLevelPath", "method_27010", "getDirectory", "m_78283_"), "(Lerd;)Ljava/nio/file/Path;");
    }

    static jobject _getDirectory(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getDirectory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWorldDirectory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDimensionPath", "method_27424", "getWorldDirectory", "m_197394_"), "(Lakq;)Ljava/nio/file/Path;");
    }

    static jobject getWorldDirectory(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getWorldDirectory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_checkValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "checkLock", "method_27017", "checkValid", "m_78313_"), "()V");
    }

    static void checkValid(const jobject& obj) {
                
       const auto methodID = methodID_checkValid();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createSaveHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "createPlayerStorage", "method_27427", "createSaveHandler", "m_78301_"), "()Leri;");
    }

    static jobject createSaveHandler(const jobject& obj) {
                
       const auto methodID = methodID_createSaveHandler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLevelSummary() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSummary", "method_29584", "getLevelSummary", "m_78308_"), "(Lcom/mojang/serialization/Dynamic;)Lerg;");
    }

    static jobject getLevelSummary(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getLevelSummary();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readLevelProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getDataTag", "method_54545", "readLevelProperties", "m_307464_"), "()Lcom/mojang/serialization/Dynamic;");
    }

    static jobject readLevelProperties(const jobject& obj) {
                
       const auto methodID = methodID_readLevelProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readOldLevelProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getDataTagFallback", "method_54546", "readOldLevelProperties", "m_305112_"), "()Lcom/mojang/serialization/Dynamic;");
    }

    static jobject readOldLevelProperties(const jobject& obj) {
                
       const auto methodID = methodID_readOldLevelProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__readLevelProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getDataTag", "method_27013", "readLevelProperties", "m_246049_"), "(Z)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject _readLevelProperties(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID__readLevelProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_backupLevelDataFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "saveDataTag", "method_27425", "backupLevelDataFile", "m_78287_"), "(Lka;Lerl;)V");
    }

    static void backupLevelDataFile(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_backupLevelDataFile();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__backupLevelDataFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "saveDataTag", "method_27426", "backupLevelDataFile", "m_78290_"), "(Lka;Lerl;Lub;)V");
    }

    static void _backupLevelDataFile(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__backupLevelDataFile();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_save() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "saveLevelData", "method_54538", "save", "m_305059_"), "(Lub;)V");
    }

    static void save(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_save();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getIconFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getIconFile", "method_27014", "getIconFile", "m_182514_"), "()Ljava/util/Optional;");
    }

    static jobject getIconFile(const jobject& obj) {
                
       const auto methodID = methodID_getIconFile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_deleteSessionLock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "deleteLevel", "method_27015", "deleteSessionLock", "m_78311_"), "()V");
    }

    static void deleteSessionLock(const jobject& obj) {
                
       const auto methodID = methodID_deleteSessionLock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__save() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renameLevel", "method_27008", "save", "m_78297_"), "(Ljava/lang/String;)V");
    }

    static void _save(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__save();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removePlayerAndSave() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renameAndDropPlayer", "method_54540", "removePlayerAndSave", "m_307222_"), "(Ljava/lang/String;)V");
    }

    static void removePlayerAndSave(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removePlayerAndSave();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___save() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "modifyLevelDataWithoutDatafix", "method_54537", "save", "m_306294_"), "(Ljava/util/function/Consumer;)V");
    }

    static void __save(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID___save();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createBackup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "makeWorldBackup", "method_27016", "createBackup", "m_78312_"), "()J");
    }

    static jlong createBackup(const jobject& obj) {
                
       const auto methodID = methodID_createBackup();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_levelDatExists() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "hasWorldData", "method_54547", "levelDatExists", "m_306456_"), "()Z");
    }

    static jboolean levelDatExists(const jobject& obj) {
                
       const auto methodID = methodID_levelDatExists();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tryRestoreBackup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "restoreLevelDataFromOld", "method_54548", "tryRestoreBackup", "m_305486_"), "()Z");
    }

    static jboolean tryRestoreBackup(const jobject& obj) {
                
       const auto methodID = methodID_tryRestoreBackup();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLastModifiedTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getFileModificationTime", "method_54539", "getLastModifiedTime", "m_306206_"), "(Z)Ljava/time/Instant;");
    }

    static jobject getLastModifiedTime(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_getLastModifiedTime();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_LEVEL_STORAGE_LEVELSTORAGE$SESSION_HPP