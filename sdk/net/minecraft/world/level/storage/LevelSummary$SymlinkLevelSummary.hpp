// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_LEVEL_STORAGE_LEVELSUMMARY$SYMLINKLEVELSUMMARY_HPP
#define NET_MINECRAFT_WORLD_LEVEL_STORAGE_LEVELSUMMARY$SYMLINKLEVELSUMMARY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.level.storage.LevelSummary$SymlinkLevelSummary
 * Remapped: erg$c
 */
namespace LevelSummary$SymlinkLevelSummary {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("erg$c", "net/minecraft/world/level/storage/LevelSummary$SymlinkLevelSummary", "net/minecraft/class_34$class_8578", "net/minecraft/world/level/storage/LevelSummary$SymlinkLevelSummary", "net/minecraft/src/C_2789_$C_289811_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.level.storage.LevelSummary$SymlinkLevelSummary#MORE_INFO_TEXT
    [[maybe_unused]] static jobject get_field_MORE_INFO_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MORE_INFO_BUTTON", "field_46836", "MORE_INFO_TEXT", "f_303689_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.LevelSummary$SymlinkLevelSummary#MORE_INFO_TEXT
    [[maybe_unused]] static void set_field_MORE_INFO_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MORE_INFO_BUTTON", "field_46836", "MORE_INFO_TEXT", "f_303689_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.level.storage.LevelSummary$SymlinkLevelSummary#TITLE_TEXT
    [[maybe_unused]] static jobject get_field_TITLE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "INFO", "field_46837", "TITLE_TEXT", "f_302262_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.LevelSummary$SymlinkLevelSummary#TITLE_TEXT
    [[maybe_unused]] static void set_field_TITLE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "INFO", "field_46837", "TITLE_TEXT", "f_302262_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getDisplayName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getLevelName", "method_252", "getDisplayName", "m_78361_"), "()Ljava/lang/String;");
    }

    static jobject getDisplayName(const jobject& obj) {
                
       const auto methodID = methodID_getDisplayName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDetails() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getInfo", "method_27429", "getDetails", "m_78376_"), "()Lwz;");
    }

    static jobject getDetails(const jobject& obj) {
                
       const auto methodID = methodID_getDetails();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLastPlayed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getLastPlayed", "method_249", "getLastPlayed", "m_78366_"), "()J");
    }

    static jlong getLastPlayed(const jobject& obj) {
                
       const auto methodID = methodID_getLastPlayed();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_isUnavailable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "isDisabled", "method_33784", "isUnavailable", "m_164916_"), "()Z");
    }

    static jboolean isUnavailable(const jobject& obj) {
                
       const auto methodID = methodID_isUnavailable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSelectWorldText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "primaryActionMessage", "method_54551", "getSelectWorldText", "m_304777_"), "()Lwz;");
    }

    static jobject getSelectWorldText(const jobject& obj) {
                
       const auto methodID = methodID_getSelectWorldText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSelectable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "primaryActionActive", "method_54552", "isSelectable", "m_305960_"), "()Z");
    }

    static jboolean isSelectable(const jobject& obj) {
                
       const auto methodID = methodID_isSelectable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isImmediatelyLoadable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "canUpload", "method_56127", "isImmediatelyLoadable", "m_322465_"), "()Z");
    }

    static jboolean isImmediatelyLoadable(const jobject& obj) {
                
       const auto methodID = methodID_isImmediatelyLoadable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEditable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "canEdit", "method_54553", "isEditable", "m_305680_"), "()Z");
    }

    static jboolean isEditable(const jobject& obj) {
                
       const auto methodID = methodID_isEditable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isRecreatable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "canRecreate", "method_54554", "isRecreatable", "m_306795_"), "()Z");
    }

    static jboolean isRecreatable(const jobject& obj) {
                
       const auto methodID = methodID_isRecreatable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_LEVEL_STORAGE_LEVELSUMMARY$SYMLINKLEVELSUMMARY_HPP