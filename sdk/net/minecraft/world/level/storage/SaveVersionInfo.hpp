// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_LEVEL_STORAGE_SAVEVERSIONINFO_HPP
#define NET_MINECRAFT_WORLD_LEVEL_STORAGE_SAVEVERSIONINFO_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.level.storage.SaveVersionInfo
 * Remapped: erh
 */
namespace SaveVersionInfo {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("erh", "net/minecraft/world/level/storage/LevelVersion", "net/minecraft/class_5315", "net/minecraft/world/level/storage/SaveVersionInfo", "net/minecraft/src/C_2790_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.level.storage.SaveVersionInfo#levelFormatVersion
    static jint get_field_levelFormatVersion(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "levelDataVersion", "field_25024", "levelFormatVersion", "f_78378_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.SaveVersionInfo#levelFormatVersion
    static void set_field_levelFormatVersion(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "levelDataVersion", "field_25024", "levelFormatVersion", "f_78378_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.storage.SaveVersionInfo#lastPlayed
    static jlong get_field_lastPlayed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lastPlayed", "field_25025", "lastPlayed", "f_78379_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.SaveVersionInfo#lastPlayed
    static void set_field_lastPlayed(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lastPlayed", "field_25025", "lastPlayed", "f_78379_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.storage.SaveVersionInfo#versionName
    static jobject get_field_versionName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minecraftVersionName", "field_25026", "versionName", "f_78380_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.SaveVersionInfo#versionName
    static void set_field_versionName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minecraftVersionName", "field_25026", "versionName", "f_78380_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.storage.SaveVersionInfo#version
    static jobject get_field_version(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "minecraftVersion", "field_25027", "version", "f_78381_"), "Leqx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.SaveVersionInfo#version
    static void set_field_version(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "minecraftVersion", "field_25027", "version", "f_78381_"), "Leqx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.storage.SaveVersionInfo#stable
    static jboolean get_field_stable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "snapshot", "field_25028", "stable", "f_78382_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.SaveVersionInfo#stable
    static void set_field_stable(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "snapshot", "field_25028", "stable", "f_78382_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_fromDynamic() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_29023", "fromDynamic", "m_78390_"), "(Lcom/mojang/serialization/Dynamic;)Lerh;");
    }

    static jobject fromDynamic(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromDynamic();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getLevelFormatVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "levelDataVersion", "method_29022", "getLevelFormatVersion", "m_78389_"), "()I");
    }

    static jint getLevelFormatVersion(const jobject& obj) {
                
       const auto methodID = methodID_getLevelFormatVersion();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLastPlayed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "lastPlayed", "method_29024", "getLastPlayed", "m_78392_"), "()J");
    }

    static jlong getLastPlayed(const jobject& obj) {
                
       const auto methodID = methodID_getLastPlayed();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVersionName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "minecraftVersionName", "method_29025", "getVersionName", "m_78393_"), "()Ljava/lang/String;");
    }

    static jobject getVersionName(const jobject& obj) {
                
       const auto methodID = methodID_getVersionName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "minecraftVersion", "method_29026", "getVersion", "m_193029_"), "()Leqx;");
    }

    static jobject getVersion(const jobject& obj) {
                
       const auto methodID = methodID_getVersion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isStable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "snapshot", "method_29027", "isStable", "m_78395_"), "()Z");
    }

    static jboolean isStable(const jobject& obj) {
                
       const auto methodID = methodID_isStable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_LEVEL_STORAGE_SAVEVERSIONINFO_HPP