// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_LEVEL_STORAGE_LEVELSTORAGE_HPP
#define NET_MINECRAFT_WORLD_LEVEL_STORAGE_LEVELSTORAGE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.level.storage.LevelStorage
 * Remapped: erf
 */
namespace LevelStorage {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("erf", "net/minecraft/world/level/storage/LevelStorageSource", "net/minecraft/class_32", "net/minecraft/world/level/storage/LevelStorage", "net/minecraft/src/C_2785_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.world.level.storage.LevelStorage#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_17665", "LOGGER", "f_78191_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.world.level.storage.LevelStorage#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_17665", "LOGGER", "f_78191_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.world.level.storage.LevelStorage#TIME_FORMATTER
    [[maybe_unused]] static jobject get_field_TIME_FORMATTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FORMATTER", "field_200", "TIME_FORMATTER", "f_78192_"), "Ljava/time/format/DateTimeFormatter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.world.level.storage.LevelStorage#TIME_FORMATTER
    [[maybe_unused]] static void set_field_TIME_FORMATTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FORMATTER", "field_200", "TIME_FORMATTER", "f_78192_"), "Ljava/time/format/DateTimeFormatter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.level.storage.LevelStorage#DATA_KEY
    [[maybe_unused]] static jobject get_field_DATA_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TAG_DATA", "field_36348", "DATA_KEY", "f_202311_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.LevelStorage#DATA_KEY
    [[maybe_unused]] static void set_field_DATA_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TAG_DATA", "field_36348", "DATA_KEY", "f_202311_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.level.storage.LevelStorage#DEFAULT_ALLOWED_SYMLINK_MATCHER
    [[maybe_unused]] static jobject get_field_DEFAULT_ALLOWED_SYMLINK_MATCHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NO_SYMLINKS_ALLOWED", "field_44951", "DEFAULT_ALLOWED_SYMLINK_MATCHER", "f_289833_"), "Ljava/nio/file/PathMatcher;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.LevelStorage#DEFAULT_ALLOWED_SYMLINK_MATCHER
    [[maybe_unused]] static void set_field_DEFAULT_ALLOWED_SYMLINK_MATCHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NO_SYMLINKS_ALLOWED", "field_44951", "DEFAULT_ALLOWED_SYMLINK_MATCHER", "f_289833_"), "Ljava/nio/file/PathMatcher;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.level.storage.LevelStorage#ALLOWED_SYMLINKS_FILE_NAME
    [[maybe_unused]] static jobject get_field_ALLOWED_SYMLINKS_FILE_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ALLOWED_SYMLINKS_CONFIG_NAME", "field_44950", "ALLOWED_SYMLINKS_FILE_NAME", "f_289824_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.level.storage.LevelStorage#ALLOWED_SYMLINKS_FILE_NAME
    [[maybe_unused]] static void set_field_ALLOWED_SYMLINKS_FILE_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ALLOWED_SYMLINKS_CONFIG_NAME", "field_44950", "ALLOWED_SYMLINKS_FILE_NAME", "f_289824_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.level.storage.LevelStorage#MAX_LEVEL_DATA_SIZE
    [[maybe_unused]] static jint get_field_MAX_LEVEL_DATA_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "UNCOMPRESSED_NBT_QUOTA", "field_46830", "MAX_LEVEL_DATA_SIZE", "f_302867_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.LevelStorage#MAX_LEVEL_DATA_SIZE
    [[maybe_unused]] static void set_field_MAX_LEVEL_DATA_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "UNCOMPRESSED_NBT_QUOTA", "field_46830", "MAX_LEVEL_DATA_SIZE", "f_302867_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.level.storage.LevelStorage#RECOMMENDED_USABLE_SPACE_BYTES
    [[maybe_unused]] static jint get_field_RECOMMENDED_USABLE_SPACE_BYTES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DISK_SPACE_WARNING_THRESHOLD", "field_49426", "RECOMMENDED_USABLE_SPACE_BYTES", "f_316115_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.LevelStorage#RECOMMENDED_USABLE_SPACE_BYTES
    [[maybe_unused]] static void set_field_RECOMMENDED_USABLE_SPACE_BYTES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DISK_SPACE_WARNING_THRESHOLD", "field_49426", "RECOMMENDED_USABLE_SPACE_BYTES", "f_316115_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.storage.LevelStorage#savesDirectory
    static jobject get_field_savesDirectory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "baseDir", "field_17666", "savesDirectory", "f_78194_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.LevelStorage#savesDirectory
    static void set_field_savesDirectory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "baseDir", "field_17666", "savesDirectory", "f_78194_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.storage.LevelStorage#backupsDirectory
    static jobject get_field_backupsDirectory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "backupDir", "field_17667", "backupsDirectory", "f_78195_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.LevelStorage#backupsDirectory
    static void set_field_backupsDirectory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "backupDir", "field_17667", "backupsDirectory", "f_78195_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.level.storage.LevelStorage#dataFixer
    static jobject get_field_dataFixer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "fixerUpper", "field_17668", "dataFixer", "f_78196_"), "Lcom/mojang/datafixers/DataFixer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.level.storage.LevelStorage#dataFixer
    static void set_field_dataFixer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "fixerUpper", "field_17668", "dataFixer", "f_78196_"), "Lcom/mojang/datafixers/DataFixer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.storage.LevelStorage#symlinkFinder
    static jobject get_field_symlinkFinder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "worldDirValidator", "field_44952", "symlinkFinder", "f_289816_"), "Lews;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.storage.LevelStorage#symlinkFinder
    static void set_field_symlinkFinder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "worldDirValidator", "field_44952", "symlinkFinder", "f_289816_"), "Lews;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_createSymlinkFinder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseValidator", "method_52235", "createSymlinkFinder", "m_289881_"), "(Ljava/nio/file/Path;)Lews;");
    }

    static jobject createSymlinkFinder(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createSymlinkFinder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createDefault", "method_26999", "create", "m_78242_"), "(Ljava/nio/file/Path;)Lerf;");
    }

    static jobject create(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_parseDataPackSettings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readDataConfig", "method_29580", "parseDataPackSettings", "m_245610_"), "(Lcom/mojang/serialization/Dynamic;)Lddr;");
    }

    static jobject parseDataPackSettings(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_parseDataPackSettings();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_parseDataPacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getPackConfig", "method_54522", "parseDataPacks", "m_305246_"), "(Lcom/mojang/serialization/Dynamic;Latp;Z)Lalo$d;");
    }

    static jobject parseDataPacks(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_parseDataPacks();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_parseSaveProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getLevelDataAndDimensions", "method_54523", "parseSaveProperties", "m_306102_"), "(Lcom/mojang/serialization/Dynamic;Lddr;Ljz;Lka$b;)Lerc;");
    }

    static jobject parseSaveProperties(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_parseSaveProperties();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getFormatName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getName", "method_35504", "getFormatName", "m_164909_"), "()Ljava/lang/String;");
    }

    static jobject getFormatName(const jobject& obj) {
                
       const auto methodID = methodID_getFormatName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLevelList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "findLevelCandidates", "method_235", "getLevelList", "m_230833_"), "()Lerf$a;");
    }

    static jobject getLevelList(const jobject& obj) {
                
       const auto methodID = methodID_getLevelList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadSummaries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadLevelSummaries", "method_43417", "loadSummaries", "m_230813_"), "(Lerf$a;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject loadSummaries(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadSummaries();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCurrentVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getStorageVersion", "method_17931", "getCurrentVersion", "m_78265_"), "()I");
    }

    static jint getCurrentVersion(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentVersion();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_readLevelProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "readLevelDataTagRaw", "method_54529", "readLevelProperties", "m_305304_"), "(Ljava/nio/file/Path;)Lub;");
    }

    static jobject readLevelProperties(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_readLevelProperties();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__readLevelProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readLevelDataTagFixed", "method_54528", "readLevelProperties", "m_306158_"), "(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject _readLevelProperties(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__readLevelProperties();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readSummary() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readLevelSummary", "method_54527", "readSummary", "m_306052_"), "(Lerf$b;Z)Lerg;");
    }

    static jobject readSummary(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_readSummary();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLastModifiedTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getFileModificationTime", "method_54526", "getLastModifiedTime", "m_307617_"), "(Lerf$b;)J");
    }

    static jlong getLastModifiedTime(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getLastModifiedTime();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__getLastModifiedTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getFileModificationTime", "method_54530", "getLastModifiedTime", "m_306357_"), "(Ljava/nio/file/Path;)Ljava/time/Instant;");
    }

    static jobject _getLastModifiedTime(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__getLastModifiedTime();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_parseSummary() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeLevelSummary", "method_54524", "parseSummary", "m_306201_"), "(Lcom/mojang/serialization/Dynamic;Lerf$b;Z)Lerg;");
    }

    static jobject parseSummary(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_parseSummary();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_parseEnabledFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "parseFeatureFlagsFromSummary", "method_45552", "parseEnabledFeatures", "m_247076_"), "(Lcom/mojang/serialization/Dynamic;)Lcpl;");
    }

    static jobject parseEnabledFeatures(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_parseEnabledFeatures();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_loadCompactLevelData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "readLightweightData", "method_40035", "loadCompactLevelData", "m_230836_"), "(Ljava/nio/file/Path;)Luy;");
    }

    static jobject loadCompactLevelData(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_loadCompactLevelData();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isLevelNameValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isNewLevelIdAcceptable", "method_240", "isLevelNameValid", "m_78240_"), "(Ljava/lang/String;)Z");
    }

    static jboolean isLevelNameValid(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isLevelNameValid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_levelExists() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "levelExists", "method_230", "levelExists", "m_78255_"), "(Ljava/lang/String;)Z");
    }

    static jboolean levelExists(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_levelExists();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_resolve() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getLevelPath", "method_52238", "resolve", "m_289874_"), "(Ljava/lang/String;)Ljava/nio/file/Path;");
    }

    static jobject resolve(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_resolve();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSavesDirectory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getBaseDir", "method_19636", "getSavesDirectory", "m_78257_"), "()Ljava/nio/file/Path;");
    }

    static jobject getSavesDirectory(const jobject& obj) {
                
       const auto methodID = methodID_getSavesDirectory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBackupsDirectory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getBackupPath", "method_236", "getBackupsDirectory", "m_78262_"), "()Ljava/nio/file/Path;");
    }

    static jobject getBackupsDirectory(const jobject& obj) {
                
       const auto methodID = methodID_getBackupsDirectory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createSession() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "validateAndCreateAccess", "method_52236", "createSession", "m_289864_"), "(Ljava/lang/String;)Lerf$c;");
    }

    static jobject createSession(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createSession();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createSessionWithoutSymlinkCheck() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "createAccess", "method_27002", "createSessionWithoutSymlinkCheck", "m_78260_"), "(Ljava/lang/String;)Lerf$c;");
    }

    static jobject createSessionWithoutSymlinkCheck(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createSessionWithoutSymlinkCheck();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSymlinkFinder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getWorldDirValidator", "method_52237", "getSymlinkFinder", "m_289863_"), "()Lews;");
    }

    static jobject getSymlinkFinder(const jobject& obj) {
                
       const auto methodID = methodID_getSymlinkFinder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_LEVEL_STORAGE_LEVELSTORAGE_HPP