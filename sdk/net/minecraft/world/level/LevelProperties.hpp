// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_LEVEL_LEVELPROPERTIES_HPP
#define NET_MINECRAFT_WORLD_LEVEL_LEVELPROPERTIES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.level.LevelProperties
 * Remapped: erj
 */
namespace LevelProperties {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("erj", "net/minecraft/world/level/storage/PrimaryLevelData", "net/minecraft/class_31", "net/minecraft/world/level/LevelProperties", "net/minecraft/src/C_2793_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.level.LevelProperties#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "LOGGER", "field_25029", "LOGGER", "f_78442_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "LOGGER", "field_25029", "LOGGER", "f_78442_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.level.LevelProperties#LEVEL_NAME_KEY
    [[maybe_unused]] static jobject get_field_LEVEL_NAME_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LEVEL_NAME", "field_46838", "LEVEL_NAME_KEY", "f_303393_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.level.LevelProperties#LEVEL_NAME_KEY
    [[maybe_unused]] static void set_field_LEVEL_NAME_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LEVEL_NAME", "field_46838", "LEVEL_NAME_KEY", "f_303393_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.world.level.LevelProperties#PLAYER_KEY
    [[maybe_unused]] static jobject get_field_PLAYER_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PLAYER", "field_36349", "PLAYER_KEY", "f_202314_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.world.level.LevelProperties#PLAYER_KEY
    [[maybe_unused]] static void set_field_PLAYER_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PLAYER", "field_36349", "PLAYER_KEY", "f_202314_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.world.level.LevelProperties#WORLD_GEN_SETTINGS_KEY
    [[maybe_unused]] static jobject get_field_WORLD_GEN_SETTINGS_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WORLD_GEN_SETTINGS", "field_31843", "WORLD_GEN_SETTINGS_KEY", "f_164940_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.world.level.LevelProperties#WORLD_GEN_SETTINGS_KEY
    [[maybe_unused]] static void set_field_WORLD_GEN_SETTINGS_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WORLD_GEN_SETTINGS", "field_31843", "WORLD_GEN_SETTINGS_KEY", "f_164940_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#levelInfo
    static jobject get_field_levelInfo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "settings", "field_25030", "levelInfo", "f_78443_"), "Ldda;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#levelInfo
    static void set_field_levelInfo(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "settings", "field_25030", "levelInfo", "f_78443_"), "Ldda;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#generatorOptions
    static jobject get_field_generatorOptions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "worldOptions", "field_25425", "generatorOptions", "f_244409_"), "Ldzw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#generatorOptions
    static void set_field_generatorOptions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "worldOptions", "field_25425", "generatorOptions", "f_244409_"), "Ldzw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#specialProperty
    static jobject get_field_specialProperty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "specialWorldProperty", "field_40372", "specialProperty", "f_244368_"), "Lerj$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#specialProperty
    static void set_field_specialProperty(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "specialWorldProperty", "field_40372", "specialProperty", "f_244368_"), "Lerj$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#lifecycle
    static jobject get_field_lifecycle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "worldGenSettingsLifecycle", "field_25426", "lifecycle", "f_78445_"), "Lcom/mojang/serialization/Lifecycle;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#lifecycle
    static void set_field_lifecycle(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "worldGenSettingsLifecycle", "field_25426", "lifecycle", "f_78445_"), "Lcom/mojang/serialization/Lifecycle;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#spawnPos
    static jobject get_field_spawnPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "spawnPos", "field_48380", "spawnPos", "f_315660_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#spawnPos
    static void set_field_spawnPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "spawnPos", "field_48380", "spawnPos", "f_315660_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#spawnAngle
    static jfloat get_field_spawnAngle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "spawnAngle", "field_26367", "spawnAngle", "f_78449_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#spawnAngle
    static void set_field_spawnAngle(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "spawnAngle", "field_26367", "spawnAngle", "f_78449_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#time
    static jlong get_field_time(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "gameTime", "field_189", "time", "f_78450_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#time
    static void set_field_time(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "gameTime", "field_189", "time", "f_78450_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#timeOfDay
    static jlong get_field_timeOfDay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "dayTime", "field_198", "timeOfDay", "f_78451_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#timeOfDay
    static void set_field_timeOfDay(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "dayTime", "field_198", "timeOfDay", "f_78451_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#playerData
    static jobject get_field_playerData(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "loadedPlayerTag", "field_170", "playerData", "f_78455_"), "Lub;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#playerData
    static void set_field_playerData(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "loadedPlayerTag", "field_170", "playerData", "f_78455_"), "Lub;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#version
    static jint get_field_version(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "version", "field_158", "version", "f_78456_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#version
    static void set_field_version(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "version", "field_158", "version", "f_78456_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#clearWeatherTime
    static jint get_field_clearWeatherTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "clearWeatherTime", "field_176", "clearWeatherTime", "f_78457_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#clearWeatherTime
    static void set_field_clearWeatherTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "clearWeatherTime", "field_176", "clearWeatherTime", "f_78457_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#raining
    static jboolean get_field_raining(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "raining", "field_190", "raining", "f_78458_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#raining
    static void set_field_raining(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "raining", "field_190", "raining", "f_78458_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#rainTime
    static jint get_field_rainTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "rainTime", "field_192", "rainTime", "f_78459_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#rainTime
    static void set_field_rainTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "rainTime", "field_192", "rainTime", "f_78459_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#thundering
    static jboolean get_field_thundering(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "thundering", "field_168", "thundering", "f_78460_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#thundering
    static void set_field_thundering(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "thundering", "field_168", "thundering", "f_78460_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#thunderTime
    static jint get_field_thunderTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "thunderTime", "field_173", "thunderTime", "f_78461_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#thunderTime
    static void set_field_thunderTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "thunderTime", "field_173", "thunderTime", "f_78461_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#initialized
    static jboolean get_field_initialized(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "initialized", "field_185", "initialized", "f_78462_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#initialized
    static void set_field_initialized(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "initialized", "field_185", "initialized", "f_78462_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#difficultyLocked
    static jboolean get_field_difficultyLocked(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "difficultyLocked", "field_157", "difficultyLocked", "f_78463_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#difficultyLocked
    static void set_field_difficultyLocked(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "difficultyLocked", "field_157", "difficultyLocked", "f_78463_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#worldBorder
    static jobject get_field_worldBorder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "worldBorder", "field_24193", "worldBorder", "f_78464_"), "Ldut$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#worldBorder
    static void set_field_worldBorder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "worldBorder", "field_24193", "worldBorder", "f_78464_"), "Ldut$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#dragonFight
    static jobject get_field_dragonFight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "endDragonFightData", "field_25031", "dragonFight", "f_78465_"), "Ldxb$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#dragonFight
    static void set_field_dragonFight(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "endDragonFightData", "field_25031", "dragonFight", "f_78465_"), "Ldxb$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#customBossEvents
    static jobject get_field_customBossEvents(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "customBossEvents", "field_156", "customBossEvents", "f_78466_"), "Lub;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#customBossEvents
    static void set_field_customBossEvents(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "customBossEvents", "field_156", "customBossEvents", "f_78466_"), "Lub;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#wanderingTraderSpawnDelay
    static jint get_field_wanderingTraderSpawnDelay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "wanderingTraderSpawnDelay", "field_17736", "wanderingTraderSpawnDelay", "f_78467_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#wanderingTraderSpawnDelay
    static void set_field_wanderingTraderSpawnDelay(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "wanderingTraderSpawnDelay", "field_17736", "wanderingTraderSpawnDelay", "f_78467_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#wanderingTraderSpawnChance
    static jint get_field_wanderingTraderSpawnChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "wanderingTraderSpawnChance", "field_17737", "wanderingTraderSpawnChance", "f_78437_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#wanderingTraderSpawnChance
    static void set_field_wanderingTraderSpawnChance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "wanderingTraderSpawnChance", "field_17737", "wanderingTraderSpawnChance", "f_78437_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#wanderingTraderId
    static jobject get_field_wanderingTraderId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "wanderingTraderId", "field_17738", "wanderingTraderId", "f_78438_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#wanderingTraderId
    static void set_field_wanderingTraderId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "wanderingTraderId", "field_17738", "wanderingTraderId", "f_78438_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#serverBrands
    static jobject get_field_serverBrands(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "knownServerBrands", "field_21837", "serverBrands", "f_78439_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#serverBrands
    static void set_field_serverBrands(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "knownServerBrands", "field_21837", "serverBrands", "f_78439_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#modded
    static jboolean get_field_modded(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "wasModded", "field_21838", "modded", "f_78440_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#modded
    static void set_field_modded(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "wasModded", "field_21838", "modded", "f_78440_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#removedFeatures
    static jobject get_field_removedFeatures(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "removedFeatureFlags", "field_43352", "removedFeatures", "f_276525_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#removedFeatures
    static void set_field_removedFeatures(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "removedFeatureFlags", "field_43352", "removedFeatures", "f_276525_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.level.LevelProperties#scheduledEvents
    static jobject get_field_scheduledEvents(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "scheduledEvents", "field_191", "scheduledEvents", "f_78441_"), "Lewp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.level.LevelProperties#scheduledEvents
    static void set_field_scheduledEvents(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "scheduledEvents", "field_191", "scheduledEvents", "f_78441_"), "Lewp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_readProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_29029", "readProperties", "m_78530_"), "(Lcom/mojang/serialization/Dynamic;Ldda;Lerj$a;Ldzw;Lcom/mojang/serialization/Lifecycle;)Lerj;");
    }

    static jobject readProperties(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_readProperties();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_cloneWorldNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTag", "method_163", "cloneWorldNbt", "m_6626_"), "(Lka;Lub;)Lub;");
    }

    static jobject cloneWorldNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_cloneWorldNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setTagData", "method_158", "updateProperties", "m_78545_"), "(Lka;Lub;Lub;)V");
    }

    static void updateProperties(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateProperties();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createStringList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stringCollectionToTag", "method_49902", "createStringList", "m_277055_"), "(Ljava/util/Set;)Luh;");
    }

    static jobject createStringList(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createStringList();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getSpawnPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpawnPos", "method_56126", "getSpawnPos", "m_318766_"), "()Ljd;");
    }

    static jobject getSpawnPos(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpawnAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSpawnAngle", "method_30656", "getSpawnAngle", "m_6790_"), "()F");
    }

    static jfloat getSpawnAngle(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnAngle();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getGameTime", "method_188", "getTime", "m_6793_"), "()J");
    }

    static jlong getTime(const jobject& obj) {
                
       const auto methodID = methodID_getTime();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTimeOfDay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getDayTime", "method_217", "getTimeOfDay", "m_6792_"), "()J");
    }

    static jlong getTimeOfDay(const jobject& obj) {
                
       const auto methodID = methodID_getTimeOfDay();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayerData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getLoadedPlayerTag", "method_226", "getPlayerData", "m_6614_"), "()Lub;");
    }

    static jobject getPlayerData(const jobject& obj) {
                
       const auto methodID = methodID_getPlayerData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setGameTime", "method_29034", "setTime", "m_6253_"), "(J)V");
    }

    static void setTime(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_setTime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setTimeOfDay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setDayTime", "method_29035", "setTimeOfDay", "m_6247_"), "(J)V");
    }

    static void setTimeOfDay(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_setTimeOfDay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setSpawnPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSpawn", "method_187", "setSpawnPos", "m_7250_"), "(Ljd;F)V");
    }

    static void setSpawnPos(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_setSpawnPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLevelName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getLevelName", "method_150", "getLevelName", "m_5462_"), "()Ljava/lang/String;");
    }

    static jobject getLevelName(const jobject& obj) {
                
       const auto methodID = methodID_getLevelName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getVersion", "method_168", "getVersion", "m_6517_"), "()I");
    }

    static jint getVersion(const jobject& obj) {
                
       const auto methodID = methodID_getVersion();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getClearWeatherTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getClearWeatherTime", "method_155", "getClearWeatherTime", "m_6537_"), "()I");
    }

    static jint getClearWeatherTime(const jobject& obj) {
                
       const auto methodID = methodID_getClearWeatherTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setClearWeatherTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setClearWeatherTime", "method_167", "setClearWeatherTime", "m_6393_"), "(I)V");
    }

    static void setClearWeatherTime(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setClearWeatherTime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isThundering() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "isThundering", "method_203", "isThundering", "m_6534_"), "()Z");
    }

    static jboolean isThundering(const jobject& obj) {
                
       const auto methodID = methodID_isThundering();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setThundering() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setThundering", "method_147", "setThundering", "m_5557_"), "(Z)V");
    }

    static void setThundering(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setThundering();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getThunderTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getThunderTime", "method_145", "getThunderTime", "m_6558_"), "()I");
    }

    static jint getThunderTime(const jobject& obj) {
                
       const auto methodID = methodID_getThunderTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setThunderTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setThunderTime", "method_173", "setThunderTime", "m_6398_"), "(I)V");
    }

    static void setThunderTime(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setThunderTime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isRaining() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isRaining", "method_156", "isRaining", "m_6533_"), "()Z");
    }

    static jboolean isRaining(const jobject& obj) {
                
       const auto methodID = methodID_isRaining();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setRaining() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setRaining", "method_157", "setRaining", "m_5565_"), "(Z)V");
    }

    static void setRaining(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setRaining();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRainTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getRainTime", "method_190", "getRainTime", "m_6531_"), "()I");
    }

    static jint getRainTime(const jobject& obj) {
                
       const auto methodID = methodID_getRainTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setRainTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setRainTime", "method_164", "setRainTime", "m_6399_"), "(I)V");
    }

    static void setRainTime(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setRainTime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getGameType", "method_210", "getGameMode", "m_5464_"), "()Ldct;");
    }

    static jobject getGameMode(const jobject& obj) {
                
       const auto methodID = methodID_getGameMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setGameType", "method_193", "setGameMode", "m_5458_"), "(Ldct;)V");
    }

    static void setGameMode(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setGameMode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isHardcore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "isHardcore", "method_152", "isHardcore", "m_5466_"), "()Z");
    }

    static jboolean isHardcore(const jobject& obj) {
                
       const auto methodID = methodID_isHardcore();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_areCommandsAllowed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "isAllowCommands", "method_194", "areCommandsAllowed", "m_5468_"), "()Z");
    }

    static jboolean areCommandsAllowed(const jobject& obj) {
                
       const auto methodID = methodID_areCommandsAllowed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInitialized() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "isInitialized", "method_222", "isInitialized", "m_6535_"), "()Z");
    }

    static jboolean isInitialized(const jobject& obj) {
                
       const auto methodID = methodID_isInitialized();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setInitialized() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setInitialized", "method_223", "setInitialized", "m_5555_"), "(Z)V");
    }

    static void setInitialized(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setInitialized();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getGameRules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getGameRules", "method_146", "getGameRules", "m_5470_"), "()Ldcs;");
    }

    static jobject getGameRules(const jobject& obj) {
                
       const auto methodID = methodID_getGameRules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWorldBorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getWorldBorder", "method_27422", "getWorldBorder", "m_5813_"), "()Ldut$c;");
    }

    static jobject getWorldBorder(const jobject& obj) {
                
       const auto methodID = methodID_getWorldBorder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWorldBorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWorldBorder", "method_27415", "setWorldBorder", "m_7831_"), "(Ldut$c;)V");
    }

    static void setWorldBorder(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setWorldBorder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getDifficulty", "method_207", "getDifficulty", "m_5472_"), "()Lbqo;");
    }

    static jobject getDifficulty(const jobject& obj) {
                
       const auto methodID = methodID_getDifficulty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDifficulty", "method_208", "setDifficulty", "m_6166_"), "(Lbqo;)V");
    }

    static void setDifficulty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDifficulty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isDifficultyLocked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "isDifficultyLocked", "method_197", "isDifficultyLocked", "m_5474_"), "()Z");
    }

    static jboolean isDifficultyLocked(const jobject& obj) {
                
       const auto methodID = methodID_isDifficultyLocked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDifficultyLocked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setDifficultyLocked", "method_186", "setDifficultyLocked", "m_5560_"), "(Z)V");
    }

    static void setDifficultyLocked(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setDifficultyLocked();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getScheduledEvents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getScheduledEvents", "method_143", "getScheduledEvents", "m_7540_"), "()Lewp;");
    }

    static jobject getScheduledEvents(const jobject& obj) {
                
       const auto methodID = methodID_getScheduledEvents();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_populateCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillCrashReportCategory", "method_151", "populateCrashReport", "m_142471_"), "(Lp;Ldcy;)V");
    }

    static void populateCrashReport(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_populateCrashReport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getGeneratorOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "worldGenOptions", "method_28057", "getGeneratorOptions", "m_246337_"), "()Ldzw;");
    }

    static jobject getGeneratorOptions(const jobject& obj) {
                
       const auto methodID = methodID_getGeneratorOptions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFlatWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "isFlatWorld", "method_45555", "isFlatWorld", "m_5961_"), "()Z");
    }

    static jboolean isFlatWorld(const jobject& obj) {
                
       const auto methodID = methodID_isFlatWorld();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDebugWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "isDebugWorld", "method_45556", "isDebugWorld", "m_7513_"), "()Z");
    }

    static jboolean isDebugWorld(const jobject& obj) {
                
       const auto methodID = methodID_isDebugWorld();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLifecycle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "worldGenSettingsLifecycle", "method_29588", "getLifecycle", "m_5754_"), "()Lcom/mojang/serialization/Lifecycle;");
    }

    static jobject getLifecycle(const jobject& obj) {
                
       const auto methodID = methodID_getLifecycle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDragonFight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "endDragonFightData", "method_29036", "getDragonFight", "m_6564_"), "()Ldxb$a;");
    }

    static jobject getDragonFight(const jobject& obj) {
                
       const auto methodID = methodID_getDragonFight();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDragonFight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setEndDragonFightData", "method_29037", "setDragonFight", "m_5915_"), "(Ldxb$a;)V");
    }

    static void setDragonFight(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDragonFight();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDataConfiguration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "getDataConfiguration", "method_29589", "getDataConfiguration", "m_6645_"), "()Lddr;");
    }

    static jobject getDataConfiguration(const jobject& obj) {
                
       const auto methodID = methodID_getDataConfiguration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateLevelInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDataConfiguration", "method_29590", "updateLevelInfo", "m_245843_"), "(Lddr;)V");
    }

    static void updateLevelInfo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateLevelInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCustomBossEvents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "getCustomBossEvents", "method_228", "getCustomBossEvents", "m_6587_"), "()Lub;");
    }

    static jobject getCustomBossEvents(const jobject& obj) {
                
       const auto methodID = methodID_getCustomBossEvents();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCustomBossEvents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCustomBossEvents", "method_221", "setCustomBossEvents", "m_5917_"), "(Lub;)V");
    }

    static void setCustomBossEvents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCustomBossEvents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWanderingTraderSpawnDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getWanderingTraderSpawnDelay", "method_18038", "getWanderingTraderSpawnDelay", "m_6530_"), "()I");
    }

    static jint getWanderingTraderSpawnDelay(const jobject& obj) {
                
       const auto methodID = methodID_getWanderingTraderSpawnDelay();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWanderingTraderSpawnDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setWanderingTraderSpawnDelay", "method_18041", "setWanderingTraderSpawnDelay", "m_6391_"), "(I)V");
    }

    static void setWanderingTraderSpawnDelay(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setWanderingTraderSpawnDelay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWanderingTraderSpawnChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "getWanderingTraderSpawnChance", "method_18039", "getWanderingTraderSpawnChance", "m_6528_"), "()I");
    }

    static jint getWanderingTraderSpawnChance(const jobject& obj) {
                
       const auto methodID = methodID_getWanderingTraderSpawnChance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWanderingTraderSpawnChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setWanderingTraderSpawnChance", "method_18042", "setWanderingTraderSpawnChance", "m_6387_"), "(I)V");
    }

    static void setWanderingTraderSpawnChance(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setWanderingTraderSpawnChance();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWanderingTraderId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getWanderingTraderId", "method_35506", "getWanderingTraderId", "m_142403_"), "()Ljava/util/UUID;");
    }

    static jobject getWanderingTraderId(const jobject& obj) {
                
       const auto methodID = methodID_getWanderingTraderId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWanderingTraderId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWanderingTraderId", "method_18040", "setWanderingTraderId", "m_8115_"), "(Ljava/util/UUID;)V");
    }

    static void setWanderingTraderId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setWanderingTraderId();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addServerBrand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setModdedInfo", "method_24285", "addServerBrand", "m_7955_"), "(Ljava/lang/String;Z)V");
    }

    static void addServerBrand(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_addServerBrand();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isModded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "wasModded", "method_27431", "isModded", "m_6565_"), "()Z");
    }

    static jboolean isModded(const jobject& obj) {
                
       const auto methodID = methodID_isModded();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServerBrands() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "getKnownServerBrands", "method_27432", "getServerBrands", "m_6161_"), "()Ljava/util/Set;");
    }

    static jobject getServerBrands(const jobject& obj) {
                
       const auto methodID = methodID_getServerBrands();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRemovedFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "getRemovedFeatureFlags", "method_49900", "getRemovedFeatures", "m_276907_"), "()Ljava/util/Set;");
    }

    static jobject getRemovedFeatures(const jobject& obj) {
                
       const auto methodID = methodID_getRemovedFeatures();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMainWorldProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "overworldData", "method_27859", "getMainWorldProperties", "m_5996_"), "()Lerk;");
    }

    static jobject getMainWorldProperties(const jobject& obj) {
                
       const auto methodID = methodID_getMainWorldProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLevelInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "getLevelSettings", "method_27433", "getLevelInfo", "m_5926_"), "()Ldda;");
    }

    static jobject getLevelInfo(const jobject& obj) {
                
       const auto methodID = methodID_getLevelInfo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_LEVEL_LEVELPROPERTIES_HPP