// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNKLOADINGMANAGER_HPP
#define NET_MINECRAFT_WORLD_CHUNKLOADINGMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.ChunkLoadingManager
 * Remapped: aqm
 */
namespace ChunkLoadingManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqm", "net/minecraft/server/level/GeneratingChunkMap", "net/minecraft/class_9760", "net/minecraft/world/ChunkLoadingManager", "net/minecraft/src/C_336423_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_acquire() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "acquireGeneration", "method_60448", "acquire", "m_339158_"), "(J)Laqn;");
    }

    static jobject acquire(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_acquire();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_release() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "releaseGeneration", "method_60441", "release", "m_338685_"), "(Laqn;)V");
    }

    static void release(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_release();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_generate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyStep", "method_60442", "generate", "m_338637_"), "(Laqn;Ldwc;Lazi;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject generate(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_generate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createLoader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "scheduleGenerationTask", "method_60443", "createLoader", "m_338350_"), "(Ldvz;Ldcd;)Lapy;");
    }

    static jobject createLoader(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createLoader();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateChunks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "runGenerationTasks", "method_60450", "updateChunks", "m_339290_"), "()V");
    }

    static void updateChunks(const jobject& obj) {
                
       const auto methodID = methodID_updateChunks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNKLOADINGMANAGER_HPP