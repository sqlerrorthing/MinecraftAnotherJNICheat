// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GAMERULES_HPP
#define NET_MINECRAFT_WORLD_GAMERULES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.GameRules
 * Remapped: dcs
 */
namespace GameRules {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dcs", "net/minecraft/world/level/GameRules", "net/minecraft/class_1928", "net/minecraft/world/GameRules", "net/minecraft/src/C_1583_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.GameRules#DEFAULT_RANDOM_TICK_SPEED
    [[maybe_unused]] static jint get_field_DEFAULT_RANDOM_TICK_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_RANDOM_TICK_SPEED", "field_30963", "DEFAULT_RANDOM_TICK_SPEED", "f_151487_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DEFAULT_RANDOM_TICK_SPEED
    [[maybe_unused]] static void set_field_DEFAULT_RANDOM_TICK_SPEED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_RANDOM_TICK_SPEED", "field_30963", "DEFAULT_RANDOM_TICK_SPEED", "f_151487_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.world.GameRules#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "LOGGER", "field_19410", "LOGGER", "f_46128_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.world.GameRules#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "LOGGER", "field_19410", "LOGGER", "f_46128_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.GameRules#RULE_TYPES
    [[maybe_unused]] static jobject get_field_RULE_TYPES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "GAME_RULE_TYPES", "field_9197", "RULE_TYPES", "f_46129_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.GameRules#RULE_TYPES
    [[maybe_unused]] static void set_field_RULE_TYPES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "GAME_RULE_TYPES", "field_9197", "RULE_TYPES", "f_46129_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_FIRE_TICK
    [[maybe_unused]] static jobject get_field_DO_FIRE_TICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RULE_DOFIRETICK", "field_19387", "DO_FIRE_TICK", "f_46131_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_FIRE_TICK
    [[maybe_unused]] static void set_field_DO_FIRE_TICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RULE_DOFIRETICK", "field_19387", "DO_FIRE_TICK", "f_46131_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_MOB_GRIEFING
    [[maybe_unused]] static jobject get_field_DO_MOB_GRIEFING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RULE_MOBGRIEFING", "field_19388", "DO_MOB_GRIEFING", "f_46132_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_MOB_GRIEFING
    [[maybe_unused]] static void set_field_DO_MOB_GRIEFING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RULE_MOBGRIEFING", "field_19388", "DO_MOB_GRIEFING", "f_46132_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#KEEP_INVENTORY
    [[maybe_unused]] static jobject get_field_KEEP_INVENTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RULE_KEEPINVENTORY", "field_19389", "KEEP_INVENTORY", "f_46133_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#KEEP_INVENTORY
    [[maybe_unused]] static void set_field_KEEP_INVENTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RULE_KEEPINVENTORY", "field_19389", "KEEP_INVENTORY", "f_46133_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_MOB_SPAWNING
    [[maybe_unused]] static jobject get_field_DO_MOB_SPAWNING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "RULE_DOMOBSPAWNING", "field_19390", "DO_MOB_SPAWNING", "f_46134_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_MOB_SPAWNING
    [[maybe_unused]] static void set_field_DO_MOB_SPAWNING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "RULE_DOMOBSPAWNING", "field_19390", "DO_MOB_SPAWNING", "f_46134_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_MOB_LOOT
    [[maybe_unused]] static jobject get_field_DO_MOB_LOOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RULE_DOMOBLOOT", "field_19391", "DO_MOB_LOOT", "f_46135_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_MOB_LOOT
    [[maybe_unused]] static void set_field_DO_MOB_LOOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RULE_DOMOBLOOT", "field_19391", "DO_MOB_LOOT", "f_46135_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#PROJECTILES_CAN_BREAK_BLOCKS
    [[maybe_unused]] static jobject get_field_PROJECTILES_CAN_BREAK_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RULE_PROJECTILESCANBREAKBLOCKS", "field_46796", "PROJECTILES_CAN_BREAK_BLOCKS", "f_302210_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#PROJECTILES_CAN_BREAK_BLOCKS
    [[maybe_unused]] static void set_field_PROJECTILES_CAN_BREAK_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RULE_PROJECTILESCANBREAKBLOCKS", "field_46796", "PROJECTILES_CAN_BREAK_BLOCKS", "f_302210_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_TILE_DROPS
    [[maybe_unused]] static jobject get_field_DO_TILE_DROPS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "RULE_DOBLOCKDROPS", "field_19392", "DO_TILE_DROPS", "f_46136_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_TILE_DROPS
    [[maybe_unused]] static void set_field_DO_TILE_DROPS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "RULE_DOBLOCKDROPS", "field_19392", "DO_TILE_DROPS", "f_46136_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_ENTITY_DROPS
    [[maybe_unused]] static jobject get_field_DO_ENTITY_DROPS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "RULE_DOENTITYDROPS", "field_19393", "DO_ENTITY_DROPS", "f_46137_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_ENTITY_DROPS
    [[maybe_unused]] static void set_field_DO_ENTITY_DROPS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "RULE_DOENTITYDROPS", "field_19393", "DO_ENTITY_DROPS", "f_46137_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#COMMAND_BLOCK_OUTPUT
    [[maybe_unused]] static jobject get_field_COMMAND_BLOCK_OUTPUT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "RULE_COMMANDBLOCKOUTPUT", "field_19394", "COMMAND_BLOCK_OUTPUT", "f_46138_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#COMMAND_BLOCK_OUTPUT
    [[maybe_unused]] static void set_field_COMMAND_BLOCK_OUTPUT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "RULE_COMMANDBLOCKOUTPUT", "field_19394", "COMMAND_BLOCK_OUTPUT", "f_46138_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#NATURAL_REGENERATION
    [[maybe_unused]] static jobject get_field_NATURAL_REGENERATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "RULE_NATURAL_REGENERATION", "field_19395", "NATURAL_REGENERATION", "f_46139_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#NATURAL_REGENERATION
    [[maybe_unused]] static void set_field_NATURAL_REGENERATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "RULE_NATURAL_REGENERATION", "field_19395", "NATURAL_REGENERATION", "f_46139_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_DAYLIGHT_CYCLE
    [[maybe_unused]] static jobject get_field_DO_DAYLIGHT_CYCLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "RULE_DAYLIGHT", "field_19396", "DO_DAYLIGHT_CYCLE", "f_46140_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_DAYLIGHT_CYCLE
    [[maybe_unused]] static void set_field_DO_DAYLIGHT_CYCLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "RULE_DAYLIGHT", "field_19396", "DO_DAYLIGHT_CYCLE", "f_46140_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#LOG_ADMIN_COMMANDS
    [[maybe_unused]] static jobject get_field_LOG_ADMIN_COMMANDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "RULE_LOGADMINCOMMANDS", "field_19397", "LOG_ADMIN_COMMANDS", "f_46141_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#LOG_ADMIN_COMMANDS
    [[maybe_unused]] static void set_field_LOG_ADMIN_COMMANDS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "RULE_LOGADMINCOMMANDS", "field_19397", "LOG_ADMIN_COMMANDS", "f_46141_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#SHOW_DEATH_MESSAGES
    [[maybe_unused]] static jobject get_field_SHOW_DEATH_MESSAGES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "RULE_SHOWDEATHMESSAGES", "field_19398", "SHOW_DEATH_MESSAGES", "f_46142_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#SHOW_DEATH_MESSAGES
    [[maybe_unused]] static void set_field_SHOW_DEATH_MESSAGES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "RULE_SHOWDEATHMESSAGES", "field_19398", "SHOW_DEATH_MESSAGES", "f_46142_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#RANDOM_TICK_SPEED
    [[maybe_unused]] static jobject get_field_RANDOM_TICK_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "RULE_RANDOMTICKING", "field_19399", "RANDOM_TICK_SPEED", "f_46143_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#RANDOM_TICK_SPEED
    [[maybe_unused]] static void set_field_RANDOM_TICK_SPEED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "RULE_RANDOMTICKING", "field_19399", "RANDOM_TICK_SPEED", "f_46143_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#SEND_COMMAND_FEEDBACK
    [[maybe_unused]] static jobject get_field_SEND_COMMAND_FEEDBACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "RULE_SENDCOMMANDFEEDBACK", "field_19400", "SEND_COMMAND_FEEDBACK", "f_46144_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#SEND_COMMAND_FEEDBACK
    [[maybe_unused]] static void set_field_SEND_COMMAND_FEEDBACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "RULE_SENDCOMMANDFEEDBACK", "field_19400", "SEND_COMMAND_FEEDBACK", "f_46144_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#REDUCED_DEBUG_INFO
    [[maybe_unused]] static jobject get_field_REDUCED_DEBUG_INFO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "RULE_REDUCEDDEBUGINFO", "field_19401", "REDUCED_DEBUG_INFO", "f_46145_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#REDUCED_DEBUG_INFO
    [[maybe_unused]] static void set_field_REDUCED_DEBUG_INFO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "RULE_REDUCEDDEBUGINFO", "field_19401", "REDUCED_DEBUG_INFO", "f_46145_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#SPECTATORS_GENERATE_CHUNKS
    [[maybe_unused]] static jobject get_field_SPECTATORS_GENERATE_CHUNKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "RULE_SPECTATORSGENERATECHUNKS", "field_19402", "SPECTATORS_GENERATE_CHUNKS", "f_46146_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#SPECTATORS_GENERATE_CHUNKS
    [[maybe_unused]] static void set_field_SPECTATORS_GENERATE_CHUNKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "RULE_SPECTATORSGENERATECHUNKS", "field_19402", "SPECTATORS_GENERATE_CHUNKS", "f_46146_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#SPAWN_RADIUS
    [[maybe_unused]] static jobject get_field_SPAWN_RADIUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "RULE_SPAWN_RADIUS", "field_19403", "SPAWN_RADIUS", "f_46147_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#SPAWN_RADIUS
    [[maybe_unused]] static void set_field_SPAWN_RADIUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "RULE_SPAWN_RADIUS", "field_19403", "SPAWN_RADIUS", "f_46147_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DISABLE_ELYTRA_MOVEMENT_CHECK
    [[maybe_unused]] static jobject get_field_DISABLE_ELYTRA_MOVEMENT_CHECK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "RULE_DISABLE_ELYTRA_MOVEMENT_CHECK", "field_19404", "DISABLE_ELYTRA_MOVEMENT_CHECK", "f_46148_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DISABLE_ELYTRA_MOVEMENT_CHECK
    [[maybe_unused]] static void set_field_DISABLE_ELYTRA_MOVEMENT_CHECK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "RULE_DISABLE_ELYTRA_MOVEMENT_CHECK", "field_19404", "DISABLE_ELYTRA_MOVEMENT_CHECK", "f_46148_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#MAX_ENTITY_CRAMMING
    [[maybe_unused]] static jobject get_field_MAX_ENTITY_CRAMMING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "RULE_MAX_ENTITY_CRAMMING", "field_19405", "MAX_ENTITY_CRAMMING", "f_46149_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#MAX_ENTITY_CRAMMING
    [[maybe_unused]] static void set_field_MAX_ENTITY_CRAMMING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "RULE_MAX_ENTITY_CRAMMING", "field_19405", "MAX_ENTITY_CRAMMING", "f_46149_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_WEATHER_CYCLE
    [[maybe_unused]] static jobject get_field_DO_WEATHER_CYCLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "RULE_WEATHER_CYCLE", "field_19406", "DO_WEATHER_CYCLE", "f_46150_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_WEATHER_CYCLE
    [[maybe_unused]] static void set_field_DO_WEATHER_CYCLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "RULE_WEATHER_CYCLE", "field_19406", "DO_WEATHER_CYCLE", "f_46150_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_LIMITED_CRAFTING
    [[maybe_unused]] static jobject get_field_DO_LIMITED_CRAFTING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "RULE_LIMITED_CRAFTING", "field_19407", "DO_LIMITED_CRAFTING", "f_46151_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_LIMITED_CRAFTING
    [[maybe_unused]] static void set_field_DO_LIMITED_CRAFTING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "RULE_LIMITED_CRAFTING", "field_19407", "DO_LIMITED_CRAFTING", "f_46151_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#MAX_COMMAND_CHAIN_LENGTH
    [[maybe_unused]] static jobject get_field_MAX_COMMAND_CHAIN_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "RULE_MAX_COMMAND_CHAIN_LENGTH", "field_19408", "MAX_COMMAND_CHAIN_LENGTH", "f_46152_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#MAX_COMMAND_CHAIN_LENGTH
    [[maybe_unused]] static void set_field_MAX_COMMAND_CHAIN_LENGTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "RULE_MAX_COMMAND_CHAIN_LENGTH", "field_19408", "MAX_COMMAND_CHAIN_LENGTH", "f_46152_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#MAX_COMMAND_FORK_COUNT
    [[maybe_unused]] static jobject get_field_MAX_COMMAND_FORK_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "RULE_MAX_COMMAND_FORK_COUNT", "field_46658", "MAX_COMMAND_FORK_COUNT", "f_302764_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#MAX_COMMAND_FORK_COUNT
    [[maybe_unused]] static void set_field_MAX_COMMAND_FORK_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "RULE_MAX_COMMAND_FORK_COUNT", "field_46658", "MAX_COMMAND_FORK_COUNT", "f_302764_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#COMMAND_MODIFICATION_BLOCK_LIMIT
    [[maybe_unused]] static jobject get_field_COMMAND_MODIFICATION_BLOCK_LIMIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "RULE_COMMAND_MODIFICATION_BLOCK_LIMIT", "field_41766", "COMMAND_MODIFICATION_BLOCK_LIMIT", "f_263760_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#COMMAND_MODIFICATION_BLOCK_LIMIT
    [[maybe_unused]] static void set_field_COMMAND_MODIFICATION_BLOCK_LIMIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "RULE_COMMAND_MODIFICATION_BLOCK_LIMIT", "field_41766", "COMMAND_MODIFICATION_BLOCK_LIMIT", "f_263760_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#ANNOUNCE_ADVANCEMENTS
    [[maybe_unused]] static jobject get_field_ANNOUNCE_ADVANCEMENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "RULE_ANNOUNCE_ADVANCEMENTS", "field_19409", "ANNOUNCE_ADVANCEMENTS", "f_46153_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#ANNOUNCE_ADVANCEMENTS
    [[maybe_unused]] static void set_field_ANNOUNCE_ADVANCEMENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "RULE_ANNOUNCE_ADVANCEMENTS", "field_19409", "ANNOUNCE_ADVANCEMENTS", "f_46153_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DISABLE_RAIDS
    [[maybe_unused]] static jobject get_field_DISABLE_RAIDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "RULE_DISABLE_RAIDS", "field_19422", "DISABLE_RAIDS", "f_46154_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DISABLE_RAIDS
    [[maybe_unused]] static void set_field_DISABLE_RAIDS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "RULE_DISABLE_RAIDS", "field_19422", "DISABLE_RAIDS", "f_46154_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_INSOMNIA
    [[maybe_unused]] static jobject get_field_DO_INSOMNIA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "RULE_DOINSOMNIA", "field_20637", "DO_INSOMNIA", "f_46155_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_INSOMNIA
    [[maybe_unused]] static void set_field_DO_INSOMNIA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "RULE_DOINSOMNIA", "field_20637", "DO_INSOMNIA", "f_46155_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_IMMEDIATE_RESPAWN
    [[maybe_unused]] static jobject get_field_DO_IMMEDIATE_RESPAWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "RULE_DO_IMMEDIATE_RESPAWN", "field_20638", "DO_IMMEDIATE_RESPAWN", "f_46156_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_IMMEDIATE_RESPAWN
    [[maybe_unused]] static void set_field_DO_IMMEDIATE_RESPAWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "RULE_DO_IMMEDIATE_RESPAWN", "field_20638", "DO_IMMEDIATE_RESPAWN", "f_46156_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#PLAYERS_NETHER_PORTAL_DEFAULT_DELAY
    [[maybe_unused]] static jobject get_field_PLAYERS_NETHER_PORTAL_DEFAULT_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "RULE_PLAYERS_NETHER_PORTAL_DEFAULT_DELAY", "field_46794", "PLAYERS_NETHER_PORTAL_DEFAULT_DELAY", "f_302481_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#PLAYERS_NETHER_PORTAL_DEFAULT_DELAY
    [[maybe_unused]] static void set_field_PLAYERS_NETHER_PORTAL_DEFAULT_DELAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "RULE_PLAYERS_NETHER_PORTAL_DEFAULT_DELAY", "field_46794", "PLAYERS_NETHER_PORTAL_DEFAULT_DELAY", "f_302481_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#PLAYERS_NETHER_PORTAL_CREATIVE_DELAY
    [[maybe_unused]] static jobject get_field_PLAYERS_NETHER_PORTAL_CREATIVE_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "RULE_PLAYERS_NETHER_PORTAL_CREATIVE_DELAY", "field_46795", "PLAYERS_NETHER_PORTAL_CREATIVE_DELAY", "f_303073_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#PLAYERS_NETHER_PORTAL_CREATIVE_DELAY
    [[maybe_unused]] static void set_field_PLAYERS_NETHER_PORTAL_CREATIVE_DELAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "RULE_PLAYERS_NETHER_PORTAL_CREATIVE_DELAY", "field_46795", "PLAYERS_NETHER_PORTAL_CREATIVE_DELAY", "f_303073_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DROWNING_DAMAGE
    [[maybe_unused]] static jobject get_field_DROWNING_DAMAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "RULE_DROWNING_DAMAGE", "field_20634", "DROWNING_DAMAGE", "f_46121_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DROWNING_DAMAGE
    [[maybe_unused]] static void set_field_DROWNING_DAMAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "RULE_DROWNING_DAMAGE", "field_20634", "DROWNING_DAMAGE", "f_46121_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#FALL_DAMAGE
    [[maybe_unused]] static jobject get_field_FALL_DAMAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "RULE_FALL_DAMAGE", "field_20635", "FALL_DAMAGE", "f_46122_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#FALL_DAMAGE
    [[maybe_unused]] static void set_field_FALL_DAMAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "RULE_FALL_DAMAGE", "field_20635", "FALL_DAMAGE", "f_46122_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#FIRE_DAMAGE
    [[maybe_unused]] static jobject get_field_FIRE_DAMAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "RULE_FIRE_DAMAGE", "field_20636", "FIRE_DAMAGE", "f_46123_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#FIRE_DAMAGE
    [[maybe_unused]] static void set_field_FIRE_DAMAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "RULE_FIRE_DAMAGE", "field_20636", "FIRE_DAMAGE", "f_46123_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#FREEZE_DAMAGE
    [[maybe_unused]] static jobject get_field_FREEZE_DAMAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "RULE_FREEZE_DAMAGE", "field_28044", "FREEZE_DAMAGE", "f_151485_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#FREEZE_DAMAGE
    [[maybe_unused]] static void set_field_FREEZE_DAMAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "RULE_FREEZE_DAMAGE", "field_28044", "FREEZE_DAMAGE", "f_151485_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_PATROL_SPAWNING
    [[maybe_unused]] static jobject get_field_DO_PATROL_SPAWNING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "RULE_DO_PATROL_SPAWNING", "field_21831", "DO_PATROL_SPAWNING", "f_46124_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_PATROL_SPAWNING
    [[maybe_unused]] static void set_field_DO_PATROL_SPAWNING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "RULE_DO_PATROL_SPAWNING", "field_21831", "DO_PATROL_SPAWNING", "f_46124_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_TRADER_SPAWNING
    [[maybe_unused]] static jobject get_field_DO_TRADER_SPAWNING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "RULE_DO_TRADER_SPAWNING", "field_21832", "DO_TRADER_SPAWNING", "f_46125_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_TRADER_SPAWNING
    [[maybe_unused]] static void set_field_DO_TRADER_SPAWNING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "RULE_DO_TRADER_SPAWNING", "field_21832", "DO_TRADER_SPAWNING", "f_46125_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_WARDEN_SPAWNING
    [[maybe_unused]] static jobject get_field_DO_WARDEN_SPAWNING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "RULE_DO_WARDEN_SPAWNING", "field_38975", "DO_WARDEN_SPAWNING", "f_220347_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_WARDEN_SPAWNING
    [[maybe_unused]] static void set_field_DO_WARDEN_SPAWNING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "RULE_DO_WARDEN_SPAWNING", "field_38975", "DO_WARDEN_SPAWNING", "f_220347_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#FORGIVE_DEAD_PLAYERS
    [[maybe_unused]] static jobject get_field_FORGIVE_DEAD_PLAYERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "RULE_FORGIVE_DEAD_PLAYERS", "field_25401", "FORGIVE_DEAD_PLAYERS", "f_46126_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#FORGIVE_DEAD_PLAYERS
    [[maybe_unused]] static void set_field_FORGIVE_DEAD_PLAYERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "RULE_FORGIVE_DEAD_PLAYERS", "field_25401", "FORGIVE_DEAD_PLAYERS", "f_46126_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#UNIVERSAL_ANGER
    [[maybe_unused]] static jobject get_field_UNIVERSAL_ANGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "RULE_UNIVERSAL_ANGER", "field_25402", "UNIVERSAL_ANGER", "f_46127_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#UNIVERSAL_ANGER
    [[maybe_unused]] static void set_field_UNIVERSAL_ANGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "RULE_UNIVERSAL_ANGER", "field_25402", "UNIVERSAL_ANGER", "f_46127_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#PLAYERS_SLEEPING_PERCENTAGE
    [[maybe_unused]] static jobject get_field_PLAYERS_SLEEPING_PERCENTAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "RULE_PLAYERS_SLEEPING_PERCENTAGE", "field_28357", "PLAYERS_SLEEPING_PERCENTAGE", "f_151486_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#PLAYERS_SLEEPING_PERCENTAGE
    [[maybe_unused]] static void set_field_PLAYERS_SLEEPING_PERCENTAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "RULE_PLAYERS_SLEEPING_PERCENTAGE", "field_28357", "PLAYERS_SLEEPING_PERCENTAGE", "f_151486_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#BLOCK_EXPLOSION_DROP_DECAY
    [[maybe_unused]] static jobject get_field_BLOCK_EXPLOSION_DROP_DECAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "RULE_BLOCK_EXPLOSION_DROP_DECAY", "field_40880", "BLOCK_EXPLOSION_DROP_DECAY", "f_254629_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#BLOCK_EXPLOSION_DROP_DECAY
    [[maybe_unused]] static void set_field_BLOCK_EXPLOSION_DROP_DECAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "RULE_BLOCK_EXPLOSION_DROP_DECAY", "field_40880", "BLOCK_EXPLOSION_DROP_DECAY", "f_254629_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#MOB_EXPLOSION_DROP_DECAY
    [[maybe_unused]] static jobject get_field_MOB_EXPLOSION_DROP_DECAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "RULE_MOB_EXPLOSION_DROP_DECAY", "field_40881", "MOB_EXPLOSION_DROP_DECAY", "f_254692_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#MOB_EXPLOSION_DROP_DECAY
    [[maybe_unused]] static void set_field_MOB_EXPLOSION_DROP_DECAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "RULE_MOB_EXPLOSION_DROP_DECAY", "field_40881", "MOB_EXPLOSION_DROP_DECAY", "f_254692_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#TNT_EXPLOSION_DROP_DECAY
    [[maybe_unused]] static jobject get_field_TNT_EXPLOSION_DROP_DECAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "RULE_TNT_EXPLOSION_DROP_DECAY", "field_40882", "TNT_EXPLOSION_DROP_DECAY", "f_254705_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#TNT_EXPLOSION_DROP_DECAY
    [[maybe_unused]] static void set_field_TNT_EXPLOSION_DROP_DECAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "RULE_TNT_EXPLOSION_DROP_DECAY", "field_40882", "TNT_EXPLOSION_DROP_DECAY", "f_254705_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#SNOW_ACCUMULATION_HEIGHT
    [[maybe_unused]] static jobject get_field_SNOW_ACCUMULATION_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "RULE_SNOW_ACCUMULATION_HEIGHT", "field_40883", "SNOW_ACCUMULATION_HEIGHT", "f_254637_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#SNOW_ACCUMULATION_HEIGHT
    [[maybe_unused]] static void set_field_SNOW_ACCUMULATION_HEIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "RULE_SNOW_ACCUMULATION_HEIGHT", "field_40883", "SNOW_ACCUMULATION_HEIGHT", "f_254637_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#WATER_SOURCE_CONVERSION
    [[maybe_unused]] static jobject get_field_WATER_SOURCE_CONVERSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "RULE_WATER_SOURCE_CONVERSION", "field_40884", "WATER_SOURCE_CONVERSION", "f_254725_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#WATER_SOURCE_CONVERSION
    [[maybe_unused]] static void set_field_WATER_SOURCE_CONVERSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "RULE_WATER_SOURCE_CONVERSION", "field_40884", "WATER_SOURCE_CONVERSION", "f_254725_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#LAVA_SOURCE_CONVERSION
    [[maybe_unused]] static jobject get_field_LAVA_SOURCE_CONVERSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "RULE_LAVA_SOURCE_CONVERSION", "field_40885", "LAVA_SOURCE_CONVERSION", "f_254672_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#LAVA_SOURCE_CONVERSION
    [[maybe_unused]] static void set_field_LAVA_SOURCE_CONVERSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "RULE_LAVA_SOURCE_CONVERSION", "field_40885", "LAVA_SOURCE_CONVERSION", "f_254672_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#GLOBAL_SOUND_EVENTS
    [[maybe_unused]] static jobject get_field_GLOBAL_SOUND_EVENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "RULE_GLOBAL_SOUND_EVENTS", "field_40886", "GLOBAL_SOUND_EVENTS", "f_254630_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#GLOBAL_SOUND_EVENTS
    [[maybe_unused]] static void set_field_GLOBAL_SOUND_EVENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "RULE_GLOBAL_SOUND_EVENTS", "field_40886", "GLOBAL_SOUND_EVENTS", "f_254630_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#DO_VINES_SPREAD
    [[maybe_unused]] static jobject get_field_DO_VINES_SPREAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "RULE_DO_VINES_SPREAD", "field_42474", "DO_VINES_SPREAD", "f_268705_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#DO_VINES_SPREAD
    [[maybe_unused]] static void set_field_DO_VINES_SPREAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "RULE_DO_VINES_SPREAD", "field_42474", "DO_VINES_SPREAD", "f_268705_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#ENDER_PEARLS_VANISH_ON_DEATH
    [[maybe_unused]] static jobject get_field_ENDER_PEARLS_VANISH_ON_DEATH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "RULE_ENDER_PEARLS_VANISH_ON_DEATH", "field_46176", "ENDER_PEARLS_VANISH_ON_DEATH", "f_291323_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#ENDER_PEARLS_VANISH_ON_DEATH
    [[maybe_unused]] static void set_field_ENDER_PEARLS_VANISH_ON_DEATH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "RULE_ENDER_PEARLS_VANISH_ON_DEATH", "field_46176", "ENDER_PEARLS_VANISH_ON_DEATH", "f_291323_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.GameRules#SPAWN_CHUNK_RADIUS
    [[maybe_unused]] static jobject get_field_SPAWN_CHUNK_RADIUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "RULE_SPAWN_CHUNK_RADIUS", "field_48374", "SPAWN_CHUNK_RADIUS", "f_314920_"), "Ldcs$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.GameRules#SPAWN_CHUNK_RADIUS
    [[maybe_unused]] static void set_field_SPAWN_CHUNK_RADIUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "RULE_SPAWN_CHUNK_RADIUS", "field_48374", "SPAWN_CHUNK_RADIUS", "f_314920_"), "Ldcs$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.GameRules#rules
    static jobject get_field_rules(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "rules", "field_9196", "rules", "f_46130_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.GameRules#rules
    static void set_field_rules(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "rules", "field_9196", "rules", "f_46130_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_8359", "register", "m_46189_"), "(Ljava/lang/String;Ldcs$b;Ldcs$f;)Ldcs$e;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRule", "method_20746", "get", "m_46170_"), "(Ldcs$e;)Ldcs$g;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTag", "method_8358", "toNbt", "m_46163_"), "()Lub;");
    }

    static jobject toNbt(const jobject& obj) {
                
       const auto methodID = methodID_toNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadFromTag", "method_8357", "load", "m_46183_"), "(Lcom/mojang/serialization/DynamicLike;)V");
    }

    static void load(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_load();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "copy", "method_27325", "copy", "m_46202_"), "()Ldcs;");
    }

    static jobject copy(const jobject& obj) {
                
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_accept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "visitGameRuleTypes", "method_20744", "accept", "m_46164_"), "(Ldcs$c;)V");
    }

    static void accept(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_accept();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__accept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "callVisitorCap", "method_20745", "accept", "m_46166_"), "(Ldcs$c;Ldcs$e;Ldcs$f;)V");
    }

    static void _accept(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__accept();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setAllValues() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "assignFrom", "method_27322", "setAllValues", "m_46176_"), "(Ldcs;Lnet/minecraft/server/MinecraftServer;)V");
    }

    static void setAllValues(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setAllValues();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "assignCap", "method_27321", "setValue", "m_46172_"), "(Ldcs$e;Ldcs;Lnet/minecraft/server/MinecraftServer;)V");
    }

    static void setValue(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_setValue();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getBoolean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getBoolean", "method_8355", "getBoolean", "m_46207_"), "(Ldcs$e;)Z");
    }

    static jboolean getBoolean(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBoolean();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getInt", "method_8356", "getInt", "m_46215_"), "(Ldcs$e;)I");
    }

    static jint getInt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getInt();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GAMERULES_HPP