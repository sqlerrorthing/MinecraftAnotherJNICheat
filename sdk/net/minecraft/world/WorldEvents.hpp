// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_WORLDEVENTS_HPP
#define NET_MINECRAFT_WORLD_WORLDEVENTS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.WorldEvents
 * Remapped: dkk
 */
namespace WorldEvents {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dkk", "net/minecraft/world/level/block/LevelEvent", "net/minecraft/class_6088", "net/minecraft/world/WorldEvents", "net/minecraft/src/C_141215_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.WorldEvents#DISPENSER_DISPENSES
    [[maybe_unused]] static jint get_field_DISPENSER_DISPENSES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SOUND_DISPENSER_DISPENSE", "field_31140", "DISPENSER_DISPENSES", "f_153607_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#DISPENSER_DISPENSES
    [[maybe_unused]] static void set_field_DISPENSER_DISPENSES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SOUND_DISPENSER_DISPENSE", "field_31140", "DISPENSER_DISPENSES", "f_153607_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#DISPENSER_FAILS
    [[maybe_unused]] static jint get_field_DISPENSER_FAILS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SOUND_DISPENSER_FAIL", "field_31159", "DISPENSER_FAILS", "f_153627_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#DISPENSER_FAILS
    [[maybe_unused]] static void set_field_DISPENSER_FAILS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SOUND_DISPENSER_FAIL", "field_31159", "DISPENSER_FAILS", "f_153627_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#DISPENSER_LAUNCHES_PROJECTILE
    [[maybe_unused]] static jint get_field_DISPENSER_LAUNCHES_PROJECTILE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SOUND_DISPENSER_PROJECTILE_LAUNCH", "field_31160", "DISPENSER_LAUNCHES_PROJECTILE", "f_153628_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#DISPENSER_LAUNCHES_PROJECTILE
    [[maybe_unused]] static void set_field_DISPENSER_LAUNCHES_PROJECTILE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SOUND_DISPENSER_PROJECTILE_LAUNCH", "field_31160", "DISPENSER_LAUNCHES_PROJECTILE", "f_153628_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#FIREWORK_ROCKET_SHOOTS
    [[maybe_unused]] static jint get_field_FIREWORK_ROCKET_SHOOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SOUND_FIREWORK_SHOOT", "field_31162", "FIREWORK_ROCKET_SHOOTS", "f_153630_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#FIREWORK_ROCKET_SHOOTS
    [[maybe_unused]] static void set_field_FIREWORK_ROCKET_SHOOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SOUND_FIREWORK_SHOOT", "field_31162", "FIREWORK_ROCKET_SHOOTS", "f_153630_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#FIRE_EXTINGUISHED
    [[maybe_unused]] static jint get_field_FIRE_EXTINGUISHED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SOUND_EXTINGUISH_FIRE", "field_31167", "FIRE_EXTINGUISHED", "f_153635_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#FIRE_EXTINGUISHED
    [[maybe_unused]] static void set_field_FIRE_EXTINGUISHED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SOUND_EXTINGUISH_FIRE", "field_31167", "FIRE_EXTINGUISHED", "f_153635_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#JUKEBOX_STARTS_PLAYING
    [[maybe_unused]] static jint get_field_JUKEBOX_STARTS_PLAYING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SOUND_PLAY_JUKEBOX_SONG", "field_42760", "JUKEBOX_STARTS_PLAYING", "f_271529_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#JUKEBOX_STARTS_PLAYING
    [[maybe_unused]] static void set_field_JUKEBOX_STARTS_PLAYING(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SOUND_PLAY_JUKEBOX_SONG", "field_42760", "JUKEBOX_STARTS_PLAYING", "f_271529_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#JUKEBOX_STOPS_PLAYING
    [[maybe_unused]] static jint get_field_JUKEBOX_STOPS_PLAYING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SOUND_STOP_JUKEBOX_SONG", "field_42761", "JUKEBOX_STOPS_PLAYING", "f_271287_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#JUKEBOX_STOPS_PLAYING
    [[maybe_unused]] static void set_field_JUKEBOX_STOPS_PLAYING(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SOUND_STOP_JUKEBOX_SONG", "field_42761", "JUKEBOX_STOPS_PLAYING", "f_271287_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#GHAST_WARNS
    [[maybe_unused]] static jint get_field_GHAST_WARNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SOUND_GHAST_WARNING", "field_31173", "GHAST_WARNS", "f_153641_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#GHAST_WARNS
    [[maybe_unused]] static void set_field_GHAST_WARNS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SOUND_GHAST_WARNING", "field_31173", "GHAST_WARNS", "f_153641_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#GHAST_SHOOTS
    [[maybe_unused]] static jint get_field_GHAST_SHOOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SOUND_GHAST_FIREBALL", "field_31174", "GHAST_SHOOTS", "f_153642_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#GHAST_SHOOTS
    [[maybe_unused]] static void set_field_GHAST_SHOOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SOUND_GHAST_FIREBALL", "field_31174", "GHAST_SHOOTS", "f_153642_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ENDER_DRAGON_SHOOTS
    [[maybe_unused]] static jint get_field_ENDER_DRAGON_SHOOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SOUND_DRAGON_FIREBALL", "field_31175", "ENDER_DRAGON_SHOOTS", "f_153643_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ENDER_DRAGON_SHOOTS
    [[maybe_unused]] static void set_field_ENDER_DRAGON_SHOOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SOUND_DRAGON_FIREBALL", "field_31175", "ENDER_DRAGON_SHOOTS", "f_153643_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#BLAZE_SHOOTS
    [[maybe_unused]] static jint get_field_BLAZE_SHOOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SOUND_BLAZE_FIREBALL", "field_31176", "BLAZE_SHOOTS", "f_153644_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#BLAZE_SHOOTS
    [[maybe_unused]] static void set_field_BLAZE_SHOOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SOUND_BLAZE_FIREBALL", "field_31176", "BLAZE_SHOOTS", "f_153644_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ZOMBIE_ATTACKS_WOODEN_DOOR
    [[maybe_unused]] static jint get_field_ZOMBIE_ATTACKS_WOODEN_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SOUND_ZOMBIE_WOODEN_DOOR", "field_31177", "ZOMBIE_ATTACKS_WOODEN_DOOR", "f_153645_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ZOMBIE_ATTACKS_WOODEN_DOOR
    [[maybe_unused]] static void set_field_ZOMBIE_ATTACKS_WOODEN_DOOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SOUND_ZOMBIE_WOODEN_DOOR", "field_31177", "ZOMBIE_ATTACKS_WOODEN_DOOR", "f_153645_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ZOMBIE_ATTACKS_IRON_DOOR
    [[maybe_unused]] static jint get_field_ZOMBIE_ATTACKS_IRON_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SOUND_ZOMBIE_IRON_DOOR", "field_31178", "ZOMBIE_ATTACKS_IRON_DOOR", "f_153646_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ZOMBIE_ATTACKS_IRON_DOOR
    [[maybe_unused]] static void set_field_ZOMBIE_ATTACKS_IRON_DOOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SOUND_ZOMBIE_IRON_DOOR", "field_31178", "ZOMBIE_ATTACKS_IRON_DOOR", "f_153646_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ZOMBIE_BREAKS_WOODEN_DOOR
    [[maybe_unused]] static jint get_field_ZOMBIE_BREAKS_WOODEN_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SOUND_ZOMBIE_DOOR_CRASH", "field_31179", "ZOMBIE_BREAKS_WOODEN_DOOR", "f_153647_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ZOMBIE_BREAKS_WOODEN_DOOR
    [[maybe_unused]] static void set_field_ZOMBIE_BREAKS_WOODEN_DOOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SOUND_ZOMBIE_DOOR_CRASH", "field_31179", "ZOMBIE_BREAKS_WOODEN_DOOR", "f_153647_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#WITHER_BREAKS_BLOCK
    [[maybe_unused]] static jint get_field_WITHER_BREAKS_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SOUND_WITHER_BLOCK_BREAK", "field_31180", "WITHER_BREAKS_BLOCK", "f_153648_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#WITHER_BREAKS_BLOCK
    [[maybe_unused]] static void set_field_WITHER_BREAKS_BLOCK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SOUND_WITHER_BLOCK_BREAK", "field_31180", "WITHER_BREAKS_BLOCK", "f_153648_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#WITHER_SPAWNS
    [[maybe_unused]] static jint get_field_WITHER_SPAWNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SOUND_WITHER_BOSS_SPAWN", "field_31181", "WITHER_SPAWNS", "f_153649_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#WITHER_SPAWNS
    [[maybe_unused]] static void set_field_WITHER_SPAWNS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SOUND_WITHER_BOSS_SPAWN", "field_31181", "WITHER_SPAWNS", "f_153649_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#WITHER_SHOOTS
    [[maybe_unused]] static jint get_field_WITHER_SHOOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SOUND_WITHER_BOSS_SHOOT", "field_31182", "WITHER_SHOOTS", "f_153650_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#WITHER_SHOOTS
    [[maybe_unused]] static void set_field_WITHER_SHOOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SOUND_WITHER_BOSS_SHOOT", "field_31182", "WITHER_SHOOTS", "f_153650_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#BAT_TAKES_OFF
    [[maybe_unused]] static jint get_field_BAT_TAKES_OFF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SOUND_BAT_LIFTOFF", "field_31183", "BAT_TAKES_OFF", "f_153651_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#BAT_TAKES_OFF
    [[maybe_unused]] static void set_field_BAT_TAKES_OFF(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SOUND_BAT_LIFTOFF", "field_31183", "BAT_TAKES_OFF", "f_153651_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ZOMBIE_INFECTS_VILLAGER
    [[maybe_unused]] static jint get_field_ZOMBIE_INFECTS_VILLAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SOUND_ZOMBIE_INFECTED", "field_31114", "ZOMBIE_INFECTS_VILLAGER", "f_153581_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ZOMBIE_INFECTS_VILLAGER
    [[maybe_unused]] static void set_field_ZOMBIE_INFECTS_VILLAGER(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SOUND_ZOMBIE_INFECTED", "field_31114", "ZOMBIE_INFECTS_VILLAGER", "f_153581_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ZOMBIE_VILLAGER_CURED
    [[maybe_unused]] static jint get_field_ZOMBIE_VILLAGER_CURED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SOUND_ZOMBIE_CONVERTED", "field_31115", "ZOMBIE_VILLAGER_CURED", "f_153582_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ZOMBIE_VILLAGER_CURED
    [[maybe_unused]] static void set_field_ZOMBIE_VILLAGER_CURED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SOUND_ZOMBIE_CONVERTED", "field_31115", "ZOMBIE_VILLAGER_CURED", "f_153582_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ENDER_DRAGON_DIES
    [[maybe_unused]] static jint get_field_ENDER_DRAGON_DIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SOUND_DRAGON_DEATH", "field_31116", "ENDER_DRAGON_DIES", "f_153583_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ENDER_DRAGON_DIES
    [[maybe_unused]] static void set_field_ENDER_DRAGON_DIES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SOUND_DRAGON_DEATH", "field_31116", "ENDER_DRAGON_DIES", "f_153583_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ANVIL_DESTROYED
    [[maybe_unused]] static jint get_field_ANVIL_DESTROYED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SOUND_ANVIL_BROKEN", "field_31117", "ANVIL_DESTROYED", "f_153584_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ANVIL_DESTROYED
    [[maybe_unused]] static void set_field_ANVIL_DESTROYED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SOUND_ANVIL_BROKEN", "field_31117", "ANVIL_DESTROYED", "f_153584_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ANVIL_USED
    [[maybe_unused]] static jint get_field_ANVIL_USED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SOUND_ANVIL_USED", "field_31118", "ANVIL_USED", "f_153585_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ANVIL_USED
    [[maybe_unused]] static void set_field_ANVIL_USED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SOUND_ANVIL_USED", "field_31118", "ANVIL_USED", "f_153585_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ANVIL_LANDS
    [[maybe_unused]] static jint get_field_ANVIL_LANDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SOUND_ANVIL_LAND", "field_31119", "ANVIL_LANDS", "f_153586_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ANVIL_LANDS
    [[maybe_unused]] static void set_field_ANVIL_LANDS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SOUND_ANVIL_LAND", "field_31119", "ANVIL_LANDS", "f_153586_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#TRAVEL_THROUGH_PORTAL
    [[maybe_unused]] static jint get_field_TRAVEL_THROUGH_PORTAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SOUND_PORTAL_TRAVEL", "field_31120", "TRAVEL_THROUGH_PORTAL", "f_153587_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#TRAVEL_THROUGH_PORTAL
    [[maybe_unused]] static void set_field_TRAVEL_THROUGH_PORTAL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SOUND_PORTAL_TRAVEL", "field_31120", "TRAVEL_THROUGH_PORTAL", "f_153587_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#CHORUS_FLOWER_GROWS
    [[maybe_unused]] static jint get_field_CHORUS_FLOWER_GROWS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "SOUND_CHORUS_GROW", "field_31121", "CHORUS_FLOWER_GROWS", "f_153588_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#CHORUS_FLOWER_GROWS
    [[maybe_unused]] static void set_field_CHORUS_FLOWER_GROWS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "SOUND_CHORUS_GROW", "field_31121", "CHORUS_FLOWER_GROWS", "f_153588_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#CHORUS_FLOWER_DIES
    [[maybe_unused]] static jint get_field_CHORUS_FLOWER_DIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "SOUND_CHORUS_DEATH", "field_31122", "CHORUS_FLOWER_DIES", "f_153589_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#CHORUS_FLOWER_DIES
    [[maybe_unused]] static void set_field_CHORUS_FLOWER_DIES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "SOUND_CHORUS_DEATH", "field_31122", "CHORUS_FLOWER_DIES", "f_153589_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#BREWING_STAND_BREWS
    [[maybe_unused]] static jint get_field_BREWING_STAND_BREWS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SOUND_BREWING_STAND_BREW", "field_31123", "BREWING_STAND_BREWS", "f_153590_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#BREWING_STAND_BREWS
    [[maybe_unused]] static void set_field_BREWING_STAND_BREWS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SOUND_BREWING_STAND_BREW", "field_31123", "BREWING_STAND_BREWS", "f_153590_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#END_PORTAL_OPENED
    [[maybe_unused]] static jint get_field_END_PORTAL_OPENED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "SOUND_END_PORTAL_SPAWN", "field_31126", "END_PORTAL_OPENED", "f_153593_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#END_PORTAL_OPENED
    [[maybe_unused]] static void set_field_END_PORTAL_OPENED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "SOUND_END_PORTAL_SPAWN", "field_31126", "END_PORTAL_OPENED", "f_153593_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#PHANTOM_BITES
    [[maybe_unused]] static jint get_field_PHANTOM_BITES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "SOUND_PHANTOM_BITE", "field_31127", "PHANTOM_BITES", "f_153594_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#PHANTOM_BITES
    [[maybe_unused]] static void set_field_PHANTOM_BITES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "SOUND_PHANTOM_BITE", "field_31127", "PHANTOM_BITES", "f_153594_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ZOMBIE_CONVERTS_TO_DROWNED
    [[maybe_unused]] static jint get_field_ZOMBIE_CONVERTS_TO_DROWNED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "SOUND_ZOMBIE_TO_DROWNED", "field_31128", "ZOMBIE_CONVERTS_TO_DROWNED", "f_153595_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ZOMBIE_CONVERTS_TO_DROWNED
    [[maybe_unused]] static void set_field_ZOMBIE_CONVERTS_TO_DROWNED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "SOUND_ZOMBIE_TO_DROWNED", "field_31128", "ZOMBIE_CONVERTS_TO_DROWNED", "f_153595_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#HUSK_CONVERTS_TO_ZOMBIE
    [[maybe_unused]] static jint get_field_HUSK_CONVERTS_TO_ZOMBIE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SOUND_HUSK_TO_ZOMBIE", "field_31129", "HUSK_CONVERTS_TO_ZOMBIE", "f_153596_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#HUSK_CONVERTS_TO_ZOMBIE
    [[maybe_unused]] static void set_field_HUSK_CONVERTS_TO_ZOMBIE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SOUND_HUSK_TO_ZOMBIE", "field_31129", "HUSK_CONVERTS_TO_ZOMBIE", "f_153596_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#GRINDSTONE_USED
    [[maybe_unused]] static jint get_field_GRINDSTONE_USED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "SOUND_GRINDSTONE_USED", "field_31130", "GRINDSTONE_USED", "f_153597_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#GRINDSTONE_USED
    [[maybe_unused]] static void set_field_GRINDSTONE_USED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "SOUND_GRINDSTONE_USED", "field_31130", "GRINDSTONE_USED", "f_153597_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#LECTERN_BOOK_PAGE_TURNED
    [[maybe_unused]] static jint get_field_LECTERN_BOOK_PAGE_TURNED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SOUND_PAGE_TURN", "field_31131", "LECTERN_BOOK_PAGE_TURNED", "f_153598_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#LECTERN_BOOK_PAGE_TURNED
    [[maybe_unused]] static void set_field_LECTERN_BOOK_PAGE_TURNED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SOUND_PAGE_TURN", "field_31131", "LECTERN_BOOK_PAGE_TURNED", "f_153598_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#SMITHING_TABLE_USED
    [[maybe_unused]] static jint get_field_SMITHING_TABLE_USED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SOUND_SMITHING_TABLE_USED", "field_31132", "SMITHING_TABLE_USED", "f_153599_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#SMITHING_TABLE_USED
    [[maybe_unused]] static void set_field_SMITHING_TABLE_USED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SOUND_SMITHING_TABLE_USED", "field_31132", "SMITHING_TABLE_USED", "f_153599_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#POINTED_DRIPSTONE_LANDS
    [[maybe_unused]] static jint get_field_POINTED_DRIPSTONE_LANDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SOUND_POINTED_DRIPSTONE_LAND", "field_31133", "POINTED_DRIPSTONE_LANDS", "f_153600_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#POINTED_DRIPSTONE_LANDS
    [[maybe_unused]] static void set_field_POINTED_DRIPSTONE_LANDS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SOUND_POINTED_DRIPSTONE_LAND", "field_31133", "POINTED_DRIPSTONE_LANDS", "f_153600_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#POINTED_DRIPSTONE_DRIPS_LAVA_INTO_CAULDRON
    [[maybe_unused]] static jint get_field_POINTED_DRIPSTONE_DRIPS_LAVA_INTO_CAULDRON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SOUND_DRIP_LAVA_INTO_CAULDRON", "field_31134", "POINTED_DRIPSTONE_DRIPS_LAVA_INTO_CAULDRON", "f_153601_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#POINTED_DRIPSTONE_DRIPS_LAVA_INTO_CAULDRON
    [[maybe_unused]] static void set_field_POINTED_DRIPSTONE_DRIPS_LAVA_INTO_CAULDRON(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SOUND_DRIP_LAVA_INTO_CAULDRON", "field_31134", "POINTED_DRIPSTONE_DRIPS_LAVA_INTO_CAULDRON", "f_153601_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#POINTED_DRIPSTONE_DRIPS_WATER_INTO_CAULDRON
    [[maybe_unused]] static jint get_field_POINTED_DRIPSTONE_DRIPS_WATER_INTO_CAULDRON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SOUND_DRIP_WATER_INTO_CAULDRON", "field_31135", "POINTED_DRIPSTONE_DRIPS_WATER_INTO_CAULDRON", "f_153602_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#POINTED_DRIPSTONE_DRIPS_WATER_INTO_CAULDRON
    [[maybe_unused]] static void set_field_POINTED_DRIPSTONE_DRIPS_WATER_INTO_CAULDRON(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SOUND_DRIP_WATER_INTO_CAULDRON", "field_31135", "POINTED_DRIPSTONE_DRIPS_WATER_INTO_CAULDRON", "f_153602_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#SKELETON_CONVERTS_TO_STRAY
    [[maybe_unused]] static jint get_field_SKELETON_CONVERTS_TO_STRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SOUND_SKELETON_TO_STRAY", "field_31136", "SKELETON_CONVERTS_TO_STRAY", "f_153603_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#SKELETON_CONVERTS_TO_STRAY
    [[maybe_unused]] static void set_field_SKELETON_CONVERTS_TO_STRAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SOUND_SKELETON_TO_STRAY", "field_31136", "SKELETON_CONVERTS_TO_STRAY", "f_153603_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#CRAFTER_CRAFTS
    [[maybe_unused]] static jint get_field_CRAFTER_CRAFTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "SOUND_CRAFTER_CRAFT", "field_46805", "CRAFTER_CRAFTS", "f_303758_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#CRAFTER_CRAFTS
    [[maybe_unused]] static void set_field_CRAFTER_CRAFTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "SOUND_CRAFTER_CRAFT", "field_46805", "CRAFTER_CRAFTS", "f_303758_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#CRAFTER_FAILS
    [[maybe_unused]] static jint get_field_CRAFTER_FAILS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "SOUND_CRAFTER_FAIL", "field_46806", "CRAFTER_FAILS", "f_302909_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#CRAFTER_FAILS
    [[maybe_unused]] static void set_field_CRAFTER_FAILS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "SOUND_CRAFTER_FAIL", "field_46806", "CRAFTER_FAILS", "f_302909_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#field_51787
    [[maybe_unused]] static jint get_field_field_51787() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "SOUND_WIND_CHARGE_SHOOT", "field_51787", "field_51787", "f_337190_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#field_51787
    [[maybe_unused]] static void set_field_field_51787(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "SOUND_WIND_CHARGE_SHOOT", "field_51787", "field_51787", "f_337190_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#COMPOSTER_USED
    [[maybe_unused]] static jint get_field_COMPOSTER_USED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "COMPOSTER_FILL", "field_31137", "COMPOSTER_USED", "f_153604_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#COMPOSTER_USED
    [[maybe_unused]] static void set_field_COMPOSTER_USED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "COMPOSTER_FILL", "field_31137", "COMPOSTER_USED", "f_153604_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#LAVA_EXTINGUISHED
    [[maybe_unused]] static jint get_field_LAVA_EXTINGUISHED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "LAVA_FIZZ", "field_31138", "LAVA_EXTINGUISHED", "f_153605_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#LAVA_EXTINGUISHED
    [[maybe_unused]] static void set_field_LAVA_EXTINGUISHED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "LAVA_FIZZ", "field_31138", "LAVA_EXTINGUISHED", "f_153605_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#REDSTONE_TORCH_BURNS_OUT
    [[maybe_unused]] static jint get_field_REDSTONE_TORCH_BURNS_OUT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "REDSTONE_TORCH_BURNOUT", "field_31139", "REDSTONE_TORCH_BURNS_OUT", "f_153606_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#REDSTONE_TORCH_BURNS_OUT
    [[maybe_unused]] static void set_field_REDSTONE_TORCH_BURNS_OUT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "REDSTONE_TORCH_BURNOUT", "field_31139", "REDSTONE_TORCH_BURNS_OUT", "f_153606_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#END_PORTAL_FRAME_FILLED
    [[maybe_unused]] static jint get_field_END_PORTAL_FRAME_FILLED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "END_PORTAL_FRAME_FILL", "field_31141", "END_PORTAL_FRAME_FILLED", "f_153608_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#END_PORTAL_FRAME_FILLED
    [[maybe_unused]] static void set_field_END_PORTAL_FRAME_FILLED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "END_PORTAL_FRAME_FILL", "field_31141", "END_PORTAL_FRAME_FILLED", "f_153608_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#POINTED_DRIPSTONE_DRIPS
    [[maybe_unused]] static jint get_field_POINTED_DRIPSTONE_DRIPS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "DRIPSTONE_DRIP", "field_31142", "POINTED_DRIPSTONE_DRIPS", "f_153609_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#POINTED_DRIPSTONE_DRIPS
    [[maybe_unused]] static void set_field_POINTED_DRIPSTONE_DRIPS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "DRIPSTONE_DRIP", "field_31142", "POINTED_DRIPSTONE_DRIPS", "f_153609_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#BONE_MEAL_USED
    [[maybe_unused]] static jint get_field_BONE_MEAL_USED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "PARTICLES_AND_SOUND_PLANT_GROWTH", "field_33511", "BONE_MEAL_USED", "f_153610_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#BONE_MEAL_USED
    [[maybe_unused]] static void set_field_BONE_MEAL_USED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "PARTICLES_AND_SOUND_PLANT_GROWTH", "field_33511", "BONE_MEAL_USED", "f_153610_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#DISPENSER_ACTIVATED
    [[maybe_unused]] static jint get_field_DISPENSER_ACTIVATED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "PARTICLES_SHOOT_SMOKE", "field_31143", "DISPENSER_ACTIVATED", "f_303049_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#DISPENSER_ACTIVATED
    [[maybe_unused]] static void set_field_DISPENSER_ACTIVATED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "PARTICLES_SHOOT_SMOKE", "field_31143", "DISPENSER_ACTIVATED", "f_303049_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#BLOCK_BROKEN
    [[maybe_unused]] static jint get_field_BLOCK_BROKEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "PARTICLES_DESTROY_BLOCK", "field_31144", "BLOCK_BROKEN", "f_153612_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#BLOCK_BROKEN
    [[maybe_unused]] static void set_field_BLOCK_BROKEN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "PARTICLES_DESTROY_BLOCK", "field_31144", "BLOCK_BROKEN", "f_153612_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#SPLASH_POTION_SPLASHED
    [[maybe_unused]] static jint get_field_SPLASH_POTION_SPLASHED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "PARTICLES_SPELL_POTION_SPLASH", "field_31145", "SPLASH_POTION_SPLASHED", "f_153613_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#SPLASH_POTION_SPLASHED
    [[maybe_unused]] static void set_field_SPLASH_POTION_SPLASHED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "PARTICLES_SPELL_POTION_SPLASH", "field_31145", "SPLASH_POTION_SPLASHED", "f_153613_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#EYE_OF_ENDER_BREAKS
    [[maybe_unused]] static jint get_field_EYE_OF_ENDER_BREAKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "PARTICLES_EYE_OF_ENDER_DEATH", "field_31146", "EYE_OF_ENDER_BREAKS", "f_153614_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#EYE_OF_ENDER_BREAKS
    [[maybe_unused]] static void set_field_EYE_OF_ENDER_BREAKS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "PARTICLES_EYE_OF_ENDER_DEATH", "field_31146", "EYE_OF_ENDER_BREAKS", "f_153614_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#SPAWNER_SPAWNS_MOB
    [[maybe_unused]] static jint get_field_SPAWNER_SPAWNS_MOB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "PARTICLES_MOBBLOCK_SPAWN", "field_31147", "SPAWNER_SPAWNS_MOB", "f_153615_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#SPAWNER_SPAWNS_MOB
    [[maybe_unused]] static void set_field_SPAWNER_SPAWNS_MOB(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "PARTICLES_MOBBLOCK_SPAWN", "field_31147", "SPAWNER_SPAWNS_MOB", "f_153615_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#DRAGON_BREATH_CLOUD_SPAWNS
    [[maybe_unused]] static jint get_field_DRAGON_BREATH_CLOUD_SPAWNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "PARTICLES_DRAGON_FIREBALL_SPLASH", "field_31149", "DRAGON_BREATH_CLOUD_SPAWNS", "f_153617_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#DRAGON_BREATH_CLOUD_SPAWNS
    [[maybe_unused]] static void set_field_DRAGON_BREATH_CLOUD_SPAWNS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "PARTICLES_DRAGON_FIREBALL_SPLASH", "field_31149", "DRAGON_BREATH_CLOUD_SPAWNS", "f_153617_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#INSTANT_SPLASH_POTION_SPLASHED
    [[maybe_unused]] static jint get_field_INSTANT_SPLASH_POTION_SPLASHED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "PARTICLES_INSTANT_POTION_SPLASH", "field_31150", "INSTANT_SPLASH_POTION_SPLASHED", "f_153618_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#INSTANT_SPLASH_POTION_SPLASHED
    [[maybe_unused]] static void set_field_INSTANT_SPLASH_POTION_SPLASHED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "PARTICLES_INSTANT_POTION_SPLASH", "field_31150", "INSTANT_SPLASH_POTION_SPLASHED", "f_153618_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ENDER_DRAGON_BREAKS_BLOCK
    [[maybe_unused]] static jint get_field_ENDER_DRAGON_BREAKS_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "PARTICLES_DRAGON_BLOCK_BREAK", "field_31151", "ENDER_DRAGON_BREAKS_BLOCK", "f_153619_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ENDER_DRAGON_BREAKS_BLOCK
    [[maybe_unused]] static void set_field_ENDER_DRAGON_BREAKS_BLOCK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "PARTICLES_DRAGON_BLOCK_BREAK", "field_31151", "ENDER_DRAGON_BREAKS_BLOCK", "f_153619_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#WET_SPONGE_DRIES_OUT
    [[maybe_unused]] static jint get_field_WET_SPONGE_DRIES_OUT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "PARTICLES_WATER_EVAPORATING", "field_31152", "WET_SPONGE_DRIES_OUT", "f_153620_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#WET_SPONGE_DRIES_OUT
    [[maybe_unused]] static void set_field_WET_SPONGE_DRIES_OUT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "PARTICLES_WATER_EVAPORATING", "field_31152", "WET_SPONGE_DRIES_OUT", "f_153620_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#CRAFTER_SHOOTS
    [[maybe_unused]] static jint get_field_CRAFTER_SHOOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "PARTICLES_SHOOT_WHITE_SMOKE", "field_46807", "CRAFTER_SHOOTS", "f_303351_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#CRAFTER_SHOOTS
    [[maybe_unused]] static void set_field_CRAFTER_SHOOTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "PARTICLES_SHOOT_WHITE_SMOKE", "field_46807", "CRAFTER_SHOOTS", "f_303351_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#BEE_FERTILIZES_PLANT
    [[maybe_unused]] static jint get_field_BEE_FERTILIZES_PLANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "PARTICLES_BEE_GROWTH", "field_47837", "BEE_FERTILIZES_PLANT", "f_316122_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#BEE_FERTILIZES_PLANT
    [[maybe_unused]] static void set_field_BEE_FERTILIZES_PLANT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "PARTICLES_BEE_GROWTH", "field_47837", "BEE_FERTILIZES_PLANT", "f_316122_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#TURTLE_EGG_PLACED
    [[maybe_unused]] static jint get_field_TURTLE_EGG_PLACED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "PARTICLES_TURTLE_EGG_PLACEMENT", "field_47838", "TURTLE_EGG_PLACED", "f_317108_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#TURTLE_EGG_PLACED
    [[maybe_unused]] static void set_field_TURTLE_EGG_PLACED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "PARTICLES_TURTLE_EGG_PLACEMENT", "field_47838", "TURTLE_EGG_PLACED", "f_317108_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#SMASH_ATTACK
    [[maybe_unused]] static jint get_field_SMASH_ATTACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "PARTICLES_SMASH_ATTACK", "field_50168", "SMASH_ATTACK", "f_316606_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#SMASH_ATTACK
    [[maybe_unused]] static void set_field_SMASH_ATTACK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "PARTICLES_SMASH_ATTACK", "field_50168", "SMASH_ATTACK", "f_316606_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#END_GATEWAY_SPAWNS
    [[maybe_unused]] static jint get_field_END_GATEWAY_SPAWNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "ANIMATION_END_GATEWAY_SPAWN", "field_31153", "END_GATEWAY_SPAWNS", "f_153621_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#END_GATEWAY_SPAWNS
    [[maybe_unused]] static void set_field_END_GATEWAY_SPAWNS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "ANIMATION_END_GATEWAY_SPAWN", "field_31153", "END_GATEWAY_SPAWNS", "f_153621_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ENDER_DRAGON_RESURRECTED
    [[maybe_unused]] static jint get_field_ENDER_DRAGON_RESURRECTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "ANIMATION_DRAGON_SUMMON_ROAR", "field_31154", "ENDER_DRAGON_RESURRECTED", "f_153622_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ENDER_DRAGON_RESURRECTED
    [[maybe_unused]] static void set_field_ENDER_DRAGON_RESURRECTED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "ANIMATION_DRAGON_SUMMON_ROAR", "field_31154", "ENDER_DRAGON_RESURRECTED", "f_153622_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#ELECTRICITY_SPARKS
    [[maybe_unused]] static jint get_field_ELECTRICITY_SPARKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "PARTICLES_ELECTRIC_SPARK", "field_31155", "ELECTRICITY_SPARKS", "f_153623_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#ELECTRICITY_SPARKS
    [[maybe_unused]] static void set_field_ELECTRICITY_SPARKS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "PARTICLES_ELECTRIC_SPARK", "field_31155", "ELECTRICITY_SPARKS", "f_153623_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#BLOCK_WAXED
    [[maybe_unused]] static jint get_field_BLOCK_WAXED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "PARTICLES_AND_SOUND_WAX_ON", "field_31156", "BLOCK_WAXED", "f_153624_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#BLOCK_WAXED
    [[maybe_unused]] static void set_field_BLOCK_WAXED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "PARTICLES_AND_SOUND_WAX_ON", "field_31156", "BLOCK_WAXED", "f_153624_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#WAX_REMOVED
    [[maybe_unused]] static jint get_field_WAX_REMOVED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "PARTICLES_WAX_OFF", "field_31157", "WAX_REMOVED", "f_153625_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#WAX_REMOVED
    [[maybe_unused]] static void set_field_WAX_REMOVED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "PARTICLES_WAX_OFF", "field_31157", "WAX_REMOVED", "f_153625_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#BLOCK_SCRAPED
    [[maybe_unused]] static jint get_field_BLOCK_SCRAPED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "PARTICLES_SCRAPE", "field_31158", "BLOCK_SCRAPED", "f_153626_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#BLOCK_SCRAPED
    [[maybe_unused]] static void set_field_BLOCK_SCRAPED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "PARTICLES_SCRAPE", "field_31158", "BLOCK_SCRAPED", "f_153626_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#SCULK_CHARGE
    [[maybe_unused]] static jint get_field_SCULK_CHARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "PARTICLES_SCULK_CHARGE", "field_37586", "SCULK_CHARGE", "f_221392_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#SCULK_CHARGE
    [[maybe_unused]] static void set_field_SCULK_CHARGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "PARTICLES_SCULK_CHARGE", "field_37586", "SCULK_CHARGE", "f_221392_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#SCULK_SHRIEKS
    [[maybe_unused]] static jint get_field_SCULK_SHRIEKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "PARTICLES_SCULK_SHRIEK", "field_38228", "SCULK_SHRIEKS", "f_221393_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#SCULK_SHRIEKS
    [[maybe_unused]] static void set_field_SCULK_SHRIEKS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "PARTICLES_SCULK_SHRIEK", "field_38228", "SCULK_SHRIEKS", "f_221393_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#BLOCK_FINISHED_BRUSHING
    [[maybe_unused]] static jint get_field_BLOCK_FINISHED_BRUSHING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "PARTICLES_AND_SOUND_BRUSH_BLOCK_COMPLETE", "field_42759", "BLOCK_FINISHED_BRUSHING", "f_271424_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#BLOCK_FINISHED_BRUSHING
    [[maybe_unused]] static void set_field_BLOCK_FINISHED_BRUSHING(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "PARTICLES_AND_SOUND_BRUSH_BLOCK_COMPLETE", "field_42759", "BLOCK_FINISHED_BRUSHING", "f_271424_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#SNIFFER_EGG_CRACKS
    [[maybe_unused]] static jint get_field_SNIFFER_EGG_CRACKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "PARTICLES_EGG_CRACK", "field_43238", "SNIFFER_EGG_CRACKS", "f_276522_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#SNIFFER_EGG_CRACKS
    [[maybe_unused]] static void set_field_SNIFFER_EGG_CRACKS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "PARTICLES_EGG_CRACK", "field_43238", "SNIFFER_EGG_CRACKS", "f_276522_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#TRIAL_SPAWNER_SPAWNS_MOB
    [[maybe_unused]] static jint get_field_TRIAL_SPAWNER_SPAWNS_MOB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "PARTICLES_TRIAL_SPAWNER_SPAWN", "field_47340", "TRIAL_SPAWNER_SPAWNS_MOB", "f_302761_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#TRIAL_SPAWNER_SPAWNS_MOB
    [[maybe_unused]] static void set_field_TRIAL_SPAWNER_SPAWNS_MOB(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "PARTICLES_TRIAL_SPAWNER_SPAWN", "field_47340", "TRIAL_SPAWNER_SPAWNS_MOB", "f_302761_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#TRIAL_SPAWNER_SPAWNS_MOB_AT_SPAWN_POS
    [[maybe_unused]] static jint get_field_TRIAL_SPAWNER_SPAWNS_MOB_AT_SPAWN_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "PARTICLES_TRIAL_SPAWNER_SPAWN_MOB_AT", "field_47341", "TRIAL_SPAWNER_SPAWNS_MOB_AT_SPAWN_POS", "f_303455_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#TRIAL_SPAWNER_SPAWNS_MOB_AT_SPAWN_POS
    [[maybe_unused]] static void set_field_TRIAL_SPAWNER_SPAWNS_MOB_AT_SPAWN_POS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "PARTICLES_TRIAL_SPAWNER_SPAWN_MOB_AT", "field_47341", "TRIAL_SPAWNER_SPAWNS_MOB_AT_SPAWN_POS", "f_303455_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#TRIAL_SPAWNER_DETECTS_PLAYER
    [[maybe_unused]] static jint get_field_TRIAL_SPAWNER_DETECTS_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "PARTICLES_TRIAL_SPAWNER_DETECT_PLAYER", "field_47342", "TRIAL_SPAWNER_DETECTS_PLAYER", "f_302341_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#TRIAL_SPAWNER_DETECTS_PLAYER
    [[maybe_unused]] static void set_field_TRIAL_SPAWNER_DETECTS_PLAYER(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "PARTICLES_TRIAL_SPAWNER_DETECT_PLAYER", "field_47342", "TRIAL_SPAWNER_DETECTS_PLAYER", "f_302341_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#TRIAL_SPAWNER_EJECTS_ITEM
    [[maybe_unused]] static jint get_field_TRIAL_SPAWNER_EJECTS_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "ANIMATION_TRIAL_SPAWNER_EJECT_ITEM", "field_47343", "TRIAL_SPAWNER_EJECTS_ITEM", "f_303516_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#TRIAL_SPAWNER_EJECTS_ITEM
    [[maybe_unused]] static void set_field_TRIAL_SPAWNER_EJECTS_ITEM(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "ANIMATION_TRIAL_SPAWNER_EJECT_ITEM", "field_47343", "TRIAL_SPAWNER_EJECTS_ITEM", "f_303516_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#VAULT_ACTIVATES
    [[maybe_unused]] static jint get_field_VAULT_ACTIVATES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "ANIMATION_VAULT_ACTIVATE", "field_48852", "VAULT_ACTIVATES", "f_315204_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#VAULT_ACTIVATES
    [[maybe_unused]] static void set_field_VAULT_ACTIVATES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "ANIMATION_VAULT_ACTIVATE", "field_48852", "VAULT_ACTIVATES", "f_315204_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#VAULT_DEACTIVATES
    [[maybe_unused]] static jint get_field_VAULT_DEACTIVATES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "ANIMATION_VAULT_DEACTIVATE", "field_48853", "VAULT_DEACTIVATES", "f_316070_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#VAULT_DEACTIVATES
    [[maybe_unused]] static void set_field_VAULT_DEACTIVATES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "ANIMATION_VAULT_DEACTIVATE", "field_48853", "VAULT_DEACTIVATES", "f_316070_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#VAULT_EJECTS_ITEM
    [[maybe_unused]] static jint get_field_VAULT_EJECTS_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "ANIMATION_VAULT_EJECT_ITEM", "field_48854", "VAULT_EJECTS_ITEM", "f_314901_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#VAULT_EJECTS_ITEM
    [[maybe_unused]] static void set_field_VAULT_EJECTS_ITEM(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "ANIMATION_VAULT_EJECT_ITEM", "field_48854", "VAULT_EJECTS_ITEM", "f_314901_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#COBWEB_WEAVED
    [[maybe_unused]] static jint get_field_COBWEB_WEAVED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "ANIMATION_SPAWN_COBWEB", "field_50164", "COBWEB_WEAVED", "f_317141_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#COBWEB_WEAVED
    [[maybe_unused]] static void set_field_COBWEB_WEAVED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "ANIMATION_SPAWN_COBWEB", "field_50164", "COBWEB_WEAVED", "f_317141_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#OMINOUS_TRIAL_SPAWNER_DETECTS_PLAYER
    [[maybe_unused]] static jint get_field_OMINOUS_TRIAL_SPAWNER_DETECTS_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "PARTICLES_TRIAL_SPAWNER_DETECT_PLAYER_OMINOUS", "field_50165", "OMINOUS_TRIAL_SPAWNER_DETECTS_PLAYER", "f_316028_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#OMINOUS_TRIAL_SPAWNER_DETECTS_PLAYER
    [[maybe_unused]] static void set_field_OMINOUS_TRIAL_SPAWNER_DETECTS_PLAYER(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "PARTICLES_TRIAL_SPAWNER_DETECT_PLAYER_OMINOUS", "field_50165", "OMINOUS_TRIAL_SPAWNER_DETECTS_PLAYER", "f_316028_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#TRIAL_SPAWNER_TURNS_OMINOUS
    [[maybe_unused]] static jint get_field_TRIAL_SPAWNER_TURNS_OMINOUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "PARTICLES_TRIAL_SPAWNER_BECOME_OMINOUS", "field_50166", "TRIAL_SPAWNER_TURNS_OMINOUS", "f_316991_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#TRIAL_SPAWNER_TURNS_OMINOUS
    [[maybe_unused]] static void set_field_TRIAL_SPAWNER_TURNS_OMINOUS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "PARTICLES_TRIAL_SPAWNER_BECOME_OMINOUS", "field_50166", "TRIAL_SPAWNER_TURNS_OMINOUS", "f_316991_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WorldEvents#OMINOUS_ITEM_SPAWNER_SPAWNS_ITEM
    [[maybe_unused]] static jint get_field_OMINOUS_ITEM_SPAWNER_SPAWNS_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "PARTICLES_TRIAL_SPAWNER_SPAWN_ITEM", "field_50167", "OMINOUS_ITEM_SPAWNER_SPAWNS_ITEM", "f_315835_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WorldEvents#OMINOUS_ITEM_SPAWNER_SPAWNS_ITEM
    [[maybe_unused]] static void set_field_OMINOUS_ITEM_SPAWNER_SPAWNS_ITEM(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "PARTICLES_TRIAL_SPAWNER_SPAWN_ITEM", "field_50167", "OMINOUS_ITEM_SPAWNER_SPAWNS_ITEM", "f_315835_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

};

#endif // NET_MINECRAFT_WORLD_WORLDEVENTS_HPP