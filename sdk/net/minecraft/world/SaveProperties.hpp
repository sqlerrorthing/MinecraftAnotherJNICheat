// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_SAVEPROPERTIES_HPP
#define NET_MINECRAFT_WORLD_SAVEPROPERTIES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.SaveProperties
 * Remapped: erl
 */
namespace SaveProperties {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("erl", "net/minecraft/world/level/storage/WorldData", "net/minecraft/class_5219", "net/minecraft/world/SaveProperties", "net/minecraft/src/C_2795_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.SaveProperties#ANVIL_FORMAT_ID
    [[maybe_unused]] static jint get_field_ANVIL_FORMAT_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ANVIL_VERSION_ID", "field_31844", "ANVIL_FORMAT_ID", "f_164978_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.SaveProperties#ANVIL_FORMAT_ID
    [[maybe_unused]] static void set_field_ANVIL_FORMAT_ID(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ANVIL_VERSION_ID", "field_31844", "ANVIL_FORMAT_ID", "f_164978_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.SaveProperties#MCREGION_FORMAT_ID
    [[maybe_unused]] static jint get_field_MCREGION_FORMAT_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MCREGION_VERSION_ID", "field_31845", "MCREGION_FORMAT_ID", "f_164979_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.SaveProperties#MCREGION_FORMAT_ID
    [[maybe_unused]] static void set_field_MCREGION_FORMAT_ID(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MCREGION_VERSION_ID", "field_31845", "MCREGION_FORMAT_ID", "f_164979_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_getDataConfiguration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "getDataConfiguration", "method_29589", "getDataConfiguration", "m_6645_"), "()Lddr;");
    }

    static jobject getDataConfiguration(const jobject& obj) {
                
       const auto methodID = methodID_getDataConfiguration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateLevelInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDataConfiguration", "method_29590", "updateLevelInfo", "m_245843_"), "(Lddr;)V");
    }

    static void updateLevelInfo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateLevelInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isModded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "wasModded", "method_27431", "isModded", "m_6565_"), "()Z");
    }

    static jboolean isModded(const jobject& obj) {
                
       const auto methodID = methodID_isModded();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServerBrands() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "getKnownServerBrands", "method_27432", "getServerBrands", "m_6161_"), "()Ljava/util/Set;");
    }

    static jobject getServerBrands(const jobject& obj) {
                
       const auto methodID = methodID_getServerBrands();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRemovedFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "getRemovedFeatureFlags", "method_49900", "getRemovedFeatures", "m_276907_"), "()Ljava/util/Set;");
    }

    static jobject getRemovedFeatures(const jobject& obj) {
                
       const auto methodID = methodID_getRemovedFeatures();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addServerBrand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setModdedInfo", "method_24285", "addServerBrand", "m_7955_"), "(Ljava/lang/String;Z)V");
    }

    static void addServerBrand(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_addServerBrand();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_populateCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillCrashReportCategory", "method_151", "populateCrashReport", "m_5461_"), "(Lp;)V");
    }

    static void populateCrashReport(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_populateCrashReport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFormatName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getStorageVersionName", "method_27440", "getFormatName", "m_78646_"), "(I)Ljava/lang/String;");
    }

    static jobject getFormatName(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getFormatName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCustomBossEvents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "getCustomBossEvents", "method_228", "getCustomBossEvents", "m_6587_"), "()Lub;");
    }

    static jobject getCustomBossEvents(const jobject& obj) {
                
       const auto methodID = methodID_getCustomBossEvents();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCustomBossEvents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCustomBossEvents", "method_221", "setCustomBossEvents", "m_5917_"), "(Lub;)V");
    }

    static void setCustomBossEvents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCustomBossEvents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMainWorldProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "overworldData", "method_27859", "getMainWorldProperties", "m_5996_"), "()Lerk;");
    }

    static jobject getMainWorldProperties(const jobject& obj) {
                
       const auto methodID = methodID_getMainWorldProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLevelInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "getLevelSettings", "method_27433", "getLevelInfo", "m_5926_"), "()Ldda;");
    }

    static jobject getLevelInfo(const jobject& obj) {
                
       const auto methodID = methodID_getLevelInfo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_cloneWorldNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTag", "method_163", "cloneWorldNbt", "m_6626_"), "(Lka;Lub;)Lub;");
    }

    static jobject cloneWorldNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_cloneWorldNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isHardcore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "isHardcore", "method_152", "isHardcore", "m_5466_"), "()Z");
    }

    static jboolean isHardcore(const jobject& obj) {
                
       const auto methodID = methodID_isHardcore();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getVersion", "method_168", "getVersion", "m_6517_"), "()I");
    }

    static jint getVersion(const jobject& obj) {
                
       const auto methodID = methodID_getVersion();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLevelName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getLevelName", "method_150", "getLevelName", "m_5462_"), "()Ljava/lang/String;");
    }

    static jobject getLevelName(const jobject& obj) {
                
       const auto methodID = methodID_getLevelName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getGameType", "method_210", "getGameMode", "m_5464_"), "()Ldct;");
    }

    static jobject getGameMode(const jobject& obj) {
                
       const auto methodID = methodID_getGameMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setGameType", "method_193", "setGameMode", "m_5458_"), "(Ldct;)V");
    }

    static void setGameMode(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setGameMode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_areCommandsAllowed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "isAllowCommands", "method_194", "areCommandsAllowed", "m_5468_"), "()Z");
    }

    static jboolean areCommandsAllowed(const jobject& obj) {
                
       const auto methodID = methodID_areCommandsAllowed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getDifficulty", "method_207", "getDifficulty", "m_5472_"), "()Lbqo;");
    }

    static jobject getDifficulty(const jobject& obj) {
                
       const auto methodID = methodID_getDifficulty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDifficulty", "method_208", "setDifficulty", "m_6166_"), "(Lbqo;)V");
    }

    static void setDifficulty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDifficulty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isDifficultyLocked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "isDifficultyLocked", "method_197", "isDifficultyLocked", "m_5474_"), "()Z");
    }

    static jboolean isDifficultyLocked(const jobject& obj) {
                
       const auto methodID = methodID_isDifficultyLocked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDifficultyLocked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setDifficultyLocked", "method_186", "setDifficultyLocked", "m_5560_"), "(Z)V");
    }

    static void setDifficultyLocked(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setDifficultyLocked();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getGameRules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getGameRules", "method_146", "getGameRules", "m_5470_"), "()Ldcs;");
    }

    static jobject getGameRules(const jobject& obj) {
                
       const auto methodID = methodID_getGameRules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayerData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getLoadedPlayerTag", "method_226", "getPlayerData", "m_6614_"), "()Lub;");
    }

    static jobject getPlayerData(const jobject& obj) {
                
       const auto methodID = methodID_getPlayerData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDragonFight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "endDragonFightData", "method_29036", "getDragonFight", "m_6564_"), "()Ldxb$a;");
    }

    static jobject getDragonFight(const jobject& obj) {
                
       const auto methodID = methodID_getDragonFight();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDragonFight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setEndDragonFightData", "method_29037", "setDragonFight", "m_5915_"), "(Ldxb$a;)V");
    }

    static void setDragonFight(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDragonFight();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getGeneratorOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "worldGenOptions", "method_28057", "getGeneratorOptions", "m_246337_"), "()Ldzw;");
    }

    static jobject getGeneratorOptions(const jobject& obj) {
                
       const auto methodID = methodID_getGeneratorOptions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFlatWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "isFlatWorld", "method_45555", "isFlatWorld", "m_5961_"), "()Z");
    }

    static jboolean isFlatWorld(const jobject& obj) {
                
       const auto methodID = methodID_isFlatWorld();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDebugWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "isDebugWorld", "method_45556", "isDebugWorld", "m_7513_"), "()Z");
    }

    static jboolean isDebugWorld(const jobject& obj) {
                
       const auto methodID = methodID_isDebugWorld();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLifecycle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "worldGenSettingsLifecycle", "method_29588", "getLifecycle", "m_5754_"), "()Lcom/mojang/serialization/Lifecycle;");
    }

    static jobject getLifecycle(const jobject& obj) {
                
       const auto methodID = methodID_getLifecycle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEnabledFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "enabledFeatures", "method_45560", "getEnabledFeatures", "m_247623_"), "()Lcpl;");
    }

    static jobject getEnabledFeatures(const jobject& obj) {
                
       const auto methodID = methodID_getEnabledFeatures();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_SAVEPROPERTIES_HPP