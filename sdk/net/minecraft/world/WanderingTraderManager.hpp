// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_WANDERINGTRADERMANAGER_HPP
#define NET_MINECRAFT_WORLD_WANDERINGTRADERMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.WanderingTraderManager
 * Remapped: cmr
 */
namespace WanderingTraderManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cmr", "net/minecraft/world/entity/npc/WanderingTraderSpawner", "net/minecraft/class_3990", "net/minecraft/world/WanderingTraderManager", "net/minecraft/src/C_1137_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.WanderingTraderManager#DEFAULT_SPAWN_TIMER
    [[maybe_unused]] static jint get_field_DEFAULT_SPAWN_TIMER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_TICK_DELAY", "field_30631", "DEFAULT_SPAWN_TIMER", "f_150051_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.WanderingTraderManager#DEFAULT_SPAWN_TIMER
    [[maybe_unused]] static void set_field_DEFAULT_SPAWN_TIMER(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_TICK_DELAY", "field_30631", "DEFAULT_SPAWN_TIMER", "f_150051_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.WanderingTraderManager#DEFAULT_SPAWN_DELAY
    [[maybe_unused]] static jint get_field_DEFAULT_SPAWN_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_SPAWN_DELAY", "field_30630", "DEFAULT_SPAWN_DELAY", "f_150050_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.WanderingTraderManager#DEFAULT_SPAWN_DELAY
    [[maybe_unused]] static void set_field_DEFAULT_SPAWN_DELAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_SPAWN_DELAY", "field_30630", "DEFAULT_SPAWN_DELAY", "f_150050_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.WanderingTraderManager#MIN_SPAWN_CHANCE
    [[maybe_unused]] static jint get_field_MIN_SPAWN_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MIN_SPAWN_CHANCE", "field_30632", "MIN_SPAWN_CHANCE", "f_150052_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.WanderingTraderManager#MIN_SPAWN_CHANCE
    [[maybe_unused]] static void set_field_MIN_SPAWN_CHANCE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MIN_SPAWN_CHANCE", "field_30632", "MIN_SPAWN_CHANCE", "f_150052_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.WanderingTraderManager#MAX_SPAWN_CHANCE
    [[maybe_unused]] static jint get_field_MAX_SPAWN_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MAX_SPAWN_CHANCE", "field_30633", "MAX_SPAWN_CHANCE", "f_150053_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.WanderingTraderManager#MAX_SPAWN_CHANCE
    [[maybe_unused]] static void set_field_MAX_SPAWN_CHANCE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MAX_SPAWN_CHANCE", "field_30633", "MAX_SPAWN_CHANCE", "f_150053_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.WanderingTraderManager#DEFAULT_SPAWN_CHANCE
    [[maybe_unused]] static jint get_field_DEFAULT_SPAWN_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SPAWN_CHANCE_INCREASE", "field_30634", "DEFAULT_SPAWN_CHANCE", "f_150054_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.WanderingTraderManager#DEFAULT_SPAWN_CHANCE
    [[maybe_unused]] static void set_field_DEFAULT_SPAWN_CHANCE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SPAWN_CHANCE_INCREASE", "field_30634", "DEFAULT_SPAWN_CHANCE", "f_150054_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.WanderingTraderManager#field_30635
    [[maybe_unused]] static jint get_field_field_30635() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SPAWN_ONE_IN_X_CHANCE", "field_30635", "field_30635", "f_150055_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.WanderingTraderManager#field_30635
    [[maybe_unused]] static void set_field_field_30635(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SPAWN_ONE_IN_X_CHANCE", "field_30635", "field_30635", "f_150055_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.WanderingTraderManager#field_30636
    [[maybe_unused]] static jint get_field_field_30636() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NUMBER_OF_SPAWN_ATTEMPTS", "field_30636", "field_30636", "f_150056_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.WanderingTraderManager#field_30636
    [[maybe_unused]] static void set_field_field_30636(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NUMBER_OF_SPAWN_ATTEMPTS", "field_30636", "field_30636", "f_150056_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.WanderingTraderManager#random
    static jobject get_field_random(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "random", "field_17726", "random", "f_35908_"), "Layw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.WanderingTraderManager#random
    static void set_field_random(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "random", "field_17726", "random", "f_35908_"), "Layw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.WanderingTraderManager#properties
    static jobject get_field_properties(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "serverLevelData", "field_24387", "properties", "f_35909_"), "Lerk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.WanderingTraderManager#properties
    static void set_field_properties(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "serverLevelData", "field_24387", "properties", "f_35909_"), "Lerk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.WanderingTraderManager#spawnTimer
    static jint get_field_spawnTimer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "tickDelay", "field_17728", "spawnTimer", "f_35910_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.WanderingTraderManager#spawnTimer
    static void set_field_spawnTimer(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "tickDelay", "field_17728", "spawnTimer", "f_35910_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.WanderingTraderManager#spawnDelay
    static jint get_field_spawnDelay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "spawnDelay", "field_17729", "spawnDelay", "f_35911_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.WanderingTraderManager#spawnDelay
    static void set_field_spawnDelay(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "spawnDelay", "field_17729", "spawnDelay", "f_35911_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.WanderingTraderManager#spawnChance
    static jint get_field_spawnChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "spawnChance", "field_17730", "spawnChance", "f_35912_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.WanderingTraderManager#spawnChance
    static void set_field_spawnChance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "spawnChance", "field_17730", "spawnChance", "f_35912_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_spawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_6445", "spawn", "m_7995_"), "(Laqu;ZZ)I");
    }

    static jint spawn(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_spawn();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_trySpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spawn", "method_18018", "trySpawn", "m_35915_"), "(Laqu;)Z");
    }

    static jboolean trySpawn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_trySpawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_spawnLlama() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryToSpawnLlamaFor", "method_18016", "spawnLlama", "m_35917_"), "(Laqu;Lcmq;I)V");
    }

    static void spawnLlama(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_spawnLlama();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getNearbySpawnPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findSpawnPositionNear", "method_18017", "getNearbySpawnPos", "m_35928_"), "(Ldcz;Ljd;I)Ljd;");
    }

    static jobject getNearbySpawnPos(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_getNearbySpawnPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_doesNotSuffocateAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasEnoughSpace", "method_23279", "doesNotSuffocateAt", "m_35925_"), "(Ldcc;Ljd;)Z");
    }

    static jboolean doesNotSuffocateAt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_doesNotSuffocateAt();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_WANDERINGTRADERMANAGER_HPP