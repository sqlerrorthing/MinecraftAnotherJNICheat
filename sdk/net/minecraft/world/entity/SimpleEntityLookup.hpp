// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_ENTITY_SIMPLEENTITYLOOKUP_HPP
#define NET_MINECRAFT_WORLD_ENTITY_SIMPLEENTITYLOOKUP_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.entity.SimpleEntityLookup
 * Remapped: dxq
 */
namespace SimpleEntityLookup {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dxq", "net/minecraft/world/level/entity/LevelEntityGetterAdapter", "net/minecraft/class_5578", "net/minecraft/world/entity/SimpleEntityLookup", "net/minecraft/src/C_141291_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.entity.SimpleEntityLookup#index
    static jobject get_field_index(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "visibleEntities", "field_27258", "index", "f_156940_"), "Ldxi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.entity.SimpleEntityLookup#index
    static void set_field_index(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "visibleEntities", "field_27258", "index", "f_156940_"), "Ldxi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.entity.SimpleEntityLookup#cache
    static jobject get_field_cache(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "sectionStorage", "field_27259", "cache", "f_156941_"), "Ldxl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.entity.SimpleEntityLookup#cache
    static void set_field_cache(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "sectionStorage", "field_27259", "cache", "f_156941_"), "Ldxl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_31804", "get", "m_142597_"), "(I)Ldxg;");
    }

    static jobject get(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_31808", "get", "m_142694_"), "(Ljava/util/UUID;)Ldxg;");
    }

    static jobject _get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_iterate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAll", "method_31803", "iterate", "m_142273_"), "()Ljava/lang/Iterable;");
    }

    static jobject iterate(const jobject& obj) {
                
       const auto methodID = methodID_iterate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_forEach() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_31806", "forEach", "m_142690_"), "(Ldxn;Laxa;)V");
    }

    static void forEach(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_forEach();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_forEachIntersects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_31807", "forEachIntersects", "m_142232_"), "(Lewx;Ljava/util/function/Consumer;)V");
    }

    static void forEachIntersects(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_forEachIntersects();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__forEachIntersects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_31805", "forEachIntersects", "m_142137_"), "(Ldxn;Lewx;Laxa;)V");
    }

    static void _forEachIntersects(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__forEachIntersects();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_WORLD_ENTITY_SIMPLEENTITYLOOKUP_HPP