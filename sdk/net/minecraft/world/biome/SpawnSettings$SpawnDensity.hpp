// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_SPAWNSETTINGS$SPAWNDENSITY_HPP
#define NET_MINECRAFT_WORLD_BIOME_SPAWNSETTINGS$SPAWNDENSITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.SpawnSettings$SpawnDensity
 * Remapped: dei$b
 */
namespace SpawnSettings$SpawnDensity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dei$b", "net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost", "net/minecraft/class_5483$class_5265", "net/minecraft/world/biome/SpawnSettings$SpawnDensity", "net/minecraft/src/C_1660_$C_1663_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.biome.SpawnSettings$SpawnDensity#gravityLimit
    static jdouble get_field_gravityLimit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "energyBudget", "comp_1307", "gravityLimit", "f_48385_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.SpawnSettings$SpawnDensity#gravityLimit
    static void set_field_gravityLimit(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "energyBudget", "comp_1307", "gravityLimit", "f_48385_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.SpawnSettings$SpawnDensity#mass
    static jdouble get_field_mass(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "charge", "comp_1308", "mass", "f_48386_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.SpawnSettings$SpawnDensity#mass
    static void set_field_mass(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "charge", "comp_1308", "mass", "f_48386_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.world.biome.SpawnSettings$SpawnDensity#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_25820", "CODEC", "f_48384_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.biome.SpawnSettings$SpawnDensity#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_25820", "CODEC", "f_48384_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID__gravityLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "energyBudget", "comp_1307", "gravityLimit", "f_48385_"), "()D");
    }

    static jdouble _gravityLimit(const jobject& obj) {
                
       const auto methodID = methodID__gravityLimit();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID__mass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "charge", "comp_1308", "mass", "f_48386_"), "()D");
    }

    static jdouble _mass(const jobject& obj) {
                
       const auto methodID = methodID__mass();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_SPAWNSETTINGS$SPAWNDENSITY_HPP