// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_SOURCE_MULTINOISEBIOMESOURCEPARAMETERLIST_HPP
#define NET_MINECRAFT_WORLD_BIOME_SOURCE_MULTINOISEBIOMESOURCEPARAMETERLIST_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterList
 * Remapped: dek
 */
namespace MultiNoiseBiomeSourceParameterList {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dek", "net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList", "net/minecraft/class_8197", "net/minecraft/world/biome/source/MultiNoiseBiomeSourceParameterList", "net/minecraft/src/C_273807_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterList#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DIRECT_CODEC", "field_42986", "CODEC", "f_273907_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterList#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DIRECT_CODEC", "field_42986", "CODEC", "f_273907_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterList#REGISTRY_CODEC
    [[maybe_unused]] static jobject get_field_REGISTRY_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_42987", "REGISTRY_CODEC", "f_273930_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterList#REGISTRY_CODEC
    [[maybe_unused]] static void set_field_REGISTRY_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_42987", "REGISTRY_CODEC", "f_273930_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterList#preset
    static jobject get_field_preset(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "preset", "field_42988", "preset", "f_273943_"), "Ldek$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterList#preset
    static void set_field_preset(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "preset", "field_42988", "preset", "f_273943_"), "Ldek$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterList#entries
    static jobject get_field_entries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "parameters", "field_42989", "entries", "f_273815_"), "Ldef$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterList#entries
    static void set_field_entries(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "parameters", "field_42989", "entries", "f_273815_"), "Ldef$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "parameters", "method_49507", "getEntries", "m_274385_"), "()Ldef$c;");
    }

    static jobject getEntries(const jobject& obj) {
                
       const auto methodID = methodID_getEntries();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPresetToEntriesMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "knownPresets", "method_49512", "getPresetToEntriesMap", "m_274368_"), "()Ljava/util/Map;");
    }

    static jobject getPresetToEntriesMap() {
       const auto clazz = self();
       const auto methodID = methodID_getPresetToEntriesMap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_SOURCE_MULTINOISEBIOMESOURCEPARAMETERLIST_HPP