// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$FITTESTPOSITIONFINDER_HPP
#define NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$FITTESTPOSITIONFINDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.source.util.MultiNoiseUtil$FittestPositionFinder
 * Remapped: def$g
 */
namespace MultiNoiseUtil$FittestPositionFinder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("def$g", "net/minecraft/world/level/biome/Climate$SpawnFinder", "net/minecraft/class_6544$class_6729", "net/minecraft/world/biome/source/util/MultiNoiseUtil$FittestPositionFinder", "net/minecraft/src/C_182857_$C_182867_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.world.biome.source.util.MultiNoiseUtil$FittestPositionFinder#bestResult
    static jobject get_field_bestResult(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "result", "field_35360", "bestResult", "f_186978_"), "Ldef$g$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.biome.source.util.MultiNoiseUtil$FittestPositionFinder#bestResult
    static void set_field_bestResult(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "result", "field_35360", "bestResult", "f_186978_"), "Ldef$g$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_findFittest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "radialSearch", "method_39166", "findFittest", "m_207874_"), "(Ljava/util/List;Ldef$f;FF)V");
    }

    static void findFittest(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_findFittest();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_calculateFitness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpawnPositionAndFitness", "method_39167", "calculateFitness", "m_207879_"), "(Ljava/util/List;Ldef$f;II)Ldef$g$a;");
    }

    static jobject calculateFitness(const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_calculateFitness();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$FITTESTPOSITIONFINDER_HPP