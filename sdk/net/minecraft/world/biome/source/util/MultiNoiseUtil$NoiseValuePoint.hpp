// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$NOISEVALUEPOINT_HPP
#define NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$NOISEVALUEPOINT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint
 * Remapped: def$h
 */
namespace MultiNoiseUtil$NoiseValuePoint {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("def$h", "net/minecraft/world/level/biome/Climate$TargetPoint", "net/minecraft/class_6544$class_6553", "net/minecraft/world/biome/source/util/MultiNoiseUtil$NoiseValuePoint", "net/minecraft/src/C_182857_$C_182869_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint#temperatureNoise
    static jlong get_field_temperatureNoise(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "temperature", "comp_112", "temperatureNoise", "f_187003_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint#temperatureNoise
    static void set_field_temperatureNoise(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "temperature", "comp_112", "temperatureNoise", "f_187003_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint#humidityNoise
    static jlong get_field_humidityNoise(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "humidity", "comp_113", "humidityNoise", "f_187004_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint#humidityNoise
    static void set_field_humidityNoise(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "humidity", "comp_113", "humidityNoise", "f_187004_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint#continentalnessNoise
    static jlong get_field_continentalnessNoise(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "continentalness", "comp_114", "continentalnessNoise", "f_187005_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint#continentalnessNoise
    static void set_field_continentalnessNoise(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "continentalness", "comp_114", "continentalnessNoise", "f_187005_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint#erosionNoise
    static jlong get_field_erosionNoise(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "erosion", "comp_115", "erosionNoise", "f_187006_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint#erosionNoise
    static void set_field_erosionNoise(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "erosion", "comp_115", "erosionNoise", "f_187006_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint#depth
    static jlong get_field_depth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "depth", "comp_116", "depth", "f_187007_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint#depth
    static void set_field_depth(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "depth", "comp_116", "depth", "f_187007_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint#weirdnessNoise
    static jlong get_field_weirdnessNoise(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "weirdness", "comp_117", "weirdnessNoise", "f_187008_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.biome.source.util.MultiNoiseUtil$NoiseValuePoint#weirdnessNoise
    static void set_field_weirdnessNoise(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "weirdness", "comp_117", "weirdnessNoise", "f_187008_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_getNoiseValueList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "toParameterArray", "method_38166", "getNoiseValueList", "m_187016_"), "()[J");
    }

    static jlong getNoiseValueList(const jobject& obj) {
                
       const auto methodID = methodID_getNoiseValueList();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__temperatureNoise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "temperature", "comp_112", "temperatureNoise", "f_187003_"), "()J");
    }

    static jlong _temperatureNoise(const jobject& obj) {
                
       const auto methodID = methodID__temperatureNoise();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__humidityNoise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "humidity", "comp_113", "humidityNoise", "f_187004_"), "()J");
    }

    static jlong _humidityNoise(const jobject& obj) {
                
       const auto methodID = methodID__humidityNoise();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__continentalnessNoise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "continentalness", "comp_114", "continentalnessNoise", "f_187005_"), "()J");
    }

    static jlong _continentalnessNoise(const jobject& obj) {
                
       const auto methodID = methodID__continentalnessNoise();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__erosionNoise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "erosion", "comp_115", "erosionNoise", "f_187006_"), "()J");
    }

    static jlong _erosionNoise(const jobject& obj) {
                
       const auto methodID = methodID__erosionNoise();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__depth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "depth", "comp_116", "depth", "f_187007_"), "()J");
    }

    static jlong _depth(const jobject& obj) {
                
       const auto methodID = methodID__depth();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__weirdnessNoise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "weirdness", "comp_117", "weirdnessNoise", "f_187008_"), "()J");
    }

    static jlong _weirdnessNoise(const jobject& obj) {
                
       const auto methodID = methodID__weirdnessNoise();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$NOISEVALUEPOINT_HPP