// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$PARAMETERRANGE_HPP
#define NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$PARAMETERRANGE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.source.util.MultiNoiseUtil$ParameterRange
 * Remapped: def$b
 */
namespace MultiNoiseUtil$ParameterRange {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("def$b", "net/minecraft/world/level/biome/Climate$Parameter", "net/minecraft/class_6544$class_6546", "net/minecraft/world/biome/source/util/MultiNoiseUtil$ParameterRange", "net/minecraft/src/C_182857_$C_182859_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.biome.source.util.MultiNoiseUtil$ParameterRange#min
    static jlong get_field_min(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "min", "comp_103", "min", "f_186813_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.util.MultiNoiseUtil$ParameterRange#min
    static void set_field_min(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "min", "comp_103", "min", "f_186813_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.source.util.MultiNoiseUtil$ParameterRange#max
    static jlong get_field_max(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "max", "comp_104", "max", "f_186814_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.util.MultiNoiseUtil$ParameterRange#max
    static void set_field_max(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "max", "comp_104", "max", "f_186814_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.world.biome.source.util.MultiNoiseUtil$ParameterRange#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_34478", "CODEC", "f_186812_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.biome.source.util.MultiNoiseUtil$ParameterRange#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_34478", "CODEC", "f_186812_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "point", "method_38120", "of", "m_186820_"), "(F)Ldef$b;");
    }

    static jobject of(const jfloat& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "span", "method_38121", "of", "m_186822_"), "(FF)Ldef$b;");
    }

    static jobject _of(const jfloat& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_combine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "span", "method_38123", "combine", "m_186829_"), "(Ldef$b;Ldef$b;)Ldef$b;");
    }

    static jobject combine(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_combine();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "distance", "method_38126", "getDistance", "m_186825_"), "(J)J");
    }

    static jlong getDistance(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_getDistance();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "distance", "method_38122", "getDistance", "m_186827_"), "(Ldef$b;)J");
    }

    static jlong _getDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getDistance();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__combine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "span", "method_38127", "combine", "m_186836_"), "(Ldef$b;)Ldef$b;");
    }

    static jobject _combine(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__combine();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__min() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "min", "comp_103", "min", "f_186813_"), "()J");
    }

    static jlong _min(const jobject& obj) {
                
       const auto methodID = methodID__min();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__max() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "max", "comp_104", "max", "f_186814_"), "()J");
    }

    static jlong _max(const jobject& obj) {
                
       const auto methodID = methodID__max();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$PARAMETERRANGE_HPP