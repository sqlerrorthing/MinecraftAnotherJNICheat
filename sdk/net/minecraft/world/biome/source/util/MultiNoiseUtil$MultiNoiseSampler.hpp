// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$MULTINOISESAMPLER_HPP
#define NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$MULTINOISESAMPLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler
 * Remapped: def$f
 */
namespace MultiNoiseUtil$MultiNoiseSampler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("def$f", "net/minecraft/world/level/biome/Climate$Sampler", "net/minecraft/class_6544$class_6552", "net/minecraft/world/biome/source/util/MultiNoiseUtil$MultiNoiseSampler", "net/minecraft/src/C_182857_$C_182866_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#temperature
    static jobject get_field_temperature(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "temperature", "comp_364", "temperature", "f_207845_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#temperature
    static void set_field_temperature(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "temperature", "comp_364", "temperature", "f_207845_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#humidity
    static jobject get_field_humidity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "humidity", "comp_365", "humidity", "f_207846_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#humidity
    static void set_field_humidity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "humidity", "comp_365", "humidity", "f_207846_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#continentalness
    static jobject get_field_continentalness(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "continentalness", "comp_366", "continentalness", "f_207847_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#continentalness
    static void set_field_continentalness(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "continentalness", "comp_366", "continentalness", "f_207847_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#erosion
    static jobject get_field_erosion(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "erosion", "comp_367", "erosion", "f_207848_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#erosion
    static void set_field_erosion(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "erosion", "comp_367", "erosion", "f_207848_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#depth
    static jobject get_field_depth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "depth", "comp_368", "depth", "f_207849_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#depth
    static void set_field_depth(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "depth", "comp_368", "depth", "f_207849_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#weirdness
    static jobject get_field_weirdness(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "weirdness", "comp_369", "weirdness", "f_207850_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#weirdness
    static void set_field_weirdness(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "weirdness", "comp_369", "weirdness", "f_207850_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#spawnTarget
    static jobject get_field_spawnTarget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "spawnTarget", "comp_370", "spawnTarget", "f_207851_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.util.MultiNoiseUtil$MultiNoiseSampler#spawnTarget
    static void set_field_spawnTarget(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "spawnTarget", "comp_370", "spawnTarget", "f_207851_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_sample() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sample", "method_40444", "sample", "m_183445_"), "(III)Ldef$h;");
    }

    static jobject sample(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_sample();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_findBestSpawnPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findSpawnPosition", "method_39165", "findBestSpawnPosition", "m_183230_"), "()Ljd;");
    }

    static jobject findBestSpawnPosition(const jobject& obj) {
                
       const auto methodID = methodID_findBestSpawnPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__temperature() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "temperature", "comp_364", "temperature", "f_207845_"), "()Ldyr;");
    }

    static jobject _temperature(const jobject& obj) {
                
       const auto methodID = methodID__temperature();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__humidity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "humidity", "comp_365", "humidity", "f_207846_"), "()Ldyr;");
    }

    static jobject _humidity(const jobject& obj) {
                
       const auto methodID = methodID__humidity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__continentalness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "continentalness", "comp_366", "continentalness", "f_207847_"), "()Ldyr;");
    }

    static jobject _continentalness(const jobject& obj) {
                
       const auto methodID = methodID__continentalness();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__erosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "erosion", "comp_367", "erosion", "f_207848_"), "()Ldyr;");
    }

    static jobject _erosion(const jobject& obj) {
                
       const auto methodID = methodID__erosion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__depth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "depth", "comp_368", "depth", "f_207849_"), "()Ldyr;");
    }

    static jobject _depth(const jobject& obj) {
                
       const auto methodID = methodID__depth();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__weirdness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "weirdness", "comp_369", "weirdness", "f_207850_"), "()Ldyr;");
    }

    static jobject _weirdness(const jobject& obj) {
                
       const auto methodID = methodID__weirdness();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__spawnTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "spawnTarget", "comp_370", "spawnTarget", "f_207851_"), "()Ljava/util/List;");
    }

    static jobject _spawnTarget(const jobject& obj) {
                
       const auto methodID = methodID__spawnTarget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$MULTINOISESAMPLER_HPP