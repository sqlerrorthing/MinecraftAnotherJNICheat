// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$FITTESTPOSITIONFINDER$RESULT_HPP
#define NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$FITTESTPOSITIONFINDER$RESULT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.source.util.MultiNoiseUtil$FittestPositionFinder$Result
 * Remapped: def$g$a
 */
namespace MultiNoiseUtil$FittestPositionFinder$Result {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("def$g$a", "net/minecraft/world/level/biome/Climate$SpawnFinder$Result", "net/minecraft/class_6544$class_6729$class_6730", "net/minecraft/world/biome/source/util/MultiNoiseUtil$FittestPositionFinder$Result", "net/minecraft/src/C_182857_$C_182867_$C_182868_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.biome.source.util.MultiNoiseUtil$FittestPositionFinder$Result#location
    static jobject get_field_location(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "location", "comp_223", "location", "f_186992_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.util.MultiNoiseUtil$FittestPositionFinder$Result#location
    static void set_field_location(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "location", "comp_223", "location", "f_186992_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.source.util.MultiNoiseUtil$FittestPositionFinder$Result#fitness
    static jlong get_field_fitness(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "fitness", "comp_224", "fitness", "f_186993_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.source.util.MultiNoiseUtil$FittestPositionFinder$Result#fitness
    static void set_field_fitness(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "fitness", "comp_224", "fitness", "f_186993_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID__location() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "location", "comp_223", "location", "f_186992_"), "()Ljd;");
    }

    static jobject _location(const jobject& obj) {
                
       const auto methodID = methodID__location();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__fitness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "fitness", "comp_224", "fitness", "f_186993_"), "()J");
    }

    static jlong _fitness(const jobject& obj) {
                
       const auto methodID = methodID__fitness();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_SOURCE_UTIL_MULTINOISEUTIL$FITTESTPOSITIONFINDER$RESULT_HPP