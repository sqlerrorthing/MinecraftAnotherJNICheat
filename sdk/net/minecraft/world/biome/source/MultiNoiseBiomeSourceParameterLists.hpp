// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_SOURCE_MULTINOISEBIOMESOURCEPARAMETERLISTS_HPP
#define NET_MINECRAFT_WORLD_BIOME_SOURCE_MULTINOISEBIOMESOURCEPARAMETERLISTS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterLists
 * Remapped: del
 */
namespace MultiNoiseBiomeSourceParameterLists {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("del", "net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterLists", "net/minecraft/class_8198", "net/minecraft/world/biome/source/MultiNoiseBiomeSourceParameterLists", "net/minecraft/src/C_273806_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterLists#NETHER
    [[maybe_unused]] static jobject get_field_NETHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NETHER", "field_42991", "NETHER", "f_273830_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterLists#NETHER
    [[maybe_unused]] static void set_field_NETHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NETHER", "field_42991", "NETHER", "f_273830_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterLists#OVERWORLD
    [[maybe_unused]] static jobject get_field_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "OVERWORLD", "field_42992", "OVERWORLD", "f_273878_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.biome.source.MultiNoiseBiomeSourceParameterLists#OVERWORLD
    [[maybe_unused]] static void set_field_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "OVERWORLD", "field_42992", "OVERWORLD", "f_273878_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_bootstrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_49522", "bootstrap", "m_274553_"), "(Lqq;)V");
    }

    static void bootstrap(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_bootstrap();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_49521", "of", "m_274548_"), "(Ljava/lang/String;)Lakq;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_SOURCE_MULTINOISEBIOMESOURCEPARAMETERLISTS_HPP