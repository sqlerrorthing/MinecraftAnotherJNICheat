// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_OVERWORLDBIOMECREATOR_HPP
#define NET_MINECRAFT_WORLD_BIOME_OVERWORLDBIOMECREATOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.OverworldBiomeCreator
 * Remapped: rm
 */
namespace OverworldBiomeCreator {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("rm", "net/minecraft/data/worldgen/biome/OverworldBiomes", "net/minecraft/class_5478", "net/minecraft/world/biome/OverworldBiomeCreator", "net/minecraft/src/C_183084_"));
        }
        return cachedClass;
    };

    // getter for static protected field net.minecraft.world.biome.OverworldBiomeCreator#DEFAULT_WATER_COLOR
    [[maybe_unused]] static jint get_field_DEFAULT_WATER_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NORMAL_WATER_COLOR", "field_35340", "DEFAULT_WATER_COLOR", "f_194836_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.world.biome.OverworldBiomeCreator#DEFAULT_WATER_COLOR
    [[maybe_unused]] static void set_field_DEFAULT_WATER_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NORMAL_WATER_COLOR", "field_35340", "DEFAULT_WATER_COLOR", "f_194836_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.world.biome.OverworldBiomeCreator#DEFAULT_WATER_FOG_COLOR
    [[maybe_unused]] static jint get_field_DEFAULT_WATER_FOG_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NORMAL_WATER_FOG_COLOR", "field_35341", "DEFAULT_WATER_FOG_COLOR", "f_194837_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.world.biome.OverworldBiomeCreator#DEFAULT_WATER_FOG_COLOR
    [[maybe_unused]] static void set_field_DEFAULT_WATER_FOG_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NORMAL_WATER_FOG_COLOR", "field_35341", "DEFAULT_WATER_FOG_COLOR", "f_194837_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.biome.OverworldBiomeCreator#DEFAULT_FOG_COLOR
    [[maybe_unused]] static jint get_field_DEFAULT_FOG_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "OVERWORLD_FOG_COLOR", "field_35342", "DEFAULT_FOG_COLOR", "f_194838_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.OverworldBiomeCreator#DEFAULT_FOG_COLOR
    [[maybe_unused]] static void set_field_DEFAULT_FOG_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "OVERWORLD_FOG_COLOR", "field_35342", "DEFAULT_FOG_COLOR", "f_194838_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.biome.OverworldBiomeCreator#DEFAULT_MUSIC
    [[maybe_unused]] static jobject get_field_DEFAULT_MUSIC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NORMAL_MUSIC", "field_35436", "DEFAULT_MUSIC", "f_194839_"), "Lavm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.OverworldBiomeCreator#DEFAULT_MUSIC
    [[maybe_unused]] static void set_field_DEFAULT_MUSIC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NORMAL_MUSIC", "field_35436", "DEFAULT_MUSIC", "f_194839_"), "Lavm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.biome.OverworldBiomeCreator#SWAMP_SKELETON_WEIGHT
    [[maybe_unused]] static jint get_field_SWAMP_SKELETON_WEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SWAMP_SKELETON_WEIGHT", "field_51968", "SWAMP_SKELETON_WEIGHT", "f_337187_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.biome.OverworldBiomeCreator#SWAMP_SKELETON_WEIGHT
    [[maybe_unused]] static void set_field_SWAMP_SKELETON_WEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SWAMP_SKELETON_WEIGHT", "field_51968", "SWAMP_SKELETON_WEIGHT", "f_337187_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_getSkyColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateSkyColor", "method_30932", "getSkyColor", "m_194843_"), "(F)I");
    }

    static jint getSkyColor(const jfloat& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getSkyColor();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createBiome() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "biome", "method_39152", "createBiome", "m_264144_"), "(ZFFLdei$a;Lddx$a;Lavm;)Lddw;");
    }

    static jobject createBiome(const jboolean& arg0, const jfloat& arg1, const jfloat& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_createBiome();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID__createBiome() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "biome", "method_39151", "createBiome", "m_271953_"), "(ZFFIILjava/lang/Integer;Ljava/lang/Integer;Ldei$a;Lddx$a;Lavm;)Lddw;");
    }

    static jobject _createBiome(const jboolean& arg0, const jfloat& arg1, const jfloat& arg2, const jint& arg3, const jint& arg4, const jobject& arg5, const jobject& arg6, const jobject& arg7, const jobject& arg8, const jobject& arg9) {
       const auto clazz = self();
       const auto methodID = methodID__createBiome();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_addBasicFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "globalOverworldGeneration", "method_39153", "addBasicFeatures", "m_194869_"), "(Lddx$a;)V");
    }

    static void addBasicFeatures(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addBasicFeatures();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createOldGrowthTaiga() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "oldGrowthTaiga", "method_30687", "createOldGrowthTaiga", "m_194876_"), "(Ljn;Ljn;Z)Lddw;");
    }

    static jobject createOldGrowthTaiga(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createOldGrowthTaiga();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createSparseJungle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "sparseJungle", "method_30703", "createSparseJungle", "m_254954_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createSparseJungle(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createSparseJungle();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createJungle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "jungle", "method_30683", "createJungle", "m_255074_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createJungle(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createJungle();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createNormalBambooJungle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "bambooJungle", "method_30714", "createNormalBambooJungle", "m_255279_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createNormalBambooJungle(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createNormalBambooJungle();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createJungleFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "baseJungle", "method_30695", "createJungleFeatures", "m_284525_"), "(Ljn;Ljn;FZZZLdei$a;Lavm;)Lddw;");
    }

    static jobject createJungleFeatures(const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jboolean& arg3, const jboolean& arg4, const jboolean& arg5, const jobject& arg6, const jobject& arg7) {
       const auto clazz = self();
       const auto methodID = methodID_createJungleFeatures();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_createWindsweptHills() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "windsweptHills", "method_30690", "createWindsweptHills", "m_194886_"), "(Ljn;Ljn;Z)Lddw;");
    }

    static jobject createWindsweptHills(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createWindsweptHills();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createDesert() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "desert", "method_30698", "createDesert", "m_194902_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createDesert(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createDesert();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createPlains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "plains", "method_30701", "createPlains", "m_194881_"), "(Ljn;Ljn;ZZZ)Lddw;");
    }

    static jobject createPlains(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jboolean& arg3, const jboolean& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_createPlains();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_createMushroomFields() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "mushroomFields", "method_30684", "createMushroomFields", "m_255280_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createMushroomFields(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createMushroomFields();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createSavanna() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "savanna", "method_30694", "createSavanna", "m_194878_"), "(Ljn;Ljn;ZZ)Lddw;");
    }

    static jobject createSavanna(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createSavanna();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createBadlands() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "badlands", "method_30696", "createBadlands", "m_194896_"), "(Ljn;Ljn;Z)Lddw;");
    }

    static jobject createBadlands(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createBadlands();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createOcean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "baseOcean", "method_30692", "createOcean", "m_194871_"), "(Ldei$a;IILddx$a;)Lddw;");
    }

    static jobject createOcean(const jobject& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createOcean();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createOceanGenerationSettings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("s", "baseOceanGeneration", "method_31066", "createOceanGenerationSettings", "m_254986_"), "(Ljn;Ljn;)Lddx$a;");
    }

    static jobject createOceanGenerationSettings(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createOceanGenerationSettings();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createColdOcean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "coldOcean", "method_30702", "createColdOcean", "m_194899_"), "(Ljn;Ljn;Z)Lddw;");
    }

    static jobject createColdOcean(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createColdOcean();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createNormalOcean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "ocean", "method_30706", "createNormalOcean", "m_255326_"), "(Ljn;Ljn;Z)Lddw;");
    }

    static jobject createNormalOcean(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createNormalOcean();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createLukewarmOcean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "lukeWarmOcean", "method_30709", "createLukewarmOcean", "m_194905_"), "(Ljn;Ljn;Z)Lddw;");
    }

    static jobject createLukewarmOcean(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createLukewarmOcean();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createWarmOcean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "warmOcean", "method_30723", "createWarmOcean", "m_254955_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createWarmOcean(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createWarmOcean();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createFrozenOcean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "frozenOcean", "method_30712", "createFrozenOcean", "m_194908_"), "(Ljn;Ljn;Z)Lddw;");
    }

    static jobject createFrozenOcean(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createFrozenOcean();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createNormalForest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "forest", "method_30704", "createNormalForest", "m_194891_"), "(Ljn;Ljn;ZZZ)Lddw;");
    }

    static jobject createNormalForest(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jboolean& arg3, const jboolean& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_createNormalForest();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_createTaiga() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("h", "taiga", "method_30699", "createTaiga", "m_194911_"), "(Ljn;Ljn;Z)Lddw;");
    }

    static jobject createTaiga(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createTaiga();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createDarkForest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "darkForest", "method_30705", "createDarkForest", "m_194885_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createDarkForest(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createDarkForest();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createSwamp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("h", "swamp", "method_30708", "createSwamp", "m_194910_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createSwamp(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createSwamp();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createMangroveSwamp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("i", "mangroveSwamp", "method_43232", "createMangroveSwamp", "m_236670_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createMangroveSwamp(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createMangroveSwamp();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createRiver() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("i", "river", "method_30686", "createRiver", "m_194914_"), "(Ljn;Ljn;Z)Lddw;");
    }

    static jobject createRiver(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createRiver();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createBeach() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "beach", "method_30685", "createBeach", "m_194888_"), "(Ljn;Ljn;ZZ)Lddw;");
    }

    static jobject createBeach(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createBeach();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createTheVoid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("j", "theVoid", "method_30726", "createTheVoid", "m_255251_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createTheVoid(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createTheVoid();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createMeadow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("j", "meadowOrCherryGrove", "method_38574", "createMeadow", "m_272060_"), "(Ljn;Ljn;Z)Lddw;");
    }

    static jobject createMeadow(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createMeadow();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createFrozenPeaks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("k", "frozenPeaks", "method_38575", "createFrozenPeaks", "m_194918_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createFrozenPeaks(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createFrozenPeaks();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createJaggedPeaks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("l", "jaggedPeaks", "method_38576", "createJaggedPeaks", "m_194917_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createJaggedPeaks(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createJaggedPeaks();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createStonyPeaks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("m", "stonyPeaks", "method_38577", "createStonyPeaks", "m_255416_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createStonyPeaks(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createStonyPeaks();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createSnowySlopes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("n", "snowySlopes", "method_38578", "createSnowySlopes", "m_194920_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createSnowySlopes(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createSnowySlopes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createGrove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("o", "grove", "method_38579", "createGrove", "m_194921_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createGrove(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createGrove();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createLushCaves() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("p", "lushCaves", "method_34674", "createLushCaves", "m_194922_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createLushCaves(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createLushCaves();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createDripstoneCaves() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("q", "dripstoneCaves", "method_33132", "createDripstoneCaves", "m_194895_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createDripstoneCaves(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createDripstoneCaves();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createDeepDark() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("r", "deepDark", "method_42061", "createDeepDark", "m_236671_"), "(Ljn;Ljn;)Lddw;");
    }

    static jobject createDeepDark(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createDeepDark();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_OVERWORLDBIOMECREATOR_HPP