// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_BIOMEEFFECTS$BUILDER_HPP
#define NET_MINECRAFT_WORLD_BIOME_BIOMEEFFECTS$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.BiomeEffects$Builder
 * Remapped: dec$a
 */
namespace BiomeEffects$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dec$a", "net/minecraft/world/level/biome/BiomeSpecialEffects$Builder", "net/minecraft/class_4763$class_4764", "net/minecraft/world/biome/BiomeEffects$Builder", "net/minecraft/src/C_1645_$C_1647_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects$Builder#fogColor
    static jobject get_field_fogColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "fogColor", "field_22071", "fogColor", "f_48005_"), "Ljava/util/OptionalInt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects$Builder#fogColor
    static void set_field_fogColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "fogColor", "field_22071", "fogColor", "f_48005_"), "Ljava/util/OptionalInt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects$Builder#waterColor
    static jobject get_field_waterColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "waterColor", "field_22072", "waterColor", "f_48006_"), "Ljava/util/OptionalInt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects$Builder#waterColor
    static void set_field_waterColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "waterColor", "field_22072", "waterColor", "f_48006_"), "Ljava/util/OptionalInt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects$Builder#waterFogColor
    static jobject get_field_waterFogColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "waterFogColor", "field_22073", "waterFogColor", "f_48007_"), "Ljava/util/OptionalInt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects$Builder#waterFogColor
    static void set_field_waterFogColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "waterFogColor", "field_22073", "waterFogColor", "f_48007_"), "Ljava/util/OptionalInt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects$Builder#skyColor
    static jobject get_field_skyColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "skyColor", "field_26422", "skyColor", "f_48008_"), "Ljava/util/OptionalInt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects$Builder#skyColor
    static void set_field_skyColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "skyColor", "field_26422", "skyColor", "f_48008_"), "Ljava/util/OptionalInt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects$Builder#foliageColor
    static jobject get_field_foliageColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "foliageColorOverride", "field_26423", "foliageColor", "f_48009_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects$Builder#foliageColor
    static void set_field_foliageColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "foliageColorOverride", "field_26423", "foliageColor", "f_48009_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects$Builder#grassColor
    static jobject get_field_grassColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "grassColorOverride", "field_26424", "grassColor", "f_48010_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects$Builder#grassColor
    static void set_field_grassColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "grassColorOverride", "field_26424", "grassColor", "f_48010_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects$Builder#grassColorModifier
    static jobject get_field_grassColorModifier(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "grassColorModifier", "field_26425", "grassColorModifier", "f_48011_"), "Ldec$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects$Builder#grassColorModifier
    static void set_field_grassColorModifier(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "grassColorModifier", "field_26425", "grassColorModifier", "f_48011_"), "Ldec$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects$Builder#particleConfig
    static jobject get_field_particleConfig(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "ambientParticle", "field_22074", "particleConfig", "f_48012_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects$Builder#particleConfig
    static void set_field_particleConfig(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "ambientParticle", "field_22074", "particleConfig", "f_48012_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects$Builder#loopSound
    static jobject get_field_loopSound(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "ambientLoopSoundEvent", "field_22494", "loopSound", "f_48013_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects$Builder#loopSound
    static void set_field_loopSound(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "ambientLoopSoundEvent", "field_22494", "loopSound", "f_48013_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects$Builder#moodSound
    static jobject get_field_moodSound(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "ambientMoodSettings", "field_22495", "moodSound", "f_48014_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects$Builder#moodSound
    static void set_field_moodSound(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "ambientMoodSettings", "field_22495", "moodSound", "f_48014_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects$Builder#additionsSound
    static jobject get_field_additionsSound(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "ambientAdditionsSettings", "field_22496", "additionsSound", "f_48015_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects$Builder#additionsSound
    static void set_field_additionsSound(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "ambientAdditionsSettings", "field_22496", "additionsSound", "f_48015_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects$Builder#musicSound
    static jobject get_field_musicSound(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "backgroundMusic", "field_24114", "musicSound", "f_48016_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects$Builder#musicSound
    static void set_field_musicSound(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "backgroundMusic", "field_24114", "musicSound", "f_48016_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID__fogColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fogColor", "method_24392", "fogColor", "m_48019_"), "(I)Ldec$a;");
    }

    static jobject _fogColor(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__fogColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__waterColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "waterColor", "method_24395", "waterColor", "m_48034_"), "(I)Ldec$a;");
    }

    static jobject _waterColor(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__waterColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__waterFogColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "waterFogColor", "method_24397", "waterFogColor", "m_48037_"), "(I)Ldec$a;");
    }

    static jobject _waterFogColor(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__waterFogColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__skyColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "skyColor", "method_30820", "skyColor", "m_48040_"), "(I)Ldec$a;");
    }

    static jobject _skyColor(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__skyColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__foliageColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "foliageColorOverride", "method_30821", "foliageColor", "m_48043_"), "(I)Ldec$a;");
    }

    static jobject _foliageColor(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__foliageColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__grassColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "grassColorOverride", "method_30822", "grassColor", "m_48045_"), "(I)Ldec$a;");
    }

    static jobject _grassColor(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__grassColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__grassColorModifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "grassColorModifier", "method_30818", "grassColorModifier", "m_48031_"), "(Ldec$b;)Ldec$a;");
    }

    static jobject _grassColorModifier(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__grassColorModifier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__particleConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "ambientParticle", "method_24393", "particleConfig", "m_48029_"), "(Lddv;)Ldec$a;");
    }

    static jobject _particleConfig(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__particleConfig();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__loopSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "ambientLoopSound", "method_24942", "loopSound", "m_48023_"), "(Ljm;)Ldec$a;");
    }

    static jobject _loopSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__loopSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__moodSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "ambientMoodSound", "method_24943", "moodSound", "m_48027_"), "(Lddu;)Ldec$a;");
    }

    static jobject _moodSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__moodSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__additionsSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "ambientAdditionsSound", "method_24944", "additionsSound", "m_48025_"), "(Lddt;)Ldec$a;");
    }

    static jobject _additionsSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__additionsSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_music() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "backgroundMusic", "method_27346", "music", "m_48021_"), "(Lavm;)Ldec$a;");
    }

    static jobject music(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_music();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "build", "method_24391", "build", "m_48018_"), "()Ldec;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_BIOMEEFFECTS$BUILDER_HPP