// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_BIOMEPARTICLECONFIG_HPP
#define NET_MINECRAFT_WORLD_BIOME_BIOMEPARTICLECONFIG_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.BiomeParticleConfig
 * Remapped: ddv
 */
namespace BiomeParticleConfig {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ddv", "net/minecraft/world/level/biome/AmbientParticleSettings", "net/minecraft/class_4761", "net/minecraft/world/biome/BiomeParticleConfig", "net/minecraft/src/C_1628_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.biome.BiomeParticleConfig#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_24675", "CODEC", "f_47412_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.biome.BiomeParticleConfig#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_24675", "CODEC", "f_47412_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeParticleConfig#particle
    static jobject get_field_particle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "options", "field_24676", "particle", "f_47413_"), "Llk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeParticleConfig#particle
    static void set_field_particle(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "options", "field_24676", "particle", "f_47413_"), "Llk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeParticleConfig#probability
    static jfloat get_field_probability(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "probability", "field_22035", "probability", "f_47414_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeParticleConfig#probability
    static void set_field_probability(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "probability", "field_22035", "probability", "f_47414_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_getParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOptions", "method_24369", "getParticle", "m_47419_"), "()Llk;");
    }

    static jobject getParticle(const jobject& obj) {
                
       const auto methodID = methodID_getParticle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldAddParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canSpawn", "method_24370", "shouldAddParticle", "m_220527_"), "(Layw;)Z");
    }

    static jboolean shouldAddParticle(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldAddParticle();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_BIOMEPARTICLECONFIG_HPP