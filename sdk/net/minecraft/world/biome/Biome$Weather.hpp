// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_BIOME$WEATHER_HPP
#define NET_MINECRAFT_WORLD_BIOME_BIOME$WEATHER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.Biome$Weather
 * Remapped: ddw$b
 */
namespace Biome$Weather {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ddw$b", "net/minecraft/world/level/biome/Biome$ClimateSettings", "net/minecraft/class_1959$class_5482", "net/minecraft/world/biome/Biome$Weather", "net/minecraft/src/C_1629_$C_1634_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.biome.Biome$Weather#hasPrecipitation
    static jboolean get_field_hasPrecipitation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "hasPrecipitation", "comp_1187", "hasPrecipitation", "f_263819_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.Biome$Weather#hasPrecipitation
    static void set_field_hasPrecipitation(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "hasPrecipitation", "comp_1187", "hasPrecipitation", "f_263819_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.biome.Biome$Weather#temperature
    static jfloat get_field_temperature(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "temperature", "comp_844", "temperature", "f_47681_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.biome.Biome$Weather#temperature
    static void set_field_temperature(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "temperature", "comp_844", "temperature", "f_47681_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.biome.Biome$Weather#temperatureModifier
    static jobject get_field_temperatureModifier(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "temperatureModifier", "comp_845", "temperatureModifier", "f_47682_"), "Lddw$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.biome.Biome$Weather#temperatureModifier
    static void set_field_temperatureModifier(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "temperatureModifier", "comp_845", "temperatureModifier", "f_47682_"), "Lddw$d;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.biome.Biome$Weather#downfall
    static jfloat get_field_downfall(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "downfall", "comp_846", "downfall", "f_47683_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.biome.Biome$Weather#downfall
    static void set_field_downfall(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "downfall", "comp_846", "downfall", "f_47683_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.world.biome.Biome$Weather#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_26398", "CODEC", "f_47679_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.biome.Biome$Weather#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_26398", "CODEC", "f_47679_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID__hasPrecipitation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasPrecipitation", "comp_1187", "hasPrecipitation", "f_263819_"), "()Z");
    }

    static jboolean _hasPrecipitation(const jobject& obj) {
                
       const auto methodID = methodID__hasPrecipitation();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__temperature() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "temperature", "comp_844", "temperature", "f_47681_"), "()F");
    }

    static jfloat _temperature(const jobject& obj) {
                
       const auto methodID = methodID__temperature();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__temperatureModifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "temperatureModifier", "comp_845", "temperatureModifier", "f_47682_"), "()Lddw$d;");
    }

    static jobject _temperatureModifier(const jobject& obj) {
                
       const auto methodID = methodID__temperatureModifier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__downfall() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "downfall", "comp_846", "downfall", "f_47683_"), "()F");
    }

    static jfloat _downfall(const jobject& obj) {
                
       const auto methodID = methodID__downfall();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_BIOME$WEATHER_HPP