// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BIOME_BIOMEEFFECTS_HPP
#define NET_MINECRAFT_WORLD_BIOME_BIOMEEFFECTS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.biome.BiomeEffects
 * Remapped: dec
 */
namespace BiomeEffects {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dec", "net/minecraft/world/level/biome/BiomeSpecialEffects", "net/minecraft/class_4763", "net/minecraft/world/biome/BiomeEffects", "net/minecraft/src/C_1645_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.biome.BiomeEffects#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_24714", "CODEC", "f_47926_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.biome.BiomeEffects#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_24714", "CODEC", "f_47926_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects#fogColor
    static jint get_field_fogColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "fogColor", "field_22067", "fogColor", "f_47927_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects#fogColor
    static void set_field_fogColor(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "fogColor", "field_22067", "fogColor", "f_47927_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects#waterColor
    static jint get_field_waterColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "waterColor", "field_22068", "waterColor", "f_47928_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects#waterColor
    static void set_field_waterColor(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "waterColor", "field_22068", "waterColor", "f_47928_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects#waterFogColor
    static jint get_field_waterFogColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "waterFogColor", "field_22069", "waterFogColor", "f_47929_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects#waterFogColor
    static void set_field_waterFogColor(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "waterFogColor", "field_22069", "waterFogColor", "f_47929_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects#skyColor
    static jint get_field_skyColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "skyColor", "field_26418", "skyColor", "f_47930_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects#skyColor
    static void set_field_skyColor(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "skyColor", "field_26418", "skyColor", "f_47930_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects#foliageColor
    static jobject get_field_foliageColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "foliageColorOverride", "field_26419", "foliageColor", "f_47931_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects#foliageColor
    static void set_field_foliageColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "foliageColorOverride", "field_26419", "foliageColor", "f_47931_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects#grassColor
    static jobject get_field_grassColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "grassColorOverride", "field_26420", "grassColor", "f_47932_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects#grassColor
    static void set_field_grassColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "grassColorOverride", "field_26420", "grassColor", "f_47932_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects#grassColorModifier
    static jobject get_field_grassColorModifier(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "grassColorModifier", "field_26421", "grassColorModifier", "f_47933_"), "Ldec$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects#grassColorModifier
    static void set_field_grassColorModifier(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "grassColorModifier", "field_26421", "grassColorModifier", "f_47933_"), "Ldec$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects#particleConfig
    static jobject get_field_particleConfig(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "ambientParticleSettings", "field_22070", "particleConfig", "f_47934_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects#particleConfig
    static void set_field_particleConfig(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "ambientParticleSettings", "field_22070", "particleConfig", "f_47934_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects#loopSound
    static jobject get_field_loopSound(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "ambientLoopSoundEvent", "field_22491", "loopSound", "f_47935_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects#loopSound
    static void set_field_loopSound(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "ambientLoopSoundEvent", "field_22491", "loopSound", "f_47935_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects#moodSound
    static jobject get_field_moodSound(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "ambientMoodSettings", "field_22492", "moodSound", "f_47936_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects#moodSound
    static void set_field_moodSound(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "ambientMoodSettings", "field_22492", "moodSound", "f_47936_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects#additionsSound
    static jobject get_field_additionsSound(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "ambientAdditionsSettings", "field_22493", "additionsSound", "f_47937_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects#additionsSound
    static void set_field_additionsSound(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "ambientAdditionsSettings", "field_22493", "additionsSound", "f_47937_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.biome.BiomeEffects#music
    static jobject get_field_music(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "backgroundMusic", "field_24113", "music", "f_47938_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.biome.BiomeEffects#music
    static void set_field_music(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "backgroundMusic", "field_24113", "music", "f_47938_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getFogColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getFogColor", "method_24387", "getFogColor", "m_47967_"), "()I");
    }

    static jint getFogColor(const jobject& obj) {
                
       const auto methodID = methodID_getFogColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWaterColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getWaterColor", "method_24388", "getWaterColor", "m_47972_"), "()I");
    }

    static jint getWaterColor(const jobject& obj) {
                
       const auto methodID = methodID_getWaterColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWaterFogColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getWaterFogColor", "method_24389", "getWaterFogColor", "m_47975_"), "()I");
    }

    static jint getWaterFogColor(const jobject& obj) {
                
       const auto methodID = methodID_getWaterFogColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSkyColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getSkyColor", "method_30810", "getSkyColor", "m_47978_"), "()I");
    }

    static jint getSkyColor(const jobject& obj) {
                
       const auto methodID = methodID_getSkyColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFoliageColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getFoliageColorOverride", "method_30811", "getFoliageColor", "m_47981_"), "()Ljava/util/Optional;");
    }

    static jobject getFoliageColor(const jobject& obj) {
                
       const auto methodID = methodID_getFoliageColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGrassColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getGrassColorOverride", "method_30812", "getGrassColor", "m_47984_"), "()Ljava/util/Optional;");
    }

    static jobject getGrassColor(const jobject& obj) {
                
       const auto methodID = methodID_getGrassColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGrassColorModifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getGrassColorModifier", "method_30814", "getGrassColorModifier", "m_47987_"), "()Ldec$b;");
    }

    static jobject getGrassColorModifier(const jobject& obj) {
                
       const auto methodID = methodID_getGrassColorModifier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getParticleConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getAmbientParticleSettings", "method_24390", "getParticleConfig", "m_47990_"), "()Ljava/util/Optional;");
    }

    static jobject getParticleConfig(const jobject& obj) {
                
       const auto methodID = methodID_getParticleConfig();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLoopSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getAmbientLoopSoundEvent", "method_24939", "getLoopSound", "m_47993_"), "()Ljava/util/Optional;");
    }

    static jobject getLoopSound(const jobject& obj) {
                
       const auto methodID = methodID_getLoopSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMoodSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getAmbientMoodSettings", "method_24940", "getMoodSound", "m_47996_"), "()Ljava/util/Optional;");
    }

    static jobject getMoodSound(const jobject& obj) {
                
       const auto methodID = methodID_getMoodSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAdditionsSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getAmbientAdditionsSettings", "method_24941", "getAdditionsSound", "m_47999_"), "()Ljava/util/Optional;");
    }

    static jobject getAdditionsSound(const jobject& obj) {
                
       const auto methodID = methodID_getAdditionsSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMusic() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getBackgroundMusic", "method_27345", "getMusic", "m_48002_"), "()Ljava/util/Optional;");
    }

    static jobject getMusic(const jobject& obj) {
                
       const auto methodID = methodID_getMusic();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BIOME_BIOMEEFFECTS_HPP