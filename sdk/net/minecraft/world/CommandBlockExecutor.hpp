// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_COMMANDBLOCKEXECUTOR_HPP
#define NET_MINECRAFT_WORLD_COMMANDBLOCKEXECUTOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.CommandBlockExecutor
 * Remapped: dbx
 */
namespace CommandBlockExecutor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dbx", "net/minecraft/world/level/BaseCommandBlock", "net/minecraft/class_1918", "net/minecraft/world/CommandBlockExecutor", "net/minecraft/src/C_1553_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.CommandBlockExecutor#DATE_FORMAT
    [[maybe_unused]] static jobject get_field_DATE_FORMAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TIME_FORMAT", "field_9169", "DATE_FORMAT", "f_45397_"), "Ljava/text/SimpleDateFormat;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.CommandBlockExecutor#DATE_FORMAT
    [[maybe_unused]] static void set_field_DATE_FORMAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TIME_FORMAT", "field_9169", "DATE_FORMAT", "f_45397_"), "Ljava/text/SimpleDateFormat;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.CommandBlockExecutor#DEFAULT_NAME
    [[maybe_unused]] static jobject get_field_DEFAULT_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT_NAME", "field_21515", "DEFAULT_NAME", "f_45398_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.CommandBlockExecutor#DEFAULT_NAME
    [[maybe_unused]] static void set_field_DEFAULT_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT_NAME", "field_21515", "DEFAULT_NAME", "f_45398_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.CommandBlockExecutor#lastExecution
    static jlong get_field_lastExecution(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "lastExecution", "field_9167", "lastExecution", "f_45399_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.CommandBlockExecutor#lastExecution
    static void set_field_lastExecution(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "lastExecution", "field_9167", "lastExecution", "f_45399_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.CommandBlockExecutor#updateLastExecution
    static jboolean get_field_updateLastExecution(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "updateLastExecution", "field_9166", "updateLastExecution", "f_45400_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.CommandBlockExecutor#updateLastExecution
    static void set_field_updateLastExecution(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "updateLastExecution", "field_9166", "updateLastExecution", "f_45400_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.CommandBlockExecutor#successCount
    static jint get_field_successCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "successCount", "field_9163", "successCount", "f_45401_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.CommandBlockExecutor#successCount
    static void set_field_successCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "successCount", "field_9163", "successCount", "f_45401_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.CommandBlockExecutor#trackOutput
    static jboolean get_field_trackOutput(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "trackOutput", "field_9164", "trackOutput", "f_45402_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.CommandBlockExecutor#trackOutput
    static void set_field_trackOutput(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "trackOutput", "field_9164", "trackOutput", "f_45402_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.CommandBlockExecutor#lastOutput
    static jobject get_field_lastOutput(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "lastOutput", "field_9165", "lastOutput", "f_45403_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.CommandBlockExecutor#lastOutput
    static void set_field_lastOutput(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "lastOutput", "field_9165", "lastOutput", "f_45403_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.CommandBlockExecutor#command
    static jobject get_field_command(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "command", "field_9168", "command", "f_45404_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.CommandBlockExecutor#command
    static void set_field_command(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "command", "field_9168", "command", "f_45404_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.CommandBlockExecutor#customName
    static jobject get_field_customName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "customName", "field_9162", "customName", "f_314290_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.CommandBlockExecutor#customName
    static void set_field_customName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "customName", "field_9162", "customName", "f_314290_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getSuccessCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getSuccessCount", "method_8304", "getSuccessCount", "m_45436_"), "()I");
    }

    static jint getSuccessCount(const jobject& obj) {
                
       const auto methodID = methodID_getSuccessCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSuccessCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSuccessCount", "method_8298", "setSuccessCount", "m_45410_"), "(I)V");
    }

    static void setSuccessCount(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setSuccessCount();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLastOutput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getLastOutput", "method_8292", "getLastOutput", "m_45437_"), "()Lwz;");
    }

    static jobject getLastOutput(const jobject& obj) {
                
       const auto methodID = methodID_getLastOutput();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "save", "method_8297", "writeNbt", "m_45421_"), "(Lub;Ljo$a;)Lub;");
    }

    static jobject writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "load", "method_8305", "readNbt", "m_45431_"), "(Lub;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setCommand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCommand", "method_8286", "setCommand", "m_6590_"), "(Ljava/lang/String;)V");
    }

    static void setCommand(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCommand();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCommand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getCommand", "method_8289", "getCommand", "m_45438_"), "()Ljava/lang/String;");
    }

    static jobject getCommand(const jobject& obj) {
                
       const auto methodID = methodID_getCommand();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_execute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "performCommand", "method_8301", "execute", "m_45414_"), "(Ldcw;)Z");
    }

    static jboolean execute(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_execute();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCustomName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getName", "method_8299", "getCustomName", "m_45439_"), "()Lwz;");
    }

    static jobject getCustomName(const jobject& obj) {
                
       const auto methodID = methodID_getCustomName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCustomNameNullable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getCustomName", "method_57558", "getCustomNameNullable", "m_323895_"), "()Lwz;");
    }

    static jobject getCustomNameNullable(const jobject& obj) {
                
       const auto methodID = methodID_getCustomNameNullable();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCustomName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setCustomName", "method_8290", "setCustomName", "m_321484_"), "(Lwz;)V");
    }

    static void setCustomName(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCustomName();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendSystemMessage", "method_43496", "sendMessage", "m_213846_"), "(Lwz;)V");
    }

    static void sendMessage(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getLevel", "method_8293", "getWorld", "m_5991_"), "()Laqu;");
    }

    static jobject getWorld(const jobject& obj) {
                
       const auto methodID = methodID_getWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_markDirty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "onUpdated", "method_8295", "markDirty", "m_7368_"), "()V");
    }

    static void markDirty(const jobject& obj) {
                
       const auto methodID = methodID_markDirty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setLastOutput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setLastOutput", "method_8291", "setLastOutput", "m_45433_"), "(Lwz;)V");
    }

    static void setLastOutput(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setLastOutput();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setTrackOutput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setTrackOutput", "method_8287", "setTrackOutput", "m_45428_"), "(Z)V");
    }

    static void setTrackOutput(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setTrackOutput();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isTrackingOutput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "isTrackOutput", "method_8296", "isTrackingOutput", "m_45440_"), "()Z");
    }

    static jboolean isTrackingOutput(const jobject& obj) {
                
       const auto methodID = methodID_isTrackingOutput();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_interact() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "usedBy", "method_8288", "interact", "m_45412_"), "(Lcmx;)Lbqr;");
    }

    static jobject interact(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_interact();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getPosition", "method_8300", "getPos", "m_6607_"), "()Lexc;");
    }

    static jobject getPos(const jobject& obj) {
                
       const auto methodID = methodID_getPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "createCommandSourceStack", "method_8303", "getSource", "m_6712_"), "()Let;");
    }

    static jobject getSource(const jobject& obj) {
                
       const auto methodID = methodID_getSource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldReceiveFeedback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k_", "acceptsSuccess", "method_9200", "shouldReceiveFeedback", "m_6999_"), "()Z");
    }

    static jboolean shouldReceiveFeedback(const jobject& obj) {
                
       const auto methodID = methodID_shouldReceiveFeedback();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldTrackOutput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w_", "acceptsFailure", "method_9202", "shouldTrackOutput", "m_7028_"), "()Z");
    }

    static jboolean shouldTrackOutput(const jobject& obj) {
                
       const auto methodID = methodID_shouldTrackOutput();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldBroadcastConsoleToOps() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("M_", "shouldInformAdmins", "method_9201", "shouldBroadcastConsoleToOps", "m_6102_"), "()Z");
    }

    static jboolean shouldBroadcastConsoleToOps(const jobject& obj) {
                
       const auto methodID = methodID_shouldBroadcastConsoleToOps();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEditable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "isValid", "method_52175", "isEditable", "m_288209_"), "()Z");
    }

    static jboolean isEditable(const jobject& obj) {
                
       const auto methodID = methodID_isEditable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_COMMANDBLOCKEXECUTOR_HPP