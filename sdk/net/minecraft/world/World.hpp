// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_WORLD_HPP
#define NET_MINECRAFT_WORLD_WORLD_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.World
 * Remapped: dcw
 */
namespace World {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dcw", "net/minecraft/world/level/Level", "net/minecraft/class_1937", "net/minecraft/world/World", "net/minecraft/src/C_1596_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.World#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RESOURCE_KEY_CODEC", "field_25178", "CODEC", "f_46427_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.World#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RESOURCE_KEY_CODEC", "field_25178", "CODEC", "f_46427_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.World#OVERWORLD
    [[maybe_unused]] static jobject get_field_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "OVERWORLD", "field_25179", "OVERWORLD", "f_46428_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.World#OVERWORLD
    [[maybe_unused]] static void set_field_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "OVERWORLD", "field_25179", "OVERWORLD", "f_46428_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.World#NETHER
    [[maybe_unused]] static jobject get_field_NETHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "NETHER", "field_25180", "NETHER", "f_46429_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.World#NETHER
    [[maybe_unused]] static void set_field_NETHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "NETHER", "field_25180", "NETHER", "f_46429_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.World#END
    [[maybe_unused]] static jobject get_field_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "END", "field_25181", "END", "f_46430_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.World#END
    [[maybe_unused]] static void set_field_END(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "END", "field_25181", "END", "f_46430_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.World#HORIZONTAL_LIMIT
    [[maybe_unused]] static jint get_field_HORIZONTAL_LIMIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "MAX_LEVEL_SIZE", "field_30965", "HORIZONTAL_LIMIT", "f_151505_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.World#HORIZONTAL_LIMIT
    [[maybe_unused]] static void set_field_HORIZONTAL_LIMIT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "MAX_LEVEL_SIZE", "field_30965", "HORIZONTAL_LIMIT", "f_151505_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.World#MAX_UPDATE_DEPTH
    [[maybe_unused]] static jint get_field_MAX_UPDATE_DEPTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "LONG_PARTICLE_CLIP_RANGE", "field_30966", "MAX_UPDATE_DEPTH", "f_151506_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.World#MAX_UPDATE_DEPTH
    [[maybe_unused]] static void set_field_MAX_UPDATE_DEPTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "LONG_PARTICLE_CLIP_RANGE", "field_30966", "MAX_UPDATE_DEPTH", "f_151506_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.World#field_30967
    [[maybe_unused]] static jint get_field_field_30967() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SHORT_PARTICLE_CLIP_RANGE", "field_30967", "field_30967", "f_151507_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.World#field_30967
    [[maybe_unused]] static void set_field_field_30967(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SHORT_PARTICLE_CLIP_RANGE", "field_30967", "field_30967", "f_151507_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.World#field_30968
    [[maybe_unused]] static jint get_field_field_30968() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "MAX_BRIGHTNESS", "field_30968", "field_30968", "f_151508_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.World#field_30968
    [[maybe_unused]] static void set_field_field_30968(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "MAX_BRIGHTNESS", "field_30968", "field_30968", "f_151508_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.World#field_30969
    [[maybe_unused]] static jint get_field_field_30969() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "TICKS_PER_DAY", "field_30969", "field_30969", "f_151509_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.World#field_30969
    [[maybe_unused]] static void set_field_field_30969(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "TICKS_PER_DAY", "field_30969", "field_30969", "f_151509_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.World#MAX_Y
    [[maybe_unused]] static jint get_field_MAX_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MAX_ENTITY_SPAWN_Y", "field_30970", "MAX_Y", "f_151510_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.World#MAX_Y
    [[maybe_unused]] static void set_field_MAX_Y(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MAX_ENTITY_SPAWN_Y", "field_30970", "MAX_Y", "f_151510_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.World#MIN_Y
    [[maybe_unused]] static jint get_field_MIN_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "MIN_ENTITY_SPAWN_Y", "field_30971", "MIN_Y", "f_151511_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.World#MIN_Y
    [[maybe_unused]] static void set_field_MIN_Y(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "MIN_ENTITY_SPAWN_Y", "field_30971", "MIN_Y", "f_151511_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.world.World#blockEntityTickers
    static jobject get_field_blockEntityTickers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "blockEntityTickers", "field_27082", "blockEntityTickers", "f_151512_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.world.World#blockEntityTickers
    static void set_field_blockEntityTickers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "blockEntityTickers", "field_27082", "blockEntityTickers", "f_151512_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.world.World#neighborUpdater
    static jobject get_field_neighborUpdater(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "neighborUpdater", "field_38226", "neighborUpdater", "f_220350_"), "Leqi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.world.World#neighborUpdater
    static void set_field_neighborUpdater(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "neighborUpdater", "field_38226", "neighborUpdater", "f_220350_"), "Leqi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#pendingBlockEntityTickers
    static jobject get_field_pendingBlockEntityTickers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pendingBlockEntityTickers", "field_27081", "pendingBlockEntityTickers", "f_151503_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#pendingBlockEntityTickers
    static void set_field_pendingBlockEntityTickers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pendingBlockEntityTickers", "field_27081", "pendingBlockEntityTickers", "f_151503_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#iteratingTickingBlockEntities
    static jboolean get_field_iteratingTickingBlockEntities(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "tickingBlockEntities", "field_9249", "iteratingTickingBlockEntities", "f_151504_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#iteratingTickingBlockEntities
    static void set_field_iteratingTickingBlockEntities(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "tickingBlockEntities", "field_9249", "iteratingTickingBlockEntities", "f_151504_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#thread
    static jobject get_field_thread(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "thread", "field_17086", "thread", "f_46423_"), "Ljava/lang/Thread;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#thread
    static void set_field_thread(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "thread", "field_17086", "thread", "f_46423_"), "Ljava/lang/Thread;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#debugWorld
    static jboolean get_field_debugWorld(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "isDebug", "field_24496", "debugWorld", "f_46424_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#debugWorld
    static void set_field_debugWorld(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "isDebug", "field_24496", "debugWorld", "f_46424_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#ambientDarkness
    static jint get_field_ambientDarkness(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "skyDarken", "field_9226", "ambientDarkness", "f_46425_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#ambientDarkness
    static void set_field_ambientDarkness(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "skyDarken", "field_9226", "ambientDarkness", "f_46425_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.world.World#lcgBlockSeed
    static jint get_field_lcgBlockSeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "randValue", "field_9256", "lcgBlockSeed", "f_46435_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.world.World#lcgBlockSeed
    static void set_field_lcgBlockSeed(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "randValue", "field_9256", "lcgBlockSeed", "f_46435_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.world.World#lcgBlockSeedIncrement
    static jint get_field_lcgBlockSeedIncrement(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "addend", "field_9238", "lcgBlockSeedIncrement", "f_46436_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.world.World#lcgBlockSeedIncrement
    static void set_field_lcgBlockSeedIncrement(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "addend", "field_9238", "lcgBlockSeedIncrement", "f_46436_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.world.World#rainGradientPrev
    static jfloat get_field_rainGradientPrev(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "oRainLevel", "field_9253", "rainGradientPrev", "f_46437_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.world.World#rainGradientPrev
    static void set_field_rainGradientPrev(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "oRainLevel", "field_9253", "rainGradientPrev", "f_46437_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.world.World#rainGradient
    static jfloat get_field_rainGradient(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "rainLevel", "field_9235", "rainGradient", "f_46438_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.world.World#rainGradient
    static void set_field_rainGradient(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "rainLevel", "field_9235", "rainGradient", "f_46438_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.world.World#thunderGradientPrev
    static jfloat get_field_thunderGradientPrev(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "oThunderLevel", "field_9251", "thunderGradientPrev", "f_46439_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.world.World#thunderGradientPrev
    static void set_field_thunderGradientPrev(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "oThunderLevel", "field_9251", "thunderGradientPrev", "f_46439_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.world.World#thunderGradient
    static jfloat get_field_thunderGradient(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "thunderLevel", "field_9234", "thunderGradient", "f_46440_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.world.World#thunderGradient
    static void set_field_thunderGradient(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "thunderLevel", "field_9234", "thunderGradient", "f_46440_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.World#random
    static jobject get_field_random(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "random", "field_9229", "random", "f_46441_"), "Layw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.World#random
    static void set_field_random(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "random", "field_9229", "random", "f_46441_"), "Layw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#threadSafeRandom
    static jobject get_field_threadSafeRandom(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "threadSafeRandom", "field_38861", "threadSafeRandom", "f_220348_"), "Layw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#threadSafeRandom
    static void set_field_threadSafeRandom(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "threadSafeRandom", "field_38861", "threadSafeRandom", "f_220348_"), "Layw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#dimensionEntry
    static jobject get_field_dimensionEntry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "dimensionTypeRegistration", "field_36402", "dimensionEntry", "f_204147_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#dimensionEntry
    static void set_field_dimensionEntry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "dimensionTypeRegistration", "field_36402", "dimensionEntry", "f_204147_"), "Ljm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.world.World#properties
    static jobject get_field_properties(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "levelData", "field_9232", "properties", "f_46442_"), "Lerm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.world.World#properties
    static void set_field_properties(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "levelData", "field_9232", "properties", "f_46442_"), "Lerm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#profiler
    static jobject get_field_profiler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "profiler", "field_16316", "profiler", "f_46446_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#profiler
    static void set_field_profiler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "profiler", "field_16316", "profiler", "f_46446_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.World#isClient
    static jboolean get_field_isClient(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "isClientSide", "field_9236", "isClient", "f_46443_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.World#isClient
    static void set_field_isClient(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "isClientSide", "field_9236", "isClient", "f_46443_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#border
    static jobject get_field_border(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "worldBorder", "field_9223", "border", "f_46447_"), "Ldut;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#border
    static void set_field_border(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "worldBorder", "field_9223", "border", "f_46447_"), "Ldut;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#biomeAccess
    static jobject get_field_biomeAccess(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "biomeManager", "field_20639", "biomeAccess", "f_46420_"), "Lddy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#biomeAccess
    static void set_field_biomeAccess(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "biomeManager", "field_20639", "biomeAccess", "f_46420_"), "Lddy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#registryKey
    static jobject get_field_registryKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "dimension", "field_25176", "registryKey", "f_46421_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#registryKey
    static void set_field_registryKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "dimension", "field_25176", "registryKey", "f_46421_"), "Lakq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#registryManager
    static jobject get_field_registryManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "registryAccess", "field_42475", "registryManager", "f_268710_"), "Lka;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#registryManager
    static void set_field_registryManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "registryAccess", "field_42475", "registryManager", "f_268710_"), "Lka;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#damageSources
    static jobject get_field_damageSources(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "damageSources", "field_42476", "damageSources", "f_268497_"), "Lbrl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#damageSources
    static void set_field_damageSources(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "damageSources", "field_42476", "damageSources", "f_268497_"), "Lbrl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.World#tickOrder
    static jlong get_field_tickOrder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "subTickCount", "field_35455", "tickOrder", "f_186455_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.World#tickOrder
    static void set_field_tickOrder(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "subTickCount", "field_35455", "tickOrder", "f_186455_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID__isClient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x_", "isClientSide", "method_8608", "isClient", "m_5776_"), "()Z");
    }

    static jboolean _isClient(const jobject& obj) {
                
       const auto methodID = methodID__isClient();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getServer", "method_8503", "getServer", "m_7654_"), "()Lnet/minecraft/server/MinecraftServer;");
    }

    static jobject getServer(const jobject& obj) {
                
       const auto methodID = methodID_getServer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInBuildLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "isInWorldBounds", "method_24794", "isInBuildLimit", "m_46739_"), "(Ljd;)Z");
    }

    static jboolean isInBuildLimit(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isInBuildLimit();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("l", "isInSpawnableBounds", "method_25953", "isValid", "m_46741_"), "(Ljd;)Z");
    }

    static jboolean isValid(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isValid();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isValidHorizontally() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "isInWorldBoundsHorizontal", "method_8558", "isValidHorizontally", "m_46457_"), "(Ljd;)Z");
    }

    static jboolean isValidHorizontally(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isValidHorizontally();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isInvalidVertically() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isOutsideSpawnableHeight", "method_25952", "isInvalidVertically", "m_46724_"), "(I)Z");
    }

    static jboolean isInvalidVertically(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isInvalidVertically();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getWorldChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getChunkAt", "method_8500", "getWorldChunk", "m_46745_"), "(Ljd;)Ldvi;");
    }

    static jobject getWorldChunk(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getWorldChunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getChunk", "method_8497", "getChunk", "m_6325_"), "(II)Ldvi;");
    }

    static jobject getChunk(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_getChunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getChunk", "method_8402", "getChunk", "m_6522_"), "(IILdvz;Z)Lduy;");
    }

    static jobject _getChunk(const jobject& obj, const jint& arg0, const jint& arg1, const jobject& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID__getChunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_setBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlock", "method_8652", "setBlockState", "m_7731_"), "(Ljd;Ldtc;I)Z");
    }

    static jboolean setBlockState(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_setBlockState();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__setBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlock", "method_30092", "setBlockState", "m_6933_"), "(Ljd;Ldtc;II)Z");
    }

    static jboolean _setBlockState(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID__setBlockState();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onBlockChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onBlockStateChange", "method_19282", "onBlockChanged", "m_6559_"), "(Ljd;Ldtc;Ldtc;)V");
    }

    static void onBlockChanged(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onBlockChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_removeBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeBlock", "method_8650", "removeBlock", "m_7471_"), "(Ljd;Z)Z");
    }

    static jboolean removeBlock(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_removeBlock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_breakBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "destroyBlock", "method_30093", "breakBlock", "m_7740_"), "(Ljd;ZLbsr;I)Z");
    }

    static jboolean breakBlock(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_breakBlock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_addBlockBreakParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addDestroyBlockEffect", "method_31595", "addBlockBreakParticles", "m_142052_"), "(Ljd;Ldtc;)V");
    }

    static void addBlockBreakParticles(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addBlockBreakParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___setBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setBlockAndUpdate", "method_8501", "setBlockState", "m_46597_"), "(Ljd;Ldtc;)Z");
    }

    static jboolean __setBlockState(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID___setBlockState();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateListeners() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendBlockUpdated", "method_8413", "updateListeners", "m_7260_"), "(Ljd;Ldtc;Ldtc;I)V");
    }

    static void updateListeners(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_updateListeners();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_scheduleBlockRerenderIfNeeded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setBlocksDirty", "method_16109", "scheduleBlockRerenderIfNeeded", "m_6550_"), "(Ljd;Ldtc;Ldtc;)V");
    }

    static void scheduleBlockRerenderIfNeeded(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_scheduleBlockRerenderIfNeeded();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_updateNeighborsAlways() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateNeighborsAt", "method_8452", "updateNeighborsAlways", "m_46672_"), "(Ljd;Ldfy;)V");
    }

    static void updateNeighborsAlways(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_updateNeighborsAlways();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateNeighborsExcept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateNeighborsAtExceptFromFacing", "method_8508", "updateNeighborsExcept", "m_46590_"), "(Ljd;Ldfy;Lji;)V");
    }

    static void updateNeighborsExcept(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateNeighborsExcept();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_updateNeighbor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "neighborChanged", "method_8492", "updateNeighbor", "m_46586_"), "(Ljd;Ldfy;Ljd;)V");
    }

    static void updateNeighbor(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateNeighbor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__updateNeighbor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "neighborChanged", "method_41410", "updateNeighbor", "m_213960_"), "(Ldtc;Ljd;Ldfy;Ljd;Z)V");
    }

    static void _updateNeighbor(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jboolean& arg4) {
                
       const auto methodID = methodID__updateNeighbor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_replaceWithStateForNeighborUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "neighborShapeChanged", "method_42308", "replaceWithStateForNeighborUpdate", "m_213683_"), "(Lji;Ldtc;Ljd;Ljd;II)V");
    }

    static void replaceWithStateForNeighborUpdate(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jint& arg4, const jint& arg5) {
                
       const auto methodID = methodID_replaceWithStateForNeighborUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getTopY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getHeight", "method_8624", "getTopY", "m_6924_"), "(Ldyy$a;II)I");
    }

    static jint getTopY(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_getTopY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getLightingProvider() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y_", "getLightEngine", "method_22336", "getLightingProvider", "m_5518_"), "()Leot;");
    }

    static jobject getLightingProvider(const jobject& obj) {
                
       const auto methodID = methodID_getLightingProvider();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "getBlockState", "method_8320", "getBlockState", "m_8055_"), "(Ljd;)Ldtc;");
    }

    static jobject getBlockState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBlockState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFluidState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b_", "getFluidState", "method_8316", "getFluidState", "m_6425_"), "(Ljd;)Lepe;");
    }

    static jobject getFluidState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFluidState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isDay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R", "isDay", "method_8530", "isDay", "m_46461_"), "()Z");
    }

    static jboolean isDay(const jobject& obj) {
                
       const auto methodID = methodID_isDay();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isNight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("S", "isNight", "method_23886", "isNight", "m_46462_"), "()Z");
    }

    static jboolean isNight(const jobject& obj) {
                
       const auto methodID = methodID_isNight();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_playSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playSound", "method_45445", "playSound", "m_245803_"), "(Lbsr;Ljd;Lavo;Lavq;FF)V");
    }

    static void playSound(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jfloat& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID_playSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID__playSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playSound", "method_8396", "playSound", "m_5594_"), "(Lcmx;Ljd;Lavo;Lavq;FF)V");
    }

    static void _playSound(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jfloat& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID__playSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID___playSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playSeededSound", "method_8465", "playSound", "m_262808_"), "(Lcmx;DDDLjm;Lavq;FFJ)V");
    }

    static void __playSound(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jobject& arg4, const jobject& arg5, const jfloat& arg6, const jfloat& arg7, const jlong& arg8) {
                
       const auto methodID = methodID___playSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID____playSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playSeededSound", "method_47967", "playSound", "m_214150_"), "(Lcmx;DDDLavo;Lavq;FFJ)V");
    }

    static void ___playSound(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jobject& arg4, const jobject& arg5, const jfloat& arg6, const jfloat& arg7, const jlong& arg8) {
                
       const auto methodID = methodID____playSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_playSoundFromEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playSeededSound", "method_8449", "playSoundFromEntity", "m_213890_"), "(Lcmx;Lbsr;Ljm;Lavq;FFJ)V");
    }

    static void playSoundFromEntity(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jfloat& arg4, const jfloat& arg5, const jlong& arg6) {
                
       const auto methodID = methodID_playSoundFromEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_____playSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playSound", "method_54762", "playSound", "m_307318_"), "(Lcmx;DDDLavo;Lavq;)V");
    }

    static void ____playSound(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_____playSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID______playSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playSound", "method_43128", "playSound", "m_6263_"), "(Lcmx;DDDLavo;Lavq;FF)V");
    }

    static void _____playSound(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jobject& arg4, const jobject& arg5, const jfloat& arg6, const jfloat& arg7) {
                
       const auto methodID = methodID______playSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_______playSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playSound", "method_60511", "playSound", "m_339760_"), "(Lcmx;DDDLjm;Lavq;FF)V");
    }

    static void ______playSound(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jobject& arg4, const jobject& arg5, const jfloat& arg6, const jfloat& arg7) {
                
       const auto methodID = methodID_______playSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID__playSoundFromEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playSound", "method_43129", "playSoundFromEntity", "m_6269_"), "(Lcmx;Lbsr;Lavo;Lavq;FF)V");
    }

    static void _playSoundFromEntity(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jfloat& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID__playSoundFromEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_playSoundAtBlockCenter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playLocalSound", "method_45446", "playSoundAtBlockCenter", "m_245747_"), "(Ljd;Lavo;Lavq;FFZ)V");
    }

    static void playSoundAtBlockCenter(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3, const jfloat& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID_playSoundAtBlockCenter();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID___playSoundFromEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playLocalSound", "method_55116", "playSoundFromEntity", "m_307553_"), "(Lbsr;Lavo;Lavq;FF)V");
    }

    static void __playSoundFromEntity(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3, const jfloat& arg4) {
                
       const auto methodID = methodID___playSoundFromEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID________playSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playLocalSound", "method_8486", "playSound", "m_7785_"), "(DDDLavo;Lavq;FFZ)V");
    }

    static void _______playSound(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jobject& arg3, const jobject& arg4, const jfloat& arg5, const jfloat& arg6, const jboolean& arg7) {
                
       const auto methodID = methodID________playSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_addParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addParticle", "method_8406", "addParticle", "m_7106_"), "(Llk;DDDDDD)V");
    }

    static void addParticle(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6) {
                
       const auto methodID = methodID_addParticle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID__addParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addParticle", "method_8466", "addParticle", "m_6493_"), "(Llk;ZDDDDDD)V");
    }

    static void _addParticle(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6, const jdouble& arg7) {
                
       const auto methodID = methodID__addParticle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_addImportantParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAlwaysVisibleParticle", "method_8494", "addImportantParticle", "m_7107_"), "(Llk;DDDDDD)V");
    }

    static void addImportantParticle(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6) {
                
       const auto methodID = methodID_addImportantParticle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID__addImportantParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAlwaysVisibleParticle", "method_17452", "addImportantParticle", "m_6485_"), "(Llk;ZDDDDDD)V");
    }

    static void _addImportantParticle(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6, const jdouble& arg7) {
                
       const auto methodID = methodID__addImportantParticle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_getSkyAngleRadians() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSunAngle", "method_8442", "getSkyAngleRadians", "m_46490_"), "(F)F");
    }

    static jfloat getSkyAngleRadians(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getSkyAngleRadians();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addBlockEntityTicker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addBlockEntityTicker", "method_31594", "addBlockEntityTicker", "m_151525_"), "(Ldsa;)V");
    }

    static void addBlockEntityTicker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addBlockEntityTicker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickBlockEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("T", "tickBlockEntities", "method_18471", "tickBlockEntities", "m_46463_"), "()V");
    }

    static void tickBlockEntities(const jobject& obj) {
                
       const auto methodID = methodID_tickBlockEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "guardEntityTick", "method_18472", "tickEntity", "m_46653_"), "(Ljava/util/function/Consumer;Lbsr;)V");
    }

    static void tickEntity(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_tickEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldUpdatePostDeath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "shouldTickDeath", "method_38989", "shouldUpdatePostDeath", "m_183599_"), "(Lbsr;)Z");
    }

    static jboolean shouldUpdatePostDeath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldUpdatePostDeath();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldTickBlocksInChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldTickBlocksAt", "method_39425", "shouldTickBlocksInChunk", "m_183438_"), "(J)Z");
    }

    static jboolean shouldTickBlocksInChunk(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_shouldTickBlocksInChunk();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldTickBlockPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "shouldTickBlocksAt", "method_41411", "shouldTickBlockPos", "m_220393_"), "(Ljd;)Z");
    }

    static jboolean shouldTickBlockPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldTickBlockPos();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "explode", "method_8437", "createExplosion", "m_254849_"), "(Lbsr;DDDFLdcw$a;)Ldco;");
    }

    static jobject createExplosion(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jfloat& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_createExplosion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID__createExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "explode", "method_8537", "createExplosion", "m_255391_"), "(Lbsr;DDDFZLdcw$a;)Ldco;");
    }

    static jobject _createExplosion(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jfloat& arg4, const jboolean& arg5, const jobject& arg6) {
                
       const auto methodID = methodID__createExplosion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID___createExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "explode", "method_46407", "createExplosion", "m_254951_"), "(Lbsr;Lbrk;Ldcp;Lexc;FZLdcw$a;)Ldco;");
    }

    static jobject __createExplosion(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jfloat& arg4, const jboolean& arg5, const jobject& arg6) {
                
       const auto methodID = methodID___createExplosion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID____createExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "explode", "method_55117", "createExplosion", "m_254877_"), "(Lbsr;Lbrk;Ldcp;DDDFZLdcw$a;)Ldco;");
    }

    static jobject ___createExplosion(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jfloat& arg6, const jboolean& arg7, const jobject& arg8) {
                
       const auto methodID = methodID____createExplosion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_____createExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "explode", "method_8454", "createExplosion", "m_255039_"), "(Lbsr;Lbrk;Ldcp;DDDFZLdcw$a;Llk;Llk;Ljm;)Ldco;");
    }

    static jobject ____createExplosion(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jfloat& arg6, const jboolean& arg7, const jobject& arg8, const jobject& arg9, const jobject& arg10, const jobject& arg11) {
                
       const auto methodID = methodID_____createExplosion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
    };
    
    static jmethodID methodID______createExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "explode", "method_46668", "createExplosion", "m_307157_"), "(Lbsr;Lbrk;Ldcp;DDDFZLdcw$a;ZLlk;Llk;Ljm;)Ldco;");
    }

    static jobject _____createExplosion(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jfloat& arg6, const jboolean& arg7, const jobject& arg8, const jboolean& arg9, const jobject& arg10, const jobject& arg11, const jobject& arg12) {
                
       const auto methodID = methodID______createExplosion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12);
    };
    
    static jmethodID methodID_getDestructionType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDestroyType", "method_46669", "getDestructionType", "m_255157_"), "(Ldcs$e;)Ldco$a;");
    }

    static jobject getDestructionType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDestructionType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_asString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "gatherChunkSourceStats", "method_31419", "asString", "m_46464_"), "()Ljava/lang/String;");
    }

    static jobject asString(const jobject& obj) {
                
       const auto methodID = methodID_asString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c_", "getBlockEntity", "method_8321", "getBlockEntity", "m_7702_"), "(Ljd;)Ldqh;");
    }

    static jobject getBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBlockEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlockEntity", "method_8438", "addBlockEntity", "m_151523_"), "(Ldqh;)V");
    }

    static void addBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addBlockEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "removeBlockEntity", "method_8544", "removeBlockEntity", "m_46747_"), "(Ljd;)V");
    }

    static void removeBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeBlockEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canSetBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "isLoaded", "method_8477", "canSetBlock", "m_46749_"), "(Ljd;)Z");
    }

    static jboolean canSetBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canSetBlock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isDirectionSolid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadedAndEntityCanStandOnFace", "method_24368", "isDirectionSolid", "m_46578_"), "(Ljd;Lbsr;Lji;)Z");
    }

    static jboolean isDirectionSolid(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_isDirectionSolid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isTopSolid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadedAndEntityCanStandOn", "method_8515", "isTopSolid", "m_46575_"), "(Ljd;Lbsr;)Z");
    }

    static jboolean isTopSolid(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isTopSolid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_calculateAmbientDarkness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("U", "updateSkyBrightness", "method_8533", "calculateAmbientDarkness", "m_46465_"), "()V");
    }

    static void calculateAmbientDarkness(const jobject& obj) {
                
       const auto methodID = methodID_calculateAmbientDarkness();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setMobSpawnOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setSpawnSettings", "method_8424", "setMobSpawnOptions", "m_46703_"), "(ZZ)V");
    }

    static void setMobSpawnOptions(const jobject& obj, const jboolean& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setMobSpawnOptions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSpawnPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("V", "getSharedSpawnPos", "method_43126", "getSpawnPos", "m_220360_"), "()Ljd;");
    }

    static jobject getSpawnPos(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpawnAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("W", "getSharedSpawnAngle", "method_43127", "getSpawnAngle", "m_220361_"), "()F");
    }

    static jfloat getSpawnAngle(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnAngle();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_initWeatherGradients() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("X", "prepareWeather", "method_8543", "initWeatherGradients", "m_46466_"), "()V");
    }

    static void initWeatherGradients(const jobject& obj) {
                
       const auto methodID = methodID_initWeatherGradients();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChunkAsView() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getChunkForCollisions", "method_22338", "getChunkAsView", "m_7925_"), "(II)Ldcc;");
    }

    static jobject getChunkAsView(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_getChunkAsView();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getOtherEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntities", "method_8333", "getOtherEntities", "m_6249_"), "(Lbsr;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;");
    }

    static jobject getOtherEntities(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getOtherEntities();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getEntitiesByType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntities", "method_18023", "getEntitiesByType", "m_142425_"), "(Ldxn;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;");
    }

    static jobject getEntitiesByType(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getEntitiesByType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_collectEntitiesByType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntities", "method_47574", "collectEntitiesByType", "m_261153_"), "(Ldxn;Lewx;Ljava/util/function/Predicate;Ljava/util/List;)V");
    }

    static void collectEntitiesByType(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_collectEntitiesByType();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__collectEntitiesByType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntities", "method_47575", "collectEntitiesByType", "m_260826_"), "(Ldxn;Lewx;Ljava/util/function/Predicate;Ljava/util/List;I)V");
    }

    static void _collectEntitiesByType(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jint& arg4) {
                
       const auto methodID = methodID__collectEntitiesByType();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getEntityById() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntity", "method_8469", "getEntityById", "m_6815_"), "(I)Lbsr;");
    }

    static jobject getEntityById(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getEntityById();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_markDirty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "blockEntityChanged", "method_8524", "markDirty", "m_151543_"), "(Ljd;)V");
    }

    static void markDirty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_markDirty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSeaLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z_", "getSeaLevel", "method_8615", "getSeaLevel", "m_5736_"), "()I");
    }

    static jint getSeaLevel(const jobject& obj) {
                
       const auto methodID = methodID_getSeaLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_disconnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Y", "disconnect", "method_8525", "disconnect", "m_7462_"), "()V");
    }

    static void disconnect(const jobject& obj) {
                
       const auto methodID = methodID_disconnect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Z", "getGameTime", "method_8510", "getTime", "m_46467_"), "()J");
    }

    static jlong getTime(const jobject& obj) {
                
       const auto methodID = methodID_getTime();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTimeOfDay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "getDayTime", "method_8532", "getTimeOfDay", "m_46468_"), "()J");
    }

    static jlong getTimeOfDay(const jobject& obj) {
                
       const auto methodID = methodID_getTimeOfDay();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_canPlayerModifyAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mayInteract", "method_8505", "canPlayerModifyAt", "m_7966_"), "(Lcmx;Ljd;)Z");
    }

    static jboolean canPlayerModifyAt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canPlayerModifyAt();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_sendEntityStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "broadcastEntityEvent", "method_8421", "sendEntityStatus", "m_7605_"), "(Lbsr;B)V");
    }

    static void sendEntityStatus(const jobject& obj, const jobject& arg0, const jbyte& arg1) {
                
       const auto methodID = methodID_sendEntityStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_sendEntityDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "broadcastDamageEvent", "method_48760", "sendEntityDamage", "m_269196_"), "(Lbsr;Lbrk;)V");
    }

    static void sendEntityDamage(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_sendEntityDamage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addSyncedBlockEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "blockEvent", "method_8427", "addSyncedBlockEvent", "m_7696_"), "(Ljd;Ldfy;II)V");
    }

    static void addSyncedBlockEvent(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_addSyncedBlockEvent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getLevelProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A_", "getLevelData", "method_8401", "getLevelProperties", "m_6106_"), "()Lerb;");
    }

    static jobject getLevelProperties(const jobject& obj) {
                
       const auto methodID = methodID_getLevelProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGameRules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "getGameRules", "method_8450", "getGameRules", "m_46469_"), "()Ldcs;");
    }

    static jobject getGameRules(const jobject& obj) {
                
       const auto methodID = methodID_getGameRules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTickManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "tickRateManager", "method_54719", "getTickManager", "m_304826_"), "()Lbrc;");
    }

    static jobject getTickManager(const jobject& obj) {
                
       const auto methodID = methodID_getTickManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getThunderGradient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getThunderLevel", "method_8478", "getThunderGradient", "m_46661_"), "(F)F");
    }

    static jfloat getThunderGradient(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getThunderGradient();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setThunderGradient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setThunderLevel", "method_8496", "setThunderGradient", "m_46707_"), "(F)V");
    }

    static void setThunderGradient(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setThunderGradient();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRainGradient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getRainLevel", "method_8430", "getRainGradient", "m_46722_"), "(F)F");
    }

    static jfloat getRainGradient(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getRainGradient();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setRainGradient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setRainLevel", "method_8519", "setRainGradient", "m_46734_"), "(F)V");
    }

    static void setRainGradient(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setRainGradient();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isThundering() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ac", "isThundering", "method_8546", "isThundering", "m_46470_"), "()Z");
    }

    static jboolean isThundering(const jobject& obj) {
                
       const auto methodID = methodID_isThundering();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isRaining() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ad", "isRaining", "method_8419", "isRaining", "m_46471_"), "()Z");
    }

    static jboolean isRaining(const jobject& obj) {
                
       const auto methodID = methodID_isRaining();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasRain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "isRainingAt", "method_8520", "hasRain", "m_46758_"), "(Ljd;)Z");
    }

    static jboolean hasRain(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_hasRain();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMapState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMapData", "method_17891", "getMapState", "m_7489_"), "(Leqr;)Leqt;");
    }

    static jobject getMapState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getMapState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_putMapState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setMapData", "method_17890", "putMapState", "m_142325_"), "(Leqr;Leqt;)V");
    }

    static void putMapState(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_putMapState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_increaseAndGetMapId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getFreeMapId", "method_17889", "increaseAndGetMapId", "m_7354_"), "()Leqr;");
    }

    static jobject increaseAndGetMapId(const jobject& obj) {
                
       const auto methodID = methodID_increaseAndGetMapId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_syncGlobalEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "globalLevelEvent", "method_8474", "syncGlobalEvent", "m_6798_"), "(ILjd;I)V");
    }

    static void syncGlobalEvent(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_syncGlobalEvent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addDetailsToCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillReportDetails", "method_8538", "addDetailsToCrashReport", "m_6026_"), "(Lo;)Lp;");
    }

    static jobject addDetailsToCrashReport(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addDetailsToCrashReport();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setBlockBreakingInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "destroyBlockProgress", "method_8517", "setBlockBreakingInfo", "m_6801_"), "(ILjd;I)V");
    }

    static void setBlockBreakingInfo(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_setBlockBreakingInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addFireworkParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createFireworks", "method_8547", "addFireworkParticle", "m_7228_"), "(DDDDDDLjava/util/List;)V");
    }

    static void addFireworkParticle(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jobject& arg6) {
                
       const auto methodID = methodID_addFireworkParticle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_getScoreboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("M", "getScoreboard", "method_8428", "getScoreboard", "m_6188_"), "()Leyg;");
    }

    static jobject getScoreboard(const jobject& obj) {
                
       const auto methodID = methodID_getScoreboard();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateComparators() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "updateNeighbourForOutputSignal", "method_8455", "updateComparators", "m_46717_"), "(Ljd;Ldfy;)V");
    }

    static void updateComparators(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_updateComparators();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLocalDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d_", "getCurrentDifficultyAt", "method_8404", "getLocalDifficulty", "m_6436_"), "(Ljd;)Lbqp;");
    }

    static jobject getLocalDifficulty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getLocalDifficulty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAmbientDarkness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B_", "getSkyDarken", "method_8594", "getAmbientDarkness", "m_7445_"), "()I");
    }

    static jint getAmbientDarkness(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientDarkness();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setLightningTicksLeft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setSkyFlashTime", "method_8509", "setLightningTicksLeft", "m_6580_"), "(I)V");
    }

    static void setLightningTicksLeft(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setLightningTicksLeft();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWorldBorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C_", "getWorldBorder", "method_8621", "getWorldBorder", "m_6857_"), "()Ldut;");
    }

    static jobject getWorldBorder(const jobject& obj) {
                
       const auto methodID = methodID_getWorldBorder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendPacketToServer", "method_8522", "sendPacket", "m_5503_"), "(Lzg;)V");
    }

    static void sendPacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendPacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDimension() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D_", "dimensionType", "method_8597", "getDimension", "m_6042_"), "()Ldwy;");
    }

    static jobject getDimension(const jobject& obj) {
                
       const auto methodID = methodID_getDimension();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDimensionEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ae", "dimensionTypeRegistration", "method_40134", "getDimensionEntry", "m_204156_"), "()Ljm;");
    }

    static jobject getDimensionEntry(const jobject& obj) {
                
       const auto methodID = methodID_getDimensionEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRegistryKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("af", "dimension", "method_27983", "getRegistryKey", "m_46472_"), "()Lakq;");
    }

    static jobject getRegistryKey(const jobject& obj) {
                
       const auto methodID = methodID_getRegistryKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRandom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E_", "getRandom", "method_8409", "getRandom", "m_213780_"), "()Layw;");
    }

    static jobject getRandom(const jobject& obj) {
                
       const auto methodID = methodID_getRandom();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_testBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isStateAtPosition", "method_16358", "testBlockState", "m_7433_"), "(Ljd;Ljava/util/function/Predicate;)Z");
    }

    static jboolean testBlockState(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_testBlockState();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_testFluidState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isFluidAtPosition", "method_35237", "testFluidState", "m_142433_"), "(Ljd;Ljava/util/function/Predicate;)Z");
    }

    static jboolean testFluidState(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_testFluidState();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getRecipeManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "getRecipeManager", "method_8433", "getRecipeManager", "m_7465_"), "()Lczd;");
    }

    static jobject getRecipeManager(const jobject& obj) {
                
       const auto methodID = methodID_getRecipeManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRandomPosInChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlockRandomPos", "method_8536", "getRandomPosInChunk", "m_46496_"), "(IIII)Ljd;");
    }

    static jobject getRandomPosInChunk(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_getRandomPosInChunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isSavingDisabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "noSave", "method_8458", "isSavingDisabled", "m_7441_"), "()Z");
    }

    static jboolean isSavingDisabled(const jobject& obj) {
                
       const auto methodID = methodID_isSavingDisabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getProfiler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ag", "getProfiler", "method_16107", "getProfiler", "m_46473_"), "()Lbnf;");
    }

    static jobject getProfiler(const jobject& obj) {
                
       const auto methodID = methodID_getProfiler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getProfilerSupplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ah", "getProfilerSupplier", "method_24367", "getProfilerSupplier", "m_46658_"), "()Ljava/util/function/Supplier;");
    }

    static jobject getProfilerSupplier(const jobject& obj) {
                
       const auto methodID = methodID_getProfilerSupplier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBiomeAccess() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F_", "getBiomeManager", "method_22385", "getBiomeAccess", "m_7062_"), "()Lddy;");
    }

    static jobject getBiomeAccess(const jobject& obj) {
                
       const auto methodID = methodID_getBiomeAccess();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDebugWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ai", "isDebug", "method_27982", "isDebugWorld", "m_46659_"), "()Z");
    }

    static jboolean isDebugWorld(const jobject& obj) {
                
       const auto methodID = methodID_isDebugWorld();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntityLookup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "getEntities", "method_31592", "getEntityLookup", "m_142646_"), "()Ldxp;");
    }

    static jobject getEntityLookup(const jobject& obj) {
                
       const auto methodID = methodID_getEntityLookup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTickOrder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G_", "nextSubTickCount", "method_39224", "getTickOrder", "m_183596_"), "()J");
    }

    static jlong getTickOrder(const jobject& obj) {
                
       const auto methodID = methodID_getTickOrder();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRegistryManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H_", "registryAccess", "method_30349", "getRegistryManager", "m_9598_"), "()Lka;");
    }

    static jobject getRegistryManager(const jobject& obj) {
                
       const auto methodID = methodID_getRegistryManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDamageSources() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aj", "damageSources", "method_48963", "getDamageSources", "m_269111_"), "()Lbrl;");
    }

    static jobject getDamageSources(const jobject& obj) {
                
       const auto methodID = methodID_getDamageSources();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBrewingRecipeRegistry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "potionBrewing", "method_59547", "getBrewingRecipeRegistry", "m_319308_"), "()Lcwt;");
    }

    static jobject getBrewingRecipeRegistry(const jobject& obj) {
                
       const auto methodID = methodID_getBrewingRecipeRegistry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_WORLD_HPP