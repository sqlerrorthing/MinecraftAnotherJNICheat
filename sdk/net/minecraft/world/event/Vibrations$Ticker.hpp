// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_EVENT_VIBRATIONS$TICKER_HPP
#define NET_MINECRAFT_WORLD_EVENT_VIBRATIONS$TICKER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.event.Vibrations$Ticker
 * Remapped: dyi$c
 */
namespace Vibrations$Ticker {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dyi$c", "net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Ticker", "net/minecraft/class_8514$class_8517", "net/minecraft/world/event/Vibrations$Ticker", "net/minecraft/src/C_279518_$C_279503_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_51406", "tick", "m_280259_"), "(Ldcw;Ldyi$a;Ldyi$d;)V");
    }

    static void tick(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_tryListen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "trySelectAndScheduleVibration", "method_51404", "tryListen", "m_280634_"), "(Laqu;Ldyi$a;Ldyi$d;)V");
    }

    static void tryListen(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_tryListen();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_spawnVibrationParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "tryReloadVibrationParticle", "method_51409", "spawnVibrationParticle", "m_280404_"), "(Laqu;Ldyi$a;Ldyi$d;)V");
    }

    static void spawnVibrationParticle(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_spawnVibrationParticle();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_accept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "receiveVibration", "method_51405", "accept", "m_280174_"), "(Laqu;Ldyi$a;Ldyi$d;Ldyg;)Z");
    }

    static jboolean accept(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_accept();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_areChunksTickingAround() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "areAdjacentChunksTicking", "method_51407", "areChunksTickingAround", "m_280446_"), "(Ldcw;Ljd;)Z");
    }

    static jboolean areChunksTickingAround(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_areChunksTickingAround();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_EVENT_VIBRATIONS$TICKER_HPP