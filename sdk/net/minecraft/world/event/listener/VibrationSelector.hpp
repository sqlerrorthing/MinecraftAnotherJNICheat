// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_EVENT_LISTENER_VIBRATIONSELECTOR_HPP
#define NET_MINECRAFT_WORLD_EVENT_LISTENER_VIBRATIONSELECTOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.event.listener.VibrationSelector
 * Remapped: dyh
 */
namespace VibrationSelector {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dyh", "net/minecraft/world/level/gameevent/vibrations/VibrationSelector", "net/minecraft/class_7722", "net/minecraft/world/event/listener/VibrationSelector", "net/minecraft/src/C_243431_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.event.listener.VibrationSelector#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_40359", "CODEC", "f_244309_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.event.listener.VibrationSelector#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_40359", "CODEC", "f_244309_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.event.listener.VibrationSelector#current
    static jobject get_field_current(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "currentVibrationData", "field_40360", "current", "f_244532_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.event.listener.VibrationSelector#current
    static void set_field_current(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "currentVibrationData", "field_40360", "current", "f_244532_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_tryAccept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addCandidate", "method_45505", "tryAccept", "m_247691_"), "(Ldyg;J)V");
    }

    static void tryAccept(const jobject& obj, const jobject& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_tryAccept();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldSelect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "shouldReplaceVibration", "method_45507", "shouldSelect", "m_247012_"), "(Ldyg;J)Z");
    }

    static jboolean shouldSelect(const jobject& obj, const jobject& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_shouldSelect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getVibrationToTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "chosenCandidate", "method_45502", "getVibrationToTick", "m_245156_"), "(J)Ljava/util/Optional;");
    }

    static jobject getVibrationToTick(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_getVibrationToTick();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startOver", "method_45501", "clear", "m_246080_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_EVENT_LISTENER_VIBRATIONSELECTOR_HPP