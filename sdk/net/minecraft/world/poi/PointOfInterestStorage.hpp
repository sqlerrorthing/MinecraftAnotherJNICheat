// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_POI_POINTOFINTERESTSTORAGE_HPP
#define NET_MINECRAFT_WORLD_POI_POINTOFINTERESTSTORAGE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.poi.PointOfInterestStorage
 * Remapped: ces
 */
namespace PointOfInterestStorage {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ces", "net/minecraft/world/entity/ai/village/poi/PoiManager", "net/minecraft/class_4153", "net/minecraft/world/poi/PointOfInterestStorage", "net/minecraft/src/C_787_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestStorage#field_30265
    [[maybe_unused]] static jint get_field_field_30265() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_VILLAGE_DISTANCE", "field_30265", "field_30265", "f_148565_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestStorage#field_30265
    [[maybe_unused]] static void set_field_field_30265(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_VILLAGE_DISTANCE", "field_30265", "field_30265", "f_148565_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestStorage#field_30266
    [[maybe_unused]] static jint get_field_field_30266() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "VILLAGE_SECTION_SIZE", "field_30266", "field_30266", "f_148566_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestStorage#field_30266
    [[maybe_unused]] static void set_field_field_30266(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "VILLAGE_SECTION_SIZE", "field_30266", "field_30266", "f_148566_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.poi.PointOfInterestStorage#pointOfInterestDistanceTracker
    static jobject get_field_pointOfInterestDistanceTracker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "distanceTracker", "field_18484", "pointOfInterestDistanceTracker", "f_27029_"), "Lces$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.poi.PointOfInterestStorage#pointOfInterestDistanceTracker
    static void set_field_pointOfInterestDistanceTracker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "distanceTracker", "field_18484", "pointOfInterestDistanceTracker", "f_27029_"), "Lces$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.poi.PointOfInterestStorage#preloadedChunks
    static jobject get_field_preloadedChunks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "loadedChunks", "field_20688", "preloadedChunks", "f_27030_"), "Lit/unimi/dsi/fastutil/longs/LongSet;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.poi.PointOfInterestStorage#preloadedChunks
    static void set_field_preloadedChunks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "loadedChunks", "field_20688", "preloadedChunks", "f_27030_"), "Lit/unimi/dsi/fastutil/longs/LongSet;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_19115", "add", "m_217919_"), "(Ljd;Ljm;)V");
    }

    static void add(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "remove", "method_19112", "remove", "m_27079_"), "(Ljd;)V");
    }

    static void remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_count() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getCountInRange", "method_20252", "count", "m_27121_"), "(Ljava/util/function/Predicate;Ljd;ILces$b;)J");
    }

    static jlong count(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_count();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_hasTypeAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "existsAtPosition", "method_26339", "hasTypeAt", "m_217874_"), "(Lakq;Ljd;)Z");
    }

    static jboolean hasTypeAt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_hasTypeAt();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getInSquare() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getInSquare", "method_22383", "getInSquare", "m_27166_"), "(Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/stream/Stream;");
    }

    static jobject getInSquare(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getInSquare();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getInCircle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getInRange", "method_19125", "getInCircle", "m_27181_"), "(Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/stream/Stream;");
    }

    static jobject getInCircle(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getInCircle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getInChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getInChunk", "method_19123", "getInChunk", "m_27117_"), "(Ljava/util/function/Predicate;Ldcd;Lces$b;)Ljava/util/stream/Stream;");
    }

    static jobject getInChunk(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getInChunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getPositions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findAll", "method_21647", "getPositions", "m_27138_"), "(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/stream/Stream;");
    }

    static jobject getPositions(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_getPositions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getTypesAndPositions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "findAllWithType", "method_43983", "getTypesAndPositions", "m_217983_"), "(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/stream/Stream;");
    }

    static jobject getTypesAndPositions(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_getTypesAndPositions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getSortedTypesAndPositions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "findAllClosestFirstWithType", "method_30957", "getSortedTypesAndPositions", "m_217994_"), "(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/stream/Stream;");
    }

    static jobject getSortedTypesAndPositions(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_getSortedTypesAndPositions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "find", "method_19127", "getPosition", "m_27186_"), "(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/Optional;");
    }

    static jobject getPosition(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_getPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getNearestPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "findClosest", "method_20006", "getNearestPosition", "m_27192_"), "(Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/Optional;");
    }

    static jobject getNearestPosition(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getNearestPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getNearestTypeAndPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "findClosestWithType", "method_43985", "getNearestTypeAndPosition", "m_218002_"), "(Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/Optional;");
    }

    static jobject getNearestTypeAndPosition(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getNearestTypeAndPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__getNearestPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "findClosest", "method_34712", "getNearestPosition", "m_148658_"), "(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/Optional;");
    }

    static jobject _getNearestPosition(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jobject& arg4) {
                
       const auto methodID = methodID__getNearestPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID__getPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "take", "method_19126", "getPosition", "m_217946_"), "(Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Ljd;I)Ljava/util/Optional;");
    }

    static jobject _getPosition(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID__getPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID___getPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandom", "method_20005", "getPosition", "m_217951_"), "(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lces$b;Ljd;ILayw;)Ljava/util/Optional;");
    }

    static jobject __getPosition(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jint& arg4, const jobject& arg5) {
                
       const auto methodID = methodID___getPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_releaseTicket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "release", "method_19129", "releaseTicket", "m_27154_"), "(Ljd;)Z");
    }

    static jboolean releaseTicket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_releaseTicket();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_test() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "exists", "method_19116", "test", "m_27091_"), "(Ljd;Ljava/util/function/Predicate;)Z");
    }

    static jboolean test(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_test();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getType", "method_19132", "getType", "m_27177_"), "(Ljd;)Ljava/util/Optional;");
    }

    static jobject getType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFreeTickets() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getFreeTickets", "method_35155", "getFreeTickets", "m_148653_"), "(Ljd;)I");
    }

    static jint getFreeTickets(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFreeTickets();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDistanceFromNearestOccupied() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sectionsToVillage", "method_19118", "getDistanceFromNearestOccupied", "m_27098_"), "(Lkf;)I");
    }

    static jint getDistanceFromNearestOccupied(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDistanceFromNearestOccupied();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isOccupied() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "isVillageCenter", "method_19133", "isOccupied", "m_27197_"), "(J)Z");
    }

    static jboolean isOccupied(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_isOccupied();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_19290", "tick", "m_6202_"), "(Ljava/util/function/BooleanSupplier;)V");
    }

    static void tick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDirty", "method_19288", "onUpdate", "m_5838_"), "(J)V");
    }

    static void onUpdate(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_onUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onLoad() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onSectionLoad", "method_19291", "onLoad", "m_5839_"), "(J)V");
    }

    static void onLoad(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_onLoad();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initForPalette() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkConsistencyWithBlocks", "method_19510", "initForPalette", "m_280570_"), "(Lkf;Ldvj;)V");
    }

    static void initForPalette(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_initForPalette();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldScan() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "mayHavePoi", "method_20345", "shouldScan", "m_27060_"), "(Ldvj;)Z");
    }

    static jboolean shouldScan(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_shouldScan();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_scanAndPopulate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateFromSection", "method_20348", "scanAndPopulate", "m_27069_"), "(Ldvj;Lkf;Ljava/util/function/BiConsumer;)V");
    }

    static void scanAndPopulate(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_scanAndPopulate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_preloadChunks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "ensureLoadedAndValid", "method_22439", "preloadChunks", "m_27056_"), "(Ldcz;Ljd;I)V");
    }

    static void preloadChunks(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_preloadChunks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_WORLD_POI_POINTOFINTERESTSTORAGE_HPP