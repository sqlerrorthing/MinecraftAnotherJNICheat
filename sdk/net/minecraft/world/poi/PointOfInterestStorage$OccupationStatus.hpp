// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_POI_POINTOFINTERESTSTORAGE$OCCUPATIONSTATUS_HPP
#define NET_MINECRAFT_WORLD_POI_POINTOFINTERESTSTORAGE$OCCUPATIONSTATUS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.poi.PointOfInterestStorage$OccupationStatus
 * Remapped: ces$b
 */
namespace PointOfInterestStorage$OccupationStatus {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ces$b", "net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy", "net/minecraft/class_4153$class_4155", "net/minecraft/world/poi/PointOfInterestStorage$OccupationStatus", "net/minecraft/src/C_787_$C_789_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestStorage$OccupationStatus#HAS_SPACE
    [[maybe_unused]] static jobject get_field_HAS_SPACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "HAS_SPACE", "field_18487", "HAS_SPACE", "HAS_SPACE"), "Lces$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestStorage$OccupationStatus#HAS_SPACE
    [[maybe_unused]] static void set_field_HAS_SPACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "HAS_SPACE", "field_18487", "HAS_SPACE", "HAS_SPACE"), "Lces$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestStorage$OccupationStatus#IS_OCCUPIED
    [[maybe_unused]] static jobject get_field_IS_OCCUPIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "IS_OCCUPIED", "field_18488", "IS_OCCUPIED", "IS_OCCUPIED"), "Lces$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestStorage$OccupationStatus#IS_OCCUPIED
    [[maybe_unused]] static void set_field_IS_OCCUPIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "IS_OCCUPIED", "field_18488", "IS_OCCUPIED", "IS_OCCUPIED"), "Lces$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestStorage$OccupationStatus#ANY
    [[maybe_unused]] static jobject get_field_ANY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ANY", "field_18489", "ANY", "ANY"), "Lces$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestStorage$OccupationStatus#ANY
    [[maybe_unused]] static void set_field_ANY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ANY", "field_18489", "ANY", "ANY"), "Lces$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.poi.PointOfInterestStorage$OccupationStatus#predicate
    static jobject get_field_predicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "test", "field_18490", "predicate", "f_27214_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.poi.PointOfInterestStorage$OccupationStatus#predicate
    static void set_field_predicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "test", "field_18490", "predicate", "f_27214_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lces$b;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lces$b;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getPredicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getTest", "method_19135", "getPredicate", "m_27221_"), "()Ljava/util/function/Predicate;");
    }

    static jobject getPredicate(const jobject& obj) {
                
       const auto methodID = methodID_getPredicate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_POI_POINTOFINTERESTSTORAGE$OCCUPATIONSTATUS_HPP