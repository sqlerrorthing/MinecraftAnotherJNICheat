// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_POI_POINTOFINTERESTTYPE_HPP
#define NET_MINECRAFT_WORLD_POI_POINTOFINTERESTTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.poi.PointOfInterestType
 * Remapped: cev
 */
namespace PointOfInterestType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cev", "net/minecraft/world/entity/ai/village/poi/PoiType", "net/minecraft/class_4158", "net/minecraft/world/poi/PointOfInterestType", "net/minecraft/src/C_792_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.poi.PointOfInterestType#blockStates
    static jobject get_field_blockStates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "matchingStates", "comp_815", "blockStates", "f_27325_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.poi.PointOfInterestType#blockStates
    static void set_field_blockStates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "matchingStates", "comp_815", "blockStates", "f_27325_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.poi.PointOfInterestType#ticketCount
    static jint get_field_ticketCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "maxTickets", "comp_816", "ticketCount", "f_27326_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.poi.PointOfInterestType#ticketCount
    static void set_field_ticketCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "maxTickets", "comp_816", "ticketCount", "f_27326_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.poi.PointOfInterestType#searchDistance
    static jint get_field_searchDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "validRange", "comp_817", "searchDistance", "f_27328_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.poi.PointOfInterestType#searchDistance
    static void set_field_searchDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "validRange", "comp_817", "searchDistance", "f_27328_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestType#NONE
    [[maybe_unused]] static jobject get_field_NONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NONE", "field_39277", "NONE", "f_218034_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestType#NONE
    [[maybe_unused]] static void set_field_NONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NONE", "field_39277", "NONE", "f_218034_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_35159", "contains", "m_148692_"), "(Ldtc;)Z");
    }

    static jboolean contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__blockStates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "matchingStates", "comp_815", "blockStates", "f_27325_"), "()Ljava/util/Set;");
    }

    static jobject _blockStates(const jobject& obj) {
                
       const auto methodID = methodID__blockStates();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__ticketCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "maxTickets", "comp_816", "ticketCount", "f_27326_"), "()I");
    }

    static jint _ticketCount(const jobject& obj) {
                
       const auto methodID = methodID__ticketCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__searchDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "validRange", "comp_817", "searchDistance", "f_27328_"), "()I");
    }

    static jint _searchDistance(const jobject& obj) {
                
       const auto methodID = methodID__searchDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_POI_POINTOFINTERESTTYPE_HPP