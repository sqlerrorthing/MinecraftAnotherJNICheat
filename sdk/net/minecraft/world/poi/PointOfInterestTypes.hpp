// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_POI_POINTOFINTERESTTYPES_HPP
#define NET_MINECRAFT_WORLD_POI_POINTOFINTERESTTYPES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.poi.PointOfInterestTypes
 * Remapped: cew
 */
namespace PointOfInterestTypes {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cew", "net/minecraft/world/entity/ai/village/poi/PoiTypes", "net/minecraft/class_7477", "net/minecraft/world/poi/PointOfInterestTypes", "net/minecraft/src/C_213032_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#ARMORER
    [[maybe_unused]] static jobject get_field_ARMORER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ARMORER", "field_39278", "ARMORER", "f_218047_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#ARMORER
    [[maybe_unused]] static void set_field_ARMORER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ARMORER", "field_39278", "ARMORER", "f_218047_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#BUTCHER
    [[maybe_unused]] static jobject get_field_BUTCHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BUTCHER", "field_39279", "BUTCHER", "f_218048_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#BUTCHER
    [[maybe_unused]] static void set_field_BUTCHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BUTCHER", "field_39279", "BUTCHER", "f_218048_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#CARTOGRAPHER
    [[maybe_unused]] static jobject get_field_CARTOGRAPHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CARTOGRAPHER", "field_39280", "CARTOGRAPHER", "f_218049_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#CARTOGRAPHER
    [[maybe_unused]] static void set_field_CARTOGRAPHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CARTOGRAPHER", "field_39280", "CARTOGRAPHER", "f_218049_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#CLERIC
    [[maybe_unused]] static jobject get_field_CLERIC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CLERIC", "field_39281", "CLERIC", "f_218050_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#CLERIC
    [[maybe_unused]] static void set_field_CLERIC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CLERIC", "field_39281", "CLERIC", "f_218050_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#FARMER
    [[maybe_unused]] static jobject get_field_FARMER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FARMER", "field_39282", "FARMER", "f_218051_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#FARMER
    [[maybe_unused]] static void set_field_FARMER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FARMER", "field_39282", "FARMER", "f_218051_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#FISHERMAN
    [[maybe_unused]] static jobject get_field_FISHERMAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "FISHERMAN", "field_39283", "FISHERMAN", "f_218052_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#FISHERMAN
    [[maybe_unused]] static void set_field_FISHERMAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "FISHERMAN", "field_39283", "FISHERMAN", "f_218052_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#FLETCHER
    [[maybe_unused]] static jobject get_field_FLETCHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "FLETCHER", "field_39284", "FLETCHER", "f_218053_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#FLETCHER
    [[maybe_unused]] static void set_field_FLETCHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "FLETCHER", "field_39284", "FLETCHER", "f_218053_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#LEATHERWORKER
    [[maybe_unused]] static jobject get_field_LEATHERWORKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "LEATHERWORKER", "field_39285", "LEATHERWORKER", "f_218054_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#LEATHERWORKER
    [[maybe_unused]] static void set_field_LEATHERWORKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "LEATHERWORKER", "field_39285", "LEATHERWORKER", "f_218054_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#LIBRARIAN
    [[maybe_unused]] static jobject get_field_LIBRARIAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "LIBRARIAN", "field_39286", "LIBRARIAN", "f_218055_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#LIBRARIAN
    [[maybe_unused]] static void set_field_LIBRARIAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "LIBRARIAN", "field_39286", "LIBRARIAN", "f_218055_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#MASON
    [[maybe_unused]] static jobject get_field_MASON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MASON", "field_39287", "MASON", "f_218056_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#MASON
    [[maybe_unused]] static void set_field_MASON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MASON", "field_39287", "MASON", "f_218056_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#SHEPHERD
    [[maybe_unused]] static jobject get_field_SHEPHERD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SHEPHERD", "field_39288", "SHEPHERD", "f_218057_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#SHEPHERD
    [[maybe_unused]] static void set_field_SHEPHERD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SHEPHERD", "field_39288", "SHEPHERD", "f_218057_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#TOOLSMITH
    [[maybe_unused]] static jobject get_field_TOOLSMITH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "TOOLSMITH", "field_39289", "TOOLSMITH", "f_218058_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#TOOLSMITH
    [[maybe_unused]] static void set_field_TOOLSMITH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "TOOLSMITH", "field_39289", "TOOLSMITH", "f_218058_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#WEAPONSMITH
    [[maybe_unused]] static jobject get_field_WEAPONSMITH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "WEAPONSMITH", "field_39290", "WEAPONSMITH", "f_218059_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#WEAPONSMITH
    [[maybe_unused]] static void set_field_WEAPONSMITH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "WEAPONSMITH", "field_39290", "WEAPONSMITH", "f_218059_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#HOME
    [[maybe_unused]] static jobject get_field_HOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "HOME", "field_39291", "HOME", "f_218060_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#HOME
    [[maybe_unused]] static void set_field_HOME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "HOME", "field_39291", "HOME", "f_218060_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#MEETING
    [[maybe_unused]] static jobject get_field_MEETING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "MEETING", "field_39292", "MEETING", "f_218061_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#MEETING
    [[maybe_unused]] static void set_field_MEETING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "MEETING", "field_39292", "MEETING", "f_218061_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#BEEHIVE
    [[maybe_unused]] static jobject get_field_BEEHIVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "BEEHIVE", "field_39293", "BEEHIVE", "f_218062_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#BEEHIVE
    [[maybe_unused]] static void set_field_BEEHIVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "BEEHIVE", "field_39293", "BEEHIVE", "f_218062_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#BEE_NEST
    [[maybe_unused]] static jobject get_field_BEE_NEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "BEE_NEST", "field_39294", "BEE_NEST", "f_218063_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#BEE_NEST
    [[maybe_unused]] static void set_field_BEE_NEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "BEE_NEST", "field_39294", "BEE_NEST", "f_218063_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#NETHER_PORTAL
    [[maybe_unused]] static jobject get_field_NETHER_PORTAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "NETHER_PORTAL", "field_39295", "NETHER_PORTAL", "f_218064_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#NETHER_PORTAL
    [[maybe_unused]] static void set_field_NETHER_PORTAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "NETHER_PORTAL", "field_39295", "NETHER_PORTAL", "f_218064_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#LODESTONE
    [[maybe_unused]] static jobject get_field_LODESTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LODESTONE", "field_39296", "LODESTONE", "f_218065_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#LODESTONE
    [[maybe_unused]] static void set_field_LODESTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LODESTONE", "field_39296", "LODESTONE", "f_218065_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.poi.PointOfInterestTypes#LIGHTNING_ROD
    [[maybe_unused]] static jobject get_field_LIGHTNING_ROD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "LIGHTNING_ROD", "field_39297", "LIGHTNING_ROD", "f_218066_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.poi.PointOfInterestTypes#LIGHTNING_ROD
    [[maybe_unused]] static void set_field_LIGHTNING_ROD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "LIGHTNING_ROD", "field_39297", "LIGHTNING_ROD", "f_218066_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.poi.PointOfInterestTypes#BED_HEADS
    [[maybe_unused]] static jobject get_field_BED_HEADS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BEDS", "field_39299", "BED_HEADS", "f_218068_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.poi.PointOfInterestTypes#BED_HEADS
    [[maybe_unused]] static void set_field_BED_HEADS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BEDS", "field_39299", "BED_HEADS", "f_218068_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.poi.PointOfInterestTypes#CAULDRONS
    [[maybe_unused]] static jobject get_field_CAULDRONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "CAULDRONS", "field_39300", "CAULDRONS", "f_218069_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.poi.PointOfInterestTypes#CAULDRONS
    [[maybe_unused]] static void set_field_CAULDRONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "CAULDRONS", "field_39300", "CAULDRONS", "f_218069_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.poi.PointOfInterestTypes#POI_STATES_TO_TYPE
    [[maybe_unused]] static jobject get_field_POI_STATES_TO_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "TYPE_BY_STATE", "field_39301", "POI_STATES_TO_TYPE", "f_218070_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.poi.PointOfInterestTypes#POI_STATES_TO_TYPE
    [[maybe_unused]] static void set_field_POI_STATES_TO_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "TYPE_BY_STATE", "field_39301", "POI_STATES_TO_TYPE", "f_218070_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getStatesOfBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlockStates", "method_43988", "getStatesOfBlock", "m_218073_"), "(Ldfy;)Ljava/util/Set;");
    }

    static jobject getStatesOfBlock(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getStatesOfBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createKey", "method_43994", "of", "m_218090_"), "(Ljava/lang/String;)Lakq;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_43993", "register", "m_218084_"), "(Ljz;Lakq;Ljava/util/Set;II)Lcev;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_registerStates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "registerBlockStates", "method_43990", "registerStates", "m_246216_"), "(Ljm;Ljava/util/Set;)V");
    }

    static void registerStates(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_registerStates();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getTypeForState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forState", "method_43989", "getTypeForState", "m_218075_"), "(Ldtc;)Ljava/util/Optional;");
    }

    static jobject getTypeForState(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getTypeForState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isPointOfInterest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "hasPoi", "method_46397", "isPointOfInterest", "m_252831_"), "(Ldtc;)Z");
    }

    static jboolean isPointOfInterest(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isPointOfInterest();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_registerAndGetDefault() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_43992", "registerAndGetDefault", "m_218082_"), "(Ljz;)Lcev;");
    }

    static jobject registerAndGetDefault(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_registerAndGetDefault();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_POI_POINTOFINTERESTTYPES_HPP