// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BORDER_WORLDBORDER_HPP
#define NET_MINECRAFT_WORLD_BORDER_WORLDBORDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.border.WorldBorder
 * Remapped: dut
 */
namespace WorldBorder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dut", "net/minecraft/world/level/border/WorldBorder", "net/minecraft/class_2784", "net/minecraft/world/border/WorldBorder", "net/minecraft/src/C_2110_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.border.WorldBorder#STATIC_AREA_SIZE
    [[maybe_unused]] static jdouble get_field_STATIC_AREA_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_SIZE", "field_33643", "STATIC_AREA_SIZE", "f_156092_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.border.WorldBorder#STATIC_AREA_SIZE
    [[maybe_unused]] static void set_field_STATIC_AREA_SIZE(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_SIZE", "field_33643", "STATIC_AREA_SIZE", "f_156092_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.border.WorldBorder#MAX_CENTER_COORDINATES
    [[maybe_unused]] static jdouble get_field_MAX_CENTER_COORDINATES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_CENTER_COORDINATE", "field_36191", "MAX_CENTER_COORDINATES", "f_196705_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.border.WorldBorder#MAX_CENTER_COORDINATES
    [[maybe_unused]] static void set_field_MAX_CENTER_COORDINATES(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_CENTER_COORDINATE", "field_36191", "MAX_CENTER_COORDINATES", "f_196705_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder#listeners
    static jobject get_field_listeners(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "listeners", "field_12730", "listeners", "f_61905_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder#listeners
    static void set_field_listeners(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "listeners", "field_12730", "listeners", "f_61905_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder#damagePerBlock
    static jdouble get_field_damagePerBlock(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "damagePerBlock", "field_12733", "damagePerBlock", "f_61906_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder#damagePerBlock
    static void set_field_damagePerBlock(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "damagePerBlock", "field_12733", "damagePerBlock", "f_61906_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder#safeZone
    static jdouble get_field_safeZone(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "damageSafeZone", "field_12731", "safeZone", "f_61908_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder#safeZone
    static void set_field_safeZone(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "damageSafeZone", "field_12731", "safeZone", "f_61908_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder#warningTime
    static jint get_field_warningTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "warningTime", "field_12735", "warningTime", "f_61909_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder#warningTime
    static void set_field_warningTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "warningTime", "field_12735", "warningTime", "f_61909_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder#warningBlocks
    static jint get_field_warningBlocks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "warningBlocks", "field_12734", "warningBlocks", "f_61910_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder#warningBlocks
    static void set_field_warningBlocks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "warningBlocks", "field_12734", "warningBlocks", "f_61910_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder#centerX
    static jdouble get_field_centerX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "centerX", "field_12738", "centerX", "f_61911_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder#centerX
    static void set_field_centerX(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "centerX", "field_12738", "centerX", "f_61911_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder#centerZ
    static jdouble get_field_centerZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "centerZ", "field_12737", "centerZ", "f_61912_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder#centerZ
    static void set_field_centerZ(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "centerZ", "field_12737", "centerZ", "f_61912_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.border.WorldBorder#maxRadius
    static jint get_field_maxRadius(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "absoluteMaxSize", "field_12732", "maxRadius", "f_61913_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.border.WorldBorder#maxRadius
    static void set_field_maxRadius(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "absoluteMaxSize", "field_12732", "maxRadius", "f_61913_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder#area
    static jobject get_field_area(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "extent", "field_12736", "area", "f_61914_"), "Ldut$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder#area
    static void set_field_area(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "extent", "field_12736", "area", "f_61914_"), "Ldut$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.world.border.WorldBorder#DEFAULT_BORDER
    [[maybe_unused]] static jobject get_field_DEFAULT_BORDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_SETTINGS", "field_24122", "DEFAULT_BORDER", "f_61907_"), "Ldut$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.border.WorldBorder#DEFAULT_BORDER
    [[maybe_unused]] static void set_field_DEFAULT_BORDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_SETTINGS", "field_24122", "DEFAULT_BORDER", "f_61907_"), "Ldut$c;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isWithinBounds", "method_11952", "contains", "m_61937_"), "(Ljd;)Z");
    }

    static jboolean contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isWithinBounds", "method_61115", "contains", "m_339351_"), "(Lexc;)Z");
    }

    static jboolean _contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isWithinBounds", "method_11951", "contains", "m_61927_"), "(Ldcd;)Z");
    }

    static jboolean __contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID___contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID____contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isWithinBounds", "method_11966", "contains", "m_61935_"), "(Lewx;)Z");
    }

    static jboolean ___contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID____contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_____contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isWithinBounds", "method_61114", "contains", "m_340535_"), "(DDDD)Z");
    }

    static jboolean ____contains(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
                
       const auto methodID = methodID_____contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID______contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isWithinBounds", "method_35317", "contains", "m_156093_"), "(DD)Z");
    }

    static jboolean _____contains(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID______contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_______contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isWithinBounds", "method_39458", "contains", "m_187562_"), "(DDD)Z");
    }

    static jboolean ______contains(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_______contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_clamp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "clampToBounds", "method_61117", "clamp", "m_338613_"), "(Ljd;)Ljd;");
    }

    static jobject clamp(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_clamp();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__clamp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "clampToBounds", "method_61116", "clamp", "m_339868_"), "(Lexc;)Ljd;");
    }

    static jobject _clamp(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__clamp();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___clamp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "clampToBounds", "method_39538", "clamp", "m_187569_"), "(DDD)Ljd;");
    }

    static jobject __clamp(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID___clamp();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getDistanceInsideBorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDistanceToBorder", "method_11979", "getDistanceInsideBorder", "m_61925_"), "(Lbsr;)D");
    }

    static jdouble getDistanceInsideBorder(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDistanceInsideBorder();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_asVoxelShape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getCollisionShape", "method_17903", "asVoxelShape", "m_61946_"), "()Lexv;");
    }

    static jobject asVoxelShape(const jobject& obj) {
                
       const auto methodID = methodID_asVoxelShape();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__getDistanceInsideBorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getDistanceToBorder", "method_11961", "getDistanceInsideBorder", "m_61941_"), "(DD)D");
    }

    static jdouble _getDistanceInsideBorder(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID__getDistanceInsideBorder();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canCollide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isInsideCloseToBorder", "method_39459", "canCollide", "m_187566_"), "(Lbsr;Lewx;)Z");
    }

    static jboolean canCollide(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canCollide();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getStage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getStatus", "method_11968", "getStage", "m_61954_"), "()Ldus;");
    }

    static jobject getStage(const jobject& obj) {
                
       const auto methodID = methodID_getStage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundWest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getMinX", "method_11976", "getBoundWest", "m_61955_"), "()D");
    }

    static jdouble getBoundWest(const jobject& obj) {
                
       const auto methodID = methodID_getBoundWest();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundNorth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getMinZ", "method_11958", "getBoundNorth", "m_61956_"), "()D");
    }

    static jdouble getBoundNorth(const jobject& obj) {
                
       const auto methodID = methodID_getBoundNorth();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundEast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getMaxX", "method_11963", "getBoundEast", "m_61957_"), "()D");
    }

    static jdouble getBoundEast(const jobject& obj) {
                
       const auto methodID = methodID_getBoundEast();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundSouth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getMaxZ", "method_11977", "getBoundSouth", "m_61958_"), "()D");
    }

    static jdouble getBoundSouth(const jobject& obj) {
                
       const auto methodID = methodID_getBoundSouth();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCenterX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getCenterX", "method_11964", "getCenterX", "m_6347_"), "()D");
    }

    static jdouble getCenterX(const jobject& obj) {
                
       const auto methodID = methodID_getCenterX();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCenterZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getCenterZ", "method_11980", "getCenterZ", "m_6345_"), "()D");
    }

    static jdouble getCenterZ(const jobject& obj) {
                
       const auto methodID = methodID_getCenterZ();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCenter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setCenter", "method_11978", "setCenter", "m_61949_"), "(DD)V");
    }

    static void setCenter(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_setCenter();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getSize", "method_11965", "getSize", "m_61959_"), "()D");
    }

    static jdouble getSize(const jobject& obj) {
                
       const auto methodID = methodID_getSize();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSizeLerpTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getLerpRemainingTime", "method_11962", "getSizeLerpTime", "m_61960_"), "()J");
    }

    static jlong getSizeLerpTime(const jobject& obj) {
                
       const auto methodID = methodID_getSizeLerpTime();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSizeLerpTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getLerpTarget", "method_11954", "getSizeLerpTarget", "m_61961_"), "()D");
    }

    static jdouble getSizeLerpTarget(const jobject& obj) {
                
       const auto methodID = methodID_getSizeLerpTarget();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSize", "method_11969", "setSize", "m_61917_"), "(D)V");
    }

    static void setSize(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setSize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_interpolateSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lerpSizeBetween", "method_11957", "interpolateSize", "m_61919_"), "(DDJ)V");
    }

    static void interpolateSize(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_interpolateSize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getListeners() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getListeners", "method_11970", "getListeners", "m_61962_"), "()Ljava/util/List;");
    }

    static jobject getListeners(const jobject& obj) {
                
       const auto methodID = methodID_getListeners();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addListener", "method_11983", "addListener", "m_61929_"), "(Ldur;)V");
    }

    static void addListener(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "removeListener", "method_35318", "removeListener", "m_156096_"), "(Ldur;)V");
    }

    static void removeListener(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setMaxRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setAbsoluteMaxSize", "method_11973", "setMaxRadius", "m_61923_"), "(I)V");
    }

    static void setMaxRadius(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setMaxRadius();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMaxRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getAbsoluteMaxSize", "method_11959", "getMaxRadius", "m_61963_"), "()I");
    }

    static jint getMaxRadius(const jobject& obj) {
                
       const auto methodID = methodID_getMaxRadius();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSafeZone() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getDamageSafeZone", "method_11971", "getSafeZone", "m_61964_"), "()D");
    }

    static jdouble getSafeZone(const jobject& obj) {
                
       const auto methodID = methodID_getSafeZone();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSafeZone() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setDamageSafeZone", "method_11981", "setSafeZone", "m_61939_"), "(D)V");
    }

    static void setSafeZone(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setSafeZone();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDamagePerBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getDamagePerBlock", "method_11953", "getDamagePerBlock", "m_61965_"), "()D");
    }

    static jdouble getDamagePerBlock(const jobject& obj) {
                
       const auto methodID = methodID_getDamagePerBlock();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDamagePerBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setDamagePerBlock", "method_11955", "setDamagePerBlock", "m_61947_"), "(D)V");
    }

    static void setDamagePerBlock(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setDamagePerBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getShrinkingSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getLerpSpeed", "method_11974", "getShrinkingSpeed", "m_61966_"), "()D");
    }

    static jdouble getShrinkingSpeed(const jobject& obj) {
                
       const auto methodID = methodID_getShrinkingSpeed();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWarningTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getWarningTime", "method_11956", "getWarningTime", "m_61967_"), "()I");
    }

    static jint getWarningTime(const jobject& obj) {
                
       const auto methodID = methodID_getWarningTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWarningTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setWarningTime", "method_11975", "setWarningTime", "m_61944_"), "(I)V");
    }

    static void setWarningTime(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setWarningTime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWarningBlocks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "getWarningBlocks", "method_11972", "getWarningBlocks", "m_61968_"), "()I");
    }

    static jint getWarningBlocks(const jobject& obj) {
                
       const auto methodID = methodID_getWarningBlocks();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWarningBlocks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setWarningBlocks", "method_11967", "setWarningBlocks", "m_61952_"), "(I)V");
    }

    static void setWarningBlocks(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setWarningBlocks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "tick", "method_11982", "tick", "m_61969_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "createSettings", "method_27355", "write", "m_61970_"), "()Ldut$c;");
    }

    static jobject write(const jobject& obj) {
                
       const auto methodID = methodID_write();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applySettings", "method_17905", "load", "m_61931_"), "(Ldut$c;)V");
    }

    static void load(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_load();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BORDER_WORLDBORDER_HPP