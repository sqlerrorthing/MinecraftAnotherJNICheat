// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BORDER_WORLDBORDER$MOVINGAREA_HPP
#define NET_MINECRAFT_WORLD_BORDER_WORLDBORDER$MOVINGAREA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.border.WorldBorder$MovingArea
 * Remapped: dut$b
 */
namespace WorldBorder$MovingArea {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dut$b", "net/minecraft/world/level/border/WorldBorder$MovingBorderExtent", "net/minecraft/class_2784$class_2786", "net/minecraft/world/border/WorldBorder$MovingArea", "net/minecraft/src/C_2110_$C_2113_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.border.WorldBorder$MovingArea#oldSize
    static jdouble get_field_oldSize(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "from", "field_12740", "oldSize", "f_61972_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder$MovingArea#oldSize
    static void set_field_oldSize(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "from", "field_12740", "oldSize", "f_61972_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder$MovingArea#newSize
    static jdouble get_field_newSize(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "to", "field_12739", "newSize", "f_61973_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder$MovingArea#newSize
    static void set_field_newSize(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "to", "field_12739", "newSize", "f_61973_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder$MovingArea#timeEnd
    static jlong get_field_timeEnd(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "lerpEnd", "field_12742", "timeEnd", "f_61974_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder$MovingArea#timeEnd
    static void set_field_timeEnd(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "lerpEnd", "field_12742", "timeEnd", "f_61974_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder$MovingArea#timeStart
    static jlong get_field_timeStart(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "lerpBegin", "field_12741", "timeStart", "f_61975_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder$MovingArea#timeStart
    static void set_field_timeStart(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "lerpBegin", "field_12741", "timeStart", "f_61975_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder$MovingArea#timeDuration
    static jdouble get_field_timeDuration(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lerpDuration", "field_12744", "timeDuration", "f_61976_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder$MovingArea#timeDuration
    static void set_field_timeDuration(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lerpDuration", "field_12744", "timeDuration", "f_61976_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    static jmethodID methodID_getBoundWest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMinX", "method_11994", "getBoundWest", "m_6613_"), "()D");
    }

    static jdouble getBoundWest(const jobject& obj) {
                
       const auto methodID = methodID_getBoundWest();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundNorth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getMinZ", "method_11992", "getBoundNorth", "m_6606_"), "()D");
    }

    static jdouble getBoundNorth(const jobject& obj) {
                
       const auto methodID = methodID_getBoundNorth();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundEast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getMaxX", "method_11991", "getBoundEast", "m_6608_"), "()D");
    }

    static jdouble getBoundEast(const jobject& obj) {
                
       const auto methodID = methodID_getBoundEast();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundSouth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getMaxZ", "method_11985", "getBoundSouth", "m_6619_"), "()D");
    }

    static jdouble getBoundSouth(const jobject& obj) {
                
       const auto methodID = methodID_getBoundSouth();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getSize", "method_11984", "getSize", "m_6618_"), "()D");
    }

    static jdouble getSize(const jobject& obj) {
                
       const auto methodID = methodID_getSize();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getShrinkingSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getLerpSpeed", "method_11987", "getShrinkingSpeed", "m_6611_"), "()D");
    }

    static jdouble getShrinkingSpeed(const jobject& obj) {
                
       const auto methodID = methodID_getShrinkingSpeed();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSizeLerpTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getLerpRemainingTime", "method_11993", "getSizeLerpTime", "m_6738_"), "()J");
    }

    static jlong getSizeLerpTime(const jobject& obj) {
                
       const auto methodID = methodID_getSizeLerpTime();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSizeLerpTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getLerpTarget", "method_11988", "getSizeLerpTarget", "m_6605_"), "()D");
    }

    static jdouble getSizeLerpTarget(const jobject& obj) {
                
       const auto methodID = methodID_getSizeLerpTarget();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getStatus", "method_11995", "getStage", "m_5570_"), "()Ldus;");
    }

    static jobject getStage(const jobject& obj) {
                
       const auto methodID = methodID_getStage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onCenterChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "onCenterChange", "method_11990", "onCenterChanged", "m_6622_"), "()V");
    }

    static void onCenterChanged(const jobject& obj) {
                
       const auto methodID = methodID_onCenterChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onMaxRadiusChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "onAbsoluteMaxSizeChange", "method_11989", "onMaxRadiusChanged", "m_6623_"), "()V");
    }

    static void onMaxRadiusChanged(const jobject& obj) {
                
       const auto methodID = methodID_onMaxRadiusChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAreaInstance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "update", "method_11986", "getAreaInstance", "m_5794_"), "()Ldut$a;");
    }

    static jobject getAreaInstance(const jobject& obj) {
                
       const auto methodID = methodID_getAreaInstance();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_asVoxelShape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getCollisionShape", "method_17906", "asVoxelShape", "m_6186_"), "()Lexv;");
    }

    static jobject asVoxelShape(const jobject& obj) {
                
       const auto methodID = methodID_asVoxelShape();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BORDER_WORLDBORDER$MOVINGAREA_HPP