// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BORDER_WORLDBORDER$STATICAREA_HPP
#define NET_MINECRAFT_WORLD_BORDER_WORLDBORDER$STATICAREA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.border.WorldBorder$StaticArea
 * Remapped: dut$d
 */
namespace WorldBorder$StaticArea {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dut$d", "net/minecraft/world/level/border/WorldBorder$StaticBorderExtent", "net/minecraft/class_2784$class_2787", "net/minecraft/world/border/WorldBorder$StaticArea", "net/minecraft/src/C_2110_$C_2115_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.border.WorldBorder$StaticArea#size
    static jdouble get_field_size(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "size", "field_12747", "size", "f_62051_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder$StaticArea#size
    static void set_field_size(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "size", "field_12747", "size", "f_62051_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder$StaticArea#boundWest
    static jdouble get_field_boundWest(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minX", "field_12746", "boundWest", "f_62052_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder$StaticArea#boundWest
    static void set_field_boundWest(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minX", "field_12746", "boundWest", "f_62052_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder$StaticArea#boundNorth
    static jdouble get_field_boundNorth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "minZ", "field_12745", "boundNorth", "f_62053_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder$StaticArea#boundNorth
    static void set_field_boundNorth(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "minZ", "field_12745", "boundNorth", "f_62053_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder$StaticArea#boundEast
    static jdouble get_field_boundEast(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "maxX", "field_12750", "boundEast", "f_62054_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder$StaticArea#boundEast
    static void set_field_boundEast(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "maxX", "field_12750", "boundEast", "f_62054_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder$StaticArea#boundSouth
    static jdouble get_field_boundSouth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "maxZ", "field_12749", "boundSouth", "f_62055_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder$StaticArea#boundSouth
    static void set_field_boundSouth(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "maxZ", "field_12749", "boundSouth", "f_62055_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.border.WorldBorder$StaticArea#shape
    static jobject get_field_shape(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "shape", "field_17653", "shape", "f_62056_"), "Lexv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.border.WorldBorder$StaticArea#shape
    static void set_field_shape(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "shape", "field_17653", "shape", "f_62056_"), "Lexv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getBoundWest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMinX", "method_11994", "getBoundWest", "m_6613_"), "()D");
    }

    static jdouble getBoundWest(const jobject& obj) {
                
       const auto methodID = methodID_getBoundWest();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundEast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getMaxX", "method_11991", "getBoundEast", "m_6608_"), "()D");
    }

    static jdouble getBoundEast(const jobject& obj) {
                
       const auto methodID = methodID_getBoundEast();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundNorth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getMinZ", "method_11992", "getBoundNorth", "m_6606_"), "()D");
    }

    static jdouble getBoundNorth(const jobject& obj) {
                
       const auto methodID = methodID_getBoundNorth();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundSouth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getMaxZ", "method_11985", "getBoundSouth", "m_6619_"), "()D");
    }

    static jdouble getBoundSouth(const jobject& obj) {
                
       const auto methodID = methodID_getBoundSouth();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getSize", "method_11984", "getSize", "m_6618_"), "()D");
    }

    static jdouble getSize(const jobject& obj) {
                
       const auto methodID = methodID_getSize();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getStatus", "method_11995", "getStage", "m_5570_"), "()Ldus;");
    }

    static jobject getStage(const jobject& obj) {
                
       const auto methodID = methodID_getStage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getShrinkingSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getLerpSpeed", "method_11987", "getShrinkingSpeed", "m_6611_"), "()D");
    }

    static jdouble getShrinkingSpeed(const jobject& obj) {
                
       const auto methodID = methodID_getShrinkingSpeed();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSizeLerpTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getLerpRemainingTime", "method_11993", "getSizeLerpTime", "m_6738_"), "()J");
    }

    static jlong getSizeLerpTime(const jobject& obj) {
                
       const auto methodID = methodID_getSizeLerpTime();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSizeLerpTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getLerpTarget", "method_11988", "getSizeLerpTarget", "m_6605_"), "()D");
    }

    static jdouble getSizeLerpTarget(const jobject& obj) {
                
       const auto methodID = methodID_getSizeLerpTarget();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_recalculateBounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "updateBox", "method_11996", "recalculateBounds", "m_62073_"), "()V");
    }

    static void recalculateBounds(const jobject& obj) {
                
       const auto methodID = methodID_recalculateBounds();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onMaxRadiusChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "onAbsoluteMaxSizeChange", "method_11989", "onMaxRadiusChanged", "m_6623_"), "()V");
    }

    static void onMaxRadiusChanged(const jobject& obj) {
                
       const auto methodID = methodID_onMaxRadiusChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onCenterChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "onCenterChange", "method_11990", "onCenterChanged", "m_6622_"), "()V");
    }

    static void onCenterChanged(const jobject& obj) {
                
       const auto methodID = methodID_onCenterChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAreaInstance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "update", "method_11986", "getAreaInstance", "m_5794_"), "()Ldut$a;");
    }

    static jobject getAreaInstance(const jobject& obj) {
                
       const auto methodID = methodID_getAreaInstance();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_asVoxelShape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getCollisionShape", "method_17906", "asVoxelShape", "m_6186_"), "()Lexv;");
    }

    static jobject asVoxelShape(const jobject& obj) {
                
       const auto methodID = methodID_asVoxelShape();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BORDER_WORLDBORDER$STATICAREA_HPP