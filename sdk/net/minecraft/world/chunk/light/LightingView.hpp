// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_LIGHT_LIGHTINGVIEW_HPP
#define NET_MINECRAFT_WORLD_CHUNK_LIGHT_LIGHTINGVIEW_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.light.LightingView
 * Remapped: eow
 */
namespace LightingView {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eow", "net/minecraft/world/level/lighting/LightEventListener", "net/minecraft/class_3565", "net/minecraft/world/chunk/light/LightingView", "net/minecraft/src/C_2682_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_checkBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkBlock", "method_15513", "checkBlock", "m_7174_"), "(Ljd;)V");
    }

    static void checkBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_checkBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasUpdates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K_", "hasLightWork", "method_15518", "hasUpdates", "m_75808_"), "()Z");
    }

    static jboolean hasUpdates(const jobject& obj) {
                
       const auto methodID = methodID_hasUpdates();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_doLightUpdates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "runLightUpdates", "method_15516", "doLightUpdates", "m_9323_"), "()I");
    }

    static jint doLightUpdates(const jobject& obj) {
                
       const auto methodID = methodID_doLightUpdates();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSectionStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateSectionStatus", "method_15552", "setSectionStatus", "m_75834_"), "(Ljd;Z)V");
    }

    static void setSectionStatus(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setSectionStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__setSectionStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateSectionStatus", "method_15551", "setSectionStatus", "m_6191_"), "(Lkf;Z)V");
    }

    static void _setSectionStatus(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID__setSectionStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setColumnEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLightEnabled", "method_15512", "setColumnEnabled", "m_9335_"), "(Ldcd;Z)V");
    }

    static void setColumnEnabled(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setColumnEnabled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_propagateLight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "propagateLightSources", "method_51471", "propagateLight", "m_142519_"), "(Ldcd;)V");
    }

    static void propagateLight(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_propagateLight();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_LIGHT_LIGHTINGVIEW_HPP