// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_LIGHT_CHUNKLIGHTINGVIEW$EMPTY_HPP
#define NET_MINECRAFT_WORLD_CHUNK_LIGHT_CHUNKLIGHTINGVIEW$EMPTY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.light.ChunkLightingView$Empty
 * Remapped: eor$a
 */
namespace ChunkLightingView$Empty {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eor$a", "net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener", "net/minecraft/class_3562$class_3563", "net/minecraft/world/chunk/light/ChunkLightingView$Empty", "net/minecraft/src/C_2677_$C_2678_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.chunk.light.ChunkLightingView$Empty#INSTANCE
    [[maybe_unused]] static jobject get_field_INSTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INSTANCE", "field_15812", "INSTANCE", "INSTANCE"), "Leor$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.light.ChunkLightingView$Empty#INSTANCE
    [[maybe_unused]] static void set_field_INSTANCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INSTANCE", "field_15812", "INSTANCE", "INSTANCE"), "Leor$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Leor$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Leor$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getLightSection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDataLayerData", "method_15544", "getLightSection", "m_8079_"), "(Lkf;)Ldvd;");
    }

    static jobject getLightSection(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getLightSection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLightLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getLightValue", "method_15543", "getLightLevel", "m_7768_"), "(Ljd;)I");
    }

    static jint getLightLevel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getLightLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_checkBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkBlock", "method_15513", "checkBlock", "m_7174_"), "(Ljd;)V");
    }

    static void checkBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_checkBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasUpdates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K_", "hasLightWork", "method_15518", "hasUpdates", "m_75808_"), "()Z");
    }

    static jboolean hasUpdates(const jobject& obj) {
                
       const auto methodID = methodID_hasUpdates();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_doLightUpdates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "runLightUpdates", "method_15516", "doLightUpdates", "m_9323_"), "()I");
    }

    static jint doLightUpdates(const jobject& obj) {
                
       const auto methodID = methodID_doLightUpdates();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSectionStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateSectionStatus", "method_15551", "setSectionStatus", "m_6191_"), "(Lkf;Z)V");
    }

    static void setSectionStatus(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setSectionStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setColumnEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLightEnabled", "method_15512", "setColumnEnabled", "m_9335_"), "(Ldcd;Z)V");
    }

    static void setColumnEnabled(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setColumnEnabled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_propagateLight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "propagateLightSources", "method_51471", "propagateLight", "m_142519_"), "(Ldcd;)V");
    }

    static void propagateLight(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_propagateLight();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_LIGHT_CHUNKLIGHTINGVIEW$EMPTY_HPP