// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_LIGHT_SKYLIGHTSTORAGE_HPP
#define NET_MINECRAFT_WORLD_CHUNK_LIGHT_SKYLIGHTSTORAGE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.light.SkyLightStorage
 * Remapped: eoy
 */
namespace SkyLightStorage {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eoy", "net/minecraft/world/level/lighting/SkyLightSectionStorage", "net/minecraft/class_3569", "net/minecraft/world/chunk/light/SkyLightStorage", "net/minecraft/src/C_2684_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getLight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getLightValue", "method_15538", "getLight", "m_6181_"), "(J)I");
    }

    static jint getLight(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_getLight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getLight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getLightValue", "method_31931", "getLight", "m_164457_"), "(JZ)I");
    }

    static jint _getLight(const jobject& obj, const jlong& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID__getLight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onLoadSection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "onNodeAdded", "method_15523", "onLoadSection", "m_6177_"), "(J)V");
    }

    static void onLoadSection(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_onLoadSection();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onUnloadSection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "onNodeRemoved", "method_15534", "onUnloadSection", "m_6187_"), "(J)V");
    }

    static void onUnloadSection(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_onUnloadSection();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createSection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "createDataLayer", "method_15529", "createSection", "m_7667_"), "(J)Ldvd;");
    }

    static jobject createSection(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_createSection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "repeatFirstLayer", "method_37460", "copy", "m_182512_"), "(Ldvd;)Ldvd;");
    }

    static jobject copy(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isAboveMinHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasLightDataAtOrBelow", "method_15567", "isAboveMinHeight", "m_75870_"), "(I)Z");
    }

    static jboolean isAboveMinHeight(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_isAboveMinHeight();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isAtOrAboveTopmostSection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "isAboveData", "method_15568", "isAtOrAboveTopmostSection", "m_75890_"), "(J)Z");
    }

    static jboolean isAtOrAboveTopmostSection(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_isAtOrAboveTopmostSection();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTopSectionForColumn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getTopSectionY", "method_51594", "getTopSectionForColumn", "m_284384_"), "(J)I");
    }

    static jint getTopSectionForColumn(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_getTopSectionForColumn();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMinSectionY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getBottomSectionY", "method_51593", "getMinSectionY", "m_284293_"), "()I");
    }

    static jint getMinSectionY(const jobject& obj) {
                
       const auto methodID = methodID_getMinSectionY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_LIGHT_SKYLIGHTSTORAGE_HPP