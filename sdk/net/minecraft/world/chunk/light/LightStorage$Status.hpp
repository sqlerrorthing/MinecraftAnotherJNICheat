// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_LIGHT_LIGHTSTORAGE$STATUS_HPP
#define NET_MINECRAFT_WORLD_CHUNK_LIGHT_LIGHTSTORAGE$STATUS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.light.LightStorage$Status
 * Remapped: eos$b
 */
namespace LightStorage$Status {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eos$b", "net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType", "net/minecraft/class_3560$class_8530", "net/minecraft/world/chunk/light/LightStorage$Status", "net/minecraft/src/C_2679_$C_283737_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.chunk.light.LightStorage$Status#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_44724", "EMPTY", "EMPTY"), "Leos$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.light.LightStorage$Status#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_44724", "EMPTY", "EMPTY"), "Leos$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.chunk.light.LightStorage$Status#LIGHT_ONLY
    [[maybe_unused]] static jobject get_field_LIGHT_ONLY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LIGHT_ONLY", "field_44725", "LIGHT_ONLY", "LIGHT_ONLY"), "Leos$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.light.LightStorage$Status#LIGHT_ONLY
    [[maybe_unused]] static void set_field_LIGHT_ONLY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LIGHT_ONLY", "field_44725", "LIGHT_ONLY", "LIGHT_ONLY"), "Leos$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.chunk.light.LightStorage$Status#LIGHT_AND_DATA
    [[maybe_unused]] static jobject get_field_LIGHT_AND_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LIGHT_AND_DATA", "field_44726", "LIGHT_AND_DATA", "LIGHT_AND_DATA"), "Leos$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.light.LightStorage$Status#LIGHT_AND_DATA
    [[maybe_unused]] static void set_field_LIGHT_AND_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LIGHT_AND_DATA", "field_44726", "LIGHT_AND_DATA", "LIGHT_AND_DATA"), "Leos$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.light.LightStorage$Status#sigil
    static jobject get_field_sigil(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "display", "field_44727", "sigil", "f_283935_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.light.LightStorage$Status#sigil
    static void set_field_sigil(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "display", "field_44727", "sigil", "f_283935_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Leos$b;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Leos$b;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getSigil() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "display", "method_51557", "getSigil", "m_284377_"), "()Ljava/lang/String;");
    }

    static jobject getSigil(const jobject& obj) {
                
       const auto methodID = methodID_getSigil();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_LIGHT_LIGHTSTORAGE$STATUS_HPP