// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_WORLDCHUNK_HPP
#define NET_MINECRAFT_WORLD_CHUNK_WORLDCHUNK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.WorldChunk
 * Remapped: dvi
 */
namespace WorldChunk {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dvi", "net/minecraft/world/level/chunk/LevelChunk", "net/minecraft/class_2818", "net/minecraft/world/chunk/WorldChunk", "net/minecraft/src/C_2137_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.world.chunk.WorldChunk#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "LOGGER", "field_12839", "LOGGER", "f_62771_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.world.chunk.WorldChunk#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "LOGGER", "field_12839", "LOGGER", "f_62771_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.chunk.WorldChunk#EMPTY_BLOCK_ENTITY_TICKER
    [[maybe_unused]] static jobject get_field_EMPTY_BLOCK_ENTITY_TICKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "NULL_TICKER", "field_27221", "EMPTY_BLOCK_ENTITY_TICKER", "f_156361_"), "Ldsa;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.WorldChunk#EMPTY_BLOCK_ENTITY_TICKER
    [[maybe_unused]] static void set_field_EMPTY_BLOCK_ENTITY_TICKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "NULL_TICKER", "field_27221", "EMPTY_BLOCK_ENTITY_TICKER", "f_156361_"), "Ldsa;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.WorldChunk#blockEntityTickers
    static jobject get_field_blockEntityTickers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "tickersInLevel", "field_27222", "blockEntityTickers", "f_156362_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.WorldChunk#blockEntityTickers
    static void set_field_blockEntityTickers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "tickersInLevel", "field_27222", "blockEntityTickers", "f_156362_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.WorldChunk#loadedToWorld
    static jboolean get_field_loadedToWorld(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "loaded", "field_12855", "loadedToWorld", "f_62775_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.WorldChunk#loadedToWorld
    static void set_field_loadedToWorld(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "loaded", "field_12855", "loadedToWorld", "f_62775_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.chunk.WorldChunk#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "level", "field_12858", "world", "f_62776_"), "Ldcw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.chunk.WorldChunk#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "level", "field_12858", "world", "f_62776_"), "Ldcw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.WorldChunk#levelTypeProvider
    static jobject get_field_levelTypeProvider(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "fullStatus", "field_12856", "levelTypeProvider", "f_62790_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.WorldChunk#levelTypeProvider
    static void set_field_levelTypeProvider(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "fullStatus", "field_12856", "levelTypeProvider", "f_62790_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.WorldChunk#entityLoader
    static jobject get_field_entityLoader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "postLoad", "field_12850", "entityLoader", "f_62791_"), "Ldvi$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.WorldChunk#entityLoader
    static void set_field_entityLoader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "postLoad", "field_12850", "entityLoader", "f_62791_"), "Ldvi$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.WorldChunk#gameEventDispatchers
    static jobject get_field_gameEventDispatchers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "gameEventListenerRegistrySections", "field_28129", "gameEventDispatchers", "f_244451_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.WorldChunk#gameEventDispatchers
    static void set_field_gameEventDispatchers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "gameEventListenerRegistrySections", "field_28129", "gameEventDispatchers", "f_244451_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.WorldChunk#blockTickScheduler
    static jobject get_field_blockTickScheduler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "blockTicks", "field_35471", "blockTickScheduler", "f_62784_"), "Leyo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.WorldChunk#blockTickScheduler
    static void set_field_blockTickScheduler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "blockTicks", "field_35471", "blockTickScheduler", "f_62784_"), "Leyo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.WorldChunk#fluidTickScheduler
    static jobject get_field_fluidTickScheduler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "fluidTicks", "field_35472", "fluidTickScheduler", "f_187943_"), "Leyo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.WorldChunk#fluidTickScheduler
    static void set_field_fluidTickScheduler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "fluidTicks", "field_35472", "fluidTickScheduler", "f_187943_"), "Leyo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getBlockTickScheduler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getBlockTicks", "method_12013", "getBlockTickScheduler", "m_183531_"), "()Leyw;");
    }

    static jobject getBlockTickScheduler(const jobject& obj) {
                
       const auto methodID = methodID_getBlockTickScheduler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFluidTickScheduler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getFluidTicks", "method_12014", "getFluidTickScheduler", "m_183526_"), "()Leyw;");
    }

    static jobject getFluidTickScheduler(const jobject& obj) {
                
       const auto methodID = methodID_getFluidTickScheduler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTickSchedulers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getTicksForSerialization", "method_39296", "getTickSchedulers", "m_183568_"), "()Lduy$a;");
    }

    static jobject getTickSchedulers(const jobject& obj) {
                
       const auto methodID = methodID_getTickSchedulers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGameEventDispatcher() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getListenerRegistry", "method_32914", "getGameEventDispatcher", "m_246686_"), "(I)Ldyc;");
    }

    static jobject getGameEventDispatcher(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getGameEventDispatcher();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "getBlockState", "method_8320", "getBlockState", "m_8055_"), "(Ljd;)Ldtc;");
    }

    static jobject getBlockState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBlockState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFluidState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b_", "getFluidState", "method_8316", "getFluidState", "m_6425_"), "(Ljd;)Lepe;");
    }

    static jobject getFluidState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFluidState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getFluidState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getFluidState", "method_12234", "getFluidState", "m_62814_"), "(III)Lepe;");
    }

    static jobject _getFluidState(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID__getFluidState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlockState", "method_12010", "setBlockState", "m_6978_"), "(Ljd;Ldtc;Z)Ldtc;");
    }

    static jobject setBlockState(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_setBlockState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addEntity", "method_12002", "addEntity", "m_6286_"), "(Lbsr;)V");
    }

    static void addEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "createBlockEntity", "method_12208", "createBlockEntity", "m_62934_"), "(Ljd;)Ldqh;");
    }

    static jobject createBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createBlockEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c_", "getBlockEntity", "method_8321", "getBlockEntity", "m_7702_"), "(Ljd;)Ldqh;");
    }

    static jobject getBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBlockEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlockEntity", "method_12201", "getBlockEntity", "m_5685_"), "(Ljd;Ldvi$b;)Ldqh;");
    }

    static jobject _getBlockEntity(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__getBlockEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAndRegisterBlockEntity", "method_12216", "addBlockEntity", "m_142170_"), "(Ldqh;)V");
    }

    static void addBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addBlockEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canTickBlockEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "isInLevel", "method_31715", "canTickBlockEntities", "m_156370_"), "()Z");
    }

    static jboolean canTickBlockEntities(const jobject& obj) {
                
       const auto methodID = methodID_canTickBlockEntities();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canTickBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "isTicking", "method_31724", "canTickBlockEntity", "m_156410_"), "(Ljd;)Z");
    }

    static jboolean canTickBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canTickBlockEntity();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlockEntity", "method_12007", "setBlockEntity", "m_142169_"), "(Ldqh;)V");
    }

    static void setBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setBlockEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPackedBlockEntityNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlockEntityNbtForSaving", "method_20598", "getPackedBlockEntityNbt", "m_8051_"), "(Ljd;Ljo$a;)Lub;");
    }

    static jobject getPackedBlockEntityNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getPackedBlockEntityNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_removeBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "removeBlockEntity", "method_12041", "removeBlockEntity", "m_8114_"), "(Ljd;)V");
    }

    static void removeBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeBlockEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeGameEventListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeGameEventListener", "method_32918", "removeGameEventListener", "m_223412_"), "(Ldqh;Laqu;)V");
    }

    static void removeGameEventListener(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_removeGameEventListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_removeGameEventDispatcher() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "removeGameEventListenerRegistry", "method_51382", "removeGameEventDispatcher", "m_280642_"), "(I)V");
    }

    static void removeGameEventDispatcher(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_removeGameEventDispatcher();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeBlockEntityTicker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "removeBlockEntityTicker", "method_31725", "removeBlockEntityTicker", "m_156412_"), "(Ljd;)V");
    }

    static void removeBlockEntityTicker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeBlockEntityTicker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_loadEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "runPostLoad", "method_12206", "loadEntities", "m_62952_"), "()V");
    }

    static void loadEntities(const jobject& obj) {
                
       const auto methodID = methodID_loadEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "isEmpty", "method_12223", "isEmpty", "m_6430_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadFromPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "replaceWithPacketData", "method_12224", "loadFromPacket", "m_187971_"), "(Lvw;Lub;Ljava/util/function/Consumer;)V");
    }

    static void loadFromPacket(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_loadFromPacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_loadBiomeFromPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "replaceBiomes", "method_49525", "loadBiomeFromPacket", "m_274381_"), "(Lvw;)V");
    }

    static void loadBiomeFromPacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadBiomeFromPacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setLoadedToWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setLoaded", "method_12226", "setLoadedToWorld", "m_62913_"), "(Z)V");
    }

    static void setLoadedToWorld(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setLoadedToWorld();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "getLevel", "method_12200", "getWorld", "m_62953_"), "()Ldcw;");
    }

    static jobject getWorld(const jobject& obj) {
                
       const auto methodID = methodID_getWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "getBlockEntities", "method_12214", "getBlockEntities", "m_62954_"), "()Ljava/util/Map;");
    }

    static jobject getBlockEntities(const jobject& obj) {
                
       const auto methodID = methodID_getBlockEntities();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_runPostProcessing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "postProcessGeneration", "method_12221", "runPostProcessing", "m_62812_"), "()V");
    }

    static void runPostProcessing(const jobject& obj) {
                
       const auto methodID = methodID_runPostProcessing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "promotePendingBlockEntity", "method_12204", "loadBlockEntity", "m_62870_"), "(Ljd;Lub;)Ldqh;");
    }

    static jobject loadBlockEntity(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_loadBlockEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_disableTickSchedulers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "unpackTicks", "method_20530", "disableTickSchedulers", "m_187985_"), "(J)V");
    }

    static void disableTickSchedulers(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_disableTickSchedulers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addChunkTickSchedulers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "registerTickContainerInLevel", "method_39305", "addChunkTickSchedulers", "m_187958_"), "(Laqu;)V");
    }

    static void addChunkTickSchedulers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addChunkTickSchedulers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeChunkTickSchedulers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "unregisterTickContainerFromLevel", "method_39306", "removeChunkTickSchedulers", "m_187979_"), "(Laqu;)V");
    }

    static void removeChunkTickSchedulers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeChunkTickSchedulers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getPersistedStatus", "method_12009", "getStatus", "m_6415_"), "()Ldvz;");
    }

    static jobject getStatus(const jobject& obj) {
                
       const auto methodID = methodID_getStatus();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLevelType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "getFullStatus", "method_12225", "getLevelType", "m_287138_"), "()Laql;");
    }

    static jobject getLevelType(const jobject& obj) {
                
       const auto methodID = methodID_getLevelType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setLevelTypeProvider() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setFullStatus", "method_12207", "setLevelTypeProvider", "m_62879_"), "(Ljava/util/function/Supplier;)V");
    }

    static void setLevelTypeProvider(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setLevelTypeProvider();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "clearAllBlockEntities", "method_38289", "clear", "m_187957_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateAllBlockEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "registerAllBlockEntitiesAfterLevelLoad", "method_31713", "updateAllBlockEntities", "m_156369_"), "()V");
    }

    static void updateAllBlockEntities(const jobject& obj) {
                
       const auto methodID = methodID_updateAllBlockEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateGameEventListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addGameEventListener", "method_32919", "updateGameEventListener", "m_223415_"), "(Ldqh;Laqu;)V");
    }

    static void updateGameEventListener(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_updateGameEventListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateTicker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "updateBlockEntityTicker", "method_31723", "updateTicker", "m_156406_"), "(Ldqh;)V");
    }

    static void updateTicker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateTicker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_wrapTicker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTicker", "method_31718", "wrapTicker", "m_156375_"), "(Ldqh;Ldqi;)Ldsa;");
    }

    static jobject wrapTicker(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_wrapTicker();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_WORLDCHUNK_HPP