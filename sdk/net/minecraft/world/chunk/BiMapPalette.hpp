// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_BIMAPPALETTE_HPP
#define NET_MINECRAFT_WORLD_CHUNK_BIMAPPALETTE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.BiMapPalette
 * Remapped: dvg
 */
namespace BiMapPalette {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dvg", "net/minecraft/world/level/chunk/HashMapPalette", "net/minecraft/class_2814", "net/minecraft/world/chunk/BiMapPalette", "net/minecraft/src/C_2135_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.chunk.BiMapPalette#idList
    static jobject get_field_idList(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "registry", "field_12821", "idList", "f_62657_"), "Ljr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.BiMapPalette#idList
    static void set_field_idList(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "registry", "field_12821", "idList", "f_62657_"), "Ljr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.BiMapPalette#map
    static jobject get_field_map(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "values", "field_12824", "map", "f_62658_"), "Laxk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.BiMapPalette#map
    static void set_field_map(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "values", "field_12824", "map", "f_62658_"), "Laxk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.BiMapPalette#listener
    static jobject get_field_listener(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "resizeHandler", "field_12825", "listener", "f_62659_"), "Ldvp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.BiMapPalette#listener
    static void set_field_listener(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "resizeHandler", "field_12825", "listener", "f_62659_"), "Ldvp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.BiMapPalette#indexBits
    static jint get_field_indexBits(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "bits", "field_12822", "indexBits", "f_62662_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.BiMapPalette#indexBits
    static void set_field_indexBits(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "bits", "field_12822", "indexBits", "f_62662_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_38287", "create", "m_187912_"), "(ILjr;Ldvp;Ljava/util/List;)Ldvo;");
    }

    static jobject create(const jint& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_index() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "idFor", "method_12291", "index", "m_6796_"), "(Ljava/lang/Object;)I");
    }

    static jint index(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_index();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasAny() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "maybeHas", "method_19525", "hasAny", "m_6419_"), "(Ljava/util/function/Predicate;)Z");
    }

    static jboolean hasAny(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_hasAny();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "valueFor", "method_12288", "get", "m_5795_"), "(I)Ljava/lang/Object;");
    }

    static jobject get(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "read", "method_12289", "readPacket", "m_5680_"), "(Lvw;)V");
    }

    static void readPacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readPacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writePacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "write", "method_12287", "writePacket", "m_5678_"), "(Lvw;)V");
    }

    static void writePacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writePacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPacketSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSerializedSize", "method_12290", "getPacketSize", "m_6429_"), "()I");
    }

    static jint getPacketSize(const jobject& obj) {
                
       const auto methodID = methodID_getPacketSize();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getElements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getEntries", "method_38288", "getElements", "m_187917_"), "()Ljava/util/List;");
    }

    static jobject getElements(const jobject& obj) {
                
       const auto methodID = methodID_getElements();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSize", "method_12197", "getSize", "m_62680_"), "()I");
    }

    static jint getSize(const jobject& obj) {
                
       const auto methodID = methodID_getSize();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "copy", "method_39956", "copy", "m_199814_"), "()Ldvo;");
    }

    static jobject copy(const jobject& obj) {
                
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_BIMAPPALETTE_HPP