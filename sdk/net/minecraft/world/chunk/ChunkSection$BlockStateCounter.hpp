// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_CHUNKSECTION$BLOCKSTATECOUNTER_HPP
#define NET_MINECRAFT_WORLD_CHUNK_CHUNKSECTION$BLOCKSTATECOUNTER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.ChunkSection$BlockStateCounter
 * Remapped: dvj$a
 */
namespace ChunkSection$BlockStateCounter {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dvj$a", "net/minecraft/world/level/chunk/LevelChunkSection$1BlockCounter", "net/minecraft/class_2826$class_6869", "net/minecraft/world/chunk/ChunkSection$BlockStateCounter", "net/minecraft/src/C_2139_$C_203216_"));
        }
        return cachedClass;
    };

    // getter for public field net.minecraft.world.chunk.ChunkSection$BlockStateCounter#nonEmptyBlockCount
    static jint get_field_nonEmptyBlockCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "nonEmptyBlockCount", "field_36408", "nonEmptyBlockCount", "f_204437_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.ChunkSection$BlockStateCounter#nonEmptyBlockCount
    static void set_field_nonEmptyBlockCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "nonEmptyBlockCount", "field_36408", "nonEmptyBlockCount", "f_204437_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.chunk.ChunkSection$BlockStateCounter#randomTickableBlockCount
    static jint get_field_randomTickableBlockCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "tickingBlockCount", "field_36409", "randomTickableBlockCount", "f_204438_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.ChunkSection$BlockStateCounter#randomTickableBlockCount
    static void set_field_randomTickableBlockCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "tickingBlockCount", "field_36409", "randomTickableBlockCount", "f_204438_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.chunk.ChunkSection$BlockStateCounter#nonEmptyFluidCount
    static jint get_field_nonEmptyFluidCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "tickingFluidCount", "field_36410", "nonEmptyFluidCount", "f_204439_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.ChunkSection$BlockStateCounter#nonEmptyFluidCount
    static void set_field_nonEmptyFluidCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "tickingFluidCount", "field_36410", "nonEmptyFluidCount", "f_204439_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_accept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "accept", "method_40155", "accept", "m_63144_"), "(Ldtc;I)V");
    }

    static void accept(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_accept();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_CHUNKSECTION$BLOCKSTATECOUNTER_HPP