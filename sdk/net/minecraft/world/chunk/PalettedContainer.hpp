// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_PALETTEDCONTAINER_HPP
#define NET_MINECRAFT_WORLD_CHUNK_PALETTEDCONTAINER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.PalettedContainer
 * Remapped: dvq
 */
namespace PalettedContainer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dvq", "net/minecraft/world/level/chunk/PalettedContainer", "net/minecraft/class_2841", "net/minecraft/world/chunk/PalettedContainer", "net/minecraft/src/C_2145_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.chunk.PalettedContainer#field_34557
    [[maybe_unused]] static jint get_field_field_34557() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MIN_PALETTE_BITS", "field_34557", "field_34557", "f_188031_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.PalettedContainer#field_34557
    [[maybe_unused]] static void set_field_field_34557(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MIN_PALETTE_BITS", "field_34557", "field_34557", "f_188031_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.PalettedContainer#dummyListener
    static jobject get_field_dummyListener(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "dummyPaletteResize", "field_34558", "dummyListener", "f_63070_"), "Ldvp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.PalettedContainer#dummyListener
    static void set_field_dummyListener(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "dummyPaletteResize", "field_34558", "dummyListener", "f_63070_"), "Ldvp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.PalettedContainer#idList
    static jobject get_field_idList(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "registry", "field_34559", "idList", "f_63071_"), "Ljr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.PalettedContainer#idList
    static void set_field_idList(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "registry", "field_34559", "idList", "f_63071_"), "Ljr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.PalettedContainer#data
    static jobject get_field_data(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "data", "field_34560", "data", "f_188032_"), "Ldvq$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.PalettedContainer#data
    static void set_field_data(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "data", "field_34560", "data", "f_188032_"), "Ldvq$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.PalettedContainer#paletteProvider
    static jobject get_field_paletteProvider(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "strategy", "field_34561", "paletteProvider", "f_188033_"), "Ldvq$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.PalettedContainer#paletteProvider
    static void set_field_paletteProvider(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "strategy", "field_34561", "paletteProvider", "f_188033_"), "Ldvq$d;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.PalettedContainer#lockHelper
    static jobject get_field_lockHelper(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "threadingDetector", "field_36300", "lockHelper", "f_199441_"), "Lazn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.PalettedContainer#lockHelper
    static void set_field_lockHelper(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "threadingDetector", "field_36300", "lockHelper", "f_199441_"), "Lazn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_lock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "acquire", "method_12334", "lock", "m_63084_"), "()V");
    }

    static void lock(const jobject& obj) {
                
       const auto methodID = methodID_lock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_unlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "release", "method_12335", "unlock", "m_63120_"), "()V");
    }

    static void unlock(const jobject& obj) {
                
       const auto methodID = methodID_unlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createPalettedContainerCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "codecRW", "method_44343", "createPalettedContainerCodec", "m_238371_"), "(Ljr;Lcom/mojang/serialization/Codec;Ldvq$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;");
    }

    static jobject createPalettedContainerCodec(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createPalettedContainerCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createReadableContainerCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "codecRO", "method_44347", "createReadableContainerCodec", "m_238418_"), "(Ljr;Lcom/mojang/serialization/Codec;Ldvq$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;");
    }

    static jobject createReadableContainerCodec(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createReadableContainerCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "codec", "method_38298", "createCodec", "m_238427_"), "(Ljr;Lcom/mojang/serialization/Codec;Ldvq$d;Ljava/lang/Object;Ldvr$b;)Lcom/mojang/serialization/Codec;");
    }

    static jobject createCodec(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_createCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getCompatibleData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createOrReuseData", "method_38297", "getCompatibleData", "m_188051_"), "(Ldvq$c;I)Ldvq$c;");
    }

    static jobject getCompatibleData(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_getCompatibleData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onResize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("onResize", "onResize", "onResize", "onResize", "m_7248_"), "(ILjava/lang/Object;)I");
    }

    static jint onResize(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onResize();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_swap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAndSet", "method_12328", "swap", "m_63091_"), "(IIILjava/lang/Object;)Ljava/lang/Object;");
    }

    static jobject swap(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_swap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_swapUnsafe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getAndSetUnchecked", "method_16678", "swapUnsafe", "m_63127_"), "(IIILjava/lang/Object;)Ljava/lang/Object;");
    }

    static jobject swapUnsafe(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_swapUnsafe();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__swap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAndSet", "method_12336", "swap", "m_63096_"), "(ILjava/lang/Object;)Ljava/lang/Object;");
    }

    static jobject _swap(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__swap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "set", "method_35321", "set", "m_156470_"), "(IIILjava/lang/Object;)V");
    }

    static void set(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_set();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "set", "method_12322", "set", "m_63132_"), "(ILjava/lang/Object;)V");
    }

    static void _set(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__set();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_12321", "get", "m_63087_"), "(III)Ljava/lang/Object;");
    }

    static jobject get(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_12331", "get", "m_63085_"), "(I)Ljava/lang/Object;");
    }

    static jobject _get(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_forEachValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAll", "method_39793", "forEachValue", "m_196879_"), "(Ljava/util/function/Consumer;)V");
    }

    static void forEachValue(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEachValue();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "read", "method_12326", "readPacket", "m_63118_"), "(Lvw;)V");
    }

    static void readPacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readPacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writePacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "write", "method_12325", "writePacket", "m_63135_"), "(Lvw;)V");
    }

    static void writePacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writePacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_read() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "unpack", "method_44346", "read", "m_188067_"), "(Ljr;Ldvq$d;Ldvr$a;)Lcom/mojang/serialization/DataResult;");
    }

    static jobject read(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_read();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_serialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pack", "method_44345", "serialize", "m_188064_"), "(Ljr;Ldvq$d;)Ldvr$a;");
    }

    static jobject serialize(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_serialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_applyEach() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "swapPalette", "method_39894", "applyEach", "m_198189_"), "([ILjava/util/function/IntUnaryOperator;)V");
    }

    static void applyEach(const jarray& arg0, const jint& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_applyEach();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getPacketSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getSerializedSize", "method_12327", "getPacketSize", "m_63137_"), "()I");
    }

    static jint getPacketSize(const jobject& obj) {
                
       const auto methodID = methodID_getPacketSize();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasAny() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "maybeHas", "method_19526", "hasAny", "m_63109_"), "(Ljava/util/function/Predicate;)Z");
    }

    static jboolean hasAny(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_hasAny();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "copy", "method_39957", "copy", "m_199931_"), "()Ldvq;");
    }

    static jobject copy(const jobject& obj) {
                
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_slice() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "recreate", "method_44350", "slice", "m_238334_"), "()Ldvq;");
    }

    static jobject slice(const jobject& obj) {
                
       const auto methodID = methodID_slice();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_count() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "count", "method_21732", "count", "m_63099_"), "(Ldvq$b;)V");
    }

    static void count(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_count();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_PALETTEDCONTAINER_HPP