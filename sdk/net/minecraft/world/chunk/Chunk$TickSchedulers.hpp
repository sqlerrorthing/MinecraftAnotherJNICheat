// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_CHUNK$TICKSCHEDULERS_HPP
#define NET_MINECRAFT_WORLD_CHUNK_CHUNK$TICKSCHEDULERS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.Chunk$TickSchedulers
 * Remapped: duy$a
 */
namespace Chunk$TickSchedulers {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("duy$a", "net/minecraft/world/level/chunk/ChunkAccess$TicksToSave", "net/minecraft/class_2791$class_6745", "net/minecraft/world/chunk/Chunk$TickSchedulers", "net/minecraft/src/C_2116_$C_182876_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.chunk.Chunk$TickSchedulers#blocks
    static jobject get_field_blocks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "blocks", "comp_239", "blocks", "f_187680_"), "Leyu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.Chunk$TickSchedulers#blocks
    static void set_field_blocks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "blocks", "comp_239", "blocks", "f_187680_"), "Leyu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.Chunk$TickSchedulers#fluids
    static jobject get_field_fluids(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "fluids", "comp_240", "fluids", "f_187681_"), "Leyu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.Chunk$TickSchedulers#fluids
    static void set_field_fluids(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "fluids", "comp_240", "fluids", "f_187681_"), "Leyu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID__blocks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "blocks", "comp_239", "blocks", "f_187680_"), "()Leyu;");
    }

    static jobject _blocks(const jobject& obj) {
                
       const auto methodID = methodID__blocks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__fluids() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "fluids", "comp_240", "fluids", "f_187681_"), "()Leyu;");
    }

    static jobject _fluids(const jobject& obj) {
                
       const auto methodID = methodID__fluids();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_CHUNK$TICKSCHEDULERS_HPP