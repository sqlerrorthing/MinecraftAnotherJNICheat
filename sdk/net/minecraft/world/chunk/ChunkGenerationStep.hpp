// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_CHUNKGENERATIONSTEP_HPP
#define NET_MINECRAFT_WORLD_CHUNK_CHUNKGENERATIONSTEP_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.ChunkGenerationStep
 * Remapped: dwc
 */
namespace ChunkGenerationStep {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dwc", "net/minecraft/world/level/chunk/status/ChunkStep", "net/minecraft/class_9770", "net/minecraft/world/chunk/ChunkGenerationStep", "net/minecraft/src/C_336565_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.world.chunk.ChunkGenerationStep#targetStatus
    static jobject get_field_targetStatus(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "targetStatus", "comp_2803", "targetStatus", "f_337059_"), "Ldvz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.chunk.ChunkGenerationStep#targetStatus
    static void set_field_targetStatus(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "targetStatus", "comp_2803", "targetStatus", "f_337059_"), "Ldvz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.ChunkGenerationStep#directDependencies
    static jobject get_field_directDependencies(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "directDependencies", "comp_2804", "directDependencies", "f_337439_"), "Ldvx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.ChunkGenerationStep#directDependencies
    static void set_field_directDependencies(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "directDependencies", "comp_2804", "directDependencies", "f_337439_"), "Ldvx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.chunk.ChunkGenerationStep#accumulatedDependencies
    static jobject get_field_accumulatedDependencies(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "accumulatedDependencies", "comp_2805", "accumulatedDependencies", "f_337162_"), "Ldvx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.chunk.ChunkGenerationStep#accumulatedDependencies
    static void set_field_accumulatedDependencies(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "accumulatedDependencies", "comp_2805", "accumulatedDependencies", "f_337162_"), "Ldvx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.ChunkGenerationStep#blockStateWriteRadius
    static jint get_field_blockStateWriteRadius(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "blockStateWriteRadius", "comp_2806", "blockStateWriteRadius", "f_337725_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.ChunkGenerationStep#blockStateWriteRadius
    static void set_field_blockStateWriteRadius(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "blockStateWriteRadius", "comp_2806", "blockStateWriteRadius", "f_337725_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.ChunkGenerationStep#task
    static jobject get_field_task(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "task", "comp_2807", "task", "f_336610_"), "Ldwa;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.ChunkGenerationStep#task
    static void set_field_task(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "task", "comp_2807", "task", "f_336610_"), "Ldwa;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getAdditionalLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAccumulatedRadiusOf", "method_60559", "getAdditionalLevel", "m_340555_"), "(Ldvz;)I");
    }

    static jint getAdditionalLevel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAdditionalLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_60560", "run", "m_338624_"), "(Ldwe;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject run(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_run();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_finalizeGeneration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "completeChunkGeneration", "method_60558", "finalizeGeneration", "m_338963_"), "(Lduy;Lbno;)Lduy;");
    }

    static jobject finalizeGeneration(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_finalizeGeneration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__targetStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "targetStatus", "comp_2803", "targetStatus", "f_337059_"), "()Ldvz;");
    }

    static jobject _targetStatus(const jobject& obj) {
                
       const auto methodID = methodID__targetStatus();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__directDependencies() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "directDependencies", "comp_2804", "directDependencies", "f_337439_"), "()Ldvx;");
    }

    static jobject _directDependencies(const jobject& obj) {
                
       const auto methodID = methodID__directDependencies();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__accumulatedDependencies() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "accumulatedDependencies", "comp_2805", "accumulatedDependencies", "f_337162_"), "()Ldvx;");
    }

    static jobject _accumulatedDependencies(const jobject& obj) {
                
       const auto methodID = methodID__accumulatedDependencies();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__blockStateWriteRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "blockStateWriteRadius", "comp_2806", "blockStateWriteRadius", "f_337725_"), "()I");
    }

    static jint _blockStateWriteRadius(const jobject& obj) {
                
       const auto methodID = methodID__blockStateWriteRadius();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__task() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "task", "comp_2807", "task", "f_336610_"), "()Ldwa;");
    }

    static jobject _task(const jobject& obj) {
                
       const auto methodID = methodID__task();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_CHUNKGENERATIONSTEP_HPP