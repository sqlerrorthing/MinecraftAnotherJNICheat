// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_PALETTEDCONTAINER$PALETTEPROVIDER_HPP
#define NET_MINECRAFT_WORLD_CHUNK_PALETTEDCONTAINER$PALETTEPROVIDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.PalettedContainer$PaletteProvider
 * Remapped: dvq$d
 */
namespace PalettedContainer$PaletteProvider {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dvq$d", "net/minecraft/world/level/chunk/PalettedContainer$Strategy", "net/minecraft/class_2841$class_6563", "net/minecraft/world/chunk/PalettedContainer$PaletteProvider", "net/minecraft/src/C_2145_$C_182882_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#SINGULAR
    [[maybe_unused]] static jobject get_field_SINGULAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SINGLE_VALUE_PALETTE_FACTORY", "field_34566", "SINGULAR", "f_188134_"), "Ldvo$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#SINGULAR
    [[maybe_unused]] static void set_field_SINGULAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SINGLE_VALUE_PALETTE_FACTORY", "field_34566", "SINGULAR", "f_188134_"), "Ldvo$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#ARRAY
    [[maybe_unused]] static jobject get_field_ARRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LINEAR_PALETTE_FACTORY", "field_34567", "ARRAY", "f_188135_"), "Ldvo$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#ARRAY
    [[maybe_unused]] static void set_field_ARRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LINEAR_PALETTE_FACTORY", "field_34567", "ARRAY", "f_188135_"), "Ldvo$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#BI_MAP
    [[maybe_unused]] static jobject get_field_BI_MAP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "HASHMAP_PALETTE_FACTORY", "field_34568", "BI_MAP", "f_188136_"), "Ldvo$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#BI_MAP
    [[maybe_unused]] static void set_field_BI_MAP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "HASHMAP_PALETTE_FACTORY", "field_34568", "BI_MAP", "f_188136_"), "Ldvo$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#ID_LIST
    [[maybe_unused]] static jobject get_field_ID_LIST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "GLOBAL_PALETTE_FACTORY", "field_34571", "ID_LIST", "f_188139_"), "Ldvo$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#ID_LIST
    [[maybe_unused]] static void set_field_ID_LIST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "GLOBAL_PALETTE_FACTORY", "field_34571", "ID_LIST", "f_188139_"), "Ldvo$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#BLOCK_STATE
    [[maybe_unused]] static jobject get_field_BLOCK_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SECTION_STATES", "field_34569", "BLOCK_STATE", "f_188137_"), "Ldvq$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#BLOCK_STATE
    [[maybe_unused]] static void set_field_BLOCK_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SECTION_STATES", "field_34569", "BLOCK_STATE", "f_188137_"), "Ldvq$d;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#BIOME
    [[maybe_unused]] static jobject get_field_BIOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SECTION_BIOMES", "field_34570", "BIOME", "f_188138_"), "Ldvq$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#BIOME
    [[maybe_unused]] static void set_field_BIOME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SECTION_BIOMES", "field_34570", "BIOME", "f_188138_"), "Ldvq$d;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#edgeBits
    static jint get_field_edgeBits(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "sizeBits", "field_34572", "edgeBits", "f_188140_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.PalettedContainer$PaletteProvider#edgeBits
    static void set_field_edgeBits(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "sizeBits", "field_34572", "edgeBits", "f_188140_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getContainerSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "size", "method_38312", "getContainerSize", "m_188144_"), "()I");
    }

    static jint getContainerSize(const jobject& obj) {
                
       const auto methodID = methodID_getContainerSize();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_computeIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getIndex", "method_38313", "computeIndex", "m_188145_"), "(III)I");
    }

    static jint computeIndex(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_computeIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createDataProvider() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getConfiguration", "method_38314", "createDataProvider", "m_183248_"), "(Ljr;I)Ldvq$a;");
    }

    static jobject createDataProvider(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_createDataProvider();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBits() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "calculateBitsForSerialization", "method_38315", "getBits", "m_188151_"), "(Ljr;I)I");
    }

    static jint getBits(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_getBits();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_PALETTEDCONTAINER$PALETTEPROVIDER_HPP