// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_WORLDCHUNK$CREATIONTYPE_HPP
#define NET_MINECRAFT_WORLD_CHUNK_WORLDCHUNK$CREATIONTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.WorldChunk$CreationType
 * Remapped: dvi$b
 */
namespace WorldChunk$CreationType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dvi$b", "net/minecraft/world/level/chunk/LevelChunk$EntityCreationType", "net/minecraft/class_2818$class_2819", "net/minecraft/world/chunk/WorldChunk$CreationType", "net/minecraft/src/C_2137_$C_2138_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.chunk.WorldChunk$CreationType#IMMEDIATE
    [[maybe_unused]] static jobject get_field_IMMEDIATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "IMMEDIATE", "field_12860", "IMMEDIATE", "IMMEDIATE"), "Ldvi$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.WorldChunk$CreationType#IMMEDIATE
    [[maybe_unused]] static void set_field_IMMEDIATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "IMMEDIATE", "field_12860", "IMMEDIATE", "IMMEDIATE"), "Ldvi$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.chunk.WorldChunk$CreationType#QUEUED
    [[maybe_unused]] static jobject get_field_QUEUED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "QUEUED", "field_12861", "QUEUED", "QUEUED"), "Ldvi$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.WorldChunk$CreationType#QUEUED
    [[maybe_unused]] static void set_field_QUEUED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "QUEUED", "field_12861", "QUEUED", "QUEUED"), "Ldvi$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.chunk.WorldChunk$CreationType#CHECK
    [[maybe_unused]] static jobject get_field_CHECK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CHECK", "field_12859", "CHECK", "CHECK"), "Ldvi$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.chunk.WorldChunk$CreationType#CHECK
    [[maybe_unused]] static void set_field_CHECK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CHECK", "field_12859", "CHECK", "CHECK"), "Ldvi$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Ldvi$b;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Ldvi$b;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_WORLDCHUNK$CREATIONTYPE_HPP