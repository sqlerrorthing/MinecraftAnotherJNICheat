// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNK_PROTOCHUNK_HPP
#define NET_MINECRAFT_WORLD_CHUNK_PROTOCHUNK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.chunk.ProtoChunk
 * Remapped: dvs
 */
namespace ProtoChunk {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dvs", "net/minecraft/world/level/chunk/ProtoChunk", "net/minecraft/class_2839", "net/minecraft/world/chunk/ProtoChunk", "net/minecraft/src/C_2147_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.chunk.ProtoChunk#lightingProvider
    static jobject get_field_lightingProvider(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "lightEngine", "field_17105", "lightingProvider", "f_63151_"), "Leot;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.ProtoChunk#lightingProvider
    static void set_field_lightingProvider(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "lightEngine", "field_17105", "lightingProvider", "f_63151_"), "Leot;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.ProtoChunk#status
    static jobject get_field_status(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "status", "field_12918", "status", "f_63153_"), "Ldvz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.ProtoChunk#status
    static void set_field_status(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "status", "field_12918", "status", "f_63153_"), "Ldvz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.ProtoChunk#entities
    static jobject get_field_entities(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "entities", "field_12929", "entities", "f_63157_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.ProtoChunk#entities
    static void set_field_entities(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "entities", "field_12929", "entities", "f_63157_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.ProtoChunk#carvingMasks
    static jobject get_field_carvingMasks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "carvingMasks", "field_12926", "carvingMasks", "f_63166_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.ProtoChunk#carvingMasks
    static void set_field_carvingMasks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "carvingMasks", "field_12926", "carvingMasks", "f_63166_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.ProtoChunk#belowZeroRetrogen
    static jobject get_field_belowZeroRetrogen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "belowZeroRetrogen", "field_35473", "belowZeroRetrogen", "f_188164_"), "Ldym;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.ProtoChunk#belowZeroRetrogen
    static void set_field_belowZeroRetrogen(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "belowZeroRetrogen", "field_35473", "belowZeroRetrogen", "f_188164_"), "Ldym;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.ProtoChunk#blockTickScheduler
    static jobject get_field_blockTickScheduler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "blockTicks", "field_35474", "blockTickScheduler", "f_63163_"), "Leyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.ProtoChunk#blockTickScheduler
    static void set_field_blockTickScheduler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "blockTicks", "field_35474", "blockTickScheduler", "f_63163_"), "Leyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.chunk.ProtoChunk#fluidTickScheduler
    static jobject get_field_fluidTickScheduler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "fluidTicks", "field_35475", "fluidTickScheduler", "f_188165_"), "Leyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.chunk.ProtoChunk#fluidTickScheduler
    static void set_field_fluidTickScheduler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "fluidTicks", "field_35475", "fluidTickScheduler", "f_188165_"), "Leyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getBlockTickScheduler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getBlockTicks", "method_12013", "getBlockTickScheduler", "m_183531_"), "()Leyw;");
    }

    static jobject getBlockTickScheduler(const jobject& obj) {
                
       const auto methodID = methodID_getBlockTickScheduler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFluidTickScheduler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getFluidTicks", "method_12014", "getFluidTickScheduler", "m_183526_"), "()Leyw;");
    }

    static jobject getFluidTickScheduler(const jobject& obj) {
                
       const auto methodID = methodID_getFluidTickScheduler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTickSchedulers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getTicksForSerialization", "method_39296", "getTickSchedulers", "m_183568_"), "()Lduy$a;");
    }

    static jobject getTickSchedulers(const jobject& obj) {
                
       const auto methodID = methodID_getTickSchedulers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "getBlockState", "method_8320", "getBlockState", "m_8055_"), "(Ljd;)Ldtc;");
    }

    static jobject getBlockState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBlockState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFluidState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b_", "getFluidState", "method_8316", "getFluidState", "m_6425_"), "(Ljd;)Lepe;");
    }

    static jobject getFluidState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFluidState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlockState", "method_12010", "setBlockState", "m_6978_"), "(Ljd;Ldtc;Z)Ldtc;");
    }

    static jobject setBlockState(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_setBlockState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlockEntity", "method_12007", "setBlockEntity", "m_142169_"), "(Ldqh;)V");
    }

    static void setBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setBlockEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c_", "getBlockEntity", "method_8321", "getBlockEntity", "m_7702_"), "(Ljd;)Ldqh;");
    }

    static jobject getBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBlockEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBlockEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "getBlockEntities", "method_12309", "getBlockEntities", "m_63292_"), "()Ljava/util/Map;");
    }

    static jobject getBlockEntities(const jobject& obj) {
                
       const auto methodID = methodID_getBlockEntities();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addEntity", "method_12302", "addEntity", "m_63242_"), "(Lub;)V");
    }

    static void addEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__addEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addEntity", "method_12002", "addEntity", "m_6286_"), "(Lbsr;)V");
    }

    static void _addEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__addEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setStructureStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setStartForStructure", "method_12184", "setStructureStart", "m_213792_"), "(Lejr;Lejz;)V");
    }

    static void setStructureStart(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setStructureStart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "getEntities", "method_12295", "getEntities", "m_63293_"), "()Ljava/util/List;");
    }

    static jobject getEntities(const jobject& obj) {
                
       const auto methodID = methodID_getEntities();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getPersistedStatus", "method_12009", "getStatus", "m_6415_"), "()Ldvz;");
    }

    static jobject getStatus(const jobject& obj) {
                
       const auto methodID = methodID_getStatus();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPersistedStatus", "method_12308", "setStatus", "m_7150_"), "(Ldvz;)V");
    }

    static void setStatus(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBiomeForNoiseGen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getNoiseBiome", "getNoiseBiome", "method_16359", "getBiomeForNoiseGen", "m_203495_"), "(III)Ljm;");
    }

    static jobject getBiomeForNoiseGen(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_getBiomeForNoiseGen();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getPackedSectionRelative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "packOffsetCoordinates", "method_12300", "getPackedSectionRelative", "m_63280_"), "(Ljd;)S");
    }

    static jshort getPackedSectionRelative(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getPackedSectionRelative();
       return MinecraftSDK::env->CallStaticShortMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_joinBlockPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "unpackOffsetCoordinates", "method_12314", "joinBlockPos", "m_63227_"), "(SILdcd;)Ljd;");
    }

    static jobject joinBlockPos(const jshort& arg0, const jint& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_joinBlockPos();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_markBlockForPostProcessing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "markPosForPostprocessing", "method_12039", "markBlockForPostProcessing", "m_8113_"), "(Ljd;)V");
    }

    static void markBlockForPostProcessing(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_markBlockForPostProcessing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__markBlockForPostProcessing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPackedPostProcess", "method_12029", "markBlockForPostProcessing", "m_6561_"), "(SI)V");
    }

    static void _markBlockForPostProcessing(const jobject& obj, const jshort& arg0, const jint& arg1) {
                
       const auto methodID = methodID__markBlockForPostProcessing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBlockEntityNbts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "getBlockEntityNbts", "method_12316", "getBlockEntityNbts", "m_63294_"), "()Ljava/util/Map;");
    }

    static jobject getBlockEntityNbts(const jobject& obj) {
                
       const auto methodID = methodID_getBlockEntityNbts();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPackedBlockEntityNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlockEntityNbtForSaving", "method_20598", "getPackedBlockEntityNbt", "m_8051_"), "(Ljd;Ljo$a;)Lub;");
    }

    static jobject getPackedBlockEntityNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getPackedBlockEntityNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_removeBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "removeBlockEntity", "method_12041", "removeBlockEntity", "m_8114_"), "(Ljd;)V");
    }

    static void removeBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeBlockEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCarvingMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getCarvingMask", "method_12025", "getCarvingMask", "m_183612_"), "(Ldyu$a;)Ldux;");
    }

    static jobject getCarvingMask(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getCarvingMask();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOrCreateCarvingMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getOrCreateCarvingMask", "method_28510", "getOrCreateCarvingMask", "m_183613_"), "(Ldyu$a;)Ldux;");
    }

    static jobject getOrCreateCarvingMask(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOrCreateCarvingMask();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setCarvingMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCarvingMask", "method_12307", "setCarvingMask", "m_188186_"), "(Ldyu$a;Ldux;)V");
    }

    static void setCarvingMask(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setCarvingMask();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setLightingProvider() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLightEngine", "method_17032", "setLightingProvider", "m_63209_"), "(Leot;)V");
    }

    static void setLightingProvider(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setLightingProvider();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setBelowZeroRetrogen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBelowZeroRetrogen", "method_39309", "setBelowZeroRetrogen", "m_188183_"), "(Ldym;)V");
    }

    static void setBelowZeroRetrogen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setBelowZeroRetrogen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBelowZeroRetrogen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getBelowZeroRetrogen", "method_39300", "getBelowZeroRetrogen", "m_183376_"), "()Ldym;");
    }

    static jobject getBelowZeroRetrogen(const jobject& obj) {
                
       const auto methodID = methodID_getBelowZeroRetrogen();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createProtoTickScheduler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "unpackTicks", "method_39310", "createProtoTickScheduler", "m_188189_"), "(Leyr;)Leyo;");
    }

    static jobject createProtoTickScheduler(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createProtoTickScheduler();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getBlockProtoTickScheduler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "unpackBlockTicks", "method_39307", "getBlockProtoTickScheduler", "m_188181_"), "()Leyo;");
    }

    static jobject getBlockProtoTickScheduler(const jobject& obj) {
                
       const auto methodID = methodID_getBlockProtoTickScheduler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFluidProtoTickScheduler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "unpackFluidTicks", "method_39308", "getFluidProtoTickScheduler", "m_188182_"), "()Leyo;");
    }

    static jobject getFluidProtoTickScheduler(const jobject& obj) {
                
       const auto methodID = methodID_getFluidProtoTickScheduler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeightLimitView() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "getHeightAccessorForGeneration", "method_39460", "getHeightLimitView", "m_183618_"), "()Ldcy;");
    }

    static jobject getHeightLimitView(const jobject& obj) {
                
       const auto methodID = methodID_getHeightLimitView();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNK_PROTOCHUNK_HPP