// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_CHUNKSERIALIZER_HPP
#define NET_MINECRAFT_WORLD_CHUNKSERIALIZER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.ChunkSerializer
 * Remapped: dwi
 */
namespace ChunkSerializer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dwi", "net/minecraft/world/level/chunk/storage/ChunkSerializer", "net/minecraft/class_2852", "net/minecraft/world/ChunkSerializer", "net/minecraft/src/C_2158_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.ChunkSerializer#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "BLOCK_STATE_CODEC", "field_34576", "CODEC", "f_188227_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.ChunkSerializer#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "BLOCK_STATE_CODEC", "field_34576", "CODEC", "f_188227_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.ChunkSerializer#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "LOGGER", "field_13001", "LOGGER", "f_63449_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.ChunkSerializer#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "LOGGER", "field_13001", "LOGGER", "f_63449_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.ChunkSerializer#UPGRADE_DATA_KEY
    [[maybe_unused]] static jobject get_field_UPGRADE_DATA_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TAG_UPGRADE_DATA", "field_31413", "UPGRADE_DATA_KEY", "f_156511_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.ChunkSerializer#UPGRADE_DATA_KEY
    [[maybe_unused]] static void set_field_UPGRADE_DATA_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TAG_UPGRADE_DATA", "field_31413", "UPGRADE_DATA_KEY", "f_156511_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.ChunkSerializer#BLOCK_TICKS
    [[maybe_unused]] static jobject get_field_BLOCK_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BLOCK_TICKS_TAG", "field_35476", "BLOCK_TICKS", "f_188228_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.ChunkSerializer#BLOCK_TICKS
    [[maybe_unused]] static void set_field_BLOCK_TICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BLOCK_TICKS_TAG", "field_35476", "BLOCK_TICKS", "f_188228_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.ChunkSerializer#FLUID_TICKS
    [[maybe_unused]] static jobject get_field_FLUID_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "FLUID_TICKS_TAG", "field_35477", "FLUID_TICKS", "f_188229_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.ChunkSerializer#FLUID_TICKS
    [[maybe_unused]] static void set_field_FLUID_TICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "FLUID_TICKS_TAG", "field_35477", "FLUID_TICKS", "f_188229_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.ChunkSerializer#X_POS_KEY
    [[maybe_unused]] static jobject get_field_X_POS_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "X_POS_TAG", "field_37659", "X_POS_KEY", "f_223441_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.ChunkSerializer#X_POS_KEY
    [[maybe_unused]] static void set_field_X_POS_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "X_POS_TAG", "field_37659", "X_POS_KEY", "f_223441_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.ChunkSerializer#Z_POS_KEY
    [[maybe_unused]] static jobject get_field_Z_POS_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "Z_POS_TAG", "field_37660", "Z_POS_KEY", "f_223442_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.ChunkSerializer#Z_POS_KEY
    [[maybe_unused]] static void set_field_Z_POS_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "Z_POS_TAG", "field_37660", "Z_POS_KEY", "f_223442_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.ChunkSerializer#HEIGHTMAPS_KEY
    [[maybe_unused]] static jobject get_field_HEIGHTMAPS_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "HEIGHTMAPS_TAG", "field_37661", "HEIGHTMAPS_KEY", "f_223443_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.ChunkSerializer#HEIGHTMAPS_KEY
    [[maybe_unused]] static void set_field_HEIGHTMAPS_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "HEIGHTMAPS_TAG", "field_37661", "HEIGHTMAPS_KEY", "f_223443_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.ChunkSerializer#IS_LIGHT_ON_KEY
    [[maybe_unused]] static jobject get_field_IS_LIGHT_ON_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "IS_LIGHT_ON_TAG", "field_37662", "IS_LIGHT_ON_KEY", "f_223444_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.ChunkSerializer#IS_LIGHT_ON_KEY
    [[maybe_unused]] static void set_field_IS_LIGHT_ON_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "IS_LIGHT_ON_TAG", "field_37662", "IS_LIGHT_ON_KEY", "f_223444_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.ChunkSerializer#SECTIONS_KEY
    [[maybe_unused]] static jobject get_field_SECTIONS_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SECTIONS_TAG", "field_37663", "SECTIONS_KEY", "f_223445_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.ChunkSerializer#SECTIONS_KEY
    [[maybe_unused]] static void set_field_SECTIONS_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SECTIONS_TAG", "field_37663", "SECTIONS_KEY", "f_223445_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.ChunkSerializer#BLOCK_LIGHT_KEY
    [[maybe_unused]] static jobject get_field_BLOCK_LIGHT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "BLOCK_LIGHT_TAG", "field_37664", "BLOCK_LIGHT_KEY", "f_223446_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.ChunkSerializer#BLOCK_LIGHT_KEY
    [[maybe_unused]] static void set_field_BLOCK_LIGHT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "BLOCK_LIGHT_TAG", "field_37664", "BLOCK_LIGHT_KEY", "f_223446_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.ChunkSerializer#SKY_LIGHT_KEY
    [[maybe_unused]] static jobject get_field_SKY_LIGHT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SKY_LIGHT_TAG", "field_37665", "SKY_LIGHT_KEY", "f_223447_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.ChunkSerializer#SKY_LIGHT_KEY
    [[maybe_unused]] static void set_field_SKY_LIGHT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SKY_LIGHT_TAG", "field_37665", "SKY_LIGHT_KEY", "f_223447_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_deserialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "read", "method_12395", "deserialize", "m_188230_"), "(Laqu;Lces;Ldws;Ldcd;Lub;)Ldvs;");
    }

    static jobject deserialize(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_deserialize();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_logRecoverableError() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "logErrors", "method_39035", "logRecoverableError", "m_188239_"), "(Ldcd;ILjava/lang/String;)V");
    }

    static void logRecoverableError(const jobject& arg0, const jint& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_logRecoverableError();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBiomeCodec", "method_39036", "createCodec", "m_188260_"), "(Ljz;)Lcom/mojang/serialization/Codec;");
    }

    static jobject createCodec(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_serialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_12410", "serialize", "m_63454_"), "(Laqu;Lduy;)Lub;");
    }

    static jobject serialize(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_serialize();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_serializeTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "saveTicks", "method_39311", "serializeTicks", "m_188235_"), "(Laqu;Lub;Lduy$a;)V");
    }

    static void serializeTicks(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_serializeTicks();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getChunkType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getChunkTypeFromTag", "method_12377", "getChunkType", "m_63485_"), "(Lub;)Ldwd;");
    }

    static jobject getChunkType(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getChunkType();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getEntityLoadingCallback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "postLoadChunk", "method_12386", "getEntityLoadingCallback", "m_196890_"), "(Laqu;Lub;)Ldvi$c;");
    }

    static jobject getEntityLoadingCallback(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getEntityLoadingCallback();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getListOfCompoundsOrNull", "method_39796", "getList", "m_196897_"), "(Lub;Ljava/lang/String;)Luh;");
    }

    static jobject getList(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getList();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeStructures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "packStructureData", "method_12385", "writeStructures", "m_188249_"), "(Lekh;Ldcd;Ljava/util/Map;Ljava/util/Map;)Lub;");
    }

    static jobject writeStructures(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_writeStructures();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_readStructureStarts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "unpackStructureStart", "method_12392", "readStructureStarts", "m_188254_"), "(Lekh;Lub;J)Ljava/util/Map;");
    }

    static jobject readStructureStarts(const jobject& arg0, const jobject& arg1, const jlong& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_readStructureStarts();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_readStructureReferences() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "unpackStructureReferences", "method_12387", "readStructureReferences", "m_208154_"), "(Lka;Ldcd;Lub;)Ljava/util/Map;");
    }

    static jobject readStructureReferences(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_readStructureReferences();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_toNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "packOffsets", "method_12393", "toNbt", "m_63490_"), "([Lit/unimi/dsi/fastutil/shorts/ShortList;)Luh;");
    }

    static jobject toNbt(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_toNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_CHUNKSERIALIZER_HPP