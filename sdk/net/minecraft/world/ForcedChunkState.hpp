// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_FORCEDCHUNKSTATE_HPP
#define NET_MINECRAFT_WORLD_FORCEDCHUNKSTATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.ForcedChunkState
 * Remapped: dcr
 */
namespace ForcedChunkState {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dcr", "net/minecraft/world/level/ForcedChunksSavedData", "net/minecraft/class_1932", "net/minecraft/world/ForcedChunkState", "net/minecraft/src/C_1582_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.ForcedChunkState#CHUNKS_KEY
    [[maybe_unused]] static jobject get_field_CHUNKS_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FILE_ID", "field_30961", "CHUNKS_KEY", "f_151479_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.ForcedChunkState#CHUNKS_KEY
    [[maybe_unused]] static void set_field_CHUNKS_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FILE_ID", "field_30961", "CHUNKS_KEY", "f_151479_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.ForcedChunkState#FORCED_KEY
    [[maybe_unused]] static jobject get_field_FORCED_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TAG_FORCED", "field_30962", "FORCED_KEY", "f_151480_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.ForcedChunkState#FORCED_KEY
    [[maybe_unused]] static void set_field_FORCED_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TAG_FORCED", "field_30962", "FORCED_KEY", "f_151480_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.ForcedChunkState#chunks
    static jobject get_field_chunks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "chunks", "field_9213", "chunks", "f_46114_"), "Lit/unimi/dsi/fastutil/longs/LongSet;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.ForcedChunkState#chunks
    static void set_field_chunks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "chunks", "field_9213", "chunks", "f_46114_"), "Lit/unimi/dsi/fastutil/longs/LongSet;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getPersistentStateType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "factory", "method_52570", "getPersistentStateType", "m_293948_"), "()Leql$a;");
    }

    static jobject getPersistentStateType() {
       const auto clazz = self();
       const auto methodID = methodID_getPersistentStateType();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_fromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "load", "method_32350", "fromNbt", "m_151483_"), "(Lub;Ljo$a;)Ldcr;");
    }

    static jobject fromNbt(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_fromNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "save", "method_75", "writeNbt", "m_7176_"), "(Lub;Ljo$a;)Lub;");
    }

    static jobject writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getChunks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getChunks", "method_8375", "getChunks", "m_46116_"), "()Lit/unimi/dsi/fastutil/longs/LongSet;");
    }

    static jobject getChunks(const jobject& obj) {
                
       const auto methodID = methodID_getChunks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_FORCEDCHUNKSTATE_HPP