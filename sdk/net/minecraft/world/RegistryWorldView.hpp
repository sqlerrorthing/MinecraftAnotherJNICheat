// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_REGISTRYWORLDVIEW_HPP
#define NET_MINECRAFT_WORLD_REGISTRYWORLDVIEW_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.RegistryWorldView
 * Remapped: dci
 */
namespace RegistryWorldView {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dci", "net/minecraft/world/level/CommonLevelAccessor", "net/minecraft/class_5423", "net/minecraft/world/RegistryWorldView", "net/minecraft/src/C_1571_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlockEntity", "method_35230", "getBlockEntity", "m_141902_"), "(Ljd;Ldqj;)Ljava/util/Optional;");
    }

    static jobject getBlockEntity(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getBlockEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getEntityCollisions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getEntityCollisions", "method_20743", "getEntityCollisions", "m_183134_"), "(Lbsr;Lewx;)Ljava/util/List;");
    }

    static jobject getEntityCollisions(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getEntityCollisions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_doesNotIntersectEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isUnobstructed", "method_8611", "doesNotIntersectEntities", "m_5450_"), "(Lbsr;Lexv;)Z");
    }

    static jboolean doesNotIntersectEntities(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_doesNotIntersectEntities();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getTopPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getHeightmapPos", "method_8598", "getTopPosition", "m_5452_"), "(Ldyy$a;Ljd;)Ljd;");
    }

    static jobject getTopPosition(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getTopPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_REGISTRYWORLDVIEW_HPP