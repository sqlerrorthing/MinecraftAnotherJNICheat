// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_TIMER_TIMER_HPP
#define NET_MINECRAFT_WORLD_TIMER_TIMER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.timer.Timer
 * Remapped: ewp
 */
namespace Timer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ewp", "net/minecraft/world/level/timers/TimerQueue", "net/minecraft/class_236", "net/minecraft/world/timer/Timer", "net/minecraft/src/C_3037_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.timer.Timer#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_1315", "LOGGER", "f_82240_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.timer.Timer#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_1315", "LOGGER", "f_82240_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.timer.Timer#CALLBACK_KEY
    [[maybe_unused]] static jobject get_field_CALLBACK_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CALLBACK_DATA_TAG", "field_31876", "CALLBACK_KEY", "f_165876_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.timer.Timer#CALLBACK_KEY
    [[maybe_unused]] static void set_field_CALLBACK_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CALLBACK_DATA_TAG", "field_31876", "CALLBACK_KEY", "f_165876_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.timer.Timer#NAME_KEY
    [[maybe_unused]] static jobject get_field_NAME_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TIMER_NAME_TAG", "field_31877", "NAME_KEY", "f_165877_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.timer.Timer#NAME_KEY
    [[maybe_unused]] static void set_field_NAME_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TIMER_NAME_TAG", "field_31877", "NAME_KEY", "f_165877_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.timer.Timer#TRIGGER_TIME_KEY
    [[maybe_unused]] static jobject get_field_TRIGGER_TIME_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TIMER_TRIGGER_TIME_TAG", "field_31878", "TRIGGER_TIME_KEY", "f_165878_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.timer.Timer#TRIGGER_TIME_KEY
    [[maybe_unused]] static void set_field_TRIGGER_TIME_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TIMER_TRIGGER_TIME_TAG", "field_31878", "TRIGGER_TIME_KEY", "f_165878_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.timer.Timer#callback
    static jobject get_field_callback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "callbacksRegistry", "field_1314", "callback", "f_82241_"), "Lewo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.timer.Timer#callback
    static void set_field_callback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "callbacksRegistry", "field_1314", "callback", "f_82241_"), "Lewo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.timer.Timer#events
    static jobject get_field_events(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "queue", "field_1313", "events", "f_82242_"), "Ljava/util/Queue;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.timer.Timer#events
    static void set_field_events(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "queue", "field_1313", "events", "f_82242_"), "Ljava/util/Queue;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.timer.Timer#eventCounter
    static jobject get_field_eventCounter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "sequentialId", "field_1311", "eventCounter", "f_82243_"), "Lcom/google/common/primitives/UnsignedLong;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.timer.Timer#eventCounter
    static void set_field_eventCounter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "sequentialId", "field_1311", "eventCounter", "f_82243_"), "Lcom/google/common/primitives/UnsignedLong;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.timer.Timer#eventsByName
    static jobject get_field_eventsByName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "events", "field_1312", "eventsByName", "f_82244_"), "Lcom/google/common/collect/Table;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.timer.Timer#eventsByName
    static void set_field_eventsByName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "events", "field_1312", "eventsByName", "f_82244_"), "Lcom/google/common/collect/Table;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_createEventComparator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "createComparator", "method_987", "createEventComparator", "m_82270_"), "()Ljava/util/Comparator;");
    }

    static jobject createEventComparator() {
       const auto clazz = self();
       const auto methodID = methodID_createEventComparator();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_processEvents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_988", "processEvents", "m_82256_"), "(Ljava/lang/Object;J)V");
    }

    static void processEvents(const jobject& obj, const jobject& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_processEvents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "schedule", "method_985", "setEvent", "m_82261_"), "(Ljava/lang/String;JLewn;)V");
    }

    static void setEvent(const jobject& obj, const jobject& arg0, const jlong& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_setEvent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "remove", "method_22593", "remove", "m_82259_"), "(Ljava/lang/String;)I");
    }

    static jint remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEventNames() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEventsIds", "method_22592", "getEventNames", "m_82251_"), "()Ljava/util/Set;");
    }

    static jobject getEventNames(const jobject& obj) {
                
       const auto methodID = methodID_getEventNames();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadEvent", "method_986", "addEvent", "m_82265_"), "(Lub;)V");
    }

    static void addEvent(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEvent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_serialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "storeEvent", "method_980", "serialize", "m_82254_"), "(Lewp$a;)Lub;");
    }

    static jobject serialize(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_serialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "store", "method_982", "toNbt", "m_82267_"), "()Luh;");
    }

    static jobject toNbt(const jobject& obj) {
                
       const auto methodID = methodID_toNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_TIMER_TIMER_HPP