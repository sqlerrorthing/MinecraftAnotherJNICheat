// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_SPAWNHELPER_HPP
#define NET_MINECRAFT_WORLD_SPAWNHELPER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.SpawnHelper
 * Remapped: ddh
 */
namespace SpawnHelper {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ddh", "net/minecraft/world/level/NaturalSpawner", "net/minecraft/class_1948", "net/minecraft/world/SpawnHelper", "net/minecraft/src/C_1608_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.SpawnHelper#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOGGER", "field_9292", "LOGGER", "f_46977_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.SpawnHelper#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOGGER", "field_9292", "LOGGER", "f_46977_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.SpawnHelper#MIN_SPAWN_DISTANCE
    [[maybe_unused]] static jint get_field_MIN_SPAWN_DISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MIN_SPAWN_DISTANCE", "field_30974", "MIN_SPAWN_DISTANCE", "f_151589_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.SpawnHelper#MIN_SPAWN_DISTANCE
    [[maybe_unused]] static void set_field_MIN_SPAWN_DISTANCE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MIN_SPAWN_DISTANCE", "field_30974", "MIN_SPAWN_DISTANCE", "f_151589_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.SpawnHelper#field_30972
    [[maybe_unused]] static jint get_field_field_30972() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPAWN_DISTANCE_CHUNK", "field_30972", "field_30972", "f_151587_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.SpawnHelper#field_30972
    [[maybe_unused]] static void set_field_field_30972(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPAWN_DISTANCE_CHUNK", "field_30972", "field_30972", "f_151587_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.SpawnHelper#field_30973
    [[maybe_unused]] static jint get_field_field_30973() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPAWN_DISTANCE_BLOCK", "field_30973", "field_30973", "f_151588_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.SpawnHelper#field_30973
    [[maybe_unused]] static void set_field_field_30973(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPAWN_DISTANCE_BLOCK", "field_30973", "field_30973", "f_151588_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.world.SpawnHelper#CHUNK_AREA
    [[maybe_unused]] static jint get_field_CHUNK_AREA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAGIC_NUMBER", "field_24392", "CHUNK_AREA", "f_46978_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.world.SpawnHelper#CHUNK_AREA
    [[maybe_unused]] static void set_field_CHUNK_AREA(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAGIC_NUMBER", "field_24392", "CHUNK_AREA", "f_46978_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.SpawnHelper#SPAWNABLE_GROUPS
    [[maybe_unused]] static jobject get_field_SPAWNABLE_GROUPS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SPAWNING_CATEGORIES", "field_24393", "SPAWNABLE_GROUPS", "f_46979_"), "[Lbtq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.SpawnHelper#SPAWNABLE_GROUPS
    [[maybe_unused]] static void set_field_SPAWNABLE_GROUPS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SPAWNING_CATEGORIES", "field_24393", "SPAWNABLE_GROUPS", "f_46979_"), "[Lbtq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_setupSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createState", "method_27815", "setupSpawn", "m_186524_"), "(ILjava/lang/Iterable;Lddh$b;Lddg;)Lddh$d;");
    }

    static jobject setupSpawn(const jint& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_setupSpawn();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getBiomeDirectly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRoughBiome", "method_27822", "getBiomeDirectly", "m_47095_"), "(Ljd;Lduy;)Lddw;");
    }

    static jobject getBiomeDirectly(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getBiomeDirectly();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_spawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnForChunk", "method_27821", "spawn", "m_47029_"), "(Laqu;Ldvi;Lddh$d;ZZZ)V");
    }

    static void spawn(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jboolean& arg3, const jboolean& arg4, const jboolean& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_spawn();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_spawnEntitiesInChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnCategoryForChunk", "method_8663", "spawnEntitiesInChunk", "m_47045_"), "(Lbtq;Laqu;Ldvi;Lddh$c;Lddh$a;)V");
    }

    static void spawnEntitiesInChunk(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_spawnEntitiesInChunk();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID__spawnEntitiesInChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnCategoryForPosition", "method_35240", "spawnEntitiesInChunk", "m_151612_"), "(Lbtq;Laqu;Ljd;)V");
    }

    static void _spawnEntitiesInChunk(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__spawnEntitiesInChunk();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___spawnEntitiesInChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnCategoryForPosition", "method_24930", "spawnEntitiesInChunk", "m_47038_"), "(Lbtq;Laqu;Lduy;Ljd;Lddh$c;Lddh$a;)V");
    }

    static void __spawnEntitiesInChunk(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID___spawnEntitiesInChunk();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_isAcceptableSpawnPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isRightDistanceToPlayerAndSpawnPoint", "method_24933", "isAcceptableSpawnPosition", "m_47024_"), "(Laqu;Lduy;Ljd$a;D)Z");
    }

    static jboolean isAcceptableSpawnPosition(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_isAcceptableSpawnPosition();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isValidSpawnPostitionForType", "method_24934", "canSpawn", "m_220421_"), "(Laqu;Lbtq;Lddq;Lduz;Ldei$c;Ljd$a;D)Z");
    }

    static jboolean canSpawn(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jdouble& arg6) {
       const auto clazz = self();
       const auto methodID = methodID_canSpawn();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_createMob() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getMobForSpawn", "method_24931", "createMob", "m_46988_"), "(Laqu;Lbsx;)Lbtp;");
    }

    static jobject createMob(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createMob();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isValidSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isValidPositionForMob", "method_24932", "isValidSpawn", "m_46991_"), "(Laqu;Lbtp;D)Z");
    }

    static jboolean isValidSpawn(const jobject& arg0, const jobject& arg1, const jdouble& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_isValidSpawn();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_pickRandomSpawnEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomSpawnMobAt", "method_8664", "pickRandomSpawnEntry", "m_220429_"), "(Laqu;Lddq;Lduz;Lbtq;Layw;Ljd;)Ljava/util/Optional;");
    }

    static jobject pickRandomSpawnEntry(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_pickRandomSpawnEntry();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_containsSpawnEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canSpawnMobAt", "method_8659", "containsSpawnEntry", "m_220436_"), "(Laqu;Lddq;Lduz;Lbtq;Ldei$c;Ljd;)Z");
    }

    static jboolean containsSpawnEntry(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_containsSpawnEntry();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getSpawnEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "mobsAt", "method_29950", "getSpawnEntries", "m_220443_"), "(Laqu;Lddq;Lduz;Lbtq;Ljd;Ljm;)Lbpf;");
    }

    static jobject getSpawnEntries(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_getSpawnEntries();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_shouldUseNetherFortressSpawns() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isInNetherFortressBounds", "method_38091", "shouldUseNetherFortressSpawns", "m_220455_"), "(Ljd;Laqu;Lbtq;Lddq;)Z");
    }

    static jboolean shouldUseNetherFortressSpawns(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_shouldUseNetherFortressSpawns();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getRandomPosInChunkSection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomPosWithin", "method_8657", "getRandomPosInChunkSection", "m_47062_"), "(Ldcw;Ldvi;)Ljd;");
    }

    static jobject getRandomPosInChunkSection(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getRandomPosInChunkSection();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isClearForSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isValidEmptySpawnBlock", "method_8662", "isClearForSpawn", "m_47056_"), "(Ldcc;Ljd;Ldtc;Lepe;Lbsx;)Z");
    }

    static jboolean isClearForSpawn(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_isClearForSpawn();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_populateEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnMobsForChunkGeneration", "method_8661", "populateEntities", "m_220450_"), "(Lddl;Ljm;Ldcd;Layw;)V");
    }

    static void populateEntities(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_populateEntities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getEntitySpawnPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getTopNonCollidingPos", "method_8658", "getEntitySpawnPos", "m_47065_"), "(Ldcz;Lbsx;II)Ljd;");
    }

    static jobject getEntitySpawnPos(const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getEntitySpawnPos();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_WORLD_SPAWNHELPER_HPP