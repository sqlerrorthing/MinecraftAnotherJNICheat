// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_DIMENSION_DIMENSIONTYPE$MONSTERSETTINGS_HPP
#define NET_MINECRAFT_WORLD_DIMENSION_DIMENSIONTYPE$MONSTERSETTINGS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.dimension.DimensionType$MonsterSettings
 * Remapped: dwy$a
 */
namespace DimensionType$MonsterSettings {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dwy$a", "net/minecraft/world/level/dimension/DimensionType$MonsterSettings", "net/minecraft/class_2874$class_7512", "net/minecraft/world/dimension/DimensionType$MonsterSettings", "net/minecraft/src/C_2175_$C_213128_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.dimension.DimensionType$MonsterSettings#piglinSafe
    static jboolean get_field_piglinSafe(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "piglinSafe", "comp_848", "piglinSafe", "f_223579_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.DimensionType$MonsterSettings#piglinSafe
    static void set_field_piglinSafe(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "piglinSafe", "comp_848", "piglinSafe", "f_223579_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.DimensionType$MonsterSettings#hasRaids
    static jboolean get_field_hasRaids(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "hasRaids", "comp_849", "hasRaids", "f_223580_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.DimensionType$MonsterSettings#hasRaids
    static void set_field_hasRaids(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "hasRaids", "comp_849", "hasRaids", "f_223580_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.DimensionType$MonsterSettings#monsterSpawnLightTest
    static jobject get_field_monsterSpawnLightTest(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "monsterSpawnLightTest", "comp_850", "monsterSpawnLightTest", "f_223581_"), "Lbpw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.DimensionType$MonsterSettings#monsterSpawnLightTest
    static void set_field_monsterSpawnLightTest(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "monsterSpawnLightTest", "comp_850", "monsterSpawnLightTest", "f_223581_"), "Lbpw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.DimensionType$MonsterSettings#monsterSpawnBlockLightLimit
    static jint get_field_monsterSpawnBlockLightLimit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "monsterSpawnBlockLightLimit", "comp_851", "monsterSpawnBlockLightLimit", "f_223582_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.DimensionType$MonsterSettings#monsterSpawnBlockLightLimit
    static void set_field_monsterSpawnBlockLightLimit(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "monsterSpawnBlockLightLimit", "comp_851", "monsterSpawnBlockLightLimit", "f_223582_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.world.dimension.DimensionType$MonsterSettings#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_39414", "CODEC", "f_223578_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.dimension.DimensionType$MonsterSettings#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_39414", "CODEC", "f_223578_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID__piglinSafe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "piglinSafe", "comp_848", "piglinSafe", "f_223579_"), "()Z");
    }

    static jboolean _piglinSafe(const jobject& obj) {
                
       const auto methodID = methodID__piglinSafe();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__hasRaids() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasRaids", "comp_849", "hasRaids", "f_223580_"), "()Z");
    }

    static jboolean _hasRaids(const jobject& obj) {
                
       const auto methodID = methodID__hasRaids();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__monsterSpawnLightTest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "monsterSpawnLightTest", "comp_850", "monsterSpawnLightTest", "f_223581_"), "()Lbpw;");
    }

    static jobject _monsterSpawnLightTest(const jobject& obj) {
                
       const auto methodID = methodID__monsterSpawnLightTest();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__monsterSpawnBlockLightLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "monsterSpawnBlockLightLimit", "comp_851", "monsterSpawnBlockLightLimit", "f_223582_"), "()I");
    }

    static jint _monsterSpawnBlockLightLimit(const jobject& obj) {
                
       const auto methodID = methodID__monsterSpawnBlockLightLimit();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_DIMENSION_DIMENSIONTYPE$MONSTERSETTINGS_HPP