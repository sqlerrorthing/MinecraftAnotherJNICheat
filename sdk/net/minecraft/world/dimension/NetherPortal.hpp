// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_DIMENSION_NETHERPORTAL_HPP
#define NET_MINECRAFT_WORLD_DIMENSION_NETHERPORTAL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.dimension.NetherPortal
 * Remapped: eqe
 */
namespace NetherPortal {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eqe", "net/minecraft/world/level/portal/PortalShape", "net/minecraft/class_2424", "net/minecraft/world/dimension/NetherPortal", "net/minecraft/src/C_2762_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.dimension.NetherPortal#MIN_WIDTH
    [[maybe_unused]] static jint get_field_MIN_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MIN_WIDTH", "field_31825", "MIN_WIDTH", "f_164752_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.NetherPortal#MIN_WIDTH
    [[maybe_unused]] static void set_field_MIN_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MIN_WIDTH", "field_31825", "MIN_WIDTH", "f_164752_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.dimension.NetherPortal#MAX_WIDTH
    [[maybe_unused]] static jint get_field_MAX_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_WIDTH", "field_31823", "MAX_WIDTH", "f_164750_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.dimension.NetherPortal#MAX_WIDTH
    [[maybe_unused]] static void set_field_MAX_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_WIDTH", "field_31823", "MAX_WIDTH", "f_164750_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.dimension.NetherPortal#MIN_HEIGHT
    [[maybe_unused]] static jint get_field_MIN_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MIN_HEIGHT", "field_31826", "MIN_HEIGHT", "f_164753_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.NetherPortal#MIN_HEIGHT
    [[maybe_unused]] static void set_field_MIN_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MIN_HEIGHT", "field_31826", "MIN_HEIGHT", "f_164753_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.dimension.NetherPortal#MAX_HEIGHT
    [[maybe_unused]] static jint get_field_MAX_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_HEIGHT", "field_31824", "MAX_HEIGHT", "f_164751_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.dimension.NetherPortal#MAX_HEIGHT
    [[maybe_unused]] static void set_field_MAX_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_HEIGHT", "field_31824", "MAX_HEIGHT", "f_164751_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.dimension.NetherPortal#IS_VALID_FRAME_BLOCK
    [[maybe_unused]] static jobject get_field_IS_VALID_FRAME_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FRAME", "field_25883", "IS_VALID_FRAME_BLOCK", "f_77685_"), "Ldtb$f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.NetherPortal#IS_VALID_FRAME_BLOCK
    [[maybe_unused]] static void set_field_IS_VALID_FRAME_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FRAME", "field_25883", "IS_VALID_FRAME_BLOCK", "f_77685_"), "Ldtb$f;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.dimension.NetherPortal#FALLBACK_THRESHOLD
    [[maybe_unused]] static jfloat get_field_FALLBACK_THRESHOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SAFE_TRAVEL_MAX_ENTITY_XY", "field_41086", "FALLBACK_THRESHOLD", "f_256985_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.NetherPortal#FALLBACK_THRESHOLD
    [[maybe_unused]] static void set_field_FALLBACK_THRESHOLD(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SAFE_TRAVEL_MAX_ENTITY_XY", "field_41086", "FALLBACK_THRESHOLD", "f_256985_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.dimension.NetherPortal#HEIGHT_STRETCH
    [[maybe_unused]] static jdouble get_field_HEIGHT_STRETCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SAFE_TRAVEL_MAX_VERTICAL_DELTA", "field_41087", "HEIGHT_STRETCH", "f_256802_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.NetherPortal#HEIGHT_STRETCH
    [[maybe_unused]] static void set_field_HEIGHT_STRETCH(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SAFE_TRAVEL_MAX_VERTICAL_DELTA", "field_41087", "HEIGHT_STRETCH", "f_256802_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.NetherPortal#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "level", "field_11318", "world", "f_77686_"), "Ldcx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.NetherPortal#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "level", "field_11318", "world", "f_77686_"), "Ldcx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.NetherPortal#axis
    static jobject get_field_axis(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "axis", "field_11317", "axis", "f_77687_"), "Lji$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.NetherPortal#axis
    static void set_field_axis(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "axis", "field_11317", "axis", "f_77687_"), "Lji$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.NetherPortal#negativeDir
    static jobject get_field_negativeDir(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "rightDir", "field_11314", "negativeDir", "f_77688_"), "Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.NetherPortal#negativeDir
    static void set_field_negativeDir(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "rightDir", "field_11314", "negativeDir", "f_77688_"), "Lji;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.NetherPortal#foundPortalBlocks
    static jint get_field_foundPortalBlocks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "numPortalBlocks", "field_11313", "foundPortalBlocks", "f_77689_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.NetherPortal#foundPortalBlocks
    static void set_field_foundPortalBlocks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "numPortalBlocks", "field_11313", "foundPortalBlocks", "f_77689_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.NetherPortal#lowerCorner
    static jobject get_field_lowerCorner(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "bottomLeft", "field_11316", "lowerCorner", "f_77690_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.NetherPortal#lowerCorner
    static void set_field_lowerCorner(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "bottomLeft", "field_11316", "lowerCorner", "f_77690_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.NetherPortal#height
    static jint get_field_height(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "height", "field_11312", "height", "f_77691_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.NetherPortal#height
    static void set_field_height(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "height", "field_11312", "height", "f_77691_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.NetherPortal#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "width", "field_11311", "width", "f_77692_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.NetherPortal#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "width", "field_11311", "width", "f_77692_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getNewPortal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findEmptyPortalShape", "method_30485", "getNewPortal", "m_77708_"), "(Ldcx;Ljd;Lji$a;)Ljava/util/Optional;");
    }

    static jobject getNewPortal(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getNewPortal();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getOrEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findPortalShape", "method_30486", "getOrEmpty", "m_77712_"), "(Ldcx;Ljd;Ljava/util/function/Predicate;Lji$a;)Ljava/util/Optional;");
    }

    static jobject getOrEmpty(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getOrEmpty();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getLowerCorner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateBottomLeft", "method_30492", "getLowerCorner", "m_77733_"), "(Ljd;)Ljd;");
    }

    static jobject getLowerCorner(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getLowerCorner();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "calculateWidth", "method_30495", "getWidth", "m_77745_"), "()I");
    }

    static jint getWidth(const jobject& obj) {
                
       const auto methodID = methodID_getWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__getWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDistanceUntilEdgeAboveFrame", "method_30493", "getWidth", "m_77735_"), "(Ljd;Lji;)I");
    }

    static jint _getWidth(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__getWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "calculateHeight", "method_30496", "getHeight", "m_77746_"), "()I");
    }

    static jint getHeight(const jobject& obj) {
                
       const auto methodID = methodID_getHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isHorizontalFrameValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasTopFrame", "method_30491", "isHorizontalFrameValid", "m_77730_"), "(Ljd$a;I)Z");
    }

    static jboolean isHorizontalFrameValid(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_isHorizontalFrameValid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getPotentialHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDistanceUntilTop", "method_30490", "getPotentialHeight", "m_77728_"), "(Ljd$a;)I");
    }

    static jint getPotentialHeight(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPotentialHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_validStateInsidePortal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isEmpty", "method_10359", "validStateInsidePortal", "m_77717_"), "(Ldtc;)Z");
    }

    static jboolean validStateInsidePortal(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_validStateInsidePortal();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isValid", "method_10360", "isValid", "m_77698_"), "()Z");
    }

    static jboolean isValid(const jobject& obj) {
                
       const auto methodID = methodID_isValid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_createPortal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createPortalBlocks", "method_10363", "createPortal", "m_77743_"), "()V");
    }

    static void createPortal(const jobject& obj) {
                
       const auto methodID = methodID_createPortal();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_wasAlreadyValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isComplete", "method_10362", "wasAlreadyValid", "m_77744_"), "()Z");
    }

    static jboolean wasAlreadyValid(const jobject& obj) {
                
       const auto methodID = methodID_wasAlreadyValid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_entityPosInPortal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRelativePosition", "method_30494", "entityPosInPortal", "m_77738_"), "(Ll$a;Lji$a;Lexc;Lbsu;)Lexc;");
    }

    static jobject entityPosInPortal(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_entityPosInPortal();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_findOpenPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findCollisionFreePosition", "method_47382", "findOpenPosition", "m_257963_"), "(Lexc;Laqu;Lbsr;Lbsu;)Lexc;");
    }

    static jobject findOpenPosition(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_findOpenPosition();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_WORLD_DIMENSION_NETHERPORTAL_HPP