// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_DIMENSION_DIMENSIONOPTIONSREGISTRYHOLDER_HPP
#define NET_MINECRAFT_WORLD_DIMENSION_DIMENSIONOPTIONSREGISTRYHOLDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.dimension.DimensionOptionsRegistryHolder
 * Remapped: dzt
 */
namespace DimensionOptionsRegistryHolder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dzt", "net/minecraft/world/level/levelgen/WorldDimensions", "net/minecraft/class_7723", "net/minecraft/world/dimension/DimensionOptionsRegistryHolder", "net/minecraft/src/C_243563_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.dimension.DimensionOptionsRegistryHolder#dimensions
    static jobject get_field_dimensions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "dimensions", "comp_1014", "dimensions", "f_243948_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.DimensionOptionsRegistryHolder#dimensions
    static void set_field_dimensions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "dimensions", "comp_1014", "dimensions", "f_243948_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.world.dimension.DimensionOptionsRegistryHolder#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_40363", "CODEC", "f_243810_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.dimension.DimensionOptionsRegistryHolder#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_40363", "CODEC", "f_243810_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.dimension.DimensionOptionsRegistryHolder#VANILLA_KEYS
    [[maybe_unused]] static jobject get_field_VANILLA_KEYS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BUILTIN_ORDER", "field_40364", "VANILLA_KEYS", "f_243726_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.DimensionOptionsRegistryHolder#VANILLA_KEYS
    [[maybe_unused]] static void set_field_VANILLA_KEYS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BUILTIN_ORDER", "field_40364", "VANILLA_KEYS", "f_243726_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.dimension.DimensionOptionsRegistryHolder#VANILLA_KEY_COUNT
    [[maybe_unused]] static jint get_field_VANILLA_KEY_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "VANILLA_DIMENSION_COUNT", "field_40365", "VANILLA_KEY_COUNT", "f_243847_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.DimensionOptionsRegistryHolder#VANILLA_KEY_COUNT
    [[maybe_unused]] static void set_field_VANILLA_KEY_COUNT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "VANILLA_DIMENSION_COUNT", "field_40365", "VANILLA_KEY_COUNT", "f_243847_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_streamAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "keysInOrder", "method_45525", "streamAll", "m_247421_"), "(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;");
    }

    static jobject streamAll(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_streamAll();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_with() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "replaceOverworldGenerator", "method_45522", "with", "m_246747_"), "(Lka;Lduz;)Ldzt;");
    }

    static jobject with(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_with();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createRegistry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "withOverworld", "method_45520", "createRegistry", "m_246477_"), "(Ljz;Ljava/util/Map;Lduz;)Ljava/util/Map;");
    }

    static jobject createRegistry(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createRegistry();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__createRegistry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "withOverworld", "method_45519", "createRegistry", "m_247534_"), "(Ljava/util/Map;Ljm;Lduz;)Ljava/util/Map;");
    }

    static jobject _createRegistry(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__createRegistry();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getChunkGenerator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "overworld", "method_45513", "getChunkGenerator", "m_246737_"), "()Lduz;");
    }

    static jobject getChunkGenerator(const jobject& obj) {
                
       const auto methodID = methodID_getChunkGenerator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOrEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_45514", "getOrEmpty", "m_245957_"), "(Lakq;)Ljava/util/Optional;");
    }

    static jobject getOrEmpty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOrEmpty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWorldKeys() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "levels", "method_45526", "getWorldKeys", "m_247539_"), "()Lcom/google/common/collect/ImmutableSet;");
    }

    static jobject getWorldKeys(const jobject& obj) {
                
       const auto methodID = methodID_getWorldKeys();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDebug() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isDebug", "method_45531", "isDebug", "m_246739_"), "()Z");
    }

    static jboolean isDebug(const jobject& obj) {
                
       const auto methodID = methodID_isDebug();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpecialProperty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "specialWorldProperty", "method_45530", "getSpecialProperty", "m_246830_"), "(Ljz;)Lerj$a;");
    }

    static jobject getSpecialProperty(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getSpecialProperty();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getLifecycle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "checkStability", "method_45515", "getLifecycle", "m_245357_"), "(Lakq;Ldwz;)Lcom/mojang/serialization/Lifecycle;");
    }

    static jobject getLifecycle(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getLifecycle();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isVanilla() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isVanillaLike", "method_45528", "isVanilla", "m_245858_"), "(Lakq;Ldwz;)Z");
    }

    static jboolean isVanilla(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isVanilla();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isOverworldVanilla() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isStableOverworld", "method_45517", "isOverworldVanilla", "m_245847_"), "(Ldwz;)Z");
    }

    static jboolean isOverworldVanilla(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isOverworldVanilla();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isNetherVanilla() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isStableNether", "method_45529", "isNetherVanilla", "m_246615_"), "(Ldwz;)Z");
    }

    static jboolean isNetherVanilla(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isNetherVanilla();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isTheEndVanilla() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "isStableEnd", "method_45533", "isTheEndVanilla", "m_247592_"), "(Ldwz;)Z");
    }

    static jboolean isTheEndVanilla(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isTheEndVanilla();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "bake", "method_45518", "toConfig", "m_245300_"), "(Ljz;)Ldzt$b;");
    }

    static jobject toConfig(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toConfig();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__dimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "dimensions", "comp_1014", "dimensions", "f_243948_"), "()Ljava/util/Map;");
    }

    static jobject _dimensions(const jobject& obj) {
                
       const auto methodID = methodID__dimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_DIMENSION_DIMENSIONOPTIONSREGISTRYHOLDER_HPP