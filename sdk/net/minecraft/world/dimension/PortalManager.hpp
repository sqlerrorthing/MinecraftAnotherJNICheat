// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_DIMENSION_PORTALMANAGER_HPP
#define NET_MINECRAFT_WORLD_DIMENSION_PORTALMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.dimension.PortalManager
 * Remapped: btz
 */
namespace PortalManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("btz", "net/minecraft/world/entity/PortalProcessor", "net/minecraft/class_9787", "net/minecraft/world/dimension/PortalManager", "net/minecraft/src/C_336467_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.dimension.PortalManager#portal
    static jobject get_field_portal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "portal", "field_51998", "portal", "f_337215_"), "Ldlr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.PortalManager#portal
    static void set_field_portal(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "portal", "field_51998", "portal", "f_337215_"), "Ldlr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.PortalManager#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "entryPosition", "field_51999", "pos", "f_336628_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.PortalManager#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "entryPosition", "field_51999", "pos", "f_336628_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.PortalManager#ticksInPortal
    static jint get_field_ticksInPortal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "portalTime", "field_52000", "ticksInPortal", "f_337622_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.PortalManager#ticksInPortal
    static void set_field_ticksInPortal(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "portalTime", "field_52000", "ticksInPortal", "f_337622_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.dimension.PortalManager#inPortal
    static jboolean get_field_inPortal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "insidePortalThisTick", "field_52001", "inPortal", "f_336983_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.dimension.PortalManager#inPortal
    static void set_field_inPortal(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "insidePortalThisTick", "field_52001", "inPortal", "f_336983_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "processPortalTeleportation", "method_60702", "tick", "m_338843_"), "(Laqu;Lbsr;Z)Z");
    }

    static jboolean tick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_tick();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createTeleportTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPortalDestination", "method_60701", "createTeleportTarget", "m_340178_"), "(Laqu;Lbsr;)Leqc;");
    }

    static jobject createTeleportTarget(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createTeleportTarget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPortalLocalTransition", "method_60700", "getEffect", "m_339567_"), "()Ldlr$a;");
    }

    static jobject getEffect(const jobject& obj) {
                
       const auto methodID = methodID_getEffect();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_decayTicksInPortal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "decayTick", "method_60710", "decayTicksInPortal", "m_338929_"), "()V");
    }

    static void decayTicksInPortal(const jobject& obj) {
                
       const auto methodID = methodID_decayTicksInPortal();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasExpired() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasExpired", "method_60706", "hasExpired", "m_339788_"), "()Z");
    }

    static jboolean hasExpired(const jobject& obj) {
                
       const auto methodID = methodID_hasExpired();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPortalPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getEntryPosition", "method_60707", "getPortalPos", "m_339596_"), "()Ljd;");
    }

    static jobject getPortalPos(const jobject& obj) {
                
       const auto methodID = methodID_getPortalPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPortalPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateEntryPosition", "method_60704", "setPortalPos", "m_340334_"), "(Ljd;)V");
    }

    static void setPortalPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPortalPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTicksInPortal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getPortalTime", "method_60708", "getTicksInPortal", "m_339853_"), "()I");
    }

    static jint getTicksInPortal(const jobject& obj) {
                
       const auto methodID = methodID_getTicksInPortal();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInPortal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isInsidePortalThisTick", "method_60709", "isInPortal", "m_339505_"), "()Z");
    }

    static jboolean isInPortal(const jobject& obj) {
                
       const auto methodID = methodID_isInPortal();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setInPortal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setAsInsidePortalThisTick", "method_60705", "setInPortal", "m_340101_"), "(Z)V");
    }

    static void setInPortal(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setInPortal();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_portalMatches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isSamePortal", "method_60703", "portalMatches", "m_338450_"), "(Ldlr;)Z");
    }

    static jboolean portalMatches(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_portalMatches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_DIMENSION_PORTALMANAGER_HPP