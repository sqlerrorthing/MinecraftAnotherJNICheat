// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_TICK_SIMPLETICKSCHEDULER_HPP
#define NET_MINECRAFT_WORLD_TICK_SIMPLETICKSCHEDULER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.tick.SimpleTickScheduler
 * Remapped: eyr
 */
namespace SimpleTickScheduler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eyr", "net/minecraft/world/ticks/ProtoChunkTicks", "net/minecraft/class_4296", "net/minecraft/world/tick/SimpleTickScheduler", "net/minecraft/src/C_183044_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.tick.SimpleTickScheduler#scheduledTicks
    static jobject get_field_scheduledTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "ticks", "field_19275", "scheduledTicks", "f_193291_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.tick.SimpleTickScheduler#scheduledTicks
    static void set_field_scheduledTicks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "ticks", "field_19275", "scheduledTicks", "f_193291_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.tick.SimpleTickScheduler#scheduledTicksSet
    static jobject get_field_scheduledTicksSet(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "ticksPerPosition", "field_35541", "scheduledTicksSet", "f_193292_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.tick.SimpleTickScheduler#scheduledTicksSet
    static void set_field_scheduledTicksSet(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "ticksPerPosition", "field_35541", "scheduledTicksSet", "f_193292_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_scheduleTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "schedule", "method_39363", "scheduleTick", "m_183393_"), "(Leyt;)V");
    }

    static void scheduleTick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_scheduleTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__scheduleTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "schedule", "method_39397", "scheduleTick", "m_193295_"), "(Leys;)V");
    }

    static void _scheduleTick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__scheduleTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isQueued() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasScheduledTick", "method_8674", "isQueued", "m_183582_"), "(Ljd;Ljava/lang/Object;)Z");
    }

    static jboolean isQueued(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isQueued();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getTickCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "count", "method_20825", "getTickCount", "m_183574_"), "()I");
    }

    static jint getTickCount(const jobject& obj) {
                
       const auto methodID = methodID_getTickCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_toNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "save", "method_20463", "toNbt", "m_183237_"), "(JLjava/util/function/Function;)Luy;");
    }

    static jobject toNbt(const jobject& obj, const jlong& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_toNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "scheduledTicks", "method_39399", "getTicks", "m_193306_"), "()Ljava/util/List;");
    }

    static jobject getTicks(const jobject& obj) {
                
       const auto methodID = methodID_getTicks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_39398", "tick", "m_193302_"), "(Luh;Ljava/util/function/Function;Ldcd;)Leyr;");
    }

    static jobject tick(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_tick();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_WORLD_TICK_SIMPLETICKSCHEDULER_HPP