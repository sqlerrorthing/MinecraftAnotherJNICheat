// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_TICK_ORDEREDTICK_HPP
#define NET_MINECRAFT_WORLD_TICK_ORDEREDTICK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.tick.OrderedTick
 * Remapped: eyt
 */
namespace OrderedTick {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eyt", "net/minecraft/world/ticks/ScheduledTick", "net/minecraft/class_6760", "net/minecraft/world/tick/OrderedTick", "net/minecraft/src/C_183047_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.tick.OrderedTick#type
    static jobject get_field_type(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "type", "comp_252", "type", "f_193376_"), "Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.tick.OrderedTick#type
    static void set_field_type(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "type", "comp_252", "type", "f_193376_"), "Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.tick.OrderedTick#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "pos", "comp_253", "pos", "f_193377_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.tick.OrderedTick#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "pos", "comp_253", "pos", "f_193377_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.tick.OrderedTick#triggerTick
    static jlong get_field_triggerTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "triggerTick", "comp_254", "triggerTick", "f_193378_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.tick.OrderedTick#triggerTick
    static void set_field_triggerTick(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "triggerTick", "comp_254", "triggerTick", "f_193378_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.tick.OrderedTick#priority
    static jobject get_field_priority(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "priority", "comp_255", "priority", "f_193379_"), "Leyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.tick.OrderedTick#priority
    static void set_field_priority(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "priority", "comp_255", "priority", "f_193379_"), "Leyx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.tick.OrderedTick#subTickOrder
    static jlong get_field_subTickOrder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "subTickOrder", "comp_256", "subTickOrder", "f_193380_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.tick.OrderedTick#subTickOrder
    static void set_field_subTickOrder(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "subTickOrder", "comp_256", "subTickOrder", "f_193380_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.world.tick.OrderedTick#TRIGGER_TICK_COMPARATOR
    [[maybe_unused]] static jobject get_field_TRIGGER_TICK_COMPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DRAIN_ORDER", "field_35549", "TRIGGER_TICK_COMPARATOR", "f_193373_"), "Ljava/util/Comparator;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.tick.OrderedTick#TRIGGER_TICK_COMPARATOR
    [[maybe_unused]] static void set_field_TRIGGER_TICK_COMPARATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DRAIN_ORDER", "field_35549", "TRIGGER_TICK_COMPARATOR", "f_193373_"), "Ljava/util/Comparator;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.tick.OrderedTick#BASIC_COMPARATOR
    [[maybe_unused]] static jobject get_field_BASIC_COMPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "INTRA_TICK_DRAIN_ORDER", "field_35550", "BASIC_COMPARATOR", "f_193374_"), "Ljava/util/Comparator;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.tick.OrderedTick#BASIC_COMPARATOR
    [[maybe_unused]] static void set_field_BASIC_COMPARATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "INTRA_TICK_DRAIN_ORDER", "field_35550", "BASIC_COMPARATOR", "f_193374_"), "Ljava/util/Comparator;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.tick.OrderedTick#HASH_STRATEGY
    [[maybe_unused]] static jobject get_field_HASH_STRATEGY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "UNIQUE_TICK_HASH", "field_35551", "HASH_STRATEGY", "f_193375_"), "Lit/unimi/dsi/fastutil/Hash$Strategy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.tick.OrderedTick#HASH_STRATEGY
    [[maybe_unused]] static void set_field_HASH_STRATEGY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "UNIQUE_TICK_HASH", "field_35551", "HASH_STRATEGY", "f_193375_"), "Lit/unimi/dsi/fastutil/Hash$Strategy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "probe", "method_39410", "create", "m_193397_"), "(Ljava/lang/Object;Ljd;)Leyt;");
    }

    static jobject create(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__type() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "type", "comp_252", "type", "f_193376_"), "()Ljava/lang/Object;");
    }

    static jobject _type(const jobject& obj) {
                
       const auto methodID = methodID__type();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__pos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "pos", "comp_253", "pos", "f_193377_"), "()Ljd;");
    }

    static jobject _pos(const jobject& obj) {
                
       const auto methodID = methodID__pos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__triggerTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "triggerTick", "comp_254", "triggerTick", "f_193378_"), "()J");
    }

    static jlong _triggerTick(const jobject& obj) {
                
       const auto methodID = methodID__triggerTick();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__priority() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "priority", "comp_255", "priority", "f_193379_"), "()Leyx;");
    }

    static jobject _priority(const jobject& obj) {
                
       const auto methodID = methodID__priority();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__subTickOrder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "subTickOrder", "comp_256", "subTickOrder", "f_193380_"), "()J");
    }

    static jlong _subTickOrder(const jobject& obj) {
                
       const auto methodID = methodID__subTickOrder();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_TICK_ORDEREDTICK_HPP