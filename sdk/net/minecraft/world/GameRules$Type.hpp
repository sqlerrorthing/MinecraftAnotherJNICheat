// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GAMERULES$TYPE_HPP
#define NET_MINECRAFT_WORLD_GAMERULES$TYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.GameRules$Type
 * Remapped: dcs$f
 */
namespace GameRules$Type {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dcs$f", "net/minecraft/world/level/GameRules$Type", "net/minecraft/class_1928$class_4314", "net/minecraft/world/GameRules$Type", "net/minecraft/src/C_1583_$C_1590_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.world.GameRules$Type#argumentType
    static jobject get_field_argumentType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "argument", "field_19414", "argumentType", "f_46337_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.GameRules$Type#argumentType
    static void set_field_argumentType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "argument", "field_19414", "argumentType", "f_46337_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.GameRules$Type#ruleFactory
    static jobject get_field_ruleFactory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "constructor", "field_19415", "ruleFactory", "f_46338_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.GameRules$Type#ruleFactory
    static void set_field_ruleFactory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "constructor", "field_19415", "ruleFactory", "f_46338_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.GameRules$Type#changeCallback
    static jobject get_field_changeCallback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "callback", "field_19416", "changeCallback", "f_46339_"), "Ljava/util/function/BiConsumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.GameRules$Type#changeCallback
    static void set_field_changeCallback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "callback", "field_19416", "changeCallback", "f_46339_"), "Ljava/util/function/BiConsumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.GameRules$Type#ruleAcceptor
    static jobject get_field_ruleAcceptor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "visitorCaller", "field_24104", "ruleAcceptor", "f_46340_"), "Ldcs$h;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.GameRules$Type#ruleAcceptor
    static void set_field_ruleAcceptor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "visitorCaller", "field_24104", "ruleAcceptor", "f_46340_"), "Ldcs$h;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_argument() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createArgument", "method_20775", "argument", "m_46358_"), "(Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;");
    }

    static jobject argument(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_argument();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createRule", "method_20773", "createRule", "m_46352_"), "()Ldcs$g;");
    }

    static jobject createRule(const jobject& obj) {
                
       const auto methodID = methodID_createRule();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_accept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "callVisitor", "method_27336", "accept", "m_46353_"), "(Ldcs$c;Ldcs$e;)V");
    }

    static void accept(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_accept();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GAMERULES$TYPE_HPP