// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_BLOCKRENDERVIEW_HPP
#define NET_MINECRAFT_WORLD_BLOCKRENDERVIEW_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.BlockRenderView
 * Remapped: dbz
 */
namespace BlockRenderView {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dbz", "net/minecraft/world/level/BlockAndTintGetter", "net/minecraft/class_1920", "net/minecraft/world/BlockRenderView", "net/minecraft/src/C_1557_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getBrightness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getShade", "method_24852", "getBrightness", "m_7717_"), "(Lji;Z)F");
    }

    static jfloat getBrightness(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_getBrightness();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLightingProvider() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y_", "getLightEngine", "method_22336", "getLightingProvider", "m_5518_"), "()Leot;");
    }

    static jobject getLightingProvider(const jobject& obj) {
                
       const auto methodID = methodID_getLightingProvider();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlockTint", "method_23752", "getColor", "m_6171_"), "(Ljd;Ldch;)I");
    }

    static jint getColor(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLightLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBrightness", "method_8314", "getLightLevel", "m_45517_"), "(Lddf;Ljd;)I");
    }

    static jint getLightLevel(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getLightLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBaseLightLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRawBrightness", "method_22335", "getBaseLightLevel", "m_45524_"), "(Ljd;I)I");
    }

    static jint getBaseLightLevel(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_getBaseLightLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isSkyVisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "canSeeSky", "method_8311", "isSkyVisible", "m_45527_"), "(Ljd;)Z");
    }

    static jboolean isSkyVisible(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isSkyVisible();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_BLOCKRENDERVIEW_HPP