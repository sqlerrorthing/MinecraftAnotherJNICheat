// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_UPDATER_WORLDUPDATER$REGIONUPDATE_HPP
#define NET_MINECRAFT_WORLD_UPDATER_WORLDUPDATER$REGIONUPDATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.updater.WorldUpdater$RegionUpdate
 * Remapped: bqf$b
 */
namespace WorldUpdater$RegionUpdate {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bqf$b", "net/minecraft/util/worldupdate/WorldUpgrader$ChunkUpgrader", "net/minecraft/class_1257$class_9162", "net/minecraft/world/updater/WorldUpdater$RegionUpdate", "net/minecraft/src/C_458_$C_313485_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryProcessOnePosition", "method_56547", "update", "m_318768_"), "(Ldwj;Ldcd;Lakq;)Z");
    }

    static jboolean update(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_update();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_openStorage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createStorage", "method_56549", "openStorage", "m_322985_"), "(Ldws;Ljava/nio/file/Path;)Ldwj;");
    }

    static jobject openStorage(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_openStorage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_UPDATER_WORLDUPDATER$REGIONUPDATE_HPP