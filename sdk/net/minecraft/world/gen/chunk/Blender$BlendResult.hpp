// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_CHUNK_BLENDER$BLENDRESULT_HPP
#define NET_MINECRAFT_WORLD_GEN_CHUNK_BLENDER$BLENDRESULT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.chunk.Blender$BlendResult
 * Remapped: eaa$a
 */
namespace Blender$BlendResult {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eaa$a", "net/minecraft/world/level/levelgen/blending/Blender$BlendingOutput", "net/minecraft/class_6748$class_6956", "net/minecraft/world/gen/chunk/Blender$BlendResult", "net/minecraft/src/C_182955_$C_207020_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.gen.chunk.Blender$BlendResult#alpha
    static jdouble get_field_alpha(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "alpha", "comp_435", "alpha", "f_209729_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.Blender$BlendResult#alpha
    static void set_field_alpha(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "alpha", "comp_435", "alpha", "f_209729_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.Blender$BlendResult#blendingOffset
    static jdouble get_field_blendingOffset(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "blendingOffset", "comp_436", "blendingOffset", "f_209730_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.Blender$BlendResult#blendingOffset
    static void set_field_blendingOffset(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "blendingOffset", "comp_436", "blendingOffset", "f_209730_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    static jmethodID methodID__alpha() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "alpha", "comp_435", "alpha", "f_209729_"), "()D");
    }

    static jdouble _alpha(const jobject& obj) {
                
       const auto methodID = methodID__alpha();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID__blendingOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "blendingOffset", "comp_436", "blendingOffset", "f_209730_"), "()D");
    }

    static jdouble _blendingOffset(const jobject& obj) {
                
       const auto methodID = methodID__blendingOffset();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_CHUNK_BLENDER$BLENDRESULT_HPP