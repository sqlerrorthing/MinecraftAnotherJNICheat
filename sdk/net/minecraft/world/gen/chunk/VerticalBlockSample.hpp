// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_CHUNK_VERTICALBLOCKSAMPLE_HPP
#define NET_MINECRAFT_WORLD_GEN_CHUNK_VERTICALBLOCKSAMPLE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.chunk.VerticalBlockSample
 * Remapped: ddi
 */
namespace VerticalBlockSample {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ddi", "net/minecraft/world/level/NoiseColumn", "net/minecraft/class_4966", "net/minecraft/world/gen/chunk/VerticalBlockSample", "net/minecraft/src/C_1614_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.gen.chunk.VerticalBlockSample#startY
    static jint get_field_startY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "minY", "field_28105", "startY", "f_151621_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.VerticalBlockSample#startY
    static void set_field_startY(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "minY", "field_28105", "startY", "f_151621_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.VerticalBlockSample#states
    static jobject get_field_states(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "column", "field_23143", "states", "f_47149_"), "[Ldtc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.VerticalBlockSample#states
    static void set_field_states(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "column", "field_23143", "states", "f_47149_"), "[Ldtc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlock", "method_32892", "getState", "m_183556_"), "(I)Ldtc;");
    }

    static jobject getState(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlock", "method_38092", "setState", "m_183639_"), "(ILdtc;)V");
    }

    static void setState(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_CHUNK_VERTICALBLOCKSAMPLE_HPP