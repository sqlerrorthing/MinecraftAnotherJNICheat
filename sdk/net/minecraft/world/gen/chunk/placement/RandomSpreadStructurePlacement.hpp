// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_CHUNK_PLACEMENT_RANDOMSPREADSTRUCTUREPLACEMENT_HPP
#define NET_MINECRAFT_WORLD_GEN_CHUNK_PLACEMENT_RANDOMSPREADSTRUCTUREPLACEMENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.chunk.placement.RandomSpreadStructurePlacement
 * Remapped: ekm
 */
namespace RandomSpreadStructurePlacement {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ekm", "net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement", "net/minecraft/class_6872", "net/minecraft/world/gen/chunk/placement/RandomSpreadStructurePlacement", "net/minecraft/src/C_203219_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.chunk.placement.RandomSpreadStructurePlacement#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_36420", "CODEC", "f_204972_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.chunk.placement.RandomSpreadStructurePlacement#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_36420", "CODEC", "f_204972_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.placement.RandomSpreadStructurePlacement#spacing
    static jint get_field_spacing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "spacing", "field_37772", "spacing", "f_204973_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.placement.RandomSpreadStructurePlacement#spacing
    static void set_field_spacing(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "spacing", "field_37772", "spacing", "f_204973_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.placement.RandomSpreadStructurePlacement#separation
    static jint get_field_separation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "separation", "field_37773", "separation", "f_204974_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.placement.RandomSpreadStructurePlacement#separation
    static void set_field_separation(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "separation", "field_37773", "separation", "f_204974_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.placement.RandomSpreadStructurePlacement#spreadType
    static jobject get_field_spreadType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "spreadType", "field_37774", "spreadType", "f_204975_"), "Lekn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.placement.RandomSpreadStructurePlacement#spreadType
    static void set_field_spreadType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "spreadType", "field_37774", "spreadType", "f_204975_"), "Lekn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validate", "method_51720", "validate", "m_285838_"), "(Lekm;)Lcom/mojang/serialization/DataResult;");
    }

    static jobject validate(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_validate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getSpacing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spacing", "method_41632", "getSpacing", "m_205003_"), "()I");
    }

    static jint getSpacing(const jobject& obj) {
                
       const auto methodID = methodID_getSpacing();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSeparation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "separation", "method_41633", "getSeparation", "m_205004_"), "()I");
    }

    static jint getSeparation(const jobject& obj) {
                
       const auto methodID = methodID_getSeparation();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpreadType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "spreadType", "method_41634", "getSpreadType", "m_205005_"), "()Lekn;");
    }

    static jobject getSpreadType(const jobject& obj) {
                
       const auto methodID = methodID_getSpreadType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStartChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPotentialStructureChunk", "method_40169", "getStartChunk", "m_227008_"), "(JII)Ldcd;");
    }

    static jobject getStartChunk(const jobject& obj, const jlong& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_getStartChunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isStartChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isPlacementChunk", "method_40168", "isStartChunk", "m_214090_"), "(Ldva;II)Z");
    }

    static jboolean isStartChunk(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_isStartChunk();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "type", "method_40166", "getType", "m_203443_"), "()Lekp;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_CHUNK_PLACEMENT_RANDOMSPREADSTRUCTUREPLACEMENT_HPP