// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_CHUNK_PLACEMENT_STRUCTUREPLACEMENTTYPE_HPP
#define NET_MINECRAFT_WORLD_GEN_CHUNK_PLACEMENT_STRUCTUREPLACEMENTTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.chunk.placement.StructurePlacementType
 * Remapped: ekp
 */
namespace StructurePlacementType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ekp", "net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType", "net/minecraft/class_6875", "net/minecraft/world/gen/chunk/placement/StructurePlacementType", "net/minecraft/src/C_203223_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.chunk.placement.StructurePlacementType#RANDOM_SPREAD
    [[maybe_unused]] static jobject get_field_RANDOM_SPREAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RANDOM_SPREAD", "field_36429", "RANDOM_SPREAD", "f_205041_"), "Lekp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.chunk.placement.StructurePlacementType#RANDOM_SPREAD
    [[maybe_unused]] static void set_field_RANDOM_SPREAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RANDOM_SPREAD", "field_36429", "RANDOM_SPREAD", "f_205041_"), "Lekp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.chunk.placement.StructurePlacementType#CONCENTRIC_RINGS
    [[maybe_unused]] static jobject get_field_CONCENTRIC_RINGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CONCENTRIC_RINGS", "field_36430", "CONCENTRIC_RINGS", "f_205042_"), "Lekp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.chunk.placement.StructurePlacementType#CONCENTRIC_RINGS
    [[maybe_unused]] static void set_field_CONCENTRIC_RINGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CONCENTRIC_RINGS", "field_36430", "CONCENTRIC_RINGS", "f_205042_"), "Lekp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_codec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("codec", "codec", "", "", "m_205049_"), "()Lcom/mojang/serialization/MapCodec;");
    }

    static jobject codec(const jobject& obj) {
                
       const auto methodID = methodID_codec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_40177", "register", "m_205046_"), "(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lekp;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_CHUNK_PLACEMENT_STRUCTUREPLACEMENTTYPE_HPP