// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_CHUNK_PLACEMENT_STRUCTUREPLACEMENTCALCULATOR_HPP
#define NET_MINECRAFT_WORLD_GEN_CHUNK_PLACEMENT_STRUCTUREPLACEMENTCALCULATOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator
 * Remapped: dva
 */
namespace StructurePlacementCalculator {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dva", "net/minecraft/world/level/chunk/ChunkGeneratorStructureState", "net/minecraft/class_7869", "net/minecraft/world/gen/chunk/placement/StructurePlacementCalculator", "net/minecraft/src/C_254614_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_40899", "LOGGER", "f_254706_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_40899", "LOGGER", "f_254706_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#noiseConfig
    static jobject get_field_noiseConfig(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "randomState", "field_40900", "noiseConfig", "f_254677_"), "Ldzm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#noiseConfig
    static void set_field_noiseConfig(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "randomState", "field_40900", "noiseConfig", "f_254677_"), "Ldzm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#biomeSource
    static jobject get_field_biomeSource(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "biomeSource", "field_40901", "biomeSource", "f_254681_"), "Ldea;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#biomeSource
    static void set_field_biomeSource(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "biomeSource", "field_40901", "biomeSource", "f_254681_"), "Ldea;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#structureSeed
    static jlong get_field_structureSeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "levelSeed", "field_40902", "structureSeed", "f_254647_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#structureSeed
    static void set_field_structureSeed(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "levelSeed", "field_40902", "structureSeed", "f_254647_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#concentricRingSeed
    static jlong get_field_concentricRingSeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "concentricRingsSeed", "field_40903", "concentricRingSeed", "f_254746_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#concentricRingSeed
    static void set_field_concentricRingSeed(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "concentricRingsSeed", "field_40903", "concentricRingSeed", "f_254746_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#structuresToPlacements
    static jobject get_field_structuresToPlacements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "placementsForStructure", "field_40904", "structuresToPlacements", "f_254729_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#structuresToPlacements
    static void set_field_structuresToPlacements(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "placementsForStructure", "field_40904", "structuresToPlacements", "f_254729_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#concentricPlacementsToPositions
    static jobject get_field_concentricPlacementsToPositions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "ringPositions", "field_40905", "concentricPlacementsToPositions", "f_254674_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#concentricPlacementsToPositions
    static void set_field_concentricPlacementsToPositions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "ringPositions", "field_40905", "concentricPlacementsToPositions", "f_254674_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#calculated
    static jboolean get_field_calculated(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "hasGeneratedPositions", "field_40906", "calculated", "f_254710_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#calculated
    static void set_field_calculated(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "hasGeneratedPositions", "field_40906", "calculated", "f_254710_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#structureSets
    static jobject get_field_structureSets(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "possibleStructureSets", "field_40907", "structureSets", "f_254708_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.chunk.placement.StructurePlacementCalculator#structureSets
    static void set_field_structureSets(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "possibleStructureSets", "field_40907", "structureSets", "f_254708_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createForFlat", "method_46703", "create", "m_255343_"), "(Ldzm;JLdea;Ljava/util/stream/Stream;)Ldva;");
    }

    static jobject create(const jobject& arg0, const jlong& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createForNormal", "method_46702", "create", "m_255081_"), "(Ldzm;JLdea;Ljo;)Ldva;");
    }

    static jobject _create(const jobject& arg0, const jlong& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_hasValidBiome() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "hasBiomesForStructureSet", "method_46706", "hasValidBiome", "m_255180_"), "(Lejx;Ldea;)Z");
    }

    static jboolean hasValidBiome(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_hasValidBiome();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getStructureSets() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "possibleStructureSets", "method_46697", "getStructureSets", "m_255252_"), "()Ljava/util/List;");
    }

    static jobject getStructureSets(const jobject& obj) {
                
       const auto methodID = methodID_getStructureSets();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_calculate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "generatePositions", "method_46715", "calculate", "m_255138_"), "()V");
    }

    static void calculate(const jobject& obj) {
                
       const auto methodID = methodID_calculate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_calculateConcentricsRingPlacementPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "generateRingPositions", "method_46710", "calculateConcentricsRingPlacementPos", "m_255294_"), "(Ljm;Lekl;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject calculateConcentricsRingPlacementPos(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_calculateConcentricsRingPlacementPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tryCalculate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "ensureStructuresGenerated", "method_46712", "tryCalculate", "m_254958_"), "()V");
    }

    static void tryCalculate(const jobject& obj) {
                
       const auto methodID = methodID_tryCalculate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlacementPositions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRingPositionsFor", "method_46707", "getPlacementPositions", "m_255182_"), "(Lekl;)Ljava/util/List;");
    }

    static jobject getPlacementPositions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPlacementPositions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPlacements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPlacementsForStructure", "method_46708", "getPlacements", "m_255260_"), "(Ljm;)Ljava/util/List;");
    }

    static jobject getPlacements(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPlacements();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNoiseConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "randomState", "method_46713", "getNoiseConfig", "m_255046_"), "()Ldzm;");
    }

    static jobject getNoiseConfig(const jobject& obj) {
                
       const auto methodID = methodID_getNoiseConfig();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canGenerate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasStructureChunkInRange", "method_46709", "canGenerate", "m_254936_"), "(Ljm;III)Z");
    }

    static jboolean canGenerate(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_canGenerate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getStructureSeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getLevelSeed", "method_46714", "getStructureSeed", "m_254887_"), "()J");
    }

    static jlong getStructureSeed(const jobject& obj) {
                
       const auto methodID = methodID_getStructureSeed();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_CHUNK_PLACEMENT_STRUCTUREPLACEMENTCALCULATOR_HPP