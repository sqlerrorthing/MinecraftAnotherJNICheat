// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_PLACEMENTMODIFIER_PLACEMENTMODIFIERTYPE_HPP
#define NET_MINECRAFT_WORLD_GEN_PLACEMENTMODIFIER_PLACEMENTMODIFIERTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.placementmodifier.PlacementModifierType
 * Remapped: eiz
 */
namespace PlacementModifierType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eiz", "net/minecraft/world/level/levelgen/placement/PlacementModifierType", "net/minecraft/class_6798", "net/minecraft/world/gen/placementmodifier/PlacementModifierType", "net/minecraft/src/C_183018_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#BLOCK_PREDICATE_FILTER
    [[maybe_unused]] static jobject get_field_BLOCK_PREDICATE_FILTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLOCK_PREDICATE_FILTER", "field_35737", "BLOCK_PREDICATE_FILTER", "f_191848_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#BLOCK_PREDICATE_FILTER
    [[maybe_unused]] static void set_field_BLOCK_PREDICATE_FILTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLOCK_PREDICATE_FILTER", "field_35737", "BLOCK_PREDICATE_FILTER", "f_191848_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#RARITY_FILTER
    [[maybe_unused]] static jobject get_field_RARITY_FILTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RARITY_FILTER", "field_35738", "RARITY_FILTER", "f_191849_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#RARITY_FILTER
    [[maybe_unused]] static void set_field_RARITY_FILTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RARITY_FILTER", "field_35738", "RARITY_FILTER", "f_191849_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#SURFACE_RELATIVE_THRESHOLD_FILTER
    [[maybe_unused]] static jobject get_field_SURFACE_RELATIVE_THRESHOLD_FILTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SURFACE_RELATIVE_THRESHOLD_FILTER", "field_35739", "SURFACE_RELATIVE_THRESHOLD_FILTER", "f_191850_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#SURFACE_RELATIVE_THRESHOLD_FILTER
    [[maybe_unused]] static void set_field_SURFACE_RELATIVE_THRESHOLD_FILTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SURFACE_RELATIVE_THRESHOLD_FILTER", "field_35739", "SURFACE_RELATIVE_THRESHOLD_FILTER", "f_191850_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#SURFACE_WATER_DEPTH_FILTER
    [[maybe_unused]] static jobject get_field_SURFACE_WATER_DEPTH_FILTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SURFACE_WATER_DEPTH_FILTER", "field_35740", "SURFACE_WATER_DEPTH_FILTER", "f_191851_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#SURFACE_WATER_DEPTH_FILTER
    [[maybe_unused]] static void set_field_SURFACE_WATER_DEPTH_FILTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SURFACE_WATER_DEPTH_FILTER", "field_35740", "SURFACE_WATER_DEPTH_FILTER", "f_191851_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#BIOME
    [[maybe_unused]] static jobject get_field_BIOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "BIOME_FILTER", "field_35741", "BIOME", "f_191852_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#BIOME
    [[maybe_unused]] static void set_field_BIOME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "BIOME_FILTER", "field_35741", "BIOME", "f_191852_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#COUNT
    [[maybe_unused]] static jobject get_field_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "COUNT", "field_35742", "COUNT", "f_191853_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#COUNT
    [[maybe_unused]] static void set_field_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "COUNT", "field_35742", "COUNT", "f_191853_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#NOISE_BASED_COUNT
    [[maybe_unused]] static jobject get_field_NOISE_BASED_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NOISE_BASED_COUNT", "field_35743", "NOISE_BASED_COUNT", "f_191854_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#NOISE_BASED_COUNT
    [[maybe_unused]] static void set_field_NOISE_BASED_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NOISE_BASED_COUNT", "field_35743", "NOISE_BASED_COUNT", "f_191854_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#NOISE_THRESHOLD_COUNT
    [[maybe_unused]] static jobject get_field_NOISE_THRESHOLD_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "NOISE_THRESHOLD_COUNT", "field_35744", "NOISE_THRESHOLD_COUNT", "f_191855_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#NOISE_THRESHOLD_COUNT
    [[maybe_unused]] static void set_field_NOISE_THRESHOLD_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "NOISE_THRESHOLD_COUNT", "field_35744", "NOISE_THRESHOLD_COUNT", "f_191855_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#COUNT_ON_EVERY_LAYER
    [[maybe_unused]] static jobject get_field_COUNT_ON_EVERY_LAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "COUNT_ON_EVERY_LAYER", "field_35745", "COUNT_ON_EVERY_LAYER", "f_191856_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#COUNT_ON_EVERY_LAYER
    [[maybe_unused]] static void set_field_COUNT_ON_EVERY_LAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "COUNT_ON_EVERY_LAYER", "field_35745", "COUNT_ON_EVERY_LAYER", "f_191856_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#ENVIRONMENT_SCAN
    [[maybe_unused]] static jobject get_field_ENVIRONMENT_SCAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ENVIRONMENT_SCAN", "field_35746", "ENVIRONMENT_SCAN", "f_191857_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#ENVIRONMENT_SCAN
    [[maybe_unused]] static void set_field_ENVIRONMENT_SCAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ENVIRONMENT_SCAN", "field_35746", "ENVIRONMENT_SCAN", "f_191857_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#HEIGHTMAP
    [[maybe_unused]] static jobject get_field_HEIGHTMAP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "HEIGHTMAP", "field_35747", "HEIGHTMAP", "f_191858_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#HEIGHTMAP
    [[maybe_unused]] static void set_field_HEIGHTMAP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "HEIGHTMAP", "field_35747", "HEIGHTMAP", "f_191858_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#HEIGHT_RANGE
    [[maybe_unused]] static jobject get_field_HEIGHT_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "HEIGHT_RANGE", "field_35748", "HEIGHT_RANGE", "f_191859_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#HEIGHT_RANGE
    [[maybe_unused]] static void set_field_HEIGHT_RANGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "HEIGHT_RANGE", "field_35748", "HEIGHT_RANGE", "f_191859_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#IN_SQUARE
    [[maybe_unused]] static jobject get_field_IN_SQUARE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "IN_SQUARE", "field_35749", "IN_SQUARE", "f_191860_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#IN_SQUARE
    [[maybe_unused]] static void set_field_IN_SQUARE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "IN_SQUARE", "field_35749", "IN_SQUARE", "f_191860_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#RANDOM_OFFSET
    [[maybe_unused]] static jobject get_field_RANDOM_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "RANDOM_OFFSET", "field_35750", "RANDOM_OFFSET", "f_191861_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#RANDOM_OFFSET
    [[maybe_unused]] static void set_field_RANDOM_OFFSET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "RANDOM_OFFSET", "field_35750", "RANDOM_OFFSET", "f_191861_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#CARVING_MASK
    [[maybe_unused]] static jobject get_field_CARVING_MASK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CARVING_MASK_PLACEMENT", "field_35751", "CARVING_MASK", "f_191862_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#CARVING_MASK
    [[maybe_unused]] static void set_field_CARVING_MASK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CARVING_MASK_PLACEMENT", "field_35751", "CARVING_MASK", "f_191862_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#FIXED_PLACEMENT
    [[maybe_unused]] static jobject get_field_FIXED_PLACEMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "FIXED_PLACEMENT", "field_52292", "FIXED_PLACEMENT", "f_337737_"), "Leiz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.placementmodifier.PlacementModifierType#FIXED_PLACEMENT
    [[maybe_unused]] static void set_field_FIXED_PLACEMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "FIXED_PLACEMENT", "field_52292", "FIXED_PLACEMENT", "f_337737_"), "Leiz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_codec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("codec", "codec", "", "", "m_191869_"), "()Lcom/mojang/serialization/MapCodec;");
    }

    static jobject codec(const jobject& obj) {
                
       const auto methodID = methodID_codec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_39655", "register", "m_191866_"), "(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leiz;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_PLACEMENTMODIFIER_PLACEMENTMODIFIERTYPE_HPP