// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_CARVER_RAVINECARVER_HPP
#define NET_MINECRAFT_WORLD_GEN_CARVER_RAVINECARVER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.carver.RavineCarver
 * Remapped: eaw
 */
namespace RavineCarver {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eaw", "net/minecraft/world/level/levelgen/carver/CanyonWorldCarver", "net/minecraft/class_5870", "net/minecraft/world/gen/carver/RavineCarver", "net/minecraft/src/C_2203_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_shouldCarve() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isStartChunk", "method_33959", "shouldCarve", "m_214133_"), "(Leav;Layw;)Z");
    }

    static jboolean shouldCarve(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_shouldCarve();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_carve() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "carve", "method_33962", "carve", "m_213788_"), "(Leaz;Leav;Lduy;Ljava/util/function/Function;Layw;Ldyk;Ldcd;Ldux;)Z");
    }

    static jboolean carve(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6, const jobject& arg7) {
                
       const auto methodID = methodID_carve();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_carveRavine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doCarve", "method_33961", "carveRavine", "m_190593_"), "(Leaz;Leav;Lduy;Ljava/util/function/Function;JLdyk;DDDFFFIIDLdux;)V");
    }

    static void carveRavine(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jlong& arg4, const jobject& arg5, const jdouble& arg6, const jdouble& arg7, const jdouble& arg8, const jfloat& arg9, const jfloat& arg10, const jfloat& arg11, const jint& arg12, const jint& arg13, const jdouble& arg14, const jobject& arg15) {
                
       const auto methodID = methodID_carveRavine();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15);
    };
    
    static jmethodID methodID_createHorizontalStretchFactors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "initWidthFactors", "method_33966", "createHorizontalStretchFactors", "m_224808_"), "(Leaz;Leav;Layw;)[F");
    }

    static jfloat createHorizontalStretchFactors(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_createHorizontalStretchFactors();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getVerticalScale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateVerticalRadius", "method_33960", "getVerticalScale", "m_224799_"), "(Leav;Layw;DFF)D");
    }

    static jdouble getVerticalScale(const jobject& obj, const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jfloat& arg3, const jfloat& arg4) {
                
       const auto methodID = methodID_getVerticalScale();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_isPositionExcluded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldSkip", "method_33964", "isPositionExcluded", "m_159073_"), "(Leaz;[FDDDI)Z");
    }

    static jboolean isPositionExcluded(const jobject& obj, const jobject& arg0, const jarray& arg1, const jfloat& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jint& arg6) {
                
       const auto methodID = methodID_isPositionExcluded();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_CARVER_RAVINECARVER_HPP