// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_CARVER_NETHERCAVECARVER_HPP
#define NET_MINECRAFT_WORLD_GEN_CARVER_NETHERCAVECARVER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.carver.NetherCaveCarver
 * Remapped: ebd
 */
namespace NetherCaveCarver {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ebd", "net/minecraft/world/level/levelgen/carver/NetherWorldCarver", "net/minecraft/class_2934", "net/minecraft/world/gen/carver/NetherCaveCarver", "net/minecraft/src/C_2208_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getMaxCaveCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getCaveBound", "method_16577", "getMaxCaveCount", "m_6208_"), "()I");
    }

    static jint getMaxCaveCount(const jobject& obj) {
                
       const auto methodID = methodID_getMaxCaveCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTunnelSystemWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getThickness", "method_16576", "getTunnelSystemWidth", "m_213592_"), "(Layw;)F");
    }

    static jfloat getTunnelSystemWidth(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTunnelSystemWidth();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTunnelSystemHeightWidthRatio() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getYScale", "method_16578", "getTunnelSystemHeightWidthRatio", "m_6203_"), "()D");
    }

    static jdouble getTunnelSystemHeightWidthRatio(const jobject& obj) {
                
       const auto methodID = methodID_getTunnelSystemHeightWidthRatio();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_carveAtPoint() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "carveBlock", "method_35359", "carveAtPoint", "m_183633_"), "(Leaz;Leba;Lduy;Ljava/util/function/Function;Ldux;Ljd$a;Ljd$a;Ldyk;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z");
    }

    static jboolean carveAtPoint(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6, const jobject& arg7, const jobject& arg8) {
                
       const auto methodID = methodID_carveAtPoint();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_CARVER_NETHERCAVECARVER_HPP