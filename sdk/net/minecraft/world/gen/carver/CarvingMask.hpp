// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_CARVER_CARVINGMASK_HPP
#define NET_MINECRAFT_WORLD_GEN_CARVER_CARVINGMASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.carver.CarvingMask
 * Remapped: dux
 */
namespace CarvingMask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dux", "net/minecraft/world/level/chunk/CarvingMask", "net/minecraft/class_6643", "net/minecraft/world/gen/carver/CarvingMask", "net/minecraft/src/C_182875_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.gen.carver.CarvingMask#bottomY
    static jint get_field_bottomY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "minY", "field_35049", "bottomY", "f_187576_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.carver.CarvingMask#bottomY
    static void set_field_bottomY(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "minY", "field_35049", "bottomY", "f_187576_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.carver.CarvingMask#mask
    static jobject get_field_mask(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "mask", "field_35050", "mask", "f_187577_"), "Ljava/util/BitSet;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.carver.CarvingMask#mask
    static void set_field_mask(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "mask", "field_35050", "mask", "f_187577_"), "Ljava/util/BitSet;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.carver.CarvingMask#maskPredicate
    static jobject get_field_maskPredicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "additionalMask", "field_36217", "maskPredicate", "f_196706_"), "Ldux$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.carver.CarvingMask#maskPredicate
    static void set_field_maskPredicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "additionalMask", "field_36217", "maskPredicate", "f_196706_"), "Ldux$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_setMaskPredicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setAdditionalMask", "method_39785", "setMaskPredicate", "m_196710_"), "(Ldux$a;)V");
    }

    static void setMaskPredicate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setMaskPredicate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getIndex", "method_38869", "getIndex", "m_187598_"), "(III)I");
    }

    static jint getIndex(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_getIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "set", "method_38865", "set", "m_187585_"), "(III)V");
    }

    static void set(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_set();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "get", "method_38868", "get", "m_187594_"), "(III)Z");
    }

    static jboolean get(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_streamBlockPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stream", "method_38866", "streamBlockPos", "m_187589_"), "(Ldcd;)Ljava/util/stream/Stream;");
    }

    static jobject streamBlockPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_streamBlockPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "toArray", "method_38864", "getMask", "m_187584_"), "()[J");
    }

    static jlong getMask(const jobject& obj) {
                
       const auto methodID = methodID_getMask();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_CARVER_CARVINGMASK_HPP