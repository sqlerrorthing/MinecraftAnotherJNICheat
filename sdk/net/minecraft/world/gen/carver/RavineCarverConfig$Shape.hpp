// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_CARVER_RAVINECARVERCONFIG$SHAPE_HPP
#define NET_MINECRAFT_WORLD_GEN_CARVER_RAVINECARVERCONFIG$SHAPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.carver.RavineCarverConfig$Shape
 * Remapped: eav$a
 */
namespace RavineCarverConfig$Shape {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eav$a", "net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration", "net/minecraft/class_5869$class_6107", "net/minecraft/world/gen/carver/RavineCarverConfig$Shape", "net/minecraft/src/C_141352_$C_141353_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_31481", "CODEC", "f_158991_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_31481", "CODEC", "f_158991_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#distanceFactor
    static jobject get_field_distanceFactor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "distanceFactor", "field_31482", "distanceFactor", "f_158992_"), "Lbpu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#distanceFactor
    static void set_field_distanceFactor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "distanceFactor", "field_31482", "distanceFactor", "f_158992_"), "Lbpu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#thickness
    static jobject get_field_thickness(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "thickness", "field_31483", "thickness", "f_158993_"), "Lbpu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#thickness
    static void set_field_thickness(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "thickness", "field_31483", "thickness", "f_158993_"), "Lbpu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#widthSmoothness
    static jint get_field_widthSmoothness(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "widthSmoothness", "field_31484", "widthSmoothness", "f_158994_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#widthSmoothness
    static void set_field_widthSmoothness(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "widthSmoothness", "field_31484", "widthSmoothness", "f_158994_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#horizontalRadiusFactor
    static jobject get_field_horizontalRadiusFactor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "horizontalRadiusFactor", "field_31485", "horizontalRadiusFactor", "f_158995_"), "Lbpu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#horizontalRadiusFactor
    static void set_field_horizontalRadiusFactor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "horizontalRadiusFactor", "field_31485", "horizontalRadiusFactor", "f_158995_"), "Lbpu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#verticalRadiusDefaultFactor
    static jfloat get_field_verticalRadiusDefaultFactor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "verticalRadiusDefaultFactor", "field_31486", "verticalRadiusDefaultFactor", "f_158996_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#verticalRadiusDefaultFactor
    static void set_field_verticalRadiusDefaultFactor(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "verticalRadiusDefaultFactor", "field_31486", "verticalRadiusDefaultFactor", "f_158996_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#verticalRadiusCenterFactor
    static jfloat get_field_verticalRadiusCenterFactor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "verticalRadiusCenterFactor", "field_31487", "verticalRadiusCenterFactor", "f_158997_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.carver.RavineCarverConfig$Shape#verticalRadiusCenterFactor
    static void set_field_verticalRadiusCenterFactor(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "verticalRadiusCenterFactor", "field_31487", "verticalRadiusCenterFactor", "f_158997_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

};

#endif // NET_MINECRAFT_WORLD_GEN_CARVER_RAVINECARVERCONFIG$SHAPE_HPP