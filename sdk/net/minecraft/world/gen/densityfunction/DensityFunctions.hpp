// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_DENSITYFUNCTION_DENSITYFUNCTIONS_HPP
#define NET_MINECRAFT_WORLD_GEN_DENSITYFUNCTION_DENSITYFUNCTIONS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.densityfunction.DensityFunctions
 * Remapped: dzf
 */
namespace DensityFunctions {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dzf", "net/minecraft/world/level/levelgen/NoiseRouterData", "net/minecraft/class_6954", "net/minecraft/world/gen/densityfunction/DensityFunctions", "net/minecraft/src/C_207015_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#field_37690
    [[maybe_unused]] static jfloat get_field_field_37690() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GLOBAL_OFFSET", "field_37690", "field_37690", "f_224426_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#field_37690
    [[maybe_unused]] static void set_field_field_37690(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GLOBAL_OFFSET", "field_37690", "field_37690", "f_224426_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#field_36614
    [[maybe_unused]] static jfloat get_field_field_36614() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ORE_THICKNESS", "field_36614", "field_36614", "f_209440_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#field_36614
    [[maybe_unused]] static void set_field_field_36614(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ORE_THICKNESS", "field_36614", "field_36614", "f_209440_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#field_36615
    [[maybe_unused]] static jdouble get_field_field_36615() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "VEININESS_FREQUENCY", "field_36615", "field_36615", "f_209441_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#field_36615
    [[maybe_unused]] static void set_field_field_36615(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "VEININESS_FREQUENCY", "field_36615", "field_36615", "f_209441_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#field_36616
    [[maybe_unused]] static jdouble get_field_field_36616() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "NOODLE_SPACING_AND_STRAIGHTNESS", "field_36616", "field_36616", "f_209442_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#field_36616
    [[maybe_unused]] static void set_field_field_36616(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "NOODLE_SPACING_AND_STRAIGHTNESS", "field_36616", "field_36616", "f_209442_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#field_36617
    [[maybe_unused]] static jdouble get_field_field_36617() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SURFACE_DENSITY_THRESHOLD", "field_36617", "field_36617", "f_209443_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#field_36617
    [[maybe_unused]] static void set_field_field_36617(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SURFACE_DENSITY_THRESHOLD", "field_36617", "field_36617", "f_209443_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#field_38250
    [[maybe_unused]] static jdouble get_field_field_38250() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "CHEESE_NOISE_TARGET", "field_38250", "field_38250", "f_224432_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#field_38250
    [[maybe_unused]] static void set_field_field_38250(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "CHEESE_NOISE_TARGET", "field_38250", "field_38250", "f_224432_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#field_37691
    [[maybe_unused]] static jint get_field_field_37691() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ISLAND_CHUNK_DISTANCE", "field_37691", "field_37691", "f_224427_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#field_37691
    [[maybe_unused]] static void set_field_field_37691(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ISLAND_CHUNK_DISTANCE", "field_37691", "field_37691", "f_224427_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#field_37692
    [[maybe_unused]] static jlong get_field_field_37692() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ISLAND_CHUNK_DISTANCE_SQR", "field_37692", "field_37692", "f_224428_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#field_37692
    [[maybe_unused]] static void set_field_field_37692(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ISLAND_CHUNK_DISTANCE_SQR", "field_37692", "field_37692", "f_224428_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#TEN_FUNCTION
    [[maybe_unused]] static jobject get_field_TEN_FUNCTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BLENDING_FACTOR", "field_36618", "TEN_FUNCTION", "f_209444_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#TEN_FUNCTION
    [[maybe_unused]] static void set_field_TEN_FUNCTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BLENDING_FACTOR", "field_36618", "TEN_FUNCTION", "f_209444_"), "Ldyr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#ZERO_FUNCTION
    [[maybe_unused]] static jobject get_field_ZERO_FUNCTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "BLENDING_JAGGEDNESS", "field_36619", "ZERO_FUNCTION", "f_209445_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#ZERO_FUNCTION
    [[maybe_unused]] static void set_field_ZERO_FUNCTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "BLENDING_JAGGEDNESS", "field_36619", "ZERO_FUNCTION", "f_209445_"), "Ldyr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#ZERO
    [[maybe_unused]] static jobject get_field_ZERO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ZERO", "field_37117", "ZERO", "f_209446_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#ZERO
    [[maybe_unused]] static void set_field_ZERO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ZERO", "field_37117", "ZERO", "f_209446_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#Y
    [[maybe_unused]] static jobject get_field_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "Y", "field_37118", "Y", "f_209447_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#Y
    [[maybe_unused]] static void set_field_Y(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "Y", "field_37118", "Y", "f_209447_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#SHIFT_X
    [[maybe_unused]] static jobject get_field_SHIFT_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SHIFT_X", "field_37119", "SHIFT_X", "f_209448_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#SHIFT_X
    [[maybe_unused]] static void set_field_SHIFT_X(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SHIFT_X", "field_37119", "SHIFT_X", "f_209448_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#SHIFT_Z
    [[maybe_unused]] static jobject get_field_SHIFT_Z() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SHIFT_Z", "field_37120", "SHIFT_Z", "f_209449_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#SHIFT_Z
    [[maybe_unused]] static void set_field_SHIFT_Z(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SHIFT_Z", "field_37120", "SHIFT_Z", "f_209449_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#BASE_3D_NOISE_OVERWORLD
    [[maybe_unused]] static jobject get_field_BASE_3D_NOISE_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "BASE_3D_NOISE_OVERWORLD", "field_38251", "BASE_3D_NOISE_OVERWORLD", "f_224433_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#BASE_3D_NOISE_OVERWORLD
    [[maybe_unused]] static void set_field_BASE_3D_NOISE_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "BASE_3D_NOISE_OVERWORLD", "field_38251", "BASE_3D_NOISE_OVERWORLD", "f_224433_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#BASE_3D_NOISE_NETHER
    [[maybe_unused]] static jobject get_field_BASE_3D_NOISE_NETHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "BASE_3D_NOISE_NETHER", "field_38252", "BASE_3D_NOISE_NETHER", "f_224434_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#BASE_3D_NOISE_NETHER
    [[maybe_unused]] static void set_field_BASE_3D_NOISE_NETHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "BASE_3D_NOISE_NETHER", "field_38252", "BASE_3D_NOISE_NETHER", "f_224434_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#BASE_3D_NOISE_END
    [[maybe_unused]] static jobject get_field_BASE_3D_NOISE_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "BASE_3D_NOISE_END", "field_38249", "BASE_3D_NOISE_END", "f_224418_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#BASE_3D_NOISE_END
    [[maybe_unused]] static void set_field_BASE_3D_NOISE_END(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "BASE_3D_NOISE_END", "field_38249", "BASE_3D_NOISE_END", "f_224418_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#CONTINENTS_OVERWORLD
    [[maybe_unused]] static jobject get_field_CONTINENTS_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CONTINENTS", "field_37122", "CONTINENTS_OVERWORLD", "f_209451_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#CONTINENTS_OVERWORLD
    [[maybe_unused]] static void set_field_CONTINENTS_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CONTINENTS", "field_37122", "CONTINENTS_OVERWORLD", "f_209451_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#EROSION_OVERWORLD
    [[maybe_unused]] static jobject get_field_EROSION_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "EROSION", "field_37123", "EROSION_OVERWORLD", "f_209452_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#EROSION_OVERWORLD
    [[maybe_unused]] static void set_field_EROSION_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "EROSION", "field_37123", "EROSION_OVERWORLD", "f_209452_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#RIDGES_OVERWORLD
    [[maybe_unused]] static jobject get_field_RIDGES_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RIDGES", "field_37124", "RIDGES_OVERWORLD", "f_209453_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#RIDGES_OVERWORLD
    [[maybe_unused]] static void set_field_RIDGES_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RIDGES", "field_37124", "RIDGES_OVERWORLD", "f_209453_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#RIDGES_FOLDED_OVERWORLD
    [[maybe_unused]] static jobject get_field_RIDGES_FOLDED_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RIDGES_FOLDED", "field_37693", "RIDGES_FOLDED_OVERWORLD", "f_224429_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#RIDGES_FOLDED_OVERWORLD
    [[maybe_unused]] static void set_field_RIDGES_FOLDED_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RIDGES_FOLDED", "field_37693", "RIDGES_FOLDED_OVERWORLD", "f_224429_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#OFFSET_OVERWORLD
    [[maybe_unused]] static jobject get_field_OFFSET_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "OFFSET", "field_37694", "OFFSET_OVERWORLD", "f_224430_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#OFFSET_OVERWORLD
    [[maybe_unused]] static void set_field_OFFSET_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "OFFSET", "field_37694", "OFFSET_OVERWORLD", "f_224430_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#FACTOR_OVERWORLD
    [[maybe_unused]] static jobject get_field_FACTOR_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "FACTOR", "field_37125", "FACTOR_OVERWORLD", "f_209454_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#FACTOR_OVERWORLD
    [[maybe_unused]] static void set_field_FACTOR_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "FACTOR", "field_37125", "FACTOR_OVERWORLD", "f_209454_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#JAGGEDNESS_OVERWORLD
    [[maybe_unused]] static jobject get_field_JAGGEDNESS_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "JAGGEDNESS", "field_37695", "JAGGEDNESS_OVERWORLD", "f_224431_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#JAGGEDNESS_OVERWORLD
    [[maybe_unused]] static void set_field_JAGGEDNESS_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "JAGGEDNESS", "field_37695", "JAGGEDNESS_OVERWORLD", "f_224431_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#DEPTH_OVERWORLD
    [[maybe_unused]] static jobject get_field_DEPTH_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "DEPTH", "field_37126", "DEPTH_OVERWORLD", "f_209455_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#DEPTH_OVERWORLD
    [[maybe_unused]] static void set_field_DEPTH_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "DEPTH", "field_37126", "DEPTH_OVERWORLD", "f_209455_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#SLOPED_CHEESE_OVERWORLD
    [[maybe_unused]] static jobject get_field_SLOPED_CHEESE_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SLOPED_CHEESE", "field_37127", "SLOPED_CHEESE_OVERWORLD", "f_209456_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#SLOPED_CHEESE_OVERWORLD
    [[maybe_unused]] static void set_field_SLOPED_CHEESE_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SLOPED_CHEESE", "field_37127", "SLOPED_CHEESE_OVERWORLD", "f_209456_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#CONTINENTS_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static jobject get_field_CONTINENTS_OVERWORLD_LARGE_BIOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "CONTINENTS_LARGE", "field_37128", "CONTINENTS_OVERWORLD_LARGE_BIOME", "f_209457_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#CONTINENTS_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static void set_field_CONTINENTS_OVERWORLD_LARGE_BIOME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "CONTINENTS_LARGE", "field_37128", "CONTINENTS_OVERWORLD_LARGE_BIOME", "f_209457_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#EROSION_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static jobject get_field_EROSION_OVERWORLD_LARGE_BIOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "EROSION_LARGE", "field_37129", "EROSION_OVERWORLD_LARGE_BIOME", "f_209458_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.densityfunction.DensityFunctions#EROSION_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static void set_field_EROSION_OVERWORLD_LARGE_BIOME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "EROSION_LARGE", "field_37129", "EROSION_OVERWORLD_LARGE_BIOME", "f_209458_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#OFFSET_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static jobject get_field_OFFSET_OVERWORLD_LARGE_BIOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "OFFSET_LARGE", "field_37696", "OFFSET_OVERWORLD_LARGE_BIOME", "f_224419_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#OFFSET_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static void set_field_OFFSET_OVERWORLD_LARGE_BIOME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "OFFSET_LARGE", "field_37696", "OFFSET_OVERWORLD_LARGE_BIOME", "f_224419_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#FACTOR_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static jobject get_field_FACTOR_OVERWORLD_LARGE_BIOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "FACTOR_LARGE", "field_37130", "FACTOR_OVERWORLD_LARGE_BIOME", "f_209459_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#FACTOR_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static void set_field_FACTOR_OVERWORLD_LARGE_BIOME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "FACTOR_LARGE", "field_37130", "FACTOR_OVERWORLD_LARGE_BIOME", "f_209459_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#JAGGEDNESS_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static jobject get_field_JAGGEDNESS_OVERWORLD_LARGE_BIOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "JAGGEDNESS_LARGE", "field_37684", "JAGGEDNESS_OVERWORLD_LARGE_BIOME", "f_224420_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#JAGGEDNESS_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static void set_field_JAGGEDNESS_OVERWORLD_LARGE_BIOME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "JAGGEDNESS_LARGE", "field_37684", "JAGGEDNESS_OVERWORLD_LARGE_BIOME", "f_224420_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#DEPTH_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static jobject get_field_DEPTH_OVERWORLD_LARGE_BIOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "DEPTH_LARGE", "field_37131", "DEPTH_OVERWORLD_LARGE_BIOME", "f_209460_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#DEPTH_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static void set_field_DEPTH_OVERWORLD_LARGE_BIOME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "DEPTH_LARGE", "field_37131", "DEPTH_OVERWORLD_LARGE_BIOME", "f_209460_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#SLOPED_CHEESE_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static jobject get_field_SLOPED_CHEESE_OVERWORLD_LARGE_BIOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "SLOPED_CHEESE_LARGE", "field_37132", "SLOPED_CHEESE_OVERWORLD_LARGE_BIOME", "f_209461_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#SLOPED_CHEESE_OVERWORLD_LARGE_BIOME
    [[maybe_unused]] static void set_field_SLOPED_CHEESE_OVERWORLD_LARGE_BIOME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "SLOPED_CHEESE_LARGE", "field_37132", "SLOPED_CHEESE_OVERWORLD_LARGE_BIOME", "f_209461_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#OFFSET_OVERWORLD_AMPLIFIED
    [[maybe_unused]] static jobject get_field_OFFSET_OVERWORLD_AMPLIFIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "OFFSET_AMPLIFIED", "field_37685", "OFFSET_OVERWORLD_AMPLIFIED", "f_224421_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#OFFSET_OVERWORLD_AMPLIFIED
    [[maybe_unused]] static void set_field_OFFSET_OVERWORLD_AMPLIFIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "OFFSET_AMPLIFIED", "field_37685", "OFFSET_OVERWORLD_AMPLIFIED", "f_224421_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#FACTOR_OVERWORLD_AMPLIFIED
    [[maybe_unused]] static jobject get_field_FACTOR_OVERWORLD_AMPLIFIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "FACTOR_AMPLIFIED", "field_37686", "FACTOR_OVERWORLD_AMPLIFIED", "f_224422_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#FACTOR_OVERWORLD_AMPLIFIED
    [[maybe_unused]] static void set_field_FACTOR_OVERWORLD_AMPLIFIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "FACTOR_AMPLIFIED", "field_37686", "FACTOR_OVERWORLD_AMPLIFIED", "f_224422_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#JAGGEDNESS_OVERWORLD_AMPLIFIED
    [[maybe_unused]] static jobject get_field_JAGGEDNESS_OVERWORLD_AMPLIFIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "JAGGEDNESS_AMPLIFIED", "field_37687", "JAGGEDNESS_OVERWORLD_AMPLIFIED", "f_224423_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#JAGGEDNESS_OVERWORLD_AMPLIFIED
    [[maybe_unused]] static void set_field_JAGGEDNESS_OVERWORLD_AMPLIFIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "JAGGEDNESS_AMPLIFIED", "field_37687", "JAGGEDNESS_OVERWORLD_AMPLIFIED", "f_224423_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#DEPTH_OVERWORLD_AMPLIFIED
    [[maybe_unused]] static jobject get_field_DEPTH_OVERWORLD_AMPLIFIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "DEPTH_AMPLIFIED", "field_37688", "DEPTH_OVERWORLD_AMPLIFIED", "f_224424_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#DEPTH_OVERWORLD_AMPLIFIED
    [[maybe_unused]] static void set_field_DEPTH_OVERWORLD_AMPLIFIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "DEPTH_AMPLIFIED", "field_37688", "DEPTH_OVERWORLD_AMPLIFIED", "f_224424_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#SLOPED_CHEESE_OVERWORLD_AMPLIFIED
    [[maybe_unused]] static jobject get_field_SLOPED_CHEESE_OVERWORLD_AMPLIFIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SLOPED_CHEESE_AMPLIFIED", "field_37689", "SLOPED_CHEESE_OVERWORLD_AMPLIFIED", "f_224425_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#SLOPED_CHEESE_OVERWORLD_AMPLIFIED
    [[maybe_unused]] static void set_field_SLOPED_CHEESE_OVERWORLD_AMPLIFIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SLOPED_CHEESE_AMPLIFIED", "field_37689", "SLOPED_CHEESE_OVERWORLD_AMPLIFIED", "f_224425_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#SLOPED_CHEESE_END
    [[maybe_unused]] static jobject get_field_SLOPED_CHEESE_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SLOPED_CHEESE_END", "field_37133", "SLOPED_CHEESE_END", "f_209462_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#SLOPED_CHEESE_END
    [[maybe_unused]] static void set_field_SLOPED_CHEESE_END(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SLOPED_CHEESE_END", "field_37133", "SLOPED_CHEESE_END", "f_209462_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#CAVES_SPAGHETTI_ROUGHNESS_FUNCTION_OVERWORLD
    [[maybe_unused]] static jobject get_field_CAVES_SPAGHETTI_ROUGHNESS_FUNCTION_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "SPAGHETTI_ROUGHNESS_FUNCTION", "field_37134", "CAVES_SPAGHETTI_ROUGHNESS_FUNCTION_OVERWORLD", "f_209463_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#CAVES_SPAGHETTI_ROUGHNESS_FUNCTION_OVERWORLD
    [[maybe_unused]] static void set_field_CAVES_SPAGHETTI_ROUGHNESS_FUNCTION_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "SPAGHETTI_ROUGHNESS_FUNCTION", "field_37134", "CAVES_SPAGHETTI_ROUGHNESS_FUNCTION_OVERWORLD", "f_209463_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#CAVES_ENTRANCES_OVERWORLD
    [[maybe_unused]] static jobject get_field_CAVES_ENTRANCES_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "ENTRANCES", "field_37135", "CAVES_ENTRANCES_OVERWORLD", "f_209464_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#CAVES_ENTRANCES_OVERWORLD
    [[maybe_unused]] static void set_field_CAVES_ENTRANCES_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "ENTRANCES", "field_37135", "CAVES_ENTRANCES_OVERWORLD", "f_209464_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#CAVES_NOODLE_OVERWORLD
    [[maybe_unused]] static jobject get_field_CAVES_NOODLE_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "NOODLE", "field_37136", "CAVES_NOODLE_OVERWORLD", "f_209465_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#CAVES_NOODLE_OVERWORLD
    [[maybe_unused]] static void set_field_CAVES_NOODLE_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "NOODLE", "field_37136", "CAVES_NOODLE_OVERWORLD", "f_209465_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#CAVES_PILLARS_OVERWORLD
    [[maybe_unused]] static jobject get_field_CAVES_PILLARS_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "PILLARS", "field_37114", "CAVES_PILLARS_OVERWORLD", "f_209437_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#CAVES_PILLARS_OVERWORLD
    [[maybe_unused]] static void set_field_CAVES_PILLARS_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "PILLARS", "field_37114", "CAVES_PILLARS_OVERWORLD", "f_209437_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#CAVES_SPAGHETTI_2D_THICKNESS_MODULATOR_OVERWORLD
    [[maybe_unused]] static jobject get_field_CAVES_SPAGHETTI_2D_THICKNESS_MODULATOR_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "SPAGHETTI_2D_THICKNESS_MODULATOR", "field_37115", "CAVES_SPAGHETTI_2D_THICKNESS_MODULATOR_OVERWORLD", "f_209438_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#CAVES_SPAGHETTI_2D_THICKNESS_MODULATOR_OVERWORLD
    [[maybe_unused]] static void set_field_CAVES_SPAGHETTI_2D_THICKNESS_MODULATOR_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "SPAGHETTI_2D_THICKNESS_MODULATOR", "field_37115", "CAVES_SPAGHETTI_2D_THICKNESS_MODULATOR_OVERWORLD", "f_209438_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#CAVES_SPAGHETTI_2D_OVERWORLD
    [[maybe_unused]] static jobject get_field_CAVES_SPAGHETTI_2D_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "SPAGHETTI_2D", "field_37116", "CAVES_SPAGHETTI_2D_OVERWORLD", "f_209439_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.densityfunction.DensityFunctions#CAVES_SPAGHETTI_2D_OVERWORLD
    [[maybe_unused]] static void set_field_CAVES_SPAGHETTI_2D_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "SPAGHETTI_2D", "field_37116", "CAVES_SPAGHETTI_2D_OVERWORLD", "f_209439_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createKey", "method_41109", "of", "m_209536_"), "(Ljava/lang/String;)Lakq;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_bootstrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_41100", "bootstrap", "m_255288_"), "(Lqq;)Ljm;");
    }

    static jobject bootstrap(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_bootstrap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_registerSlopedCheeseFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "registerTerrainNoises", "method_41548", "registerSlopedCheeseFunction", "m_224474_"), "(Lqq;Ljn;Ldyr;Ljm;Ljm;Lakq;Lakq;Lakq;Lakq;Lakq;Z)V");
    }

    static void registerSlopedCheeseFunction(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6, const jobject& arg7, const jobject& arg8, const jobject& arg9, const jboolean& arg10) {
       const auto clazz = self();
       const auto methodID = methodID_registerSlopedCheeseFunction();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    };
    
    static jmethodID methodID_registerAndGetHolder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "registerAndWrap", "method_41551", "registerAndGetHolder", "m_255105_"), "(Lqq;Lakq;Ldyr;)Ldyr;");
    }

    static jobject registerAndGetHolder(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_registerAndGetHolder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_entryHolder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getFunction", "method_41116", "entryHolder", "m_255403_"), "(Ljn;Lakq;)Ldyr;");
    }

    static jobject entryHolder(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_entryHolder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createRidgesFoldedOverworldFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "peaksAndValleys", "method_41547", "createRidgesFoldedOverworldFunction", "m_224437_"), "(Ldyr;)Ldyr;");
    }

    static jobject createRidgesFoldedOverworldFunction(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createRidgesFoldedOverworldFunction();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getPeaksValleysNoise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "peaksAndValleys", "method_41546", "getPeaksValleysNoise", "m_224435_"), "(F)F");
    }

    static jfloat getPeaksValleysNoise(const jfloat& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getPeaksValleysNoise();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createCavesSpaghettiRoughnessOverworldFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "spaghettiRoughnessFunction", "method_41113", "createCavesSpaghettiRoughnessOverworldFunction", "m_254847_"), "(Ljn;)Ldyr;");
    }

    static jobject createCavesSpaghettiRoughnessOverworldFunction(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createCavesSpaghettiRoughnessOverworldFunction();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createCavesEntrancesOverworldFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "entrances", "method_41117", "createCavesEntrancesOverworldFunction", "m_255275_"), "(Ljn;Ljn;)Ldyr;");
    }

    static jobject createCavesEntrancesOverworldFunction(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createCavesEntrancesOverworldFunction();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createCavesNoodleOverworldFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "noodle", "method_41119", "createCavesNoodleOverworldFunction", "m_255300_"), "(Ljn;Ljn;)Ldyr;");
    }

    static jobject createCavesNoodleOverworldFunction(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createCavesNoodleOverworldFunction();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createCavePillarsOverworldFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "pillars", "method_41121", "createCavePillarsOverworldFunction", "m_255167_"), "(Ljn;)Ldyr;");
    }

    static jobject createCavePillarsOverworldFunction(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createCavePillarsOverworldFunction();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createCavesSpaghetti2dOverworldFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "spaghetti2D", "method_41122", "createCavesSpaghetti2dOverworldFunction", "m_255130_"), "(Ljn;Ljn;)Ldyr;");
    }

    static jobject createCavesSpaghetti2dOverworldFunction(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createCavesSpaghetti2dOverworldFunction();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createCavesFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "underground", "method_41101", "createCavesFunction", "m_255355_"), "(Ljn;Ljn;Ldyr;)Ldyr;");
    }

    static jobject createCavesFunction(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createCavesFunction();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_applyBlendDensity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "postProcess", "method_41207", "applyBlendDensity", "m_224492_"), "(Ldyr;)Ldyr;");
    }

    static jobject applyBlendDensity(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_applyBlendDensity();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createSurfaceNoiseRouter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "overworld", "method_41103", "createSurfaceNoiseRouter", "m_255262_"), "(Ljn;Ljn;ZZ)Ldze;");
    }

    static jobject createSurfaceNoiseRouter(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createSurfaceNoiseRouter();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createMultiNoiseDependentNoiseRouter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "noNewCaves", "method_41211", "createMultiNoiseDependentNoiseRouter", "m_254999_"), "(Ljn;Ljn;Ldyr;)Ldze;");
    }

    static jobject createMultiNoiseDependentNoiseRouter(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createMultiNoiseDependentNoiseRouter();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_applySurfaceSlides() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "slideOverworld", "method_42366", "applySurfaceSlides", "m_224489_"), "(ZLdyr;)Ldyr;");
    }

    static jobject applySurfaceSlides(const jboolean& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_applySurfaceSlides();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_applyCavesSlides() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "slideNetherLike", "method_42363", "applyCavesSlides", "m_254915_"), "(Ljn;II)Ldyr;");
    }

    static jobject applyCavesSlides(const jobject& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_applyCavesSlides();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_applyFloatingIslandsSlides() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "slideEndLike", "method_42364", "applyFloatingIslandsSlides", "m_224439_"), "(Ldyr;II)Ldyr;");
    }

    static jobject applyFloatingIslandsSlides(const jobject& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_applyFloatingIslandsSlides();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createNetherNoiseRouter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "nether", "method_41118", "createNetherNoiseRouter", "m_255404_"), "(Ljn;Ljn;)Ldze;");
    }

    static jobject createNetherNoiseRouter(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createNetherNoiseRouter();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createCavesNoiseRouter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "caves", "method_41549", "createCavesNoiseRouter", "m_255020_"), "(Ljn;Ljn;)Ldze;");
    }

    static jobject createCavesNoiseRouter(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createCavesNoiseRouter();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createFloatingIslandsNoiseRouter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "floatingIslands", "method_41552", "createFloatingIslandsNoiseRouter", "m_254860_"), "(Ljn;Ljn;)Ldze;");
    }

    static jobject createFloatingIslandsNoiseRouter(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createFloatingIslandsNoiseRouter();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_applyEndSlides() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "slideEnd", "method_42367", "applyEndSlides", "m_224505_"), "(Ldyr;)Ldyr;");
    }

    static jobject applyEndSlides(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_applyEndSlides();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createEndNoiseRouter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "end", "method_41120", "createEndNoiseRouter", "m_255104_"), "(Ljn;)Ldze;");
    }

    static jobject createEndNoiseRouter(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createEndNoiseRouter();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createMissingNoiseRouter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "none", "method_44324", "createMissingNoiseRouter", "m_238384_"), "()Ldze;");
    }

    static jobject createMissingNoiseRouter() {
       const auto clazz = self();
       const auto methodID = methodID_createMissingNoiseRouter();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_applyBlending() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "splineWithBlending", "method_40541", "applyBlending", "m_224453_"), "(Ldyr;Ldyr;)Ldyr;");
    }

    static jobject applyBlending(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_applyBlending();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createInitialDensityFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "noiseGradientDensity", "method_40540", "createInitialDensityFunction", "m_212271_"), "(Ldyr;Ldyr;)Ldyr;");
    }

    static jobject createInitialDensityFunction(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createInitialDensityFunction();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_verticalRangeChoice() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "yLimitedInterpolatable", "method_40539", "verticalRangeChoice", "m_209471_"), "(Ldyr;Ldyr;III)Ldyr;");
    }

    static jobject verticalRangeChoice(const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_verticalRangeChoice();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_applySlides() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "slide", "method_42365", "applySlides", "m_224443_"), "(Ldyr;IIIIDIID)Ldyr;");
    }

    static jobject applySlides(const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jdouble& arg5, const jint& arg6, const jint& arg7, const jdouble& arg8) {
       const auto clazz = self();
       const auto methodID = methodID_applySlides();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_DENSITYFUNCTION_DENSITYFUNCTIONS_HPP