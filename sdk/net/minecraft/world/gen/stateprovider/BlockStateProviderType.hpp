// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_STATEPROVIDER_BLOCKSTATEPROVIDERTYPE_HPP
#define NET_MINECRAFT_WORLD_GEN_STATEPROVIDER_BLOCKSTATEPROVIDERTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.stateprovider.BlockStateProviderType
 * Remapped: egk
 */
namespace BlockStateProviderType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("egk", "net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType", "net/minecraft/class_4652", "net/minecraft/world/gen/stateprovider/BlockStateProviderType", "net/minecraft/src/C_2387_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#SIMPLE_STATE_PROVIDER
    [[maybe_unused]] static jobject get_field_SIMPLE_STATE_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SIMPLE_STATE_PROVIDER", "field_21305", "SIMPLE_STATE_PROVIDER", "f_68752_"), "Legk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#SIMPLE_STATE_PROVIDER
    [[maybe_unused]] static void set_field_SIMPLE_STATE_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SIMPLE_STATE_PROVIDER", "field_21305", "SIMPLE_STATE_PROVIDER", "f_68752_"), "Legk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#WEIGHTED_STATE_PROVIDER
    [[maybe_unused]] static jobject get_field_WEIGHTED_STATE_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WEIGHTED_STATE_PROVIDER", "field_21306", "WEIGHTED_STATE_PROVIDER", "f_68753_"), "Legk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#WEIGHTED_STATE_PROVIDER
    [[maybe_unused]] static void set_field_WEIGHTED_STATE_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WEIGHTED_STATE_PROVIDER", "field_21306", "WEIGHTED_STATE_PROVIDER", "f_68753_"), "Legk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#NOISE_THRESHOLD_PROVIDER
    [[maybe_unused]] static jobject get_field_NOISE_THRESHOLD_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NOISE_THRESHOLD_PROVIDER", "field_34932", "NOISE_THRESHOLD_PROVIDER", "f_191386_"), "Legk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#NOISE_THRESHOLD_PROVIDER
    [[maybe_unused]] static void set_field_NOISE_THRESHOLD_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NOISE_THRESHOLD_PROVIDER", "field_34932", "NOISE_THRESHOLD_PROVIDER", "f_191386_"), "Legk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#NOISE_PROVIDER
    [[maybe_unused]] static jobject get_field_NOISE_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NOISE_PROVIDER", "field_34933", "NOISE_PROVIDER", "f_191387_"), "Legk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#NOISE_PROVIDER
    [[maybe_unused]] static void set_field_NOISE_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NOISE_PROVIDER", "field_34933", "NOISE_PROVIDER", "f_191387_"), "Legk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#DUAL_NOISE_PROVIDER
    [[maybe_unused]] static jobject get_field_DUAL_NOISE_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DUAL_NOISE_PROVIDER", "field_34934", "DUAL_NOISE_PROVIDER", "f_191388_"), "Legk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#DUAL_NOISE_PROVIDER
    [[maybe_unused]] static void set_field_DUAL_NOISE_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DUAL_NOISE_PROVIDER", "field_34934", "DUAL_NOISE_PROVIDER", "f_191388_"), "Legk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#ROTATED_BLOCK_PROVIDER
    [[maybe_unused]] static jobject get_field_ROTATED_BLOCK_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ROTATED_BLOCK_PROVIDER", "field_24938", "ROTATED_BLOCK_PROVIDER", "f_68756_"), "Legk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#ROTATED_BLOCK_PROVIDER
    [[maybe_unused]] static void set_field_ROTATED_BLOCK_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ROTATED_BLOCK_PROVIDER", "field_24938", "ROTATED_BLOCK_PROVIDER", "f_68756_"), "Legk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#RANDOMIZED_INT_STATE_PROVIDER
    [[maybe_unused]] static jobject get_field_RANDOMIZED_INT_STATE_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RANDOMIZED_INT_STATE_PROVIDER", "field_29300", "RANDOMIZED_INT_STATE_PROVIDER", "f_161554_"), "Legk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.stateprovider.BlockStateProviderType#RANDOMIZED_INT_STATE_PROVIDER
    [[maybe_unused]] static void set_field_RANDOMIZED_INT_STATE_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RANDOMIZED_INT_STATE_PROVIDER", "field_29300", "RANDOMIZED_INT_STATE_PROVIDER", "f_161554_"), "Legk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.stateprovider.BlockStateProviderType#codec
    static jobject get_field_codec(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "codec", "field_24939", "codec", "f_68757_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.stateprovider.BlockStateProviderType#codec
    static void set_field_codec(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "codec", "field_24939", "codec", "f_68757_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_23457", "register", "m_68762_"), "(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Legk;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "codec", "method_28863", "getCodec", "m_68761_"), "()Lcom/mojang/serialization/MapCodec;");
    }

    static jobject getCodec(const jobject& obj) {
                
       const auto methodID = methodID_getCodec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_STATEPROVIDER_BLOCKSTATEPROVIDERTYPE_HPP