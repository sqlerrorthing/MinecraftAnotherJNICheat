// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_STATEPROVIDER_NOISETHRESHOLDBLOCKSTATEPROVIDER_HPP
#define NET_MINECRAFT_WORLD_GEN_STATEPROVIDER_NOISETHRESHOLDBLOCKSTATEPROVIDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider
 * Remapped: ego
 */
namespace NoiseThresholdBlockStateProvider {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ego", "net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider", "net/minecraft/class_6581", "net/minecraft/world/gen/stateprovider/NoiseThresholdBlockStateProvider", "net/minecraft/src/C_182998_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_34713", "CODEC", "f_191463_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_34713", "CODEC", "f_191463_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider#threshold
    static jfloat get_field_threshold(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "threshold", "field_34714", "threshold", "f_191464_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider#threshold
    static void set_field_threshold(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "threshold", "field_34714", "threshold", "f_191464_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider#highChance
    static jfloat get_field_highChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "highChance", "field_34715", "highChance", "f_191465_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider#highChance
    static void set_field_highChance(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "highChance", "field_34715", "highChance", "f_191465_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider#defaultState
    static jobject get_field_defaultState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "defaultState", "field_34716", "defaultState", "f_191466_"), "Ldtc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider#defaultState
    static void set_field_defaultState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "defaultState", "field_34716", "defaultState", "f_191466_"), "Ldtc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider#lowStates
    static jobject get_field_lowStates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "lowStates", "field_34717", "lowStates", "f_191467_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider#lowStates
    static void set_field_lowStates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "lowStates", "field_34717", "lowStates", "f_191467_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider#highStates
    static jobject get_field_highStates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "highStates", "field_34718", "highStates", "f_191468_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.stateprovider.NoiseThresholdBlockStateProvider#highStates
    static void set_field_highStates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "highStates", "field_34718", "highStates", "f_191468_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "type", "method_28862", "getType", "m_5923_"), "()Legk;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getState", "method_23455", "get", "m_213972_"), "(Layw;Ljd;)Ldtc;");
    }

    static jobject get(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_STATEPROVIDER_NOISETHRESHOLDBLOCKSTATEPROVIDER_HPP