// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_WORLDPRESETS_HPP
#define NET_MINECRAFT_WORLD_GEN_WORLDPRESETS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.WorldPresets
 * Remapped: ejh
 */
namespace WorldPresets {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ejh", "net/minecraft/world/level/levelgen/presets/WorldPresets", "net/minecraft/class_5317", "net/minecraft/world/gen/WorldPresets", "net/minecraft/src/C_213160_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.WorldPresets#DEFAULT
    [[maybe_unused]] static jobject get_field_DEFAULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NORMAL", "field_25050", "DEFAULT", "f_226437_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.WorldPresets#DEFAULT
    [[maybe_unused]] static void set_field_DEFAULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NORMAL", "field_25050", "DEFAULT", "f_226437_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.WorldPresets#FLAT
    [[maybe_unused]] static jobject get_field_FLAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FLAT", "field_25054", "FLAT", "f_226438_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.WorldPresets#FLAT
    [[maybe_unused]] static void set_field_FLAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FLAT", "field_25054", "FLAT", "f_226438_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.WorldPresets#LARGE_BIOMES
    [[maybe_unused]] static jobject get_field_LARGE_BIOMES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LARGE_BIOMES", "field_35756", "LARGE_BIOMES", "f_226439_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.WorldPresets#LARGE_BIOMES
    [[maybe_unused]] static void set_field_LARGE_BIOMES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LARGE_BIOMES", "field_35756", "LARGE_BIOMES", "f_226439_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.WorldPresets#AMPLIFIED
    [[maybe_unused]] static jobject get_field_AMPLIFIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "AMPLIFIED", "field_35757", "AMPLIFIED", "f_226440_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.WorldPresets#AMPLIFIED
    [[maybe_unused]] static void set_field_AMPLIFIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "AMPLIFIED", "field_35757", "AMPLIFIED", "f_226440_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.WorldPresets#SINGLE_BIOME_SURFACE
    [[maybe_unused]] static jobject get_field_SINGLE_BIOME_SURFACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SINGLE_BIOME_SURFACE", "field_25056", "SINGLE_BIOME_SURFACE", "f_226441_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.WorldPresets#SINGLE_BIOME_SURFACE
    [[maybe_unused]] static void set_field_SINGLE_BIOME_SURFACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SINGLE_BIOME_SURFACE", "field_25056", "SINGLE_BIOME_SURFACE", "f_226441_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.WorldPresets#DEBUG_ALL_BLOCK_STATES
    [[maybe_unused]] static jobject get_field_DEBUG_ALL_BLOCK_STATES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DEBUG", "field_25059", "DEBUG_ALL_BLOCK_STATES", "f_226442_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.WorldPresets#DEBUG_ALL_BLOCK_STATES
    [[maybe_unused]] static void set_field_DEBUG_ALL_BLOCK_STATES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DEBUG", "field_25059", "DEBUG_ALL_BLOCK_STATES", "f_226442_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_bootstrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_41593", "bootstrap", "m_254897_"), "(Lqq;)V");
    }

    static void bootstrap(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_bootstrap();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_41597", "of", "m_226459_"), "(Ljava/lang/String;)Lakq;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getWorldPreset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromSettings", "method_41594", "getWorldPreset", "m_246618_"), "(Ldzt;)Ljava/util/Optional;");
    }

    static jobject getWorldPreset(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getWorldPreset();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createDemoOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createNormalWorldDimensions", "method_41598", "createDemoOptions", "m_246552_"), "(Lka;)Ldzt;");
    }

    static jobject createDemoOptions(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createDemoOptions();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getDefaultOverworldOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getNormalOverworld", "method_41599", "getDefaultOverworldOptions", "m_226463_"), "(Lka;)Ldwz;");
    }

    static jobject getDefaultOverworldOptions(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getDefaultOverworldOptions();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_WORLDPRESETS_HPP