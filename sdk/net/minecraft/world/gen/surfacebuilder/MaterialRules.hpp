// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_SURFACEBUILDER_MATERIALRULES_HPP
#define NET_MINECRAFT_WORLD_GEN_SURFACEBUILDER_MATERIALRULES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.surfacebuilder.MaterialRules
 * Remapped: dzp
 */
namespace MaterialRules {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dzp", "net/minecraft/world/level/levelgen/SurfaceRules", "net/minecraft/class_6686", "net/minecraft/world/gen/surfacebuilder/MaterialRules", "net/minecraft/src/C_182910_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.surfacebuilder.MaterialRules#STONE_DEPTH_FLOOR
    [[maybe_unused]] static jobject get_field_STONE_DEPTH_FLOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ON_FLOOR", "field_35222", "STONE_DEPTH_FLOOR", "f_189375_"), "Ldzp$f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.surfacebuilder.MaterialRules#STONE_DEPTH_FLOOR
    [[maybe_unused]] static void set_field_STONE_DEPTH_FLOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ON_FLOOR", "field_35222", "STONE_DEPTH_FLOOR", "f_189375_"), "Ldzp$f;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.surfacebuilder.MaterialRules#STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH
    [[maybe_unused]] static jobject get_field_STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "UNDER_FLOOR", "field_35223", "STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH", "f_189376_"), "Ldzp$f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.surfacebuilder.MaterialRules#STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH
    [[maybe_unused]] static void set_field_STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "UNDER_FLOOR", "field_35223", "STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH", "f_189376_"), "Ldzp$f;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.surfacebuilder.MaterialRules#STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH_RANGE_6
    [[maybe_unused]] static jobject get_field_STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH_RANGE_6() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEEP_UNDER_FLOOR", "field_36341", "STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH_RANGE_6", "f_202169_"), "Ldzp$f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.surfacebuilder.MaterialRules#STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH_RANGE_6
    [[maybe_unused]] static void set_field_STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH_RANGE_6(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEEP_UNDER_FLOOR", "field_36341", "STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH_RANGE_6", "f_202169_"), "Ldzp$f;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.surfacebuilder.MaterialRules#STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH_RANGE_30
    [[maybe_unused]] static jobject get_field_STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH_RANGE_30() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "VERY_DEEP_UNDER_FLOOR", "field_36342", "STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH_RANGE_30", "f_202170_"), "Ldzp$f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.surfacebuilder.MaterialRules#STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH_RANGE_30
    [[maybe_unused]] static void set_field_STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH_RANGE_30(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "VERY_DEEP_UNDER_FLOOR", "field_36342", "STONE_DEPTH_FLOOR_WITH_SURFACE_DEPTH_RANGE_30", "f_202170_"), "Ldzp$f;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.surfacebuilder.MaterialRules#STONE_DEPTH_CEILING
    [[maybe_unused]] static jobject get_field_STONE_DEPTH_CEILING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ON_CEILING", "field_35494", "STONE_DEPTH_CEILING", "f_189377_"), "Ldzp$f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.surfacebuilder.MaterialRules#STONE_DEPTH_CEILING
    [[maybe_unused]] static void set_field_STONE_DEPTH_CEILING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ON_CEILING", "field_35494", "STONE_DEPTH_CEILING", "f_189377_"), "Ldzp$f;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.surfacebuilder.MaterialRules#STONE_DEPTH_CEILING_WITH_SURFACE_DEPTH
    [[maybe_unused]] static jobject get_field_STONE_DEPTH_CEILING_WITH_SURFACE_DEPTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "UNDER_CEILING", "field_35224", "STONE_DEPTH_CEILING_WITH_SURFACE_DEPTH", "f_189378_"), "Ldzp$f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.surfacebuilder.MaterialRules#STONE_DEPTH_CEILING_WITH_SURFACE_DEPTH
    [[maybe_unused]] static void set_field_STONE_DEPTH_CEILING_WITH_SURFACE_DEPTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "UNDER_CEILING", "field_35224", "STONE_DEPTH_CEILING_WITH_SURFACE_DEPTH", "f_189378_"), "Ldzp$f;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_stoneDepth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stoneDepthCheck", "method_39549", "stoneDepth", "m_202176_"), "(IZLeil;)Ldzp$f;");
    }

    static jobject stoneDepth(const jint& arg0, const jboolean& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_stoneDepth();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__stoneDepth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stoneDepthCheck", "method_40023", "stoneDepth", "m_202171_"), "(IZILeil;)Ldzp$f;");
    }

    static jobject _stoneDepth(const jint& arg0, const jboolean& arg1, const jint& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__stoneDepth();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_not() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "not", "method_39048", "not", "m_189392_"), "(Ldzp$f;)Ldzp$f;");
    }

    static jobject not(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_not();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_aboveY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "yBlockCheck", "method_39051", "aboveY", "m_189400_"), "(Ldzs;I)Ldzp$f;");
    }

    static jobject aboveY(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_aboveY();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_aboveYWithStoneDepth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "yStartCheck", "method_39058", "aboveYWithStoneDepth", "m_189422_"), "(Ldzs;I)Ldzp$f;");
    }

    static jobject aboveYWithStoneDepth(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_aboveYWithStoneDepth();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_water() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "waterBlockCheck", "method_39046", "water", "m_189382_"), "(II)Ldzp$f;");
    }

    static jobject water(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_water();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_waterWithStoneDepth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "waterStartCheck", "method_39057", "waterWithStoneDepth", "m_189419_"), "(II)Ldzp$f;");
    }

    static jobject waterWithStoneDepth(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_waterWithStoneDepth();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_biome() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isBiome", "method_39055", "biome", "m_189416_"), "([Lakq;)Ldzp$f;");
    }

    static jobject biome(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_biome();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__biome() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isBiome", "method_39054", "biome", "m_189407_"), "(Ljava/util/List;)Ldzp$c;");
    }

    static jobject _biome(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__biome();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_noiseThreshold() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "noiseCondition", "method_39052", "noiseThreshold", "m_189409_"), "(Lakq;D)Ldzp$f;");
    }

    static jobject noiseThreshold(const jobject& arg0, const jdouble& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_noiseThreshold();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__noiseThreshold() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "noiseCondition", "method_39053", "noiseThreshold", "m_189412_"), "(Lakq;DD)Ldzp$f;");
    }

    static jobject _noiseThreshold(const jobject& arg0, const jdouble& arg1, const jdouble& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__noiseThreshold();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_verticalGradient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "verticalGradient", "method_39472", "verticalGradient", "m_189403_"), "(Ljava/lang/String;Ldzs;Ldzs;)Ldzp$f;");
    }

    static jobject verticalGradient(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_verticalGradient();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_steepSlope() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "steep", "method_39045", "steepSlope", "m_189381_"), "()Ldzp$f;");
    }

    static jobject steepSlope() {
       const auto clazz = self();
       const auto methodID = methodID_steepSlope();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_hole() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "hole", "method_39056", "hole", "m_189418_"), "()Ldzp$f;");
    }

    static jobject hole() {
       const auto clazz = self();
       const auto methodID = methodID_hole();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_surface() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "abovePreliminarySurface", "method_39473", "surface", "m_189425_"), "()Ldzp$f;");
    }

    static jobject surface() {
       const auto clazz = self();
       const auto methodID = methodID_surface();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_temperature() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "temperature", "method_39059", "temperature", "m_189426_"), "()Ldzp$f;");
    }

    static jobject temperature() {
       const auto clazz = self();
       const auto methodID = methodID_temperature();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_condition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "ifTrue", "method_39049", "condition", "m_189394_"), "(Ldzp$f;Ldzp$o;)Ldzp$o;");
    }

    static jobject condition(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_condition();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_sequence() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "sequence", "method_39050", "sequence", "m_198272_"), "([Ldzp$o;)Ldzp$o;");
    }

    static jobject sequence(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_sequence();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_block() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "state", "method_39047", "block", "m_189390_"), "(Ldtc;)Ldzp$o;");
    }

    static jobject block(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_block();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_terracottaBands() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "bandlands", "method_39060", "terracottaBands", "m_189427_"), "()Ldzp$o;");
    }

    static jobject terracottaBands() {
       const auto clazz = self();
       const auto methodID = methodID_terracottaBands();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_42377", "register", "m_224603_"), "(Ljz;Ljava/lang/String;Layh;)Lcom/mojang/serialization/MapCodec;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_SURFACEBUILDER_MATERIALRULES_HPP