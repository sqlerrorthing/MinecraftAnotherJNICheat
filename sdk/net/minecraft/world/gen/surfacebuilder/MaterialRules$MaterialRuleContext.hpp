// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_SURFACEBUILDER_MATERIALRULES$MATERIALRULECONTEXT_HPP
#define NET_MINECRAFT_WORLD_GEN_SURFACEBUILDER_MATERIALRULES$MATERIALRULECONTEXT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext
 * Remapped: dzp$g
 */
namespace MaterialRules$MaterialRuleContext {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dzp$g", "net/minecraft/world/level/levelgen/SurfaceRules$Context", "net/minecraft/class_6686$class_6694", "net/minecraft/world/gen/surfacebuilder/MaterialRules$MaterialRuleContext", "net/minecraft/src/C_182910_$C_182920_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#field_36274
    [[maybe_unused]] static jint get_field_field_36274() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE", "field_36274", "field_36274", "f_198274_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#field_36274
    [[maybe_unused]] static void set_field_field_36274(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE", "field_36274", "field_36274", "f_198274_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#field_36275
    [[maybe_unused]] static jint get_field_field_36275() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SURFACE_CELL_BITS", "field_36275", "field_36275", "f_198275_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#field_36275
    [[maybe_unused]] static void set_field_field_36275(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SURFACE_CELL_BITS", "field_36275", "field_36275", "f_198275_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#field_36276
    [[maybe_unused]] static jint get_field_field_36276() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SURFACE_CELL_SIZE", "field_36276", "field_36276", "f_198276_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#field_36276
    [[maybe_unused]] static void set_field_field_36276(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SURFACE_CELL_SIZE", "field_36276", "field_36276", "f_198276_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#field_36277
    [[maybe_unused]] static jint get_field_field_36277() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SURFACE_CELL_MASK", "field_36277", "field_36277", "f_198277_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#field_36277
    [[maybe_unused]] static void set_field_field_36277(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SURFACE_CELL_MASK", "field_36277", "field_36277", "f_198277_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#surfaceBuilder
    static jobject get_field_surfaceBuilder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "system", "field_35233", "surfaceBuilder", "f_189535_"), "Ldzq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#surfaceBuilder
    static void set_field_surfaceBuilder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "system", "field_35233", "surfaceBuilder", "f_189535_"), "Ldzq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#biomeTemperaturePredicate
    static jobject get_field_biomeTemperaturePredicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "temperature", "field_35234", "biomeTemperaturePredicate", "f_189536_"), "Ldzp$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#biomeTemperaturePredicate
    static void set_field_biomeTemperaturePredicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "temperature", "field_35234", "biomeTemperaturePredicate", "f_189536_"), "Ldzp$e;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#steepSlopePredicate
    static jobject get_field_steepSlopePredicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "steep", "field_35235", "steepSlopePredicate", "f_189537_"), "Ldzp$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#steepSlopePredicate
    static void set_field_steepSlopePredicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "steep", "field_35235", "steepSlopePredicate", "f_189537_"), "Ldzp$e;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#negativeRunDepthPredicate
    static jobject get_field_negativeRunDepthPredicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "hole", "field_35236", "negativeRunDepthPredicate", "f_189538_"), "Ldzp$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#negativeRunDepthPredicate
    static void set_field_negativeRunDepthPredicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "hole", "field_35236", "negativeRunDepthPredicate", "f_189538_"), "Ldzp$e;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#surfacePredicate
    static jobject get_field_surfacePredicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "abovePreliminarySurface", "field_35604", "surfacePredicate", "f_189539_"), "Ldzp$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#surfacePredicate
    static void set_field_surfacePredicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "abovePreliminarySurface", "field_35604", "surfacePredicate", "f_189539_"), "Ldzp$e;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#noiseConfig
    static jobject get_field_noiseConfig(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "randomState", "field_37703", "noiseConfig", "f_224614_"), "Ldzm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#noiseConfig
    static void set_field_noiseConfig(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "randomState", "field_37703", "noiseConfig", "f_224614_"), "Ldzm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#chunk
    static jobject get_field_chunk(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "chunk", "field_35605", "chunk", "f_189540_"), "Lduy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#chunk
    static void set_field_chunk(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "chunk", "field_35605", "chunk", "f_189540_"), "Lduy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#chunkNoiseSampler
    static jobject get_field_chunkNoiseSampler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "noiseChunk", "field_35676", "chunkNoiseSampler", "f_189541_"), "Ldzc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#chunkNoiseSampler
    static void set_field_chunkNoiseSampler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "noiseChunk", "field_35676", "chunkNoiseSampler", "f_189541_"), "Ldzc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#posToBiome
    static jobject get_field_posToBiome(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "biomeGetter", "field_35606", "posToBiome", "f_189542_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#posToBiome
    static void set_field_posToBiome(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "biomeGetter", "field_35606", "posToBiome", "f_189542_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#heightContext
    static jobject get_field_heightContext(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "context", "field_35241", "heightContext", "f_189544_"), "Ldzv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#heightContext
    static void set_field_heightContext(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "context", "field_35241", "heightContext", "f_189544_"), "Ldzv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#packedChunkPos
    static jlong get_field_packedChunkPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "lastPreliminarySurfaceCellOrigin", "field_36278", "packedChunkPos", "f_198278_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#packedChunkPos
    static void set_field_packedChunkPos(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "lastPreliminarySurfaceCellOrigin", "field_36278", "packedChunkPos", "f_198278_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#estimatedSurfaceHeights
    static jint get_field_estimatedSurfaceHeights(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "preliminarySurfaceCache", "field_36279", "estimatedSurfaceHeights", "f_198279_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#estimatedSurfaceHeights
    static void set_field_estimatedSurfaceHeights(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "preliminarySurfaceCache", "field_36279", "estimatedSurfaceHeights", "f_198279_"), "[I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#uniqueHorizontalPosValue
    static jlong get_field_uniqueHorizontalPosValue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "lastUpdateXZ", "field_35608", "uniqueHorizontalPosValue", "f_189545_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#uniqueHorizontalPosValue
    static void set_field_uniqueHorizontalPosValue(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "lastUpdateXZ", "field_35608", "uniqueHorizontalPosValue", "f_189545_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#blockX
    static jint get_field_blockX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "blockX", "field_35609", "blockX", "f_189546_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#blockX
    static void set_field_blockX(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "blockX", "field_35609", "blockX", "f_189546_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#blockZ
    static jint get_field_blockZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "blockZ", "field_35610", "blockZ", "f_189547_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#blockZ
    static void set_field_blockZ(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "blockZ", "field_35610", "blockZ", "f_189547_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#runDepth
    static jint get_field_runDepth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "surfaceDepth", "field_35611", "runDepth", "f_189548_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#runDepth
    static void set_field_runDepth(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "surfaceDepth", "field_35611", "runDepth", "f_189548_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#field_35677
    static jlong get_field_field_35677(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "lastSurfaceDepth2Update", "field_35677", "field_35677", "f_189549_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#field_35677
    static void set_field_field_35677(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "lastSurfaceDepth2Update", "field_35677", "field_35677", "f_189549_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#secondaryDepth
    static jdouble get_field_secondaryDepth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "surfaceSecondary", "field_35678", "secondaryDepth", "f_202180_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#secondaryDepth
    static void set_field_secondaryDepth(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "surfaceSecondary", "field_35678", "secondaryDepth", "f_202180_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#field_35679
    static jlong get_field_field_35679(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "lastMinSurfaceLevelUpdate", "field_35679", "field_35679", "f_189551_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#field_35679
    static void set_field_field_35679(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "lastMinSurfaceLevelUpdate", "field_35679", "field_35679", "f_189551_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#surfaceMinY
    static jint get_field_surfaceMinY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "minSurfaceLevel", "field_35616", "surfaceMinY", "f_189552_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#surfaceMinY
    static void set_field_surfaceMinY(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "minSurfaceLevel", "field_35616", "surfaceMinY", "f_189552_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#uniquePosValue
    static jlong get_field_uniquePosValue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "lastUpdateY", "field_35612", "uniquePosValue", "f_189553_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#uniquePosValue
    static void set_field_uniquePosValue(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "lastUpdateY", "field_35612", "uniquePosValue", "f_189553_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "pos", "field_35613", "pos", "f_189554_"), "Ljd$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "pos", "field_35613", "pos", "f_189554_"), "Ljd$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#biomeSupplier
    static jobject get_field_biomeSupplier(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "biome", "field_35614", "biomeSupplier", "f_189555_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#biomeSupplier
    static void set_field_biomeSupplier(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "biome", "field_35614", "biomeSupplier", "f_189555_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#blockY
    static jint get_field_blockY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "blockY", "field_35617", "blockY", "f_189557_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#blockY
    static void set_field_blockY(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "blockY", "field_35617", "blockY", "f_189557_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#fluidHeight
    static jint get_field_fluidHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "waterHeight", "field_35618", "fluidHeight", "f_189558_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#fluidHeight
    static void set_field_fluidHeight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "waterHeight", "field_35618", "fluidHeight", "f_189558_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#stoneDepthBelow
    static jint get_field_stoneDepthBelow(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "stoneDepthBelow", "field_35619", "stoneDepthBelow", "f_189559_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#stoneDepthBelow
    static void set_field_stoneDepthBelow(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "stoneDepthBelow", "field_35619", "stoneDepthBelow", "f_189559_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#stoneDepthAbove
    static jint get_field_stoneDepthAbove(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "stoneDepthAbove", "field_35620", "stoneDepthAbove", "f_189560_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.world.gen.surfacebuilder.MaterialRules$MaterialRuleContext#stoneDepthAbove
    static void set_field_stoneDepthAbove(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "stoneDepthAbove", "field_35620", "stoneDepthAbove", "f_189560_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_initHorizontalContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateXZ", "method_39072", "initHorizontalContext", "m_189569_"), "(II)V");
    }

    static void initHorizontalContext(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_initHorizontalContext();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_initVerticalContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateY", "method_39073", "initVerticalContext", "m_189576_"), "(IIIIII)V");
    }

    static void initVerticalContext(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5) {
                
       const auto methodID = methodID_initVerticalContext();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getSecondaryDepth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSurfaceSecondary", "method_39550", "getSecondaryDepth", "m_202181_"), "()D");
    }

    static jdouble getSecondaryDepth(const jobject& obj) {
                
       const auto methodID = methodID_getSecondaryDepth();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_blockToChunkCoord() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "blockCoordToSurfaceCell", "method_39903", "blockToChunkCoord", "m_198280_"), "(I)I");
    }

    static jint blockToChunkCoord(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_blockToChunkCoord();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_chunkToBlockCoord() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "surfaceCellToBlockCoord", "method_39904", "chunkToBlockCoord", "m_198282_"), "(I)I");
    }

    static jint chunkToBlockCoord(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_chunkToBlockCoord();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_estimateSurfaceHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getMinSurfaceLevel", "method_39551", "estimateSurfaceHeight", "m_189583_"), "()I");
    }

    static jint estimateSurfaceHeight(const jobject& obj) {
                
       const auto methodID = methodID_estimateSurfaceHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_SURFACEBUILDER_MATERIALRULES$MATERIALRULECONTEXT_HPP