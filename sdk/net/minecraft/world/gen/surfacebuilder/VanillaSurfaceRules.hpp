// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_SURFACEBUILDER_VANILLASURFACERULES_HPP
#define NET_MINECRAFT_WORLD_GEN_SURFACEBUILDER_VANILLASURFACERULES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules
 * Remapped: rd
 */
namespace VanillaSurfaceRules {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("rd", "net/minecraft/data/worldgen/SurfaceRuleData", "net/minecraft/class_6725", "net/minecraft/world/gen/surfacebuilder/VanillaSurfaceRules", "net/minecraft/src/C_183080_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#AIR
    [[maybe_unused]] static jobject get_field_AIR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "AIR", "field_35314", "AIR", "f_194779_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#AIR
    [[maybe_unused]] static void set_field_AIR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "AIR", "field_35314", "AIR", "f_194779_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#BEDROCK
    [[maybe_unused]] static jobject get_field_BEDROCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BEDROCK", "field_35639", "BEDROCK", "f_194780_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#BEDROCK
    [[maybe_unused]] static void set_field_BEDROCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BEDROCK", "field_35639", "BEDROCK", "f_194780_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#WHITE_TERRACOTTA
    [[maybe_unused]] static jobject get_field_WHITE_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WHITE_TERRACOTTA", "field_35315", "WHITE_TERRACOTTA", "f_194781_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#WHITE_TERRACOTTA
    [[maybe_unused]] static void set_field_WHITE_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WHITE_TERRACOTTA", "field_35315", "WHITE_TERRACOTTA", "f_194781_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#ORANGE_TERRACOTTA
    [[maybe_unused]] static jobject get_field_ORANGE_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ORANGE_TERRACOTTA", "field_35316", "ORANGE_TERRACOTTA", "f_194782_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#ORANGE_TERRACOTTA
    [[maybe_unused]] static void set_field_ORANGE_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ORANGE_TERRACOTTA", "field_35316", "ORANGE_TERRACOTTA", "f_194782_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#TERRACOTTA
    [[maybe_unused]] static jobject get_field_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TERRACOTTA", "field_35317", "TERRACOTTA", "f_194783_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#TERRACOTTA
    [[maybe_unused]] static void set_field_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TERRACOTTA", "field_35317", "TERRACOTTA", "f_194783_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#RED_SAND
    [[maybe_unused]] static jobject get_field_RED_SAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RED_SAND", "field_35318", "RED_SAND", "f_194784_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#RED_SAND
    [[maybe_unused]] static void set_field_RED_SAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RED_SAND", "field_35318", "RED_SAND", "f_194784_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#RED_SANDSTONE
    [[maybe_unused]] static jobject get_field_RED_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RED_SANDSTONE", "field_35561", "RED_SANDSTONE", "f_194785_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#RED_SANDSTONE
    [[maybe_unused]] static void set_field_RED_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RED_SANDSTONE", "field_35561", "RED_SANDSTONE", "f_194785_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#STONE
    [[maybe_unused]] static jobject get_field_STONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "STONE", "field_35319", "STONE", "f_194786_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#STONE
    [[maybe_unused]] static void set_field_STONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "STONE", "field_35319", "STONE", "f_194786_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#DEEPSLATE
    [[maybe_unused]] static jobject get_field_DEEPSLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DEEPSLATE", "field_35640", "DEEPSLATE", "f_194787_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#DEEPSLATE
    [[maybe_unused]] static void set_field_DEEPSLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DEEPSLATE", "field_35640", "DEEPSLATE", "f_194787_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#DIRT
    [[maybe_unused]] static jobject get_field_DIRT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DIRT", "field_35320", "DIRT", "f_194788_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#DIRT
    [[maybe_unused]] static void set_field_DIRT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DIRT", "field_35320", "DIRT", "f_194788_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#PODZOL
    [[maybe_unused]] static jobject get_field_PODZOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PODZOL", "field_35321", "PODZOL", "f_194789_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#PODZOL
    [[maybe_unused]] static void set_field_PODZOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PODZOL", "field_35321", "PODZOL", "f_194789_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#COARSE_DIRT
    [[maybe_unused]] static jobject get_field_COARSE_DIRT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "COARSE_DIRT", "field_35322", "COARSE_DIRT", "f_194790_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#COARSE_DIRT
    [[maybe_unused]] static void set_field_COARSE_DIRT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "COARSE_DIRT", "field_35322", "COARSE_DIRT", "f_194790_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#MYCELIUM
    [[maybe_unused]] static jobject get_field_MYCELIUM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "MYCELIUM", "field_35323", "MYCELIUM", "f_194791_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#MYCELIUM
    [[maybe_unused]] static void set_field_MYCELIUM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "MYCELIUM", "field_35323", "MYCELIUM", "f_194791_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#GRASS_BLOCK
    [[maybe_unused]] static jobject get_field_GRASS_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "GRASS_BLOCK", "field_35324", "GRASS_BLOCK", "f_194792_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#GRASS_BLOCK
    [[maybe_unused]] static void set_field_GRASS_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "GRASS_BLOCK", "field_35324", "GRASS_BLOCK", "f_194792_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#CALCITE
    [[maybe_unused]] static jobject get_field_CALCITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CALCITE", "field_35325", "CALCITE", "f_194793_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#CALCITE
    [[maybe_unused]] static void set_field_CALCITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CALCITE", "field_35325", "CALCITE", "f_194793_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#GRAVEL
    [[maybe_unused]] static jobject get_field_GRAVEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "GRAVEL", "field_35326", "GRAVEL", "f_194794_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#GRAVEL
    [[maybe_unused]] static void set_field_GRAVEL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "GRAVEL", "field_35326", "GRAVEL", "f_194794_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#SAND
    [[maybe_unused]] static jobject get_field_SAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SAND", "field_35327", "SAND", "f_194795_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#SAND
    [[maybe_unused]] static void set_field_SAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SAND", "field_35327", "SAND", "f_194795_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#SANDSTONE
    [[maybe_unused]] static jobject get_field_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SANDSTONE", "field_35562", "SANDSTONE", "f_194796_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#SANDSTONE
    [[maybe_unused]] static void set_field_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SANDSTONE", "field_35562", "SANDSTONE", "f_194796_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#PACKED_ICE
    [[maybe_unused]] static jobject get_field_PACKED_ICE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "PACKED_ICE", "field_35328", "PACKED_ICE", "f_194797_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#PACKED_ICE
    [[maybe_unused]] static void set_field_PACKED_ICE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "PACKED_ICE", "field_35328", "PACKED_ICE", "f_194797_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#SNOW_BLOCK
    [[maybe_unused]] static jobject get_field_SNOW_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SNOW_BLOCK", "field_35329", "SNOW_BLOCK", "f_194798_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#SNOW_BLOCK
    [[maybe_unused]] static void set_field_SNOW_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SNOW_BLOCK", "field_35329", "SNOW_BLOCK", "f_194798_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#MUD
    [[maybe_unused]] static jobject get_field_MUD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "MUD", "field_38808", "MUD", "f_236556_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#MUD
    [[maybe_unused]] static void set_field_MUD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "MUD", "field_38808", "MUD", "f_236556_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#POWDER_SNOW
    [[maybe_unused]] static jobject get_field_POWDER_SNOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "POWDER_SNOW", "field_35330", "POWDER_SNOW", "f_194799_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#POWDER_SNOW
    [[maybe_unused]] static void set_field_POWDER_SNOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "POWDER_SNOW", "field_35330", "POWDER_SNOW", "f_194799_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#ICE
    [[maybe_unused]] static jobject get_field_ICE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "ICE", "field_35331", "ICE", "f_194800_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#ICE
    [[maybe_unused]] static void set_field_ICE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "ICE", "field_35331", "ICE", "f_194800_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#WATER
    [[maybe_unused]] static jobject get_field_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "WATER", "field_35332", "WATER", "f_194801_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#WATER
    [[maybe_unused]] static void set_field_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "WATER", "field_35332", "WATER", "f_194801_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#LAVA
    [[maybe_unused]] static jobject get_field_LAVA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "LAVA", "field_35333", "LAVA", "f_194802_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#LAVA
    [[maybe_unused]] static void set_field_LAVA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "LAVA", "field_35333", "LAVA", "f_194802_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#NETHERRACK
    [[maybe_unused]] static jobject get_field_NETHERRACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "NETHERRACK", "field_35334", "NETHERRACK", "f_194803_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#NETHERRACK
    [[maybe_unused]] static void set_field_NETHERRACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "NETHERRACK", "field_35334", "NETHERRACK", "f_194803_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#SOUL_SAND
    [[maybe_unused]] static jobject get_field_SOUL_SAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "SOUL_SAND", "field_35335", "SOUL_SAND", "f_194804_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#SOUL_SAND
    [[maybe_unused]] static void set_field_SOUL_SAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "SOUL_SAND", "field_35335", "SOUL_SAND", "f_194804_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#SOUL_SOIL
    [[maybe_unused]] static jobject get_field_SOUL_SOIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SOUL_SOIL", "field_35336", "SOUL_SOIL", "f_194771_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#SOUL_SOIL
    [[maybe_unused]] static void set_field_SOUL_SOIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SOUL_SOIL", "field_35336", "SOUL_SOIL", "f_194771_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#BASALT
    [[maybe_unused]] static jobject get_field_BASALT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "BASALT", "field_35337", "BASALT", "f_194772_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#BASALT
    [[maybe_unused]] static void set_field_BASALT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "BASALT", "field_35337", "BASALT", "f_194772_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#BLACKSTONE
    [[maybe_unused]] static jobject get_field_BLACKSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "BLACKSTONE", "field_35338", "BLACKSTONE", "f_194773_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#BLACKSTONE
    [[maybe_unused]] static void set_field_BLACKSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "BLACKSTONE", "field_35338", "BLACKSTONE", "f_194773_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#WARPED_WART_BLOCK
    [[maybe_unused]] static jobject get_field_WARPED_WART_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "WARPED_WART_BLOCK", "field_35339", "WARPED_WART_BLOCK", "f_194774_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#WARPED_WART_BLOCK
    [[maybe_unused]] static void set_field_WARPED_WART_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "WARPED_WART_BLOCK", "field_35339", "WARPED_WART_BLOCK", "f_194774_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#WARPED_NYLIUM
    [[maybe_unused]] static jobject get_field_WARPED_NYLIUM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "WARPED_NYLIUM", "field_35310", "WARPED_NYLIUM", "f_194775_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#WARPED_NYLIUM
    [[maybe_unused]] static void set_field_WARPED_NYLIUM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "WARPED_NYLIUM", "field_35310", "WARPED_NYLIUM", "f_194775_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#NETHER_WART_BLOCK
    [[maybe_unused]] static jobject get_field_NETHER_WART_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "NETHER_WART_BLOCK", "field_35311", "NETHER_WART_BLOCK", "f_194776_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#NETHER_WART_BLOCK
    [[maybe_unused]] static void set_field_NETHER_WART_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "NETHER_WART_BLOCK", "field_35311", "NETHER_WART_BLOCK", "f_194776_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#CRIMSON_NYLIUM
    [[maybe_unused]] static jobject get_field_CRIMSON_NYLIUM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "CRIMSON_NYLIUM", "field_35312", "CRIMSON_NYLIUM", "f_194777_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#CRIMSON_NYLIUM
    [[maybe_unused]] static void set_field_CRIMSON_NYLIUM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "CRIMSON_NYLIUM", "field_35312", "CRIMSON_NYLIUM", "f_194777_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#END_STONE
    [[maybe_unused]] static jobject get_field_END_STONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "ENDSTONE", "field_35313", "END_STONE", "f_194778_"), "Ldzp$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.surfacebuilder.VanillaSurfaceRules#END_STONE
    [[maybe_unused]] static void set_field_END_STONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "ENDSTONE", "field_35313", "END_STONE", "f_194778_"), "Ldzp$o;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_block() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeStateRule", "method_39136", "block", "m_194810_"), "(Ldfy;)Ldzp$o;");
    }

    static jobject block(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_block();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createOverworldSurfaceRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "overworld", "method_39134", "createOverworldSurfaceRule", "m_194807_"), "()Ldzp$o;");
    }

    static jobject createOverworldSurfaceRule() {
       const auto clazz = self();
       const auto methodID = methodID_createOverworldSurfaceRule();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createDefaultRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "overworldLike", "method_39922", "createDefaultRule", "m_198380_"), "(ZZZ)Ldzp$o;");
    }

    static jobject createDefaultRule(const jboolean& arg0, const jboolean& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createDefaultRule();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createNetherSurfaceRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "nether", "method_39138", "createNetherSurfaceRule", "m_194812_"), "()Ldzp$o;");
    }

    static jobject createNetherSurfaceRule() {
       const auto clazz = self();
       const auto methodID = methodID_createNetherSurfaceRule();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getEndStoneRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "end", "method_39139", "getEndStoneRule", "m_194813_"), "()Ldzp$o;");
    }

    static jobject getEndStoneRule() {
       const auto clazz = self();
       const auto methodID = methodID_getEndStoneRule();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getAirRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "air", "method_44325", "getAirRule", "m_238362_"), "()Ldzp$o;");
    }

    static jobject getAirRule() {
       const auto clazz = self();
       const auto methodID = methodID_getAirRule();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_surfaceNoiseThreshold() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "surfaceNoiseAbove", "method_39135", "surfaceNoiseThreshold", "m_194808_"), "(D)Ldzp$f;");
    }

    static jobject surfaceNoiseThreshold(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_surfaceNoiseThreshold();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_SURFACEBUILDER_VANILLASURFACERULES_HPP