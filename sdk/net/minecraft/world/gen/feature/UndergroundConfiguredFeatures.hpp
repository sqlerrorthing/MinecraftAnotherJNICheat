// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_UNDERGROUNDCONFIGUREDFEATURES_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_UNDERGROUNDCONFIGUREDFEATURES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.UndergroundConfiguredFeatures
 * Remapped: rp
 */
namespace UndergroundConfiguredFeatures {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("rp", "net/minecraft/data/worldgen/features/CaveFeatures", "net/minecraft/class_6801", "net/minecraft/world/gen/feature/UndergroundConfiguredFeatures", "net/minecraft/src/C_183086_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#MONSTER_ROOM
    [[maybe_unused]] static jobject get_field_MONSTER_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MONSTER_ROOM", "field_35770", "MONSTER_ROOM", "f_194938_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#MONSTER_ROOM
    [[maybe_unused]] static void set_field_MONSTER_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MONSTER_ROOM", "field_35770", "MONSTER_ROOM", "f_194938_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#FOSSIL_COAL
    [[maybe_unused]] static jobject get_field_FOSSIL_COAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FOSSIL_COAL", "field_35771", "FOSSIL_COAL", "f_194939_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#FOSSIL_COAL
    [[maybe_unused]] static void set_field_FOSSIL_COAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FOSSIL_COAL", "field_35771", "FOSSIL_COAL", "f_194939_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#FOSSIL_DIAMONDS
    [[maybe_unused]] static jobject get_field_FOSSIL_DIAMONDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FOSSIL_DIAMONDS", "field_35772", "FOSSIL_DIAMONDS", "f_194940_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#FOSSIL_DIAMONDS
    [[maybe_unused]] static void set_field_FOSSIL_DIAMONDS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FOSSIL_DIAMONDS", "field_35772", "FOSSIL_DIAMONDS", "f_194940_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#DRIPSTONE_CLUSTER
    [[maybe_unused]] static jobject get_field_DRIPSTONE_CLUSTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DRIPSTONE_CLUSTER", "field_35773", "DRIPSTONE_CLUSTER", "f_194941_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#DRIPSTONE_CLUSTER
    [[maybe_unused]] static void set_field_DRIPSTONE_CLUSTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DRIPSTONE_CLUSTER", "field_35773", "DRIPSTONE_CLUSTER", "f_194941_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#LARGE_DRIPSTONE
    [[maybe_unused]] static jobject get_field_LARGE_DRIPSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LARGE_DRIPSTONE", "field_35774", "LARGE_DRIPSTONE", "f_194942_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#LARGE_DRIPSTONE
    [[maybe_unused]] static void set_field_LARGE_DRIPSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LARGE_DRIPSTONE", "field_35774", "LARGE_DRIPSTONE", "f_194942_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#POINTED_DRIPSTONE
    [[maybe_unused]] static jobject get_field_POINTED_DRIPSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "POINTED_DRIPSTONE", "field_35775", "POINTED_DRIPSTONE", "f_194943_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#POINTED_DRIPSTONE
    [[maybe_unused]] static void set_field_POINTED_DRIPSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "POINTED_DRIPSTONE", "field_35775", "POINTED_DRIPSTONE", "f_194943_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#UNDERWATER_MAGMA
    [[maybe_unused]] static jobject get_field_UNDERWATER_MAGMA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "UNDERWATER_MAGMA", "field_35776", "UNDERWATER_MAGMA", "f_194944_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#UNDERWATER_MAGMA
    [[maybe_unused]] static void set_field_UNDERWATER_MAGMA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "UNDERWATER_MAGMA", "field_35776", "UNDERWATER_MAGMA", "f_194944_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#GLOW_LICHEN
    [[maybe_unused]] static jobject get_field_GLOW_LICHEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "GLOW_LICHEN", "field_35777", "GLOW_LICHEN", "f_194945_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#GLOW_LICHEN
    [[maybe_unused]] static void set_field_GLOW_LICHEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "GLOW_LICHEN", "field_35777", "GLOW_LICHEN", "f_194945_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#ROOTED_AZALEA_TREE
    [[maybe_unused]] static jobject get_field_ROOTED_AZALEA_TREE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ROOTED_AZALEA_TREE", "field_35778", "ROOTED_AZALEA_TREE", "f_194946_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#ROOTED_AZALEA_TREE
    [[maybe_unused]] static void set_field_ROOTED_AZALEA_TREE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ROOTED_AZALEA_TREE", "field_35778", "ROOTED_AZALEA_TREE", "f_194946_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#CAVE_VINE
    [[maybe_unused]] static jobject get_field_CAVE_VINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "CAVE_VINE", "field_35779", "CAVE_VINE", "f_194947_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#CAVE_VINE
    [[maybe_unused]] static void set_field_CAVE_VINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "CAVE_VINE", "field_35779", "CAVE_VINE", "f_194947_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#CAVE_VINE_IN_MOSS
    [[maybe_unused]] static jobject get_field_CAVE_VINE_IN_MOSS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "CAVE_VINE_IN_MOSS", "field_35780", "CAVE_VINE_IN_MOSS", "f_194948_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#CAVE_VINE_IN_MOSS
    [[maybe_unused]] static void set_field_CAVE_VINE_IN_MOSS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "CAVE_VINE_IN_MOSS", "field_35780", "CAVE_VINE_IN_MOSS", "f_194948_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#MOSS_VEGETATION
    [[maybe_unused]] static jobject get_field_MOSS_VEGETATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "MOSS_VEGETATION", "field_35781", "MOSS_VEGETATION", "f_194949_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#MOSS_VEGETATION
    [[maybe_unused]] static void set_field_MOSS_VEGETATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "MOSS_VEGETATION", "field_35781", "MOSS_VEGETATION", "f_194949_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#MOSS_PATCH
    [[maybe_unused]] static jobject get_field_MOSS_PATCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "MOSS_PATCH", "field_35782", "MOSS_PATCH", "f_194950_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#MOSS_PATCH
    [[maybe_unused]] static void set_field_MOSS_PATCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "MOSS_PATCH", "field_35782", "MOSS_PATCH", "f_194950_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#MOSS_PATCH_BONEMEAL
    [[maybe_unused]] static jobject get_field_MOSS_PATCH_BONEMEAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "MOSS_PATCH_BONEMEAL", "field_35783", "MOSS_PATCH_BONEMEAL", "f_194951_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#MOSS_PATCH_BONEMEAL
    [[maybe_unused]] static void set_field_MOSS_PATCH_BONEMEAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "MOSS_PATCH_BONEMEAL", "field_35783", "MOSS_PATCH_BONEMEAL", "f_194951_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#DRIPLEAF
    [[maybe_unused]] static jobject get_field_DRIPLEAF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "DRIPLEAF", "field_35784", "DRIPLEAF", "f_194952_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#DRIPLEAF
    [[maybe_unused]] static void set_field_DRIPLEAF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "DRIPLEAF", "field_35784", "DRIPLEAF", "f_194952_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#CLAY_WITH_DRIPLEAVES
    [[maybe_unused]] static jobject get_field_CLAY_WITH_DRIPLEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "CLAY_WITH_DRIPLEAVES", "field_35785", "CLAY_WITH_DRIPLEAVES", "f_194953_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#CLAY_WITH_DRIPLEAVES
    [[maybe_unused]] static void set_field_CLAY_WITH_DRIPLEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "CLAY_WITH_DRIPLEAVES", "field_35785", "CLAY_WITH_DRIPLEAVES", "f_194953_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#CLAY_POOL_WITH_DRIPLEAVES
    [[maybe_unused]] static jobject get_field_CLAY_POOL_WITH_DRIPLEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "CLAY_POOL_WITH_DRIPLEAVES", "field_35786", "CLAY_POOL_WITH_DRIPLEAVES", "f_194954_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#CLAY_POOL_WITH_DRIPLEAVES
    [[maybe_unused]] static void set_field_CLAY_POOL_WITH_DRIPLEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "CLAY_POOL_WITH_DRIPLEAVES", "field_35786", "CLAY_POOL_WITH_DRIPLEAVES", "f_194954_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#LUSH_CAVES_CLAY
    [[maybe_unused]] static jobject get_field_LUSH_CAVES_CLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "LUSH_CAVES_CLAY", "field_35787", "LUSH_CAVES_CLAY", "f_194955_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#LUSH_CAVES_CLAY
    [[maybe_unused]] static void set_field_LUSH_CAVES_CLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "LUSH_CAVES_CLAY", "field_35787", "LUSH_CAVES_CLAY", "f_194955_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#MOSS_PATCH_CEILING
    [[maybe_unused]] static jobject get_field_MOSS_PATCH_CEILING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "MOSS_PATCH_CEILING", "field_35788", "MOSS_PATCH_CEILING", "f_194956_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#MOSS_PATCH_CEILING
    [[maybe_unused]] static void set_field_MOSS_PATCH_CEILING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "MOSS_PATCH_CEILING", "field_35788", "MOSS_PATCH_CEILING", "f_194956_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#SPORE_BLOSSOM
    [[maybe_unused]] static jobject get_field_SPORE_BLOSSOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SPORE_BLOSSOM", "field_35789", "SPORE_BLOSSOM", "f_194957_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#SPORE_BLOSSOM
    [[maybe_unused]] static void set_field_SPORE_BLOSSOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SPORE_BLOSSOM", "field_35789", "SPORE_BLOSSOM", "f_194957_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#AMETHYST_GEODE
    [[maybe_unused]] static jobject get_field_AMETHYST_GEODE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "AMETHYST_GEODE", "field_35790", "AMETHYST_GEODE", "f_194958_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#AMETHYST_GEODE
    [[maybe_unused]] static void set_field_AMETHYST_GEODE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "AMETHYST_GEODE", "field_35790", "AMETHYST_GEODE", "f_194958_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#SCULK_PATCH_DEEP_DARK
    [[maybe_unused]] static jobject get_field_SCULK_PATCH_DEEP_DARK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SCULK_PATCH_DEEP_DARK", "field_38033", "SCULK_PATCH_DEEP_DARK", "f_236674_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#SCULK_PATCH_DEEP_DARK
    [[maybe_unused]] static void set_field_SCULK_PATCH_DEEP_DARK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SCULK_PATCH_DEEP_DARK", "field_38033", "SCULK_PATCH_DEEP_DARK", "f_236674_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#SCULK_PATCH_ANCIENT_CITY
    [[maybe_unused]] static jobject get_field_SCULK_PATCH_ANCIENT_CITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SCULK_PATCH_ANCIENT_CITY", "field_38477", "SCULK_PATCH_ANCIENT_CITY", "f_236675_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#SCULK_PATCH_ANCIENT_CITY
    [[maybe_unused]] static void set_field_SCULK_PATCH_ANCIENT_CITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SCULK_PATCH_ANCIENT_CITY", "field_38477", "SCULK_PATCH_ANCIENT_CITY", "f_236675_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#SCULK_VEIN
    [[maybe_unused]] static jobject get_field_SCULK_VEIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SCULK_VEIN", "field_38034", "SCULK_VEIN", "f_236676_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.UndergroundConfiguredFeatures#SCULK_VEIN
    [[maybe_unused]] static void set_field_SCULK_VEIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SCULK_VEIN", "field_38034", "SCULK_VEIN", "f_236676_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createBigDripleafFeature() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeDripleaf", "method_39687", "createBigDripleafFeature", "m_206467_"), "(Lji;)Ljm;");
    }

    static jobject createBigDripleafFeature(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createBigDripleafFeature();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createSmallDripleafFeature() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeSmallDripleaf", "method_39686", "createSmallDripleafFeature", "m_206466_"), "()Ljm;");
    }

    static jobject createSmallDripleafFeature() {
       const auto clazz = self();
       const auto methodID = methodID_createSmallDripleafFeature();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_bootstrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_46850", "bootstrap", "m_255015_"), "(Lqq;)V");
    }

    static void bootstrap(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_bootstrap();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_UNDERGROUNDCONFIGUREDFEATURES_HPP