// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_VEGETATIONCONFIGUREDFEATURES_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_VEGETATIONCONFIGUREDFEATURES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.VegetationConfiguredFeatures
 * Remapped: rx
 */
namespace VegetationConfiguredFeatures {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("rx", "net/minecraft/data/worldgen/features/VegetationFeatures", "net/minecraft/class_6809", "net/minecraft/world/gen/feature/VegetationConfiguredFeatures", "net/minecraft/src/C_183094_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#BAMBOO_NO_PODZOL
    [[maybe_unused]] static jobject get_field_BAMBOO_NO_PODZOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BAMBOO_NO_PODZOL", "field_35941", "BAMBOO_NO_PODZOL", "f_195173_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#BAMBOO_NO_PODZOL
    [[maybe_unused]] static void set_field_BAMBOO_NO_PODZOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BAMBOO_NO_PODZOL", "field_35941", "BAMBOO_NO_PODZOL", "f_195173_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#BAMBOO_SOME_PODZOL
    [[maybe_unused]] static jobject get_field_BAMBOO_SOME_PODZOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BAMBOO_SOME_PODZOL", "field_35942", "BAMBOO_SOME_PODZOL", "f_195174_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#BAMBOO_SOME_PODZOL
    [[maybe_unused]] static void set_field_BAMBOO_SOME_PODZOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BAMBOO_SOME_PODZOL", "field_35942", "BAMBOO_SOME_PODZOL", "f_195174_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#VINES
    [[maybe_unused]] static jobject get_field_VINES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "VINES", "field_35943", "VINES", "f_195175_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#VINES
    [[maybe_unused]] static void set_field_VINES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "VINES", "field_35943", "VINES", "f_195175_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_BROWN_MUSHROOM
    [[maybe_unused]] static jobject get_field_PATCH_BROWN_MUSHROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PATCH_BROWN_MUSHROOM", "field_35944", "PATCH_BROWN_MUSHROOM", "f_195176_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_BROWN_MUSHROOM
    [[maybe_unused]] static void set_field_PATCH_BROWN_MUSHROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PATCH_BROWN_MUSHROOM", "field_35944", "PATCH_BROWN_MUSHROOM", "f_195176_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_RED_MUSHROOM
    [[maybe_unused]] static jobject get_field_PATCH_RED_MUSHROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PATCH_RED_MUSHROOM", "field_35945", "PATCH_RED_MUSHROOM", "f_195177_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_RED_MUSHROOM
    [[maybe_unused]] static void set_field_PATCH_RED_MUSHROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PATCH_RED_MUSHROOM", "field_35945", "PATCH_RED_MUSHROOM", "f_195177_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_SUNFLOWER
    [[maybe_unused]] static jobject get_field_PATCH_SUNFLOWER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "PATCH_SUNFLOWER", "field_35946", "PATCH_SUNFLOWER", "f_195178_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_SUNFLOWER
    [[maybe_unused]] static void set_field_PATCH_SUNFLOWER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "PATCH_SUNFLOWER", "field_35946", "PATCH_SUNFLOWER", "f_195178_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_PUMPKIN
    [[maybe_unused]] static jobject get_field_PATCH_PUMPKIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PATCH_PUMPKIN", "field_35947", "PATCH_PUMPKIN", "f_195179_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_PUMPKIN
    [[maybe_unused]] static void set_field_PATCH_PUMPKIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PATCH_PUMPKIN", "field_35947", "PATCH_PUMPKIN", "f_195179_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_BERRY_BUSH
    [[maybe_unused]] static jobject get_field_PATCH_BERRY_BUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PATCH_BERRY_BUSH", "field_35948", "PATCH_BERRY_BUSH", "f_195180_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_BERRY_BUSH
    [[maybe_unused]] static void set_field_PATCH_BERRY_BUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PATCH_BERRY_BUSH", "field_35948", "PATCH_BERRY_BUSH", "f_195180_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_TAIGA_GRASS
    [[maybe_unused]] static jobject get_field_PATCH_TAIGA_GRASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "PATCH_TAIGA_GRASS", "field_35949", "PATCH_TAIGA_GRASS", "f_195181_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_TAIGA_GRASS
    [[maybe_unused]] static void set_field_PATCH_TAIGA_GRASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "PATCH_TAIGA_GRASS", "field_35949", "PATCH_TAIGA_GRASS", "f_195181_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_GRASS
    [[maybe_unused]] static jobject get_field_PATCH_GRASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "PATCH_GRASS", "field_35950", "PATCH_GRASS", "f_195182_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_GRASS
    [[maybe_unused]] static void set_field_PATCH_GRASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "PATCH_GRASS", "field_35950", "PATCH_GRASS", "f_195182_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_GRASS_JUNGLE
    [[maybe_unused]] static jobject get_field_PATCH_GRASS_JUNGLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PATCH_GRASS_JUNGLE", "field_35951", "PATCH_GRASS_JUNGLE", "f_195183_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_GRASS_JUNGLE
    [[maybe_unused]] static void set_field_PATCH_GRASS_JUNGLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PATCH_GRASS_JUNGLE", "field_35951", "PATCH_GRASS_JUNGLE", "f_195183_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#SINGLE_PIECE_OF_GRASS
    [[maybe_unused]] static jobject get_field_SINGLE_PIECE_OF_GRASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SINGLE_PIECE_OF_GRASS", "field_35952", "SINGLE_PIECE_OF_GRASS", "f_195184_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#SINGLE_PIECE_OF_GRASS
    [[maybe_unused]] static void set_field_SINGLE_PIECE_OF_GRASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SINGLE_PIECE_OF_GRASS", "field_35952", "SINGLE_PIECE_OF_GRASS", "f_195184_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_DEAD_BUSH
    [[maybe_unused]] static jobject get_field_PATCH_DEAD_BUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "PATCH_DEAD_BUSH", "field_35953", "PATCH_DEAD_BUSH", "f_195185_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_DEAD_BUSH
    [[maybe_unused]] static void set_field_PATCH_DEAD_BUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "PATCH_DEAD_BUSH", "field_35953", "PATCH_DEAD_BUSH", "f_195185_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_MELON
    [[maybe_unused]] static jobject get_field_PATCH_MELON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "PATCH_MELON", "field_35954", "PATCH_MELON", "f_195186_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_MELON
    [[maybe_unused]] static void set_field_PATCH_MELON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "PATCH_MELON", "field_35954", "PATCH_MELON", "f_195186_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_WATERLILY
    [[maybe_unused]] static jobject get_field_PATCH_WATERLILY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "PATCH_WATERLILY", "field_35955", "PATCH_WATERLILY", "f_195187_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_WATERLILY
    [[maybe_unused]] static void set_field_PATCH_WATERLILY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "PATCH_WATERLILY", "field_35955", "PATCH_WATERLILY", "f_195187_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_TALL_GRASS
    [[maybe_unused]] static jobject get_field_PATCH_TALL_GRASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "PATCH_TALL_GRASS", "field_35956", "PATCH_TALL_GRASS", "f_195188_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_TALL_GRASS
    [[maybe_unused]] static void set_field_PATCH_TALL_GRASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "PATCH_TALL_GRASS", "field_35956", "PATCH_TALL_GRASS", "f_195188_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_LARGE_FERN
    [[maybe_unused]] static jobject get_field_PATCH_LARGE_FERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "PATCH_LARGE_FERN", "field_35957", "PATCH_LARGE_FERN", "f_195189_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_LARGE_FERN
    [[maybe_unused]] static void set_field_PATCH_LARGE_FERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "PATCH_LARGE_FERN", "field_35957", "PATCH_LARGE_FERN", "f_195189_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_CACTUS
    [[maybe_unused]] static jobject get_field_PATCH_CACTUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "PATCH_CACTUS", "field_35958", "PATCH_CACTUS", "f_195190_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_CACTUS
    [[maybe_unused]] static void set_field_PATCH_CACTUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "PATCH_CACTUS", "field_35958", "PATCH_CACTUS", "f_195190_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_SUGAR_CANE
    [[maybe_unused]] static jobject get_field_PATCH_SUGAR_CANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "PATCH_SUGAR_CANE", "field_35959", "PATCH_SUGAR_CANE", "f_195191_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#PATCH_SUGAR_CANE
    [[maybe_unused]] static void set_field_PATCH_SUGAR_CANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "PATCH_SUGAR_CANE", "field_35959", "PATCH_SUGAR_CANE", "f_195191_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FLOWER_DEFAULT
    [[maybe_unused]] static jobject get_field_FLOWER_DEFAULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "FLOWER_DEFAULT", "field_35960", "FLOWER_DEFAULT", "f_195192_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FLOWER_DEFAULT
    [[maybe_unused]] static void set_field_FLOWER_DEFAULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "FLOWER_DEFAULT", "field_35960", "FLOWER_DEFAULT", "f_195192_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FLOWER_FLOWER_FOREST
    [[maybe_unused]] static jobject get_field_FLOWER_FLOWER_FOREST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "FLOWER_FLOWER_FOREST", "field_35961", "FLOWER_FLOWER_FOREST", "f_195193_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FLOWER_FLOWER_FOREST
    [[maybe_unused]] static void set_field_FLOWER_FLOWER_FOREST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "FLOWER_FLOWER_FOREST", "field_35961", "FLOWER_FLOWER_FOREST", "f_195193_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FLOWER_SWAMP
    [[maybe_unused]] static jobject get_field_FLOWER_SWAMP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FLOWER_SWAMP", "field_35962", "FLOWER_SWAMP", "f_195194_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FLOWER_SWAMP
    [[maybe_unused]] static void set_field_FLOWER_SWAMP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FLOWER_SWAMP", "field_35962", "FLOWER_SWAMP", "f_195194_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FLOWER_PLAIN
    [[maybe_unused]] static jobject get_field_FLOWER_PLAIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "FLOWER_PLAIN", "field_35963", "FLOWER_PLAIN", "f_195195_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FLOWER_PLAIN
    [[maybe_unused]] static void set_field_FLOWER_PLAIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "FLOWER_PLAIN", "field_35963", "FLOWER_PLAIN", "f_195195_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FLOWER_MEADOW
    [[maybe_unused]] static jobject get_field_FLOWER_MEADOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "FLOWER_MEADOW", "field_35964", "FLOWER_MEADOW", "f_195196_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FLOWER_MEADOW
    [[maybe_unused]] static void set_field_FLOWER_MEADOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "FLOWER_MEADOW", "field_35964", "FLOWER_MEADOW", "f_195196_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FLOWER_CHERRY
    [[maybe_unused]] static jobject get_field_FLOWER_CHERRY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "FLOWER_CHERRY", "field_42961", "FLOWER_CHERRY", "f_271409_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FLOWER_CHERRY
    [[maybe_unused]] static void set_field_FLOWER_CHERRY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "FLOWER_CHERRY", "field_42961", "FLOWER_CHERRY", "f_271409_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FOREST_FLOWERS
    [[maybe_unused]] static jobject get_field_FOREST_FLOWERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "FOREST_FLOWERS", "field_35965", "FOREST_FLOWERS", "f_195197_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#FOREST_FLOWERS
    [[maybe_unused]] static void set_field_FOREST_FLOWERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "FOREST_FLOWERS", "field_35965", "FOREST_FLOWERS", "f_195197_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#DARK_FOREST_VEGETATION
    [[maybe_unused]] static jobject get_field_DARK_FOREST_VEGETATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "DARK_FOREST_VEGETATION", "field_35966", "DARK_FOREST_VEGETATION", "f_195198_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#DARK_FOREST_VEGETATION
    [[maybe_unused]] static void set_field_DARK_FOREST_VEGETATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "DARK_FOREST_VEGETATION", "field_35966", "DARK_FOREST_VEGETATION", "f_195198_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_FLOWER_FOREST
    [[maybe_unused]] static jobject get_field_TREES_FLOWER_FOREST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "TREES_FLOWER_FOREST", "field_35925", "TREES_FLOWER_FOREST", "f_195157_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_FLOWER_FOREST
    [[maybe_unused]] static void set_field_TREES_FLOWER_FOREST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "TREES_FLOWER_FOREST", "field_35925", "TREES_FLOWER_FOREST", "f_195157_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#MEADOW_TREES
    [[maybe_unused]] static jobject get_field_MEADOW_TREES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "MEADOW_TREES", "field_35926", "MEADOW_TREES", "f_195158_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#MEADOW_TREES
    [[maybe_unused]] static void set_field_MEADOW_TREES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "MEADOW_TREES", "field_35926", "MEADOW_TREES", "f_195158_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_TAIGA
    [[maybe_unused]] static jobject get_field_TREES_TAIGA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "TREES_TAIGA", "field_35927", "TREES_TAIGA", "f_195159_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_TAIGA
    [[maybe_unused]] static void set_field_TREES_TAIGA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "TREES_TAIGA", "field_35927", "TREES_TAIGA", "f_195159_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_GROVE
    [[maybe_unused]] static jobject get_field_TREES_GROVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "TREES_GROVE", "field_35928", "TREES_GROVE", "f_195160_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_GROVE
    [[maybe_unused]] static void set_field_TREES_GROVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "TREES_GROVE", "field_35928", "TREES_GROVE", "f_195160_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_SAVANNA
    [[maybe_unused]] static jobject get_field_TREES_SAVANNA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "TREES_SAVANNA", "field_35929", "TREES_SAVANNA", "f_195161_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_SAVANNA
    [[maybe_unused]] static void set_field_TREES_SAVANNA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "TREES_SAVANNA", "field_35929", "TREES_SAVANNA", "f_195161_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#BIRCH_TALL
    [[maybe_unused]] static jobject get_field_BIRCH_TALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "BIRCH_TALL", "field_35930", "BIRCH_TALL", "f_195162_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#BIRCH_TALL
    [[maybe_unused]] static void set_field_BIRCH_TALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "BIRCH_TALL", "field_35930", "BIRCH_TALL", "f_195162_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_WINDSWEPT_HILLS
    [[maybe_unused]] static jobject get_field_TREES_WINDSWEPT_HILLS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "TREES_WINDSWEPT_HILLS", "field_35931", "TREES_WINDSWEPT_HILLS", "f_195163_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_WINDSWEPT_HILLS
    [[maybe_unused]] static void set_field_TREES_WINDSWEPT_HILLS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "TREES_WINDSWEPT_HILLS", "field_35931", "TREES_WINDSWEPT_HILLS", "f_195163_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_WATER
    [[maybe_unused]] static jobject get_field_TREES_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "TREES_WATER", "field_35932", "TREES_WATER", "f_195164_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_WATER
    [[maybe_unused]] static void set_field_TREES_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "TREES_WATER", "field_35932", "TREES_WATER", "f_195164_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_BIRCH_AND_OAK
    [[maybe_unused]] static jobject get_field_TREES_BIRCH_AND_OAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "TREES_BIRCH_AND_OAK", "field_35933", "TREES_BIRCH_AND_OAK", "f_195165_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_BIRCH_AND_OAK
    [[maybe_unused]] static void set_field_TREES_BIRCH_AND_OAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "TREES_BIRCH_AND_OAK", "field_35933", "TREES_BIRCH_AND_OAK", "f_195165_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_PLAINS
    [[maybe_unused]] static jobject get_field_TREES_PLAINS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "TREES_PLAINS", "field_35934", "TREES_PLAINS", "f_195166_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_PLAINS
    [[maybe_unused]] static void set_field_TREES_PLAINS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "TREES_PLAINS", "field_35934", "TREES_PLAINS", "f_195166_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_SPARSE_JUNGLE
    [[maybe_unused]] static jobject get_field_TREES_SPARSE_JUNGLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "TREES_SPARSE_JUNGLE", "field_35935", "TREES_SPARSE_JUNGLE", "f_195167_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_SPARSE_JUNGLE
    [[maybe_unused]] static void set_field_TREES_SPARSE_JUNGLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "TREES_SPARSE_JUNGLE", "field_35935", "TREES_SPARSE_JUNGLE", "f_195167_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_OLD_GROWTH_SPRUCE_TAIGA
    [[maybe_unused]] static jobject get_field_TREES_OLD_GROWTH_SPRUCE_TAIGA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "TREES_OLD_GROWTH_SPRUCE_TAIGA", "field_35936", "TREES_OLD_GROWTH_SPRUCE_TAIGA", "f_195168_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_OLD_GROWTH_SPRUCE_TAIGA
    [[maybe_unused]] static void set_field_TREES_OLD_GROWTH_SPRUCE_TAIGA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "TREES_OLD_GROWTH_SPRUCE_TAIGA", "field_35936", "TREES_OLD_GROWTH_SPRUCE_TAIGA", "f_195168_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_OLD_GROWTH_PINE_TAIGA
    [[maybe_unused]] static jobject get_field_TREES_OLD_GROWTH_PINE_TAIGA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "TREES_OLD_GROWTH_PINE_TAIGA", "field_35937", "TREES_OLD_GROWTH_PINE_TAIGA", "f_195169_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_OLD_GROWTH_PINE_TAIGA
    [[maybe_unused]] static void set_field_TREES_OLD_GROWTH_PINE_TAIGA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "TREES_OLD_GROWTH_PINE_TAIGA", "field_35937", "TREES_OLD_GROWTH_PINE_TAIGA", "f_195169_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_JUNGLE
    [[maybe_unused]] static jobject get_field_TREES_JUNGLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "TREES_JUNGLE", "field_35938", "TREES_JUNGLE", "f_195170_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#TREES_JUNGLE
    [[maybe_unused]] static void set_field_TREES_JUNGLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "TREES_JUNGLE", "field_35938", "TREES_JUNGLE", "f_195170_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#BAMBOO_VEGETATION
    [[maybe_unused]] static jobject get_field_BAMBOO_VEGETATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "BAMBOO_VEGETATION", "field_35939", "BAMBOO_VEGETATION", "f_195171_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#BAMBOO_VEGETATION
    [[maybe_unused]] static void set_field_BAMBOO_VEGETATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "BAMBOO_VEGETATION", "field_35939", "BAMBOO_VEGETATION", "f_195171_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#MUSHROOM_ISLAND_VEGETATION
    [[maybe_unused]] static jobject get_field_MUSHROOM_ISLAND_VEGETATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "MUSHROOM_ISLAND_VEGETATION", "field_35940", "MUSHROOM_ISLAND_VEGETATION", "f_195172_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#MUSHROOM_ISLAND_VEGETATION
    [[maybe_unused]] static void set_field_MUSHROOM_ISLAND_VEGETATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "MUSHROOM_ISLAND_VEGETATION", "field_35940", "MUSHROOM_ISLAND_VEGETATION", "f_195172_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#MANGROVE_VEGETATION
    [[maybe_unused]] static jobject get_field_MANGROVE_VEGETATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "MANGROVE_VEGETATION", "field_38812", "MANGROVE_VEGETATION", "f_236764_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.VegetationConfiguredFeatures#MANGROVE_VEGETATION
    [[maybe_unused]] static void set_field_MANGROVE_VEGETATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "MANGROVE_VEGETATION", "field_38812", "MANGROVE_VEGETATION", "f_236764_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createRandomPatchFeatureConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "grassPatch", "method_39717", "createRandomPatchFeatureConfig", "m_195202_"), "(Legj;I)Leev;");
    }

    static jobject createRandomPatchFeatureConfig(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createRandomPatchFeatureConfig();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_bootstrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_46858", "bootstrap", "m_255402_"), "(Lqq;)V");
    }

    static void bootstrap(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_bootstrap();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_VEGETATIONCONFIGUREDFEATURES_HPP