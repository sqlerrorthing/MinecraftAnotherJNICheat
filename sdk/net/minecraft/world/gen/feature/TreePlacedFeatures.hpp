// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_TREEPLACEDFEATURES_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_TREEPLACEDFEATURES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.TreePlacedFeatures
 * Remapped: sh
 */
namespace TreePlacedFeatures {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("sh", "net/minecraft/data/worldgen/placement/TreePlacements", "net/minecraft/class_6818", "net/minecraft/world/gen/feature/TreePlacedFeatures", "net/minecraft/src/C_183104_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#CRIMSON_FUNGI
    [[maybe_unused]] static jobject get_field_CRIMSON_FUNGI() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CRIMSON_FUNGI", "field_36088", "CRIMSON_FUNGI", "f_195372_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#CRIMSON_FUNGI
    [[maybe_unused]] static void set_field_CRIMSON_FUNGI(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CRIMSON_FUNGI", "field_36088", "CRIMSON_FUNGI", "f_195372_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#WARPED_FUNGI
    [[maybe_unused]] static jobject get_field_WARPED_FUNGI() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WARPED_FUNGI", "field_36089", "WARPED_FUNGI", "f_195373_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#WARPED_FUNGI
    [[maybe_unused]] static void set_field_WARPED_FUNGI(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WARPED_FUNGI", "field_36089", "WARPED_FUNGI", "f_195373_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#OAK_CHECKED
    [[maybe_unused]] static jobject get_field_OAK_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "OAK_CHECKED", "field_36090", "OAK_CHECKED", "f_195374_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#OAK_CHECKED
    [[maybe_unused]] static void set_field_OAK_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "OAK_CHECKED", "field_36090", "OAK_CHECKED", "f_195374_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#DARK_OAK_CHECKED
    [[maybe_unused]] static jobject get_field_DARK_OAK_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DARK_OAK_CHECKED", "field_36091", "DARK_OAK_CHECKED", "f_195375_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#DARK_OAK_CHECKED
    [[maybe_unused]] static void set_field_DARK_OAK_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DARK_OAK_CHECKED", "field_36091", "DARK_OAK_CHECKED", "f_195375_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#BIRCH_CHECKED
    [[maybe_unused]] static jobject get_field_BIRCH_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "BIRCH_CHECKED", "field_36092", "BIRCH_CHECKED", "f_195376_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#BIRCH_CHECKED
    [[maybe_unused]] static void set_field_BIRCH_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "BIRCH_CHECKED", "field_36092", "BIRCH_CHECKED", "f_195376_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#ACACIA_CHECKED
    [[maybe_unused]] static jobject get_field_ACACIA_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ACACIA_CHECKED", "field_36093", "ACACIA_CHECKED", "f_195377_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#ACACIA_CHECKED
    [[maybe_unused]] static void set_field_ACACIA_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ACACIA_CHECKED", "field_36093", "ACACIA_CHECKED", "f_195377_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#SPRUCE_CHECKED
    [[maybe_unused]] static jobject get_field_SPRUCE_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SPRUCE_CHECKED", "field_36094", "SPRUCE_CHECKED", "f_195378_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#SPRUCE_CHECKED
    [[maybe_unused]] static void set_field_SPRUCE_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SPRUCE_CHECKED", "field_36094", "SPRUCE_CHECKED", "f_195378_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#MANGROVE_CHECKED
    [[maybe_unused]] static jobject get_field_MANGROVE_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MANGROVE_CHECKED", "field_38814", "MANGROVE_CHECKED", "f_236771_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#MANGROVE_CHECKED
    [[maybe_unused]] static void set_field_MANGROVE_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MANGROVE_CHECKED", "field_38814", "MANGROVE_CHECKED", "f_236771_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#CHERRY_CHECKED
    [[maybe_unused]] static jobject get_field_CHERRY_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "CHERRY_CHECKED", "field_42963", "CHERRY_CHECKED", "f_271402_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#CHERRY_CHECKED
    [[maybe_unused]] static void set_field_CHERRY_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "CHERRY_CHECKED", "field_42963", "CHERRY_CHECKED", "f_271402_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#PINE_ON_SNOW
    [[maybe_unused]] static jobject get_field_PINE_ON_SNOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "PINE_ON_SNOW", "field_36097", "PINE_ON_SNOW", "f_195381_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#PINE_ON_SNOW
    [[maybe_unused]] static void set_field_PINE_ON_SNOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "PINE_ON_SNOW", "field_36097", "PINE_ON_SNOW", "f_195381_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#SPRUCE_ON_SNOW
    [[maybe_unused]] static jobject get_field_SPRUCE_ON_SNOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SPRUCE_ON_SNOW", "field_36098", "SPRUCE_ON_SNOW", "f_195382_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#SPRUCE_ON_SNOW
    [[maybe_unused]] static void set_field_SPRUCE_ON_SNOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SPRUCE_ON_SNOW", "field_36098", "SPRUCE_ON_SNOW", "f_195382_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#PINE_CHECKED
    [[maybe_unused]] static jobject get_field_PINE_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PINE_CHECKED", "field_36099", "PINE_CHECKED", "f_195383_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#PINE_CHECKED
    [[maybe_unused]] static void set_field_PINE_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PINE_CHECKED", "field_36099", "PINE_CHECKED", "f_195383_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#JUNGLE_TREE
    [[maybe_unused]] static jobject get_field_JUNGLE_TREE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "JUNGLE_TREE_CHECKED", "field_36100", "JUNGLE_TREE", "f_195384_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#JUNGLE_TREE
    [[maybe_unused]] static void set_field_JUNGLE_TREE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "JUNGLE_TREE_CHECKED", "field_36100", "JUNGLE_TREE", "f_195384_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#FANCY_OAK_CHECKED
    [[maybe_unused]] static jobject get_field_FANCY_OAK_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "FANCY_OAK_CHECKED", "field_36101", "FANCY_OAK_CHECKED", "f_195385_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#FANCY_OAK_CHECKED
    [[maybe_unused]] static void set_field_FANCY_OAK_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "FANCY_OAK_CHECKED", "field_36101", "FANCY_OAK_CHECKED", "f_195385_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#MEGA_JUNGLE_TREE_CHECKED
    [[maybe_unused]] static jobject get_field_MEGA_JUNGLE_TREE_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "MEGA_JUNGLE_TREE_CHECKED", "field_36102", "MEGA_JUNGLE_TREE_CHECKED", "f_195386_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#MEGA_JUNGLE_TREE_CHECKED
    [[maybe_unused]] static void set_field_MEGA_JUNGLE_TREE_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "MEGA_JUNGLE_TREE_CHECKED", "field_36102", "MEGA_JUNGLE_TREE_CHECKED", "f_195386_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#MEGA_SPRUCE_CHECKED
    [[maybe_unused]] static jobject get_field_MEGA_SPRUCE_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MEGA_SPRUCE_CHECKED", "field_36103", "MEGA_SPRUCE_CHECKED", "f_195387_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#MEGA_SPRUCE_CHECKED
    [[maybe_unused]] static void set_field_MEGA_SPRUCE_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MEGA_SPRUCE_CHECKED", "field_36103", "MEGA_SPRUCE_CHECKED", "f_195387_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#MEGA_PINE_CHECKED
    [[maybe_unused]] static jobject get_field_MEGA_PINE_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "MEGA_PINE_CHECKED", "field_36104", "MEGA_PINE_CHECKED", "f_195388_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#MEGA_PINE_CHECKED
    [[maybe_unused]] static void set_field_MEGA_PINE_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "MEGA_PINE_CHECKED", "field_36104", "MEGA_PINE_CHECKED", "f_195388_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#TALL_MANGROVE_CHECKED
    [[maybe_unused]] static jobject get_field_TALL_MANGROVE_CHECKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "TALL_MANGROVE_CHECKED", "field_38815", "TALL_MANGROVE_CHECKED", "f_236772_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#TALL_MANGROVE_CHECKED
    [[maybe_unused]] static void set_field_TALL_MANGROVE_CHECKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "TALL_MANGROVE_CHECKED", "field_38815", "TALL_MANGROVE_CHECKED", "f_236772_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#JUNGLE_BUSH
    [[maybe_unused]] static jobject get_field_JUNGLE_BUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "JUNGLE_BUSH", "field_36105", "JUNGLE_BUSH", "f_195389_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#JUNGLE_BUSH
    [[maybe_unused]] static void set_field_JUNGLE_BUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "JUNGLE_BUSH", "field_36105", "JUNGLE_BUSH", "f_195389_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#SUPER_BIRCH_BEES_0002
    [[maybe_unused]] static jobject get_field_SUPER_BIRCH_BEES_0002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SUPER_BIRCH_BEES_0002", "field_36106", "SUPER_BIRCH_BEES_0002", "f_195390_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#SUPER_BIRCH_BEES_0002
    [[maybe_unused]] static void set_field_SUPER_BIRCH_BEES_0002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SUPER_BIRCH_BEES_0002", "field_36106", "SUPER_BIRCH_BEES_0002", "f_195390_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#SUPER_BIRCH_BEES
    [[maybe_unused]] static jobject get_field_SUPER_BIRCH_BEES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SUPER_BIRCH_BEES", "field_36107", "SUPER_BIRCH_BEES", "f_195391_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#SUPER_BIRCH_BEES
    [[maybe_unused]] static void set_field_SUPER_BIRCH_BEES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SUPER_BIRCH_BEES", "field_36107", "SUPER_BIRCH_BEES", "f_195391_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#OAK_BEES_0002
    [[maybe_unused]] static jobject get_field_OAK_BEES_0002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "OAK_BEES_0002", "field_36108", "OAK_BEES_0002", "f_195392_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#OAK_BEES_0002
    [[maybe_unused]] static void set_field_OAK_BEES_0002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "OAK_BEES_0002", "field_36108", "OAK_BEES_0002", "f_195392_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#OAK_BEES_002
    [[maybe_unused]] static jobject get_field_OAK_BEES_002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "OAK_BEES_002", "field_36109", "OAK_BEES_002", "f_195393_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#OAK_BEES_002
    [[maybe_unused]] static void set_field_OAK_BEES_002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "OAK_BEES_002", "field_36109", "OAK_BEES_002", "f_195393_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#BIRCH_BEES_0002
    [[maybe_unused]] static jobject get_field_BIRCH_BEES_0002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "BIRCH_BEES_0002_PLACED", "field_36110", "BIRCH_BEES_0002", "f_195394_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#BIRCH_BEES_0002
    [[maybe_unused]] static void set_field_BIRCH_BEES_0002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "BIRCH_BEES_0002_PLACED", "field_36110", "BIRCH_BEES_0002", "f_195394_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#BIRCH_BEES_002
    [[maybe_unused]] static jobject get_field_BIRCH_BEES_002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "BIRCH_BEES_002", "field_36111", "BIRCH_BEES_002", "f_195395_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#BIRCH_BEES_002
    [[maybe_unused]] static void set_field_BIRCH_BEES_002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "BIRCH_BEES_002", "field_36111", "BIRCH_BEES_002", "f_195395_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#FANCY_OAK_BEES_0002
    [[maybe_unused]] static jobject get_field_FANCY_OAK_BEES_0002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "FANCY_OAK_BEES_0002", "field_36112", "FANCY_OAK_BEES_0002", "f_195396_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#FANCY_OAK_BEES_0002
    [[maybe_unused]] static void set_field_FANCY_OAK_BEES_0002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "FANCY_OAK_BEES_0002", "field_36112", "FANCY_OAK_BEES_0002", "f_195396_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#FANCY_OAK_BEES_002
    [[maybe_unused]] static jobject get_field_FANCY_OAK_BEES_002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "FANCY_OAK_BEES_002", "field_36113", "FANCY_OAK_BEES_002", "f_195397_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#FANCY_OAK_BEES_002
    [[maybe_unused]] static void set_field_FANCY_OAK_BEES_002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "FANCY_OAK_BEES_002", "field_36113", "FANCY_OAK_BEES_002", "f_195397_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#FANCY_OAK_BEES
    [[maybe_unused]] static jobject get_field_FANCY_OAK_BEES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "FANCY_OAK_BEES", "field_36087", "FANCY_OAK_BEES", "f_195371_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#FANCY_OAK_BEES
    [[maybe_unused]] static void set_field_FANCY_OAK_BEES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "FANCY_OAK_BEES", "field_36087", "FANCY_OAK_BEES", "f_195371_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#CHERRY_BEES_005
    [[maybe_unused]] static jobject get_field_CHERRY_BEES_005() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "CHERRY_BEES_005", "field_42962", "CHERRY_BEES_005", "f_271177_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreePlacedFeatures#CHERRY_BEES_005
    [[maybe_unused]] static void set_field_CHERRY_BEES_005(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "CHERRY_BEES_005", "field_42962", "CHERRY_BEES_005", "f_271177_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_bootstrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_46866", "bootstrap", "m_254989_"), "(Lqq;)V");
    }

    static void bootstrap(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_bootstrap();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_TREEPLACEDFEATURES_HPP