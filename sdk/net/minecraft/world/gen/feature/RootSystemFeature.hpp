// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_ROOTSYSTEMFEATURE_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_ROOTSYSTEMFEATURE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.RootSystemFeature
 * Remapped: edg
 */
namespace RootSystemFeature {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("edg", "net/minecraft/world/level/levelgen/feature/RootSystemFeature", "net/minecraft/class_5921", "net/minecraft/world/gen/feature/RootSystemFeature", "net/minecraft/src/C_141370_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_generate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "place", "method_13151", "generate", "m_142674_"), "(Lecg;)Z");
    }

    static jboolean generate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_generate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasSpaceForTree() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "spaceForTree", "method_34310", "hasSpaceForTree", "m_160235_"), "(Ldds;Leey;Ljd;)Z");
    }

    static jboolean hasSpaceForTree(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_hasSpaceForTree();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isAirOrWater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isAllowedTreeSpace", "method_36419", "isAirOrWater", "m_160252_"), "(Ldtc;II)Z");
    }

    static jboolean isAirOrWater(const jobject& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_isAirOrWater();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_generateTreeAndRoots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "placeDirtAndTree", "method_34308", "generateTreeAndRoots", "m_225202_"), "(Ldds;Lduz;Leey;Layw;Ljd$a;Ljd;)Z");
    }

    static jboolean generateTreeAndRoots(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_generateTreeAndRoots();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_generateRootsColumn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "placeDirt", "method_39918", "generateRootsColumn", "m_225222_"), "(Ljd;ILdds;Leey;Layw;)V");
    }

    static void generateRootsColumn(const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_generateRootsColumn();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_generateRoots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "placeRootedDirt", "method_34311", "generateRoots", "m_225209_"), "(Ldds;Leey;Layw;IILjd$a;)V");
    }

    static void generateRoots(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_generateRoots();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_generateHangingRoots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "placeRoots", "method_34312", "generateHangingRoots", "m_225216_"), "(Ldds;Leey;Layw;Ljd;Ljd$a;)V");
    }

    static void generateHangingRoots(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_generateHangingRoots();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_ROOTSYSTEMFEATURE_HPP