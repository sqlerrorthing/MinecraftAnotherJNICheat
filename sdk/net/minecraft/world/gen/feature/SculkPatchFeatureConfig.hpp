// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_SCULKPATCHFEATURECONFIG_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_SCULKPATCHFEATURECONFIG_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.SculkPatchFeatureConfig
 * Remapped: eez
 */
namespace SculkPatchFeatureConfig {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eez", "net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration", "net/minecraft/class_7141", "net/minecraft/world/gen/feature/SculkPatchFeatureConfig", "net/minecraft/src/C_213145_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#chargeCount
    static jint get_field_chargeCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "chargeCount", "comp_553", "chargeCount", "f_225426_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#chargeCount
    static void set_field_chargeCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "chargeCount", "comp_553", "chargeCount", "f_225426_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#amountPerCharge
    static jint get_field_amountPerCharge(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "amountPerCharge", "comp_554", "amountPerCharge", "f_225427_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#amountPerCharge
    static void set_field_amountPerCharge(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "amountPerCharge", "comp_554", "amountPerCharge", "f_225427_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#spreadAttempts
    static jint get_field_spreadAttempts(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "spreadAttempts", "comp_555", "spreadAttempts", "f_225428_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#spreadAttempts
    static void set_field_spreadAttempts(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "spreadAttempts", "comp_555", "spreadAttempts", "f_225428_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#growthRounds
    static jint get_field_growthRounds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "growthRounds", "comp_556", "growthRounds", "f_225429_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#growthRounds
    static void set_field_growthRounds(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "growthRounds", "comp_556", "growthRounds", "f_225429_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#spreadRounds
    static jint get_field_spreadRounds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "spreadRounds", "comp_557", "spreadRounds", "f_225430_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#spreadRounds
    static void set_field_spreadRounds(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "spreadRounds", "comp_557", "spreadRounds", "f_225430_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#extraRareGrowths
    static jobject get_field_extraRareGrowths(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "extraRareGrowths", "comp_685", "extraRareGrowths", "f_225431_"), "Lbpw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#extraRareGrowths
    static void set_field_extraRareGrowths(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "extraRareGrowths", "comp_685", "extraRareGrowths", "f_225431_"), "Lbpw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#catalystChance
    static jfloat get_field_catalystChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "catalystChance", "comp_558", "catalystChance", "f_225432_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#catalystChance
    static void set_field_catalystChance(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "catalystChance", "comp_558", "catalystChance", "f_225432_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_37710", "CODEC", "f_225425_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.SculkPatchFeatureConfig#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_37710", "CODEC", "f_225425_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID__chargeCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "chargeCount", "comp_553", "chargeCount", "f_225426_"), "()I");
    }

    static jint _chargeCount(const jobject& obj) {
                
       const auto methodID = methodID__chargeCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__amountPerCharge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "amountPerCharge", "comp_554", "amountPerCharge", "f_225427_"), "()I");
    }

    static jint _amountPerCharge(const jobject& obj) {
                
       const auto methodID = methodID__amountPerCharge();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__spreadAttempts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "spreadAttempts", "comp_555", "spreadAttempts", "f_225428_"), "()I");
    }

    static jint _spreadAttempts(const jobject& obj) {
                
       const auto methodID = methodID__spreadAttempts();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__growthRounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "growthRounds", "comp_556", "growthRounds", "f_225429_"), "()I");
    }

    static jint _growthRounds(const jobject& obj) {
                
       const auto methodID = methodID__growthRounds();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__spreadRounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "spreadRounds", "comp_557", "spreadRounds", "f_225430_"), "()I");
    }

    static jint _spreadRounds(const jobject& obj) {
                
       const auto methodID = methodID__spreadRounds();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__extraRareGrowths() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "extraRareGrowths", "comp_685", "extraRareGrowths", "f_225431_"), "()Lbpw;");
    }

    static jobject _extraRareGrowths(const jobject& obj) {
                
       const auto methodID = methodID__extraRareGrowths();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__catalystChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "catalystChance", "comp_558", "catalystChance", "f_225432_"), "()F");
    }

    static jfloat _catalystChance(const jobject& obj) {
                
       const auto methodID = methodID__catalystChance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_SCULKPATCHFEATURECONFIG_HPP