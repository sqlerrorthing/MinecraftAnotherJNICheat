// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_NETHERCONFIGUREDFEATURES_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_NETHERCONFIGUREDFEATURES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.NetherConfiguredFeatures
 * Remapped: rt
 */
namespace NetherConfiguredFeatures {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("rt", "net/minecraft/data/worldgen/features/NetherFeatures", "net/minecraft/class_6805", "net/minecraft/world/gen/feature/NetherConfiguredFeatures", "net/minecraft/src/C_183090_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#DELTA
    [[maybe_unused]] static jobject get_field_DELTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DELTA", "field_35817", "DELTA", "f_195029_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#DELTA
    [[maybe_unused]] static void set_field_DELTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DELTA", "field_35817", "DELTA", "f_195029_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#SMALL_BASALT_COLUMNS
    [[maybe_unused]] static jobject get_field_SMALL_BASALT_COLUMNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SMALL_BASALT_COLUMNS", "field_35818", "SMALL_BASALT_COLUMNS", "f_195030_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#SMALL_BASALT_COLUMNS
    [[maybe_unused]] static void set_field_SMALL_BASALT_COLUMNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SMALL_BASALT_COLUMNS", "field_35818", "SMALL_BASALT_COLUMNS", "f_195030_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#SMALL_BASALT_COLUMNS_TEMP
    [[maybe_unused]] static jobject get_field_SMALL_BASALT_COLUMNS_TEMP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LARGE_BASALT_COLUMNS", "field_35819", "SMALL_BASALT_COLUMNS_TEMP", "f_195031_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#SMALL_BASALT_COLUMNS_TEMP
    [[maybe_unused]] static void set_field_SMALL_BASALT_COLUMNS_TEMP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LARGE_BASALT_COLUMNS", "field_35819", "SMALL_BASALT_COLUMNS_TEMP", "f_195031_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#BASALT_BLOBS
    [[maybe_unused]] static jobject get_field_BASALT_BLOBS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BASALT_BLOBS", "field_35820", "BASALT_BLOBS", "f_195032_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#BASALT_BLOBS
    [[maybe_unused]] static void set_field_BASALT_BLOBS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BASALT_BLOBS", "field_35820", "BASALT_BLOBS", "f_195032_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#BLACKSTONE_BLOBS
    [[maybe_unused]] static jobject get_field_BLACKSTONE_BLOBS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "BLACKSTONE_BLOBS", "field_35821", "BLACKSTONE_BLOBS", "f_195033_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#BLACKSTONE_BLOBS
    [[maybe_unused]] static void set_field_BLACKSTONE_BLOBS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "BLACKSTONE_BLOBS", "field_35821", "BLACKSTONE_BLOBS", "f_195033_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#GLOWSTONE_EXTRA
    [[maybe_unused]] static jobject get_field_GLOWSTONE_EXTRA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "GLOWSTONE_EXTRA", "field_35822", "GLOWSTONE_EXTRA", "f_195034_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#GLOWSTONE_EXTRA
    [[maybe_unused]] static void set_field_GLOWSTONE_EXTRA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "GLOWSTONE_EXTRA", "field_35822", "GLOWSTONE_EXTRA", "f_195034_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#CRIMSON_FOREST_VEGETATION
    [[maybe_unused]] static jobject get_field_CRIMSON_FOREST_VEGETATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CRIMSON_FOREST_VEGETATION", "field_35824", "CRIMSON_FOREST_VEGETATION", "f_195036_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#CRIMSON_FOREST_VEGETATION
    [[maybe_unused]] static void set_field_CRIMSON_FOREST_VEGETATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CRIMSON_FOREST_VEGETATION", "field_35824", "CRIMSON_FOREST_VEGETATION", "f_195036_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#CRIMSON_FOREST_VEGETATION_BONEMEAL
    [[maybe_unused]] static jobject get_field_CRIMSON_FOREST_VEGETATION_BONEMEAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CRIMSON_FOREST_VEGETATION_BONEMEAL", "field_35825", "CRIMSON_FOREST_VEGETATION_BONEMEAL", "f_195037_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#CRIMSON_FOREST_VEGETATION_BONEMEAL
    [[maybe_unused]] static void set_field_CRIMSON_FOREST_VEGETATION_BONEMEAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CRIMSON_FOREST_VEGETATION_BONEMEAL", "field_35825", "CRIMSON_FOREST_VEGETATION_BONEMEAL", "f_195037_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#WARPED_FOREST_VEGETATION
    [[maybe_unused]] static jobject get_field_WARPED_FOREST_VEGETATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "WARPED_FOREST_VEGETION", "field_35827", "WARPED_FOREST_VEGETATION", "f_195039_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#WARPED_FOREST_VEGETATION
    [[maybe_unused]] static void set_field_WARPED_FOREST_VEGETATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "WARPED_FOREST_VEGETION", "field_35827", "WARPED_FOREST_VEGETATION", "f_195039_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#WARPED_FOREST_VEGETATION_BONEMEAL
    [[maybe_unused]] static jobject get_field_WARPED_FOREST_VEGETATION_BONEMEAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "WARPED_FOREST_VEGETATION_BONEMEAL", "field_35828", "WARPED_FOREST_VEGETATION_BONEMEAL", "f_195040_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#WARPED_FOREST_VEGETATION_BONEMEAL
    [[maybe_unused]] static void set_field_WARPED_FOREST_VEGETATION_BONEMEAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "WARPED_FOREST_VEGETATION_BONEMEAL", "field_35828", "WARPED_FOREST_VEGETATION_BONEMEAL", "f_195040_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#NETHER_SPROUTS
    [[maybe_unused]] static jobject get_field_NETHER_SPROUTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "NETHER_SPROUTS", "field_35829", "NETHER_SPROUTS", "f_195041_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#NETHER_SPROUTS
    [[maybe_unused]] static void set_field_NETHER_SPROUTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "NETHER_SPROUTS", "field_35829", "NETHER_SPROUTS", "f_195041_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#NETHER_SPROUTS_BONEMEAL
    [[maybe_unused]] static jobject get_field_NETHER_SPROUTS_BONEMEAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "NETHER_SPROUTS_BONEMEAL", "field_35830", "NETHER_SPROUTS_BONEMEAL", "f_195042_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#NETHER_SPROUTS_BONEMEAL
    [[maybe_unused]] static void set_field_NETHER_SPROUTS_BONEMEAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "NETHER_SPROUTS_BONEMEAL", "field_35830", "NETHER_SPROUTS_BONEMEAL", "f_195042_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#TWISTING_VINES
    [[maybe_unused]] static jobject get_field_TWISTING_VINES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "TWISTING_VINES", "field_35831", "TWISTING_VINES", "f_195043_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#TWISTING_VINES
    [[maybe_unused]] static void set_field_TWISTING_VINES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "TWISTING_VINES", "field_35831", "TWISTING_VINES", "f_195043_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#TWISTING_VINES_BONEMEAL
    [[maybe_unused]] static jobject get_field_TWISTING_VINES_BONEMEAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "TWISTING_VINES_BONEMEAL", "field_35832", "TWISTING_VINES_BONEMEAL", "f_195044_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#TWISTING_VINES_BONEMEAL
    [[maybe_unused]] static void set_field_TWISTING_VINES_BONEMEAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "TWISTING_VINES_BONEMEAL", "field_35832", "TWISTING_VINES_BONEMEAL", "f_195044_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#WEEPING_VINES
    [[maybe_unused]] static jobject get_field_WEEPING_VINES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "WEEPING_VINES", "field_35833", "WEEPING_VINES", "f_195045_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#WEEPING_VINES
    [[maybe_unused]] static void set_field_WEEPING_VINES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "WEEPING_VINES", "field_35833", "WEEPING_VINES", "f_195045_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#PATCH_CRIMSON_ROOTS
    [[maybe_unused]] static jobject get_field_PATCH_CRIMSON_ROOTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "PATCH_CRIMSON_ROOTS", "field_35834", "PATCH_CRIMSON_ROOTS", "f_195046_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#PATCH_CRIMSON_ROOTS
    [[maybe_unused]] static void set_field_PATCH_CRIMSON_ROOTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "PATCH_CRIMSON_ROOTS", "field_35834", "PATCH_CRIMSON_ROOTS", "f_195046_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#BASALT_PILLAR
    [[maybe_unused]] static jobject get_field_BASALT_PILLAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "BASALT_PILLAR", "field_35835", "BASALT_PILLAR", "f_195047_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#BASALT_PILLAR
    [[maybe_unused]] static void set_field_BASALT_PILLAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "BASALT_PILLAR", "field_35835", "BASALT_PILLAR", "f_195047_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#SPRING_LAVA_NETHER
    [[maybe_unused]] static jobject get_field_SPRING_LAVA_NETHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SPRING_LAVA_NETHER", "field_35836", "SPRING_LAVA_NETHER", "f_195048_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#SPRING_LAVA_NETHER
    [[maybe_unused]] static void set_field_SPRING_LAVA_NETHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SPRING_LAVA_NETHER", "field_35836", "SPRING_LAVA_NETHER", "f_195048_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#SPRING_NETHER_CLOSED
    [[maybe_unused]] static jobject get_field_SPRING_NETHER_CLOSED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SPRING_NETHER_CLOSED", "field_35837", "SPRING_NETHER_CLOSED", "f_195049_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#SPRING_NETHER_CLOSED
    [[maybe_unused]] static void set_field_SPRING_NETHER_CLOSED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SPRING_NETHER_CLOSED", "field_35837", "SPRING_NETHER_CLOSED", "f_195049_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#SPRING_NETHER_OPEN
    [[maybe_unused]] static jobject get_field_SPRING_NETHER_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SPRING_NETHER_OPEN", "field_35838", "SPRING_NETHER_OPEN", "f_195050_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#SPRING_NETHER_OPEN
    [[maybe_unused]] static void set_field_SPRING_NETHER_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SPRING_NETHER_OPEN", "field_35838", "SPRING_NETHER_OPEN", "f_195050_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#PATCH_FIRE
    [[maybe_unused]] static jobject get_field_PATCH_FIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "PATCH_FIRE", "field_35839", "PATCH_FIRE", "f_195051_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#PATCH_FIRE
    [[maybe_unused]] static void set_field_PATCH_FIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "PATCH_FIRE", "field_35839", "PATCH_FIRE", "f_195051_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#PATCH_SOUL_FIRE
    [[maybe_unused]] static jobject get_field_PATCH_SOUL_FIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "PATCH_SOUL_FIRE", "field_35840", "PATCH_SOUL_FIRE", "f_195052_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.NetherConfiguredFeatures#PATCH_SOUL_FIRE
    [[maybe_unused]] static void set_field_PATCH_SOUL_FIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "PATCH_SOUL_FIRE", "field_35840", "PATCH_SOUL_FIRE", "f_195052_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_bootstrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_46854", "bootstrap", "m_255076_"), "(Lqq;)V");
    }

    static void bootstrap(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_bootstrap();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_NETHERCONFIGUREDFEATURES_HPP