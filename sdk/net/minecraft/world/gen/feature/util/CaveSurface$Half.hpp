// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_UTIL_CAVESURFACE$HALF_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_UTIL_CAVESURFACE$HALF_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.util.CaveSurface$Half
 * Remapped: dyo$c
 */
namespace CaveSurface$Half {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dyo$c", "net/minecraft/world/level/levelgen/Column$Ray", "net/minecraft/class_5721$class_5724", "net/minecraft/world/gen/feature/util/CaveSurface$Half", "net/minecraft/src/C_141327_$C_141330_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.gen.feature.util.CaveSurface$Half#height
    static jint get_field_height(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "edge", "field_28200", "height", "f_158216_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.feature.util.CaveSurface$Half#height
    static void set_field_height(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "edge", "field_28200", "height", "f_158216_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.feature.util.CaveSurface$Half#floor
    static jboolean get_field_floor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "pointingUp", "field_28201", "floor", "f_158217_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.feature.util.CaveSurface$Half#floor
    static void set_field_floor(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "pointingUp", "field_28201", "floor", "f_158217_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getCeilingHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getCeiling", "method_32985", "getCeilingHeight", "m_142011_"), "()Ljava/util/OptionalInt;");
    }

    static jobject getCeilingHeight(const jobject& obj) {
                
       const auto methodID = methodID_getCeilingHeight();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFloorHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getFloor", "method_32987", "getFloorHeight", "m_142009_"), "()Ljava/util/OptionalInt;");
    }

    static jobject getFloorHeight(const jobject& obj) {
                
       const auto methodID = methodID_getFloorHeight();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOptionalHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHeight", "method_33385", "getOptionalHeight", "m_142030_"), "()Ljava/util/OptionalInt;");
    }

    static jobject getOptionalHeight(const jobject& obj) {
                
       const auto methodID = methodID_getOptionalHeight();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_UTIL_CAVESURFACE$HALF_HPP