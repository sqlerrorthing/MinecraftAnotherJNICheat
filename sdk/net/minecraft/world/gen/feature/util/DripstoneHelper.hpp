// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_UTIL_DRIPSTONEHELPER_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_UTIL_DRIPSTONEHELPER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.util.DripstoneHelper
 * Remapped: ebz
 */
namespace DripstoneHelper {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ebz", "net/minecraft/world/level/levelgen/feature/DripstoneUtils", "net/minecraft/class_5726", "net/minecraft/world/gen/feature/util/DripstoneHelper", "net/minecraft/src/C_141360_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_scaleHeightFromRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getDripstoneHeight", "method_33005", "scaleHeightFromRadius", "m_159623_"), "(DDDD)D");
    }

    static jdouble scaleHeightFromRadius(const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_scaleHeightFromRadius();
       return MinecraftSDK::env->CallStaticDoubleMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canGenerateBase() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isCircleMostlyEmbeddedInStone", "method_33009", "canGenerateBase", "m_159639_"), "(Ldds;Ljd;I)Z");
    }

    static jboolean canGenerateBase(const jobject& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_canGenerateBase();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_canGenerate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isEmptyOrWater", "method_33006", "canGenerate", "m_159628_"), "(Ldcx;Ljd;)Z");
    }

    static jboolean canGenerate(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canGenerate();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canGenerateOrLava() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isEmptyOrWaterOrLava", "method_33388", "canGenerateOrLava", "m_159659_"), "(Ldcx;Ljd;)Z");
    }

    static jboolean canGenerateOrLava(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canGenerateOrLava();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getDripstoneThickness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "buildBaseToTipColumn", "method_33012", "getDripstoneThickness", "m_159651_"), "(Lji;IZLjava/util/function/Consumer;)V");
    }

    static void getDripstoneThickness(const jobject& arg0, const jint& arg1, const jboolean& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getDripstoneThickness();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_generatePointedDripstone() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "growPointedDripstone", "method_33010", "generatePointedDripstone", "m_190847_"), "(Ldcx;Ljd;Lji;IZ)V");
    }

    static void generatePointedDripstone(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jboolean& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_generatePointedDripstone();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_generateDripstoneBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "placeDripstoneBlockIfPossible", "method_33008", "generateDripstoneBlock", "m_190853_"), "(Ldcx;Ljd;)Z");
    }

    static jboolean generateDripstoneBlock(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_generateDripstoneBlock();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createPointedDripstone", "method_33013", "getState", "m_159656_"), "(Lji;Ldtz;)Ldtc;");
    }

    static jobject getState(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canReplaceOrLava() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isDripstoneBaseOrLava", "method_33387", "canReplaceOrLava", "m_159649_"), "(Ldtc;)Z");
    }

    static jboolean canReplaceOrLava(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_canReplaceOrLava();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_canReplace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isDripstoneBase", "method_33011", "canReplace", "m_159662_"), "(Ldtc;)Z");
    }

    static jboolean canReplace(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_canReplace();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__canGenerate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "isEmptyOrWater", "method_33014", "canGenerate", "m_159664_"), "(Ldtc;)Z");
    }

    static jboolean _canGenerate(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__canGenerate();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_cannotGenerate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "isNeitherEmptyNorWater", "method_40074", "cannotGenerate", "m_203130_"), "(Ldtc;)Z");
    }

    static jboolean cannotGenerate(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_cannotGenerate();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__canGenerateOrLava() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "isEmptyOrWaterOrLava", "method_33389", "canGenerateOrLava", "m_159666_"), "(Ldtc;)Z");
    }

    static jboolean _canGenerateOrLava(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__canGenerateOrLava();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_UTIL_DRIPSTONEHELPER_HPP