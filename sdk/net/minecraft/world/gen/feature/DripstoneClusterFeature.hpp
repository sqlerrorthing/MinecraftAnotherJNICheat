// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_DRIPSTONECLUSTERFEATURE_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_DRIPSTONECLUSTERFEATURE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.DripstoneClusterFeature
 * Remapped: eby
 */
namespace DripstoneClusterFeature {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eby", "net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature", "net/minecraft/class_5725", "net/minecraft/world/gen/feature/DripstoneClusterFeature", "net/minecraft/src/C_141359_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_generate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "place", "method_13151", "generate", "m_142674_"), "(Lecg;)Z");
    }

    static jboolean generate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_generate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__generate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "placeColumn", "method_33002", "generate", "m_225015_"), "(Ldds;Layw;Ljd;IIFDIFLeeg;)V");
    }

    static void _generate(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4, const jfloat& arg5, const jdouble& arg6, const jint& arg7, const jfloat& arg8, const jobject& arg9) {
                
       const auto methodID = methodID__generate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_isLava() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isLava", "method_33386", "isLava", "m_159585_"), "(Ldcz;Ljd;)Z");
    }

    static jboolean isLava(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isLava();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDripstoneHeight", "method_33004", "getHeight", "m_225008_"), "(Layw;IIFILeeg;)I");
    }

    static jint getHeight(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3, const jint& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_getHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_canWaterSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canPlacePool", "method_33000", "canWaterSpawn", "m_159619_"), "(Ldds;Ljd;)Z");
    }

    static jboolean canWaterSpawn(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canWaterSpawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isStoneOrWater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canBeAdjacentToWater", "method_32998", "isStoneOrWater", "m_159582_"), "(Ldcx;Ljd;)Z");
    }

    static jboolean isStoneOrWater(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isStoneOrWater();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_placeDripstoneBlocks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "replaceBlocksWithDripstoneBlocks", "method_33001", "placeDripstoneBlocks", "m_159588_"), "(Ldds;Ljd;ILji;)V");
    }

    static void placeDripstoneBlocks(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_placeDripstoneBlocks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_dripstoneChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getChanceOfStalagmiteOrStalactite", "method_32997", "dripstoneChance", "m_159576_"), "(IIIILeeg;)D");
    }

    static jdouble dripstoneChance(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_dripstoneChance();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_clampedGaussian() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "randomBetweenBiased", "method_33003", "clampedGaussian", "m_225002_"), "(Layw;FFFF)F");
    }

    static jfloat clampedGaussian(const jobject& arg0, const jfloat& arg1, const jfloat& arg2, const jfloat& arg3, const jfloat& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_clampedGaussian();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_DRIPSTONECLUSTERFEATURE_HPP