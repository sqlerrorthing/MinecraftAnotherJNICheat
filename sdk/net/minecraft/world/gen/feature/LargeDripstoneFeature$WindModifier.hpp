// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_LARGEDRIPSTONEFEATURE$WINDMODIFIER_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_LARGEDRIPSTONEFEATURE$WINDMODIFIER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.LargeDripstoneFeature$WindModifier
 * Remapped: ecu$b
 */
namespace LargeDripstoneFeature$WindModifier {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ecu$b", "net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter", "net/minecraft/class_5727$class_5729", "net/minecraft/world/gen/feature/LargeDripstoneFeature$WindModifier", "net/minecraft/src/C_141366_$C_141368_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.gen.feature.LargeDripstoneFeature$WindModifier#y
    static jint get_field_y(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "originY", "field_28211", "y", "f_160000_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.feature.LargeDripstoneFeature$WindModifier#y
    static void set_field_y(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "originY", "field_28211", "y", "f_160000_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.feature.LargeDripstoneFeature$WindModifier#wind
    static jobject get_field_wind(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "windSpeed", "field_28212", "wind", "f_160001_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.feature.LargeDripstoneFeature$WindModifier#wind
    static void set_field_wind(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "windSpeed", "field_28212", "wind", "f_160001_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "noWind", "method_33032", "create", "m_160007_"), "()Lecu$b;");
    }

    static jobject create() {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_modify() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "offset", "method_33031", "modify", "m_160008_"), "(Ljd;)Ljd;");
    }

    static jobject modify(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_modify();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_LARGEDRIPSTONEFEATURE$WINDMODIFIER_HPP