// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_TREECONFIGUREDFEATURES_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_TREECONFIGUREDFEATURES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.TreeConfiguredFeatures
 * Remapped: rw
 */
namespace TreeConfiguredFeatures {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("rw", "net/minecraft/data/worldgen/features/TreeFeatures", "net/minecraft/class_6808", "net/minecraft/world/gen/feature/TreeConfiguredFeatures", "net/minecraft/src/C_183093_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#CRIMSON_FUNGUS
    [[maybe_unused]] static jobject get_field_CRIMSON_FUNGUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CRIMSON_FUNGUS", "field_35899", "CRIMSON_FUNGUS", "f_195117_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#CRIMSON_FUNGUS
    [[maybe_unused]] static void set_field_CRIMSON_FUNGUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CRIMSON_FUNGUS", "field_35899", "CRIMSON_FUNGUS", "f_195117_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#CRIMSON_FUNGUS_PLANTED
    [[maybe_unused]] static jobject get_field_CRIMSON_FUNGUS_PLANTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CRIMSON_FUNGUS_PLANTED", "field_35900", "CRIMSON_FUNGUS_PLANTED", "f_195118_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#CRIMSON_FUNGUS_PLANTED
    [[maybe_unused]] static void set_field_CRIMSON_FUNGUS_PLANTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CRIMSON_FUNGUS_PLANTED", "field_35900", "CRIMSON_FUNGUS_PLANTED", "f_195118_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#WARPED_FUNGUS
    [[maybe_unused]] static jobject get_field_WARPED_FUNGUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WARPED_FUNGUS", "field_35901", "WARPED_FUNGUS", "f_195119_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#WARPED_FUNGUS
    [[maybe_unused]] static void set_field_WARPED_FUNGUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WARPED_FUNGUS", "field_35901", "WARPED_FUNGUS", "f_195119_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#WARPED_FUNGUS_PLANTED
    [[maybe_unused]] static jobject get_field_WARPED_FUNGUS_PLANTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "WARPED_FUNGUS_PLANTED", "field_35902", "WARPED_FUNGUS_PLANTED", "f_195120_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#WARPED_FUNGUS_PLANTED
    [[maybe_unused]] static void set_field_WARPED_FUNGUS_PLANTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "WARPED_FUNGUS_PLANTED", "field_35902", "WARPED_FUNGUS_PLANTED", "f_195120_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#HUGE_BROWN_MUSHROOM
    [[maybe_unused]] static jobject get_field_HUGE_BROWN_MUSHROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "HUGE_BROWN_MUSHROOM", "field_35903", "HUGE_BROWN_MUSHROOM", "f_195121_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#HUGE_BROWN_MUSHROOM
    [[maybe_unused]] static void set_field_HUGE_BROWN_MUSHROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "HUGE_BROWN_MUSHROOM", "field_35903", "HUGE_BROWN_MUSHROOM", "f_195121_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#HUGE_RED_MUSHROOM
    [[maybe_unused]] static jobject get_field_HUGE_RED_MUSHROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "HUGE_RED_MUSHROOM", "field_35904", "HUGE_RED_MUSHROOM", "f_195122_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#HUGE_RED_MUSHROOM
    [[maybe_unused]] static void set_field_HUGE_RED_MUSHROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "HUGE_RED_MUSHROOM", "field_35904", "HUGE_RED_MUSHROOM", "f_195122_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#OAK
    [[maybe_unused]] static jobject get_field_OAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "OAK", "field_35905", "OAK", "f_195123_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#OAK
    [[maybe_unused]] static void set_field_OAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "OAK", "field_35905", "OAK", "f_195123_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#DARK_OAK
    [[maybe_unused]] static jobject get_field_DARK_OAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DARK_OAK", "field_35906", "DARK_OAK", "f_195124_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#DARK_OAK
    [[maybe_unused]] static void set_field_DARK_OAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DARK_OAK", "field_35906", "DARK_OAK", "f_195124_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#BIRCH
    [[maybe_unused]] static jobject get_field_BIRCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "BIRCH", "field_35907", "BIRCH", "f_195125_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#BIRCH
    [[maybe_unused]] static void set_field_BIRCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "BIRCH", "field_35907", "BIRCH", "f_195125_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#ACACIA
    [[maybe_unused]] static jobject get_field_ACACIA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ACACIA", "field_35908", "ACACIA", "f_195126_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#ACACIA
    [[maybe_unused]] static void set_field_ACACIA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ACACIA", "field_35908", "ACACIA", "f_195126_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#SPRUCE
    [[maybe_unused]] static jobject get_field_SPRUCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SPRUCE", "field_35909", "SPRUCE", "f_195127_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#SPRUCE
    [[maybe_unused]] static void set_field_SPRUCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SPRUCE", "field_35909", "SPRUCE", "f_195127_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#PINE
    [[maybe_unused]] static jobject get_field_PINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PINE", "field_35910", "PINE", "f_195128_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#PINE
    [[maybe_unused]] static void set_field_PINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PINE", "field_35910", "PINE", "f_195128_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#JUNGLE_TREE
    [[maybe_unused]] static jobject get_field_JUNGLE_TREE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "JUNGLE_TREE", "field_35911", "JUNGLE_TREE", "f_195129_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#JUNGLE_TREE
    [[maybe_unused]] static void set_field_JUNGLE_TREE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "JUNGLE_TREE", "field_35911", "JUNGLE_TREE", "f_195129_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#FANCY_OAK
    [[maybe_unused]] static jobject get_field_FANCY_OAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "FANCY_OAK", "field_35912", "FANCY_OAK", "f_195130_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#FANCY_OAK
    [[maybe_unused]] static void set_field_FANCY_OAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "FANCY_OAK", "field_35912", "FANCY_OAK", "f_195130_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#JUNGLE_TREE_NO_VINE
    [[maybe_unused]] static jobject get_field_JUNGLE_TREE_NO_VINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "JUNGLE_TREE_NO_VINE", "field_35913", "JUNGLE_TREE_NO_VINE", "f_195131_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#JUNGLE_TREE_NO_VINE
    [[maybe_unused]] static void set_field_JUNGLE_TREE_NO_VINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "JUNGLE_TREE_NO_VINE", "field_35913", "JUNGLE_TREE_NO_VINE", "f_195131_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#MEGA_JUNGLE_TREE
    [[maybe_unused]] static jobject get_field_MEGA_JUNGLE_TREE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MEGA_JUNGLE_TREE", "field_35914", "MEGA_JUNGLE_TREE", "f_195132_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#MEGA_JUNGLE_TREE
    [[maybe_unused]] static void set_field_MEGA_JUNGLE_TREE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MEGA_JUNGLE_TREE", "field_35914", "MEGA_JUNGLE_TREE", "f_195132_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#MEGA_SPRUCE
    [[maybe_unused]] static jobject get_field_MEGA_SPRUCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "MEGA_SPRUCE", "field_35915", "MEGA_SPRUCE", "f_195133_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#MEGA_SPRUCE
    [[maybe_unused]] static void set_field_MEGA_SPRUCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "MEGA_SPRUCE", "field_35915", "MEGA_SPRUCE", "f_195133_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#MEGA_PINE
    [[maybe_unused]] static jobject get_field_MEGA_PINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "MEGA_PINE", "field_35916", "MEGA_PINE", "f_195134_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#MEGA_PINE
    [[maybe_unused]] static void set_field_MEGA_PINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "MEGA_PINE", "field_35916", "MEGA_PINE", "f_195134_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#SUPER_BIRCH_BEES_0002
    [[maybe_unused]] static jobject get_field_SUPER_BIRCH_BEES_0002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SUPER_BIRCH_BEES_0002", "field_35917", "SUPER_BIRCH_BEES_0002", "f_195135_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#SUPER_BIRCH_BEES_0002
    [[maybe_unused]] static void set_field_SUPER_BIRCH_BEES_0002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SUPER_BIRCH_BEES_0002", "field_35917", "SUPER_BIRCH_BEES_0002", "f_195135_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#SUPER_BIRCH_BEES
    [[maybe_unused]] static jobject get_field_SUPER_BIRCH_BEES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SUPER_BIRCH_BEES", "field_35918", "SUPER_BIRCH_BEES", "f_195136_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#SUPER_BIRCH_BEES
    [[maybe_unused]] static void set_field_SUPER_BIRCH_BEES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SUPER_BIRCH_BEES", "field_35918", "SUPER_BIRCH_BEES", "f_195136_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#SWAMP_OAK
    [[maybe_unused]] static jobject get_field_SWAMP_OAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SWAMP_OAK", "field_35919", "SWAMP_OAK", "f_195137_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#SWAMP_OAK
    [[maybe_unused]] static void set_field_SWAMP_OAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SWAMP_OAK", "field_35919", "SWAMP_OAK", "f_195137_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#JUNGLE_BUSH
    [[maybe_unused]] static jobject get_field_JUNGLE_BUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "JUNGLE_BUSH", "field_35920", "JUNGLE_BUSH", "f_195138_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#JUNGLE_BUSH
    [[maybe_unused]] static void set_field_JUNGLE_BUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "JUNGLE_BUSH", "field_35920", "JUNGLE_BUSH", "f_195138_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#AZALEA_TREE
    [[maybe_unused]] static jobject get_field_AZALEA_TREE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "AZALEA_TREE", "field_35921", "AZALEA_TREE", "f_195139_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#AZALEA_TREE
    [[maybe_unused]] static void set_field_AZALEA_TREE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "AZALEA_TREE", "field_35921", "AZALEA_TREE", "f_195139_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#MANGROVE
    [[maybe_unused]] static jobject get_field_MANGROVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "MANGROVE", "field_38810", "MANGROVE", "f_236762_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#MANGROVE
    [[maybe_unused]] static void set_field_MANGROVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "MANGROVE", "field_38810", "MANGROVE", "f_236762_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#TALL_MANGROVE
    [[maybe_unused]] static jobject get_field_TALL_MANGROVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "TALL_MANGROVE", "field_38811", "TALL_MANGROVE", "f_236763_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#TALL_MANGROVE
    [[maybe_unused]] static void set_field_TALL_MANGROVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "TALL_MANGROVE", "field_38811", "TALL_MANGROVE", "f_236763_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#CHERRY
    [[maybe_unused]] static jobject get_field_CHERRY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "CHERRY", "field_42960", "CHERRY", "f_271469_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#CHERRY
    [[maybe_unused]] static void set_field_CHERRY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "CHERRY", "field_42960", "CHERRY", "f_271469_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#OAK_BEES_0002
    [[maybe_unused]] static jobject get_field_OAK_BEES_0002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "OAK_BEES_0002", "field_35922", "OAK_BEES_0002", "f_195140_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#OAK_BEES_0002
    [[maybe_unused]] static void set_field_OAK_BEES_0002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "OAK_BEES_0002", "field_35922", "OAK_BEES_0002", "f_195140_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#OAK_BEES_002
    [[maybe_unused]] static jobject get_field_OAK_BEES_002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "OAK_BEES_002", "field_35923", "OAK_BEES_002", "f_195141_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#OAK_BEES_002
    [[maybe_unused]] static void set_field_OAK_BEES_002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "OAK_BEES_002", "field_35923", "OAK_BEES_002", "f_195141_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#OAK_BEES_005
    [[maybe_unused]] static jobject get_field_OAK_BEES_005() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "OAK_BEES_005", "field_35924", "OAK_BEES_005", "f_195142_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#OAK_BEES_005
    [[maybe_unused]] static void set_field_OAK_BEES_005(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "OAK_BEES_005", "field_35924", "OAK_BEES_005", "f_195142_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#BIRCH_BEES_0002
    [[maybe_unused]] static jobject get_field_BIRCH_BEES_0002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "BIRCH_BEES_0002", "field_35888", "BIRCH_BEES_0002", "f_195106_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#BIRCH_BEES_0002
    [[maybe_unused]] static void set_field_BIRCH_BEES_0002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "BIRCH_BEES_0002", "field_35888", "BIRCH_BEES_0002", "f_195106_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#BIRCH_BEES_002
    [[maybe_unused]] static jobject get_field_BIRCH_BEES_002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "BIRCH_BEES_002", "field_35889", "BIRCH_BEES_002", "f_195107_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#BIRCH_BEES_002
    [[maybe_unused]] static void set_field_BIRCH_BEES_002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "BIRCH_BEES_002", "field_35889", "BIRCH_BEES_002", "f_195107_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#BIRCH_BEES_005
    [[maybe_unused]] static jobject get_field_BIRCH_BEES_005() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "BIRCH_BEES_005", "field_35890", "BIRCH_BEES_005", "f_195108_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#BIRCH_BEES_005
    [[maybe_unused]] static void set_field_BIRCH_BEES_005(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "BIRCH_BEES_005", "field_35890", "BIRCH_BEES_005", "f_195108_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#FANCY_OAK_BEES_0002
    [[maybe_unused]] static jobject get_field_FANCY_OAK_BEES_0002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "FANCY_OAK_BEES_0002", "field_35891", "FANCY_OAK_BEES_0002", "f_195109_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#FANCY_OAK_BEES_0002
    [[maybe_unused]] static void set_field_FANCY_OAK_BEES_0002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "FANCY_OAK_BEES_0002", "field_35891", "FANCY_OAK_BEES_0002", "f_195109_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#FANCY_OAK_BEES_002
    [[maybe_unused]] static jobject get_field_FANCY_OAK_BEES_002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "FANCY_OAK_BEES_002", "field_35892", "FANCY_OAK_BEES_002", "f_195110_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#FANCY_OAK_BEES_002
    [[maybe_unused]] static void set_field_FANCY_OAK_BEES_002(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "FANCY_OAK_BEES_002", "field_35892", "FANCY_OAK_BEES_002", "f_195110_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#FANCY_OAK_BEES_005
    [[maybe_unused]] static jobject get_field_FANCY_OAK_BEES_005() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "FANCY_OAK_BEES_005", "field_35893", "FANCY_OAK_BEES_005", "f_195111_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#FANCY_OAK_BEES_005
    [[maybe_unused]] static void set_field_FANCY_OAK_BEES_005(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "FANCY_OAK_BEES_005", "field_35893", "FANCY_OAK_BEES_005", "f_195111_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#FANCY_OAK_BEES
    [[maybe_unused]] static jobject get_field_FANCY_OAK_BEES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "FANCY_OAK_BEES", "field_35894", "FANCY_OAK_BEES", "f_195112_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#FANCY_OAK_BEES
    [[maybe_unused]] static void set_field_FANCY_OAK_BEES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "FANCY_OAK_BEES", "field_35894", "FANCY_OAK_BEES", "f_195112_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#CHERRY_BEES_005
    [[maybe_unused]] static jobject get_field_CHERRY_BEES_005() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "CHERRY_BEES_005", "field_42959", "CHERRY_BEES_005", "f_271485_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.TreeConfiguredFeatures#CHERRY_BEES_005
    [[maybe_unused]] static void set_field_CHERRY_BEES_005(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "CHERRY_BEES_005", "field_42959", "CHERRY_BEES_005", "f_271485_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_builder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createStraightBlobTree", "method_39711", "builder", "m_195146_"), "(Ldfy;Ldfy;IIII)Lefe$a;");
    }

    static jobject builder(const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_builder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_oak() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createOak", "method_39710", "oak", "m_195145_"), "()Lefe$a;");
    }

    static jobject oak() {
       const auto clazz = self();
       const auto methodID = methodID_oak();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_birch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createBirch", "method_39712", "birch", "m_195153_"), "()Lefe$a;");
    }

    static jobject birch() {
       const auto clazz = self();
       const auto methodID = methodID_birch();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_superBirch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "createSuperBirch", "method_39713", "superBirch", "m_195154_"), "()Lefe$a;");
    }

    static jobject superBirch() {
       const auto clazz = self();
       const auto methodID = methodID_superBirch();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_jungle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "createJungleTree", "method_39714", "jungle", "m_195155_"), "()Lefe$a;");
    }

    static jobject jungle() {
       const auto clazz = self();
       const auto methodID = methodID_jungle();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_fancyOak() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "createFancyOak", "method_39715", "fancyOak", "m_195156_"), "()Lefe$a;");
    }

    static jobject fancyOak() {
       const auto clazz = self();
       const auto methodID = methodID_fancyOak();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_cherry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "cherry", "method_49392", "cherry", "m_271891_"), "()Lefe$a;");
    }

    static jobject cherry() {
       const auto clazz = self();
       const auto methodID = methodID_cherry();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_bootstrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_46857", "bootstrap", "m_255340_"), "(Lqq;)V");
    }

    static void bootstrap(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_bootstrap();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_TREECONFIGUREDFEATURES_HPP