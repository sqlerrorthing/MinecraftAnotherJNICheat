// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_ROOTSYSTEMFEATURECONFIG_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_ROOTSYSTEMFEATURECONFIG_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.RootSystemFeatureConfig
 * Remapped: eey
 */
namespace RootSystemFeatureConfig {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eey", "net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration", "net/minecraft/class_5926", "net/minecraft/world/gen/feature/RootSystemFeatureConfig", "net/minecraft/src/C_141386_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_29267", "CODEC", "f_161101_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_29267", "CODEC", "f_161101_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#feature
    static jobject get_field_feature(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "treeFeature", "field_29268", "feature", "f_161102_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#feature
    static void set_field_feature(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "treeFeature", "field_29268", "feature", "f_161102_"), "Ljm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#requiredVerticalSpaceForTree
    static jint get_field_requiredVerticalSpaceForTree(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "requiredVerticalSpaceForTree", "field_29269", "requiredVerticalSpaceForTree", "f_161103_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#requiredVerticalSpaceForTree
    static void set_field_requiredVerticalSpaceForTree(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "requiredVerticalSpaceForTree", "field_29269", "requiredVerticalSpaceForTree", "f_161103_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#rootRadius
    static jint get_field_rootRadius(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "rootRadius", "field_29270", "rootRadius", "f_161104_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#rootRadius
    static void set_field_rootRadius(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "rootRadius", "field_29270", "rootRadius", "f_161104_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#rootReplaceable
    static jobject get_field_rootReplaceable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "rootReplaceable", "field_29271", "rootReplaceable", "f_161105_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#rootReplaceable
    static void set_field_rootReplaceable(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "rootReplaceable", "field_29271", "rootReplaceable", "f_161105_"), "Lawu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#rootStateProvider
    static jobject get_field_rootStateProvider(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "rootStateProvider", "field_29272", "rootStateProvider", "f_161106_"), "Legj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#rootStateProvider
    static void set_field_rootStateProvider(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "rootStateProvider", "field_29272", "rootStateProvider", "f_161106_"), "Legj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#rootPlacementAttempts
    static jint get_field_rootPlacementAttempts(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "rootPlacementAttempts", "field_29273", "rootPlacementAttempts", "f_161107_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#rootPlacementAttempts
    static void set_field_rootPlacementAttempts(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "rootPlacementAttempts", "field_29273", "rootPlacementAttempts", "f_161107_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#maxRootColumnHeight
    static jint get_field_maxRootColumnHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "rootColumnMaxHeight", "field_29274", "maxRootColumnHeight", "f_161108_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#maxRootColumnHeight
    static void set_field_maxRootColumnHeight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "rootColumnMaxHeight", "field_29274", "maxRootColumnHeight", "f_161108_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#hangingRootRadius
    static jint get_field_hangingRootRadius(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "hangingRootRadius", "field_29275", "hangingRootRadius", "f_161109_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#hangingRootRadius
    static void set_field_hangingRootRadius(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "hangingRootRadius", "field_29275", "hangingRootRadius", "f_161109_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#hangingRootVerticalSpan
    static jint get_field_hangingRootVerticalSpan(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "hangingRootsVerticalSpan", "field_29276", "hangingRootVerticalSpan", "f_161110_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#hangingRootVerticalSpan
    static void set_field_hangingRootVerticalSpan(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "hangingRootsVerticalSpan", "field_29276", "hangingRootVerticalSpan", "f_161110_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#hangingRootStateProvider
    static jobject get_field_hangingRootStateProvider(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "hangingRootStateProvider", "field_29277", "hangingRootStateProvider", "f_161111_"), "Legj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#hangingRootStateProvider
    static void set_field_hangingRootStateProvider(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "hangingRootStateProvider", "field_29277", "hangingRootStateProvider", "f_161111_"), "Legj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#hangingRootPlacementAttempts
    static jint get_field_hangingRootPlacementAttempts(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "hangingRootPlacementAttempts", "field_29278", "hangingRootPlacementAttempts", "f_161112_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#hangingRootPlacementAttempts
    static void set_field_hangingRootPlacementAttempts(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "hangingRootPlacementAttempts", "field_29278", "hangingRootPlacementAttempts", "f_161112_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#allowedVerticalWaterForTree
    static jint get_field_allowedVerticalWaterForTree(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "allowedVerticalWaterForTree", "field_33616", "allowedVerticalWaterForTree", "f_161113_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#allowedVerticalWaterForTree
    static void set_field_allowedVerticalWaterForTree(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "allowedVerticalWaterForTree", "field_33616", "allowedVerticalWaterForTree", "f_161113_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#predicate
    static jobject get_field_predicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "allowedTreePosition", "field_36289", "predicate", "f_198355_"), "Leaf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.feature.RootSystemFeatureConfig#predicate
    static void set_field_predicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "allowedTreePosition", "field_36289", "predicate", "f_198355_"), "Leaf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_ROOTSYSTEMFEATURECONFIG_HPP