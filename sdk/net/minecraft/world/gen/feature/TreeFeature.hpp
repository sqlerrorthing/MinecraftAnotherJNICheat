// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_FEATURE_TREEFEATURE_HPP
#define NET_MINECRAFT_WORLD_GEN_FEATURE_TREEFEATURE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.feature.TreeFeature
 * Remapped: edq
 */
namespace TreeFeature {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("edq", "net/minecraft/world/level/levelgen/feature/TreeFeature", "net/minecraft/class_2944", "net/minecraft/world/gen/feature/TreeFeature", "net/minecraft/src/C_2309_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.gen.feature.TreeFeature#FORCE_STATE_AND_NOTIFY_ALL
    [[maybe_unused]] static jint get_field_FORCE_STATE_AND_NOTIFY_ALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLOCK_UPDATE_FLAGS", "field_31519", "FORCE_STATE_AND_NOTIFY_ALL", "f_160509_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.feature.TreeFeature#FORCE_STATE_AND_NOTIFY_ALL
    [[maybe_unused]] static void set_field_FORCE_STATE_AND_NOTIFY_ALL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLOCK_UPDATE_FLAGS", "field_31519", "FORCE_STATE_AND_NOTIFY_ALL", "f_160509_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_isVine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "isVine", "method_16416", "isVine", "m_67277_"), "(Lddc;Ljd;)Z");
    }

    static jboolean isVine(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isVine();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isAirOrLeaves() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isAirOrLeaves", "method_16420", "isAirOrLeaves", "m_67267_"), "(Lddc;Ljd;)Z");
    }

    static jboolean isAirOrLeaves(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isAirOrLeaves();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setBlockStateWithoutUpdatingNeighbors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "setBlockKnownShape", "method_12774", "setBlockStateWithoutUpdatingNeighbors", "m_67256_"), "(Ldde;Ljd;Ldtc;)V");
    }

    static void setBlockStateWithoutUpdatingNeighbors(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_setBlockStateWithoutUpdatingNeighbors();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_canReplace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "validTreePos", "method_27371", "canReplace", "m_67272_"), "(Lddc;Ljd;)Z");
    }

    static jboolean canReplace(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canReplace();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_generate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doPlace", "method_12775", "generate", "m_225257_"), "(Ldds;Layw;Ljd;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Lefu$b;Lefe;)Z");
    }

    static jboolean generate(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6) {
                
       const auto methodID = methodID_generate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_getTopPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMaxFreeTreeHeight", "method_29963", "getTopPosition", "m_67215_"), "(Lddc;ILjd;Lefe;)I");
    }

    static jint getTopPosition(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getTopPosition();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_setBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlock", "method_13153", "setBlockState", "m_5974_"), "(Ldde;Ljd;Ldtc;)V");
    }

    static void setBlockState(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_setBlockState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__generate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "place", "method_13151", "generate", "m_142674_"), "(Lecg;)Z");
    }

    static jboolean _generate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__generate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_placeLogsAndLeaves() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "updateLeaves", "method_23380", "placeLogsAndLeaves", "m_225251_"), "(Ldcx;Lejj;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lexl;");
    }

    static jobject placeLogsAndLeaves(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_placeLogsAndLeaves();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_FEATURE_TREEFEATURE_HPP