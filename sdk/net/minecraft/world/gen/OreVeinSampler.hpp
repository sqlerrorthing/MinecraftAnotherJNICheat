// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_OREVEINSAMPLER_HPP
#define NET_MINECRAFT_WORLD_GEN_OREVEINSAMPLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.OreVeinSampler
 * Remapped: dzi
 */
namespace OreVeinSampler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dzi", "net/minecraft/world/level/levelgen/OreVeinifier", "net/minecraft/class_6955", "net/minecraft/world/gen/OreVeinSampler", "net/minecraft/src/C_207018_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.gen.OreVeinSampler#DENSITY_THRESHOLD
    [[maybe_unused]] static jfloat get_field_DENSITY_THRESHOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "VEININESS_THRESHOLD", "field_36620", "DENSITY_THRESHOLD", "f_209650_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.OreVeinSampler#DENSITY_THRESHOLD
    [[maybe_unused]] static void set_field_DENSITY_THRESHOLD(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "VEININESS_THRESHOLD", "field_36620", "DENSITY_THRESHOLD", "f_209650_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.OreVeinSampler#MAX_DENSITY_INTRUSION
    [[maybe_unused]] static jint get_field_MAX_DENSITY_INTRUSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EDGE_ROUNDOFF_BEGIN", "field_36621", "MAX_DENSITY_INTRUSION", "f_209651_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.OreVeinSampler#MAX_DENSITY_INTRUSION
    [[maybe_unused]] static void set_field_MAX_DENSITY_INTRUSION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EDGE_ROUNDOFF_BEGIN", "field_36621", "MAX_DENSITY_INTRUSION", "f_209651_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.OreVeinSampler#LIMINAL_DENSITY_REDUCTION
    [[maybe_unused]] static jdouble get_field_LIMINAL_DENSITY_REDUCTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_EDGE_ROUNDOFF", "field_36622", "LIMINAL_DENSITY_REDUCTION", "f_209652_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.OreVeinSampler#LIMINAL_DENSITY_REDUCTION
    [[maybe_unused]] static void set_field_LIMINAL_DENSITY_REDUCTION(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_EDGE_ROUNDOFF", "field_36622", "LIMINAL_DENSITY_REDUCTION", "f_209652_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.OreVeinSampler#BLOCK_GENERATION_CHANCE
    [[maybe_unused]] static jfloat get_field_BLOCK_GENERATION_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "VEIN_SOLIDNESS", "field_36623", "BLOCK_GENERATION_CHANCE", "f_209653_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.OreVeinSampler#BLOCK_GENERATION_CHANCE
    [[maybe_unused]] static void set_field_BLOCK_GENERATION_CHANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "VEIN_SOLIDNESS", "field_36623", "BLOCK_GENERATION_CHANCE", "f_209653_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.OreVeinSampler#MIN_ORE_CHANCE
    [[maybe_unused]] static jfloat get_field_MIN_ORE_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MIN_RICHNESS", "field_36624", "MIN_ORE_CHANCE", "f_209654_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.OreVeinSampler#MIN_ORE_CHANCE
    [[maybe_unused]] static void set_field_MIN_ORE_CHANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MIN_RICHNESS", "field_36624", "MIN_ORE_CHANCE", "f_209654_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.OreVeinSampler#MAX_ORE_CHANCE
    [[maybe_unused]] static jfloat get_field_MAX_ORE_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "MAX_RICHNESS", "field_36625", "MAX_ORE_CHANCE", "f_209655_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.OreVeinSampler#MAX_ORE_CHANCE
    [[maybe_unused]] static void set_field_MAX_ORE_CHANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "MAX_RICHNESS", "field_36625", "MAX_ORE_CHANCE", "f_209655_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.OreVeinSampler#DENSITY_FOR_MAX_ORE_CHANCE
    [[maybe_unused]] static jfloat get_field_DENSITY_FOR_MAX_ORE_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MAX_RICHNESS_THRESHOLD", "field_36626", "DENSITY_FOR_MAX_ORE_CHANCE", "f_209656_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.OreVeinSampler#DENSITY_FOR_MAX_ORE_CHANCE
    [[maybe_unused]] static void set_field_DENSITY_FOR_MAX_ORE_CHANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MAX_RICHNESS_THRESHOLD", "field_36626", "DENSITY_FOR_MAX_ORE_CHANCE", "f_209656_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.OreVeinSampler#RAW_ORE_BLOCK_CHANCE
    [[maybe_unused]] static jfloat get_field_RAW_ORE_BLOCK_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CHANCE_OF_RAW_ORE_BLOCK", "field_36627", "RAW_ORE_BLOCK_CHANCE", "f_209657_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.OreVeinSampler#RAW_ORE_BLOCK_CHANCE
    [[maybe_unused]] static void set_field_RAW_ORE_BLOCK_CHANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CHANCE_OF_RAW_ORE_BLOCK", "field_36627", "RAW_ORE_BLOCK_CHANCE", "f_209657_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.gen.OreVeinSampler#VEIN_GAP_THRESHOLD
    [[maybe_unused]] static jfloat get_field_VEIN_GAP_THRESHOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SKIP_ORE_IF_GAP_NOISE_IS_BELOW", "field_36628", "VEIN_GAP_THRESHOLD", "f_209658_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.OreVeinSampler#VEIN_GAP_THRESHOLD
    [[maybe_unused]] static void set_field_VEIN_GAP_THRESHOLD(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SKIP_ORE_IF_GAP_NOISE_IS_BELOW", "field_36628", "VEIN_GAP_THRESHOLD", "f_209658_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_40548", "create", "m_209667_"), "(Ldyr;Ldyr;Ldyr;Ldzl;)Ldzc$c;");
    }

    static jobject create(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_OREVEINSAMPLER_HPP