// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_NOISE_NOISEROUTER_HPP
#define NET_MINECRAFT_WORLD_GEN_NOISE_NOISEROUTER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.noise.NoiseRouter
 * Remapped: dze
 */
namespace NoiseRouter {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dze", "net/minecraft/world/level/levelgen/NoiseRouter", "net/minecraft/class_6953", "net/minecraft/world/gen/noise/NoiseRouter", "net/minecraft/src/C_207014_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#barrierNoise
    static jobject get_field_barrierNoise(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "barrierNoise", "comp_414", "barrierNoise", "f_209378_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#barrierNoise
    static void set_field_barrierNoise(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "barrierNoise", "comp_414", "barrierNoise", "f_209378_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#fluidLevelFloodednessNoise
    static jobject get_field_fluidLevelFloodednessNoise(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "fluidLevelFloodednessNoise", "comp_415", "fluidLevelFloodednessNoise", "f_209379_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#fluidLevelFloodednessNoise
    static void set_field_fluidLevelFloodednessNoise(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "fluidLevelFloodednessNoise", "comp_415", "fluidLevelFloodednessNoise", "f_209379_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#fluidLevelSpreadNoise
    static jobject get_field_fluidLevelSpreadNoise(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "fluidLevelSpreadNoise", "comp_416", "fluidLevelSpreadNoise", "f_209380_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#fluidLevelSpreadNoise
    static void set_field_fluidLevelSpreadNoise(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "fluidLevelSpreadNoise", "comp_416", "fluidLevelSpreadNoise", "f_209380_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#lavaNoise
    static jobject get_field_lavaNoise(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "lavaNoise", "comp_417", "lavaNoise", "f_209381_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#lavaNoise
    static void set_field_lavaNoise(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "lavaNoise", "comp_417", "lavaNoise", "f_209381_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#temperature
    static jobject get_field_temperature(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "temperature", "comp_420", "temperature", "f_209384_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#temperature
    static void set_field_temperature(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "temperature", "comp_420", "temperature", "f_209384_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#vegetation
    static jobject get_field_vegetation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "vegetation", "comp_539", "vegetation", "f_224392_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#vegetation
    static void set_field_vegetation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "vegetation", "comp_539", "vegetation", "f_224392_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#continents
    static jobject get_field_continents(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "continents", "comp_484", "continents", "f_209386_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#continents
    static void set_field_continents(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "continents", "comp_484", "continents", "f_209386_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#erosion
    static jobject get_field_erosion(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "erosion", "comp_423", "erosion", "f_209387_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#erosion
    static void set_field_erosion(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "erosion", "comp_423", "erosion", "f_209387_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#depth
    static jobject get_field_depth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "depth", "comp_424", "depth", "f_209388_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#depth
    static void set_field_depth(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "depth", "comp_424", "depth", "f_209388_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#ridges
    static jobject get_field_ridges(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "ridges", "comp_485", "ridges", "f_209389_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#ridges
    static void set_field_ridges(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "ridges", "comp_485", "ridges", "f_209389_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#initialDensityWithoutJaggedness
    static jobject get_field_initialDensityWithoutJaggedness(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "initialDensityWithoutJaggedness", "comp_486", "initialDensityWithoutJaggedness", "f_209390_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#initialDensityWithoutJaggedness
    static void set_field_initialDensityWithoutJaggedness(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "initialDensityWithoutJaggedness", "comp_486", "initialDensityWithoutJaggedness", "f_209390_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#finalDensity
    static jobject get_field_finalDensity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "finalDensity", "comp_487", "finalDensity", "f_209391_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#finalDensity
    static void set_field_finalDensity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "finalDensity", "comp_487", "finalDensity", "f_209391_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#veinToggle
    static jobject get_field_veinToggle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "veinToggle", "comp_428", "veinToggle", "f_209392_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#veinToggle
    static void set_field_veinToggle(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "veinToggle", "comp_428", "veinToggle", "f_209392_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#veinRidged
    static jobject get_field_veinRidged(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "veinRidged", "comp_429", "veinRidged", "f_209393_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#veinRidged
    static void set_field_veinRidged(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "veinRidged", "comp_429", "veinRidged", "f_209393_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.gen.noise.NoiseRouter#veinGap
    static jobject get_field_veinGap(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "veinGap", "comp_430", "veinGap", "f_209394_"), "Ldyr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.gen.noise.NoiseRouter#veinGap
    static void set_field_veinGap(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "veinGap", "comp_430", "veinGap", "f_209394_"), "Ldyr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseRouter#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_37683", "CODEC", "f_224391_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseRouter#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_37683", "CODEC", "f_224391_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_field() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "field", "method_41545", "field", "m_224414_"), "(Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;");
    }

    static jobject field(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_field();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mapAll", "method_41544", "apply", "m_224412_"), "(Ldyr$f;)Ldze;");
    }

    static jobject apply(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_apply();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__barrierNoise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "barrierNoise", "comp_414", "barrierNoise", "f_209378_"), "()Ldyr;");
    }

    static jobject _barrierNoise(const jobject& obj) {
                
       const auto methodID = methodID__barrierNoise();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__fluidLevelFloodednessNoise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "fluidLevelFloodednessNoise", "comp_415", "fluidLevelFloodednessNoise", "f_209379_"), "()Ldyr;");
    }

    static jobject _fluidLevelFloodednessNoise(const jobject& obj) {
                
       const auto methodID = methodID__fluidLevelFloodednessNoise();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__fluidLevelSpreadNoise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "fluidLevelSpreadNoise", "comp_416", "fluidLevelSpreadNoise", "f_209380_"), "()Ldyr;");
    }

    static jobject _fluidLevelSpreadNoise(const jobject& obj) {
                
       const auto methodID = methodID__fluidLevelSpreadNoise();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__lavaNoise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "lavaNoise", "comp_417", "lavaNoise", "f_209381_"), "()Ldyr;");
    }

    static jobject _lavaNoise(const jobject& obj) {
                
       const auto methodID = methodID__lavaNoise();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__temperature() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "temperature", "comp_420", "temperature", "f_209384_"), "()Ldyr;");
    }

    static jobject _temperature(const jobject& obj) {
                
       const auto methodID = methodID__temperature();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__vegetation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "vegetation", "comp_539", "vegetation", "f_224392_"), "()Ldyr;");
    }

    static jobject _vegetation(const jobject& obj) {
                
       const auto methodID = methodID__vegetation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__continents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "continents", "comp_484", "continents", "f_209386_"), "()Ldyr;");
    }

    static jobject _continents(const jobject& obj) {
                
       const auto methodID = methodID__continents();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__erosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "erosion", "comp_423", "erosion", "f_209387_"), "()Ldyr;");
    }

    static jobject _erosion(const jobject& obj) {
                
       const auto methodID = methodID__erosion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__depth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "depth", "comp_424", "depth", "f_209388_"), "()Ldyr;");
    }

    static jobject _depth(const jobject& obj) {
                
       const auto methodID = methodID__depth();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__ridges() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "ridges", "comp_485", "ridges", "f_209389_"), "()Ldyr;");
    }

    static jobject _ridges(const jobject& obj) {
                
       const auto methodID = methodID__ridges();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__initialDensityWithoutJaggedness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "initialDensityWithoutJaggedness", "comp_486", "initialDensityWithoutJaggedness", "f_209390_"), "()Ldyr;");
    }

    static jobject _initialDensityWithoutJaggedness(const jobject& obj) {
                
       const auto methodID = methodID__initialDensityWithoutJaggedness();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__finalDensity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "finalDensity", "comp_487", "finalDensity", "f_209391_"), "()Ldyr;");
    }

    static jobject _finalDensity(const jobject& obj) {
                
       const auto methodID = methodID__finalDensity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__veinToggle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "veinToggle", "comp_428", "veinToggle", "f_209392_"), "()Ldyr;");
    }

    static jobject _veinToggle(const jobject& obj) {
                
       const auto methodID = methodID__veinToggle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__veinRidged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "veinRidged", "comp_429", "veinRidged", "f_209393_"), "()Ldyr;");
    }

    static jobject _veinRidged(const jobject& obj) {
                
       const auto methodID = methodID__veinRidged();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__veinGap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "veinGap", "comp_430", "veinGap", "f_209394_"), "()Ldyr;");
    }

    static jobject _veinGap(const jobject& obj) {
                
       const auto methodID = methodID__veinGap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_NOISE_NOISEROUTER_HPP