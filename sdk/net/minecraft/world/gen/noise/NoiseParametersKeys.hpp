// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_GEN_NOISE_NOISEPARAMETERSKEYS_HPP
#define NET_MINECRAFT_WORLD_GEN_NOISE_NOISEPARAMETERSKEYS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.gen.noise.NoiseParametersKeys
 * Remapped: dzh
 */
namespace NoiseParametersKeys {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dzh", "net/minecraft/world/level/levelgen/Noises", "net/minecraft/class_6731", "net/minecraft/world/gen/noise/NoiseParametersKeys", "net/minecraft/src/C_182905_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#TEMPERATURE
    [[maybe_unused]] static jobject get_field_TEMPERATURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TEMPERATURE", "field_35389", "TEMPERATURE", "f_189269_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#TEMPERATURE
    [[maybe_unused]] static void set_field_TEMPERATURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TEMPERATURE", "field_35389", "TEMPERATURE", "f_189269_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#VEGETATION
    [[maybe_unused]] static jobject get_field_VEGETATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "VEGETATION", "field_35390", "VEGETATION", "f_189278_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#VEGETATION
    [[maybe_unused]] static void set_field_VEGETATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "VEGETATION", "field_35390", "VEGETATION", "f_189278_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CONTINENTALNESS
    [[maybe_unused]] static jobject get_field_CONTINENTALNESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CONTINENTALNESS", "field_35391", "CONTINENTALNESS", "f_189279_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CONTINENTALNESS
    [[maybe_unused]] static void set_field_CONTINENTALNESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CONTINENTALNESS", "field_35391", "CONTINENTALNESS", "f_189279_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#EROSION
    [[maybe_unused]] static jobject get_field_EROSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "EROSION", "field_35392", "EROSION", "f_189280_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#EROSION
    [[maybe_unused]] static void set_field_EROSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "EROSION", "field_35392", "EROSION", "f_189280_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#TEMPERATURE_LARGE
    [[maybe_unused]] static jobject get_field_TEMPERATURE_LARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TEMPERATURE_LARGE", "field_35594", "TEMPERATURE_LARGE", "f_189281_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#TEMPERATURE_LARGE
    [[maybe_unused]] static void set_field_TEMPERATURE_LARGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TEMPERATURE_LARGE", "field_35594", "TEMPERATURE_LARGE", "f_189281_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#VEGETATION_LARGE
    [[maybe_unused]] static jobject get_field_VEGETATION_LARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "VEGETATION_LARGE", "field_35595", "VEGETATION_LARGE", "f_189282_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#VEGETATION_LARGE
    [[maybe_unused]] static void set_field_VEGETATION_LARGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "VEGETATION_LARGE", "field_35595", "VEGETATION_LARGE", "f_189282_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CONTINENTALNESS_LARGE
    [[maybe_unused]] static jobject get_field_CONTINENTALNESS_LARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CONTINENTALNESS_LARGE", "field_35596", "CONTINENTALNESS_LARGE", "f_189283_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CONTINENTALNESS_LARGE
    [[maybe_unused]] static void set_field_CONTINENTALNESS_LARGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CONTINENTALNESS_LARGE", "field_35596", "CONTINENTALNESS_LARGE", "f_189283_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#EROSION_LARGE
    [[maybe_unused]] static jobject get_field_EROSION_LARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "EROSION_LARGE", "field_35597", "EROSION_LARGE", "f_189284_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#EROSION_LARGE
    [[maybe_unused]] static void set_field_EROSION_LARGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "EROSION_LARGE", "field_35597", "EROSION_LARGE", "f_189284_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#RIDGE
    [[maybe_unused]] static jobject get_field_RIDGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "RIDGE", "field_35393", "RIDGE", "f_189285_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#RIDGE
    [[maybe_unused]] static void set_field_RIDGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "RIDGE", "field_35393", "RIDGE", "f_189285_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#OFFSET
    [[maybe_unused]] static jobject get_field_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SHIFT", "field_35394", "OFFSET", "f_189286_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#OFFSET
    [[maybe_unused]] static void set_field_OFFSET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SHIFT", "field_35394", "OFFSET", "f_189286_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#AQUIFER_BARRIER
    [[maybe_unused]] static jobject get_field_AQUIFER_BARRIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "AQUIFER_BARRIER", "field_35395", "AQUIFER_BARRIER", "f_189287_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#AQUIFER_BARRIER
    [[maybe_unused]] static void set_field_AQUIFER_BARRIER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "AQUIFER_BARRIER", "field_35395", "AQUIFER_BARRIER", "f_189287_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#AQUIFER_FLUID_LEVEL_FLOODEDNESS
    [[maybe_unused]] static jobject get_field_AQUIFER_FLUID_LEVEL_FLOODEDNESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "AQUIFER_FLUID_LEVEL_FLOODEDNESS", "field_35396", "AQUIFER_FLUID_LEVEL_FLOODEDNESS", "f_189288_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#AQUIFER_FLUID_LEVEL_FLOODEDNESS
    [[maybe_unused]] static void set_field_AQUIFER_FLUID_LEVEL_FLOODEDNESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "AQUIFER_FLUID_LEVEL_FLOODEDNESS", "field_35396", "AQUIFER_FLUID_LEVEL_FLOODEDNESS", "f_189288_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#AQUIFER_LAVA
    [[maybe_unused]] static jobject get_field_AQUIFER_LAVA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "AQUIFER_LAVA", "field_35397", "AQUIFER_LAVA", "f_189289_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#AQUIFER_LAVA
    [[maybe_unused]] static void set_field_AQUIFER_LAVA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "AQUIFER_LAVA", "field_35397", "AQUIFER_LAVA", "f_189289_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#AQUIFER_FLUID_LEVEL_SPREAD
    [[maybe_unused]] static jobject get_field_AQUIFER_FLUID_LEVEL_SPREAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "AQUIFER_FLUID_LEVEL_SPREAD", "field_35398", "AQUIFER_FLUID_LEVEL_SPREAD", "f_189290_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#AQUIFER_FLUID_LEVEL_SPREAD
    [[maybe_unused]] static void set_field_AQUIFER_FLUID_LEVEL_SPREAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "AQUIFER_FLUID_LEVEL_SPREAD", "field_35398", "AQUIFER_FLUID_LEVEL_SPREAD", "f_189290_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#PILLAR
    [[maybe_unused]] static jobject get_field_PILLAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "PILLAR", "field_35399", "PILLAR", "f_189291_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#PILLAR
    [[maybe_unused]] static void set_field_PILLAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "PILLAR", "field_35399", "PILLAR", "f_189291_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#PILLAR_RARENESS
    [[maybe_unused]] static jobject get_field_PILLAR_RARENESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "PILLAR_RARENESS", "field_35400", "PILLAR_RARENESS", "f_189292_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#PILLAR_RARENESS
    [[maybe_unused]] static void set_field_PILLAR_RARENESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "PILLAR_RARENESS", "field_35400", "PILLAR_RARENESS", "f_189292_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#PILLAR_THICKNESS
    [[maybe_unused]] static jobject get_field_PILLAR_THICKNESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "PILLAR_THICKNESS", "field_35401", "PILLAR_THICKNESS", "f_189293_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#PILLAR_THICKNESS
    [[maybe_unused]] static void set_field_PILLAR_THICKNESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "PILLAR_THICKNESS", "field_35401", "PILLAR_THICKNESS", "f_189293_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_2D
    [[maybe_unused]] static jobject get_field_SPAGHETTI_2D() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SPAGHETTI_2D", "field_35402", "SPAGHETTI_2D", "f_189294_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_2D
    [[maybe_unused]] static void set_field_SPAGHETTI_2D(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SPAGHETTI_2D", "field_35402", "SPAGHETTI_2D", "f_189294_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_2D_ELEVATION
    [[maybe_unused]] static jobject get_field_SPAGHETTI_2D_ELEVATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SPAGHETTI_2D_ELEVATION", "field_35403", "SPAGHETTI_2D_ELEVATION", "f_189295_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_2D_ELEVATION
    [[maybe_unused]] static void set_field_SPAGHETTI_2D_ELEVATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SPAGHETTI_2D_ELEVATION", "field_35403", "SPAGHETTI_2D_ELEVATION", "f_189295_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_2D_MODULATOR
    [[maybe_unused]] static jobject get_field_SPAGHETTI_2D_MODULATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SPAGHETTI_2D_MODULATOR", "field_35404", "SPAGHETTI_2D_MODULATOR", "f_189296_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_2D_MODULATOR
    [[maybe_unused]] static void set_field_SPAGHETTI_2D_MODULATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SPAGHETTI_2D_MODULATOR", "field_35404", "SPAGHETTI_2D_MODULATOR", "f_189296_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_2D_THICKNESS
    [[maybe_unused]] static jobject get_field_SPAGHETTI_2D_THICKNESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SPAGHETTI_2D_THICKNESS", "field_35405", "SPAGHETTI_2D_THICKNESS", "f_189297_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_2D_THICKNESS
    [[maybe_unused]] static void set_field_SPAGHETTI_2D_THICKNESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SPAGHETTI_2D_THICKNESS", "field_35405", "SPAGHETTI_2D_THICKNESS", "f_189297_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_3D_1
    [[maybe_unused]] static jobject get_field_SPAGHETTI_3D_1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SPAGHETTI_3D_1", "field_35406", "SPAGHETTI_3D_1", "f_189298_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_3D_1
    [[maybe_unused]] static void set_field_SPAGHETTI_3D_1(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SPAGHETTI_3D_1", "field_35406", "SPAGHETTI_3D_1", "f_189298_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_3D_2
    [[maybe_unused]] static jobject get_field_SPAGHETTI_3D_2() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SPAGHETTI_3D_2", "field_35407", "SPAGHETTI_3D_2", "f_189299_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_3D_2
    [[maybe_unused]] static void set_field_SPAGHETTI_3D_2(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SPAGHETTI_3D_2", "field_35407", "SPAGHETTI_3D_2", "f_189299_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_3D_RARITY
    [[maybe_unused]] static jobject get_field_SPAGHETTI_3D_RARITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SPAGHETTI_3D_RARITY", "field_35408", "SPAGHETTI_3D_RARITY", "f_189300_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_3D_RARITY
    [[maybe_unused]] static void set_field_SPAGHETTI_3D_RARITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SPAGHETTI_3D_RARITY", "field_35408", "SPAGHETTI_3D_RARITY", "f_189300_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_3D_THICKNESS
    [[maybe_unused]] static jobject get_field_SPAGHETTI_3D_THICKNESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SPAGHETTI_3D_THICKNESS", "field_35409", "SPAGHETTI_3D_THICKNESS", "f_189301_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_3D_THICKNESS
    [[maybe_unused]] static void set_field_SPAGHETTI_3D_THICKNESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SPAGHETTI_3D_THICKNESS", "field_35409", "SPAGHETTI_3D_THICKNESS", "f_189301_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_ROUGHNESS
    [[maybe_unused]] static jobject get_field_SPAGHETTI_ROUGHNESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "SPAGHETTI_ROUGHNESS", "field_35410", "SPAGHETTI_ROUGHNESS", "f_189302_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_ROUGHNESS
    [[maybe_unused]] static void set_field_SPAGHETTI_ROUGHNESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "SPAGHETTI_ROUGHNESS", "field_35410", "SPAGHETTI_ROUGHNESS", "f_189302_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_ROUGHNESS_MODULATOR
    [[maybe_unused]] static jobject get_field_SPAGHETTI_ROUGHNESS_MODULATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "SPAGHETTI_ROUGHNESS_MODULATOR", "field_35411", "SPAGHETTI_ROUGHNESS_MODULATOR", "f_189243_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SPAGHETTI_ROUGHNESS_MODULATOR
    [[maybe_unused]] static void set_field_SPAGHETTI_ROUGHNESS_MODULATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "SPAGHETTI_ROUGHNESS_MODULATOR", "field_35411", "SPAGHETTI_ROUGHNESS_MODULATOR", "f_189243_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CAVE_ENTRANCE
    [[maybe_unused]] static jobject get_field_CAVE_ENTRANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "CAVE_ENTRANCE", "field_35412", "CAVE_ENTRANCE", "f_189244_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CAVE_ENTRANCE
    [[maybe_unused]] static void set_field_CAVE_ENTRANCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "CAVE_ENTRANCE", "field_35412", "CAVE_ENTRANCE", "f_189244_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CAVE_LAYER
    [[maybe_unused]] static jobject get_field_CAVE_LAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "CAVE_LAYER", "field_35413", "CAVE_LAYER", "f_189245_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CAVE_LAYER
    [[maybe_unused]] static void set_field_CAVE_LAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "CAVE_LAYER", "field_35413", "CAVE_LAYER", "f_189245_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CAVE_CHEESE
    [[maybe_unused]] static jobject get_field_CAVE_CHEESE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "CAVE_CHEESE", "field_35414", "CAVE_CHEESE", "f_189246_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CAVE_CHEESE
    [[maybe_unused]] static void set_field_CAVE_CHEESE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "CAVE_CHEESE", "field_35414", "CAVE_CHEESE", "f_189246_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ORE_VEININESS
    [[maybe_unused]] static jobject get_field_ORE_VEININESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "ORE_VEININESS", "field_35363", "ORE_VEININESS", "f_189247_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ORE_VEININESS
    [[maybe_unused]] static void set_field_ORE_VEININESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "ORE_VEININESS", "field_35363", "ORE_VEININESS", "f_189247_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ORE_VEIN_A
    [[maybe_unused]] static jobject get_field_ORE_VEIN_A() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "ORE_VEIN_A", "field_35364", "ORE_VEIN_A", "f_189248_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ORE_VEIN_A
    [[maybe_unused]] static void set_field_ORE_VEIN_A(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "ORE_VEIN_A", "field_35364", "ORE_VEIN_A", "f_189248_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ORE_VEIN_B
    [[maybe_unused]] static jobject get_field_ORE_VEIN_B() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "ORE_VEIN_B", "field_35365", "ORE_VEIN_B", "f_189249_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ORE_VEIN_B
    [[maybe_unused]] static void set_field_ORE_VEIN_B(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "ORE_VEIN_B", "field_35365", "ORE_VEIN_B", "f_189249_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ORE_GAP
    [[maybe_unused]] static jobject get_field_ORE_GAP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "ORE_GAP", "field_35366", "ORE_GAP", "f_189250_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ORE_GAP
    [[maybe_unused]] static void set_field_ORE_GAP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "ORE_GAP", "field_35366", "ORE_GAP", "f_189250_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NOODLE
    [[maybe_unused]] static jobject get_field_NOODLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "NOODLE", "field_35367", "NOODLE", "f_189251_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NOODLE
    [[maybe_unused]] static void set_field_NOODLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "NOODLE", "field_35367", "NOODLE", "f_189251_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NOODLE_THICKNESS
    [[maybe_unused]] static jobject get_field_NOODLE_THICKNESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "NOODLE_THICKNESS", "field_35368", "NOODLE_THICKNESS", "f_189252_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NOODLE_THICKNESS
    [[maybe_unused]] static void set_field_NOODLE_THICKNESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "NOODLE_THICKNESS", "field_35368", "NOODLE_THICKNESS", "f_189252_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NOODLE_RIDGE_A
    [[maybe_unused]] static jobject get_field_NOODLE_RIDGE_A() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "NOODLE_RIDGE_A", "field_35369", "NOODLE_RIDGE_A", "f_189253_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NOODLE_RIDGE_A
    [[maybe_unused]] static void set_field_NOODLE_RIDGE_A(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "NOODLE_RIDGE_A", "field_35369", "NOODLE_RIDGE_A", "f_189253_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NOODLE_RIDGE_B
    [[maybe_unused]] static jobject get_field_NOODLE_RIDGE_B() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "NOODLE_RIDGE_B", "field_35370", "NOODLE_RIDGE_B", "f_189254_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NOODLE_RIDGE_B
    [[maybe_unused]] static void set_field_NOODLE_RIDGE_B(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "NOODLE_RIDGE_B", "field_35370", "NOODLE_RIDGE_B", "f_189254_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#JAGGED
    [[maybe_unused]] static jobject get_field_JAGGED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "JAGGED", "field_35371", "JAGGED", "f_189255_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#JAGGED
    [[maybe_unused]] static void set_field_JAGGED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "JAGGED", "field_35371", "JAGGED", "f_189255_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SURFACE
    [[maybe_unused]] static jobject get_field_SURFACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "SURFACE", "field_35373", "SURFACE", "f_189256_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SURFACE
    [[maybe_unused]] static void set_field_SURFACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "SURFACE", "field_35373", "SURFACE", "f_189256_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SURFACE_SECONDARY
    [[maybe_unused]] static jobject get_field_SURFACE_SECONDARY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "SURFACE_SECONDARY", "field_35675", "SURFACE_SECONDARY", "f_189257_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SURFACE_SECONDARY
    [[maybe_unused]] static void set_field_SURFACE_SECONDARY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "SURFACE_SECONDARY", "field_35675", "SURFACE_SECONDARY", "f_189257_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CLAY_BANDS_OFFSET
    [[maybe_unused]] static jobject get_field_CLAY_BANDS_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "CLAY_BANDS_OFFSET", "field_35372", "CLAY_BANDS_OFFSET", "f_189258_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CLAY_BANDS_OFFSET
    [[maybe_unused]] static void set_field_CLAY_BANDS_OFFSET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "CLAY_BANDS_OFFSET", "field_35372", "CLAY_BANDS_OFFSET", "f_189258_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#BADLANDS_PILLAR
    [[maybe_unused]] static jobject get_field_BADLANDS_PILLAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "BADLANDS_PILLAR", "field_35488", "BADLANDS_PILLAR", "f_189259_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#BADLANDS_PILLAR
    [[maybe_unused]] static void set_field_BADLANDS_PILLAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "BADLANDS_PILLAR", "field_35488", "BADLANDS_PILLAR", "f_189259_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#BADLANDS_PILLAR_ROOF
    [[maybe_unused]] static jobject get_field_BADLANDS_PILLAR_ROOF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "BADLANDS_PILLAR_ROOF", "field_35489", "BADLANDS_PILLAR_ROOF", "f_189260_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#BADLANDS_PILLAR_ROOF
    [[maybe_unused]] static void set_field_BADLANDS_PILLAR_ROOF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "BADLANDS_PILLAR_ROOF", "field_35489", "BADLANDS_PILLAR_ROOF", "f_189260_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#BADLANDS_SURFACE
    [[maybe_unused]] static jobject get_field_BADLANDS_SURFACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "BADLANDS_SURFACE", "field_35490", "BADLANDS_SURFACE", "f_189261_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#BADLANDS_SURFACE
    [[maybe_unused]] static void set_field_BADLANDS_SURFACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "BADLANDS_SURFACE", "field_35490", "BADLANDS_SURFACE", "f_189261_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ICEBERG_PILLAR
    [[maybe_unused]] static jobject get_field_ICEBERG_PILLAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "ICEBERG_PILLAR", "field_35491", "ICEBERG_PILLAR", "f_189262_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ICEBERG_PILLAR
    [[maybe_unused]] static void set_field_ICEBERG_PILLAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "ICEBERG_PILLAR", "field_35491", "ICEBERG_PILLAR", "f_189262_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ICEBERG_PILLAR_ROOF
    [[maybe_unused]] static jobject get_field_ICEBERG_PILLAR_ROOF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "ICEBERG_PILLAR_ROOF", "field_35492", "ICEBERG_PILLAR_ROOF", "f_189263_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ICEBERG_PILLAR_ROOF
    [[maybe_unused]] static void set_field_ICEBERG_PILLAR_ROOF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "ICEBERG_PILLAR_ROOF", "field_35492", "ICEBERG_PILLAR_ROOF", "f_189263_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ICEBERG_SURFACE
    [[maybe_unused]] static jobject get_field_ICEBERG_SURFACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "ICEBERG_SURFACE", "field_35493", "ICEBERG_SURFACE", "f_189264_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ICEBERG_SURFACE
    [[maybe_unused]] static void set_field_ICEBERG_SURFACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "ICEBERG_SURFACE", "field_35493", "ICEBERG_SURFACE", "f_189264_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SURFACE_SWAMP
    [[maybe_unused]] static jobject get_field_SURFACE_SWAMP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "SWAMP", "field_35376", "SURFACE_SWAMP", "f_189265_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SURFACE_SWAMP
    [[maybe_unused]] static void set_field_SURFACE_SWAMP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "SWAMP", "field_35376", "SURFACE_SWAMP", "f_189265_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CALCITE
    [[maybe_unused]] static jobject get_field_CALCITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "CALCITE", "field_35377", "CALCITE", "f_189266_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#CALCITE
    [[maybe_unused]] static void set_field_CALCITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "CALCITE", "field_35377", "CALCITE", "f_189266_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#GRAVEL
    [[maybe_unused]] static jobject get_field_GRAVEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "GRAVEL", "field_35378", "GRAVEL", "f_189267_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#GRAVEL
    [[maybe_unused]] static void set_field_GRAVEL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "GRAVEL", "field_35378", "GRAVEL", "f_189267_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#POWDER_SNOW
    [[maybe_unused]] static jobject get_field_POWDER_SNOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "POWDER_SNOW", "field_35593", "POWDER_SNOW", "f_189268_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#POWDER_SNOW
    [[maybe_unused]] static void set_field_POWDER_SNOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "POWDER_SNOW", "field_35593", "POWDER_SNOW", "f_189268_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#PACKED_ICE
    [[maybe_unused]] static jobject get_field_PACKED_ICE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "PACKED_ICE", "field_35381", "PACKED_ICE", "f_189270_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#PACKED_ICE
    [[maybe_unused]] static void set_field_PACKED_ICE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "PACKED_ICE", "field_35381", "PACKED_ICE", "f_189270_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ICE
    [[maybe_unused]] static jobject get_field_ICE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "ICE", "field_35382", "ICE", "f_189271_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#ICE
    [[maybe_unused]] static void set_field_ICE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "ICE", "field_35382", "ICE", "f_189271_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SOUL_SAND_LAYER
    [[maybe_unused]] static jobject get_field_SOUL_SAND_LAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "SOUL_SAND_LAYER", "field_35383", "SOUL_SAND_LAYER", "f_189272_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#SOUL_SAND_LAYER
    [[maybe_unused]] static void set_field_SOUL_SAND_LAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "SOUL_SAND_LAYER", "field_35383", "SOUL_SAND_LAYER", "f_189272_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#GRAVEL_LAYER
    [[maybe_unused]] static jobject get_field_GRAVEL_LAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "GRAVEL_LAYER", "field_35384", "GRAVEL_LAYER", "f_189273_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#GRAVEL_LAYER
    [[maybe_unused]] static void set_field_GRAVEL_LAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "GRAVEL_LAYER", "field_35384", "GRAVEL_LAYER", "f_189273_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#PATCH
    [[maybe_unused]] static jobject get_field_PATCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "PATCH", "field_35385", "PATCH", "f_189274_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#PATCH
    [[maybe_unused]] static void set_field_PATCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "PATCH", "field_35385", "PATCH", "f_189274_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NETHERRACK
    [[maybe_unused]] static jobject get_field_NETHERRACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "NETHERRACK", "field_35386", "NETHERRACK", "f_189275_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NETHERRACK
    [[maybe_unused]] static void set_field_NETHERRACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "NETHERRACK", "field_35386", "NETHERRACK", "f_189275_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NETHER_WART
    [[maybe_unused]] static jobject get_field_NETHER_WART() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "NETHER_WART", "field_35387", "NETHER_WART", "f_189276_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NETHER_WART
    [[maybe_unused]] static void set_field_NETHER_WART(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "NETHER_WART", "field_35387", "NETHER_WART", "f_189276_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NETHER_STATE_SELECTOR
    [[maybe_unused]] static jobject get_field_NETHER_STATE_SELECTOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "NETHER_STATE_SELECTOR", "field_35388", "NETHER_STATE_SELECTOR", "f_189277_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.gen.noise.NoiseParametersKeys#NETHER_STATE_SELECTOR
    [[maybe_unused]] static void set_field_NETHER_STATE_SELECTOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "NETHER_STATE_SELECTOR", "field_35388", "NETHER_STATE_SELECTOR", "f_189277_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createKey", "method_39174", "of", "m_189309_"), "(Ljava/lang/String;)Lakq;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createNoiseSampler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "instantiate", "method_41127", "createNoiseSampler", "m_255421_"), "(Ljn;Ldzl;Lakq;)Leoh;");
    }

    static jobject createNoiseSampler(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createNoiseSampler();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_WORLD_GEN_NOISE_NOISEPARAMETERSKEYS_HPP