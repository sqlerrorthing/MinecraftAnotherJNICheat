// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_WORLDPROPERTIES_HPP
#define NET_MINECRAFT_WORLD_WORLDPROPERTIES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.WorldProperties
 * Remapped: erb
 */
namespace WorldProperties {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("erb", "net/minecraft/world/level/storage/LevelData", "net/minecraft/class_5217", "net/minecraft/world/WorldProperties", "net/minecraft/src/C_2782_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getSpawnPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpawnPos", "method_56126", "getSpawnPos", "m_318766_"), "()Ljd;");
    }

    static jobject getSpawnPos(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpawnAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSpawnAngle", "method_30656", "getSpawnAngle", "m_6790_"), "()F");
    }

    static jfloat getSpawnAngle(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnAngle();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getGameTime", "method_188", "getTime", "m_6793_"), "()J");
    }

    static jlong getTime(const jobject& obj) {
                
       const auto methodID = methodID_getTime();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTimeOfDay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getDayTime", "method_217", "getTimeOfDay", "m_6792_"), "()J");
    }

    static jlong getTimeOfDay(const jobject& obj) {
                
       const auto methodID = methodID_getTimeOfDay();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_isThundering() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "isThundering", "method_203", "isThundering", "m_6534_"), "()Z");
    }

    static jboolean isThundering(const jobject& obj) {
                
       const auto methodID = methodID_isThundering();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isRaining() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isRaining", "method_156", "isRaining", "m_6533_"), "()Z");
    }

    static jboolean isRaining(const jobject& obj) {
                
       const auto methodID = methodID_isRaining();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setRaining() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setRaining", "method_157", "setRaining", "m_5565_"), "(Z)V");
    }

    static void setRaining(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setRaining();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isHardcore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "isHardcore", "method_152", "isHardcore", "m_5466_"), "()Z");
    }

    static jboolean isHardcore(const jobject& obj) {
                
       const auto methodID = methodID_isHardcore();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGameRules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getGameRules", "method_146", "getGameRules", "m_5470_"), "()Ldcs;");
    }

    static jobject getGameRules(const jobject& obj) {
                
       const auto methodID = methodID_getGameRules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getDifficulty", "method_207", "getDifficulty", "m_5472_"), "()Lbqo;");
    }

    static jobject getDifficulty(const jobject& obj) {
                
       const auto methodID = methodID_getDifficulty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDifficultyLocked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "isDifficultyLocked", "method_197", "isDifficultyLocked", "m_5474_"), "()Z");
    }

    static jboolean isDifficultyLocked(const jobject& obj) {
                
       const auto methodID = methodID_isDifficultyLocked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_populateCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillCrashReportCategory", "method_151", "populateCrashReport", "m_142471_"), "(Lp;Ldcy;)V");
    }

    static void populateCrashReport(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_populateCrashReport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_WORLD_WORLDPROPERTIES_HPP