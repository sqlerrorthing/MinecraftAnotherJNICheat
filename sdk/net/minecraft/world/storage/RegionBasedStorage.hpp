// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_STORAGE_REGIONBASEDSTORAGE_HPP
#define NET_MINECRAFT_WORLD_STORAGE_REGIONBASEDSTORAGE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.storage.RegionBasedStorage
 * Remapped: dwq
 */
namespace RegionBasedStorage {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dwq", "net/minecraft/world/level/chunk/storage/RegionFileStorage", "net/minecraft/class_2867", "net/minecraft/world/storage/RegionBasedStorage", "net/minecraft/src/C_2169_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.world.storage.RegionBasedStorage#MCA_EXTENSION
    [[maybe_unused]] static jobject get_field_MCA_EXTENSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ANVIL_EXTENSION", "field_31425", "MCA_EXTENSION", "f_156615_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.world.storage.RegionBasedStorage#MCA_EXTENSION
    [[maybe_unused]] static void set_field_MCA_EXTENSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ANVIL_EXTENSION", "field_31425", "MCA_EXTENSION", "f_156615_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.storage.RegionBasedStorage#MAX_CACHE_SIZE
    [[maybe_unused]] static jint get_field_MAX_CACHE_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_CACHE_SIZE", "field_31426", "MAX_CACHE_SIZE", "f_156616_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.RegionBasedStorage#MAX_CACHE_SIZE
    [[maybe_unused]] static void set_field_MAX_CACHE_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_CACHE_SIZE", "field_31426", "MAX_CACHE_SIZE", "f_156616_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.storage.RegionBasedStorage#cachedRegionFiles
    static jobject get_field_cachedRegionFiles(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "regionCache", "field_17657", "cachedRegionFiles", "f_63699_"), "Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.RegionBasedStorage#cachedRegionFiles
    static void set_field_cachedRegionFiles(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "regionCache", "field_17657", "cachedRegionFiles", "f_63699_"), "Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.storage.RegionBasedStorage#storageKey
    static jobject get_field_storageKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "info", "field_49103", "storageKey", "f_316179_"), "Ldws;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.RegionBasedStorage#storageKey
    static void set_field_storageKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "info", "field_49103", "storageKey", "f_316179_"), "Ldws;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.storage.RegionBasedStorage#directory
    static jobject get_field_directory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "folder", "field_18690", "directory", "f_63700_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.RegionBasedStorage#directory
    static void set_field_directory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "folder", "field_18690", "directory", "f_63700_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.storage.RegionBasedStorage#dsync
    static jboolean get_field_dsync(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "sync", "field_23748", "dsync", "f_63701_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.RegionBasedStorage#dsync
    static void set_field_dsync(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "sync", "field_23748", "dsync", "f_63701_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getRegionFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRegionFile", "method_12440", "getRegionFile", "m_63711_"), "(Ldcd;)Ldwp;");
    }

    static jobject getRegionFile(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getRegionFile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTagAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "read", "method_17911", "getTagAt", "m_63706_"), "(Ldcd;)Lub;");
    }

    static jobject getTagAt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTagAt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_scanChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "scanChunk", "method_39802", "scanChunk", "m_196956_"), "(Ldcd;Luv;)V");
    }

    static void scanChunk(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_scanChunk();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_23726", "write", "m_63708_"), "(Ldcd;Lub;)V");
    }

    static void write(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_sync() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "flush", "method_26982", "sync", "m_63705_"), "()V");
    }

    static void sync(const jobject& obj) {
                
       const auto methodID = methodID_sync();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStorageKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "info", "method_61005", "getStorageKey", "m_339572_"), "()Ldws;");
    }

    static jobject getStorageKey(const jobject& obj) {
                
       const auto methodID = methodID_getStorageKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_STORAGE_REGIONBASEDSTORAGE_HPP