// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_STORAGE_RECREATIONSTORAGE_HPP
#define NET_MINECRAFT_WORLD_STORAGE_RECREATIONSTORAGE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.storage.RecreationStorage
 * Remapped: dwn
 */
namespace RecreationStorage {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dwn", "net/minecraft/world/level/chunk/storage/RecreatingSimpleRegionStorage", "net/minecraft/class_9171", "net/minecraft/world/storage/RecreationStorage", "net/minecraft/src/C_313471_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.world.storage.RecreationStorage#recreationWorker
    static jobject get_field_recreationWorker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "writeWorker", "field_48750", "recreationWorker", "f_314431_"), "Ldwl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.RecreationStorage#recreationWorker
    static void set_field_recreationWorker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "writeWorker", "field_48750", "recreationWorker", "f_314431_"), "Ldwl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.storage.RecreationStorage#outputDirectory
    static jobject get_field_outputDirectory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "writeFolder", "field_48751", "outputDirectory", "f_315300_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.RecreationStorage#outputDirectory
    static void set_field_outputDirectory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "writeFolder", "field_48751", "outputDirectory", "f_315300_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_56565", "set", "m_321640_"), "(Ldcd;Lub;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject set(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_set();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_STORAGE_RECREATIONSTORAGE_HPP