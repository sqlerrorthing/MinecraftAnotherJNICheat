// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_WORLD_STORAGE_SERIALIZINGREGIONBASEDSTORAGE_HPP
#define NET_MINECRAFT_WORLD_STORAGE_SERIALIZINGREGIONBASEDSTORAGE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.world.storage.SerializingRegionBasedStorage
 * Remapped: dwt
 */
namespace SerializingRegionBasedStorage {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dwt", "net/minecraft/world/level/chunk/storage/SectionStorage", "net/minecraft/class_4180", "net/minecraft/world/storage/SerializingRegionBasedStorage", "net/minecraft/src/C_2174_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.world.storage.SerializingRegionBasedStorage#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_18691", "LOGGER", "f_63772_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.SerializingRegionBasedStorage#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_18691", "LOGGER", "f_63772_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.world.storage.SerializingRegionBasedStorage#SECTIONS_KEY
    [[maybe_unused]] static jobject get_field_SECTIONS_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SECTIONS_TAG", "field_31427", "SECTIONS_KEY", "f_156617_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.SerializingRegionBasedStorage#SECTIONS_KEY
    [[maybe_unused]] static void set_field_SECTIONS_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SECTIONS_TAG", "field_31427", "SECTIONS_KEY", "f_156617_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.world.storage.SerializingRegionBasedStorage#storageAccess
    static jobject get_field_storageAccess(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "simpleRegionStorage", "field_48759", "storageAccess", "f_314111_"), "Ldwu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.SerializingRegionBasedStorage#storageAccess
    static void set_field_storageAccess(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "simpleRegionStorage", "field_48759", "storageAccess", "f_314111_"), "Ldwu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.storage.SerializingRegionBasedStorage#loadedElements
    static jobject get_field_loadedElements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "storage", "field_18692", "loadedElements", "f_63774_"), "Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.SerializingRegionBasedStorage#loadedElements
    static void set_field_loadedElements(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "storage", "field_18692", "loadedElements", "f_63774_"), "Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.storage.SerializingRegionBasedStorage#unsavedElements
    static jobject get_field_unsavedElements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "dirty", "field_18693", "unsavedElements", "f_63775_"), "Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.SerializingRegionBasedStorage#unsavedElements
    static void set_field_unsavedElements(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "dirty", "field_18693", "unsavedElements", "f_63775_"), "Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.storage.SerializingRegionBasedStorage#codecFactory
    static jobject get_field_codecFactory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "codec", "field_24750", "codecFactory", "f_63776_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.SerializingRegionBasedStorage#codecFactory
    static void set_field_codecFactory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "codec", "field_24750", "codecFactory", "f_63776_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.storage.SerializingRegionBasedStorage#factory
    static jobject get_field_factory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "factory", "field_18695", "factory", "f_63777_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.SerializingRegionBasedStorage#factory
    static void set_field_factory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "factory", "field_18695", "factory", "f_63777_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.storage.SerializingRegionBasedStorage#registryManager
    static jobject get_field_registryManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "registryAccess", "field_39315", "registryManager", "f_223507_"), "Lka;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.SerializingRegionBasedStorage#registryManager
    static void set_field_registryManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "registryAccess", "field_39315", "registryManager", "f_223507_"), "Lka;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.world.storage.SerializingRegionBasedStorage#errorHandler
    static jobject get_field_errorHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "errorReporter", "field_52227", "errorHandler", "f_337344_"), "Ldwg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.world.storage.SerializingRegionBasedStorage#errorHandler
    static void set_field_errorHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "errorReporter", "field_52227", "errorHandler", "f_337344_"), "Ldwg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.world.storage.SerializingRegionBasedStorage#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "levelHeightAccessor", "field_27240", "world", "f_156618_"), "Ldcy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.world.storage.SerializingRegionBasedStorage#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "levelHeightAccessor", "field_27240", "world", "f_156618_"), "Ldcy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_19290", "tick", "m_6202_"), "(Ljava/util/function/BooleanSupplier;)V");
    }

    static void tick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasUnsavedElements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasWork", "method_40020", "hasUnsavedElements", "m_202164_"), "()Z");
    }

    static jboolean hasUnsavedElements(const jobject& obj) {
                
       const auto methodID = methodID_hasUnsavedElements();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getIfLoaded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "get", "method_19293", "getIfLoaded", "m_63818_"), "(J)Ljava/util/Optional;");
    }

    static jobject getIfLoaded(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_getIfLoaded();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getOrLoad", "method_19294", "get", "m_63823_"), "(J)Ljava/util/Optional;");
    }

    static jobject get(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPosInvalid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "outsideStoredRange", "method_19292", "isPosInvalid", "m_156630_"), "(J)Z");
    }

    static jboolean isPosInvalid(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_isPosInvalid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOrCreate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getOrCreate", "method_19295", "getOrCreate", "m_63827_"), "(J)Ljava/lang/Object;");
    }

    static jobject getOrCreate(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_getOrCreate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_loadDataAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "readColumn", "method_19289", "loadDataAt", "m_63814_"), "(Ldcd;)V");
    }

    static void loadDataAt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadDataAt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_loadNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "tryRead", "method_20621", "loadNbt", "m_223532_"), "(Ldcd;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject loadNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readColumn", "method_20368", "update", "m_63801_"), "(Ldcd;Lakp;Lub;)V");
    }

    static void update(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_update();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_save() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "writeColumn", "method_20370", "save", "m_63825_"), "(Ldcd;)V");
    }

    static void save(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_save();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_serialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeColumn", "method_20367", "serialize", "m_63798_"), "(Ldcd;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject serialize(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_serialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_chunkSectionPosAsLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getKey", "method_33637", "chunkSectionPosAsLong", "m_156627_"), "(Ldcd;I)J");
    }

    static jlong chunkSectionPosAsLong(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_chunkSectionPosAsLong();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onLoad() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onSectionLoad", "method_19291", "onLoad", "m_5839_"), "(J)V");
    }

    static void onLoad(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_onLoad();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDirty", "method_19288", "onUpdate", "m_5838_"), "(J)V");
    }

    static void onUpdate(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_onUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDataVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getVersion", "method_20369", "getDataVersion", "m_63805_"), "(Lcom/mojang/serialization/Dynamic;)I");
    }

    static jint getDataVersion(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getDataVersion();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_saveChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "flush", "method_20436", "saveChunk", "m_63796_"), "(Ldcd;)V");
    }

    static void saveChunk(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_saveChunk();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_WORLD_STORAGE_SERIALIZINGREGIONBASEDSTORAGE_HPP