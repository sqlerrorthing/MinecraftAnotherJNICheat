// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SHAREDCONSTANTS_HPP
#define NET_MINECRAFT_SHAREDCONSTANTS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.SharedConstants
 * Remapped: ab
 */
namespace SharedConstants {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ab", "net/minecraft/SharedConstants", "net/minecraft/class_155", "net/minecraft/SharedConstants", "net/minecraft/src/C_5285_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.SharedConstants#IS_DEVELOPMENT_VERSION
    [[maybe_unused]] static jboolean get_field_IS_DEVELOPMENT_VERSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SNAPSHOT", "field_29709", "IS_DEVELOPMENT_VERSION", "f_142912_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#IS_DEVELOPMENT_VERSION
    [[maybe_unused]] static void set_field_IS_DEVELOPMENT_VERSION(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SNAPSHOT", "field_29709", "IS_DEVELOPMENT_VERSION", "f_142912_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#WORLD_VERSION
    [[maybe_unused]] static jint get_field_WORLD_VERSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WORLD_VERSION", "field_29732", "WORLD_VERSION", "f_142951_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#WORLD_VERSION
    [[maybe_unused]] static void set_field_WORLD_VERSION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WORLD_VERSION", "field_29732", "WORLD_VERSION", "f_142951_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#CURRENT_SERIES
    [[maybe_unused]] static jobject get_field_CURRENT_SERIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SERIES", "field_34373", "CURRENT_SERIES", "f_183702_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#CURRENT_SERIES
    [[maybe_unused]] static void set_field_CURRENT_SERIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SERIES", "field_34373", "CURRENT_SERIES", "f_183702_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#VERSION_NAME
    [[maybe_unused]] static jobject get_field_VERSION_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "VERSION_STRING", "field_29733", "VERSION_NAME", "f_142952_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#VERSION_NAME
    [[maybe_unused]] static void set_field_VERSION_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "VERSION_STRING", "field_29733", "VERSION_NAME", "f_142952_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#RELEASE_TARGET_PROTOCOL_VERSION
    [[maybe_unused]] static jint get_field_RELEASE_TARGET_PROTOCOL_VERSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "RELEASE_NETWORK_PROTOCOL_VERSION", "field_29735", "RELEASE_TARGET_PROTOCOL_VERSION", "f_142954_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#RELEASE_TARGET_PROTOCOL_VERSION
    [[maybe_unused]] static void set_field_RELEASE_TARGET_PROTOCOL_VERSION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "RELEASE_NETWORK_PROTOCOL_VERSION", "field_29735", "RELEASE_TARGET_PROTOCOL_VERSION", "f_142954_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29736
    [[maybe_unused]] static jint get_field_field_29736() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SNAPSHOT_NETWORK_PROTOCOL_VERSION", "field_29736", "field_29736", "f_142955_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29736
    [[maybe_unused]] static void set_field_field_29736(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SNAPSHOT_NETWORK_PROTOCOL_VERSION", "field_29736", "field_29736", "f_142955_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#SNBT_TOO_OLD_THRESHOLD
    [[maybe_unused]] static jint get_field_SNBT_TOO_OLD_THRESHOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SNBT_NAG_VERSION", "field_29737", "SNBT_TOO_OLD_THRESHOLD", "f_142956_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#SNBT_TOO_OLD_THRESHOLD
    [[maybe_unused]] static void set_field_SNBT_TOO_OLD_THRESHOLD(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SNBT_NAG_VERSION", "field_29737", "SNBT_TOO_OLD_THRESHOLD", "f_142956_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.SharedConstants#field_29708
    [[maybe_unused]] static jint get_field_field_29708() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "SNAPSHOT_PROTOCOL_BIT", "field_29708", "field_29708", "f_142925_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.SharedConstants#field_29708
    [[maybe_unused]] static void set_field_field_29708(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "SNAPSHOT_PROTOCOL_BIT", "field_29708", "field_29708", "f_142925_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#CRASH_ON_UNCAUGHT_THREAD_EXCEPTION
    [[maybe_unused]] static jboolean get_field_CRASH_ON_UNCAUGHT_THREAD_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CRASH_EAGERLY", "field_36325", "CRASH_ON_UNCAUGHT_THREAD_EXCEPTION", "f_316174_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#CRASH_ON_UNCAUGHT_THREAD_EXCEPTION
    [[maybe_unused]] static void set_field_CRASH_ON_UNCAUGHT_THREAD_EXCEPTION(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CRASH_EAGERLY", "field_36325", "CRASH_ON_UNCAUGHT_THREAD_EXCEPTION", "f_316174_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#RESOURCE_PACK_VERSION
    [[maybe_unused]] static jint get_field_RESOURCE_PACK_VERSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "RESOURCE_PACK_FORMAT", "field_29738", "RESOURCE_PACK_VERSION", "f_142957_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#RESOURCE_PACK_VERSION
    [[maybe_unused]] static void set_field_RESOURCE_PACK_VERSION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "RESOURCE_PACK_FORMAT", "field_29738", "RESOURCE_PACK_VERSION", "f_142957_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#DATA_PACK_VERSION
    [[maybe_unused]] static jint get_field_DATA_PACK_VERSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DATA_PACK_FORMAT", "field_29739", "DATA_PACK_VERSION", "f_142958_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#DATA_PACK_VERSION
    [[maybe_unused]] static void set_field_DATA_PACK_VERSION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DATA_PACK_FORMAT", "field_29739", "DATA_PACK_VERSION", "f_142958_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_39963
    [[maybe_unused]] static jint get_field_field_39963() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LANGUAGE_FORMAT", "field_39963", "field_39963", "f_244360_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_39963
    [[maybe_unused]] static void set_field_field_39963(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LANGUAGE_FORMAT", "field_39963", "field_39963", "f_244360_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_39964
    [[maybe_unused]] static jint get_field_field_39964() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "REPORT_FORMAT_VERSION", "field_39964", "field_39964", "f_243916_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_39964
    [[maybe_unused]] static void set_field_field_39964(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "REPORT_FORMAT_VERSION", "field_39964", "field_39964", "f_243916_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#DATA_VERSION_KEY
    [[maybe_unused]] static jobject get_field_DATA_VERSION_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "DATA_VERSION_TAG", "field_29740", "DATA_VERSION_KEY", "f_142959_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#DATA_VERSION_KEY
    [[maybe_unused]] static void set_field_DATA_VERSION_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "DATA_VERSION_TAG", "field_29740", "DATA_VERSION_KEY", "f_142959_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29745
    [[maybe_unused]] static jboolean get_field_field_29745() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "FIX_TNT_DUPE", "field_29745", "field_29745", "f_142967_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29745
    [[maybe_unused]] static void set_field_field_29745(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "FIX_TNT_DUPE", "field_29745", "field_29745", "f_142967_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_33851
    [[maybe_unused]] static jboolean get_field_field_33851() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "FIX_SAND_DUPE", "field_33851", "field_33851", "f_142968_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_33851
    [[maybe_unused]] static void set_field_field_33851(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "FIX_SAND_DUPE", "field_33851", "field_33851", "f_142968_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29747
    [[maybe_unused]] static jboolean get_field_field_29747() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "USE_DEBUG_FEATURES", "field_29747", "field_29747", "f_142970_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29747
    [[maybe_unused]] static void set_field_field_29747(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "USE_DEBUG_FEATURES", "field_29747", "field_29747", "f_142970_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_35006
    [[maybe_unused]] static jboolean get_field_field_35006() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DEBUG_OPEN_INCOMPATIBLE_WORLDS", "field_35006", "field_35006", "f_183703_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_35006
    [[maybe_unused]] static void set_field_field_35006(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DEBUG_OPEN_INCOMPATIBLE_WORLDS", "field_35006", "field_35006", "f_183703_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_35563
    [[maybe_unused]] static jboolean get_field_field_35563() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "DEBUG_ALLOW_LOW_SIM_DISTANCE", "field_35563", "field_35563", "f_183704_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_35563
    [[maybe_unused]] static void set_field_field_35563(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "DEBUG_ALLOW_LOW_SIM_DISTANCE", "field_35563", "field_35563", "f_183704_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29748
    [[maybe_unused]] static jboolean get_field_field_29748() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "DEBUG_HOTKEYS", "field_29748", "field_29748", "f_142972_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29748
    [[maybe_unused]] static void set_field_field_29748(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "DEBUG_HOTKEYS", "field_29748", "field_29748", "f_142972_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_33753
    [[maybe_unused]] static jboolean get_field_field_33753() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "DEBUG_UI_NARRATION", "field_33753", "field_33753", "f_142973_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_33753
    [[maybe_unused]] static void set_field_field_33753(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "DEBUG_UI_NARRATION", "field_33753", "field_33753", "f_142973_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29749
    [[maybe_unused]] static jboolean get_field_field_29749() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "DEBUG_RENDER", "field_29749", "field_29749", "f_142974_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29749
    [[maybe_unused]] static void set_field_field_29749(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "DEBUG_RENDER", "field_29749", "field_29749", "f_142974_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29750
    [[maybe_unused]] static jboolean get_field_field_29750() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "DEBUG_PATHFINDING", "field_29750", "field_29750", "f_142975_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29750
    [[maybe_unused]] static void set_field_field_29750(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "DEBUG_PATHFINDING", "field_29750", "field_29750", "f_142975_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29751
    [[maybe_unused]] static jboolean get_field_field_29751() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "DEBUG_WATER", "field_29751", "field_29751", "f_142886_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29751
    [[maybe_unused]] static void set_field_field_29751(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "DEBUG_WATER", "field_29751", "field_29751", "f_142886_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29752
    [[maybe_unused]] static jboolean get_field_field_29752() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "DEBUG_HEIGHTMAP", "field_29752", "field_29752", "f_142887_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29752
    [[maybe_unused]] static void set_field_field_29752(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "DEBUG_HEIGHTMAP", "field_29752", "field_29752", "f_142887_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29753
    [[maybe_unused]] static jboolean get_field_field_29753() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "DEBUG_COLLISION", "field_29753", "field_29753", "f_142888_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29753
    [[maybe_unused]] static void set_field_field_29753(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "DEBUG_COLLISION", "field_29753", "field_29753", "f_142888_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_52311
    [[maybe_unused]] static jboolean get_field_field_52311() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DEBUG_SHOW_LOCAL_SERVER_ENTITY_HIT_BOXES", "field_52311", "field_52311", "f_337421_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_52311
    [[maybe_unused]] static void set_field_field_52311(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DEBUG_SHOW_LOCAL_SERVER_ENTITY_HIT_BOXES", "field_52311", "field_52311", "f_337421_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_44779
    [[maybe_unused]] static jboolean get_field_field_44779() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "DEBUG_SUPPORT_BLOCKS", "field_44779", "field_44779", "f_285593_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_44779
    [[maybe_unused]] static void set_field_field_44779(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "DEBUG_SUPPORT_BLOCKS", "field_44779", "field_44779", "f_285593_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29754
    [[maybe_unused]] static jboolean get_field_field_29754() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DEBUG_SHAPES", "field_29754", "field_29754", "f_142889_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29754
    [[maybe_unused]] static void set_field_field_29754(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DEBUG_SHAPES", "field_29754", "field_29754", "f_142889_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29755
    [[maybe_unused]] static jboolean get_field_field_29755() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "DEBUG_NEIGHBORSUPDATE", "field_29755", "field_29755", "f_142890_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29755
    [[maybe_unused]] static void set_field_field_29755(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "DEBUG_NEIGHBORSUPDATE", "field_29755", "field_29755", "f_142890_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29756
    [[maybe_unused]] static jboolean get_field_field_29756() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "DEBUG_STRUCTURES", "field_29756", "field_29756", "f_142891_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29756
    [[maybe_unused]] static void set_field_field_29756(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "DEBUG_STRUCTURES", "field_29756", "field_29756", "f_142891_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29676
    [[maybe_unused]] static jboolean get_field_field_29676() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "DEBUG_LIGHT", "field_29676", "field_29676", "f_142892_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29676
    [[maybe_unused]] static void set_field_field_29676(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "DEBUG_LIGHT", "field_29676", "field_29676", "f_142892_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_44582
    [[maybe_unused]] static jboolean get_field_field_44582() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "DEBUG_SKY_LIGHT_SECTIONS", "field_44582", "field_44582", "f_279535_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_44582
    [[maybe_unused]] static void set_field_field_44582(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "DEBUG_SKY_LIGHT_SECTIONS", "field_44582", "field_44582", "f_279535_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29677
    [[maybe_unused]] static jboolean get_field_field_29677() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "DEBUG_WORLDGENATTEMPT", "field_29677", "field_29677", "f_142893_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29677
    [[maybe_unused]] static void set_field_field_29677(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "DEBUG_WORLDGENATTEMPT", "field_29677", "field_29677", "f_142893_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29678
    [[maybe_unused]] static jboolean get_field_field_29678() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "DEBUG_SOLID_FACE", "field_29678", "field_29678", "f_142894_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29678
    [[maybe_unused]] static void set_field_field_29678(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "DEBUG_SOLID_FACE", "field_29678", "field_29678", "f_142894_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29679
    [[maybe_unused]] static jboolean get_field_field_29679() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "DEBUG_CHUNKS", "field_29679", "field_29679", "f_142895_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29679
    [[maybe_unused]] static void set_field_field_29679(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "DEBUG_CHUNKS", "field_29679", "field_29679", "f_142895_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29680
    [[maybe_unused]] static jboolean get_field_field_29680() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "DEBUG_GAME_EVENT_LISTENERS", "field_29680", "field_29680", "f_142896_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29680
    [[maybe_unused]] static void set_field_field_29680(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "DEBUG_GAME_EVENT_LISTENERS", "field_29680", "field_29680", "f_142896_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29681
    [[maybe_unused]] static jboolean get_field_field_29681() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "DEBUG_DUMP_TEXTURE_ATLAS", "field_29681", "field_29681", "f_142897_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29681
    [[maybe_unused]] static void set_field_field_29681(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "DEBUG_DUMP_TEXTURE_ATLAS", "field_29681", "field_29681", "f_142897_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29682
    [[maybe_unused]] static jboolean get_field_field_29682() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES", "field_29682", "field_29682", "f_142898_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29682
    [[maybe_unused]] static void set_field_field_29682(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES", "field_29682", "field_29682", "f_142898_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29683
    [[maybe_unused]] static jboolean get_field_field_29683() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "DEBUG_STRUCTURE_EDIT_MODE", "field_29683", "field_29683", "f_142899_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29683
    [[maybe_unused]] static void set_field_field_29683(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "DEBUG_STRUCTURE_EDIT_MODE", "field_29683", "field_29683", "f_142899_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29684
    [[maybe_unused]] static jboolean get_field_field_29684() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "DEBUG_SAVE_STRUCTURES_AS_SNBT", "field_29684", "field_29684", "f_142900_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29684
    [[maybe_unused]] static void set_field_field_29684(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "DEBUG_SAVE_STRUCTURES_AS_SNBT", "field_29684", "field_29684", "f_142900_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29685
    [[maybe_unused]] static jboolean get_field_field_29685() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "DEBUG_SYNCHRONOUS_GL_LOGS", "field_29685", "field_29685", "f_142901_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29685
    [[maybe_unused]] static void set_field_field_29685(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "DEBUG_SYNCHRONOUS_GL_LOGS", "field_29685", "field_29685", "f_142901_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29686
    [[maybe_unused]] static jboolean get_field_field_29686() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "DEBUG_VERBOSE_SERVER_EVENTS", "field_29686", "field_29686", "f_142902_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29686
    [[maybe_unused]] static void set_field_field_29686(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "DEBUG_VERBOSE_SERVER_EVENTS", "field_29686", "field_29686", "f_142902_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29687
    [[maybe_unused]] static jboolean get_field_field_29687() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "DEBUG_NAMED_RUNNABLES", "field_29687", "field_29687", "f_142903_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29687
    [[maybe_unused]] static void set_field_field_29687(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "DEBUG_NAMED_RUNNABLES", "field_29687", "field_29687", "f_142903_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29688
    [[maybe_unused]] static jboolean get_field_field_29688() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "DEBUG_GOAL_SELECTOR", "field_29688", "field_29688", "f_142904_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29688
    [[maybe_unused]] static void set_field_field_29688(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "DEBUG_GOAL_SELECTOR", "field_29688", "field_29688", "f_142904_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29689
    [[maybe_unused]] static jboolean get_field_field_29689() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "DEBUG_VILLAGE_SECTIONS", "field_29689", "field_29689", "f_142905_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29689
    [[maybe_unused]] static void set_field_field_29689(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "DEBUG_VILLAGE_SECTIONS", "field_29689", "field_29689", "f_142905_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29690
    [[maybe_unused]] static jboolean get_field_field_29690() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "DEBUG_BRAIN", "field_29690", "field_29690", "f_142906_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29690
    [[maybe_unused]] static void set_field_field_29690(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "DEBUG_BRAIN", "field_29690", "field_29690", "f_142906_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29691
    [[maybe_unused]] static jboolean get_field_field_29691() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "DEBUG_BEES", "field_29691", "field_29691", "f_142907_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29691
    [[maybe_unused]] static void set_field_field_29691(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "DEBUG_BEES", "field_29691", "field_29691", "f_142907_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29692
    [[maybe_unused]] static jboolean get_field_field_29692() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "DEBUG_RAIDS", "field_29692", "field_29692", "f_142908_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29692
    [[maybe_unused]] static void set_field_field_29692(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "DEBUG_RAIDS", "field_29692", "field_29692", "f_142908_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29693
    [[maybe_unused]] static jboolean get_field_field_29693() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "DEBUG_BLOCK_BREAK", "field_29693", "field_29693", "f_142909_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29693
    [[maybe_unused]] static void set_field_field_29693(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "DEBUG_BLOCK_BREAK", "field_29693", "field_29693", "f_142909_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29694
    [[maybe_unused]] static jboolean get_field_field_29694() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "DEBUG_RESOURCE_LOAD_TIMES", "field_29694", "field_29694", "f_142910_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29694
    [[maybe_unused]] static void set_field_field_29694(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "DEBUG_RESOURCE_LOAD_TIMES", "field_29694", "field_29694", "f_142910_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29695
    [[maybe_unused]] static jboolean get_field_field_29695() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "DEBUG_MONITOR_TICK_TIMES", "field_29695", "field_29695", "f_142911_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29695
    [[maybe_unused]] static void set_field_field_29695(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "DEBUG_MONITOR_TICK_TIMES", "field_29695", "field_29695", "f_142911_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29696
    [[maybe_unused]] static jboolean get_field_field_29696() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN", "field_29696", "field_29696", "f_142926_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29696
    [[maybe_unused]] static void set_field_field_29696(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN", "field_29696", "field_29696", "f_142926_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29697
    [[maybe_unused]] static jboolean get_field_field_29697() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "DEBUG_DONT_SAVE_WORLD", "field_29697", "field_29697", "f_142927_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29697
    [[maybe_unused]] static void set_field_field_29697(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "DEBUG_DONT_SAVE_WORLD", "field_29697", "field_29697", "f_142927_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29698
    [[maybe_unused]] static jboolean get_field_field_29698() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "DEBUG_LARGE_DRIPSTONE", "field_29698", "field_29698", "f_142928_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29698
    [[maybe_unused]] static void set_field_field_29698(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "DEBUG_LARGE_DRIPSTONE", "field_29698", "field_29698", "f_142928_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29700
    [[maybe_unused]] static jboolean get_field_field_29700() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "DEBUG_CARVERS", "field_29700", "field_29700", "f_142930_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29700
    [[maybe_unused]] static void set_field_field_29700(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "DEBUG_CARVERS", "field_29700", "field_29700", "f_142930_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_33554
    [[maybe_unused]] static jboolean get_field_field_33554() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "DEBUG_ORE_VEINS", "field_33554", "field_33554", "f_142931_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_33554
    [[maybe_unused]] static void set_field_field_33554(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "DEBUG_ORE_VEINS", "field_33554", "field_33554", "f_142931_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_37273
    [[maybe_unused]] static jboolean get_field_field_37273() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "DEBUG_SCULK_CATALYST", "field_37273", "field_37273", "f_214356_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_37273
    [[maybe_unused]] static void set_field_field_37273(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "DEBUG_SCULK_CATALYST", "field_37273", "field_37273", "f_214356_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_39090
    [[maybe_unused]] static jboolean get_field_field_39090() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "DEBUG_BYPASS_REALMS_VERSION_CHECK", "field_39090", "field_39090", "f_214357_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_39090
    [[maybe_unused]] static void set_field_field_39090(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "DEBUG_BYPASS_REALMS_VERSION_CHECK", "field_39090", "field_39090", "f_214357_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_39460
    [[maybe_unused]] static jboolean get_field_field_39460() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "DEBUG_SOCIAL_INTERACTIONS", "field_39460", "field_39460", "f_238781_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_39460
    [[maybe_unused]] static void set_field_field_39460(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "DEBUG_SOCIAL_INTERACTIONS", "field_39460", "field_39460", "f_238781_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_39962
    [[maybe_unused]] static jboolean get_field_field_39962() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "DEBUG_VALIDATE_RESOURCE_PATH_CASE", "field_39962", "field_39962", "f_243691_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_39962
    [[maybe_unused]] static void set_field_field_39962(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "DEBUG_VALIDATE_RESOURCE_PATH_CASE", "field_39962", "field_39962", "f_243691_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_46154
    [[maybe_unused]] static jboolean get_field_field_46154() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "DEBUG_UNLOCK_ALL_TRADES", "field_46154", "field_46154", "f_290926_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_46154
    [[maybe_unused]] static void set_field_field_46154(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "DEBUG_UNLOCK_ALL_TRADES", "field_46154", "field_46154", "f_290926_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_47176
    [[maybe_unused]] static jboolean get_field_field_47176() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "DEBUG_BREEZE_MOB", "field_47176", "field_47176", "f_302736_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_47176
    [[maybe_unused]] static void set_field_field_47176(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "DEBUG_BREEZE_MOB", "field_47176", "field_47176", "f_302736_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_47177
    [[maybe_unused]] static jboolean get_field_field_47177() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "DEBUG_TRIAL_SPAWNER_DETECTS_SHEEP_AS_PLAYERS", "field_47177", "field_47177", "f_302621_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_47177
    [[maybe_unused]] static void set_field_field_47177(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "DEBUG_TRIAL_SPAWNER_DETECTS_SHEEP_AS_PLAYERS", "field_47177", "field_47177", "f_302621_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_48778
    [[maybe_unused]] static jboolean get_field_field_48778() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "DEBUG_VAULT_DETECTS_SHEEP_AS_PLAYERS", "field_48778", "field_48778", "f_317120_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_48778
    [[maybe_unused]] static void set_field_field_48778(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "DEBUG_VAULT_DETECTS_SHEEP_AS_PLAYERS", "field_48778", "field_48778", "f_317120_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_47178
    [[maybe_unused]] static jboolean get_field_field_47178() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "DEBUG_FORCE_ONBOARDING_SCREEN", "field_47178", "field_47178", "f_302604_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_47178
    [[maybe_unused]] static void set_field_field_47178(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "DEBUG_FORCE_ONBOARDING_SCREEN", "field_47178", "field_47178", "f_302604_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_34368
    [[maybe_unused]] static jboolean get_field_field_34368() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "DEBUG_IGNORE_LOCAL_MOB_CAP", "field_34368", "field_34368", "f_183695_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_34368
    [[maybe_unused]] static void set_field_field_34368(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "DEBUG_IGNORE_LOCAL_MOB_CAP", "field_34368", "field_34368", "f_183695_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29710
    [[maybe_unused]] static jboolean get_field_field_29710() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "DEBUG_DISABLE_LIQUID_SPREADING", "field_29710", "field_29710", "f_142933_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29710
    [[maybe_unused]] static void set_field_field_29710(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "DEBUG_DISABLE_LIQUID_SPREADING", "field_29710", "field_29710", "f_142933_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_34369
    [[maybe_unused]] static jboolean get_field_field_34369() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "DEBUG_AQUIFERS", "field_34369", "field_34369", "f_183696_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_34369
    [[maybe_unused]] static void set_field_field_34369(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "DEBUG_AQUIFERS", "field_34369", "field_34369", "f_183696_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_34370
    [[maybe_unused]] static jboolean get_field_field_34370() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING", "field_34370", "field_34370", "f_183697_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_34370
    [[maybe_unused]] static void set_field_field_34370(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING", "field_34370", "field_34370", "f_183697_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#DEBUG_BIOME_SOURCE
    [[maybe_unused]] static jboolean get_field_DEBUG_BIOME_SOURCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "debugGenerateSquareTerrainWithoutNoise", "field_34371", "DEBUG_BIOME_SOURCE", "f_183698_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#DEBUG_BIOME_SOURCE
    [[maybe_unused]] static void set_field_DEBUG_BIOME_SOURCE(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "debugGenerateSquareTerrainWithoutNoise", "field_34371", "DEBUG_BIOME_SOURCE", "f_183698_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#DEBUG_NOISE
    [[maybe_unused]] static jboolean get_field_DEBUG_NOISE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "debugGenerateStripedTerrainWithoutNoise", "field_34372", "DEBUG_NOISE", "f_183699_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#DEBUG_NOISE
    [[maybe_unused]] static void set_field_DEBUG_NOISE(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "debugGenerateStripedTerrainWithoutNoise", "field_34372", "DEBUG_NOISE", "f_183699_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29711
    [[maybe_unused]] static jboolean get_field_field_29711() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "DEBUG_ONLY_GENERATE_HALF_THE_WORLD", "field_29711", "field_29711", "f_142934_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29711
    [[maybe_unused]] static void set_field_field_29711(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "DEBUG_ONLY_GENERATE_HALF_THE_WORLD", "field_29711", "field_29711", "f_142934_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29712
    [[maybe_unused]] static jboolean get_field_field_29712() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "DEBUG_DISABLE_FLUID_GENERATION", "field_29712", "field_29712", "f_142935_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29712
    [[maybe_unused]] static void set_field_field_29712(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "DEBUG_DISABLE_FLUID_GENERATION", "field_29712", "field_29712", "f_142935_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29713
    [[maybe_unused]] static jboolean get_field_field_29713() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "DEBUG_DISABLE_AQUIFERS", "field_29713", "field_29713", "f_142936_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29713
    [[maybe_unused]] static void set_field_field_29713(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "DEBUG_DISABLE_AQUIFERS", "field_29713", "field_29713", "f_142936_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29715
    [[maybe_unused]] static jboolean get_field_field_29715() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "DEBUG_DISABLE_SURFACE", "field_29715", "field_29715", "f_142938_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29715
    [[maybe_unused]] static void set_field_field_29715(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "DEBUG_DISABLE_SURFACE", "field_29715", "field_29715", "f_142938_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29716
    [[maybe_unused]] static jboolean get_field_field_29716() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "DEBUG_DISABLE_CARVERS", "field_29716", "field_29716", "f_142939_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29716
    [[maybe_unused]] static void set_field_field_29716(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "DEBUG_DISABLE_CARVERS", "field_29716", "field_29716", "f_142939_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29717
    [[maybe_unused]] static jboolean get_field_field_29717() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "DEBUG_DISABLE_STRUCTURES", "field_29717", "field_29717", "f_142940_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29717
    [[maybe_unused]] static void set_field_field_29717(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "DEBUG_DISABLE_STRUCTURES", "field_29717", "field_29717", "f_142940_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29718
    [[maybe_unused]] static jboolean get_field_field_29718() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "DEBUG_DISABLE_FEATURES", "field_29718", "field_29718", "f_142941_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29718
    [[maybe_unused]] static void set_field_field_29718(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "DEBUG_DISABLE_FEATURES", "field_29718", "field_29718", "f_142941_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_33555
    [[maybe_unused]] static jboolean get_field_field_33555() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "DEBUG_DISABLE_ORE_VEINS", "field_33555", "field_33555", "f_142942_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_33555
    [[maybe_unused]] static void set_field_field_33555(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "DEBUG_DISABLE_ORE_VEINS", "field_33555", "field_33555", "f_142942_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_35438
    [[maybe_unused]] static jboolean get_field_field_35438() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "DEBUG_DISABLE_BLENDING", "field_35438", "field_35438", "f_183700_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_35438
    [[maybe_unused]] static void set_field_field_35438(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "DEBUG_DISABLE_BLENDING", "field_35438", "field_35438", "f_183700_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_35439
    [[maybe_unused]] static jboolean get_field_field_35439() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION", "field_35439", "field_35439", "f_183701_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_35439
    [[maybe_unused]] static void set_field_field_35439(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION", "field_35439", "field_35439", "f_183701_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#DEFAULT_PORT
    [[maybe_unused]] static jint get_field_DEFAULT_PORT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "DEFAULT_MINECRAFT_PORT", "field_29719", "DEFAULT_PORT", "f_142944_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#DEFAULT_PORT
    [[maybe_unused]] static void set_field_DEFAULT_PORT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "DEFAULT_MINECRAFT_PORT", "field_29719", "DEFAULT_PORT", "f_142944_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29720
    [[maybe_unused]] static jboolean get_field_field_29720() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "INGAME_DEBUG_OUTPUT", "field_29720", "field_29720", "f_142945_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29720
    [[maybe_unused]] static void set_field_field_29720(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "INGAME_DEBUG_OUTPUT", "field_29720", "field_29720", "f_142945_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29721
    [[maybe_unused]] static jboolean get_field_field_29721() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "DEBUG_SUBTITLES", "field_29721", "field_29721", "f_142946_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29721
    [[maybe_unused]] static void set_field_field_29721(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "DEBUG_SUBTITLES", "field_29721", "field_29721", "f_142946_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29722
    [[maybe_unused]] static jint get_field_field_29722() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "FAKE_MS_LATENCY", "field_29722", "field_29722", "f_142947_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29722
    [[maybe_unused]] static void set_field_field_29722(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "FAKE_MS_LATENCY", "field_29722", "field_29722", "f_142947_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29723
    [[maybe_unused]] static jint get_field_field_29723() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "FAKE_MS_JITTER", "field_29723", "field_29723", "f_142948_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29723
    [[maybe_unused]] static void set_field_field_29723(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "FAKE_MS_JITTER", "field_29723", "field_29723", "f_142948_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#RESOURCE_LEAK_DETECTOR_DISABLED
    [[maybe_unused]] static jobject get_field_RESOURCE_LEAK_DETECTOR_DISABLED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "NETTY_LEAK_DETECTION", "field_1124", "RESOURCE_LEAK_DETECTOR_DISABLED", "f_136180_"), "Lio/netty/util/ResourceLeakDetector$Level;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#RESOURCE_LEAK_DETECTOR_DISABLED
    [[maybe_unused]] static void set_field_RESOURCE_LEAK_DETECTOR_DISABLED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "NETTY_LEAK_DETECTION", "field_1124", "RESOURCE_LEAK_DETECTOR_DISABLED", "f_136180_"), "Lio/netty/util/ResourceLeakDetector$Level;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29724
    [[maybe_unused]] static jboolean get_field_field_29724() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "COMMAND_STACK_TRACES", "field_29724", "field_29724", "f_142949_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29724
    [[maybe_unused]] static void set_field_field_29724(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "COMMAND_STACK_TRACES", "field_29724", "field_29724", "f_142949_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29725
    [[maybe_unused]] static jboolean get_field_field_29725() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "DEBUG_WORLD_RECREATE", "field_29725", "field_29725", "f_142950_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29725
    [[maybe_unused]] static void set_field_field_29725(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "DEBUG_WORLD_RECREATE", "field_29725", "field_29725", "f_142950_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29726
    [[maybe_unused]] static jboolean get_field_field_29726() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "DEBUG_SHOW_SERVER_DEBUG_VALUES", "field_29726", "field_29726", "f_142913_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29726
    [[maybe_unused]] static void set_field_field_29726(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "DEBUG_SHOW_SERVER_DEBUG_VALUES", "field_29726", "field_29726", "f_142913_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_35652
    [[maybe_unused]] static jboolean get_field_field_35652() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "DEBUG_FEATURE_COUNT", "field_35652", "field_35652", "f_183694_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_35652
    [[maybe_unused]] static void set_field_field_35652(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "DEBUG_FEATURE_COUNT", "field_35652", "field_35652", "f_183694_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_39961
    [[maybe_unused]] static jboolean get_field_field_39961() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "DEBUG_RESOURCE_GENERATION_OVERRIDE", "field_39961", "field_39961", "f_243898_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_39961
    [[maybe_unused]] static void set_field_field_39961(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "DEBUG_RESOURCE_GENERATION_OVERRIDE", "field_39961", "field_39961", "f_243898_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_41533
    [[maybe_unused]] static jboolean get_field_field_41533() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "DEBUG_FORCE_TELEMETRY", "field_41533", "field_41533", "f_260664_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_41533
    [[maybe_unused]] static void set_field_field_41533(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "DEBUG_FORCE_TELEMETRY", "field_41533", "field_41533", "f_260664_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_44780
    [[maybe_unused]] static jboolean get_field_field_44780() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "DEBUG_DONT_SEND_TELEMETRY_TO_BACKEND", "field_44780", "field_44780", "f_285651_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_44780
    [[maybe_unused]] static void set_field_field_44780(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "DEBUG_DONT_SEND_TELEMETRY_TO_BACKEND", "field_44780", "field_44780", "f_285651_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_22251
    [[maybe_unused]] static jlong get_field_field_22251() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "MAXIMUM_TICK_TIME_NANOS", "field_22251", "field_22251", "f_136181_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_22251
    [[maybe_unused]] static void set_field_field_22251(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "MAXIMUM_TICK_TIME_NANOS", "field_22251", "field_22251", "f_136181_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_49016
    [[maybe_unused]] static jfloat get_field_field_49016() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "MAXIMUM_BLOCK_EXPLOSION_RESISTANCE", "field_49016", "field_49016", "f_317142_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_49016
    [[maybe_unused]] static void set_field_field_49016(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "MAXIMUM_BLOCK_EXPLOSION_RESISTANCE", "field_49016", "field_49016", "f_317142_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_44583
    [[maybe_unused]] static jboolean get_field_field_44583() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "USE_WORKFLOWS_HOOKS", "field_44583", "field_44583", "f_279621_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_44583
    [[maybe_unused]] static void set_field_field_44583(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "USE_WORKFLOWS_HOOKS", "field_44583", "field_44583", "f_279621_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_49773
    [[maybe_unused]] static jboolean get_field_field_49773() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "USE_DEVONLY", "field_49773", "field_49773", "f_315284_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_49773
    [[maybe_unused]] static void set_field_field_49773(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "USE_DEVONLY", "field_49773", "field_49773", "f_315284_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#useChoiceTypeRegistrations
    [[maybe_unused]] static jboolean get_field_useChoiceTypeRegistrations() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "CHECK_DATA_FIXER_SCHEMA", "field_25135", "useChoiceTypeRegistrations", "f_136182_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#useChoiceTypeRegistrations
    [[maybe_unused]] static void set_field_useChoiceTypeRegistrations(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "CHECK_DATA_FIXER_SCHEMA", "field_25135", "useChoiceTypeRegistrations", "f_136182_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#isDevelopment
    [[maybe_unused]] static jboolean get_field_isDevelopment() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "IS_RUNNING_IN_IDE", "field_1125", "isDevelopment", "f_136183_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#isDevelopment
    [[maybe_unused]] static void set_field_isDevelopment(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "IS_RUNNING_IN_IDE", "field_1125", "isDevelopment", "f_136183_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#CHUNK_WIDTH
    [[maybe_unused]] static jint get_field_CHUNK_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "WORLD_RESOLUTION", "field_29729", "CHUNK_WIDTH", "f_142916_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#CHUNK_WIDTH
    [[maybe_unused]] static void set_field_CHUNK_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "WORLD_RESOLUTION", "field_29729", "CHUNK_WIDTH", "f_142916_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#DEFAULT_WORLD_HEIGHT
    [[maybe_unused]] static jint get_field_DEFAULT_WORLD_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "MAX_CHAT_LENGTH", "field_29730", "DEFAULT_WORLD_HEIGHT", "f_142917_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#DEFAULT_WORLD_HEIGHT
    [[maybe_unused]] static void set_field_DEFAULT_WORLD_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "MAX_CHAT_LENGTH", "field_29730", "DEFAULT_WORLD_HEIGHT", "f_142917_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#COMMAND_MAX_LENGTH
    [[maybe_unused]] static jint get_field_COMMAND_MAX_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "MAX_USER_INPUT_COMMAND_LENGTH", "field_29731", "COMMAND_MAX_LENGTH", "f_316095_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#COMMAND_MAX_LENGTH
    [[maybe_unused]] static void set_field_COMMAND_MAX_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "MAX_USER_INPUT_COMMAND_LENGTH", "field_29731", "COMMAND_MAX_LENGTH", "f_316095_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#EXPANDED_MACRO_COMMAND_MAX_LENGTH
    [[maybe_unused]] static jint get_field_EXPANDED_MACRO_COMMAND_MAX_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "MAX_FUNCTION_COMMAND_LENGTH", "field_49017", "EXPANDED_MACRO_COMMAND_MAX_LENGTH", "f_314358_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#EXPANDED_MACRO_COMMAND_MAX_LENGTH
    [[maybe_unused]] static void set_field_EXPANDED_MACRO_COMMAND_MAX_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "MAX_FUNCTION_COMMAND_LENGTH", "field_49017", "EXPANDED_MACRO_COMMAND_MAX_LENGTH", "f_314358_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_49170
    [[maybe_unused]] static jint get_field_field_49170() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "MAX_PLAYER_NAME_LENGTH", "field_49170", "field_49170", "f_315033_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_49170
    [[maybe_unused]] static void set_field_field_49170(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "MAX_PLAYER_NAME_LENGTH", "field_49170", "field_49170", "f_315033_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_38052
    [[maybe_unused]] static jint get_field_field_38052() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "MAX_CHAINED_NEIGHBOR_UPDATES", "field_38052", "field_38052", "f_214355_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_38052
    [[maybe_unused]] static void set_field_field_38052(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "MAX_CHAINED_NEIGHBOR_UPDATES", "field_38052", "field_38052", "f_214355_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_39898
    [[maybe_unused]] static jint get_field_field_39898() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "MAX_RENDER_DISTANCE", "field_39898", "field_39898", "f_242499_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_39898
    [[maybe_unused]] static void set_field_field_39898(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "MAX_RENDER_DISTANCE", "field_39898", "field_39898", "f_242499_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#INVALID_CHARS_LEVEL_NAME
    [[maybe_unused]] static jchar get_field_INVALID_CHARS_LEVEL_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "ILLEGAL_FILE_CHARACTERS", "field_1126", "INVALID_CHARS_LEVEL_NAME", "f_136184_"), "[C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#INVALID_CHARS_LEVEL_NAME
    [[maybe_unused]] static void set_field_INVALID_CHARS_LEVEL_NAME(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "ILLEGAL_FILE_CHARACTERS", "field_1126", "INVALID_CHARS_LEVEL_NAME", "f_136184_"), "[C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#TICKS_PER_SECOND
    [[maybe_unused]] static jint get_field_TICKS_PER_SECOND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "TICKS_PER_SECOND", "field_29702", "TICKS_PER_SECOND", "f_142919_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#TICKS_PER_SECOND
    [[maybe_unused]] static void set_field_TICKS_PER_SECOND(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "TICKS_PER_SECOND", "field_29702", "TICKS_PER_SECOND", "f_142919_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_44973
    [[maybe_unused]] static jint get_field_field_44973() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "MILLIS_PER_TICK", "field_44973", "field_44973", "f_291376_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_44973
    [[maybe_unused]] static void set_field_field_44973(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "MILLIS_PER_TICK", "field_44973", "field_44973", "f_291376_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#TICKS_PER_MINUTE
    [[maybe_unused]] static jint get_field_TICKS_PER_MINUTE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "TICKS_PER_MINUTE", "field_29703", "TICKS_PER_MINUTE", "f_142920_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#TICKS_PER_MINUTE
    [[maybe_unused]] static void set_field_TICKS_PER_MINUTE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "TICKS_PER_MINUTE", "field_29703", "TICKS_PER_MINUTE", "f_142920_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#TICKS_PER_IN_GAME_DAY
    [[maybe_unused]] static jint get_field_TICKS_PER_IN_GAME_DAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "TICKS_PER_GAME_DAY", "field_29704", "TICKS_PER_IN_GAME_DAY", "f_142921_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#TICKS_PER_IN_GAME_DAY
    [[maybe_unused]] static void set_field_TICKS_PER_IN_GAME_DAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "TICKS_PER_GAME_DAY", "field_29704", "TICKS_PER_IN_GAME_DAY", "f_142921_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29705
    [[maybe_unused]] static jfloat get_field_field_29705() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK", "field_29705", "field_29705", "f_142922_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29705
    [[maybe_unused]] static void set_field_field_29705(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK", "field_29705", "field_29705", "f_142922_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29706
    [[maybe_unused]] static jfloat get_field_field_29706() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE", "field_29706", "field_29706", "f_142923_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29706
    [[maybe_unused]] static void set_field_field_29706(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE", "field_29706", "field_29706", "f_142923_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_29707
    [[maybe_unused]] static jfloat get_field_field_29707() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY", "field_29707", "field_29707", "f_142924_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_29707
    [[maybe_unused]] static void set_field_field_29707(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY", "field_29707", "field_29707", "f_142924_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.SharedConstants#field_44922
    [[maybe_unused]] static jint get_field_field_44922() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "WORLD_ICON_SIZE", "field_44922", "field_44922", "f_289041_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.SharedConstants#field_44922
    [[maybe_unused]] static void set_field_field_44922(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "WORLD_ICON_SIZE", "field_44922", "field_44922", "f_289041_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.SharedConstants#gameVersion
    [[maybe_unused]] static jobject get_field_gameVersion() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "CURRENT_VERSION", "field_16742", "gameVersion", "f_136185_"), "Lae;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.SharedConstants#gameVersion
    [[maybe_unused]] static void set_field_gameVersion(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "CURRENT_VERSION", "field_16742", "gameVersion", "f_136185_"), "Lae;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_setGameVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setVersion", "method_34872", "setGameVersion", "m_183705_"), "(Lae;)V");
    }

    static void setGameVersion(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_setGameVersion();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createGameVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tryDetectVersion", "method_36208", "createGameVersion", "m_142977_"), "()V");
    }

    static void createGameVersion() {
       const auto clazz = self();
       const auto methodID = methodID_createGameVersion();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getGameVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getCurrentVersion", "method_16673", "getGameVersion", "m_183709_"), "()Lae;");
    }

    static jobject getGameVersion() {
       const auto clazz = self();
       const auto methodID = methodID_getGameVersion();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getProtocolVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getProtocolVersion", "method_31372", "getProtocolVersion", "m_136192_"), "()I");
    }

    static jint getProtocolVersion() {
       const auto clazz = self();
       const auto methodID = methodID_getProtocolVersion();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID_isOutsideGenerationArea() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "debugVoidTerrain", "method_37896", "isOutsideGenerationArea", "m_183707_"), "(Ldcd;)Z");
    }

    static jboolean isOutsideGenerationArea(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isOutsideGenerationArea();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SHAREDCONSTANTS_HPP