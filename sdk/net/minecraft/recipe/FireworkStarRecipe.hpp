// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RECIPE_FIREWORKSTARRECIPE_HPP
#define NET_MINECRAFT_RECIPE_FIREWORKSTARRECIPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.recipe.FireworkStarRecipe
 * Remapped: cyv
 */
namespace FireworkStarRecipe {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cyv", "net/minecraft/world/item/crafting/FireworkStarRecipe", "net/minecraft/class_1853", "net/minecraft/recipe/FireworkStarRecipe", "net/minecraft/src/C_1461_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.recipe.FireworkStarRecipe#TYPE_MODIFIER
    [[maybe_unused]] static jobject get_field_TYPE_MODIFIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SHAPE_INGREDIENT", "field_9011", "TYPE_MODIFIER", "f_43876_"), "Lcyw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.recipe.FireworkStarRecipe#TYPE_MODIFIER
    [[maybe_unused]] static void set_field_TYPE_MODIFIER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SHAPE_INGREDIENT", "field_9011", "TYPE_MODIFIER", "f_43876_"), "Lcyw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.recipe.FireworkStarRecipe#TRAIL_MODIFIER
    [[maybe_unused]] static jobject get_field_TRAIL_MODIFIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TRAIL_INGREDIENT", "field_9010", "TRAIL_MODIFIER", "f_43877_"), "Lcyw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.recipe.FireworkStarRecipe#TRAIL_MODIFIER
    [[maybe_unused]] static void set_field_TRAIL_MODIFIER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TRAIL_INGREDIENT", "field_9010", "TRAIL_MODIFIER", "f_43877_"), "Lcyw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.recipe.FireworkStarRecipe#FLICKER_MODIFIER
    [[maybe_unused]] static jobject get_field_FLICKER_MODIFIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TWINKLE_INGREDIENT", "field_9014", "FLICKER_MODIFIER", "f_316738_"), "Lcyw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.recipe.FireworkStarRecipe#FLICKER_MODIFIER
    [[maybe_unused]] static void set_field_FLICKER_MODIFIER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TWINKLE_INGREDIENT", "field_9014", "FLICKER_MODIFIER", "f_316738_"), "Lcyw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.recipe.FireworkStarRecipe#TYPE_MODIFIER_MAP
    [[maybe_unused]] static jobject get_field_TYPE_MODIFIER_MAP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SHAPE_BY_ITEM", "field_9013", "TYPE_MODIFIER_MAP", "f_43879_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.recipe.FireworkStarRecipe#TYPE_MODIFIER_MAP
    [[maybe_unused]] static void set_field_TYPE_MODIFIER_MAP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SHAPE_BY_ITEM", "field_9013", "TYPE_MODIFIER_MAP", "f_43879_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.recipe.FireworkStarRecipe#GUNPOWDER
    [[maybe_unused]] static jobject get_field_GUNPOWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "GUNPOWDER_INGREDIENT", "field_9012", "GUNPOWDER", "f_43880_"), "Lcyw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.recipe.FireworkStarRecipe#GUNPOWDER
    [[maybe_unused]] static void set_field_GUNPOWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "GUNPOWDER_INGREDIENT", "field_9012", "GUNPOWDER", "f_43880_"), "Lcyw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_matches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "matches", "method_17713", "matches", "m_5818_"), "(Lcyp;Ldcw;)Z");
    }

    static jboolean matches(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_matches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_craft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "assemble", "method_17712", "craft", "m_5874_"), "(Lcyp;Ljo$a;)Lcuq;");
    }

    static jobject craft(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_craft();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_fits() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canCraftInDimensions", "method_8113", "fits", "m_8004_"), "(II)Z");
    }

    static jboolean fits(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_fits();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getResult() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getResultItem", "method_8110", "getResult", "m_8043_"), "(Ljo$a;)Lcuq;");
    }

    static jobject getResult(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getResult();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSerializer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("at_", "getSerializer", "method_8119", "getSerializer", "m_7707_"), "()Lcze;");
    }

    static jobject getSerializer(const jobject& obj) {
                
       const auto methodID = methodID_getSerializer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RECIPE_FIREWORKSTARRECIPE_HPP