// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RECIPE_RECIPEMATCHER_HPP
#define NET_MINECRAFT_RECIPE_RECIPEMATCHER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.recipe.RecipeMatcher
 * Remapped: cnb
 */
namespace RecipeMatcher {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cnb", "net/minecraft/world/entity/player/StackedContents", "net/minecraft/class_1662", "net/minecraft/recipe/RecipeMatcher", "net/minecraft/src/C_1145_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.recipe.RecipeMatcher#field_30653
    [[maybe_unused]] static jint get_field_field_30653() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EMPTY", "field_30653", "field_30653", "f_150116_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.recipe.RecipeMatcher#field_30653
    [[maybe_unused]] static void set_field_field_30653(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EMPTY", "field_30653", "field_30653", "f_150116_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.recipe.RecipeMatcher#inputs
    static jobject get_field_inputs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "contents", "field_7550", "inputs", "f_36451_"), "Lit/unimi/dsi/fastutil/ints/Int2IntMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.recipe.RecipeMatcher#inputs
    static void set_field_inputs(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "contents", "field_7550", "inputs", "f_36451_"), "Lit/unimi/dsi/fastutil/ints/Int2IntMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addUnenchantedInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "accountSimpleStack", "method_7404", "addUnenchantedInput", "m_36466_"), "(Lcuq;)V");
    }

    static void addUnenchantedInput(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addUnenchantedInput();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "accountStack", "method_7400", "addInput", "m_36491_"), "(Lcuq;)V");
    }

    static void addInput(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addInput();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__addInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "accountStack", "method_20478", "addInput", "m_36468_"), "(Lcuq;I)V");
    }

    static void _addInput(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__addInput();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getItemId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getStackingIndex", "method_7408", "getItemId", "m_36496_"), "(Lcuq;)I");
    }

    static jint getItemId(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getItemId();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "has", "method_7410", "contains", "m_36482_"), "(I)Z");
    }

    static jboolean contains(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_consume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "take", "method_7411", "consume", "m_36456_"), "(II)I");
    }

    static jint consume(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_consume();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___addInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "put", "method_7401", "addInput", "m_36484_"), "(II)V");
    }

    static void __addInput(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID___addInput();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_match() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canCraft", "method_7402", "match", "m_36475_"), "(Lcyz;Lit/unimi/dsi/fastutil/ints/IntList;)Z");
    }

    static jboolean match(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_match();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__match() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canCraft", "method_7406", "match", "m_36478_"), "(Lcyz;Lit/unimi/dsi/fastutil/ints/IntList;I)Z");
    }

    static jboolean _match(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID__match();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_countCrafts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBiggestCraftableStack", "method_7407", "countCrafts", "m_36493_"), "(Lczb;Lit/unimi/dsi/fastutil/ints/IntList;)I");
    }

    static jint countCrafts(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_countCrafts();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__countCrafts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBiggestCraftableStack", "method_7403", "countCrafts", "m_36471_"), "(Lczb;ILit/unimi/dsi/fastutil/ints/IntList;)I");
    }

    static jint _countCrafts(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__countCrafts();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getStackFromId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromStackingIndex", "method_7405", "getStackFromId", "m_36454_"), "(I)Lcuq;");
    }

    static jobject getStackFromId(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getStackFromId();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clear", "method_7409", "clear", "m_36453_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RECIPE_RECIPEMATCHER_HPP