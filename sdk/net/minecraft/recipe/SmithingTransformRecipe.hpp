// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RECIPE_SMITHINGTRANSFORMRECIPE_HPP
#define NET_MINECRAFT_RECIPE_SMITHINGTRANSFORMRECIPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.recipe.SmithingTransformRecipe
 * Remapped: czt
 */
namespace SmithingTransformRecipe {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("czt", "net/minecraft/world/item/crafting/SmithingTransformRecipe", "net/minecraft/class_8060", "net/minecraft/recipe/SmithingTransformRecipe", "net/minecraft/src/C_265824_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.recipe.SmithingTransformRecipe#template
    static jobject get_field_template(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "template", "field_42030", "template", "f_265949_"), "Lcyw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.recipe.SmithingTransformRecipe#template
    static void set_field_template(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "template", "field_42030", "template", "f_265949_"), "Lcyw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.recipe.SmithingTransformRecipe#base
    static jobject get_field_base(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "base", "field_42031", "base", "f_265888_"), "Lcyw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.recipe.SmithingTransformRecipe#base
    static void set_field_base(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "base", "field_42031", "base", "f_265888_"), "Lcyw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.recipe.SmithingTransformRecipe#addition
    static jobject get_field_addition(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "addition", "field_42032", "addition", "f_265907_"), "Lcyw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.recipe.SmithingTransformRecipe#addition
    static void set_field_addition(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "addition", "field_42032", "addition", "f_265907_"), "Lcyw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.recipe.SmithingTransformRecipe#result
    static jobject get_field_result(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "result", "field_42033", "result", "f_266098_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.recipe.SmithingTransformRecipe#result
    static void set_field_result(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "result", "field_42033", "result", "f_266098_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_matches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "matches", "method_59999", "matches", "m_5818_"), "(Lczs;Ldcw;)Z");
    }

    static jboolean matches(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_matches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_craft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "assemble", "method_60000", "craft", "m_5874_"), "(Lczs;Ljo$a;)Lcuq;");
    }

    static jobject craft(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_craft();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getResult() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getResultItem", "method_8110", "getResult", "m_8043_"), "(Ljo$a;)Lcuq;");
    }

    static jobject getResult(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getResult();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_testTemplate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isTemplateIngredient", "method_48453", "testTemplate", "m_266166_"), "(Lcuq;)Z");
    }

    static jboolean testTemplate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_testTemplate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_testBase() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isBaseIngredient", "method_48454", "testBase", "m_266343_"), "(Lcuq;)Z");
    }

    static jboolean testBase(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_testBase();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_testAddition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isAdditionIngredient", "method_30029", "testAddition", "m_266253_"), "(Lcuq;)Z");
    }

    static jboolean testAddition(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_testAddition();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSerializer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("at_", "getSerializer", "method_8119", "getSerializer", "m_7707_"), "()Lcze;");
    }

    static jobject getSerializer(const jobject& obj) {
                
       const auto methodID = methodID_getSerializer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isIncomplete", "method_31584", "isEmpty", "m_142505_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RECIPE_SMITHINGTRANSFORMRECIPE_HPP