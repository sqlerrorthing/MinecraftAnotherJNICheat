// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RECIPE_REPAIRITEMRECIPE_HPP
#define NET_MINECRAFT_RECIPE_REPAIRITEMRECIPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.recipe.RepairItemRecipe
 * Remapped: czg
 */
namespace RepairItemRecipe {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("czg", "net/minecraft/world/item/crafting/RepairItemRecipe", "net/minecraft/class_4317", "net/minecraft/recipe/RepairItemRecipe", "net/minecraft/src/C_1474_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_findPair() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getItemsToCombine", "method_58438", "findPair", "m_321187_"), "(Lcyp;)Lcom/mojang/datafixers/util/Pair;");
    }

    static jobject findPair(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_findPair();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canCombineStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canCombine", "method_58439", "canCombineStacks", "m_319510_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean canCombineStacks(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canCombineStacks();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_matches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "matches", "method_20808", "matches", "m_5818_"), "(Lcyp;Ldcw;)Z");
    }

    static jboolean matches(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_matches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_craft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "assemble", "method_20807", "craft", "m_5874_"), "(Lcyp;Ljo$a;)Lcuq;");
    }

    static jobject craft(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_craft();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_fits() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canCraftInDimensions", "method_8113", "fits", "m_8004_"), "(II)Z");
    }

    static jboolean fits(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_fits();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSerializer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("at_", "getSerializer", "method_8119", "getSerializer", "m_7707_"), "()Lcze;");
    }

    static jobject getSerializer(const jobject& obj) {
                
       const auto methodID = methodID_getSerializer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RECIPE_REPAIRITEMRECIPE_HPP