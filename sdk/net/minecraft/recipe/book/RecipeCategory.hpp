// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RECIPE_BOOK_RECIPECATEGORY_HPP
#define NET_MINECRAFT_RECIPE_BOOK_RECIPECATEGORY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.recipe.book.RecipeCategory
 * Remapped: om
 */
namespace RecipeCategory {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("om", "net/minecraft/data/recipes/RecipeCategory", "net/minecraft/class_7800", "net/minecraft/recipe/book/RecipeCategory", "net/minecraft/src/C_243442_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.recipe.book.RecipeCategory#BUILDING_BLOCKS
    [[maybe_unused]] static jobject get_field_BUILDING_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BUILDING_BLOCKS", "field_40634", "BUILDING_BLOCKS", "BUILDING_BLOCKS"), "Lom;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.book.RecipeCategory#BUILDING_BLOCKS
    [[maybe_unused]] static void set_field_BUILDING_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BUILDING_BLOCKS", "field_40634", "BUILDING_BLOCKS", "BUILDING_BLOCKS"), "Lom;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.recipe.book.RecipeCategory#DECORATIONS
    [[maybe_unused]] static jobject get_field_DECORATIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DECORATIONS", "field_40635", "DECORATIONS", "DECORATIONS"), "Lom;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.book.RecipeCategory#DECORATIONS
    [[maybe_unused]] static void set_field_DECORATIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DECORATIONS", "field_40635", "DECORATIONS", "DECORATIONS"), "Lom;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.recipe.book.RecipeCategory#REDSTONE
    [[maybe_unused]] static jobject get_field_REDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "REDSTONE", "field_40636", "REDSTONE", "REDSTONE"), "Lom;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.book.RecipeCategory#REDSTONE
    [[maybe_unused]] static void set_field_REDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "REDSTONE", "field_40636", "REDSTONE", "REDSTONE"), "Lom;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.recipe.book.RecipeCategory#TRANSPORTATION
    [[maybe_unused]] static jobject get_field_TRANSPORTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TRANSPORTATION", "field_40637", "TRANSPORTATION", "TRANSPORTATION"), "Lom;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.book.RecipeCategory#TRANSPORTATION
    [[maybe_unused]] static void set_field_TRANSPORTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TRANSPORTATION", "field_40637", "TRANSPORTATION", "TRANSPORTATION"), "Lom;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.recipe.book.RecipeCategory#TOOLS
    [[maybe_unused]] static jobject get_field_TOOLS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TOOLS", "field_40638", "TOOLS", "TOOLS"), "Lom;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.book.RecipeCategory#TOOLS
    [[maybe_unused]] static void set_field_TOOLS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TOOLS", "field_40638", "TOOLS", "TOOLS"), "Lom;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.recipe.book.RecipeCategory#COMBAT
    [[maybe_unused]] static jobject get_field_COMBAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "COMBAT", "field_40639", "COMBAT", "COMBAT"), "Lom;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.book.RecipeCategory#COMBAT
    [[maybe_unused]] static void set_field_COMBAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "COMBAT", "field_40639", "COMBAT", "COMBAT"), "Lom;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.recipe.book.RecipeCategory#FOOD
    [[maybe_unused]] static jobject get_field_FOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "FOOD", "field_40640", "FOOD", "FOOD"), "Lom;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.book.RecipeCategory#FOOD
    [[maybe_unused]] static void set_field_FOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "FOOD", "field_40640", "FOOD", "FOOD"), "Lom;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.recipe.book.RecipeCategory#BREWING
    [[maybe_unused]] static jobject get_field_BREWING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "BREWING", "field_40641", "BREWING", "BREWING"), "Lom;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.book.RecipeCategory#BREWING
    [[maybe_unused]] static void set_field_BREWING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "BREWING", "field_40641", "BREWING", "BREWING"), "Lom;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.recipe.book.RecipeCategory#MISC
    [[maybe_unused]] static jobject get_field_MISC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MISC", "field_40642", "MISC", "MISC"), "Lom;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.book.RecipeCategory#MISC
    [[maybe_unused]] static void set_field_MISC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MISC", "field_40642", "MISC", "MISC"), "Lom;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.recipe.book.RecipeCategory#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "recipeFolderName", "field_40643", "name", "f_244582_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.recipe.book.RecipeCategory#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "recipeFolderName", "field_40643", "name", "f_244582_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lom;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lom;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getFolderName", "method_46203", "getName", "m_247710_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RECIPE_BOOK_RECIPECATEGORY_HPP