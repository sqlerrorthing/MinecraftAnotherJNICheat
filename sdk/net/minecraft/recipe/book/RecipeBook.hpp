// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RECIPE_BOOK_RECIPEBOOK_HPP
#define NET_MINECRAFT_RECIPE_BOOK_RECIPEBOOK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.recipe.book.RecipeBook
 * Remapped: avs
 */
namespace RecipeBook {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("avs", "net/minecraft/stats/RecipeBook", "net/minecraft/class_3439", "net/minecraft/recipe/book/RecipeBook", "net/minecraft/src/C_126_"));
        }
        return cachedClass;
    };

    // getter for protected field net.minecraft.recipe.book.RecipeBook#recipes
    static jobject get_field_recipes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "known", "field_15300", "recipes", "f_12680_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.recipe.book.RecipeBook#recipes
    static void set_field_recipes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "known", "field_15300", "recipes", "f_12680_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.recipe.book.RecipeBook#toBeDisplayed
    static jobject get_field_toBeDisplayed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "highlight", "field_15295", "toBeDisplayed", "f_12681_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.recipe.book.RecipeBook#toBeDisplayed
    static void set_field_toBeDisplayed(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "highlight", "field_15295", "toBeDisplayed", "f_12681_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.recipe.book.RecipeBook#options
    static jobject get_field_options(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "bookSettings", "field_25734", "options", "f_12682_"), "Lavt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.recipe.book.RecipeBook#options
    static void set_field_options(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "bookSettings", "field_25734", "options", "f_12682_"), "Lavt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_copyFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "copyOverData", "method_14875", "copyFrom", "m_12685_"), "(Lavs;)V");
    }

    static void copyFrom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_copyFrom();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_14876", "add", "m_12700_"), "(Lczb;)V");
    }

    static void add(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_14881", "add", "m_12702_"), "(Lakr;)V");
    }

    static void _add(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "contains", "method_14878", "contains", "m_12709_"), "(Lczb;)Z");
    }

    static jboolean contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "contains", "method_22845", "contains", "m_12711_"), "(Lakr;)Z");
    }

    static jboolean _contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "remove", "method_14893", "remove", "m_12713_"), "(Lczb;)V");
    }

    static void remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "remove", "method_14879", "remove", "m_12715_"), "(Lakr;)V");
    }

    static void _remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldDisplay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "willHighlight", "method_14883", "shouldDisplay", "m_12717_"), "(Lczb;)Z");
    }

    static jboolean shouldDisplay(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldDisplay();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onRecipeDisplayed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "removeHighlight", "method_14886", "onRecipeDisplayed", "m_12721_"), "(Lczb;)V");
    }

    static void onRecipeDisplayed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onRecipeDisplayed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_display() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "addHighlight", "method_14885", "display", "m_12723_"), "(Lczb;)V");
    }

    static void display(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_display();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__display() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "addHighlight", "method_14877", "display", "m_12719_"), "(Lakr;)V");
    }

    static void _display(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__display();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isGuiOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isOpen", "method_14887", "isGuiOpen", "m_12691_"), "(Lcrj;)Z");
    }

    static jboolean isGuiOpen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isGuiOpen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setGuiOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOpen", "method_14884", "setGuiOpen", "m_12693_"), "(Lcrj;Z)V");
    }

    static void setGuiOpen(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setGuiOpen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isFilteringCraftable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isFiltering", "method_14880", "isFilteringCraftable", "m_12689_"), "(Lcri;)Z");
    }

    static jboolean isFilteringCraftable(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isFilteringCraftable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__isFilteringCraftable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isFiltering", "method_30176", "isFilteringCraftable", "m_12704_"), "(Lcrj;)Z");
    }

    static jboolean _isFilteringCraftable(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__isFilteringCraftable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setFilteringCraftable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setFiltering", "method_30177", "setFilteringCraftable", "m_12706_"), "(Lcrj;Z)V");
    }

    static void setFilteringCraftable(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setFilteringCraftable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBookSettings", "method_30174", "setOptions", "m_12687_"), "(Lavt;)V");
    }

    static void setOptions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOptions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBookSettings", "method_30173", "getOptions", "m_12684_"), "()Lavt;");
    }

    static jobject getOptions(const jobject& obj) {
                
       const auto methodID = methodID_getOptions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCategoryOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBookSetting", "method_30175", "setCategoryOptions", "m_12696_"), "(Lcrj;ZZ)V");
    }

    static void setCategoryOptions(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_setCategoryOptions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_RECIPE_BOOK_RECIPEBOOK_HPP