// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RECIPE_BOOK_RECIPEBOOKOPTIONS$CATEGORYOPTION_HPP
#define NET_MINECRAFT_RECIPE_BOOK_RECIPEBOOKOPTIONS$CATEGORYOPTION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.recipe.book.RecipeBookOptions$CategoryOption
 * Remapped: avt$a
 */
namespace RecipeBookOptions$CategoryOption {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("avt$a", "net/minecraft/stats/RecipeBookSettings$TypeSettings", "net/minecraft/class_5411$class_5412", "net/minecraft/recipe/book/RecipeBookOptions$CategoryOption", "net/minecraft/src/C_127_$C_128_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.recipe.book.RecipeBookOptions$CategoryOption#guiOpen
    static jboolean get_field_guiOpen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "open", "field_25737", "guiOpen", "f_12766_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.recipe.book.RecipeBookOptions$CategoryOption#guiOpen
    static void set_field_guiOpen(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "open", "field_25737", "guiOpen", "f_12766_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.recipe.book.RecipeBookOptions$CategoryOption#filteringCraftable
    static jboolean get_field_filteringCraftable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "filtering", "field_25738", "filteringCraftable", "f_12767_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.recipe.book.RecipeBookOptions$CategoryOption#filteringCraftable
    static void set_field_filteringCraftable(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "filtering", "field_25738", "filteringCraftable", "f_12767_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "copy", "method_30191", "copy", "m_12771_"), "()Lavt$a;");
    }

    static jobject copy(const jobject& obj) {
                
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RECIPE_BOOK_RECIPEBOOKOPTIONS$CATEGORYOPTION_HPP