// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RECIPE_RECIPEMANAGER_HPP
#define NET_MINECRAFT_RECIPE_RECIPEMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.recipe.RecipeManager
 * Remapped: czd
 */
namespace RecipeManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("czd", "net/minecraft/world/item/crafting/RecipeManager", "net/minecraft/class_1863", "net/minecraft/recipe/RecipeManager", "net/minecraft/src/C_1470_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.recipe.RecipeManager#GSON
    [[maybe_unused]] static jobject get_field_GSON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GSON", "field_19359", "GSON", "f_44005_"), "Lcom/google/gson/Gson;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.recipe.RecipeManager#GSON
    [[maybe_unused]] static void set_field_GSON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GSON", "field_19359", "GSON", "f_44005_"), "Lcom/google/gson/Gson;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.recipe.RecipeManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_9027", "LOGGER", "f_44006_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.recipe.RecipeManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_9027", "LOGGER", "f_44006_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.recipe.RecipeManager#registryLookup
    static jobject get_field_registryLookup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "registries", "field_48848", "registryLookup", "f_314854_"), "Ljo$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.recipe.RecipeManager#registryLookup
    static void set_field_registryLookup(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "registries", "field_48848", "registryLookup", "f_314854_"), "Ljo$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.recipe.RecipeManager#recipesByType
    static jobject get_field_recipesByType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "byType", "field_51481", "recipesByType", "f_316587_"), "Lcom/google/common/collect/Multimap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.recipe.RecipeManager#recipesByType
    static void set_field_recipesByType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "byType", "field_51481", "recipesByType", "f_316587_"), "Lcom/google/common/collect/Multimap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.recipe.RecipeManager#recipesById
    static jobject get_field_recipesById(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "byName", "field_36308", "recipesById", "f_199900_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.recipe.RecipeManager#recipesById
    static void set_field_recipesById(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "byName", "field_36308", "recipesById", "f_199900_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.recipe.RecipeManager#errored
    static jboolean get_field_errored(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "hasErrors", "field_9024", "errored", "f_44008_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.recipe.RecipeManager#errored
    static void set_field_errored(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "hasErrors", "field_9024", "errored", "f_44008_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_20705", "apply", "m_5787_"), "(Ljava/util/Map;Laue;Lbnf;)V");
    }

    static void apply(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_apply();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isErrored() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hadErrorsLoading", "method_35227", "isErrored", "m_151269_"), "()Z");
    }

    static jboolean isErrored(const jobject& obj) {
                
       const auto methodID = methodID_isErrored();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFirstMatch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRecipeFor", "method_8132", "getFirstMatch", "m_44015_"), "(Lczf;Lczc;Ldcw;)Ljava/util/Optional;");
    }

    static jobject getFirstMatch(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getFirstMatch();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__getFirstMatch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRecipeFor", "method_42299", "getFirstMatch", "m_220248_"), "(Lczf;Lczc;Ldcw;Lakr;)Ljava/util/Optional;");
    }

    static jobject _getFirstMatch(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID__getFirstMatch();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID___getFirstMatch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRecipeFor", "method_59993", "getFirstMatch", "m_339836_"), "(Lczf;Lczc;Ldcw;Lczb;)Ljava/util/Optional;");
    }

    static jobject __getFirstMatch(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID___getFirstMatch();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_listAllOfType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAllRecipesFor", "method_30027", "listAllOfType", "m_44013_"), "(Lczf;)Ljava/util/List;");
    }

    static jobject listAllOfType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_listAllOfType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAllMatches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRecipesFor", "method_17877", "getAllMatches", "m_44056_"), "(Lczf;Lczc;Ldcw;)Ljava/util/List;");
    }

    static jobject getAllMatches(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getAllMatches();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getAllOfType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "byType", "method_17717", "getAllOfType", "m_44054_"), "(Lczf;)Ljava/util/Collection;");
    }

    static jobject getAllOfType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAllOfType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRemainingStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getRemainingItemsFor", "method_8128", "getRemainingStacks", "m_44069_"), "(Lczf;Lczc;Ldcw;)Ljv;");
    }

    static jobject getRemainingStacks(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getRemainingStacks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "byKey", "method_8130", "get", "m_44043_"), "(Lakr;)Ljava/util/Optional;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "byKeyTyped", "method_59821", "get", "m_320711_"), "(Lczf;Lakr;)Lczb;");
    }

    static jobject _get(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_sortedValues() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getOrderedRecipes", "method_59822", "sortedValues", "m_323867_"), "()Ljava/util/Collection;");
    }

    static jobject sortedValues(const jobject& obj) {
                
       const auto methodID = methodID_sortedValues();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getRecipes", "method_8126", "values", "m_44051_"), "()Ljava/util/Collection;");
    }

    static jobject values(const jobject& obj) {
                
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_keys() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getRecipeIds", "method_8127", "keys", "m_44073_"), "()Ljava/util/stream/Stream;");
    }

    static jobject keys(const jobject& obj) {
                
       const auto methodID = methodID_keys();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_deserialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromJson", "method_17720", "deserialize", "m_44045_"), "(Lakr;Lcom/google/gson/JsonObject;Ljo$a;)Lczb;");
    }

    static jobject deserialize(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_deserialize();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setRecipes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "replaceRecipes", "method_20702", "setRecipes", "m_44024_"), "(Ljava/lang/Iterable;)V");
    }

    static void setRecipes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setRecipes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createCachedMatchGetter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createCheck", "method_42302", "createCachedMatchGetter", "m_220267_"), "(Lczf;)Lczd$a;");
    }

    static jobject createCachedMatchGetter(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createCachedMatchGetter();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_RECIPE_RECIPEMANAGER_HPP