// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RECIPE_INGREDIENT_HPP
#define NET_MINECRAFT_RECIPE_INGREDIENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.recipe.Ingredient
 * Remapped: cyw
 */
namespace Ingredient {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cyw", "net/minecraft/world/item/crafting/Ingredient", "net/minecraft/class_1856", "net/minecraft/recipe/Ingredient", "net/minecraft/src/C_1462_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.recipe.Ingredient#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_9017", "EMPTY", "f_43901_"), "Lcyw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.Ingredient#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_9017", "EMPTY", "f_43901_"), "Lcyw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.recipe.Ingredient#PACKET_CODEC
    [[maybe_unused]] static jobject get_field_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CONTENTS_STREAM_CODEC", "field_48355", "PACKET_CODEC", "f_317040_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.Ingredient#PACKET_CODEC
    [[maybe_unused]] static void set_field_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CONTENTS_STREAM_CODEC", "field_48355", "PACKET_CODEC", "f_317040_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.recipe.Ingredient#entries
    static jobject get_field_entries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "values", "field_9019", "entries", "f_43902_"), "[Lcyw$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.recipe.Ingredient#entries
    static void set_field_entries(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "values", "field_9019", "entries", "f_43902_"), "[Lcyw$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.recipe.Ingredient#matchingStacks
    static jobject get_field_matchingStacks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "itemStacks", "field_9018", "matchingStacks", "f_43903_"), "[Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.recipe.Ingredient#matchingStacks
    static void set_field_matchingStacks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "itemStacks", "field_9018", "matchingStacks", "f_43903_"), "[Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.recipe.Ingredient#ids
    static jobject get_field_ids(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "stackingIds", "field_9016", "ids", "f_43904_"), "Lit/unimi/dsi/fastutil/ints/IntList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.recipe.Ingredient#ids
    static void set_field_ids(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "stackingIds", "field_9016", "ids", "f_43904_"), "Lit/unimi/dsi/fastutil/ints/IntList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.recipe.Ingredient#ALLOW_EMPTY_CODEC
    [[maybe_unused]] static jobject get_field_ALLOW_EMPTY_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CODEC", "field_46095", "ALLOW_EMPTY_CODEC", "f_291570_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.Ingredient#ALLOW_EMPTY_CODEC
    [[maybe_unused]] static void set_field_ALLOW_EMPTY_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CODEC", "field_46095", "ALLOW_EMPTY_CODEC", "f_291570_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.recipe.Ingredient#DISALLOW_EMPTY_CODEC
    [[maybe_unused]] static jobject get_field_DISALLOW_EMPTY_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CODEC_NONEMPTY", "field_46096", "DISALLOW_EMPTY_CODEC", "f_290991_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.recipe.Ingredient#DISALLOW_EMPTY_CODEC
    [[maybe_unused]] static void set_field_DISALLOW_EMPTY_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CODEC_NONEMPTY", "field_46096", "DISALLOW_EMPTY_CODEC", "f_290991_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getMatchingStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getItems", "method_8105", "getMatchingStacks", "m_43908_"), "()[Lcuq;");
    }

    static jobject getMatchingStacks(const jobject& obj) {
                
       const auto methodID = methodID_getMatchingStacks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_test() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "test", "method_8093", "test", "test"), "(Lcuq;)Z");
    }

    static jboolean test(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_test();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMatchingItemIds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getStackingIds", "method_8100", "getMatchingItemIds", "m_43931_"), "()Lit/unimi/dsi/fastutil/ints/IntList;");
    }

    static jobject getMatchingItemIds(const jobject& obj) {
                
       const auto methodID = methodID_getMatchingItemIds();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isEmpty", "method_8103", "isEmpty", "m_43947_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_ofEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "fromValues", "method_8092", "ofEntries", "m_43938_"), "(Ljava/util/stream/Stream;)Lcyw;");
    }

    static jobject ofEntries(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_ofEntries();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_empty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "of", "method_35226", "empty", "m_151265_"), "()Lcyw;");
    }

    static jobject empty() {
       const auto clazz = self();
       const auto methodID = methodID_empty();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_ofItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "of", "method_8091", "ofItems", "m_43929_"), "([Ldcv;)Lcyw;");
    }

    static jobject ofItems(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_ofItems();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_ofStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "of", "method_8101", "ofStacks", "m_43927_"), "([Lcuq;)Lcyw;");
    }

    static jobject ofStacks(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_ofStacks();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__ofStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "of", "method_26964", "ofStacks", "m_43921_"), "(Ljava/util/stream/Stream;)Lcyw;");
    }

    static jobject _ofStacks(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__ofStacks();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromTag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "of", "method_8106", "fromTag", "m_204132_"), "(Lawu;)Lcyw;");
    }

    static jobject fromTag(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromTag();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "codec", "method_53725", "createCodec", "m_294319_"), "(Z)Lcom/mojang/serialization/Codec;");
    }

    static jobject createCodec(const jboolean& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_RECIPE_INGREDIENT_HPP