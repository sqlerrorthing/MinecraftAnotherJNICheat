// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RECIPE_INPUT_SMITHINGRECIPEINPUT_HPP
#define NET_MINECRAFT_RECIPE_INPUT_SMITHINGRECIPEINPUT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.recipe.input.SmithingRecipeInput
 * Remapped: czs
 */
namespace SmithingRecipeInput {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("czs", "net/minecraft/world/item/crafting/SmithingRecipeInput", "net/minecraft/class_9697", "net/minecraft/recipe/input/SmithingRecipeInput", "net/minecraft/src/C_336523_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.recipe.input.SmithingRecipeInput#template
    static jobject get_field_template(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "template", "comp_2677", "template", "f_337171_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.recipe.input.SmithingRecipeInput#template
    static void set_field_template(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "template", "comp_2677", "template", "f_337171_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.recipe.input.SmithingRecipeInput#base
    static jobject get_field_base(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "base", "comp_2678", "base", "f_337430_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.recipe.input.SmithingRecipeInput#base
    static void set_field_base(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "base", "comp_2678", "base", "f_337430_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.recipe.input.SmithingRecipeInput#addition
    static jobject get_field_addition(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "addition", "comp_2679", "addition", "f_337605_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.recipe.input.SmithingRecipeInput#addition
    static void set_field_addition(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "addition", "comp_2679", "addition", "f_337605_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getStackInSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getItem", "method_59984", "getStackInSlot", "m_338719_"), "(I)Lcuq;");
    }

    static jobject getStackInSlot(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getStackInSlot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "size", "method_59983", "getSize", "m_338405_"), "()I");
    }

    static jint getSize(const jobject& obj) {
                
       const auto methodID = methodID_getSize();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isEmpty", "method_59987", "isEmpty", "m_339053_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__template() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "template", "comp_2677", "template", "f_337171_"), "()Lcuq;");
    }

    static jobject _template(const jobject& obj) {
                
       const auto methodID = methodID__template();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__base() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "base", "comp_2678", "base", "f_337430_"), "()Lcuq;");
    }

    static jobject _base(const jobject& obj) {
                
       const auto methodID = methodID__base();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__addition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "addition", "comp_2679", "addition", "f_337605_"), "()Lcuq;");
    }

    static jobject _addition(const jobject& obj) {
                
       const auto methodID = methodID__addition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RECIPE_INPUT_SMITHINGRECIPEINPUT_HPP