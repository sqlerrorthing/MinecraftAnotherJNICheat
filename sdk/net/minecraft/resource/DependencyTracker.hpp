// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RESOURCE_DEPENDENCYTRACKER_HPP
#define NET_MINECRAFT_RESOURCE_DEPENDENCYTRACKER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.resource.DependencyTracker
 * Remapped: axs
 */
namespace DependencyTracker {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("axs", "net/minecraft/util/DependencySorter", "net/minecraft/class_8523", "net/minecraft/resource/DependencyTracker", "net/minecraft/src/C_283733_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.resource.DependencyTracker#underlying
    static jobject get_field_underlying(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "contents", "field_44702", "underlying", "f_283882_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.DependencyTracker#underlying
    static void set_field_underlying(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "contents", "field_44702", "underlying", "f_283882_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addEntry", "method_51486", "add", "m_284176_"), "(Ljava/lang/Object;Laxs$a;)Laxs;");
    }

    static jobject add(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_traverse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitDependenciesAndElement", "method_51484", "traverse", "m_284372_"), "(Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V");
    }

    static void traverse(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_traverse();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_containsReverseDependency() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isCyclic", "method_51483", "containsReverseDependency", "m_284553_"), "(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)Z");
    }

    static jboolean containsReverseDependency(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_containsReverseDependency();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addDependency() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "addDependencyIfNotCyclic", "method_51489", "addDependency", "m_284232_"), "(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V");
    }

    static void addDependency(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_addDependency();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__traverse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "orderByDependencies", "method_51487", "traverse", "m_284430_"), "(Ljava/util/function/BiConsumer;)V");
    }

    static void _traverse(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__traverse();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_RESOURCE_DEPENDENCYTRACKER_HPP