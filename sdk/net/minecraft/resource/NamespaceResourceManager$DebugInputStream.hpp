// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RESOURCE_NAMESPACERESOURCEMANAGER$DEBUGINPUTSTREAM_HPP
#define NET_MINECRAFT_RESOURCE_NAMESPACERESOURCEMANAGER$DEBUGINPUTSTREAM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.resource.NamespaceResourceManager$DebugInputStream
 * Remapped: atv$c
 */
namespace NamespaceResourceManager$DebugInputStream {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("atv$c", "net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream", "net/minecraft/class_3294$class_3295", "net/minecraft/resource/NamespaceResourceManager$DebugInputStream", "net/minecraft/src/C_67_$C_68_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.resource.NamespaceResourceManager$DebugInputStream#leakMessage
    static jobject get_field_leakMessage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "message", "field_14288", "leakMessage", "f_10630_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.NamespaceResourceManager$DebugInputStream#leakMessage
    static void set_field_leakMessage(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "message", "field_14288", "leakMessage", "f_10630_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.NamespaceResourceManager$DebugInputStream#closed
    static jboolean get_field_closed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "closed", "field_14287", "closed", "f_10631_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.NamespaceResourceManager$DebugInputStream#closed
    static void set_field_closed(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "closed", "field_14287", "closed", "f_10631_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_finalize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("finalize", "finalize", "", "", "finalize"), "()V");
    }

    static void finalize(const jobject& obj) {
                
       const auto methodID = methodID_finalize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RESOURCE_NAMESPACERESOURCEMANAGER$DEBUGINPUTSTREAM_HPP