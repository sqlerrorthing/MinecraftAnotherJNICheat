// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RESOURCE_ZIPRESOURCEPACK$ZIPFILEWRAPPER_HPP
#define NET_MINECRAFT_RESOURCE_ZIPRESOURCEPACK$ZIPFILEWRAPPER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.resource.ZipResourcePack$ZipFileWrapper
 * Remapped: asn$b
 */
namespace ZipResourcePack$ZipFileWrapper {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("asn$b", "net/minecraft/server/packs/FilePackResources$SharedZipFileAccess", "net/minecraft/class_3258$class_8616", "net/minecraft/resource/ZipResourcePack$ZipFileWrapper", "net/minecraft/src/C_48_$C_290210_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.resource.ZipResourcePack$ZipFileWrapper#file
    static jobject get_field_file(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "file", "field_45042", "file", "f_291821_"), "Ljava/io/File;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.resource.ZipResourcePack$ZipFileWrapper#file
    static void set_field_file(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "file", "field_45042", "file", "f_291821_"), "Ljava/io/File;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.ZipResourcePack$ZipFileWrapper#zip
    static jobject get_field_zip(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "zipFile", "field_45043", "zip", "f_291060_"), "Ljava/util/zip/ZipFile;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.ZipResourcePack$ZipFileWrapper#zip
    static void set_field_zip(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "zipFile", "field_45043", "zip", "f_291060_"), "Ljava/util/zip/ZipFile;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.ZipResourcePack$ZipFileWrapper#closed
    static jboolean get_field_closed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "failedToLoad", "field_45044", "closed", "f_291441_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.ZipResourcePack$ZipFileWrapper#closed
    static void set_field_closed(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "failedToLoad", "field_45044", "closed", "f_291441_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_open() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOrCreateZipFile", "method_52426", "open", "m_295521_"), "()Ljava/util/zip/ZipFile;");
    }

    static jobject open(const jobject& obj) {
                
       const auto methodID = methodID_open();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_finalize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("finalize", "finalize", "", "", "finalize"), "()V");
    }

    static void finalize(const jobject& obj) {
                
       const auto methodID = methodID_finalize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RESOURCE_ZIPRESOURCEPACK$ZIPFILEWRAPPER_HPP