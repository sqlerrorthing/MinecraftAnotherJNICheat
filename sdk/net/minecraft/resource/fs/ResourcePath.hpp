// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RESOURCE_FS_RESOURCEPATH_HPP
#define NET_MINECRAFT_RESOURCE_FS_RESOURCEPATH_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.resource.fs.ResourcePath
 * Remapped: asy
 */
namespace ResourcePath {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("asy", "net/minecraft/server/packs/linkfs/LinkFSPath", "net/minecraft/class_7668", "net/minecraft/resource/fs/ResourcePath", "net/minecraft/src/C_243477_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.resource.fs.ResourcePath#DIRECTORY_ATTRIBUTES
    [[maybe_unused]] static jobject get_field_DIRECTORY_ATTRIBUTES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DIRECTORY_ATTRIBUTES", "field_40013", "DIRECTORY_ATTRIBUTES", "f_243881_"), "Ljava/nio/file/attribute/BasicFileAttributes;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.resource.fs.ResourcePath#DIRECTORY_ATTRIBUTES
    [[maybe_unused]] static void set_field_DIRECTORY_ATTRIBUTES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DIRECTORY_ATTRIBUTES", "field_40013", "DIRECTORY_ATTRIBUTES", "f_243881_"), "Ljava/nio/file/attribute/BasicFileAttributes;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.resource.fs.ResourcePath#FILE_ATTRIBUTES
    [[maybe_unused]] static jobject get_field_FILE_ATTRIBUTES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FILE_ATTRIBUTES", "field_40014", "FILE_ATTRIBUTES", "f_243746_"), "Ljava/nio/file/attribute/BasicFileAttributes;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.resource.fs.ResourcePath#FILE_ATTRIBUTES
    [[maybe_unused]] static void set_field_FILE_ATTRIBUTES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FILE_ATTRIBUTES", "field_40014", "FILE_ATTRIBUTES", "f_243746_"), "Ljava/nio/file/attribute/BasicFileAttributes;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.resource.fs.ResourcePath#COMPARATOR
    [[maybe_unused]] static jobject get_field_COMPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PATH_COMPARATOR", "field_40015", "COMPARATOR", "f_244038_"), "Ljava/util/Comparator;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.resource.fs.ResourcePath#COMPARATOR
    [[maybe_unused]] static void set_field_COMPARATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PATH_COMPARATOR", "field_40015", "COMPARATOR", "f_244038_"), "Ljava/util/Comparator;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.resource.fs.ResourcePath#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "name", "field_40016", "name", "f_244036_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.fs.ResourcePath#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "name", "field_40016", "name", "f_244036_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.fs.ResourcePath#fileSystem
    static jobject get_field_fileSystem(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "fileSystem", "field_40017", "fileSystem", "f_243986_"), "Lata;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.fs.ResourcePath#fileSystem
    static void set_field_fileSystem(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "fileSystem", "field_40017", "fileSystem", "f_243986_"), "Lata;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.fs.ResourcePath#parent
    static jobject get_field_parent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "parent", "field_40018", "parent", "f_244587_"), "Lasy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.fs.ResourcePath#parent
    static void set_field_parent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "parent", "field_40018", "parent", "f_244587_"), "Lasy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.fs.ResourcePath#names
    static jobject get_field_names(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "pathToRoot", "field_40019", "names", "f_244015_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.fs.ResourcePath#names
    static void set_field_names(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "pathToRoot", "field_40019", "names", "f_244015_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.fs.ResourcePath#pathString
    static jobject get_field_pathString(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "pathString", "field_40020", "pathString", "f_243677_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.fs.ResourcePath#pathString
    static void set_field_pathString(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "pathString", "field_40020", "pathString", "f_243677_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.fs.ResourcePath#file
    static jobject get_field_file(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "pathContents", "field_40021", "file", "f_244000_"), "Latb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.fs.ResourcePath#file
    static void set_field_file(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "pathContents", "field_40021", "file", "f_244000_"), "Latb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_relativize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createRelativePath", "method_45217", "relativize", "m_245307_"), "(Lasy;Ljava/lang/String;)Lasy;");
    }

    static jobject relativize(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_relativize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getFileSystem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getFileSystem", "method_45214", "getFileSystem", "getFileSystem"), "()Lata;");
    }

    static jobject getFileSystem(const jobject& obj) {
                
       const auto methodID = methodID_getFileSystem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAbsolute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("isAbsolute", "isAbsolute", "", "", "isAbsolute"), "()Z");
    }

    static jboolean isAbsolute(const jobject& obj) {
                
       const auto methodID = methodID_isAbsolute();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_toFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("toFile", "toFile", "", "", "toFile"), "()Ljava/io/File;");
    }

    static jobject toFile(const jobject& obj) {
                
       const auto methodID = methodID_toFile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRoot", "method_45223", "getRoot", "getRoot"), "()Lasy;");
    }

    static jobject getRoot(const jobject& obj) {
                
       const auto methodID = methodID_getRoot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFileName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getFileName", "method_45225", "getFileName", "getFileName"), "()Lasy;");
    }

    static jobject getFileName(const jobject& obj) {
                
       const auto methodID = methodID_getFileName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getParent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getParent", "method_45227", "getParent", "getParent"), "()Lasy;");
    }

    static jobject getParent(const jobject& obj) {
                
       const auto methodID = methodID_getParent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNameCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getNameCount", "getNameCount", "", "", "getNameCount"), "()I");
    }

    static jint getNameCount(const jobject& obj) {
                
       const auto methodID = methodID_getNameCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNames() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "pathToRoot", "method_45235", "getNames", "m_246070_"), "()Ljava/util/List;");
    }

    static jobject getNames(const jobject& obj) {
                
       const auto methodID = methodID_getNames();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getName", "method_45215", "getName", "getName"), "(I)Lasy;");
    }

    static jobject getName(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_subpath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "subpath", "method_45216", "subpath", "subpath"), "(II)Lasy;");
    }

    static jobject subpath(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_subpath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_startsWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("startsWith", "startsWith", "startsWith", "startsWith", "startsWith"), "(Ljava/nio/file/Path;)Z");
    }

    static jboolean startsWith(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_startsWith();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_endsWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("endsWith", "endsWith", "endsWith", "endsWith", "endsWith"), "(Ljava/nio/file/Path;)Z");
    }

    static jboolean endsWith(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_endsWith();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_normalize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "normalize", "method_45228", "normalize", "normalize"), "()Lasy;");
    }

    static jobject normalize(const jobject& obj) {
                
       const auto methodID = methodID_normalize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_resolve() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resolve", "method_45220", "resolve", "resolve"), "(Ljava/nio/file/Path;)Lasy;");
    }

    static jobject resolve(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_resolve();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resolve", "method_45221", "get", "m_246014_"), "(Ljava/util/List;)Lasy;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resolveName", "method_45219", "get", "m_247714_"), "(Ljava/lang/String;)Lasy;");
    }

    static jobject _get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSpecial() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isRelativeOrMissing", "method_45218", "isSpecial", "m_245789_"), "(Latb;)Z");
    }

    static jboolean isSpecial(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isSpecial();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__relativize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "relativize", "method_45224", "relativize", "relativize"), "(Ljava/nio/file/Path;)Lasy;");
    }

    static jobject _relativize(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__relativize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toUri() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("toUri", "toUri", "", "", "toUri"), "()Ljava/net/URI;");
    }

    static jobject toUri(const jobject& obj) {
                
       const auto methodID = methodID_toUri();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toAbsolutePath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "toAbsolutePath", "method_45229", "toAbsolutePath", "toAbsolutePath"), "()Lasy;");
    }

    static jobject toAbsolutePath(const jobject& obj) {
                
       const auto methodID = methodID_toAbsolutePath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toRealPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "toRealPath", "method_45222", "toRealPath", "toRealPath"), "([Ljava/nio/file/LinkOption;)Lasy;");
    }

    static jobject toRealPath(const jobject& obj, const jarray& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_toRealPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("register", "register", "register", "register", "register"), "(Ljava/nio/file/WatchService;[Ljava/nio/file/WatchEvent$Kind;[Ljava/nio/file/WatchEvent$Modifier;)Ljava/nio/file/WatchKey;");
    }

    static jobject register(const jobject& obj, const jobject& arg0, const jarray& arg1, const jobject& arg2, const jarray& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_compareTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("compareTo", "compareTo", "compareTo", "compareTo", "compareTo"), "(Ljava/nio/file/Path;)I");
    }

    static jint compareTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_compareTo();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isNormal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "hasRealContents", "method_45236", "isNormal", "m_246418_"), "()Z");
    }

    static jboolean isNormal(const jobject& obj) {
                
       const auto methodID = methodID_isNormal();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPathString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "pathToString", "method_45237", "getPathString", "m_245921_"), "()Ljava/lang/String;");
    }

    static jobject getPathString(const jobject& obj) {
                
       const auto methodID = methodID_getPathString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toResourcePath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "toLinkPath", "method_45226", "toResourcePath", "m_246027_"), "(Ljava/nio/file/Path;)Lasy;");
    }

    static jobject toResourcePath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toResourcePath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isReadable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "exists", "method_45230", "isReadable", "m_245626_"), "()Z");
    }

    static jboolean isReadable(const jobject& obj) {
                
       const auto methodID = methodID_isReadable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_toPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getTargetPath", "method_45231", "toPath", "m_247488_"), "()Ljava/nio/file/Path;");
    }

    static jobject toPath(const jobject& obj) {
                
       const auto methodID = methodID_toPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toDirectory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getDirectoryContents", "method_45232", "toDirectory", "m_245177_"), "()Latb$a;");
    }

    static jobject toDirectory(const jobject& obj) {
                
       const auto methodID = methodID_toDirectory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttributeView() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getBasicAttributeView", "method_45233", "getAttributeView", "m_246530_"), "()Ljava/nio/file/attribute/BasicFileAttributeView;");
    }

    static jobject getAttributeView(const jobject& obj) {
                
       const auto methodID = methodID_getAttributeView();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getBasicAttributes", "method_45234", "getAttributes", "m_246308_"), "()Ljava/nio/file/attribute/BasicFileAttributes;");
    }

    static jobject getAttributes(const jobject& obj) {
                
       const auto methodID = methodID_getAttributes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RESOURCE_FS_RESOURCEPATH_HPP