// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RESOURCE_FS_RESOURCEFILESYSTEMPROVIDER_HPP
#define NET_MINECRAFT_RESOURCE_FS_RESOURCEFILESYSTEMPROVIDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.resource.fs.ResourceFileSystemProvider
 * Remapped: asz
 */
namespace ResourceFileSystemProvider {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("asz", "net/minecraft/server/packs/linkfs/LinkFSProvider", "net/minecraft/class_7669", "net/minecraft/resource/fs/ResourceFileSystemProvider", "net/minecraft/src/C_243652_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.resource.fs.ResourceFileSystemProvider#SCHEME
    [[maybe_unused]] static jobject get_field_SCHEME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SCHEME", "field_40023", "SCHEME", "f_244482_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.resource.fs.ResourceFileSystemProvider#SCHEME
    [[maybe_unused]] static void set_field_SCHEME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SCHEME", "field_40023", "SCHEME", "f_244482_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getScheme() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getScheme", "getScheme", "", "", "getScheme"), "()Ljava/lang/String;");
    }

    static jobject getScheme(const jobject& obj) {
                
       const auto methodID = methodID_getScheme();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_newFileSystem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("newFileSystem", "newFileSystem", "newFileSystem", "newFileSystem", "newFileSystem"), "(Ljava/net/URI;Ljava/util/Map;)Ljava/nio/file/FileSystem;");
    }

    static jobject newFileSystem(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_newFileSystem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getFileSystem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getFileSystem", "getFileSystem", "getFileSystem", "getFileSystem", "getFileSystem"), "(Ljava/net/URI;)Ljava/nio/file/FileSystem;");
    }

    static jobject getFileSystem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFileSystem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getPath", "getPath", "getPath", "getPath", "getPath"), "(Ljava/net/URI;)Ljava/nio/file/Path;");
    }

    static jobject getPath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_newByteChannel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("newByteChannel", "newByteChannel", "newByteChannel", "newByteChannel", "newByteChannel"), "(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/SeekableByteChannel;");
    }

    static jobject newByteChannel(const jobject& obj, const jobject& arg0, const jobject& arg1, const jarray& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_newByteChannel();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_newDirectoryStream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("newDirectoryStream", "newDirectoryStream", "newDirectoryStream", "newDirectoryStream", "newDirectoryStream"), "(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;");
    }

    static jobject newDirectoryStream(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_newDirectoryStream();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createDirectory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("createDirectory", "createDirectory", "createDirectory", "createDirectory", "createDirectory"), "(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)V");
    }

    static void createDirectory(const jobject& obj, const jobject& arg0, const jarray& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_createDirectory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_delete() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("delete", "delete", "delete", "delete", "delete"), "(Ljava/nio/file/Path;)V");
    }

    static void delete(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_delete();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("copy", "copy", "copy", "copy", "copy"), "(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V");
    }

    static void copy(const jobject& obj, const jobject& arg0, const jobject& arg1, const jarray& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_copy();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_move() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("move", "move", "move", "move", "move"), "(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V");
    }

    static void move(const jobject& obj, const jobject& arg0, const jobject& arg1, const jarray& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_move();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isSameFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("isSameFile", "isSameFile", "isSameFile", "isSameFile", "isSameFile"), "(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z");
    }

    static jboolean isSameFile(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isSameFile();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isHidden() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("isHidden", "isHidden", "isHidden", "isHidden", "isHidden"), "(Ljava/nio/file/Path;)Z");
    }

    static jboolean isHidden(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isHidden();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFileStore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getFileStore", "getFileStore", "getFileStore", "getFileStore", "getFileStore"), "(Ljava/nio/file/Path;)Ljava/nio/file/FileStore;");
    }

    static jobject getFileStore(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFileStore();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_checkAccess() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("checkAccess", "checkAccess", "checkAccess", "checkAccess", "checkAccess"), "(Ljava/nio/file/Path;[Ljava/nio/file/AccessMode;)V");
    }

    static void checkAccess(const jobject& obj, const jobject& arg0, const jarray& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_checkAccess();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getFileAttributeView() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getFileAttributeView", "getFileAttributeView", "getFileAttributeView", "getFileAttributeView", "getFileAttributeView"), "(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;");
    }

    static jobject getFileAttributeView(const jobject& obj, const jobject& arg0, const jobject& arg1, const jarray& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getFileAttributeView();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_readAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readAttributes", "readAttributes", "readAttributes", "readAttributes", "readAttributes"), "(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;");
    }

    static jobject readAttributes(const jobject& obj, const jobject& arg0, const jobject& arg1, const jarray& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_readAttributes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__readAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readAttributes", "readAttributes", "readAttributes", "readAttributes", "readAttributes"), "(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/util/Map;");
    }

    static jobject _readAttributes(const jobject& obj, const jobject& arg0, const jobject& arg1, const jarray& arg2, const jobject& arg3) {
                
       const auto methodID = methodID__readAttributes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_setAttribute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("setAttribute", "setAttribute", "setAttribute", "setAttribute", "setAttribute"), "(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/Object;[Ljava/nio/file/LinkOption;)V");
    }

    static void setAttribute(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jarray& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_setAttribute();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_toResourcePath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "toLinkPath", "method_45238", "toResourcePath", "m_245446_"), "(Ljava/nio/file/Path;)Lasy;");
    }

    static jobject toResourcePath(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toResourcePath();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_RESOURCE_FS_RESOURCEFILESYSTEMPROVIDER_HPP