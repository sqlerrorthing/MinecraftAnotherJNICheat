// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RESOURCE_FS_RESOURCEFILESTORE_HPP
#define NET_MINECRAFT_RESOURCE_FS_RESOURCEFILESTORE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.resource.fs.ResourceFileStore
 * Remapped: asx
 */
namespace ResourceFileStore {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("asx", "net/minecraft/server/packs/linkfs/LinkFSFileStore", "net/minecraft/class_7667", "net/minecraft/resource/fs/ResourceFileStore", "net/minecraft/src/C_243505_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.resource.fs.ResourceFileStore#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "name", "field_40012", "name", "f_244515_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.fs.ResourceFileStore#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "name", "field_40012", "name", "f_244515_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID__name() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("name", "name", "", "", "name"), "()Ljava/lang/String;");
    }

    static jobject _name(const jobject& obj) {
                
       const auto methodID = methodID__name();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_type() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("type", "type", "", "", "type"), "()Ljava/lang/String;");
    }

    static jobject type(const jobject& obj) {
                
       const auto methodID = methodID_type();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isReadOnly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("isReadOnly", "isReadOnly", "", "", "isReadOnly"), "()Z");
    }

    static jboolean isReadOnly(const jobject& obj) {
                
       const auto methodID = methodID_isReadOnly();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTotalSpace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getTotalSpace", "getTotalSpace", "", "", "getTotalSpace"), "()J");
    }

    static jlong getTotalSpace(const jobject& obj) {
                
       const auto methodID = methodID_getTotalSpace();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getUsableSpace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getUsableSpace", "getUsableSpace", "", "", "getUsableSpace"), "()J");
    }

    static jlong getUsableSpace(const jobject& obj) {
                
       const auto methodID = methodID_getUsableSpace();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getUnallocatedSpace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getUnallocatedSpace", "getUnallocatedSpace", "", "", "getUnallocatedSpace"), "()J");
    }

    static jlong getUnallocatedSpace(const jobject& obj) {
                
       const auto methodID = methodID_getUnallocatedSpace();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_supportsFileAttributeView() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("supportsFileAttributeView", "supportsFileAttributeView", "supportsFileAttributeView", "supportsFileAttributeView", "supportsFileAttributeView"), "(Ljava/lang/Class;)Z");
    }

    static jboolean supportsFileAttributeView(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_supportsFileAttributeView();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__supportsFileAttributeView() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("supportsFileAttributeView", "supportsFileAttributeView", "supportsFileAttributeView", "supportsFileAttributeView", "supportsFileAttributeView"), "(Ljava/lang/String;)Z");
    }

    static jboolean _supportsFileAttributeView(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__supportsFileAttributeView();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFileStoreAttributeView() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getFileStoreAttributeView", "getFileStoreAttributeView", "getFileStoreAttributeView", "getFileStoreAttributeView", "getFileStoreAttributeView"), "(Ljava/lang/Class;)Ljava/nio/file/attribute/FileStoreAttributeView;");
    }

    static jobject getFileStoreAttributeView(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFileStoreAttributeView();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAttribute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getAttribute", "getAttribute", "getAttribute", "getAttribute", "getAttribute"), "(Ljava/lang/String;)Ljava/lang/Object;");
    }

    static jobject getAttribute(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAttribute();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_RESOURCE_FS_RESOURCEFILESTORE_HPP