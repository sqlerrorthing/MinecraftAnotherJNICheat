// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RESOURCE_FEATURETOGGLE_FEATUREMANAGER_HPP
#define NET_MINECRAFT_RESOURCE_FEATURETOGGLE_FEATUREMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.resource.featuretoggle.FeatureManager
 * Remapped: cpk
 */
namespace FeatureManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cpk", "net/minecraft/world/flag/FeatureFlagRegistry", "net/minecraft/class_7697", "net/minecraft/resource/featuretoggle/FeatureManager", "net/minecraft/src/C_243438_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.resource.featuretoggle.FeatureManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_40165", "LOGGER", "f_244528_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.resource.featuretoggle.FeatureManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_40165", "LOGGER", "f_244528_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.resource.featuretoggle.FeatureManager#universe
    static jobject get_field_universe(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "universe", "field_40166", "universe", "f_244444_"), "Lcpm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.featuretoggle.FeatureManager#universe
    static void set_field_universe(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "universe", "field_40166", "universe", "f_244444_"), "Lcpm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.featuretoggle.FeatureManager#featureFlags
    static jobject get_field_featureFlags(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "names", "field_40167", "featureFlags", "f_244560_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.featuretoggle.FeatureManager#featureFlags
    static void set_field_featureFlags(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "names", "field_40167", "featureFlags", "f_244560_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.featuretoggle.FeatureManager#featureSet
    static jobject get_field_featureSet(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "allFlags", "field_40168", "featureSet", "f_243770_"), "Lcpl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.featuretoggle.FeatureManager#featureSet
    static void set_field_featureSet(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "allFlags", "field_40168", "featureSet", "f_243770_"), "Lcpl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isSubset", "method_45385", "contains", "m_246363_"), "(Lcpl;)Z");
    }

    static jboolean contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFeatureSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "allFlags", "method_45383", "getFeatureSet", "m_247355_"), "()Lcpl;");
    }

    static jobject getFeatureSet(const jobject& obj) {
                
       const auto methodID = methodID_getFeatureSet();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_featureSetOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fromNames", "method_45387", "featureSetOf", "m_247416_"), "(Ljava/lang/Iterable;)Lcpl;");
    }

    static jobject featureSetOf(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_featureSetOf();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__featureSetOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "subset", "method_45390", "featureSetOf", "m_245769_"), "([Lcpj;)Lcpl;");
    }

    static jobject _featureSetOf(const jobject& obj, const jarray& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__featureSetOf();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___featureSetOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fromNames", "method_45388", "featureSetOf", "m_247021_"), "(Ljava/lang/Iterable;Ljava/util/function/Consumer;)Lcpl;");
    }

    static jobject __featureSetOf(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID___featureSetOf();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_toId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "toNames", "method_45392", "toId", "m_245829_"), "(Lcpl;)Ljava/util/Set;");
    }

    static jobject toId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "codec", "method_45391", "getCodec", "m_245213_"), "()Lcom/mojang/serialization/Codec;");
    }

    static jobject getCodec(const jobject& obj) {
                
       const auto methodID = methodID_getCodec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RESOURCE_FEATURETOGGLE_FEATUREMANAGER_HPP