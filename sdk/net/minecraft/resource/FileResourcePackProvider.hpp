// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RESOURCE_FILERESOURCEPACKPROVIDER_HPP
#define NET_MINECRAFT_RESOURCE_FILERESOURCEPACKPROVIDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.resource.FileResourcePackProvider
 * Remapped: atk
 */
namespace FileResourcePackProvider {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("atk", "net/minecraft/server/packs/repository/FolderRepositorySource", "net/minecraft/class_3279", "net/minecraft/resource/FileResourcePackProvider", "net/minecraft/src/C_57_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.resource.FileResourcePackProvider#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_40044", "LOGGER", "f_244616_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.resource.FileResourcePackProvider#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_40044", "LOGGER", "f_244616_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.resource.FileResourcePackProvider#POSITION
    [[maybe_unused]] static jobject get_field_POSITION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DISCOVERED_PACK_SELECTION_CONFIG", "field_49034", "POSITION", "f_314475_"), "Lasr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.resource.FileResourcePackProvider#POSITION
    [[maybe_unused]] static void set_field_POSITION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DISCOVERED_PACK_SELECTION_CONFIG", "field_49034", "POSITION", "f_314475_"), "Lasr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.resource.FileResourcePackProvider#packsDir
    static jobject get_field_packsDir(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "folder", "field_14218", "packsDir", "f_10382_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.FileResourcePackProvider#packsDir
    static void set_field_packsDir(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "folder", "field_14218", "packsDir", "f_10382_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.FileResourcePackProvider#type
    static jobject get_field_type(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "packType", "field_40045", "type", "f_243749_"), "Lass;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.FileResourcePackProvider#type
    static void set_field_type(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "packType", "field_40045", "type", "f_243749_"), "Lass;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.FileResourcePackProvider#source
    static jobject get_field_source(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "packSource", "field_25345", "source", "f_10383_"), "Latq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.FileResourcePackProvider#source
    static void set_field_source(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "packSource", "field_25345", "source", "f_10383_"), "Latq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.FileResourcePackProvider#symlinkFinder
    static jobject get_field_symlinkFinder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "validator", "field_45054", "symlinkFinder", "f_290579_"), "Lews;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.FileResourcePackProvider#symlinkFinder
    static void set_field_symlinkFinder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "validator", "field_45054", "symlinkFinder", "f_290579_"), "Lews;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getFileName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "nameFromPath", "method_45273", "getFileName", "m_246927_"), "(Ljava/nio/file/Path;)Ljava/lang/String;");
    }

    static jobject getFileName(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getFileName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("loadPacks", "loadPacks", "method_14453", "register", "m_7686_"), "(Ljava/util/function/Consumer;)V");
    }

    static void register(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createPackInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createDiscoveredFilePackInfo", "method_56930", "createPackInfo", "m_321008_"), "(Ljava/nio/file/Path;)Lasp;");
    }

    static jobject createPackInfo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createPackInfo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_forEachProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "discoverPacks", "method_45271", "forEachProfile", "m_247293_"), "(Ljava/nio/file/Path;Lews;Ljava/util/function/BiConsumer;)V");
    }

    static void forEachProfile(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_forEachProfile();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_RESOURCE_FILERESOURCEPACKPROVIDER_HPP