// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RESOURCE_DATACONFIGURATION_HPP
#define NET_MINECRAFT_RESOURCE_DATACONFIGURATION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.resource.DataConfiguration
 * Remapped: ddr
 */
namespace DataConfiguration {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ddr", "net/minecraft/world/level/WorldDataConfiguration", "net/minecraft/class_7712", "net/minecraft/resource/DataConfiguration", "net/minecraft/src/C_243530_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.resource.DataConfiguration#dataPacks
    static jobject get_field_dataPacks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "dataPacks", "comp_1010", "dataPacks", "f_244096_"), "Ldck;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.DataConfiguration#dataPacks
    static void set_field_dataPacks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "dataPacks", "comp_1010", "dataPacks", "f_244096_"), "Ldck;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.resource.DataConfiguration#enabledFeatures
    static jobject get_field_enabledFeatures(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "enabledFeatures", "comp_1011", "enabledFeatures", "f_243973_"), "Lcpl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.resource.DataConfiguration#enabledFeatures
    static void set_field_enabledFeatures(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "enabledFeatures", "comp_1011", "enabledFeatures", "f_243973_"), "Lcpl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.resource.DataConfiguration#ENABLED_FEATURES_KEY
    [[maybe_unused]] static jobject get_field_ENABLED_FEATURES_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ENABLED_FEATURES_ID", "field_40258", "ENABLED_FEATURES_KEY", "f_243757_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.resource.DataConfiguration#ENABLED_FEATURES_KEY
    [[maybe_unused]] static void set_field_ENABLED_FEATURES_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ENABLED_FEATURES_ID", "field_40258", "ENABLED_FEATURES_KEY", "f_243757_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.resource.DataConfiguration#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_40259", "CODEC", "f_244621_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.resource.DataConfiguration#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_40259", "CODEC", "f_244621_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.resource.DataConfiguration#SAFE_MODE
    [[maybe_unused]] static jobject get_field_SAFE_MODE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT", "field_40260", "SAFE_MODE", "f_244649_"), "Lddr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.resource.DataConfiguration#SAFE_MODE
    [[maybe_unused]] static void set_field_SAFE_MODE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT", "field_40260", "SAFE_MODE", "f_244649_"), "Lddr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_withFeaturesAdded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "expandFeatures", "method_45449", "withFeaturesAdded", "m_245801_"), "(Lcpl;)Lddr;");
    }

    static jobject withFeaturesAdded(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withFeaturesAdded();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__dataPacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dataPacks", "comp_1010", "dataPacks", "f_244096_"), "()Ldck;");
    }

    static jobject _dataPacks(const jobject& obj) {
                
       const auto methodID = methodID__dataPacks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__enabledFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "enabledFeatures", "comp_1011", "enabledFeatures", "f_243973_"), "()Lcpl;");
    }

    static jobject _enabledFeatures(const jobject& obj) {
                
       const auto methodID = methodID__enabledFeatures();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RESOURCE_DATACONFIGURATION_HPP