// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_RESOURCE_RESOURCERELOAD_HPP
#define NET_MINECRAFT_RESOURCE_RESOURCERELOAD_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.resource.ResourceReload
 * Remapped: aua
 */
namespace ResourceReload {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aua", "net/minecraft/server/packs/resources/ReloadInstance", "net/minecraft/class_4011", "net/minecraft/resource/ResourceReload", "net/minecraft/src/C_74_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_whenComplete() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "done", "method_18364", "whenComplete", "m_7237_"), "()Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject whenComplete(const jobject& obj) {
                
       const auto methodID = methodID_whenComplete();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getActualProgress", "method_18229", "getProgress", "m_7750_"), "()F");
    }

    static jfloat getProgress(const jobject& obj) {
                
       const auto methodID = methodID_getProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_isComplete() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isDone", "method_18787", "isComplete", "m_7746_"), "()Z");
    }

    static jboolean isComplete(const jobject& obj) {
                
       const auto methodID = methodID_isComplete();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_throwException() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "checkExceptions", "method_18849", "throwException", "m_7748_"), "()V");
    }

    static void throwException(const jobject& obj) {
                
       const auto methodID = methodID_throwException();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_RESOURCE_RESOURCERELOAD_HPP