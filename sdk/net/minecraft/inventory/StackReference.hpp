// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_INVENTORY_STACKREFERENCE_HPP
#define NET_MINECRAFT_INVENTORY_STACKREFERENCE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.inventory.StackReference
 * Remapped: bug
 */
namespace StackReference {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bug", "net/minecraft/world/entity/SlotAccess", "net/minecraft/class_5630", "net/minecraft/inventory/StackReference", "net/minecraft/src/C_141073_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.inventory.StackReference#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NULL", "field_27860", "EMPTY", "f_147290_"), "Lbug;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.inventory.StackReference#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NULL", "field_27860", "EMPTY", "f_147290_"), "Lbug;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "of", "method_59666", "of", "m_320701_"), "(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)Lbug;");
    }

    static jobject of(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forContainer", "method_32329", "of", "m_147295_"), "(Lbqk;ILjava/util/function/Predicate;)Lbug;");
    }

    static jobject _of(const jobject& arg0, const jint& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forContainer", "method_32328", "of", "m_147292_"), "(Lbqk;I)Lbug;");
    }

    static jobject __of(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID___of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID____of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forEquipmentSlot", "method_32331", "of", "m_147302_"), "(Lbtn;Lbsy;Ljava/util/function/Predicate;)Lbug;");
    }

    static jobject ___of(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID____of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_____of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forEquipmentSlot", "method_32330", "of", "m_147299_"), "(Lbtn;Lbsy;)Lbug;");
    }

    static jobject ____of(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_____of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_32327", "get", "m_142196_"), "()Lcuq;");
    }

    static jobject get(const jobject& obj) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "set", "method_32332", "set", "m_142104_"), "(Lcuq;)Z");
    }

    static jboolean set(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_set();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_INVENTORY_STACKREFERENCE_HPP