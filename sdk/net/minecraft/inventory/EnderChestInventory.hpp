// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_INVENTORY_ENDERCHESTINVENTORY_HPP
#define NET_MINECRAFT_INVENTORY_ENDERCHESTINVENTORY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.inventory.EnderChestInventory
 * Remapped: crh
 */
namespace EnderChestInventory {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("crh", "net/minecraft/world/inventory/PlayerEnderChestContainer", "net/minecraft/class_1730", "net/minecraft/inventory/EnderChestInventory", "net/minecraft/src/C_1296_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.inventory.EnderChestInventory#activeBlockEntity
    static jobject get_field_activeBlockEntity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "activeChest", "field_7864", "activeBlockEntity", "f_40101_"), "Ldrd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.inventory.EnderChestInventory#activeBlockEntity
    static void set_field_activeBlockEntity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "activeChest", "field_7864", "activeBlockEntity", "f_40101_"), "Ldrd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_setActiveBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setActiveChest", "method_7661", "setActiveBlockEntity", "m_40105_"), "(Ldrd;)V");
    }

    static void setActiveBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setActiveBlockEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isActiveBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isActiveChest", "method_31556", "isActiveBlockEntity", "m_150633_"), "(Ldrd;)Z");
    }

    static jboolean isActiveBlockEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isActiveBlockEntity();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readNbtList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fromTag", "method_7659", "readNbtList", "m_7797_"), "(Luh;Ljo$a;)V");
    }

    static void readNbtList(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbtList();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_toNbtList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTag", "method_7660", "toNbtList", "m_7927_"), "(Ljo$a;)Luh;");
    }

    static jobject toNbtList(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toNbtList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canPlayerUse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stillValid", "method_5443", "canPlayerUse", "m_6542_"), "(Lcmx;)Z");
    }

    static jboolean canPlayerUse(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canPlayerUse();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d_", "startOpen", "method_5435", "onOpen", "m_5856_"), "(Lcmx;)V");
    }

    static void onOpen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onOpen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onClose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "stopOpen", "method_5432", "onClose", "m_5785_"), "(Lcmx;)V");
    }

    static void onClose(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onClose();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_INVENTORY_ENDERCHESTINVENTORY_HPP