// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_INVENTORY_INVENTORIES_HPP
#define NET_MINECRAFT_INVENTORY_INVENTORIES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.inventory.Inventories
 * Remapped: bql
 */
namespace Inventories {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bql", "net/minecraft/world/ContainerHelper", "net/minecraft/class_1262", "net/minecraft/inventory/Inventories", "net/minecraft/src/C_465_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.inventory.Inventories#ITEMS_NBT_KEY
    [[maybe_unused]] static jobject get_field_ITEMS_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TAG_ITEMS", "field_49719", "ITEMS_NBT_KEY", "f_314637_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.inventory.Inventories#ITEMS_NBT_KEY
    [[maybe_unused]] static void set_field_ITEMS_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TAG_ITEMS", "field_49719", "ITEMS_NBT_KEY", "f_314637_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_splitStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "removeItem", "method_5430", "splitStack", "m_18969_"), "(Ljava/util/List;II)Lcuq;");
    }

    static jobject splitStack(const jobject& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_splitStack();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_removeStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "takeItem", "method_5428", "removeStack", "m_18966_"), "(Ljava/util/List;I)Lcuq;");
    }

    static jobject removeStack(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_removeStack();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "saveAllItems", "method_5426", "writeNbt", "m_18976_"), "(Lub;Ljv;Ljo$a;)Lub;");
    }

    static jobject writeNbt(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_writeNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "saveAllItems", "method_5427", "writeNbt", "m_18973_"), "(Lub;Ljv;ZLjo$a;)Lub;");
    }

    static jobject _writeNbt(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__writeNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "loadAllItems", "method_5429", "readNbt", "m_18980_"), "(Lub;Ljv;Ljo$a;)V");
    }

    static void readNbt(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "clearOrCountMatchingItems", "method_29234", "remove", "m_18956_"), "(Lbqk;Ljava/util/function/Predicate;IZ)I");
    }

    static jint remove(const jobject& arg0, const jobject& arg1, const jint& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_remove();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "clearOrCountMatchingItems", "method_29235", "remove", "m_18961_"), "(Lcuq;Ljava/util/function/Predicate;IZ)I");
    }

    static jint _remove(const jobject& arg0, const jobject& arg1, const jint& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__remove();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_INVENTORY_INVENTORIES_HPP