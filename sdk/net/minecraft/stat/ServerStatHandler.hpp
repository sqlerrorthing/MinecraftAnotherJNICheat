// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STAT_SERVERSTATHANDLER_HPP
#define NET_MINECRAFT_STAT_SERVERSTATHANDLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.stat.ServerStatHandler
 * Remapped: avv
 */
namespace ServerStatHandler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("avv", "net/minecraft/stats/ServerStatsCounter", "net/minecraft/class_3442", "net/minecraft/stat/ServerStatHandler", "net/minecraft/src/C_130_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.stat.ServerStatHandler#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_15309", "LOGGER", "f_12809_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.stat.ServerStatHandler#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_15309", "LOGGER", "f_12809_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.stat.ServerStatHandler#server
    static jobject get_field_server(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "server", "field_15308", "server", "f_12810_"), "Lnet/minecraft/server/MinecraftServer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.stat.ServerStatHandler#server
    static void set_field_server(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "server", "field_15308", "server", "f_12810_"), "Lnet/minecraft/server/MinecraftServer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.stat.ServerStatHandler#file
    static jobject get_field_file(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "file", "field_15305", "file", "f_12811_"), "Ljava/io/File;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.stat.ServerStatHandler#file
    static void set_field_file(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "file", "field_15305", "file", "f_12811_"), "Ljava/io/File;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.stat.ServerStatHandler#pendingStats
    static jobject get_field_pendingStats(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "dirty", "field_15307", "pendingStats", "f_12812_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.stat.ServerStatHandler#pendingStats
    static void set_field_pendingStats(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "dirty", "field_15307", "pendingStats", "f_12812_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_save() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "save", "method_14912", "save", "m_12818_"), "()V");
    }

    static void save(const jobject& obj) {
                
       const auto methodID = methodID_save();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setValue", "method_15023", "setStat", "m_6085_"), "(Lcmx;Lavw;I)V");
    }

    static void setStat(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_setStat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_takePendingStats() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getDirty", "method_14909", "takePendingStats", "m_12851_"), "()Ljava/util/Set;");
    }

    static jobject takePendingStats(const jobject& obj) {
                
       const auto methodID = methodID_takePendingStats();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "parseLocal", "method_14906", "parse", "m_12832_"), "(Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V");
    }

    static void parse(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_parse();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getStat", "method_14905", "createStat", "m_12823_"), "(Lavy;Ljava/lang/String;)Ljava/util/Optional;");
    }

    static jobject createStat(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createStat();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_jsonToCompound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromJson", "method_14908", "jsonToCompound", "m_12830_"), "(Lcom/google/gson/JsonObject;)Lub;");
    }

    static jobject jsonToCompound(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_jsonToCompound();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_asString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "toJson", "method_14911", "asString", "m_12845_"), "()Ljava/lang/String;");
    }

    static jobject asString(const jobject& obj) {
                
       const auto methodID = methodID_asString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStatId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getKey", "method_14907", "getStatId", "m_12846_"), "(Lavw;)Lakr;");
    }

    static jobject getStatId(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getStatId();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_updateStatSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "markAllDirty", "method_14914", "updateStatSet", "m_12850_"), "()V");
    }

    static void updateStatSet(const jobject& obj) {
                
       const auto methodID = methodID_updateStatSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendStats() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendStats", "method_14910", "sendStats", "m_12819_"), "(Laqv;)V");
    }

    static void sendStats(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendStats();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_STAT_SERVERSTATHANDLER_HPP