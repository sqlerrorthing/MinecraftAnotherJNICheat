// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STAT_STATS_HPP
#define NET_MINECRAFT_STAT_STATS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.stat.Stats
 * Remapped: avz
 */
namespace Stats {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("avz", "net/minecraft/stats/Stats", "net/minecraft/class_3468", "net/minecraft/stat/Stats", "net/minecraft/src/C_135_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.stat.Stats#MINED
    [[maybe_unused]] static jobject get_field_MINED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLOCK_MINED", "field_15427", "MINED", "f_12949_"), "Lavy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#MINED
    [[maybe_unused]] static void set_field_MINED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLOCK_MINED", "field_15427", "MINED", "f_12949_"), "Lavy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#CRAFTED
    [[maybe_unused]] static jobject get_field_CRAFTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ITEM_CRAFTED", "field_15370", "CRAFTED", "f_12981_"), "Lavy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#CRAFTED
    [[maybe_unused]] static void set_field_CRAFTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ITEM_CRAFTED", "field_15370", "CRAFTED", "f_12981_"), "Lavy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#USED
    [[maybe_unused]] static jobject get_field_USED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ITEM_USED", "field_15372", "USED", "f_12982_"), "Lavy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#USED
    [[maybe_unused]] static void set_field_USED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ITEM_USED", "field_15372", "USED", "f_12982_"), "Lavy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#BROKEN
    [[maybe_unused]] static jobject get_field_BROKEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ITEM_BROKEN", "field_15383", "BROKEN", "f_12983_"), "Lavy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#BROKEN
    [[maybe_unused]] static void set_field_BROKEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ITEM_BROKEN", "field_15383", "BROKEN", "f_12983_"), "Lavy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#PICKED_UP
    [[maybe_unused]] static jobject get_field_PICKED_UP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ITEM_PICKED_UP", "field_15392", "PICKED_UP", "f_12984_"), "Lavy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#PICKED_UP
    [[maybe_unused]] static void set_field_PICKED_UP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ITEM_PICKED_UP", "field_15392", "PICKED_UP", "f_12984_"), "Lavy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#DROPPED
    [[maybe_unused]] static jobject get_field_DROPPED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ITEM_DROPPED", "field_15405", "DROPPED", "f_12985_"), "Lavy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#DROPPED
    [[maybe_unused]] static void set_field_DROPPED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ITEM_DROPPED", "field_15405", "DROPPED", "f_12985_"), "Lavy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#KILLED
    [[maybe_unused]] static jobject get_field_KILLED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ENTITY_KILLED", "field_15403", "KILLED", "f_12986_"), "Lavy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#KILLED
    [[maybe_unused]] static void set_field_KILLED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ENTITY_KILLED", "field_15403", "KILLED", "f_12986_"), "Lavy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#KILLED_BY
    [[maybe_unused]] static jobject get_field_KILLED_BY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ENTITY_KILLED_BY", "field_15411", "KILLED_BY", "f_12987_"), "Lavy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#KILLED_BY
    [[maybe_unused]] static void set_field_KILLED_BY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ENTITY_KILLED_BY", "field_15411", "KILLED_BY", "f_12987_"), "Lavy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#CUSTOM
    [[maybe_unused]] static jobject get_field_CUSTOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "CUSTOM", "field_15419", "CUSTOM", "f_12988_"), "Lavy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#CUSTOM
    [[maybe_unused]] static void set_field_CUSTOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "CUSTOM", "field_15419", "CUSTOM", "f_12988_"), "Lavy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#LEAVE_GAME
    [[maybe_unused]] static jobject get_field_LEAVE_GAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "LEAVE_GAME", "field_15389", "LEAVE_GAME", "f_12989_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#LEAVE_GAME
    [[maybe_unused]] static void set_field_LEAVE_GAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "LEAVE_GAME", "field_15389", "LEAVE_GAME", "f_12989_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#PLAY_TIME
    [[maybe_unused]] static jobject get_field_PLAY_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PLAY_TIME", "field_15417", "PLAY_TIME", "f_144255_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#PLAY_TIME
    [[maybe_unused]] static void set_field_PLAY_TIME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PLAY_TIME", "field_15417", "PLAY_TIME", "f_144255_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#TOTAL_WORLD_TIME
    [[maybe_unused]] static jobject get_field_TOTAL_WORLD_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "TOTAL_WORLD_TIME", "field_33558", "TOTAL_WORLD_TIME", "f_144256_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#TOTAL_WORLD_TIME
    [[maybe_unused]] static void set_field_TOTAL_WORLD_TIME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "TOTAL_WORLD_TIME", "field_33558", "TOTAL_WORLD_TIME", "f_144256_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#TIME_SINCE_DEATH
    [[maybe_unused]] static jobject get_field_TIME_SINCE_DEATH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "TIME_SINCE_DEATH", "field_15400", "TIME_SINCE_DEATH", "f_12991_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#TIME_SINCE_DEATH
    [[maybe_unused]] static void set_field_TIME_SINCE_DEATH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "TIME_SINCE_DEATH", "field_15400", "TIME_SINCE_DEATH", "f_12991_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#TIME_SINCE_REST
    [[maybe_unused]] static jobject get_field_TIME_SINCE_REST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "TIME_SINCE_REST", "field_15429", "TIME_SINCE_REST", "f_12992_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#TIME_SINCE_REST
    [[maybe_unused]] static void set_field_TIME_SINCE_REST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "TIME_SINCE_REST", "field_15429", "TIME_SINCE_REST", "f_12992_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#SNEAK_TIME
    [[maybe_unused]] static jobject get_field_SNEAK_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CROUCH_TIME", "field_15422", "SNEAK_TIME", "f_12993_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#SNEAK_TIME
    [[maybe_unused]] static void set_field_SNEAK_TIME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CROUCH_TIME", "field_15422", "SNEAK_TIME", "f_12993_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#WALK_ONE_CM
    [[maybe_unused]] static jobject get_field_WALK_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "WALK_ONE_CM", "field_15377", "WALK_ONE_CM", "f_12994_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#WALK_ONE_CM
    [[maybe_unused]] static void set_field_WALK_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "WALK_ONE_CM", "field_15377", "WALK_ONE_CM", "f_12994_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#CROUCH_ONE_CM
    [[maybe_unused]] static jobject get_field_CROUCH_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "CROUCH_ONE_CM", "field_15376", "CROUCH_ONE_CM", "f_12995_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#CROUCH_ONE_CM
    [[maybe_unused]] static void set_field_CROUCH_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "CROUCH_ONE_CM", "field_15376", "CROUCH_ONE_CM", "f_12995_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#SPRINT_ONE_CM
    [[maybe_unused]] static jobject get_field_SPRINT_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SPRINT_ONE_CM", "field_15364", "SPRINT_ONE_CM", "f_12996_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#SPRINT_ONE_CM
    [[maybe_unused]] static void set_field_SPRINT_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SPRINT_ONE_CM", "field_15364", "SPRINT_ONE_CM", "f_12996_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#WALK_ON_WATER_ONE_CM
    [[maybe_unused]] static jobject get_field_WALK_ON_WATER_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "WALK_ON_WATER_ONE_CM", "field_15394", "WALK_ON_WATER_ONE_CM", "f_12997_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#WALK_ON_WATER_ONE_CM
    [[maybe_unused]] static void set_field_WALK_ON_WATER_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "WALK_ON_WATER_ONE_CM", "field_15394", "WALK_ON_WATER_ONE_CM", "f_12997_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#FALL_ONE_CM
    [[maybe_unused]] static jobject get_field_FALL_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "FALL_ONE_CM", "field_15386", "FALL_ONE_CM", "f_12998_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#FALL_ONE_CM
    [[maybe_unused]] static void set_field_FALL_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "FALL_ONE_CM", "field_15386", "FALL_ONE_CM", "f_12998_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#CLIMB_ONE_CM
    [[maybe_unused]] static jobject get_field_CLIMB_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "CLIMB_ONE_CM", "field_15413", "CLIMB_ONE_CM", "f_12999_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#CLIMB_ONE_CM
    [[maybe_unused]] static void set_field_CLIMB_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "CLIMB_ONE_CM", "field_15413", "CLIMB_ONE_CM", "f_12999_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#FLY_ONE_CM
    [[maybe_unused]] static jobject get_field_FLY_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FLY_ONE_CM", "field_15426", "FLY_ONE_CM", "f_13000_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#FLY_ONE_CM
    [[maybe_unused]] static void set_field_FLY_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FLY_ONE_CM", "field_15426", "FLY_ONE_CM", "f_13000_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#WALK_UNDER_WATER_ONE_CM
    [[maybe_unused]] static jobject get_field_WALK_UNDER_WATER_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "WALK_UNDER_WATER_ONE_CM", "field_15401", "WALK_UNDER_WATER_ONE_CM", "f_13001_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#WALK_UNDER_WATER_ONE_CM
    [[maybe_unused]] static void set_field_WALK_UNDER_WATER_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "WALK_UNDER_WATER_ONE_CM", "field_15401", "WALK_UNDER_WATER_ONE_CM", "f_13001_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#MINECART_ONE_CM
    [[maybe_unused]] static jobject get_field_MINECART_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "MINECART_ONE_CM", "field_15409", "MINECART_ONE_CM", "f_13002_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#MINECART_ONE_CM
    [[maybe_unused]] static void set_field_MINECART_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "MINECART_ONE_CM", "field_15409", "MINECART_ONE_CM", "f_13002_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#BOAT_ONE_CM
    [[maybe_unused]] static jobject get_field_BOAT_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "BOAT_ONE_CM", "field_15415", "BOAT_ONE_CM", "f_13003_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#BOAT_ONE_CM
    [[maybe_unused]] static void set_field_BOAT_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "BOAT_ONE_CM", "field_15415", "BOAT_ONE_CM", "f_13003_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#PIG_ONE_CM
    [[maybe_unused]] static jobject get_field_PIG_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "PIG_ONE_CM", "field_15387", "PIG_ONE_CM", "f_13004_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#PIG_ONE_CM
    [[maybe_unused]] static void set_field_PIG_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "PIG_ONE_CM", "field_15387", "PIG_ONE_CM", "f_13004_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#HORSE_ONE_CM
    [[maybe_unused]] static jobject get_field_HORSE_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "HORSE_ONE_CM", "field_15396", "HORSE_ONE_CM", "f_13005_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#HORSE_ONE_CM
    [[maybe_unused]] static void set_field_HORSE_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "HORSE_ONE_CM", "field_15396", "HORSE_ONE_CM", "f_13005_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#AVIATE_ONE_CM
    [[maybe_unused]] static jobject get_field_AVIATE_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "AVIATE_ONE_CM", "field_15374", "AVIATE_ONE_CM", "f_12923_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#AVIATE_ONE_CM
    [[maybe_unused]] static void set_field_AVIATE_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "AVIATE_ONE_CM", "field_15374", "AVIATE_ONE_CM", "f_12923_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#SWIM_ONE_CM
    [[maybe_unused]] static jobject get_field_SWIM_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "SWIM_ONE_CM", "field_15423", "SWIM_ONE_CM", "f_12924_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#SWIM_ONE_CM
    [[maybe_unused]] static void set_field_SWIM_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "SWIM_ONE_CM", "field_15423", "SWIM_ONE_CM", "f_12924_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#STRIDER_ONE_CM
    [[maybe_unused]] static jobject get_field_STRIDER_ONE_CM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "STRIDER_ONE_CM", "field_24458", "STRIDER_ONE_CM", "f_12925_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#STRIDER_ONE_CM
    [[maybe_unused]] static void set_field_STRIDER_ONE_CM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "STRIDER_ONE_CM", "field_24458", "STRIDER_ONE_CM", "f_12925_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#JUMP
    [[maybe_unused]] static jobject get_field_JUMP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "JUMP", "field_15428", "JUMP", "f_12926_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#JUMP
    [[maybe_unused]] static void set_field_JUMP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "JUMP", "field_15428", "JUMP", "f_12926_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#DROP
    [[maybe_unused]] static jobject get_field_DROP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "DROP", "field_15406", "DROP", "f_12927_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#DROP
    [[maybe_unused]] static void set_field_DROP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "DROP", "field_15406", "DROP", "f_12927_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#DAMAGE_DEALT
    [[maybe_unused]] static jobject get_field_DAMAGE_DEALT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "DAMAGE_DEALT", "field_15399", "DAMAGE_DEALT", "f_12928_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#DAMAGE_DEALT
    [[maybe_unused]] static void set_field_DAMAGE_DEALT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "DAMAGE_DEALT", "field_15399", "DAMAGE_DEALT", "f_12928_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#DAMAGE_DEALT_ABSORBED
    [[maybe_unused]] static jobject get_field_DAMAGE_DEALT_ABSORBED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "DAMAGE_DEALT_ABSORBED", "field_15408", "DAMAGE_DEALT_ABSORBED", "f_12929_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#DAMAGE_DEALT_ABSORBED
    [[maybe_unused]] static void set_field_DAMAGE_DEALT_ABSORBED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "DAMAGE_DEALT_ABSORBED", "field_15408", "DAMAGE_DEALT_ABSORBED", "f_12929_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#DAMAGE_DEALT_RESISTED
    [[maybe_unused]] static jobject get_field_DAMAGE_DEALT_RESISTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "DAMAGE_DEALT_RESISTED", "field_15397", "DAMAGE_DEALT_RESISTED", "f_12930_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#DAMAGE_DEALT_RESISTED
    [[maybe_unused]] static void set_field_DAMAGE_DEALT_RESISTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "DAMAGE_DEALT_RESISTED", "field_15397", "DAMAGE_DEALT_RESISTED", "f_12930_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#DAMAGE_TAKEN
    [[maybe_unused]] static jobject get_field_DAMAGE_TAKEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "DAMAGE_TAKEN", "field_15388", "DAMAGE_TAKEN", "f_12931_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#DAMAGE_TAKEN
    [[maybe_unused]] static void set_field_DAMAGE_TAKEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "DAMAGE_TAKEN", "field_15388", "DAMAGE_TAKEN", "f_12931_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#DAMAGE_BLOCKED_BY_SHIELD
    [[maybe_unused]] static jobject get_field_DAMAGE_BLOCKED_BY_SHIELD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "DAMAGE_BLOCKED_BY_SHIELD", "field_15380", "DAMAGE_BLOCKED_BY_SHIELD", "f_12932_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#DAMAGE_BLOCKED_BY_SHIELD
    [[maybe_unused]] static void set_field_DAMAGE_BLOCKED_BY_SHIELD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "DAMAGE_BLOCKED_BY_SHIELD", "field_15380", "DAMAGE_BLOCKED_BY_SHIELD", "f_12932_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#DAMAGE_ABSORBED
    [[maybe_unused]] static jobject get_field_DAMAGE_ABSORBED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "DAMAGE_ABSORBED", "field_15365", "DAMAGE_ABSORBED", "f_12933_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#DAMAGE_ABSORBED
    [[maybe_unused]] static void set_field_DAMAGE_ABSORBED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "DAMAGE_ABSORBED", "field_15365", "DAMAGE_ABSORBED", "f_12933_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#DAMAGE_RESISTED
    [[maybe_unused]] static jobject get_field_DAMAGE_RESISTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "DAMAGE_RESISTED", "field_15425", "DAMAGE_RESISTED", "f_12934_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#DAMAGE_RESISTED
    [[maybe_unused]] static void set_field_DAMAGE_RESISTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "DAMAGE_RESISTED", "field_15425", "DAMAGE_RESISTED", "f_12934_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#DEATHS
    [[maybe_unused]] static jobject get_field_DEATHS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "DEATHS", "field_15421", "DEATHS", "f_12935_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#DEATHS
    [[maybe_unused]] static void set_field_DEATHS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "DEATHS", "field_15421", "DEATHS", "f_12935_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#MOB_KILLS
    [[maybe_unused]] static jobject get_field_MOB_KILLS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "MOB_KILLS", "field_15414", "MOB_KILLS", "f_12936_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#MOB_KILLS
    [[maybe_unused]] static void set_field_MOB_KILLS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "MOB_KILLS", "field_15414", "MOB_KILLS", "f_12936_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#ANIMALS_BRED
    [[maybe_unused]] static jobject get_field_ANIMALS_BRED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "ANIMALS_BRED", "field_15410", "ANIMALS_BRED", "f_12937_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#ANIMALS_BRED
    [[maybe_unused]] static void set_field_ANIMALS_BRED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "ANIMALS_BRED", "field_15410", "ANIMALS_BRED", "f_12937_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#PLAYER_KILLS
    [[maybe_unused]] static jobject get_field_PLAYER_KILLS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "PLAYER_KILLS", "field_15404", "PLAYER_KILLS", "f_12938_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#PLAYER_KILLS
    [[maybe_unused]] static void set_field_PLAYER_KILLS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "PLAYER_KILLS", "field_15404", "PLAYER_KILLS", "f_12938_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#FISH_CAUGHT
    [[maybe_unused]] static jobject get_field_FISH_CAUGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "FISH_CAUGHT", "field_15391", "FISH_CAUGHT", "f_12939_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#FISH_CAUGHT
    [[maybe_unused]] static void set_field_FISH_CAUGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "FISH_CAUGHT", "field_15391", "FISH_CAUGHT", "f_12939_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#TALKED_TO_VILLAGER
    [[maybe_unused]] static jobject get_field_TALKED_TO_VILLAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "TALKED_TO_VILLAGER", "field_15384", "TALKED_TO_VILLAGER", "f_12940_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#TALKED_TO_VILLAGER
    [[maybe_unused]] static void set_field_TALKED_TO_VILLAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "TALKED_TO_VILLAGER", "field_15384", "TALKED_TO_VILLAGER", "f_12940_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#TRADED_WITH_VILLAGER
    [[maybe_unused]] static jobject get_field_TRADED_WITH_VILLAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "TRADED_WITH_VILLAGER", "field_15378", "TRADED_WITH_VILLAGER", "f_12941_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#TRADED_WITH_VILLAGER
    [[maybe_unused]] static void set_field_TRADED_WITH_VILLAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "TRADED_WITH_VILLAGER", "field_15378", "TRADED_WITH_VILLAGER", "f_12941_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#EAT_CAKE_SLICE
    [[maybe_unused]] static jobject get_field_EAT_CAKE_SLICE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "EAT_CAKE_SLICE", "field_15369", "EAT_CAKE_SLICE", "f_12942_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#EAT_CAKE_SLICE
    [[maybe_unused]] static void set_field_EAT_CAKE_SLICE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "EAT_CAKE_SLICE", "field_15369", "EAT_CAKE_SLICE", "f_12942_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#FILL_CAULDRON
    [[maybe_unused]] static jobject get_field_FILL_CAULDRON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "FILL_CAULDRON", "field_15430", "FILL_CAULDRON", "f_12943_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#FILL_CAULDRON
    [[maybe_unused]] static void set_field_FILL_CAULDRON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "FILL_CAULDRON", "field_15430", "FILL_CAULDRON", "f_12943_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#USE_CAULDRON
    [[maybe_unused]] static jobject get_field_USE_CAULDRON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "USE_CAULDRON", "field_15373", "USE_CAULDRON", "f_12944_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#USE_CAULDRON
    [[maybe_unused]] static void set_field_USE_CAULDRON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "USE_CAULDRON", "field_15373", "USE_CAULDRON", "f_12944_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#CLEAN_ARMOR
    [[maybe_unused]] static jobject get_field_CLEAN_ARMOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "CLEAN_ARMOR", "field_15382", "CLEAN_ARMOR", "f_12945_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#CLEAN_ARMOR
    [[maybe_unused]] static void set_field_CLEAN_ARMOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "CLEAN_ARMOR", "field_15382", "CLEAN_ARMOR", "f_12945_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#CLEAN_BANNER
    [[maybe_unused]] static jobject get_field_CLEAN_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "CLEAN_BANNER", "field_15390", "CLEAN_BANNER", "f_12946_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#CLEAN_BANNER
    [[maybe_unused]] static void set_field_CLEAN_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "CLEAN_BANNER", "field_15390", "CLEAN_BANNER", "f_12946_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#CLEAN_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_CLEAN_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "CLEAN_SHULKER_BOX", "field_15398", "CLEAN_SHULKER_BOX", "f_12947_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#CLEAN_SHULKER_BOX
    [[maybe_unused]] static void set_field_CLEAN_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "CLEAN_SHULKER_BOX", "field_15398", "CLEAN_SHULKER_BOX", "f_12947_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_BREWINGSTAND
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_BREWINGSTAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "INTERACT_WITH_BREWINGSTAND", "field_15407", "INTERACT_WITH_BREWINGSTAND", "f_12948_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_BREWINGSTAND
    [[maybe_unused]] static void set_field_INTERACT_WITH_BREWINGSTAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "INTERACT_WITH_BREWINGSTAND", "field_15407", "INTERACT_WITH_BREWINGSTAND", "f_12948_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_BEACON
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_BEACON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "INTERACT_WITH_BEACON", "field_15416", "INTERACT_WITH_BEACON", "f_12955_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_BEACON
    [[maybe_unused]] static void set_field_INTERACT_WITH_BEACON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "INTERACT_WITH_BEACON", "field_15416", "INTERACT_WITH_BEACON", "f_12955_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INSPECT_DROPPER
    [[maybe_unused]] static jobject get_field_INSPECT_DROPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "INSPECT_DROPPER", "field_15367", "INSPECT_DROPPER", "f_12956_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INSPECT_DROPPER
    [[maybe_unused]] static void set_field_INSPECT_DROPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "INSPECT_DROPPER", "field_15367", "INSPECT_DROPPER", "f_12956_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INSPECT_HOPPER
    [[maybe_unused]] static jobject get_field_INSPECT_HOPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "INSPECT_HOPPER", "field_15366", "INSPECT_HOPPER", "f_12957_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INSPECT_HOPPER
    [[maybe_unused]] static void set_field_INSPECT_HOPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "INSPECT_HOPPER", "field_15366", "INSPECT_HOPPER", "f_12957_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INSPECT_DISPENSER
    [[maybe_unused]] static jobject get_field_INSPECT_DISPENSER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "INSPECT_DISPENSER", "field_15371", "INSPECT_DISPENSER", "f_12958_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INSPECT_DISPENSER
    [[maybe_unused]] static void set_field_INSPECT_DISPENSER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "INSPECT_DISPENSER", "field_15371", "INSPECT_DISPENSER", "f_12958_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#PLAY_NOTEBLOCK
    [[maybe_unused]] static jobject get_field_PLAY_NOTEBLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "PLAY_NOTEBLOCK", "field_15385", "PLAY_NOTEBLOCK", "f_12959_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#PLAY_NOTEBLOCK
    [[maybe_unused]] static void set_field_PLAY_NOTEBLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "PLAY_NOTEBLOCK", "field_15385", "PLAY_NOTEBLOCK", "f_12959_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#TUNE_NOTEBLOCK
    [[maybe_unused]] static jobject get_field_TUNE_NOTEBLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "TUNE_NOTEBLOCK", "field_15393", "TUNE_NOTEBLOCK", "f_12960_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#TUNE_NOTEBLOCK
    [[maybe_unused]] static void set_field_TUNE_NOTEBLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "TUNE_NOTEBLOCK", "field_15393", "TUNE_NOTEBLOCK", "f_12960_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#POT_FLOWER
    [[maybe_unused]] static jobject get_field_POT_FLOWER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "POT_FLOWER", "field_15412", "POT_FLOWER", "f_12961_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#POT_FLOWER
    [[maybe_unused]] static void set_field_POT_FLOWER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "POT_FLOWER", "field_15412", "POT_FLOWER", "f_12961_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#TRIGGER_TRAPPED_CHEST
    [[maybe_unused]] static jobject get_field_TRIGGER_TRAPPED_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "TRIGGER_TRAPPED_CHEST", "field_15402", "TRIGGER_TRAPPED_CHEST", "f_12962_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#TRIGGER_TRAPPED_CHEST
    [[maybe_unused]] static void set_field_TRIGGER_TRAPPED_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "TRIGGER_TRAPPED_CHEST", "field_15402", "TRIGGER_TRAPPED_CHEST", "f_12962_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#OPEN_ENDERCHEST
    [[maybe_unused]] static jobject get_field_OPEN_ENDERCHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "OPEN_ENDERCHEST", "field_15424", "OPEN_ENDERCHEST", "f_12963_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#OPEN_ENDERCHEST
    [[maybe_unused]] static void set_field_OPEN_ENDERCHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "OPEN_ENDERCHEST", "field_15424", "OPEN_ENDERCHEST", "f_12963_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#ENCHANT_ITEM
    [[maybe_unused]] static jobject get_field_ENCHANT_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "ENCHANT_ITEM", "field_15420", "ENCHANT_ITEM", "f_12964_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#ENCHANT_ITEM
    [[maybe_unused]] static void set_field_ENCHANT_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "ENCHANT_ITEM", "field_15420", "ENCHANT_ITEM", "f_12964_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#PLAY_RECORD
    [[maybe_unused]] static jobject get_field_PLAY_RECORD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "PLAY_RECORD", "field_15375", "PLAY_RECORD", "f_12965_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#PLAY_RECORD
    [[maybe_unused]] static void set_field_PLAY_RECORD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "PLAY_RECORD", "field_15375", "PLAY_RECORD", "f_12965_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_FURNACE
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_FURNACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "INTERACT_WITH_FURNACE", "field_15379", "INTERACT_WITH_FURNACE", "f_12966_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_FURNACE
    [[maybe_unused]] static void set_field_INTERACT_WITH_FURNACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "INTERACT_WITH_FURNACE", "field_15379", "INTERACT_WITH_FURNACE", "f_12966_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_CRAFTING_TABLE
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_CRAFTING_TABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "INTERACT_WITH_CRAFTING_TABLE", "field_15368", "INTERACT_WITH_CRAFTING_TABLE", "f_12967_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_CRAFTING_TABLE
    [[maybe_unused]] static void set_field_INTERACT_WITH_CRAFTING_TABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "INTERACT_WITH_CRAFTING_TABLE", "field_15368", "INTERACT_WITH_CRAFTING_TABLE", "f_12967_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#OPEN_CHEST
    [[maybe_unused]] static jobject get_field_OPEN_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "OPEN_CHEST", "field_15395", "OPEN_CHEST", "f_12968_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#OPEN_CHEST
    [[maybe_unused]] static void set_field_OPEN_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "OPEN_CHEST", "field_15395", "OPEN_CHEST", "f_12968_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#SLEEP_IN_BED
    [[maybe_unused]] static jobject get_field_SLEEP_IN_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "SLEEP_IN_BED", "field_15381", "SLEEP_IN_BED", "f_12969_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#SLEEP_IN_BED
    [[maybe_unused]] static void set_field_SLEEP_IN_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "SLEEP_IN_BED", "field_15381", "SLEEP_IN_BED", "f_12969_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#OPEN_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_OPEN_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "OPEN_SHULKER_BOX", "field_15418", "OPEN_SHULKER_BOX", "f_12970_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#OPEN_SHULKER_BOX
    [[maybe_unused]] static void set_field_OPEN_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "OPEN_SHULKER_BOX", "field_15418", "OPEN_SHULKER_BOX", "f_12970_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#OPEN_BARREL
    [[maybe_unused]] static jobject get_field_OPEN_BARREL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "OPEN_BARREL", "field_17271", "OPEN_BARREL", "f_12971_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#OPEN_BARREL
    [[maybe_unused]] static void set_field_OPEN_BARREL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "OPEN_BARREL", "field_17271", "OPEN_BARREL", "f_12971_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_BLAST_FURNACE
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_BLAST_FURNACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "INTERACT_WITH_BLAST_FURNACE", "field_17272", "INTERACT_WITH_BLAST_FURNACE", "f_12972_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_BLAST_FURNACE
    [[maybe_unused]] static void set_field_INTERACT_WITH_BLAST_FURNACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "INTERACT_WITH_BLAST_FURNACE", "field_17272", "INTERACT_WITH_BLAST_FURNACE", "f_12972_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_SMOKER
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_SMOKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "INTERACT_WITH_SMOKER", "field_17273", "INTERACT_WITH_SMOKER", "f_12973_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_SMOKER
    [[maybe_unused]] static void set_field_INTERACT_WITH_SMOKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "INTERACT_WITH_SMOKER", "field_17273", "INTERACT_WITH_SMOKER", "f_12973_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_LECTERN
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_LECTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "INTERACT_WITH_LECTERN", "field_17485", "INTERACT_WITH_LECTERN", "f_12974_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_LECTERN
    [[maybe_unused]] static void set_field_INTERACT_WITH_LECTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "INTERACT_WITH_LECTERN", "field_17485", "INTERACT_WITH_LECTERN", "f_12974_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_CAMPFIRE
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_CAMPFIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "INTERACT_WITH_CAMPFIRE", "field_17486", "INTERACT_WITH_CAMPFIRE", "f_12975_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_CAMPFIRE
    [[maybe_unused]] static void set_field_INTERACT_WITH_CAMPFIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "INTERACT_WITH_CAMPFIRE", "field_17486", "INTERACT_WITH_CAMPFIRE", "f_12975_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_CARTOGRAPHY_TABLE
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_CARTOGRAPHY_TABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "INTERACT_WITH_CARTOGRAPHY_TABLE", "field_19252", "INTERACT_WITH_CARTOGRAPHY_TABLE", "f_12976_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_CARTOGRAPHY_TABLE
    [[maybe_unused]] static void set_field_INTERACT_WITH_CARTOGRAPHY_TABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "INTERACT_WITH_CARTOGRAPHY_TABLE", "field_19252", "INTERACT_WITH_CARTOGRAPHY_TABLE", "f_12976_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_LOOM
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_LOOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "INTERACT_WITH_LOOM", "field_19253", "INTERACT_WITH_LOOM", "f_12977_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_LOOM
    [[maybe_unused]] static void set_field_INTERACT_WITH_LOOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "INTERACT_WITH_LOOM", "field_19253", "INTERACT_WITH_LOOM", "f_12977_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_STONECUTTER
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_STONECUTTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "INTERACT_WITH_STONECUTTER", "field_19254", "INTERACT_WITH_STONECUTTER", "f_12978_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_STONECUTTER
    [[maybe_unused]] static void set_field_INTERACT_WITH_STONECUTTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "INTERACT_WITH_STONECUTTER", "field_19254", "INTERACT_WITH_STONECUTTER", "f_12978_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#BELL_RING
    [[maybe_unused]] static jobject get_field_BELL_RING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "BELL_RING", "field_19255", "BELL_RING", "f_12979_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#BELL_RING
    [[maybe_unused]] static void set_field_BELL_RING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "BELL_RING", "field_19255", "BELL_RING", "f_12979_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#RAID_TRIGGER
    [[maybe_unused]] static jobject get_field_RAID_TRIGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "RAID_TRIGGER", "field_19256", "RAID_TRIGGER", "f_12980_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#RAID_TRIGGER
    [[maybe_unused]] static void set_field_RAID_TRIGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "RAID_TRIGGER", "field_19256", "RAID_TRIGGER", "f_12980_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#RAID_WIN
    [[maybe_unused]] static jobject get_field_RAID_WIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "RAID_WIN", "field_19257", "RAID_WIN", "f_12950_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#RAID_WIN
    [[maybe_unused]] static void set_field_RAID_WIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "RAID_WIN", "field_19257", "RAID_WIN", "f_12950_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_ANVIL
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_ANVIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "INTERACT_WITH_ANVIL", "field_21778", "INTERACT_WITH_ANVIL", "f_12951_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_ANVIL
    [[maybe_unused]] static void set_field_INTERACT_WITH_ANVIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "INTERACT_WITH_ANVIL", "field_21778", "INTERACT_WITH_ANVIL", "f_12951_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_GRINDSTONE
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_GRINDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "INTERACT_WITH_GRINDSTONE", "field_21779", "INTERACT_WITH_GRINDSTONE", "f_12952_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_GRINDSTONE
    [[maybe_unused]] static void set_field_INTERACT_WITH_GRINDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "INTERACT_WITH_GRINDSTONE", "field_21779", "INTERACT_WITH_GRINDSTONE", "f_12952_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#TARGET_HIT
    [[maybe_unused]] static jobject get_field_TARGET_HIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "TARGET_HIT", "field_22413", "TARGET_HIT", "f_12953_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#TARGET_HIT
    [[maybe_unused]] static void set_field_TARGET_HIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "TARGET_HIT", "field_22413", "TARGET_HIT", "f_12953_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.stat.Stats#INTERACT_WITH_SMITHING_TABLE
    [[maybe_unused]] static jobject get_field_INTERACT_WITH_SMITHING_TABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "INTERACT_WITH_SMITHING_TABLE", "field_22464", "INTERACT_WITH_SMITHING_TABLE", "f_12954_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.stat.Stats#INTERACT_WITH_SMITHING_TABLE
    [[maybe_unused]] static void set_field_INTERACT_WITH_SMITHING_TABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "INTERACT_WITH_SMITHING_TABLE", "field_22464", "INTERACT_WITH_SMITHING_TABLE", "f_12954_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeCustomStat", "method_15021", "register", "m_13007_"), "(Ljava/lang/String;Lavx;)Lakr;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeRegistryStatType", "method_15020", "registerType", "m_13010_"), "(Ljava/lang/String;Ljz;)Lavy;");
    }

    static jobject registerType(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_registerType();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_STAT_STATS_HPP