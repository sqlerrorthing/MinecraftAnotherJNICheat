// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STAT_STATHANDLER_HPP
#define NET_MINECRAFT_STAT_STATHANDLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.stat.StatHandler
 * Remapped: awa
 */
namespace StatHandler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("awa", "net/minecraft/stats/StatsCounter", "net/minecraft/class_3469", "net/minecraft/stat/StatHandler", "net/minecraft/src/C_136_"));
        }
        return cachedClass;
    };

    // getter for protected field net.minecraft.stat.StatHandler#statMap
    static jobject get_field_statMap(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "stats", "field_15431", "statMap", "f_13013_"), "Lit/unimi/dsi/fastutil/objects/Object2IntMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.stat.StatHandler#statMap
    static void set_field_statMap(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "stats", "field_15431", "statMap", "f_13013_"), "Lit/unimi/dsi/fastutil/objects/Object2IntMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_increaseStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "increment", "method_15022", "increaseStat", "m_13023_"), "(Lcmx;Lavw;I)V");
    }

    static void increaseStat(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_increaseStat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setValue", "method_15023", "setStat", "m_6085_"), "(Lcmx;Lavw;I)V");
    }

    static void setStat(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_setStat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getValue", "method_15024", "getStat", "m_13017_"), "(Lavy;Ljava/lang/Object;)I");
    }

    static jint getStat(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getStat();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getValue", "method_15025", "getStat", "m_13015_"), "(Lavw;)I");
    }

    static jint _getStat(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getStat();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_STAT_STATHANDLER_HPP