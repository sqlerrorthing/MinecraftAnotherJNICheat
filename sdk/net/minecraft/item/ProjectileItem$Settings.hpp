// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_PROJECTILEITEM$SETTINGS_HPP
#define NET_MINECRAFT_ITEM_PROJECTILEITEM$SETTINGS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.ProjectileItem$Settings
 * Remapped: cvm$a
 */
namespace ProjectileItem$Settings {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cvm$a", "net/minecraft/world/item/ProjectileItem$DispenseConfig", "net/minecraft/class_9463$class_9464", "net/minecraft/item/ProjectileItem$Settings", "net/minecraft/src/C_313411_$C_313744_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.item.ProjectileItem$Settings#positionFunction
    static jobject get_field_positionFunction(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "positionFunction", "comp_2544", "positionFunction", "f_316313_"), "Lcvm$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ProjectileItem$Settings#positionFunction
    static void set_field_positionFunction(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "positionFunction", "comp_2544", "positionFunction", "f_316313_"), "Lcvm$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ProjectileItem$Settings#uncertainty
    static jfloat get_field_uncertainty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "uncertainty", "comp_2545", "uncertainty", "f_315383_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ProjectileItem$Settings#uncertainty
    static void set_field_uncertainty(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "uncertainty", "comp_2545", "uncertainty", "f_315383_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ProjectileItem$Settings#power
    static jfloat get_field_power(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "power", "comp_2546", "power", "f_317028_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ProjectileItem$Settings#power
    static void set_field_power(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "power", "comp_2546", "power", "f_317028_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ProjectileItem$Settings#overrideDispenseEvent
    static jobject get_field_overrideDispenseEvent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "overrideDispenseEvent", "comp_2547", "overrideDispenseEvent", "f_314791_"), "Ljava/util/OptionalInt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ProjectileItem$Settings#overrideDispenseEvent
    static void set_field_overrideDispenseEvent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "overrideDispenseEvent", "comp_2547", "overrideDispenseEvent", "f_314791_"), "Ljava/util/OptionalInt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ProjectileItem$Settings#DEFAULT
    [[maybe_unused]] static jobject get_field_DEFAULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT", "field_50147", "DEFAULT", "f_316643_"), "Lcvm$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ProjectileItem$Settings#DEFAULT
    [[maybe_unused]] static void set_field_DEFAULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT", "field_50147", "DEFAULT", "f_316643_"), "Lcvm$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_builder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "builder", "method_58663", "builder", "m_321505_"), "()Lcvm$a$a;");
    }

    static jobject builder() {
       const auto clazz = self();
       const auto methodID = methodID_builder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID__positionFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "positionFunction", "comp_2544", "positionFunction", "f_316313_"), "()Lcvm$b;");
    }

    static jobject _positionFunction(const jobject& obj) {
                
       const auto methodID = methodID__positionFunction();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__uncertainty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "uncertainty", "comp_2545", "uncertainty", "f_315383_"), "()F");
    }

    static jfloat _uncertainty(const jobject& obj) {
                
       const auto methodID = methodID__uncertainty();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__power() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "power", "comp_2546", "power", "f_317028_"), "()F");
    }

    static jfloat _power(const jobject& obj) {
                
       const auto methodID = methodID__power();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__overrideDispenseEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "overrideDispenseEvent", "comp_2547", "overrideDispenseEvent", "f_314791_"), "()Ljava/util/OptionalInt;");
    }

    static jobject _overrideDispenseEvent(const jobject& obj) {
                
       const auto methodID = methodID__overrideDispenseEvent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ITEM_PROJECTILEITEM$SETTINGS_HPP