// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_WINDCHARGEITEM_HPP
#define NET_MINECRAFT_ITEM_WINDCHARGEITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.WindChargeItem
 * Remapped: cwp
 */
namespace WindChargeItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cwp", "net/minecraft/world/item/WindChargeItem", "net/minecraft/class_9239", "net/minecraft/item/WindChargeItem", "net/minecraft/src/C_313648_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.item.WindChargeItem#COOLDOWN
    [[maybe_unused]] static jint get_field_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "COOLDOWN", "field_49099", "COOLDOWN", "f_315559_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.WindChargeItem#COOLDOWN
    [[maybe_unused]] static void set_field_COOLDOWN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "COOLDOWN", "field_49099", "COOLDOWN", "f_315559_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_use() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "use", "method_7836", "use", "m_7203_"), "(Ldcw;Lcmx;Lbqq;)Lbqs;");
    }

    static jobject use(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_use();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "asProjectile", "method_58648", "createEntity", "m_319847_"), "(Ldcw;Ljw;Lcuq;Lji;)Lcnp;");
    }

    static jobject createEntity(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_createEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_initializeProjectile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shoot", "method_58654", "initializeProjectile", "m_319015_"), "(Lcnp;DDDFF)V");
    }

    static void initializeProjectile(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jfloat& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID_initializeProjectile();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getProjectileSettings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "createDispenseConfig", "method_58653", "getProjectileSettings", "m_320420_"), "()Lcvm$a;");
    }

    static jobject getProjectileSettings(const jobject& obj) {
                
       const auto methodID = methodID_getProjectileSettings();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ITEM_WINDCHARGEITEM_HPP