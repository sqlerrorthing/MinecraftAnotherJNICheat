// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_SPYGLASSITEM_HPP
#define NET_MINECRAFT_ITEM_SPYGLASSITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.SpyglassItem
 * Remapped: cwd
 */
namespace SpyglassItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cwd", "net/minecraft/world/item/SpyglassItem", "net/minecraft/class_5538", "net/minecraft/item/SpyglassItem", "net/minecraft/src/C_141175_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.item.SpyglassItem#MAX_USE_TIME
    [[maybe_unused]] static jint get_field_MAX_USE_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "USE_DURATION", "field_30921", "MAX_USE_TIME", "f_151202_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.SpyglassItem#MAX_USE_TIME
    [[maybe_unused]] static void set_field_MAX_USE_TIME(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "USE_DURATION", "field_30921", "MAX_USE_TIME", "f_151202_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.SpyglassItem#FOV_MULTIPLIER
    [[maybe_unused]] static jfloat get_field_FOV_MULTIPLIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ZOOM_FOV_MODIFIER", "field_30922", "FOV_MULTIPLIER", "f_151203_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.SpyglassItem#FOV_MULTIPLIER
    [[maybe_unused]] static void set_field_FOV_MULTIPLIER(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ZOOM_FOV_MODIFIER", "field_30922", "FOV_MULTIPLIER", "f_151203_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    static jmethodID methodID_getMaxUseTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getUseDuration", "method_7881", "getMaxUseTime", "m_8105_"), "(Lcuq;Lbtn;)I");
    }

    static jint getMaxUseTime(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getMaxUseTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getUseAction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getUseAnimation", "method_7853", "getUseAction", "m_6164_"), "(Lcuq;)Lcwo;");
    }

    static jobject getUseAction(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getUseAction();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_use() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "use", "method_7836", "use", "m_7203_"), "(Ldcw;Lcmx;Lbqq;)Lbqs;");
    }

    static jobject use(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_use();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_finishUsing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finishUsingItem", "method_7861", "finishUsing", "m_5922_"), "(Lcuq;Ldcw;Lbtn;)Lcuq;");
    }

    static jobject finishUsing(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_finishUsing();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onStoppedUsing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "releaseUsing", "method_7840", "onStoppedUsing", "m_5551_"), "(Lcuq;Ldcw;Lbtn;I)V");
    }

    static void onStoppedUsing(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_onStoppedUsing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_playStopUsingSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stopUsing", "method_31582", "playStopUsingSound", "m_151206_"), "(Lbtn;)V");
    }

    static void playStopUsingSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_playStopUsingSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ITEM_SPYGLASSITEM_HPP