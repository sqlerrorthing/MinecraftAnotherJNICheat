// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_ELYTRAITEM_HPP
#define NET_MINECRAFT_ITEM_ELYTRAITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.ElytraItem
 * Remapped: ctm
 */
namespace ElytraItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ctm", "net/minecraft/world/item/ElytraItem", "net/minecraft/class_1770", "net/minecraft/item/ElytraItem", "net/minecraft/src/C_1360_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_isUsable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("i", "isFlyEnabled", "method_7804", "isUsable", "m_41140_"), "(Lcuq;)Z");
    }

    static jboolean isUsable(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isUsable();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_canRepair() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isValidRepairItem", "method_7878", "canRepair", "m_6832_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean canRepair(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canRepair();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_use() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "use", "method_7836", "use", "m_7203_"), "(Ldcw;Lcmx;Lbqq;)Lbqs;");
    }

    static jobject use(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_use();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getEquipSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getEquipSound", "method_31570", "getEquipSound", "m_150681_"), "()Ljm;");
    }

    static jobject getEquipSound(const jobject& obj) {
                
       const auto methodID = methodID_getEquipSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSlotType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getEquipmentSlot", "method_7685", "getSlotType", "m_40402_"), "()Lbsy;");
    }

    static jobject getSlotType(const jobject& obj) {
                
       const auto methodID = methodID_getSlotType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ITEM_ELYTRAITEM_HPP