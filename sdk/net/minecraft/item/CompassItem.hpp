// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_COMPASSITEM_HPP
#define NET_MINECRAFT_ITEM_COMPASSITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.CompassItem
 * Remapped: csy
 */
namespace CompassItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("csy", "net/minecraft/world/item/CompassItem", "net/minecraft/class_1759", "net/minecraft/item/CompassItem", "net/minecraft/src/C_1334_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_createSpawnPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpawnPosition", "method_43123", "createSpawnPos", "m_220019_"), "(Ldcw;)Ljl;");
    }

    static jobject createSpawnPos(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createSpawnPos();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasGlint() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d_", "isFoil", "method_7886", "hasGlint", "m_5812_"), "(Lcuq;)Z");
    }

    static jboolean hasGlint(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_hasGlint();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_inventoryTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "inventoryTick", "method_7888", "inventoryTick", "m_6883_"), "(Lcuq;Ldcw;Lbsr;IZ)V");
    }

    static void inventoryTick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jboolean& arg4) {
                
       const auto methodID = methodID_inventoryTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_useOnBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "useOn", "method_7884", "useOnBlock", "m_6225_"), "(Lcyf;)Lbqr;");
    }

    static jobject useOnBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_useOnBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTranslationKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getDescriptionId", "method_7866", "getTranslationKey", "m_5671_"), "(Lcuq;)Ljava/lang/String;");
    }

    static jobject getTranslationKey(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTranslationKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ITEM_COMPASSITEM_HPP