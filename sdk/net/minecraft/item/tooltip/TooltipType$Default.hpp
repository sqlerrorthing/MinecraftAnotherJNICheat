// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_TOOLTIP_TOOLTIPTYPE$DEFAULT_HPP
#define NET_MINECRAFT_ITEM_TOOLTIP_TOOLTIPTYPE$DEFAULT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.tooltip.TooltipType$Default
 * Remapped: cwm$a
 */
namespace TooltipType$Default {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cwm$a", "net/minecraft/world/item/TooltipFlag$Default", "net/minecraft/class_1836$class_1837", "net/minecraft/item/tooltip/TooltipType$Default", "net/minecraft/src/C_1431_$C_1432_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.item.tooltip.TooltipType$Default#advanced
    static jboolean get_field_advanced(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "advanced", "comp_1152", "advanced", "f_43368_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.tooltip.TooltipType$Default#advanced
    static void set_field_advanced(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "advanced", "comp_1152", "advanced", "f_43368_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.tooltip.TooltipType$Default#creative
    static jboolean get_field_creative(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "creative", "comp_1153", "creative", "f_257043_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.tooltip.TooltipType$Default#creative
    static void set_field_creative(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "creative", "comp_1153", "creative", "f_257043_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_isAdvanced() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isAdvanced", "method_8035", "isAdvanced", "m_7050_"), "()Z");
    }

    static jboolean isAdvanced(const jobject& obj) {
                
       const auto methodID = methodID_isAdvanced();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isCreative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isCreative", "method_47370", "isCreative", "m_257552_"), "()Z");
    }

    static jboolean isCreative(const jobject& obj) {
                
       const auto methodID = methodID_isCreative();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_withCreative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "asCreative", "method_47371", "withCreative", "m_257777_"), "()Lcwm$a;");
    }

    static jobject withCreative(const jobject& obj) {
                
       const auto methodID = methodID_withCreative();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__advanced() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "advanced", "comp_1152", "advanced", "f_43368_"), "()Z");
    }

    static jboolean _advanced(const jobject& obj) {
                
       const auto methodID = methodID__advanced();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__creative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "creative", "comp_1153", "creative", "f_257043_"), "()Z");
    }

    static jboolean _creative(const jobject& obj) {
                
       const auto methodID = methodID__creative();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ITEM_TOOLTIP_TOOLTIPTYPE$DEFAULT_HPP