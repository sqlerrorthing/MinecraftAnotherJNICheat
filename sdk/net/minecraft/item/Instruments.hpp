// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_INSTRUMENTS_HPP
#define NET_MINECRAFT_ITEM_INSTRUMENTS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.Instruments
 * Remapped: cuk
 */
namespace Instruments {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cuk", "net/minecraft/world/item/Instruments", "net/minecraft/class_7445", "net/minecraft/item/Instruments", "net/minecraft/src/C_213081_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.item.Instruments#GOAT_HORN_RANGE
    [[maybe_unused]] static jint get_field_GOAT_HORN_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GOAT_HORN_RANGE_BLOCKS", "field_39124", "GOAT_HORN_RANGE", "f_220137_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.Instruments#GOAT_HORN_RANGE
    [[maybe_unused]] static void set_field_GOAT_HORN_RANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GOAT_HORN_RANGE_BLOCKS", "field_39124", "GOAT_HORN_RANGE", "f_220137_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.Instruments#GOAT_HORN_USE_DURATION
    [[maybe_unused]] static jint get_field_GOAT_HORN_USE_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GOAT_HORN_DURATION", "field_39125", "GOAT_HORN_USE_DURATION", "f_220138_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.Instruments#GOAT_HORN_USE_DURATION
    [[maybe_unused]] static void set_field_GOAT_HORN_USE_DURATION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GOAT_HORN_DURATION", "field_39125", "GOAT_HORN_USE_DURATION", "f_220138_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.Instruments#PONDER_GOAT_HORN
    [[maybe_unused]] static jobject get_field_PONDER_GOAT_HORN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PONDER_GOAT_HORN", "field_39126", "PONDER_GOAT_HORN", "f_220139_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.Instruments#PONDER_GOAT_HORN
    [[maybe_unused]] static void set_field_PONDER_GOAT_HORN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PONDER_GOAT_HORN", "field_39126", "PONDER_GOAT_HORN", "f_220139_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.Instruments#SING_GOAT_HORN
    [[maybe_unused]] static jobject get_field_SING_GOAT_HORN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SING_GOAT_HORN", "field_39127", "SING_GOAT_HORN", "f_220140_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.Instruments#SING_GOAT_HORN
    [[maybe_unused]] static void set_field_SING_GOAT_HORN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SING_GOAT_HORN", "field_39127", "SING_GOAT_HORN", "f_220140_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.Instruments#SEEK_GOAT_HORN
    [[maybe_unused]] static jobject get_field_SEEK_GOAT_HORN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SEEK_GOAT_HORN", "field_39128", "SEEK_GOAT_HORN", "f_220141_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.Instruments#SEEK_GOAT_HORN
    [[maybe_unused]] static void set_field_SEEK_GOAT_HORN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SEEK_GOAT_HORN", "field_39128", "SEEK_GOAT_HORN", "f_220141_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.Instruments#FEEL_GOAT_HORN
    [[maybe_unused]] static jobject get_field_FEEL_GOAT_HORN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "FEEL_GOAT_HORN", "field_39129", "FEEL_GOAT_HORN", "f_220142_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.Instruments#FEEL_GOAT_HORN
    [[maybe_unused]] static void set_field_FEEL_GOAT_HORN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "FEEL_GOAT_HORN", "field_39129", "FEEL_GOAT_HORN", "f_220142_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.Instruments#ADMIRE_GOAT_HORN
    [[maybe_unused]] static jobject get_field_ADMIRE_GOAT_HORN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ADMIRE_GOAT_HORN", "field_39130", "ADMIRE_GOAT_HORN", "f_220143_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.Instruments#ADMIRE_GOAT_HORN
    [[maybe_unused]] static void set_field_ADMIRE_GOAT_HORN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ADMIRE_GOAT_HORN", "field_39130", "ADMIRE_GOAT_HORN", "f_220143_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.Instruments#CALL_GOAT_HORN
    [[maybe_unused]] static jobject get_field_CALL_GOAT_HORN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CALL_GOAT_HORN", "field_39131", "CALL_GOAT_HORN", "f_220144_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.Instruments#CALL_GOAT_HORN
    [[maybe_unused]] static void set_field_CALL_GOAT_HORN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CALL_GOAT_HORN", "field_39131", "CALL_GOAT_HORN", "f_220144_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.Instruments#YEARN_GOAT_HORN
    [[maybe_unused]] static jobject get_field_YEARN_GOAT_HORN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "YEARN_GOAT_HORN", "field_39132", "YEARN_GOAT_HORN", "f_220145_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.Instruments#YEARN_GOAT_HORN
    [[maybe_unused]] static void set_field_YEARN_GOAT_HORN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "YEARN_GOAT_HORN", "field_39132", "YEARN_GOAT_HORN", "f_220145_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.Instruments#DREAM_GOAT_HORN
    [[maybe_unused]] static jobject get_field_DREAM_GOAT_HORN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DREAM_GOAT_HORN", "field_39133", "DREAM_GOAT_HORN", "f_220146_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.Instruments#DREAM_GOAT_HORN
    [[maybe_unused]] static void set_field_DREAM_GOAT_HORN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DREAM_GOAT_HORN", "field_39133", "DREAM_GOAT_HORN", "f_220146_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_43714", "of", "m_220150_"), "(Ljava/lang/String;)Lakq;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_registerAndGetDefault() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_43713", "registerAndGetDefault", "m_220148_"), "(Ljz;)Lcui;");
    }

    static jobject registerAndGetDefault(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_registerAndGetDefault();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ITEM_INSTRUMENTS_HPP