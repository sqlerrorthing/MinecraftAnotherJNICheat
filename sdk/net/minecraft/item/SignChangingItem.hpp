// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_SIGNCHANGINGITEM_HPP
#define NET_MINECRAFT_ITEM_SIGNCHANGINGITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.SignChangingItem
 * Remapped: cvv
 */
namespace SignChangingItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cvv", "net/minecraft/world/item/SignApplicator", "net/minecraft/class_8234", "net/minecraft/item/SignChangingItem", "net/minecraft/src/C_276407_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_useOnSign() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryApplyToSign", "method_49798", "useOnSign", "m_276787_"), "(Ldcw;Ldrs;ZLcmx;)Z");
    }

    static jboolean useOnSign(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_useOnSign();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canUseOnSignText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canApplyToSign", "method_49801", "canUseOnSignText", "m_277072_"), "(Ldrt;Lcmx;)Z");
    }

    static jboolean canUseOnSignText(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canUseOnSignText();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ITEM_SIGNCHANGINGITEM_HPP