// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_MACEITEM_HPP
#define NET_MINECRAFT_ITEM_MACEITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.MaceItem
 * Remapped: cvb
 */
namespace MaceItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cvb", "net/minecraft/world/item/MaceItem", "net/minecraft/class_9362", "net/minecraft/item/MaceItem", "net/minecraft/src/C_313549_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.item.MaceItem#ATTACK_DAMAGE_MODIFIER_VALUE
    [[maybe_unused]] static jint get_field_ATTACK_DAMAGE_MODIFIER_VALUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT_ATTACK_DAMAGE", "field_49824", "ATTACK_DAMAGE_MODIFIER_VALUE", "f_315599_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.MaceItem#ATTACK_DAMAGE_MODIFIER_VALUE
    [[maybe_unused]] static void set_field_ATTACK_DAMAGE_MODIFIER_VALUE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT_ATTACK_DAMAGE", "field_49824", "ATTACK_DAMAGE_MODIFIER_VALUE", "f_315599_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.MaceItem#ATTACK_SPEED_MODIFIER_VALUE
    [[maybe_unused]] static jfloat get_field_ATTACK_SPEED_MODIFIER_VALUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DEFAULT_ATTACK_SPEED", "field_49825", "ATTACK_SPEED_MODIFIER_VALUE", "f_314059_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.MaceItem#ATTACK_SPEED_MODIFIER_VALUE
    [[maybe_unused]] static void set_field_ATTACK_SPEED_MODIFIER_VALUE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DEFAULT_ATTACK_SPEED", "field_49825", "ATTACK_SPEED_MODIFIER_VALUE", "f_314059_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.MaceItem#MINING_SPEED_MULTIPLIER
    [[maybe_unused]] static jfloat get_field_MINING_SPEED_MULTIPLIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SMASH_ATTACK_FALL_THRESHOLD", "field_49823", "MINING_SPEED_MULTIPLIER", "f_314421_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.MaceItem#MINING_SPEED_MULTIPLIER
    [[maybe_unused]] static void set_field_MINING_SPEED_MULTIPLIER(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SMASH_ATTACK_FALL_THRESHOLD", "field_49823", "MINING_SPEED_MULTIPLIER", "f_314421_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.MaceItem#field_50141
    [[maybe_unused]] static jfloat get_field_field_50141() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SMASH_ATTACK_HEAVY_THRESHOLD", "field_50141", "field_50141", "f_315869_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.MaceItem#field_50141
    [[maybe_unused]] static void set_field_field_50141(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SMASH_ATTACK_HEAVY_THRESHOLD", "field_50141", "field_50141", "f_315869_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.MaceItem#KNOCKBACK_RANGE
    [[maybe_unused]] static jfloat get_field_KNOCKBACK_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SMASH_ATTACK_KNOCKBACK_RADIUS", "field_49999", "KNOCKBACK_RANGE", "f_315457_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.MaceItem#KNOCKBACK_RANGE
    [[maybe_unused]] static void set_field_KNOCKBACK_RANGE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SMASH_ATTACK_KNOCKBACK_RADIUS", "field_49999", "KNOCKBACK_RANGE", "f_315457_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.MaceItem#KNOCKBACK_POWER
    [[maybe_unused]] static jfloat get_field_KNOCKBACK_POWER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SMASH_ATTACK_KNOCKBACK_POWER", "field_50000", "KNOCKBACK_POWER", "f_315270_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.MaceItem#KNOCKBACK_POWER
    [[maybe_unused]] static void set_field_KNOCKBACK_POWER(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SMASH_ATTACK_KNOCKBACK_POWER", "field_50000", "KNOCKBACK_POWER", "f_315270_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    static jmethodID methodID_createAttributeModifiers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("h", "createAttributes", "method_59532", "createAttributeModifiers", "m_320958_"), "()Lcxn;");
    }

    static jobject createAttributeModifiers() {
       const auto clazz = self();
       const auto methodID = methodID_createAttributeModifiers();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createToolComponent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("k", "createToolProperties", "method_58412", "createToolComponent", "m_324286_"), "()Lcxx;");
    }

    static jobject createToolComponent() {
       const auto clazz = self();
       const auto methodID = methodID_createToolComponent();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_canMine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canAttackBlock", "method_7885", "canMine", "m_6777_"), "(Ldtc;Ldcw;Ljd;Lcmx;)Z");
    }

    static jboolean canMine(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_canMine();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getEnchantability() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getEnchantmentValue", "method_7837", "getEnchantability", "m_6473_"), "()I");
    }

    static jint getEnchantability(const jobject& obj) {
                
       const auto methodID = methodID_getEnchantability();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_postHit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurtEnemy", "method_7873", "postHit", "m_7579_"), "(Lcuq;Lbtn;Lbtn;)Z");
    }

    static jboolean postHit(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_postHit();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_postDamageEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "postHurtEnemy", "method_59978", "postDamageEntity", "m_338515_"), "(Lcuq;Lbtn;Lbtn;)V");
    }

    static void postDamageEntity(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_postDamageEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_canRepair() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isValidRepairItem", "method_7878", "canRepair", "m_6832_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean canRepair(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canRepair();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBonusAttackDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAttackDamageBonus", "method_58403", "getBonusAttackDamage", "m_319585_"), "(Lbsr;FLbrk;)F");
    }

    static jfloat getBonusAttackDamage(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getBonusAttackDamage();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_knockbackNearbyEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "knockback", "method_58411", "knockbackNearbyEntities", "m_322114_"), "(Ldcw;Lcmx;Lbsr;)V");
    }

    static void knockbackNearbyEntities(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_knockbackNearbyEntities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getKnockbackPredicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "knockbackPredicate", "method_58660", "getKnockbackPredicate", "m_321647_"), "(Lcmx;Lbsr;)Ljava/util/function/Predicate;");
    }

    static jobject getKnockbackPredicate(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getKnockbackPredicate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getKnockback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getKnockbackPower", "method_58662", "getKnockback", "m_320432_"), "(Lcmx;Lbtn;Lexc;)D");
    }

    static jdouble getKnockback(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getKnockback();
       return MinecraftSDK::env->CallStaticDoubleMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_shouldDealAdditionalDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canSmashAttack", "method_58659", "shouldDealAdditionalDamage", "m_320829_"), "(Lbtn;)Z");
    }

    static jboolean shouldDealAdditionalDamage(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_shouldDealAdditionalDamage();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ITEM_MACEITEM_HPP