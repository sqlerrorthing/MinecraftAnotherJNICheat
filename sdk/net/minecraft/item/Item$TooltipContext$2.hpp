// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_ITEM$TOOLTIPCONTEXT$2_HPP
#define NET_MINECRAFT_ITEM_ITEM$TOOLTIPCONTEXT$2_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.Item$TooltipContext$2
 * Remapped: cul$b$2
 */
namespace Item$TooltipContext$2 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cul$b$2", "net/minecraft/world/item/Item$TooltipContext$2", "net/minecraft/class_1792$class_9635$2", "net/minecraft/item/Item$TooltipContext$2", "net/minecraft/src/C_1381_$C_313602_$C_313523_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getRegistryLookup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "registries", "method_59527", "getRegistryLookup", "m_320287_"), "()Ljo$a;");
    }

    static jobject getRegistryLookup(const jobject& obj) {
                
       const auto methodID = methodID_getRegistryLookup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getUpdateTickRate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "tickRate", "method_59531", "getUpdateTickRate", "m_319443_"), "()F");
    }

    static jfloat getUpdateTickRate(const jobject& obj) {
                
       const auto methodID = methodID_getUpdateTickRate();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMapState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mapData", "method_59529", "getMapState", "m_319467_"), "(Leqr;)Leqt;");
    }

    static jobject getMapState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getMapState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ITEM_ITEM$TOOLTIPCONTEXT$2_HPP