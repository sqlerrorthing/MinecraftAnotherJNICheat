// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_DYEITEM_HPP
#define NET_MINECRAFT_ITEM_DYEITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.DyeItem
 * Remapped: ctj
 */
namespace DyeItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ctj", "net/minecraft/world/item/DyeItem", "net/minecraft/class_1769", "net/minecraft/item/DyeItem", "net/minecraft/src/C_1354_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.item.DyeItem#DYES
    [[maybe_unused]] static jobject get_field_DYES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ITEM_BY_COLOR", "field_7968", "DYES", "f_41076_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.DyeItem#DYES
    [[maybe_unused]] static void set_field_DYES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ITEM_BY_COLOR", "field_7968", "DYES", "f_41076_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.item.DyeItem#color
    static jobject get_field_color(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "dyeColor", "field_7969", "color", "f_41077_"), "Lcti;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.DyeItem#color
    static void set_field_color(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "dyeColor", "field_7969", "color", "f_41077_"), "Lcti;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_useOnEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "interactLivingEntity", "method_7847", "useOnEntity", "m_6880_"), "(Lcuq;Lcmx;Lbtn;Lbqq;)Lbqr;");
    }

    static jobject useOnEntity(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_useOnEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getDyeColor", "method_7802", "getColor", "m_41089_"), "()Lcti;");
    }

    static jobject getColor(const jobject& obj) {
                
       const auto methodID = methodID_getColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_byColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "byColor", "method_7803", "byColor", "m_41082_"), "(Lcti;)Lctj;");
    }

    static jobject byColor(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_byColor();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_useOnSign() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryApplyToSign", "method_49798", "useOnSign", "m_276787_"), "(Ldcw;Ldrs;ZLcmx;)Z");
    }

    static jboolean useOnSign(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_useOnSign();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_ITEM_DYEITEM_HPP