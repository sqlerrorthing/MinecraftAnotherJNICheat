// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_ITEMGROUPS_HPP
#define NET_MINECRAFT_ITEM_ITEMGROUPS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.ItemGroups
 * Remapped: ctb
 */
namespace ItemGroups {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ctb", "net/minecraft/world/item/CreativeModeTabs", "net/minecraft/class_7706", "net/minecraft/item/ItemGroups", "net/minecraft/src/C_243506_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.item.ItemGroups#INVENTORY_TAB_TEXTURE_ID
    [[maybe_unused]] static jobject get_field_INVENTORY_TAB_TEXTURE_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INVENTORY_BACKGROUND", "field_52022", "INVENTORY_TAB_TEXTURE_ID", "f_337590_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#INVENTORY_TAB_TEXTURE_ID
    [[maybe_unused]] static void set_field_INVENTORY_TAB_TEXTURE_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INVENTORY_BACKGROUND", "field_52022", "INVENTORY_TAB_TEXTURE_ID", "f_337590_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#ITEM_SEARCH_TAB_TEXTURE_ID
    [[maybe_unused]] static jobject get_field_ITEM_SEARCH_TAB_TEXTURE_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SEARCH_BACKGROUND", "field_52023", "ITEM_SEARCH_TAB_TEXTURE_ID", "f_337213_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#ITEM_SEARCH_TAB_TEXTURE_ID
    [[maybe_unused]] static void set_field_ITEM_SEARCH_TAB_TEXTURE_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SEARCH_BACKGROUND", "field_52023", "ITEM_SEARCH_TAB_TEXTURE_ID", "f_337213_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#BUILDING_BLOCKS
    [[maybe_unused]] static jobject get_field_BUILDING_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BUILDING_BLOCKS", "field_40195", "BUILDING_BLOCKS", "f_256788_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#BUILDING_BLOCKS
    [[maybe_unused]] static void set_field_BUILDING_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BUILDING_BLOCKS", "field_40195", "BUILDING_BLOCKS", "f_256788_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#COLORED_BLOCKS
    [[maybe_unused]] static jobject get_field_COLORED_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "COLORED_BLOCKS", "field_41059", "COLORED_BLOCKS", "f_256725_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#COLORED_BLOCKS
    [[maybe_unused]] static void set_field_COLORED_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "COLORED_BLOCKS", "field_41059", "COLORED_BLOCKS", "f_256725_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#NATURAL
    [[maybe_unused]] static jobject get_field_NATURAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NATURAL_BLOCKS", "field_40743", "NATURAL", "f_256776_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#NATURAL
    [[maybe_unused]] static void set_field_NATURAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NATURAL_BLOCKS", "field_40743", "NATURAL", "f_256776_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#FUNCTIONAL
    [[maybe_unused]] static jobject get_field_FUNCTIONAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "FUNCTIONAL_BLOCKS", "field_40197", "FUNCTIONAL", "f_256791_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#FUNCTIONAL
    [[maybe_unused]] static void set_field_FUNCTIONAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "FUNCTIONAL_BLOCKS", "field_40197", "FUNCTIONAL", "f_256791_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#REDSTONE
    [[maybe_unused]] static jobject get_field_REDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "REDSTONE_BLOCKS", "field_40198", "REDSTONE", "f_257028_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#REDSTONE
    [[maybe_unused]] static void set_field_REDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "REDSTONE_BLOCKS", "field_40198", "REDSTONE", "f_257028_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#HOTBAR
    [[maybe_unused]] static jobject get_field_HOTBAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "HOTBAR", "field_40199", "HOTBAR", "f_256917_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#HOTBAR
    [[maybe_unused]] static void set_field_HOTBAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "HOTBAR", "field_40199", "HOTBAR", "f_256917_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#SEARCH
    [[maybe_unused]] static jobject get_field_SEARCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SEARCH", "field_40200", "SEARCH", "f_256750_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#SEARCH
    [[maybe_unused]] static void set_field_SEARCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SEARCH", "field_40200", "SEARCH", "f_256750_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#TOOLS
    [[maybe_unused]] static jobject get_field_TOOLS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TOOLS_AND_UTILITIES", "field_41060", "TOOLS", "f_256869_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#TOOLS
    [[maybe_unused]] static void set_field_TOOLS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TOOLS_AND_UTILITIES", "field_41060", "TOOLS", "f_256869_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#COMBAT
    [[maybe_unused]] static jobject get_field_COMBAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "COMBAT", "field_40202", "COMBAT", "f_256797_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#COMBAT
    [[maybe_unused]] static void set_field_COMBAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "COMBAT", "field_40202", "COMBAT", "f_256797_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#FOOD_AND_DRINK
    [[maybe_unused]] static jobject get_field_FOOD_AND_DRINK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "FOOD_AND_DRINKS", "field_41061", "FOOD_AND_DRINK", "f_256839_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#FOOD_AND_DRINK
    [[maybe_unused]] static void set_field_FOOD_AND_DRINK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "FOOD_AND_DRINKS", "field_41061", "FOOD_AND_DRINK", "f_256839_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#INGREDIENTS
    [[maybe_unused]] static jobject get_field_INGREDIENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "INGREDIENTS", "field_41062", "INGREDIENTS", "f_256968_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#INGREDIENTS
    [[maybe_unused]] static void set_field_INGREDIENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "INGREDIENTS", "field_41062", "INGREDIENTS", "f_256968_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#SPAWN_EGGS
    [[maybe_unused]] static jobject get_field_SPAWN_EGGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SPAWN_EGGS", "field_40205", "SPAWN_EGGS", "f_256731_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#SPAWN_EGGS
    [[maybe_unused]] static void set_field_SPAWN_EGGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SPAWN_EGGS", "field_40205", "SPAWN_EGGS", "f_256731_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#OPERATOR
    [[maybe_unused]] static jobject get_field_OPERATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "OP_BLOCKS", "field_41063", "OPERATOR", "f_256837_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#OPERATOR
    [[maybe_unused]] static void set_field_OPERATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "OP_BLOCKS", "field_41063", "OPERATOR", "f_256837_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#INVENTORY
    [[maybe_unused]] static jobject get_field_INVENTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "INVENTORY", "field_40206", "INVENTORY", "f_257039_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#INVENTORY
    [[maybe_unused]] static void set_field_INVENTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "INVENTORY", "field_40206", "INVENTORY", "f_257039_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#PAINTING_VARIANT_COMPARATOR
    [[maybe_unused]] static jobject get_field_PAINTING_VARIANT_COMPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "PAINTING_COMPARATOR", "field_42465", "PAINTING_VARIANT_COMPARATOR", "f_268478_"), "Ljava/util/Comparator;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#PAINTING_VARIANT_COMPARATOR
    [[maybe_unused]] static void set_field_PAINTING_VARIANT_COMPARATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "PAINTING_COMPARATOR", "field_42465", "PAINTING_VARIANT_COMPARATOR", "f_268478_"), "Ljava/util/Comparator;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemGroups#displayContext
    [[maybe_unused]] static jobject get_field_displayContext() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "CACHED_PARAMETERS", "field_42466", "displayContext", "f_268496_"), "Lcta$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroups#displayContext
    [[maybe_unused]] static void set_field_displayContext(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "CACHED_PARAMETERS", "field_42466", "displayContext", "f_268496_"), "Lcta$d;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createKey", "method_51317", "register", "m_280238_"), "(Ljava/lang/String;)Lakq;");
    }

    static jobject register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_registerAndGetDefault() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_51315", "registerAndGetDefault", "m_280294_"), "(Ljz;)Lcta;");
    }

    static jobject registerAndGetDefault(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_registerAndGetDefault();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_collect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validate", "method_47334", "collect", "m_280019_"), "()V");
    }

    static void collect() {
       const auto clazz = self();
       const auto methodID = methodID_collect();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getDefaultTab() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getDefaultTab", "method_47328", "getDefaultTab", "m_257543_"), "()Lcta;");
    }

    static jobject getDefaultTab() {
       const auto clazz = self();
       const auto methodID = methodID_getDefaultTab();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_addPotions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "generatePotionEffectTypes", "method_45427", "addPotions", "m_269246_"), "(Lcta$e;Ljo;Lcul;Lcta$g;Lcpl;)V");
    }

    static void addPotions(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_addPotions();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_addMaxLevelEnchantedBooks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "generateEnchantmentBookTypesOnlyMaxLevel", "method_45428", "addMaxLevelEnchantedBooks", "m_269182_"), "(Lcta$e;Ljo;Lcta$g;)V");
    }

    static void addMaxLevelEnchantedBooks(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_addMaxLevelEnchantedBooks();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addAllLevelEnchantedBooks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "generateEnchantmentBookTypesAllLevels", "method_45430", "addAllLevelEnchantedBooks", "m_269335_"), "(Lcta$e;Ljo;Lcta$g;)V");
    }

    static void addAllLevelEnchantedBooks(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_addAllLevelEnchantedBooks();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addInstruments() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "generateInstrumentTypes", "method_45426", "addInstruments", "m_269481_"), "(Lcta$e;Ljo;Lcul;Lawu;Lcta$g;)V");
    }

    static void addInstruments(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_addInstruments();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_addSuspiciousStews() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "generateSuspiciousStews", "method_47332", "addSuspiciousStews", "m_257855_"), "(Lcta$e;Lcta$g;)V");
    }

    static void addSuspiciousStews(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_addSuspiciousStews();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addOminousBottles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "generateOminousVials", "method_58652", "addOminousBottles", "m_323700_"), "(Lcta$e;Lcta$g;)V");
    }

    static void addOminousBottles(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_addOminousBottles();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addFireworkRockets() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "generateFireworksAllDurations", "method_47339", "addFireworkRockets", "m_257852_"), "(Lcta$e;Lcta$g;)V");
    }

    static void addFireworkRockets(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_addFireworkRockets();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addPaintings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "generatePresetPaintings", "method_48937", "addPaintings", "m_269255_"), "(Lcta$e;Ljo$a;Ljo$b;Ljava/util/function/Predicate;Lcta$g;)V");
    }

    static void addPaintings(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_addPaintings();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getGroupsToDisplay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "tabs", "method_47335", "getGroupsToDisplay", "m_257388_"), "()Ljava/util/List;");
    }

    static jobject getGroupsToDisplay() {
       const auto clazz = self();
       const auto methodID = methodID_getGroupsToDisplay();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getGroups() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "allTabs", "method_47341", "getGroups", "m_257478_"), "()Ljava/util/List;");
    }

    static jobject getGroups() {
       const auto clazz = self();
       const auto methodID = methodID_getGroups();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_stream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "streamAllTabs", "method_51327", "stream", "m_280350_"), "()Ljava/util/stream/Stream;");
    }

    static jobject stream() {
       const auto clazz = self();
       const auto methodID = methodID_stream();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getSearchGroup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "searchTab", "method_47344", "getSearchGroup", "m_258007_"), "()Lcta;");
    }

    static jobject getSearchGroup() {
       const auto clazz = self();
       const auto methodID = methodID_getSearchGroup();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_updateEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "buildAllTabContents", "method_47337", "updateEntries", "m_269421_"), "(Lcta$d;)V");
    }

    static void updateEntries(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_updateEntries();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_updateDisplayContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tryRebuildTabContents", "method_47330", "updateDisplayContext", "m_269226_"), "(Lcpl;ZLjo$a;)Z");
    }

    static jboolean updateDisplayContext(const jobject& arg0, const jboolean& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_updateDisplayContext();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_ITEM_ITEMGROUPS_HPP