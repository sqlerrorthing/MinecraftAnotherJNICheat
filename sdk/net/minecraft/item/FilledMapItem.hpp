// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_FILLEDMAPITEM_HPP
#define NET_MINECRAFT_ITEM_FILLEDMAPITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.FilledMapItem
 * Remapped: cvc
 */
namespace FilledMapItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cvc", "net/minecraft/world/item/MapItem", "net/minecraft/class_1806", "net/minecraft/item/FilledMapItem", "net/minecraft/src/C_1398_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.item.FilledMapItem#field_30907
    [[maybe_unused]] static jint get_field_field_30907() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "IMAGE_WIDTH", "field_30907", "field_30907", "f_151104_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.FilledMapItem#field_30907
    [[maybe_unused]] static void set_field_field_30907(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "IMAGE_WIDTH", "field_30907", "field_30907", "f_151104_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.FilledMapItem#field_30908
    [[maybe_unused]] static jint get_field_field_30908() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "IMAGE_HEIGHT", "field_30908", "field_30908", "f_151105_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.FilledMapItem#field_30908
    [[maybe_unused]] static void set_field_field_30908(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "IMAGE_HEIGHT", "field_30908", "field_30908", "f_151105_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_createMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_8005", "createMap", "m_42886_"), "(Ldcw;IIBZZ)Lcuq;");
    }

    static jobject createMap(const jobject& arg0, const jint& arg1, const jint& arg2, const jbyte& arg3, const jboolean& arg4, const jboolean& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_createMap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getMapState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getSavedData", "method_7997", "getMapState", "m_151128_"), "(Leqr;Ldcw;)Leqt;");
    }

    static jobject getMapState(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getMapState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getMapState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getSavedData", "method_8001", "getMapState", "m_42853_"), "(Lcuq;Ldcw;)Leqt;");
    }

    static jobject _getMapState(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__getMapState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_allocateMapId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createNewSavedData", "method_32349", "allocateMapId", "m_151120_"), "(Ldcw;IIIZZLakq;)Leqr;");
    }

    static jobject allocateMapId(const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jboolean& arg4, const jboolean& arg5, const jobject& arg6) {
       const auto clazz = self();
       const auto methodID = methodID_allocateMapId();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_updateColors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "update", "method_7998", "updateColors", "m_42893_"), "(Ldcw;Lbsr;Leqt;)V");
    }

    static void updateColors(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateColors();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getFluidStateIfVisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getCorrectStateForFluidBlock", "method_7995", "getFluidStateIfVisible", "m_42900_"), "(Ldcw;Ldtc;Ljd;)Ldtc;");
    }

    static jobject getFluidStateIfVisible(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getFluidStateIfVisible();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isAquaticBiome() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isBiomeWatery", "method_38988", "isAquaticBiome", "m_212251_"), "([ZII)Z");
    }

    static jboolean isAquaticBiome(const jarray& arg0, const jboolean& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_isAquaticBiome();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_fillExplorationMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderBiomePreviewMap", "method_8002", "fillExplorationMap", "m_42850_"), "(Laqu;Lcuq;)V");
    }

    static void fillExplorationMap(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_fillExplorationMap();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_inventoryTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "inventoryTick", "method_7888", "inventoryTick", "m_6883_"), "(Lcuq;Ldcw;Lbsr;IZ)V");
    }

    static void inventoryTick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jboolean& arg4) {
                
       const auto methodID = methodID_inventoryTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_createSyncPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getUpdatePacket", "method_7757", "createSyncPacket", "m_7233_"), "(Lcuq;Ldcw;Lcmx;)Lzg;");
    }

    static jobject createSyncPacket(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_createSyncPacket();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onCraft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onCraftedPostProcess", "method_7843", "onCraft", "m_42912_"), "(Lcuq;Ldcw;)V");
    }

    static void onCraft(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onCraft();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_scale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "scaleMap", "method_7996", "scale", "m_42856_"), "(Lcuq;Ldcw;)V");
    }

    static void scale(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_scale();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_copyMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "lockMap", "method_17442", "copyMap", "m_42897_"), "(Ldcw;Lcuq;)V");
    }

    static void copyMap(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_copyMap();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_appendTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "appendHoverText", "method_7851", "appendTooltip", "m_7373_"), "(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V");
    }

    static void appendTooltip(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_appendTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getIdText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getTooltipForId", "method_53836", "getIdText", "m_294117_"), "(Leqr;)Lwz;");
    }

    static jobject getIdText(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getIdText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_useOnBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "useOn", "method_7884", "useOnBlock", "m_6225_"), "(Lcyf;)Lbqr;");
    }

    static jobject useOnBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_useOnBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ITEM_FILLEDMAPITEM_HPP