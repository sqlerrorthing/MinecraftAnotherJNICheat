// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_ITEMPLACEMENTCONTEXT_HPP
#define NET_MINECRAFT_ITEM_ITEMPLACEMENTCONTEXT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.ItemPlacementContext
 * Remapped: cyd
 */
namespace ItemPlacementContext {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cyd", "net/minecraft/world/item/context/BlockPlaceContext", "net/minecraft/class_1750", "net/minecraft/item/ItemPlacementContext", "net/minecraft/src/C_1445_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.item.ItemPlacementContext#placementPos
    static jobject get_field_placementPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "relativePos", "field_7903", "placementPos", "f_43629_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemPlacementContext#placementPos
    static void set_field_placementPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "relativePos", "field_7903", "placementPos", "f_43629_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.item.ItemPlacementContext#canReplaceExisting
    static jboolean get_field_canReplaceExisting(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "replaceClicked", "field_7904", "canReplaceExisting", "f_43628_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.item.ItemPlacementContext#canReplaceExisting
    static void set_field_canReplaceExisting(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "replaceClicked", "field_7904", "canReplaceExisting", "f_43628_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_offset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "at", "method_16355", "offset", "m_43644_"), "(Lcyd;Ljd;Lji;)Lcyd;");
    }

    static jobject offset(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_offset();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getBlockPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getClickedPos", "method_8037", "getBlockPos", "m_8083_"), "()Ljd;");
    }

    static jobject getBlockPos(const jobject& obj) {
                
       const auto methodID = methodID_getBlockPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canPlace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canPlace", "method_7716", "canPlace", "m_7059_"), "()Z");
    }

    static jboolean canPlace(const jobject& obj) {
                
       const auto methodID = methodID_canPlace();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__canReplaceExisting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "replacingClickedOnBlock", "method_7717", "canReplaceExisting", "m_7058_"), "()Z");
    }

    static jboolean _canReplaceExisting(const jobject& obj) {
                
       const auto methodID = methodID__canReplaceExisting();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayerLookDirection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getNearestLookingDirection", "method_7715", "getPlayerLookDirection", "m_7820_"), "()Lji;");
    }

    static jobject getPlayerLookDirection(const jobject& obj) {
                
       const auto methodID = methodID_getPlayerLookDirection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVerticalPlayerLookDirection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getNearestLookingVerticalDirection", "method_32760", "getVerticalPlayerLookDirection", "m_151260_"), "()Lji;");
    }

    static jobject getVerticalPlayerLookDirection(const jobject& obj) {
                
       const auto methodID = methodID_getVerticalPlayerLookDirection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlacementDirections() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getNearestLookingDirections", "method_7718", "getPlacementDirections", "m_6232_"), "()[Lji;");
    }

    static jobject getPlacementDirections(const jobject& obj) {
                
       const auto methodID = methodID_getPlacementDirections();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ITEM_ITEMPLACEMENTCONTEXT_HPP