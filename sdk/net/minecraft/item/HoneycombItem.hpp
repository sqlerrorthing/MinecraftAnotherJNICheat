// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_HONEYCOMBITEM_HPP
#define NET_MINECRAFT_ITEM_HONEYCOMBITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.HoneycombItem
 * Remapped: cug
 */
namespace HoneycombItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cug", "net/minecraft/world/item/HoneycombItem", "net/minecraft/class_5953", "net/minecraft/item/HoneycombItem", "net/minecraft/src/C_141171_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.item.HoneycombItem#UNWAXED_TO_WAXED_BLOCKS
    [[maybe_unused]] static jobject get_field_UNWAXED_TO_WAXED_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WAXABLES", "field_29560", "UNWAXED_TO_WAXED_BLOCKS", "f_150863_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.HoneycombItem#UNWAXED_TO_WAXED_BLOCKS
    [[maybe_unused]] static void set_field_UNWAXED_TO_WAXED_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WAXABLES", "field_29560", "UNWAXED_TO_WAXED_BLOCKS", "f_150863_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.HoneycombItem#WAXED_TO_UNWAXED_BLOCKS
    [[maybe_unused]] static jobject get_field_WAXED_TO_UNWAXED_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WAX_OFF_BY_BLOCK", "field_29561", "WAXED_TO_UNWAXED_BLOCKS", "f_150864_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.HoneycombItem#WAXED_TO_UNWAXED_BLOCKS
    [[maybe_unused]] static void set_field_WAXED_TO_UNWAXED_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WAX_OFF_BY_BLOCK", "field_29561", "WAXED_TO_UNWAXED_BLOCKS", "f_150864_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_useOnBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "useOn", "method_7884", "useOnBlock", "m_6225_"), "(Lcyf;)Lbqr;");
    }

    static jobject useOnBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_useOnBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWaxedState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getWaxed", "method_34720", "getWaxedState", "m_150878_"), "(Ldtc;)Ljava/util/Optional;");
    }

    static jobject getWaxedState(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getWaxedState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_useOnSign() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryApplyToSign", "method_49798", "useOnSign", "m_276787_"), "(Ldcw;Ldrs;ZLcmx;)Z");
    }

    static jboolean useOnSign(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_useOnSign();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canUseOnSignText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canApplyToSign", "method_49801", "canUseOnSignText", "m_277072_"), "(Ldrt;Lcmx;)Z");
    }

    static jboolean canUseOnSignText(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canUseOnSignText();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ITEM_HONEYCOMBITEM_HPP