// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_BRUSHITEM_HPP
#define NET_MINECRAFT_ITEM_BRUSHITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.BrushItem
 * Remapped: csu
 */
namespace BrushItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("csu", "net/minecraft/world/item/BrushItem", "net/minecraft/class_8162", "net/minecraft/item/BrushItem", "net/minecraft/src/C_271073_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.item.BrushItem#ANIMATION_DURATION
    [[maybe_unused]] static jint get_field_ANIMATION_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ANIMATION_DURATION", "field_43390", "ANIMATION_DURATION", "f_278125_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.BrushItem#ANIMATION_DURATION
    [[maybe_unused]] static void set_field_ANIMATION_DURATION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ANIMATION_DURATION", "field_43390", "ANIMATION_DURATION", "f_278125_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.BrushItem#MAX_BRUSH_TIME
    [[maybe_unused]] static jint get_field_MAX_BRUSH_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "USE_DURATION", "field_42683", "MAX_BRUSH_TIME", "f_271380_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.BrushItem#MAX_BRUSH_TIME
    [[maybe_unused]] static void set_field_MAX_BRUSH_TIME(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "USE_DURATION", "field_42683", "MAX_BRUSH_TIME", "f_271380_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_useOnBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "useOn", "method_7884", "useOnBlock", "m_6225_"), "(Lcyf;)Lbqr;");
    }

    static jobject useOnBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_useOnBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getUseAction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getUseAnimation", "method_7853", "getUseAction", "m_6164_"), "(Lcuq;)Lcwo;");
    }

    static jobject getUseAction(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getUseAction();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMaxUseTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getUseDuration", "method_7881", "getMaxUseTime", "m_8105_"), "(Lcuq;Lbtn;)I");
    }

    static jint getMaxUseTime(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getMaxUseTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_usageTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onUseTick", "method_7852", "usageTick", "m_5929_"), "(Ldcw;Lbtn;Lcuq;I)V");
    }

    static void usageTick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_usageTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getHitResult() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateHitResult", "method_49999", "getHitResult", "m_280200_"), "(Lcmx;)Lexa;");
    }

    static jobject getHitResult(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHitResult();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addDustParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnDustParticles", "method_49184", "addDustParticles", "m_278154_"), "(Ldcw;Lewy;Ldtc;Lexc;Lbtg;)V");
    }

    static void addDustParticles(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_addDustParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
};

#endif // NET_MINECRAFT_ITEM_BRUSHITEM_HPP