// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_FISHINGRODITEM_HPP
#define NET_MINECRAFT_ITEM_FISHINGRODITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.FishingRodItem
 * Remapped: ctx
 */
namespace FishingRodItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ctx", "net/minecraft/world/item/FishingRodItem", "net/minecraft/class_1787", "net/minecraft/item/FishingRodItem", "net/minecraft/src/C_1373_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_use() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "use", "method_7836", "use", "m_7203_"), "(Ldcw;Lcmx;Lbqq;)Lbqs;");
    }

    static jobject use(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_use();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getEnchantability() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getEnchantmentValue", "method_7837", "getEnchantability", "m_6473_"), "()I");
    }

    static jint getEnchantability(const jobject& obj) {
                
       const auto methodID = methodID_getEnchantability();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ITEM_FISHINGRODITEM_HPP