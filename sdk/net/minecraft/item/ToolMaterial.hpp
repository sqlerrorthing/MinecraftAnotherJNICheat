// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_TOOLMATERIAL_HPP
#define NET_MINECRAFT_ITEM_TOOLMATERIAL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.ToolMaterial
 * Remapped: cwi
 */
namespace ToolMaterial {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cwi", "net/minecraft/world/item/Tier", "net/minecraft/class_1832", "net/minecraft/item/ToolMaterial", "net/minecraft/src/C_1427_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getDurability() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getUses", "method_8025", "getDurability", "m_6609_"), "()I");
    }

    static jint getDurability(const jobject& obj) {
                
       const auto methodID = methodID_getDurability();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMiningSpeedMultiplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSpeed", "method_8027", "getMiningSpeedMultiplier", "m_6624_"), "()F");
    }

    static jfloat getMiningSpeedMultiplier(const jobject& obj) {
                
       const auto methodID = methodID_getMiningSpeedMultiplier();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttackDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getAttackDamageBonus", "method_8028", "getAttackDamage", "m_6631_"), "()F");
    }

    static jfloat getAttackDamage(const jobject& obj) {
                
       const auto methodID = methodID_getAttackDamage();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getInverseTag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getIncorrectBlocksForDrops", "method_58419", "getInverseTag", "m_6604_"), "()Lawu;");
    }

    static jobject getInverseTag(const jobject& obj) {
                
       const auto methodID = methodID_getInverseTag();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEnchantability() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getEnchantmentValue", "method_8026", "getEnchantability", "m_6601_"), "()I");
    }

    static jint getEnchantability(const jobject& obj) {
                
       const auto methodID = methodID_getEnchantability();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRepairIngredient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getRepairIngredient", "method_8023", "getRepairIngredient", "m_6282_"), "()Lcyw;");
    }

    static jobject getRepairIngredient(const jobject& obj) {
                
       const auto methodID = methodID_getRepairIngredient();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createComponent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createToolProperties", "method_58418", "createComponent", "m_323879_"), "(Lawu;)Lcxx;");
    }

    static jobject createComponent(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createComponent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ITEM_TOOLMATERIAL_HPP