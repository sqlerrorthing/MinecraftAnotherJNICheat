// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_MAP_MAPDECORATIONTYPES_HPP
#define NET_MINECRAFT_ITEM_MAP_MAPDECORATIONTYPES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.map.MapDecorationTypes
 * Remapped: eqp
 */
namespace MapDecorationTypes {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eqp", "net/minecraft/world/level/saveddata/maps/MapDecorationTypes", "net/minecraft/class_21", "net/minecraft/item/map/MapDecorationTypes", "net/minecraft/src/C_313374_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.item.map.MapDecorationTypes#TRIAL_CHAMBERS_MAP_COLOR
    [[maybe_unused]] static jint get_field_TRIAL_CHAMBERS_MAP_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "COPPER_COLOR", "field_50020", "TRIAL_CHAMBERS_MAP_COLOR", "f_316294_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.map.MapDecorationTypes#TRIAL_CHAMBERS_MAP_COLOR
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_MAP_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "COPPER_COLOR", "field_50020", "TRIAL_CHAMBERS_MAP_COLOR", "f_316294_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#PLAYER
    [[maybe_unused]] static jobject get_field_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PLAYER", "field_91", "PLAYER", "f_315151_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#PLAYER
    [[maybe_unused]] static void set_field_PLAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PLAYER", "field_91", "PLAYER", "f_315151_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#FRAME
    [[maybe_unused]] static jobject get_field_FRAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FRAME", "field_95", "FRAME", "f_314957_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#FRAME
    [[maybe_unused]] static void set_field_FRAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FRAME", "field_95", "FRAME", "f_314957_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#RED_MARKER
    [[maybe_unused]] static jobject get_field_RED_MARKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RED_MARKER", "field_89", "RED_MARKER", "f_314314_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#RED_MARKER
    [[maybe_unused]] static void set_field_RED_MARKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RED_MARKER", "field_89", "RED_MARKER", "f_314314_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BLUE_MARKER
    [[maybe_unused]] static jobject get_field_BLUE_MARKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BLUE_MARKER", "field_83", "BLUE_MARKER", "f_313983_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BLUE_MARKER
    [[maybe_unused]] static void set_field_BLUE_MARKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BLUE_MARKER", "field_83", "BLUE_MARKER", "f_313983_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#TARGET_X
    [[maybe_unused]] static jobject get_field_TARGET_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TARGET_X", "field_84", "TARGET_X", "f_315740_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#TARGET_X
    [[maybe_unused]] static void set_field_TARGET_X(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TARGET_X", "field_84", "TARGET_X", "f_315740_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#TARGET_POINT
    [[maybe_unused]] static jobject get_field_TARGET_POINT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TARGET_POINT", "field_85", "TARGET_POINT", "f_314505_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#TARGET_POINT
    [[maybe_unused]] static void set_field_TARGET_POINT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TARGET_POINT", "field_85", "TARGET_POINT", "f_314505_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#PLAYER_OFF_MAP
    [[maybe_unused]] static jobject get_field_PLAYER_OFF_MAP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PLAYER_OFF_MAP", "field_86", "PLAYER_OFF_MAP", "f_314040_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#PLAYER_OFF_MAP
    [[maybe_unused]] static void set_field_PLAYER_OFF_MAP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PLAYER_OFF_MAP", "field_86", "PLAYER_OFF_MAP", "f_314040_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#PLAYER_OFF_LIMITS
    [[maybe_unused]] static jobject get_field_PLAYER_OFF_LIMITS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PLAYER_OFF_LIMITS", "field_87", "PLAYER_OFF_LIMITS", "f_314334_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#PLAYER_OFF_LIMITS
    [[maybe_unused]] static void set_field_PLAYER_OFF_LIMITS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PLAYER_OFF_LIMITS", "field_87", "PLAYER_OFF_LIMITS", "f_314334_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#MANSION
    [[maybe_unused]] static jobject get_field_MANSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "WOODLAND_MANSION", "field_88", "MANSION", "f_314725_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#MANSION
    [[maybe_unused]] static void set_field_MANSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "WOODLAND_MANSION", "field_88", "MANSION", "f_314725_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#MONUMENT
    [[maybe_unused]] static jobject get_field_MONUMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "OCEAN_MONUMENT", "field_98", "MONUMENT", "f_315089_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#MONUMENT
    [[maybe_unused]] static void set_field_MONUMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "OCEAN_MONUMENT", "field_98", "MONUMENT", "f_315089_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_WHITE
    [[maybe_unused]] static jobject get_field_BANNER_WHITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "WHITE_BANNER", "field_96", "BANNER_WHITE", "f_315046_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_WHITE
    [[maybe_unused]] static void set_field_BANNER_WHITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "WHITE_BANNER", "field_96", "BANNER_WHITE", "f_315046_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_ORANGE
    [[maybe_unused]] static jobject get_field_BANNER_ORANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "ORANGE_BANNER", "field_92", "BANNER_ORANGE", "f_316187_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_ORANGE
    [[maybe_unused]] static void set_field_BANNER_ORANGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "ORANGE_BANNER", "field_92", "BANNER_ORANGE", "f_316187_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_MAGENTA
    [[maybe_unused]] static jobject get_field_BANNER_MAGENTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "MAGENTA_BANNER", "field_97", "BANNER_MAGENTA", "f_314327_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_MAGENTA
    [[maybe_unused]] static void set_field_BANNER_MAGENTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "MAGENTA_BANNER", "field_97", "BANNER_MAGENTA", "f_314327_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_LIGHT_BLUE
    [[maybe_unused]] static jobject get_field_BANNER_LIGHT_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "LIGHT_BLUE_BANNER", "field_90", "BANNER_LIGHT_BLUE", "f_314597_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_LIGHT_BLUE
    [[maybe_unused]] static void set_field_BANNER_LIGHT_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "LIGHT_BLUE_BANNER", "field_90", "BANNER_LIGHT_BLUE", "f_314597_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_YELLOW
    [[maybe_unused]] static jobject get_field_BANNER_YELLOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "YELLOW_BANNER", "field_93", "BANNER_YELLOW", "f_314679_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_YELLOW
    [[maybe_unused]] static void set_field_BANNER_YELLOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "YELLOW_BANNER", "field_93", "BANNER_YELLOW", "f_314679_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_LIME
    [[maybe_unused]] static jobject get_field_BANNER_LIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "LIME_BANNER", "field_94", "BANNER_LIME", "f_314477_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_LIME
    [[maybe_unused]] static void set_field_BANNER_LIME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "LIME_BANNER", "field_94", "BANNER_LIME", "f_314477_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_PINK
    [[maybe_unused]] static jobject get_field_BANNER_PINK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "PINK_BANNER", "field_100", "BANNER_PINK", "f_316207_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_PINK
    [[maybe_unused]] static void set_field_BANNER_PINK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "PINK_BANNER", "field_100", "BANNER_PINK", "f_316207_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_GRAY
    [[maybe_unused]] static jobject get_field_BANNER_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "GRAY_BANNER", "field_101", "BANNER_GRAY", "f_315054_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_GRAY
    [[maybe_unused]] static void set_field_BANNER_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "GRAY_BANNER", "field_101", "BANNER_GRAY", "f_315054_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_LIGHT_GRAY
    [[maybe_unused]] static jobject get_field_BANNER_LIGHT_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LIGHT_GRAY_BANNER", "field_107", "BANNER_LIGHT_GRAY", "f_315781_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_LIGHT_GRAY
    [[maybe_unused]] static void set_field_BANNER_LIGHT_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LIGHT_GRAY_BANNER", "field_107", "BANNER_LIGHT_GRAY", "f_315781_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_CYAN
    [[maybe_unused]] static jobject get_field_BANNER_CYAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "CYAN_BANNER", "field_108", "BANNER_CYAN", "f_315526_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_CYAN
    [[maybe_unused]] static void set_field_BANNER_CYAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "CYAN_BANNER", "field_108", "BANNER_CYAN", "f_315526_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_PURPLE
    [[maybe_unused]] static jobject get_field_BANNER_PURPLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "PURPLE_BANNER", "field_104", "BANNER_PURPLE", "f_316950_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_PURPLE
    [[maybe_unused]] static void set_field_BANNER_PURPLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "PURPLE_BANNER", "field_104", "BANNER_PURPLE", "f_316950_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_BLUE
    [[maybe_unused]] static jobject get_field_BANNER_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "BLUE_BANNER", "field_105", "BANNER_BLUE", "f_315143_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_BLUE
    [[maybe_unused]] static void set_field_BANNER_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "BLUE_BANNER", "field_105", "BANNER_BLUE", "f_315143_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_BROWN
    [[maybe_unused]] static jobject get_field_BANNER_BROWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "BROWN_BANNER", "field_106", "BANNER_BROWN", "f_314021_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_BROWN
    [[maybe_unused]] static void set_field_BANNER_BROWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "BROWN_BANNER", "field_106", "BANNER_BROWN", "f_314021_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_GREEN
    [[maybe_unused]] static jobject get_field_BANNER_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "GREEN_BANNER", "field_102", "BANNER_GREEN", "f_315589_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_GREEN
    [[maybe_unused]] static void set_field_BANNER_GREEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "GREEN_BANNER", "field_102", "BANNER_GREEN", "f_315589_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_RED
    [[maybe_unused]] static jobject get_field_BANNER_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "RED_BANNER", "field_99", "BANNER_RED", "f_314287_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_RED
    [[maybe_unused]] static void set_field_BANNER_RED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "RED_BANNER", "field_99", "BANNER_RED", "f_314287_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_BLACK
    [[maybe_unused]] static jobject get_field_BANNER_BLACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "BLACK_BANNER", "field_103", "BANNER_BLACK", "f_316506_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#BANNER_BLACK
    [[maybe_unused]] static void set_field_BANNER_BLACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "BLACK_BANNER", "field_103", "BANNER_BLACK", "f_316506_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#RED_X
    [[maybe_unused]] static jobject get_field_RED_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "RED_X", "field_110", "RED_X", "f_316825_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#RED_X
    [[maybe_unused]] static void set_field_RED_X(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "RED_X", "field_110", "RED_X", "f_316825_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#VILLAGE_DESERT
    [[maybe_unused]] static jobject get_field_VILLAGE_DESERT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DESERT_VILLAGE", "field_46177", "VILLAGE_DESERT", "f_316569_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#VILLAGE_DESERT
    [[maybe_unused]] static void set_field_VILLAGE_DESERT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DESERT_VILLAGE", "field_46177", "VILLAGE_DESERT", "f_316569_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#VILLAGE_PLAINS
    [[maybe_unused]] static jobject get_field_VILLAGE_PLAINS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "PLAINS_VILLAGE", "field_46178", "VILLAGE_PLAINS", "f_316626_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#VILLAGE_PLAINS
    [[maybe_unused]] static void set_field_VILLAGE_PLAINS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "PLAINS_VILLAGE", "field_46178", "VILLAGE_PLAINS", "f_316626_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#VILLAGE_SAVANNA
    [[maybe_unused]] static jobject get_field_VILLAGE_SAVANNA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "SAVANNA_VILLAGE", "field_46179", "VILLAGE_SAVANNA", "f_316030_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#VILLAGE_SAVANNA
    [[maybe_unused]] static void set_field_VILLAGE_SAVANNA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "SAVANNA_VILLAGE", "field_46179", "VILLAGE_SAVANNA", "f_316030_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#VILLAGE_SNOWY
    [[maybe_unused]] static jobject get_field_VILLAGE_SNOWY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "SNOWY_VILLAGE", "field_46180", "VILLAGE_SNOWY", "f_316629_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#VILLAGE_SNOWY
    [[maybe_unused]] static void set_field_VILLAGE_SNOWY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "SNOWY_VILLAGE", "field_46180", "VILLAGE_SNOWY", "f_316629_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#VILLAGE_TAIGA
    [[maybe_unused]] static jobject get_field_VILLAGE_TAIGA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "TAIGA_VILLAGE", "field_46181", "VILLAGE_TAIGA", "f_314288_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#VILLAGE_TAIGA
    [[maybe_unused]] static void set_field_VILLAGE_TAIGA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "TAIGA_VILLAGE", "field_46181", "VILLAGE_TAIGA", "f_314288_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#JUNGLE_TEMPLE
    [[maybe_unused]] static jobject get_field_JUNGLE_TEMPLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "JUNGLE_TEMPLE", "field_46182", "JUNGLE_TEMPLE", "f_315224_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#JUNGLE_TEMPLE
    [[maybe_unused]] static void set_field_JUNGLE_TEMPLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "JUNGLE_TEMPLE", "field_46182", "JUNGLE_TEMPLE", "f_315224_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#SWAMP_HUT
    [[maybe_unused]] static jobject get_field_SWAMP_HUT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SWAMP_HUT", "field_46183", "SWAMP_HUT", "f_314582_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#SWAMP_HUT
    [[maybe_unused]] static void set_field_SWAMP_HUT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SWAMP_HUT", "field_46183", "SWAMP_HUT", "f_314582_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.map.MapDecorationTypes#TRIAL_CHAMBERS
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "TRIAL_CHAMBERS", "field_50019", "TRIAL_CHAMBERS", "f_314672_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.map.MapDecorationTypes#TRIAL_CHAMBERS
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "TRIAL_CHAMBERS", "field_50019", "TRIAL_CHAMBERS", "f_314672_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getDefault() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_58455", "getDefault", "m_324454_"), "(Ljz;)Ljm;");
    }

    static jobject getDefault(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getDefault();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_58454", "register", "m_324915_"), "(Ljava/lang/String;Ljava/lang/String;ZZ)Ljm;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_58453", "register", "m_323626_"), "(Ljava/lang/String;Ljava/lang/String;ZIZZ)Ljm;");
    }

    static jobject _register(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jint& arg3, const jboolean& arg4, const jboolean& arg5) {
       const auto clazz = self();
       const auto methodID = methodID__register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
};

#endif // NET_MINECRAFT_ITEM_MAP_MAPDECORATIONTYPES_HPP