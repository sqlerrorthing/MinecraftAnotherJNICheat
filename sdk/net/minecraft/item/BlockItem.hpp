// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_BLOCKITEM_HPP
#define NET_MINECRAFT_ITEM_BLOCKITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.BlockItem
 * Remapped: cso
 */
namespace BlockItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cso", "net/minecraft/world/item/BlockItem", "net/minecraft/class_1747", "net/minecraft/item/BlockItem", "net/minecraft/src/C_1325_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.item.BlockItem#block
    static jobject get_field_block(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "block", "field_7901", "block", "f_40563_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.BlockItem#block
    static void set_field_block(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "block", "field_7901", "block", "f_40563_"), "Ldfy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_useOnBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "useOn", "method_7884", "useOnBlock", "m_6225_"), "(Lcyf;)Lbqr;");
    }

    static jobject useOnBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_useOnBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_place() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "place", "method_7712", "place", "m_40576_"), "(Lcyd;)Lbqr;");
    }

    static jobject place(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_place();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPlaceSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPlaceSound", "method_19260", "getPlaceSound", "m_40587_"), "(Ldtc;)Lavo;");
    }

    static jobject getPlaceSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPlaceSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPlacementContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updatePlacementContext", "method_16356", "getPlacementContext", "m_7732_"), "(Lcyd;)Lcyd;");
    }

    static jobject getPlacementContext(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPlacementContext();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_copyComponentsToBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "updateBlockEntityComponents", "method_57339", "copyComponentsToBlockEntity", "m_322358_"), "(Ldcw;Ljd;Lcuq;)V");
    }

    static void copyComponentsToBlockEntity(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_copyComponentsToBlockEntity();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_postPlacement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateCustomBlockEntityTag", "method_7710", "postPlacement", "m_7274_"), "(Ljd;Ldcw;Lcmx;Lcuq;Ldtc;)Z");
    }

    static jboolean postPlacement(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_postPlacement();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getPlacementState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getPlacementState", "method_7707", "getPlacementState", "m_5965_"), "(Lcyd;)Ldtc;");
    }

    static jobject getPlacementState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPlacementState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_placeFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateBlockStateFromTag", "method_18084", "placeFromNbt", "m_40602_"), "(Ljd;Ldcw;Lcuq;Ldtc;)Ldtc;");
    }

    static jobject placeFromNbt(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_placeFromNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canPlace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canPlace", "method_7709", "canPlace", "m_40610_"), "(Lcyd;Ldtc;)Z");
    }

    static jboolean canPlace(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canPlace();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_checkStatePlacement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "mustSurvive", "method_20360", "checkStatePlacement", "m_6652_"), "()Z");
    }

    static jboolean checkStatePlacement(const jobject& obj) {
                
       const auto methodID = methodID_checkStatePlacement();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__place() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "placeBlock", "method_7708", "place", "m_7429_"), "(Lcyd;Ldtc;)Z");
    }

    static jboolean _place(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__place();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNbtToBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "updateCustomBlockEntityTag", "method_7714", "writeNbtToBlockEntity", "m_40582_"), "(Ldcw;Lcmx;Ljd;Lcuq;)Z");
    }

    static jboolean writeNbtToBlockEntity(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_writeNbtToBlockEntity();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getTranslationKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDescriptionId", "method_7876", "getTranslationKey", "m_5524_"), "()Ljava/lang/String;");
    }

    static jobject getTranslationKey(const jobject& obj) {
                
       const auto methodID = methodID_getTranslationKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_appendTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "appendHoverText", "method_7851", "appendTooltip", "m_7373_"), "(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V");
    }

    static void appendTooltip(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_appendTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getBlock", "method_7711", "getBlock", "m_40614_"), "()Ldfy;");
    }

    static jobject getBlock(const jobject& obj) {
                
       const auto methodID = methodID_getBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_appendBlocks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "registerBlocks", "method_7713", "appendBlocks", "m_6192_"), "(Ljava/util/Map;Lcul;)V");
    }

    static void appendBlocks(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_appendBlocks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canBeNested() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ar_", "canFitInsideContainerItems", "method_31568", "canBeNested", "m_142095_"), "()Z");
    }

    static jboolean canBeNested(const jobject& obj) {
                
       const auto methodID = methodID_canBeNested();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_onItemEntityDestroyed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onDestroyed", "method_33261", "onItemEntityDestroyed", "m_142023_"), "(Lcjh;)V");
    }

    static void onItemEntityDestroyed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onItemEntityDestroyed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setBlockEntityData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlockEntityData", "method_57338", "setBlockEntityData", "m_186338_"), "(Lcuq;Ldqj;Lub;)V");
    }

    static void setBlockEntityData(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_setBlockEntityData();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getRequiredFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "requiredFeatures", "method_45322", "getRequiredFeatures", "m_245183_"), "()Lcpl;");
    }

    static jobject getRequiredFeatures(const jobject& obj) {
                
       const auto methodID = methodID_getRequiredFeatures();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ITEM_BLOCKITEM_HPP