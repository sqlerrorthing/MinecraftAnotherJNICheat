// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_ITEMGROUP$DISPLAYCONTEXT_HPP
#define NET_MINECRAFT_ITEM_ITEMGROUP$DISPLAYCONTEXT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.ItemGroup$DisplayContext
 * Remapped: cta$d
 */
namespace ItemGroup$DisplayContext {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cta$d", "net/minecraft/world/item/CreativeModeTab$ItemDisplayParameters", "net/minecraft/class_1761$class_8128", "net/minecraft/item/ItemGroup$DisplayContext", "net/minecraft/src/C_1336_$C_268372_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.item.ItemGroup$DisplayContext#enabledFeatures
    static jobject get_field_enabledFeatures(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "enabledFeatures", "comp_1251", "enabledFeatures", "f_268709_"), "Lcpl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.item.ItemGroup$DisplayContext#enabledFeatures
    static void set_field_enabledFeatures(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "enabledFeatures", "comp_1251", "enabledFeatures", "f_268709_"), "Lcpl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ItemGroup$DisplayContext#hasPermissions
    static jboolean get_field_hasPermissions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "hasPermissions", "comp_1252", "hasPermissions", "f_268429_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroup$DisplayContext#hasPermissions
    static void set_field_hasPermissions(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "hasPermissions", "comp_1252", "hasPermissions", "f_268429_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ItemGroup$DisplayContext#lookup
    static jobject get_field_lookup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "holders", "comp_1253", "lookup", "f_268485_"), "Ljo$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemGroup$DisplayContext#lookup
    static void set_field_lookup(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "holders", "comp_1253", "lookup", "f_268485_"), "Ljo$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_doesNotMatch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "needsUpdate", "method_48932", "doesNotMatch", "m_269247_"), "(Lcpl;ZLjo$a;)Z");
    }

    static jboolean doesNotMatch(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_doesNotMatch();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__enabledFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "enabledFeatures", "comp_1251", "enabledFeatures", "f_268709_"), "()Lcpl;");
    }

    static jobject _enabledFeatures(const jobject& obj) {
                
       const auto methodID = methodID__enabledFeatures();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__hasPermissions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasPermissions", "comp_1252", "hasPermissions", "f_268429_"), "()Z");
    }

    static jboolean _hasPermissions(const jobject& obj) {
                
       const auto methodID = methodID__hasPermissions();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__lookup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "holders", "comp_1253", "lookup", "f_268485_"), "()Ljo$a;");
    }

    static jobject _lookup(const jobject& obj) {
                
       const auto methodID = methodID__lookup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ITEM_ITEMGROUP$DISPLAYCONTEXT_HPP