// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_ANIMALARMORITEM_HPP
#define NET_MINECRAFT_ITEM_ANIMALARMORITEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.AnimalArmorItem
 * Remapped: cse
 */
namespace AnimalArmorItem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cse", "net/minecraft/world/item/AnimalArmorItem", "net/minecraft/class_4059", "net/minecraft/item/AnimalArmorItem", "net/minecraft/src/C_313678_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.item.AnimalArmorItem#entityTexture
    static jobject get_field_entityTexture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "textureLocation", "field_47823", "entityTexture", "f_313937_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.AnimalArmorItem#entityTexture
    static void set_field_entityTexture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "textureLocation", "field_47823", "entityTexture", "f_313937_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.AnimalArmorItem#overlayTexture
    static jobject get_field_overlayTexture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "overlayTextureLocation", "field_49255", "overlayTexture", "f_314825_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.AnimalArmorItem#overlayTexture
    static void set_field_overlayTexture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "overlayTextureLocation", "field_49255", "overlayTexture", "f_314825_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.AnimalArmorItem#type
    static jobject get_field_type(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "bodyType", "field_47824", "type", "f_314349_"), "Lcse$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.AnimalArmorItem#type
    static void set_field_type(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "bodyType", "field_47824", "type", "f_314349_"), "Lcse$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getEntityTexture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTexture", "method_18454", "getEntityTexture", "m_320881_"), "()Lakr;");
    }

    static jobject getEntityTexture(const jobject& obj) {
                
       const auto methodID = methodID_getEntityTexture();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOverlayTexture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getOverlayTexture", "method_57335", "getOverlayTexture", "m_323746_"), "()Lakr;");
    }

    static jobject getOverlayTexture(const jobject& obj) {
                
       const auto methodID = methodID_getOverlayTexture();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getBodyType", "method_55756", "getType", "m_319458_"), "()Lcse$a;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBreakSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getBreakingSound", "method_57336", "getBreakSound", "m_318629_"), "()Lavo;");
    }

    static jobject getBreakSound(const jobject& obj) {
                
       const auto methodID = methodID_getBreakSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEnchantable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isEnchantable", "method_7870", "isEnchantable", "m_8120_"), "(Lcuq;)Z");
    }

    static jboolean isEnchantable(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isEnchantable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ITEM_ANIMALARMORITEM_HPP