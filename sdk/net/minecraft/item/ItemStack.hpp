// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_ITEMSTACK_HPP
#define NET_MINECRAFT_ITEM_ITEMSTACK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.ItemStack
 * Remapped: cuq
 */
namespace ItemStack {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cuq", "net/minecraft/world/item/ItemStack", "net/minecraft/class_1799", "net/minecraft/item/ItemStack", "net/minecraft/src/C_1391_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.item.ItemStack#ITEM_CODEC
    [[maybe_unused]] static jobject get_field_ITEM_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ITEM_NON_AIR_CODEC", "field_47312", "ITEM_CODEC", "f_303113_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ItemStack#ITEM_CODEC
    [[maybe_unused]] static void set_field_ITEM_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ITEM_NON_AIR_CODEC", "field_47312", "ITEM_CODEC", "f_303113_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ItemStack#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_24671", "CODEC", "f_41582_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ItemStack#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_24671", "CODEC", "f_41582_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ItemStack#UNCOUNTED_CODEC
    [[maybe_unused]] static jobject get_field_UNCOUNTED_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SINGLE_ITEM_CODEC", "field_49747", "UNCOUNTED_CODEC", "f_302992_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ItemStack#UNCOUNTED_CODEC
    [[maybe_unused]] static void set_field_UNCOUNTED_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SINGLE_ITEM_CODEC", "field_49747", "UNCOUNTED_CODEC", "f_302992_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ItemStack#VALIDATED_CODEC
    [[maybe_unused]] static jobject get_field_VALIDATED_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STRICT_CODEC", "field_51397", "VALIDATED_CODEC", "f_315780_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ItemStack#VALIDATED_CODEC
    [[maybe_unused]] static void set_field_VALIDATED_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STRICT_CODEC", "field_51397", "VALIDATED_CODEC", "f_315780_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ItemStack#VALIDATED_UNCOUNTED_CODEC
    [[maybe_unused]] static jobject get_field_VALIDATED_UNCOUNTED_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "STRICT_SINGLE_ITEM_CODEC", "field_51398", "VALIDATED_UNCOUNTED_CODEC", "f_316270_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ItemStack#VALIDATED_UNCOUNTED_CODEC
    [[maybe_unused]] static void set_field_VALIDATED_UNCOUNTED_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "STRICT_SINGLE_ITEM_CODEC", "field_51398", "VALIDATED_UNCOUNTED_CODEC", "f_316270_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ItemStack#OPTIONAL_CODEC
    [[maybe_unused]] static jobject get_field_OPTIONAL_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "OPTIONAL_CODEC", "field_49266", "OPTIONAL_CODEC", "f_316315_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ItemStack#OPTIONAL_CODEC
    [[maybe_unused]] static void set_field_OPTIONAL_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "OPTIONAL_CODEC", "field_49266", "OPTIONAL_CODEC", "f_316315_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ItemStack#REGISTRY_ENTRY_CODEC
    [[maybe_unused]] static jobject get_field_REGISTRY_ENTRY_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SIMPLE_ITEM_CODEC", "field_49267", "REGISTRY_ENTRY_CODEC", "f_315943_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ItemStack#REGISTRY_ENTRY_CODEC
    [[maybe_unused]] static void set_field_REGISTRY_ENTRY_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SIMPLE_ITEM_CODEC", "field_49267", "REGISTRY_ENTRY_CODEC", "f_315943_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ItemStack#OPTIONAL_PACKET_CODEC
    [[maybe_unused]] static jobject get_field_OPTIONAL_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "OPTIONAL_STREAM_CODEC", "field_49268", "OPTIONAL_PACKET_CODEC", "f_314979_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ItemStack#OPTIONAL_PACKET_CODEC
    [[maybe_unused]] static void set_field_OPTIONAL_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "OPTIONAL_STREAM_CODEC", "field_49268", "OPTIONAL_PACKET_CODEC", "f_314979_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ItemStack#PACKET_CODEC
    [[maybe_unused]] static jobject get_field_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "STREAM_CODEC", "field_48349", "PACKET_CODEC", "f_315801_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ItemStack#PACKET_CODEC
    [[maybe_unused]] static void set_field_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "STREAM_CODEC", "field_48349", "PACKET_CODEC", "f_315801_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ItemStack#OPTIONAL_LIST_PACKET_CODEC
    [[maybe_unused]] static jobject get_field_OPTIONAL_LIST_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "OPTIONAL_LIST_STREAM_CODEC", "field_49269", "OPTIONAL_LIST_PACKET_CODEC", "f_315592_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ItemStack#OPTIONAL_LIST_PACKET_CODEC
    [[maybe_unused]] static void set_field_OPTIONAL_LIST_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "OPTIONAL_LIST_STREAM_CODEC", "field_49269", "OPTIONAL_LIST_PACKET_CODEC", "f_315592_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ItemStack#LIST_PACKET_CODEC
    [[maybe_unused]] static jobject get_field_LIST_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LIST_STREAM_CODEC", "field_48350", "LIST_PACKET_CODEC", "f_314960_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ItemStack#LIST_PACKET_CODEC
    [[maybe_unused]] static void set_field_LIST_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LIST_STREAM_CODEC", "field_48350", "LIST_PACKET_CODEC", "f_314960_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemStack#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "LOGGER", "field_8033", "LOGGER", "f_41585_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemStack#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "LOGGER", "field_8033", "LOGGER", "f_41585_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ItemStack#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "EMPTY", "field_8037", "EMPTY", "f_41583_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ItemStack#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "EMPTY", "field_8037", "EMPTY", "f_41583_"), "Lcuq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.item.ItemStack#DISABLED_TEXT
    [[maybe_unused]] static jobject get_field_DISABLED_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "DISABLED_ITEM_TOOLTIP", "field_40211", "DISABLED_TEXT", "f_243862_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemStack#DISABLED_TEXT
    [[maybe_unused]] static void set_field_DISABLED_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "DISABLED_ITEM_TOOLTIP", "field_40211", "DISABLED_TEXT", "f_243862_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.item.ItemStack#count
    static jint get_field_count(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "count", "field_8031", "count", "f_41587_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemStack#count
    static void set_field_count(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "count", "field_8031", "count", "f_41587_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ItemStack#bobbingAnimationTime
    static jint get_field_bobbingAnimationTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "popTime", "field_8030", "bobbingAnimationTime", "f_41588_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemStack#bobbingAnimationTime
    static void set_field_bobbingAnimationTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "popTime", "field_8030", "bobbingAnimationTime", "f_41588_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ItemStack#item
    static jobject get_field_item(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "item", "field_8038", "item", "f_41589_"), "Lcul;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemStack#item
    static void set_field_item(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "item", "field_8038", "item", "f_41589_"), "Lcul;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.item.ItemStack#components
    static jobject get_field_components(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "components", "field_49270", "components", "f_315342_"), "Lkr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.item.ItemStack#components
    static void set_field_components(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "components", "field_49270", "components", "f_315342_"), "Lkr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ItemStack#holder
    static jobject get_field_holder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "entityRepresentation", "field_24093", "holder", "f_41592_"), "Lbsr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ItemStack#holder
    static void set_field_holder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "entityRepresentation", "field_24093", "holder", "f_41592_"), "Lbsr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "validateStrict", "method_57372", "validate", "m_323584_"), "(Lcuq;)Lcom/mojang/serialization/DataResult;");
    }

    static jobject validate(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_validate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createExtraValidatingPacketCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validatedStreamCodec", "method_59693", "createExtraValidatingPacketCodec", "m_319263_"), "(Lyx;)Lyx;");
    }

    static jobject createExtraValidatingPacketCodec(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createExtraValidatingPacketCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTooltipData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTooltipImage", "method_32347", "getTooltipData", "m_150921_"), "()Ljava/util/Optional;");
    }

    static jobject getTooltipData(const jobject& obj) {
                
       const auto methodID = methodID_getTooltipData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getComponents", "method_57353", "getComponents", "m_318732_"), "()Lkm;");
    }

    static jobject getComponents(const jobject& obj) {
                
       const auto methodID = methodID_getComponents();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getPrototype", "method_58658", "getDefaultComponents", "m_322741_"), "()Lkm;");
    }

    static jobject getDefaultComponents(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultComponents();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getComponentChanges() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getComponentsPatch", "method_57380", "getComponentChanges", "m_324277_"), "()Lkn;");
    }

    static jobject getComponentChanges(const jobject& obj) {
                
       const auto methodID = methodID_getComponentChanges();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_validateComponents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validateComponents", "method_59691", "validateComponents", "m_320698_"), "(Lkm;)Lcom/mojang/serialization/DataResult;");
    }

    static jobject validateComponents(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_validateComponents();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_57360", "fromNbt", "m_323951_"), "(Ljo$a;Luy;)Ljava/util/Optional;");
    }

    static jobject fromNbt(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_fromNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_fromNbtOrEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseOptional", "method_57359", "fromNbtOrEmpty", "m_318937_"), "(Ljo$a;Lub;)Lcuq;");
    }

    static jobject fromNbtOrEmpty(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_fromNbtOrEmpty();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isEmpty", "method_7960", "isEmpty", "m_41619_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isItemEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isItemEnabled", "method_45435", "isItemEnabled", "m_246617_"), "(Lcpl;)Z");
    }

    static jboolean isItemEnabled(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isItemEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_split() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "split", "method_7971", "split", "m_41620_"), "(I)Lcuq;");
    }

    static jobject split(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_split();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_copyAndEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "copyAndClear", "method_51164", "copyAndEmpty", "m_278832_"), "()Lcuq;");
    }

    static jobject copyAndEmpty(const jobject& obj) {
                
       const auto methodID = methodID_copyAndEmpty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getItem", "method_7909", "getItem", "m_41720_"), "()Lcul;");
    }

    static jobject getItem(const jobject& obj) {
                
       const auto methodID = methodID_getItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRegistryEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getItemHolder", "method_41409", "getRegistryEntry", "m_220173_"), "()Ljm;");
    }

    static jobject getRegistryEntry(const jobject& obj) {
                
       const auto methodID = methodID_getRegistryEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isIn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_31573", "isIn", "m_204117_"), "(Lawu;)Z");
    }

    static jboolean isIn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isIn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_31574", "isOf", "m_150930_"), "(Lcul;)Z");
    }

    static jboolean isOf(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isOf();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_itemMatches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_41407", "itemMatches", "m_220167_"), "(Ljava/util/function/Predicate;)Z");
    }

    static jboolean itemMatches(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_itemMatches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__itemMatches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_41406", "itemMatches", "m_220165_"), "(Ljm;)Z");
    }

    static jboolean _itemMatches(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__itemMatches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__isIn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_53187", "isIn", "m_295139_"), "(Ljq;)Z");
    }

    static jboolean _isIn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__isIn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_streamTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getTags", "method_40133", "streamTags", "m_204131_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamTags(const jobject& obj) {
                
       const auto methodID = methodID_streamTags();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_useOnBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "useOn", "method_7981", "useOnBlock", "m_41661_"), "(Lcyf;)Lbqr;");
    }

    static jobject useOnBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_useOnBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMiningSpeedMultiplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDestroySpeed", "method_7924", "getMiningSpeedMultiplier", "m_41691_"), "(Ldtc;)F");
    }

    static jfloat getMiningSpeedMultiplier(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getMiningSpeedMultiplier();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_use() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "use", "method_7913", "use", "m_41682_"), "(Ldcw;Lcmx;Lbqq;)Lbqs;");
    }

    static jobject use(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_use();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_finishUsing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finishUsingItem", "method_7910", "finishUsing", "m_41671_"), "(Ldcw;Lbtn;)Lcuq;");
    }

    static jobject finishUsing(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_finishUsing();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_encode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "save", "method_57376", "encode", "m_321167_"), "(Ljo$a;Luy;)Luy;");
    }

    static jobject encode(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_encode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__encode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "save", "method_57358", "encode", "m_41739_"), "(Ljo$a;)Luy;");
    }

    static jobject _encode(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__encode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_encodeAllowEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveOptional", "method_57375", "encodeAllowEmpty", "m_324153_"), "(Ljo$a;)Luy;");
    }

    static jobject encodeAllowEmpty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_encodeAllowEmpty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMaxCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getMaxStackSize", "method_7914", "getMaxCount", "m_41741_"), "()I");
    }

    static jint getMaxCount(const jobject& obj) {
                
       const auto methodID = methodID_getMaxCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isStackable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "isStackable", "method_7946", "isStackable", "m_41753_"), "()Z");
    }

    static jboolean isStackable(const jobject& obj) {
                
       const auto methodID = methodID_isStackable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDamageable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "isDamageableItem", "method_7963", "isDamageable", "m_41763_"), "()Z");
    }

    static jboolean isDamageable(const jobject& obj) {
                
       const auto methodID = methodID_isDamageable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDamaged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "isDamaged", "method_7986", "isDamaged", "m_41768_"), "()Z");
    }

    static jboolean isDamaged(const jobject& obj) {
                
       const auto methodID = methodID_isDamaged();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getDamageValue", "method_7919", "getDamage", "m_41773_"), "()I");
    }

    static jint getDamage(const jobject& obj) {
                
       const auto methodID = methodID_getDamage();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setDamageValue", "method_7974", "setDamage", "m_41721_"), "(I)V");
    }

    static void setDamage(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setDamage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMaxDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getMaxDamage", "method_7936", "getMaxDamage", "m_41776_"), "()I");
    }

    static jint getMaxDamage(const jobject& obj) {
                
       const auto methodID = methodID_getMaxDamage();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurtAndBreak", "method_7956", "damage", "m_220157_"), "(ILaqu;Laqv;Ljava/util/function/Consumer;)V");
    }

    static void damage(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_damage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurtAndBreak", "method_7970", "damage", "m_41622_"), "(ILbtn;Lbsy;)V");
    }

    static void _damage(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__damage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurtAndConvertOnBreak", "method_60986", "damage", "m_340236_"), "(ILdcv;Lbtn;Lbsy;)Lcuq;");
    }

    static jobject __damage(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID___damage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isItemBarVisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "isBarVisible", "method_31578", "isItemBarVisible", "m_150947_"), "()Z");
    }

    static jboolean isItemBarVisible(const jobject& obj) {
                
       const auto methodID = methodID_isItemBarVisible();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getItemBarStep() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getBarWidth", "method_31579", "getItemBarStep", "m_150948_"), "()I");
    }

    static jint getItemBarStep(const jobject& obj) {
                
       const auto methodID = methodID_getItemBarStep();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getItemBarColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "getBarColor", "method_31580", "getItemBarColor", "m_150949_"), "()I");
    }

    static jint getItemBarColor(const jobject& obj) {
                
       const auto methodID = methodID_getItemBarColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_onStackClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "overrideStackedOnOther", "method_31575", "onStackClicked", "m_150926_"), "(Lcrq;Lcqd;Lcmx;)Z");
    }

    static jboolean onStackClicked(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onStackClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "overrideOtherStackedOnMe", "method_31576", "onClicked", "m_150932_"), "(Lcuq;Lcrq;Lcqd;Lcmx;Lbug;)Z");
    }

    static jboolean onClicked(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_onClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_postHit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurtEnemy", "method_7979", "postHit", "m_41640_"), "(Lbtn;Lcmx;)Z");
    }

    static jboolean postHit(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_postHit();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_postDamageEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "postHurtEnemy", "method_59979", "postDamageEntity", "m_339261_"), "(Lbtn;Lcmx;)V");
    }

    static void postDamageEntity(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_postDamageEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_postMine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mineBlock", "method_7952", "postMine", "m_41686_"), "(Ldcw;Ldtc;Ljd;Lcmx;)V");
    }

    static void postMine(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_postMine();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isSuitableFor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isCorrectToolForDrops", "method_7951", "isSuitableFor", "m_41735_"), "(Ldtc;)Z");
    }

    static jboolean isSuitableFor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isSuitableFor();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_useOnEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "interactLivingEntity", "method_7920", "useOnEntity", "m_41647_"), "(Lcmx;Lbtn;Lbqq;)Lbqr;");
    }

    static jobject useOnEntity(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_useOnEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "copy", "method_7972", "copy", "m_41777_"), "()Lcuq;");
    }

    static jobject copy(const jobject& obj) {
                
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_copyWithCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "copyWithCount", "method_46651", "copyWithCount", "m_255036_"), "(I)Lcuq;");
    }

    static jobject copyWithCount(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_copyWithCount();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "transmuteCopy", "method_60503", "withItem", "m_338455_"), "(Ldcv;)Lcuq;");
    }

    static jobject withItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_copyComponentsToNewStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "transmuteCopy", "method_56701", "copyComponentsToNewStack", "m_319323_"), "(Ldcv;I)Lcuq;");
    }

    static jobject copyComponentsToNewStack(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_copyComponentsToNewStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_copyComponentsToNewStackIgnoreEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "transmuteCopyIgnoreEmpty", "method_56704", "copyComponentsToNewStackIgnoreEmpty", "m_320013_"), "(Ldcv;I)Lcuq;");
    }

    static jobject copyComponentsToNewStackIgnoreEmpty(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_copyComponentsToNewStackIgnoreEmpty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_areEqual() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "matches", "method_7973", "areEqual", "m_41728_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean areEqual(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_areEqual();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_stacksEqual() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "listMatches", "method_57362", "stacksEqual", "m_319597_"), "(Ljava/util/List;Ljava/util/List;)Z");
    }

    static jboolean stacksEqual(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_stacksEqual();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_areItemsEqual() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isSameItem", "method_7984", "areItemsEqual", "m_41656_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean areItemsEqual(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_areItemsEqual();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_areItemsAndComponentsEqual() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "isSameItemSameComponents", "method_31577", "areItemsAndComponentsEqual", "m_322370_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean areItemsAndComponentsEqual(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_areItemsAndComponentsEqual();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createOptionalCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "lenientOptionalFieldOf", "method_56702", "createOptionalCodec", "m_323240_"), "(Ljava/lang/String;)Lcom/mojang/serialization/MapCodec;");
    }

    static jobject createOptionalCodec(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createOptionalCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hashCode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "hashItemAndComponents", "method_57355", "hashCode", "m_322198_"), "(Lcuq;)I");
    }

    static jint hashCode(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hashCode();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_listHashCode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "hashStackList", "method_57361", "listHashCode", "m_318747_"), "(Ljava/util/List;)I");
    }

    static jint listHashCode(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_listHashCode();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTranslationKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getDescriptionId", "method_7922", "getTranslationKey", "m_41778_"), "()Ljava/lang/String;");
    }

    static jobject getTranslationKey(const jobject& obj) {
                
       const auto methodID = methodID_getTranslationKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_inventoryTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "inventoryTick", "method_7917", "inventoryTick", "m_41666_"), "(Ldcw;Lbsr;IZ)V");
    }

    static void inventoryTick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_inventoryTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onCraftByPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onCraftedBy", "method_7982", "onCraftByPlayer", "m_41678_"), "(Ldcw;Lcmx;I)V");
    }

    static void onCraftByPlayer(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_onCraftByPlayer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onCraftByCrafter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onCraftedBySystem", "method_54466", "onCraftByCrafter", "m_305085_"), "(Ldcw;)V");
    }

    static void onCraftByCrafter(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onCraftByCrafter();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMaxUseTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getUseDuration", "method_7935", "getMaxUseTime", "m_41779_"), "(Lbtn;)I");
    }

    static jint getMaxUseTime(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getMaxUseTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getUseAction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "getUseAnimation", "method_7976", "getUseAction", "m_41780_"), "()Lcwo;");
    }

    static jobject getUseAction(const jobject& obj) {
                
       const auto methodID = methodID_getUseAction();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onStoppedUsing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "releaseUsing", "method_7930", "onStoppedUsing", "m_41674_"), "(Ldcw;Lbtn;I)V");
    }

    static void onStoppedUsing(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_onStoppedUsing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isUsedOnRelease() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "useOnRelease", "method_7967", "isUsedOnRelease", "m_41781_"), "()Z");
    }

    static jboolean isUsedOnRelease(const jobject& obj) {
                
       const auto methodID = methodID_isUsedOnRelease();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "set", "method_57379", "set", "m_322496_"), "(Lkp;Ljava/lang/Object;)Ljava/lang/Object;");
    }

    static jobject set(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_set();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "update", "method_57367", "apply", "m_324919_"), "(Lkp;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;");
    }

    static jobject apply(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_apply();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "update", "method_57368", "apply", "m_322591_"), "(Lkp;Ljava/lang/Object;Ljava/util/function/UnaryOperator;)Ljava/lang/Object;");
    }

    static jobject _apply(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__apply();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "remove", "method_57381", "remove", "m_319322_"), "(Lkp;)Ljava/lang/Object;");
    }

    static jobject remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_applyChanges() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyComponentsAndValidate", "method_59692", "applyChanges", "m_320623_"), "(Lkn;)V");
    }

    static void applyChanges(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_applyChanges();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_applyUnvalidatedChanges() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "applyComponents", "method_57366", "applyUnvalidatedChanges", "m_319238_"), "(Lkn;)V");
    }

    static void applyUnvalidatedChanges(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_applyUnvalidatedChanges();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_applyComponentsFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "applyComponents", "method_57365", "applyComponentsFrom", "m_323474_"), "(Lkm;)V");
    }

    static void applyComponentsFrom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_applyComponentsFrom();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getHoverName", "method_7964", "getName", "m_41786_"), "()Lwz;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_appendTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addToTooltip", "method_57369", "appendTooltip", "m_319928_"), "(Lkp;Lcul$b;Ljava/util/function/Consumer;Lcwm;)V");
    }

    static void appendTooltip(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_appendTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getTooltipLines", "method_7950", "getTooltip", "m_41651_"), "(Lcul$b;Lcmx;Lcwm;)Ljava/util/List;");
    }

    static jobject getTooltip(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getTooltip();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_appendAttributeModifiersTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addAttributeTooltips", "method_57363", "appendAttributeModifiersTooltip", "m_322901_"), "(Ljava/util/function/Consumer;Lcmx;)V");
    }

    static void appendAttributeModifiersTooltip(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_appendAttributeModifiersTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_appendAttributeModifierTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addModifierTooltip", "method_57364", "appendAttributeModifierTooltip", "m_322829_"), "(Ljava/util/function/Consumer;Lcmx;Ljm;Lbuu;)V");
    }

    static void appendAttributeModifierTooltip(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_appendAttributeModifierTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_hasGlint() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "hasFoil", "method_7958", "hasGlint", "m_41790_"), "()Z");
    }

    static jboolean hasGlint(const jobject& obj) {
                
       const auto methodID = methodID_hasGlint();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRarity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "getRarity", "method_7932", "getRarity", "m_41791_"), "()Lcvo;");
    }

    static jobject getRarity(const jobject& obj) {
                
       const auto methodID = methodID_getRarity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEnchantable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "isEnchantable", "method_7923", "isEnchantable", "m_41792_"), "()Z");
    }

    static jboolean isEnchantable(const jobject& obj) {
                
       const auto methodID = methodID_isEnchantable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_addEnchantment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "enchant", "method_7978", "addEnchantment", "m_41663_"), "(Ljm;I)V");
    }

    static void addEnchantment(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_addEnchantment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_hasEnchantments() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "isEnchanted", "method_7942", "hasEnchantments", "m_41793_"), "()Z");
    }

    static jboolean hasEnchantments(const jobject& obj) {
                
       const auto methodID = methodID_hasEnchantments();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEnchantments() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "getEnchantments", "method_58657", "getEnchantments", "m_319737_"), "()Ldai;");
    }

    static jobject getEnchantments(const jobject& obj) {
                
       const auto methodID = methodID_getEnchantments();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInFrame() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "isFramed", "method_7961", "isInFrame", "m_41794_"), "()Z");
    }

    static jboolean isInFrame(const jobject& obj) {
                
       const auto methodID = methodID_isInFrame();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHolder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setEntityRepresentation", "method_27320", "setHolder", "m_41636_"), "(Lbsr;)V");
    }

    static void setHolder(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setHolder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFrame() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "getFrame", "method_7945", "getFrame", "m_41795_"), "()Lcja;");
    }

    static jobject getFrame(const jobject& obj) {
                
       const auto methodID = methodID_getFrame();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHolder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "getEntityRepresentation", "method_27319", "getHolder", "m_41609_"), "()Lbsr;");
    }

    static jobject getHolder(const jobject& obj) {
                
       const auto methodID = methodID_getHolder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_applyAttributeModifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forEachModifier", "method_60617", "applyAttributeModifier", "m_339103_"), "(Lbsz;Ljava/util/function/BiConsumer;)V");
    }

    static void applyAttributeModifier(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_applyAttributeModifier();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_applyAttributeModifiers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forEachModifier", "method_57354", "applyAttributeModifiers", "m_321237_"), "(Lbsy;Ljava/util/function/BiConsumer;)V");
    }

    static void applyAttributeModifiers(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_applyAttributeModifiers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_toHoverableText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "getDisplayName", "method_7954", "toHoverableText", "m_41611_"), "()Lwz;");
    }

    static jobject toHoverableText(const jobject& obj) {
                
       const auto methodID = methodID_toHoverableText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canPlaceOn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canPlaceOnBlockInAdventureMode", "method_57357", "canPlaceOn", "m_321400_"), "(Ldtg;)Z");
    }

    static jboolean canPlaceOn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canPlaceOn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canBreak() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canBreakBlockInAdventureMode", "method_57373", "canBreak", "m_323082_"), "(Ldtg;)Z");
    }

    static jboolean canBreak(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canBreak();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBobbingAnimationTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "getPopTime", "method_7965", "getBobbingAnimationTime", "m_41612_"), "()I");
    }

    static jint getBobbingAnimationTime(const jobject& obj) {
                
       const auto methodID = methodID_getBobbingAnimationTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setBobbingAnimationTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setPopTime", "method_7912", "setBobbingAnimationTime", "m_41754_"), "(I)V");
    }

    static void setBobbingAnimationTime(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setBobbingAnimationTime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "getCount", "method_7947", "getCount", "m_41613_"), "()I");
    }

    static jint getCount(const jobject& obj) {
                
       const auto methodID = methodID_getCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setCount", "method_7939", "setCount", "m_41764_"), "(I)V");
    }

    static void setCount(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setCount();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_capCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "limitSize", "method_58408", "capCount", "m_324521_"), "(I)V");
    }

    static void capCount(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_capCount();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_increment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "grow", "method_7933", "increment", "m_41769_"), "(I)V");
    }

    static void increment(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_increment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_decrement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "shrink", "method_7934", "decrement", "m_41774_"), "(I)V");
    }

    static void decrement(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_decrement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_decrementUnlessCreative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "consume", "method_57008", "decrementUnlessCreative", "m_321439_"), "(ILbtn;)V");
    }

    static void decrementUnlessCreative(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_decrementUnlessCreative();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_splitUnlessCreative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "consumeAndReturn", "method_60504", "splitUnlessCreative", "m_338460_"), "(ILbtn;)Lcuq;");
    }

    static jobject splitUnlessCreative(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_splitUnlessCreative();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_usageTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onUseTick", "method_7949", "usageTick", "m_41731_"), "(Ldcw;Lbtn;I)V");
    }

    static void usageTick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_usageTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onItemEntityDestroyed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onDestroyed", "method_33262", "onItemEntityDestroyed", "m_150924_"), "(Lcjh;)V");
    }

    static void onItemEntityDestroyed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onItemEntityDestroyed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDrinkSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "getDrinkingSound", "method_21832", "getDrinkSound", "m_41615_"), "()Lavo;");
    }

    static jobject getDrinkSound(const jobject& obj) {
                
       const auto methodID = methodID_getDrinkSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEatSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "getEatingSound", "method_21833", "getEatSound", "m_41616_"), "()Lavo;");
    }

    static jobject getEatSound(const jobject& obj) {
                
       const auto methodID = methodID_getEatSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBreakSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "getBreakingSound", "method_57351", "getBreakSound", "m_321057_"), "()Lavo;");
    }

    static jobject getBreakSound(const jobject& obj) {
                
       const auto methodID = methodID_getBreakSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_takesDamageFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canBeHurtBy", "method_58407", "takesDamageFrom", "m_325012_"), "(Lbrk;)Z");
    }

    static jboolean takesDamageFrom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_takesDamageFrom();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ITEM_ITEMSTACK_HPP