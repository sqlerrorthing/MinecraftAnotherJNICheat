// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ITEM_TOOLMATERIALS_HPP
#define NET_MINECRAFT_ITEM_TOOLMATERIALS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.item.ToolMaterials
 * Remapped: cwk
 */
namespace ToolMaterials {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cwk", "net/minecraft/world/item/Tiers", "net/minecraft/class_1834", "net/minecraft/item/ToolMaterials", "net/minecraft/src/C_1429_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.item.ToolMaterials#WOOD
    [[maybe_unused]] static jobject get_field_WOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WOOD", "field_8922", "WOOD", "WOOD"), "Lcwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ToolMaterials#WOOD
    [[maybe_unused]] static void set_field_WOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WOOD", "field_8922", "WOOD", "WOOD"), "Lcwk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ToolMaterials#STONE
    [[maybe_unused]] static jobject get_field_STONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STONE", "field_8927", "STONE", "STONE"), "Lcwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ToolMaterials#STONE
    [[maybe_unused]] static void set_field_STONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STONE", "field_8927", "STONE", "STONE"), "Lcwk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ToolMaterials#IRON
    [[maybe_unused]] static jobject get_field_IRON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "IRON", "field_8923", "IRON", "IRON"), "Lcwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ToolMaterials#IRON
    [[maybe_unused]] static void set_field_IRON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "IRON", "field_8923", "IRON", "IRON"), "Lcwk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ToolMaterials#DIAMOND
    [[maybe_unused]] static jobject get_field_DIAMOND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DIAMOND", "field_8930", "DIAMOND", "DIAMOND"), "Lcwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ToolMaterials#DIAMOND
    [[maybe_unused]] static void set_field_DIAMOND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DIAMOND", "field_8930", "DIAMOND", "DIAMOND"), "Lcwk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ToolMaterials#GOLD
    [[maybe_unused]] static jobject get_field_GOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "GOLD", "field_8929", "GOLD", "GOLD"), "Lcwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ToolMaterials#GOLD
    [[maybe_unused]] static void set_field_GOLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "GOLD", "field_8929", "GOLD", "GOLD"), "Lcwk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.item.ToolMaterials#NETHERITE
    [[maybe_unused]] static jobject get_field_NETHERITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "NETHERITE", "field_22033", "NETHERITE", "NETHERITE"), "Lcwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.item.ToolMaterials#NETHERITE
    [[maybe_unused]] static void set_field_NETHERITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "NETHERITE", "field_22033", "NETHERITE", "NETHERITE"), "Lcwk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.item.ToolMaterials#inverseTag
    static jobject get_field_inverseTag(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "incorrectBlocksForDrops", "field_50006", "inverseTag", "f_316896_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ToolMaterials#inverseTag
    static void set_field_inverseTag(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "incorrectBlocksForDrops", "field_50006", "inverseTag", "f_316896_"), "Lawu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ToolMaterials#itemDurability
    static jint get_field_itemDurability(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "uses", "field_8924", "itemDurability", "f_43322_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ToolMaterials#itemDurability
    static void set_field_itemDurability(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "uses", "field_8924", "itemDurability", "f_43322_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ToolMaterials#miningSpeed
    static jfloat get_field_miningSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "speed", "field_8932", "miningSpeed", "f_43323_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ToolMaterials#miningSpeed
    static void set_field_miningSpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "speed", "field_8932", "miningSpeed", "f_43323_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ToolMaterials#attackDamage
    static jfloat get_field_attackDamage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "damage", "field_8931", "attackDamage", "f_43324_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ToolMaterials#attackDamage
    static void set_field_attackDamage(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "damage", "field_8931", "attackDamage", "f_43324_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ToolMaterials#enchantability
    static jint get_field_enchantability(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "enchantmentValue", "field_8933", "enchantability", "f_43325_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ToolMaterials#enchantability
    static void set_field_enchantability(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "enchantmentValue", "field_8933", "enchantability", "f_43325_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.item.ToolMaterials#repairIngredient
    static jobject get_field_repairIngredient(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "repairIngredient", "field_8928", "repairIngredient", "f_43326_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.item.ToolMaterials#repairIngredient
    static void set_field_repairIngredient(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "repairIngredient", "field_8928", "repairIngredient", "f_43326_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lcwk;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lcwk;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getDurability() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getUses", "method_8025", "getDurability", "m_6609_"), "()I");
    }

    static jint getDurability(const jobject& obj) {
                
       const auto methodID = methodID_getDurability();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMiningSpeedMultiplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSpeed", "method_8027", "getMiningSpeedMultiplier", "m_6624_"), "()F");
    }

    static jfloat getMiningSpeedMultiplier(const jobject& obj) {
                
       const auto methodID = methodID_getMiningSpeedMultiplier();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttackDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getAttackDamageBonus", "method_8028", "getAttackDamage", "m_6631_"), "()F");
    }

    static jfloat getAttackDamage(const jobject& obj) {
                
       const auto methodID = methodID_getAttackDamage();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getInverseTag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getIncorrectBlocksForDrops", "method_58419", "getInverseTag", "m_6604_"), "()Lawu;");
    }

    static jobject getInverseTag(const jobject& obj) {
                
       const auto methodID = methodID_getInverseTag();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEnchantability() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getEnchantmentValue", "method_8026", "getEnchantability", "m_6601_"), "()I");
    }

    static jint getEnchantability(const jobject& obj) {
                
       const auto methodID = methodID_getEnchantability();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRepairIngredient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getRepairIngredient", "method_8023", "getRepairIngredient", "m_6282_"), "()Lcyw;");
    }

    static jobject getRepairIngredient(const jobject& obj) {
                
       const auto methodID = methodID_getRepairIngredient();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ITEM_TOOLMATERIALS_HPP