// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_NBTPATHARGUMENTTYPE$NBTPATH_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_NBTPATHARGUMENTTYPE$NBTPATH_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.NbtPathArgumentType$NbtPath
 * Remapped: fl$g
 */
namespace NbtPathArgumentType$NbtPath {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fl$g", "net/minecraft/commands/arguments/NbtPathArgument$NbtPath", "net/minecraft/class_2203$class_2209", "net/minecraft/command/argument/NbtPathArgumentType$NbtPath", "net/minecraft/src/C_3685_$C_3692_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.command.argument.NbtPathArgumentType$NbtPath#string
    static jobject get_field_string(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "original", "field_9909", "string", "f_99619_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.NbtPathArgumentType$NbtPath#string
    static void set_field_string(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "original", "field_9909", "string", "f_99619_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.NbtPathArgumentType$NbtPath#nodeEndIndices
    static jobject get_field_nodeEndIndices(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "nodeToOriginalPosition", "field_9910", "nodeEndIndices", "f_99620_"), "Lit/unimi/dsi/fastutil/objects/Object2IntMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.NbtPathArgumentType$NbtPath#nodeEndIndices
    static void set_field_nodeEndIndices(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "nodeToOriginalPosition", "field_9910", "nodeEndIndices", "f_99620_"), "Lit/unimi/dsi/fastutil/objects/Object2IntMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.NbtPathArgumentType$NbtPath#nodes
    static jobject get_field_nodes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "nodes", "field_9911", "nodes", "f_99621_"), "[Lfl$h;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.NbtPathArgumentType$NbtPath#nodes
    static void set_field_nodes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "nodes", "field_9911", "nodes", "f_99621_"), "[Lfl$h;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.NbtPathArgumentType$NbtPath#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_50034", "CODEC", "f_314983_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.NbtPathArgumentType$NbtPath#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_50034", "CODEC", "f_314983_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "of", "method_58472", "parse", "m_324408_"), "(Ljava/lang/String;)Lfl$g;");
    }

    static jobject parse(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_parse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_9366", "get", "m_99638_"), "(Luy;)Ljava/util/List;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_count() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "countMatching", "method_9374", "count", "m_99643_"), "(Luy;)I");
    }

    static jint count(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_count();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTerminals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getOrCreateParents", "method_9369", "getTerminals", "m_99650_"), "(Luy;)Ljava/util/List;");
    }

    static jobject getTerminals(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTerminals();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOrInit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOrCreate", "method_9367", "getOrInit", "m_99640_"), "(Luy;Ljava/util/function/Supplier;)Ljava/util/List;");
    }

    static jobject getOrInit(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getOrInit();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_forEach() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_9371", "forEach", "m_99635_"), "(Ljava/util/List;Ljava/util/function/Function;)I");
    }

    static jint forEach(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_forEach();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isTooDeep() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isTooDeep", "method_47975", "isTooDeep", "m_263222_"), "(Luy;I)Z");
    }

    static jboolean isTooDeep(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isTooDeep();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_put() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "set", "method_35722", "put", "m_169535_"), "(Luy;Luy;)I");
    }

    static jint put(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_put();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getDepth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "estimatePathDepth", "method_47971", "getDepth", "m_263200_"), "()I");
    }

    static jint getDepth(const jobject& obj) {
                
       const auto methodID = methodID_getDepth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_insert() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "insert", "method_47972", "insert", "m_263172_"), "(ILub;Ljava/util/List;)I");
    }

    static jint insert(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_insert();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "remove", "method_9372", "remove", "m_99648_"), "(Luy;)I");
    }

    static jint remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createNothingFoundException() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createNotFoundException", "method_9375", "createNothingFoundException", "m_99626_"), "(Lfl$h;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;");
    }

    static jobject createNothingFoundException(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createNothingFoundException();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "asString", "method_54100", "getString", "m_306879_"), "()Ljava/lang/String;");
    }

    static jobject getString(const jobject& obj) {
                
       const auto methodID = methodID_getString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_NBTPATHARGUMENTTYPE$NBTPATH_HPP