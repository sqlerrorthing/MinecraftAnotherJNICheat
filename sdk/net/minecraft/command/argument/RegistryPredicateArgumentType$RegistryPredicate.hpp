// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_REGISTRYPREDICATEARGUMENTTYPE$REGISTRYPREDICATE_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_REGISTRYPREDICATEARGUMENTTYPE$REGISTRYPREDICATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.RegistryPredicateArgumentType$RegistryPredicate
 * Remapped: fx$c
 */
namespace RegistryPredicateArgumentType$RegistryPredicate {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fx$c", "net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result", "net/minecraft/class_7066$class_7068", "net/minecraft/command/argument/RegistryPredicateArgumentType$RegistryPredicate", "net/minecraft/src/C_243418_$C_243493_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "unwrap", "method_41173", "getKey", "m_245276_"), "()Lcom/mojang/datafixers/util/Either;");
    }

    static jobject getKey(const jobject& obj) {
                
       const auto methodID = methodID_getKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tryCast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "cast", "method_41175", "tryCast", "m_245137_"), "(Lakq;)Ljava/util/Optional;");
    }

    static jobject tryCast(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryCast();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_asString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "asPrintable", "method_41176", "asString", "m_245390_"), "()Ljava/lang/String;");
    }

    static jobject asString(const jobject& obj) {
                
       const auto methodID = methodID_asString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_REGISTRYPREDICATEARGUMENTTYPE$REGISTRYPREDICATE_HPP