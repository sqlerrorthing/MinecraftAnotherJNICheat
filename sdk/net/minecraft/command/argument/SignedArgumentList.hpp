// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_SIGNEDARGUMENTLIST_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_SIGNEDARGUMENTLIST_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.SignedArgumentList
 * Remapped: xr
 */
namespace SignedArgumentList {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("xr", "net/minecraft/network/chat/SignableCommand", "net/minecraft/class_7644", "net/minecraft/command/argument/SignedArgumentList", "net/minecraft/src/C_243567_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.command.argument.SignedArgumentList#arguments
    static jobject get_field_arguments(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "arguments", "comp_974", "arguments", "f_244150_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.SignedArgumentList#arguments
    static void set_field_arguments(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "arguments", "comp_974", "arguments", "f_244150_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_isNotEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "hasSignableArguments", "method_58774", "isNotEmpty", "m_319898_"), "(Lcom/mojang/brigadier/ParseResults;)Z");
    }

    static jboolean isNotEmpty(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isNotEmpty();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "of", "method_45043", "of", "m_246497_"), "(Lcom/mojang/brigadier/ParseResults;)Lxr;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_collectDecoratableArguments() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "collectArguments", "method_45044", "collectDecoratableArguments", "m_246854_"), "(Ljava/lang/String;Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/List;");
    }

    static jobject collectDecoratableArguments(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_collectDecoratableArguments();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getArgument", "method_58775", "get", "m_320644_"), "(Ljava/lang/String;)Lxr$a;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__arguments() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "arguments", "comp_974", "arguments", "f_244150_"), "()Ljava/util/List;");
    }

    static jobject _arguments(const jobject& obj) {
                
       const auto methodID = methodID__arguments();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_SIGNEDARGUMENTLIST_HPP