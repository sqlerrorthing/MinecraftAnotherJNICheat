// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_COORDINATEARGUMENT_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_COORDINATEARGUMENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.CoordinateArgument
 * Remapped: gx
 */
namespace CoordinateArgument {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gx", "net/minecraft/commands/arguments/coordinates/WorldCoordinate", "net/minecraft/class_2278", "net/minecraft/command/argument/CoordinateArgument", "net/minecraft/src/C_4636_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.command.argument.CoordinateArgument#TILDE
    [[maybe_unused]] static jchar get_field_TILDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PREFIX_RELATIVE", "field_32972", "TILDE", "f_175084_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.CoordinateArgument#TILDE
    [[maybe_unused]] static void set_field_TILDE(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PREFIX_RELATIVE", "field_32972", "TILDE", "f_175084_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.CoordinateArgument#MISSING_COORDINATE
    [[maybe_unused]] static jobject get_field_MISSING_COORDINATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_EXPECTED_DOUBLE", "field_10759", "MISSING_COORDINATE", "f_120858_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.CoordinateArgument#MISSING_COORDINATE
    [[maybe_unused]] static void set_field_MISSING_COORDINATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_EXPECTED_DOUBLE", "field_10759", "MISSING_COORDINATE", "f_120858_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.CoordinateArgument#MISSING_BLOCK_POSITION
    [[maybe_unused]] static jobject get_field_MISSING_BLOCK_POSITION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_EXPECTED_INT", "field_10761", "MISSING_BLOCK_POSITION", "f_120859_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.CoordinateArgument#MISSING_BLOCK_POSITION
    [[maybe_unused]] static void set_field_MISSING_BLOCK_POSITION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_EXPECTED_INT", "field_10761", "MISSING_BLOCK_POSITION", "f_120859_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.CoordinateArgument#relative
    static jboolean get_field_relative(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "relative", "field_10760", "relative", "f_120860_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.CoordinateArgument#relative
    static void set_field_relative(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "relative", "field_10760", "relative", "f_120860_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.CoordinateArgument#value
    static jdouble get_field_value(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "value", "field_10758", "value", "f_120861_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.CoordinateArgument#value
    static void set_field_value(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "value", "field_10758", "value", "f_120861_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    static jmethodID methodID_toAbsoluteCoordinate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_9740", "toAbsoluteCoordinate", "m_120867_"), "(D)D");
    }

    static jdouble toAbsoluteCoordinate(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_toAbsoluteCoordinate();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseDouble", "method_9743", "parse", "m_120871_"), "(Lcom/mojang/brigadier/StringReader;Z)Lgx;");
    }

    static jobject parse(const jobject& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_parse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseInt", "method_9739", "parse", "m_120869_"), "(Lcom/mojang/brigadier/StringReader;)Lgx;");
    }

    static jobject _parse(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__parse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isRelative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isRelative", "method_9742", "isRelative", "m_120874_"), "(Lcom/mojang/brigadier/StringReader;)Z");
    }

    static jboolean isRelative(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isRelative();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__isRelative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isRelative", "method_9741", "isRelative", "m_120866_"), "()Z");
    }

    static jboolean _isRelative(const jobject& obj) {
                
       const auto methodID = methodID__isRelative();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_COORDINATEARGUMENT_HPP