// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_BLOCKARGUMENTPARSER_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_BLOCKARGUMENTPARSER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.BlockArgumentParser
 * Remapped: gn
 */
namespace BlockArgumentParser {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gn", "net/minecraft/commands/arguments/blocks/BlockStateParser", "net/minecraft/class_2259", "net/minecraft/command/argument/BlockArgumentParser", "net/minecraft/src/C_4426_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.command.argument.BlockArgumentParser#DISALLOWED_TAG_EXCEPTION
    [[maybe_unused]] static jobject get_field_DISALLOWED_TAG_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_NO_TAGS_ALLOWED", "field_10691", "DISALLOWED_TAG_EXCEPTION", "f_116741_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.BlockArgumentParser#DISALLOWED_TAG_EXCEPTION
    [[maybe_unused]] static void set_field_DISALLOWED_TAG_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_NO_TAGS_ALLOWED", "field_10691", "DISALLOWED_TAG_EXCEPTION", "f_116741_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.BlockArgumentParser#INVALID_BLOCK_ID_EXCEPTION
    [[maybe_unused]] static jobject get_field_INVALID_BLOCK_ID_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_UNKNOWN_BLOCK", "field_10690", "INVALID_BLOCK_ID_EXCEPTION", "f_116742_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.BlockArgumentParser#INVALID_BLOCK_ID_EXCEPTION
    [[maybe_unused]] static void set_field_INVALID_BLOCK_ID_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_UNKNOWN_BLOCK", "field_10690", "INVALID_BLOCK_ID_EXCEPTION", "f_116742_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.BlockArgumentParser#UNKNOWN_PROPERTY_EXCEPTION
    [[maybe_unused]] static jobject get_field_UNKNOWN_PROPERTY_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_UNKNOWN_PROPERTY", "field_10695", "UNKNOWN_PROPERTY_EXCEPTION", "f_116743_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.BlockArgumentParser#UNKNOWN_PROPERTY_EXCEPTION
    [[maybe_unused]] static void set_field_UNKNOWN_PROPERTY_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_UNKNOWN_PROPERTY", "field_10695", "UNKNOWN_PROPERTY_EXCEPTION", "f_116743_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.BlockArgumentParser#DUPLICATE_PROPERTY_EXCEPTION
    [[maybe_unused]] static jobject get_field_DUPLICATE_PROPERTY_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_DUPLICATE_PROPERTY", "field_10692", "DUPLICATE_PROPERTY_EXCEPTION", "f_116744_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.BlockArgumentParser#DUPLICATE_PROPERTY_EXCEPTION
    [[maybe_unused]] static void set_field_DUPLICATE_PROPERTY_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_DUPLICATE_PROPERTY", "field_10692", "DUPLICATE_PROPERTY_EXCEPTION", "f_116744_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.BlockArgumentParser#INVALID_PROPERTY_EXCEPTION
    [[maybe_unused]] static jobject get_field_INVALID_PROPERTY_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ERROR_INVALID_VALUE", "field_10683", "INVALID_PROPERTY_EXCEPTION", "f_116745_"), "Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.BlockArgumentParser#INVALID_PROPERTY_EXCEPTION
    [[maybe_unused]] static void set_field_INVALID_PROPERTY_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ERROR_INVALID_VALUE", "field_10683", "INVALID_PROPERTY_EXCEPTION", "f_116745_"), "Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.BlockArgumentParser#EMPTY_PROPERTY_EXCEPTION
    [[maybe_unused]] static jobject get_field_EMPTY_PROPERTY_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ERROR_EXPECTED_VALUE", "field_10688", "EMPTY_PROPERTY_EXCEPTION", "f_116746_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.BlockArgumentParser#EMPTY_PROPERTY_EXCEPTION
    [[maybe_unused]] static void set_field_EMPTY_PROPERTY_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ERROR_EXPECTED_VALUE", "field_10688", "EMPTY_PROPERTY_EXCEPTION", "f_116746_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.BlockArgumentParser#UNCLOSED_PROPERTIES_EXCEPTION
    [[maybe_unused]] static jobject get_field_UNCLOSED_PROPERTIES_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ERROR_EXPECTED_END_OF_PROPERTIES", "field_10684", "UNCLOSED_PROPERTIES_EXCEPTION", "f_116747_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.BlockArgumentParser#UNCLOSED_PROPERTIES_EXCEPTION
    [[maybe_unused]] static void set_field_UNCLOSED_PROPERTIES_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ERROR_EXPECTED_END_OF_PROPERTIES", "field_10684", "UNCLOSED_PROPERTIES_EXCEPTION", "f_116747_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.BlockArgumentParser#UNKNOWN_BLOCK_TAG_EXCEPTION
    [[maybe_unused]] static jobject get_field_UNKNOWN_BLOCK_TAG_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ERROR_UNKNOWN_TAG", "field_37965", "UNKNOWN_BLOCK_TAG_EXCEPTION", "f_234669_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.BlockArgumentParser#UNKNOWN_BLOCK_TAG_EXCEPTION
    [[maybe_unused]] static void set_field_UNKNOWN_BLOCK_TAG_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ERROR_UNKNOWN_TAG", "field_37965", "UNKNOWN_BLOCK_TAG_EXCEPTION", "f_234669_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.argument.BlockArgumentParser#PROPERTIES_OPENING
    [[maybe_unused]] static jchar get_field_PROPERTIES_OPENING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SYNTAX_START_PROPERTIES", "field_32800", "PROPERTIES_OPENING", "f_174101_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#PROPERTIES_OPENING
    [[maybe_unused]] static void set_field_PROPERTIES_OPENING(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SYNTAX_START_PROPERTIES", "field_32800", "PROPERTIES_OPENING", "f_174101_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.argument.BlockArgumentParser#NBT_OPENING
    [[maybe_unused]] static jchar get_field_NBT_OPENING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SYNTAX_START_NBT", "field_32801", "NBT_OPENING", "f_174102_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#NBT_OPENING
    [[maybe_unused]] static void set_field_NBT_OPENING(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SYNTAX_START_NBT", "field_32801", "NBT_OPENING", "f_174102_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.argument.BlockArgumentParser#PROPERTIES_CLOSING
    [[maybe_unused]] static jchar get_field_PROPERTIES_CLOSING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SYNTAX_END_PROPERTIES", "field_32802", "PROPERTIES_CLOSING", "f_174103_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#PROPERTIES_CLOSING
    [[maybe_unused]] static void set_field_PROPERTIES_CLOSING(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SYNTAX_END_PROPERTIES", "field_32802", "PROPERTIES_CLOSING", "f_174103_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.argument.BlockArgumentParser#PROPERTY_DEFINER
    [[maybe_unused]] static jchar get_field_PROPERTY_DEFINER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SYNTAX_EQUALS", "field_32803", "PROPERTY_DEFINER", "f_174104_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#PROPERTY_DEFINER
    [[maybe_unused]] static void set_field_PROPERTY_DEFINER(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SYNTAX_EQUALS", "field_32803", "PROPERTY_DEFINER", "f_174104_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.argument.BlockArgumentParser#PROPERTY_SEPARATOR
    [[maybe_unused]] static jchar get_field_PROPERTY_SEPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SYNTAX_PROPERTY_SEPARATOR", "field_32804", "PROPERTY_SEPARATOR", "f_174105_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#PROPERTY_SEPARATOR
    [[maybe_unused]] static void set_field_PROPERTY_SEPARATOR(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SYNTAX_PROPERTY_SEPARATOR", "field_32804", "PROPERTY_SEPARATOR", "f_174105_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.argument.BlockArgumentParser#TAG_PREFIX
    [[maybe_unused]] static jchar get_field_TAG_PREFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SYNTAX_TAG", "field_32805", "TAG_PREFIX", "f_174106_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#TAG_PREFIX
    [[maybe_unused]] static void set_field_TAG_PREFIX(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SYNTAX_TAG", "field_32805", "TAG_PREFIX", "f_174106_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.argument.BlockArgumentParser#SUGGEST_DEFAULT
    [[maybe_unused]] static jobject get_field_SUGGEST_DEFAULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SUGGEST_NOTHING", "field_10682", "SUGGEST_DEFAULT", "f_116748_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#SUGGEST_DEFAULT
    [[maybe_unused]] static void set_field_SUGGEST_DEFAULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SUGGEST_NOTHING", "field_10682", "SUGGEST_DEFAULT", "f_116748_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.BlockArgumentParser#registryWrapper
    static jobject get_field_registryWrapper(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "blocks", "field_37966", "registryWrapper", "f_234670_"), "Ljo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#registryWrapper
    static void set_field_registryWrapper(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "blocks", "field_37966", "registryWrapper", "f_234670_"), "Ljo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.BlockArgumentParser#reader
    static jobject get_field_reader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "reader", "field_10698", "reader", "f_116749_"), "Lcom/mojang/brigadier/StringReader;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#reader
    static void set_field_reader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "reader", "field_10698", "reader", "f_116749_"), "Lcom/mojang/brigadier/StringReader;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.BlockArgumentParser#allowTag
    static jboolean get_field_allowTag(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "forTesting", "field_10687", "allowTag", "f_116750_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#allowTag
    static void set_field_allowTag(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "forTesting", "field_10687", "allowTag", "f_116750_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.BlockArgumentParser#allowSnbt
    static jboolean get_field_allowSnbt(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "allowNbt", "field_37967", "allowSnbt", "f_234671_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#allowSnbt
    static void set_field_allowSnbt(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "allowNbt", "field_37967", "allowSnbt", "f_234671_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.BlockArgumentParser#blockProperties
    static jobject get_field_blockProperties(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "properties", "field_10699", "blockProperties", "f_116751_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#blockProperties
    static void set_field_blockProperties(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "properties", "field_10699", "blockProperties", "f_116751_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.BlockArgumentParser#tagProperties
    static jobject get_field_tagProperties(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "vagueProperties", "field_10685", "tagProperties", "f_116752_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#tagProperties
    static void set_field_tagProperties(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "vagueProperties", "field_10685", "tagProperties", "f_116752_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.BlockArgumentParser#blockId
    static jobject get_field_blockId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "id", "field_10697", "blockId", "f_116753_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#blockId
    static void set_field_blockId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "id", "field_10697", "blockId", "f_116753_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.BlockArgumentParser#stateFactory
    static jobject get_field_stateFactory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "definition", "field_10689", "stateFactory", "f_116754_"), "Ldtd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#stateFactory
    static void set_field_stateFactory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "definition", "field_10689", "stateFactory", "f_116754_"), "Ldtd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.BlockArgumentParser#blockState
    static jobject get_field_blockState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "state", "field_10686", "blockState", "f_116755_"), "Ldtc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#blockState
    static void set_field_blockState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "state", "field_10686", "blockState", "f_116755_"), "Ldtc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.BlockArgumentParser#data
    static jobject get_field_data(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "nbt", "field_10693", "data", "f_116756_"), "Lub;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#data
    static void set_field_data(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "nbt", "field_10693", "data", "f_116756_"), "Lub;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.BlockArgumentParser#tagId
    static jobject get_field_tagId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "tag", "field_10681", "tagId", "f_116757_"), "Ljq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#tagId
    static void set_field_tagId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "tag", "field_10681", "tagId", "f_116757_"), "Ljq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.BlockArgumentParser#suggestions
    static jobject get_field_suggestions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "suggestions", "field_10696", "suggestions", "f_116759_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.BlockArgumentParser#suggestions
    static void set_field_suggestions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "suggestions", "field_10696", "suggestions", "f_116759_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_block() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseForBlock", "method_41957", "block", "m_245437_"), "(Ljo;Ljava/lang/String;Z)Lgn$a;");
    }

    static jobject block(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_block();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__block() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseForBlock", "method_41955", "block", "m_234691_"), "(Ljo;Lcom/mojang/brigadier/StringReader;Z)Lgn$a;");
    }

    static jobject _block(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__block();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_blockOrTag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "parseForTesting", "method_41962", "blockOrTag", "m_247724_"), "(Ljo;Ljava/lang/String;Z)Lcom/mojang/datafixers/util/Either;");
    }

    static jobject blockOrTag(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_blockOrTag();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__blockOrTag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "parseForTesting", "method_41960", "blockOrTag", "m_234716_"), "(Ljo;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either;");
    }

    static jobject _blockOrTag(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__blockOrTag();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getSuggestions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fillSuggestions", "method_9666", "getSuggestions", "m_234695_"), "(Ljo;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;ZZ)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject getSuggestions(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getSuggestions();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_9678", "parse", "m_234677_"), "()V");
    }

    static void parse(const jobject& obj) {
                
       const auto methodID = methodID_parse();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_suggestBlockPropertiesOrEnd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "suggestPropertyNameOrEnd", "method_9671", "suggestBlockPropertiesOrEnd", "m_234683_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestBlockPropertiesOrEnd(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_suggestBlockPropertiesOrEnd();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_suggestTagPropertiesOrEnd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "suggestVaguePropertyNameOrEnd", "method_9674", "suggestTagPropertiesOrEnd", "m_234714_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestTagPropertiesOrEnd(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_suggestTagPropertiesOrEnd();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_suggestBlockProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "suggestPropertyName", "method_9665", "suggestBlockProperties", "m_234728_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestBlockProperties(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_suggestBlockProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_suggestTagProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "suggestVaguePropertyName", "method_9667", "suggestTagProperties", "m_234730_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestTagProperties(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_suggestTagProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_suggestSnbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "suggestOpenNbt", "method_9687", "suggestSnbt", "m_234732_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestSnbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_suggestSnbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasBlockEntity", "method_9676", "hasBlockEntity", "m_234713_"), "()Z");
    }

    static jboolean hasBlockEntity(const jobject& obj) {
                
       const auto methodID = methodID_hasBlockEntity();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_suggestEqualsCharacter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "suggestEquals", "method_9693", "suggestEqualsCharacter", "m_234734_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestEqualsCharacter(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_suggestEqualsCharacter();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_suggestCommaOrEnd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "suggestNextPropertyOrEnd", "method_9689", "suggestCommaOrEnd", "m_234736_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestCommaOrEnd(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_suggestCommaOrEnd();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_suggestPropertyValues() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addSuggestions", "method_9662", "suggestPropertyValues", "m_116786_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lduf;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;");
    }

    static jobject suggestPropertyValues(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_suggestPropertyValues();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_suggestTagPropertyValues() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "suggestVaguePropertyValue", "method_9690", "suggestTagPropertyValues", "m_234685_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestTagPropertyValues(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_suggestTagPropertyValues();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_suggestSnbtOrTagProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "suggestOpenVaguePropertiesOrNbt", "method_9679", "suggestSnbtOrTagProperties", "m_234738_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestSnbtOrTagProperties(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_suggestSnbtOrTagProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_suggestSnbtOrBlockProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "suggestOpenPropertiesOrNbt", "method_9681", "suggestSnbtOrBlockProperties", "m_234740_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestSnbtOrBlockProperties(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_suggestSnbtOrBlockProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_suggestIdentifiers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "suggestTag", "method_9670", "suggestIdentifiers", "m_234742_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestIdentifiers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_suggestIdentifiers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_suggestBlockId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "suggestItem", "method_41963", "suggestBlockId", "m_234744_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestBlockId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_suggestBlockId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_suggestBlockOrTagId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "suggestBlockIdOrTag", "method_9673", "suggestBlockOrTagId", "m_234746_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestBlockOrTagId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_suggestBlockOrTagId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_parseBlockId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "readBlock", "method_9675", "parseBlockId", "m_116826_"), "()V");
    }

    static void parseBlockId(const jobject& obj) {
                
       const auto methodID = methodID_parseBlockId();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_parseTagId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "readTag", "method_9677", "parseTagId", "m_116830_"), "()V");
    }

    static void parseTagId(const jobject& obj) {
                
       const auto methodID = methodID_parseTagId();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_parseBlockProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "readProperties", "method_9659", "parseBlockProperties", "m_116834_"), "()V");
    }

    static void parseBlockProperties(const jobject& obj) {
                
       const auto methodID = methodID_parseBlockProperties();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_parseTagProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "readVagueProperties", "method_9680", "parseTagProperties", "m_116838_"), "()V");
    }

    static void parseTagProperties(const jobject& obj) {
                
       const auto methodID = methodID_parseTagProperties();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_parseSnbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "readNbt", "method_9672", "parseSnbt", "m_116842_"), "()V");
    }

    static void parseSnbt(const jobject& obj) {
                
       const auto methodID = methodID_parseSnbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_parsePropertyValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setValue", "method_9668", "parsePropertyValue", "m_116775_"), "(Lduf;Ljava/lang/String;I)V");
    }

    static void parsePropertyValue(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_parsePropertyValue();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_stringifyBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "serialize", "method_9685", "stringifyBlockState", "m_116769_"), "(Ldtc;)Ljava/lang/String;");
    }

    static jobject stringifyBlockState(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_stringifyBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_stringifyProperty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "appendProperty", "method_9663", "stringifyProperty", "m_116802_"), "(Ljava/lang/StringBuilder;Lduf;Ljava/lang/Comparable;)V");
    }

    static void stringifyProperty(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_stringifyProperty();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_BLOCKARGUMENTPARSER_HPP