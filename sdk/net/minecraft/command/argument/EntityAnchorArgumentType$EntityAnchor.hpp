// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_ENTITYANCHORARGUMENTTYPE$ENTITYANCHOR_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_ENTITYANCHORARGUMENTTYPE$ENTITYANCHOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.EntityAnchorArgumentType$EntityAnchor
 * Remapped: ff$a
 */
namespace EntityAnchorArgumentType$EntityAnchor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ff$a", "net/minecraft/commands/arguments/EntityAnchorArgument$Anchor", "net/minecraft/class_2183$class_2184", "net/minecraft/command/argument/EntityAnchorArgumentType$EntityAnchor", "net/minecraft/src/C_3361_$C_3362_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.command.argument.EntityAnchorArgumentType$EntityAnchor#FEET
    [[maybe_unused]] static jobject get_field_FEET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FEET", "field_9853", "FEET", "FEET"), "Lff$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.EntityAnchorArgumentType$EntityAnchor#FEET
    [[maybe_unused]] static void set_field_FEET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FEET", "field_9853", "FEET", "FEET"), "Lff$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.EntityAnchorArgumentType$EntityAnchor#EYES
    [[maybe_unused]] static jobject get_field_EYES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EYES", "field_9851", "EYES", "EYES"), "Lff$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.EntityAnchorArgumentType$EntityAnchor#EYES
    [[maybe_unused]] static void set_field_EYES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EYES", "field_9851", "EYES", "EYES"), "Lff$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.command.argument.EntityAnchorArgumentType$EntityAnchor#ANCHORS
    [[maybe_unused]] static jobject get_field_ANCHORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BY_NAME", "field_9852", "ANCHORS", "f_90366_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.command.argument.EntityAnchorArgumentType$EntityAnchor#ANCHORS
    [[maybe_unused]] static void set_field_ANCHORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BY_NAME", "field_9852", "ANCHORS", "f_90366_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.EntityAnchorArgumentType$EntityAnchor#id
    static jobject get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "name", "field_9849", "id", "f_90367_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.EntityAnchorArgumentType$EntityAnchor#id
    static void set_field_id(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "name", "field_9849", "id", "f_90367_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.EntityAnchorArgumentType$EntityAnchor#offset
    static jobject get_field_offset(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "transform", "field_9848", "offset", "f_90368_"), "Ljava/util/function/BiFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.EntityAnchorArgumentType$EntityAnchor#offset
    static void set_field_offset(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "transform", "field_9848", "offset", "f_90368_"), "Ljava/util/function/BiFunction;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lff$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lff$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getByName", "method_9296", "fromId", "m_90384_"), "(Ljava/lang/String;)Lff$a;");
    }

    static jobject fromId(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromId();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_positionAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_9302", "positionAt", "m_90377_"), "(Lbsr;)Lexc;");
    }

    static jobject positionAt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_positionAt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__positionAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_9299", "positionAt", "m_90379_"), "(Let;)Lexc;");
    }

    static jobject _positionAt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__positionAt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_ENTITYANCHORARGUMENTTYPE$ENTITYANCHOR_HPP