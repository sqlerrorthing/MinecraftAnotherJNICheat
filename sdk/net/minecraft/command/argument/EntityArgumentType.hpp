// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_ENTITYARGUMENTTYPE_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_ENTITYARGUMENTTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.EntityArgumentType
 * Remapped: fg
 */
namespace EntityArgumentType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fg", "net/minecraft/commands/arguments/EntityArgument", "net/minecraft/class_2186", "net/minecraft/command/argument/EntityArgumentType", "net/minecraft/src/C_3395_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.command.argument.EntityArgumentType#EXAMPLES
    [[maybe_unused]] static jobject get_field_EXAMPLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "EXAMPLES", "field_9859", "EXAMPLES", "f_91442_"), "Ljava/util/Collection;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.EntityArgumentType#EXAMPLES
    [[maybe_unused]] static void set_field_EXAMPLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "EXAMPLES", "field_9859", "EXAMPLES", "f_91442_"), "Ljava/util/Collection;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.EntityArgumentType#TOO_MANY_ENTITIES_EXCEPTION
    [[maybe_unused]] static jobject get_field_TOO_MANY_ENTITIES_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_NOT_SINGLE_ENTITY", "field_9860", "TOO_MANY_ENTITIES_EXCEPTION", "f_91436_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.EntityArgumentType#TOO_MANY_ENTITIES_EXCEPTION
    [[maybe_unused]] static void set_field_TOO_MANY_ENTITIES_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_NOT_SINGLE_ENTITY", "field_9860", "TOO_MANY_ENTITIES_EXCEPTION", "f_91436_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.EntityArgumentType#TOO_MANY_PLAYERS_EXCEPTION
    [[maybe_unused]] static jobject get_field_TOO_MANY_PLAYERS_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_NOT_SINGLE_PLAYER", "field_9864", "TOO_MANY_PLAYERS_EXCEPTION", "f_91437_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.EntityArgumentType#TOO_MANY_PLAYERS_EXCEPTION
    [[maybe_unused]] static void set_field_TOO_MANY_PLAYERS_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_NOT_SINGLE_PLAYER", "field_9864", "TOO_MANY_PLAYERS_EXCEPTION", "f_91437_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.EntityArgumentType#PLAYER_SELECTOR_HAS_ENTITIES_EXCEPTION
    [[maybe_unused]] static jobject get_field_PLAYER_SELECTOR_HAS_ENTITIES_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_ONLY_PLAYERS_ALLOWED", "field_9861", "PLAYER_SELECTOR_HAS_ENTITIES_EXCEPTION", "f_91438_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.EntityArgumentType#PLAYER_SELECTOR_HAS_ENTITIES_EXCEPTION
    [[maybe_unused]] static void set_field_PLAYER_SELECTOR_HAS_ENTITIES_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_ONLY_PLAYERS_ALLOWED", "field_9861", "PLAYER_SELECTOR_HAS_ENTITIES_EXCEPTION", "f_91438_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.EntityArgumentType#ENTITY_NOT_FOUND_EXCEPTION
    [[maybe_unused]] static jobject get_field_ENTITY_NOT_FOUND_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NO_ENTITIES_FOUND", "field_9863", "ENTITY_NOT_FOUND_EXCEPTION", "f_91439_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.EntityArgumentType#ENTITY_NOT_FOUND_EXCEPTION
    [[maybe_unused]] static void set_field_ENTITY_NOT_FOUND_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NO_ENTITIES_FOUND", "field_9863", "ENTITY_NOT_FOUND_EXCEPTION", "f_91439_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.EntityArgumentType#PLAYER_NOT_FOUND_EXCEPTION
    [[maybe_unused]] static jobject get_field_PLAYER_NOT_FOUND_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NO_PLAYERS_FOUND", "field_9856", "PLAYER_NOT_FOUND_EXCEPTION", "f_91440_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.EntityArgumentType#PLAYER_NOT_FOUND_EXCEPTION
    [[maybe_unused]] static void set_field_PLAYER_NOT_FOUND_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NO_PLAYERS_FOUND", "field_9856", "PLAYER_NOT_FOUND_EXCEPTION", "f_91440_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.EntityArgumentType#NOT_ALLOWED_EXCEPTION
    [[maybe_unused]] static jobject get_field_NOT_ALLOWED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ERROR_SELECTORS_NOT_ALLOWED", "field_9862", "NOT_ALLOWED_EXCEPTION", "f_91441_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.EntityArgumentType#NOT_ALLOWED_EXCEPTION
    [[maybe_unused]] static void set_field_NOT_ALLOWED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ERROR_SELECTORS_NOT_ALLOWED", "field_9862", "NOT_ALLOWED_EXCEPTION", "f_91441_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.command.argument.EntityArgumentType#singleTarget
    static jboolean get_field_singleTarget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "single", "field_9858", "singleTarget", "f_91443_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.command.argument.EntityArgumentType#singleTarget
    static void set_field_singleTarget(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "single", "field_9858", "singleTarget", "f_91443_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.command.argument.EntityArgumentType#playersOnly
    static jboolean get_field_playersOnly(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "playersOnly", "field_9857", "playersOnly", "f_91444_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.command.argument.EntityArgumentType#playersOnly
    static void set_field_playersOnly(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "playersOnly", "field_9857", "playersOnly", "f_91444_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_entity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "entity", "method_9309", "entity", "m_91449_"), "()Lfg;");
    }

    static jobject entity() {
       const auto clazz = self();
       const auto methodID = methodID_entity();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntity", "method_9313", "getEntity", "m_91452_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbsr;");
    }

    static jobject getEntity(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getEntity();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_entities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "entities", "method_9306", "entities", "m_91460_"), "()Lfg;");
    }

    static jobject entities() {
       const auto clazz = self();
       const auto methodID = methodID_entities();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getEntities", "method_9317", "getEntities", "m_91461_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;");
    }

    static jobject getEntities(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getEntities();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getOptionalEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getOptionalEntities", "method_9307", "getOptionalEntities", "m_91467_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;");
    }

    static jobject getOptionalEntities(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getOptionalEntities();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getOptionalPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getOptionalPlayers", "method_9310", "getOptionalPlayers", "m_91471_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;");
    }

    static jobject getOptionalPlayers(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getOptionalPlayers();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_player() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "player", "method_9305", "player", "m_91466_"), "()Lfg;");
    }

    static jobject player() {
       const auto clazz = self();
       const auto methodID = methodID_player();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "getPlayer", "method_9315", "getPlayer", "m_91474_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laqv;");
    }

    static jobject getPlayer(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getPlayer();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_players() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "players", "method_9308", "players", "m_91470_"), "()Lfg;");
    }

    static jobject players() {
       const auto clazz = self();
       const auto methodID = methodID_players();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "getPlayers", "method_9312", "getPlayers", "m_91477_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;");
    }

    static jobject getPlayers(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getPlayers();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_9318", "parse", "parse"), "(Lcom/mojang/brigadier/StringReader;)Lhi;");
    }

    static jobject parse(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_parse();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_listSuggestions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("listSuggestions", "listSuggestions", "listSuggestions", "listSuggestions", "listSuggestions"), "(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject listSuggestions(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_listSuggestions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getExamples() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getExamples", "getExamples", "", "", "getExamples"), "()Ljava/util/Collection;");
    }

    static jobject getExamples(const jobject& obj) {
                
       const auto methodID = methodID_getExamples();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_ENTITYARGUMENTTYPE_HPP