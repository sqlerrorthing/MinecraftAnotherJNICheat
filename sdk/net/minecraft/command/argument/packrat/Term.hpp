// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_PACKRAT_TERM_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_PACKRAT_TERM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.packrat.Term
 * Remapped: bmo
 */
namespace Term {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bmo", "net/minecraft/util/parsing/packrat/Term", "net/minecraft/class_9402", "net/minecraft/command/argument/packrat/Term", "net/minecraft/src/C_313597_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_matches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_58334", "matches", "m_319964_"), "(Lbmk;Lbmm;Lbmg;)Z");
    }

    static jboolean matches(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_matches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_symbol() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "named", "method_58332", "symbol", "m_321288_"), "(Lbmf;)Lbmo;");
    }

    static jobject symbol(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_symbol();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_always() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "marker", "method_58333", "always", "m_324581_"), "(Lbmf;Ljava/lang/Object;)Lbmo;");
    }

    static jobject always(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_always();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_sequence() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "sequence", "method_58336", "sequence", "m_322077_"), "([Lbmo;)Lbmo;");
    }

    static jobject sequence(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_sequence();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_anyOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "alternative", "method_58338", "anyOf", "m_319180_"), "([Lbmo;)Lbmo;");
    }

    static jobject anyOf(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_anyOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_optional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "optional", "method_58335", "optional", "m_325045_"), "(Lbmo;)Lbmo;");
    }

    static jobject optional(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_optional();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_cutting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "cut", "method_58331", "cutting", "m_324824_"), "()Lbmo;");
    }

    static jobject cutting() {
       const auto clazz = self();
       const auto methodID = methodID_cutting();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_epsilon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "empty", "method_58337", "epsilon", "m_324056_"), "()Lbmo;");
    }

    static jobject epsilon() {
       const auto clazz = self();
       const auto methodID = methodID_epsilon();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_PACKRAT_TERM_HPP