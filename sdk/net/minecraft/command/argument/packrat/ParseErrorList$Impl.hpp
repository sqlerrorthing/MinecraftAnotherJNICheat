// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_PACKRAT_PARSEERRORLIST$IMPL_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_PACKRAT_PARSEERRORLIST$IMPL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.packrat.ParseErrorList$Impl
 * Remapped: bmi$a
 */
namespace ParseErrorList$Impl {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bmi$a", "net/minecraft/util/parsing/packrat/ErrorCollector$LongestOnly", "net/minecraft/class_9390$class_9391", "net/minecraft/command/argument/packrat/ParseErrorList$Impl", "net/minecraft/src/C_313357_$C_313631_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.command.argument.packrat.ParseErrorList$Impl#errors
    static jobject get_field_errors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "entries", "field_49961", "errors", "f_315382_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.packrat.ParseErrorList$Impl#errors
    static void set_field_errors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "entries", "field_49961", "errors", "f_315382_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.packrat.ParseErrorList$Impl#cursor
    static jint get_field_cursor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lastCursor", "field_49962", "cursor", "f_316841_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.packrat.ParseErrorList$Impl#cursor
    static void set_field_cursor(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lastCursor", "field_49962", "cursor", "f_316841_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_moveCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "discardErrorsFromShorterParse", "method_58309", "moveCursor", "m_321550_"), "(I)V");
    }

    static void moveCursor(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_moveCursor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finish", "method_58304", "setCursor", "m_318862_"), "(I)V");
    }

    static void setCursor(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setCursor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "store", "method_58305", "add", "m_322006_"), "(ILbmn;Ljava/lang/Object;)V");
    }

    static void add(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getErrors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "entries", "method_58307", "getErrors", "m_321518_"), "()Ljava/util/List;");
    }

    static jobject getErrors(const jobject& obj) {
                
       const auto methodID = methodID_getErrors();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "cursor", "method_58308", "getCursor", "m_323319_"), "()I");
    }

    static jint getCursor(const jobject& obj) {
                
       const auto methodID = methodID_getCursor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_PACKRAT_PARSEERRORLIST$IMPL_HPP