// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_REGISTRYENTRYARGUMENTTYPE_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_REGISTRYENTRYARGUMENTTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.RegistryEntryArgumentType
 * Remapped: fv
 */
namespace RegistryEntryArgumentType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fv", "net/minecraft/commands/arguments/ResourceOrIdArgument", "net/minecraft/class_9433", "net/minecraft/command/argument/RegistryEntryArgumentType", "net/minecraft/src/C_313558_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.command.argument.RegistryEntryArgumentType#EXAMPLES
    [[maybe_unused]] static jobject get_field_EXAMPLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EXAMPLES", "field_50038", "EXAMPLES", "f_316926_"), "Ljava/util/Collection;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.RegistryEntryArgumentType#EXAMPLES
    [[maybe_unused]] static void set_field_EXAMPLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EXAMPLES", "field_50038", "EXAMPLES", "f_316926_"), "Ljava/util/Collection;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.RegistryEntryArgumentType#FAILED_TO_PARSE_EXCEPTION
    [[maybe_unused]] static jobject get_field_FAILED_TO_PARSE_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_FAILED_TO_PARSE", "field_50037", "FAILED_TO_PARSE_EXCEPTION", "f_315623_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.RegistryEntryArgumentType#FAILED_TO_PARSE_EXCEPTION
    [[maybe_unused]] static void set_field_FAILED_TO_PARSE_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_FAILED_TO_PARSE", "field_50037", "FAILED_TO_PARSE_EXCEPTION", "f_315623_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.argument.RegistryEntryArgumentType#INVALID_EXCEPTION
    [[maybe_unused]] static jobject get_field_INVALID_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_INVALID", "field_50039", "INVALID_EXCEPTION", "f_314815_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.RegistryEntryArgumentType#INVALID_EXCEPTION
    [[maybe_unused]] static void set_field_INVALID_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_INVALID", "field_50039", "INVALID_EXCEPTION", "f_314815_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.RegistryEntryArgumentType#registryLookup
    static jobject get_field_registryLookup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "registryLookup", "field_50040", "registryLookup", "f_315523_"), "Ljo$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.RegistryEntryArgumentType#registryLookup
    static void set_field_registryLookup(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "registryLookup", "field_50040", "registryLookup", "f_315523_"), "Ljo$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.RegistryEntryArgumentType#canLookupRegistry
    static jboolean get_field_canLookupRegistry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "hasRegistry", "field_50041", "canLookupRegistry", "f_316282_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.RegistryEntryArgumentType#canLookupRegistry
    static void set_field_canLookupRegistry(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "hasRegistry", "field_50041", "canLookupRegistry", "f_316282_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.RegistryEntryArgumentType#entryCodec
    static jobject get_field_entryCodec(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "codec", "field_50042", "entryCodec", "f_315174_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.RegistryEntryArgumentType#entryCodec
    static void set_field_entryCodec(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "codec", "field_50042", "entryCodec", "f_315174_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_lootTable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "lootTable", "method_58482", "lootTable", "m_324396_"), "(Lep;)Lfv$c;");
    }

    static jobject lootTable(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_lootTable();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getLootTable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getLootTable", "method_58481", "getLootTable", "m_319428_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm;");
    }

    static jobject getLootTable(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getLootTable();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_lootFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "lootModifier", "method_58486", "lootFunction", "m_321589_"), "(Lep;)Lfv$a;");
    }

    static jobject lootFunction(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_lootFunction();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getLootFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getLootModifier", "method_58485", "getLootFunction", "m_320065_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm;");
    }

    static jobject getLootFunction(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getLootFunction();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_lootCondition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "lootPredicate", "method_58489", "lootCondition", "m_324190_"), "(Lep;)Lfv$b;");
    }

    static jobject lootCondition(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_lootCondition();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getLootCondition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getLootPredicate", "method_58488", "getLootCondition", "m_323980_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm;");
    }

    static jobject getLootCondition(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getLootCondition();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getArgument() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getResource", "method_58490", "getArgument", "m_323671_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm;");
    }

    static jobject getArgument(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getArgument();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_58479", "parse", "parse"), "(Lcom/mojang/brigadier/StringReader;)Ljm;");
    }

    static jobject parse(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_parse();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_parseAsNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "parseInlineOrId", "method_58484", "parseAsNbt", "m_319147_"), "(Lcom/mojang/brigadier/StringReader;)Luy;");
    }

    static jobject parseAsNbt(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_parseAsNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasFinishedReading() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "hasConsumedWholeArg", "method_58487", "hasFinishedReading", "m_318795_"), "(Lcom/mojang/brigadier/StringReader;)Z");
    }

    static jboolean hasFinishedReading(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasFinishedReading();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getExamples() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getExamples", "getExamples", "", "", "getExamples"), "()Ljava/util/Collection;");
    }

    static jobject getExamples(const jobject& obj) {
                
       const auto methodID = methodID_getExamples();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_REGISTRYENTRYARGUMENTTYPE_HPP