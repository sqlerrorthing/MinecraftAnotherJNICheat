// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_REGISTRYENTRYREFERENCEARGUMENTTYPE_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_REGISTRYENTRYREFERENCEARGUMENTTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.RegistryEntryReferenceArgumentType
 * Remapped: fs
 */
namespace RegistryEntryReferenceArgumentType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fs", "net/minecraft/commands/arguments/ResourceArgument", "net/minecraft/class_7733", "net/minecraft/command/argument/RegistryEntryReferenceArgumentType", "net/minecraft/src/C_243654_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.command.argument.RegistryEntryReferenceArgumentType#EXAMPLES
    [[maybe_unused]] static jobject get_field_EXAMPLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "EXAMPLES", "field_40403", "EXAMPLES", "f_244573_"), "Ljava/util/Collection;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.RegistryEntryReferenceArgumentType#EXAMPLES
    [[maybe_unused]] static void set_field_EXAMPLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "EXAMPLES", "field_40403", "EXAMPLES", "f_244573_"), "Ljava/util/Collection;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.argument.RegistryEntryReferenceArgumentType#NOT_SUMMONABLE_EXCEPTION
    [[maybe_unused]] static jobject get_field_NOT_SUMMONABLE_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_NOT_SUMMONABLE_ENTITY", "field_40404", "NOT_SUMMONABLE_EXCEPTION", "f_244234_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.RegistryEntryReferenceArgumentType#NOT_SUMMONABLE_EXCEPTION
    [[maybe_unused]] static void set_field_NOT_SUMMONABLE_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_NOT_SUMMONABLE_ENTITY", "field_40404", "NOT_SUMMONABLE_EXCEPTION", "f_244234_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.RegistryEntryReferenceArgumentType#NOT_FOUND_EXCEPTION
    [[maybe_unused]] static jobject get_field_NOT_FOUND_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_UNKNOWN_RESOURCE", "field_40401", "NOT_FOUND_EXCEPTION", "f_244450_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.RegistryEntryReferenceArgumentType#NOT_FOUND_EXCEPTION
    [[maybe_unused]] static void set_field_NOT_FOUND_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_UNKNOWN_RESOURCE", "field_40401", "NOT_FOUND_EXCEPTION", "f_244450_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.argument.RegistryEntryReferenceArgumentType#INVALID_TYPE_EXCEPTION
    [[maybe_unused]] static jobject get_field_INVALID_TYPE_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_INVALID_RESOURCE_TYPE", "field_40402", "INVALID_TYPE_EXCEPTION", "f_243885_"), "Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.argument.RegistryEntryReferenceArgumentType#INVALID_TYPE_EXCEPTION
    [[maybe_unused]] static void set_field_INVALID_TYPE_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_INVALID_RESOURCE_TYPE", "field_40402", "INVALID_TYPE_EXCEPTION", "f_243885_"), "Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.command.argument.RegistryEntryReferenceArgumentType#registryRef
    static jobject get_field_registryRef(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "registryKey", "field_40405", "registryRef", "f_244609_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.command.argument.RegistryEntryReferenceArgumentType#registryRef
    static void set_field_registryRef(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "registryKey", "field_40405", "registryRef", "f_244609_"), "Lakq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.RegistryEntryReferenceArgumentType#registryWrapper
    static jobject get_field_registryWrapper(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "registryLookup", "field_40406", "registryWrapper", "f_243861_"), "Ljo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.RegistryEntryReferenceArgumentType#registryWrapper
    static void set_field_registryWrapper(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "registryLookup", "field_40406", "registryWrapper", "f_243861_"), "Ljo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_registryEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "resource", "method_45603", "registryEntry", "m_247102_"), "(Lep;Lakq;)Lfs;");
    }

    static jobject registryEntry(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_registryEntry();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getRegistryEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getResource", "method_45602", "getRegistryEntry", "m_246781_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lakq;)Ljm$c;");
    }

    static jobject getRegistryEntry(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getRegistryEntry();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getEntityAttribute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getAttribute", "method_45601", "getEntityAttribute", "m_245688_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;");
    }

    static jobject getEntityAttribute(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getEntityAttribute();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getConfiguredFeature() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getConfiguredFeature", "method_45607", "getConfiguredFeature", "m_245599_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;");
    }

    static jobject getConfiguredFeature(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getConfiguredFeature();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getStructure() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getStructure", "method_45608", "getStructure", "m_247467_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;");
    }

    static jobject getStructure(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getStructure();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getEntityType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getEntityType", "method_45609", "getEntityType", "m_246260_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;");
    }

    static jobject getEntityType(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getEntityType();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSummonableEntityType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "getSummonableEntityType", "method_45610", "getSummonableEntityType", "m_247713_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;");
    }

    static jobject getSummonableEntityType(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getSummonableEntityType();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getStatusEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "getMobEffect", "method_45611", "getStatusEffect", "m_247201_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;");
    }

    static jobject getStatusEffect(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getStatusEffect();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getEnchantment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "getEnchantment", "method_45612", "getEnchantment", "m_245369_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;");
    }

    static jobject getEnchantment(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getEnchantment();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_45600", "parse", "parse"), "(Lcom/mojang/brigadier/StringReader;)Ljm$c;");
    }

    static jobject parse(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_parse();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_listSuggestions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("listSuggestions", "listSuggestions", "listSuggestions", "listSuggestions", "listSuggestions"), "(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject listSuggestions(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_listSuggestions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getExamples() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getExamples", "getExamples", "", "", "getExamples"), "()Ljava/util/Collection;");
    }

    static jobject getExamples(const jobject& obj) {
                
       const auto methodID = methodID_getExamples();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_REGISTRYENTRYREFERENCEARGUMENTTYPE_HPP