// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_ANGLEARGUMENTTYPE$ANGLE_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_ANGLEARGUMENTTYPE$ANGLE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.AngleArgumentType$Angle
 * Remapped: ez$a
 */
namespace AngleArgumentType$Angle {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ez$a", "net/minecraft/commands/arguments/AngleArgument$SingleAngle", "net/minecraft/class_5473$class_5474", "net/minecraft/command/argument/AngleArgumentType$Angle", "net/minecraft/src/C_3095_$C_3097_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.command.argument.AngleArgumentType$Angle#angle
    static jfloat get_field_angle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "angle", "field_26370", "angle", "f_83816_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.AngleArgumentType$Angle#angle
    static void set_field_angle(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "angle", "field_26370", "angle", "f_83816_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.argument.AngleArgumentType$Angle#relative
    static jboolean get_field_relative(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "isRelative", "field_26371", "relative", "f_83817_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.AngleArgumentType$Angle#relative
    static void set_field_relative(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "isRelative", "field_26371", "relative", "f_83817_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAngle", "method_30661", "getAngle", "m_83825_"), "(Let;)F");
    }

    static jfloat getAngle(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAngle();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_ANGLEARGUMENTTYPE$ANGLE_HPP