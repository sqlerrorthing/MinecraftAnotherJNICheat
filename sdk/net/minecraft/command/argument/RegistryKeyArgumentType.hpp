// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ARGUMENT_REGISTRYKEYARGUMENTTYPE_HPP
#define NET_MINECRAFT_COMMAND_ARGUMENT_REGISTRYKEYARGUMENTTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.argument.RegistryKeyArgumentType
 * Remapped: ft
 */
namespace RegistryKeyArgumentType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ft", "net/minecraft/commands/arguments/ResourceKeyArgument", "net/minecraft/class_7079", "net/minecraft/command/argument/RegistryKeyArgumentType", "net/minecraft/src/C_211818_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.command.argument.RegistryKeyArgumentType#EXAMPLES
    [[maybe_unused]] static jobject get_field_EXAMPLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EXAMPLES", "field_37269", "EXAMPLES", "f_212361_"), "Ljava/util/Collection;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.RegistryKeyArgumentType#EXAMPLES
    [[maybe_unused]] static void set_field_EXAMPLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EXAMPLES", "field_37269", "EXAMPLES", "f_212361_"), "Ljava/util/Collection;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.argument.RegistryKeyArgumentType#INVALID_FEATURE_EXCEPTION
    [[maybe_unused]] static jobject get_field_INVALID_FEATURE_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_INVALID_FEATURE", "field_37271", "INVALID_FEATURE_EXCEPTION", "f_212363_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.RegistryKeyArgumentType#INVALID_FEATURE_EXCEPTION
    [[maybe_unused]] static void set_field_INVALID_FEATURE_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_INVALID_FEATURE", "field_37271", "INVALID_FEATURE_EXCEPTION", "f_212363_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.argument.RegistryKeyArgumentType#INVALID_STRUCTURE_EXCEPTION
    [[maybe_unused]] static jobject get_field_INVALID_STRUCTURE_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_INVALID_STRUCTURE", "field_39191", "INVALID_STRUCTURE_EXCEPTION", "f_233246_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.RegistryKeyArgumentType#INVALID_STRUCTURE_EXCEPTION
    [[maybe_unused]] static void set_field_INVALID_STRUCTURE_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_INVALID_STRUCTURE", "field_39191", "INVALID_STRUCTURE_EXCEPTION", "f_233246_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.argument.RegistryKeyArgumentType#INVALID_JIGSAW_EXCEPTION
    [[maybe_unused]] static jobject get_field_INVALID_JIGSAW_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_INVALID_TEMPLATE_POOL", "field_39192", "INVALID_JIGSAW_EXCEPTION", "f_233247_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.argument.RegistryKeyArgumentType#INVALID_JIGSAW_EXCEPTION
    [[maybe_unused]] static void set_field_INVALID_JIGSAW_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_INVALID_TEMPLATE_POOL", "field_39192", "INVALID_JIGSAW_EXCEPTION", "f_233247_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.command.argument.RegistryKeyArgumentType#registryRef
    static jobject get_field_registryRef(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "registryKey", "field_37272", "registryRef", "f_212364_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.command.argument.RegistryKeyArgumentType#registryRef
    static void set_field_registryRef(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "registryKey", "field_37272", "registryRef", "f_212364_"), "Lakq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_registryKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "key", "method_41224", "registryKey", "m_212386_"), "(Lakq;)Lft;");
    }

    static jobject registryKey(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_registryKey();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRegistryKey", "method_41220", "getKey", "m_212373_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lakq;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lakq;");
    }

    static jobject getKey(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getKey();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getRegistry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRegistry", "method_41221", "getRegistry", "m_212378_"), "(Lcom/mojang/brigadier/context/CommandContext;Lakq;)Ljz;");
    }

    static jobject getRegistry(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getRegistry();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getRegistryEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "resolveKey", "method_43777", "getRegistryEntry", "m_246813_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lakq;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Ljm$c;");
    }

    static jobject getRegistryEntry(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getRegistryEntry();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getConfiguredFeatureEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getConfiguredFeature", "method_41225", "getConfiguredFeatureEntry", "m_245341_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;");
    }

    static jobject getConfiguredFeatureEntry(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getConfiguredFeatureEntry();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getStructureEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getStructure", "method_43779", "getStructureEntry", "m_247318_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;");
    }

    static jobject getStructureEntry(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getStructureEntry();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getStructurePoolEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getStructureTemplatePool", "method_43780", "getStructurePoolEntry", "m_247435_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;");
    }

    static jobject getStructurePoolEntry(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getStructurePoolEntry();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_41218", "parse", "parse"), "(Lcom/mojang/brigadier/StringReader;)Lakq;");
    }

    static jobject parse(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_parse();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_listSuggestions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("listSuggestions", "listSuggestions", "listSuggestions", "listSuggestions", "listSuggestions"), "(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject listSuggestions(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_listSuggestions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getExamples() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getExamples", "getExamples", "", "", "getExamples"), "()Ljava/util/Collection;");
    }

    static jobject getExamples(const jobject& obj) {
                
       const auto methodID = methodID_getExamples();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ARGUMENT_REGISTRYKEYARGUMENTTYPE_HPP