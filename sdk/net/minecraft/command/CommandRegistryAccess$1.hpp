// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_COMMANDREGISTRYACCESS$1_HPP
#define NET_MINECRAFT_COMMAND_COMMANDREGISTRYACCESS$1_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.CommandRegistryAccess$1
 * Remapped: ep$1
 */
namespace CommandRegistryAccess$1 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ep$1", "net/minecraft/commands/CommandBuildContext$1", "net/minecraft/class_7157$1", "net/minecraft/command/CommandRegistryAccess$1", "net/minecraft/src/C_213173_$C_213174_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_streamAllRegistryKeys() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "listRegistries", "method_55282", "streamAllRegistryKeys", "m_305097_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamAllRegistryKeys(const jobject& obj) {
                
       const auto methodID = methodID_streamAllRegistryKeys();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOptionalWrapper() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lookup", "method_46759", "getOptionalWrapper", "m_254861_"), "(Lakq;)Ljava/util/Optional;");
    }

    static jobject getOptionalWrapper(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOptionalWrapper();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_COMMANDREGISTRYACCESS$1_HPP