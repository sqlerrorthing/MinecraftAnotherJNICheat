// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ENTITYSELECTOROPTIONS_HPP
#define NET_MINECRAFT_COMMAND_ENTITYSELECTOROPTIONS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.EntitySelectorOptions
 * Remapped: hk
 */
namespace EntitySelectorOptions {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("hk", "net/minecraft/commands/arguments/selector/options/EntitySelectorOptions", "net/minecraft/class_2306", "net/minecraft/command/EntitySelectorOptions", "net/minecraft/src/C_4652_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.command.EntitySelectorOptions#OPTIONS
    [[maybe_unused]] static jobject get_field_OPTIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "OPTIONS", "field_10891", "OPTIONS", "f_121392_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorOptions#OPTIONS
    [[maybe_unused]] static void set_field_OPTIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "OPTIONS", "field_10891", "OPTIONS", "f_121392_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorOptions#UNKNOWN_OPTION_EXCEPTION
    [[maybe_unused]] static jobject get_field_UNKNOWN_OPTION_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_UNKNOWN_OPTION", "field_10885", "UNKNOWN_OPTION_EXCEPTION", "f_121384_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorOptions#UNKNOWN_OPTION_EXCEPTION
    [[maybe_unused]] static void set_field_UNKNOWN_OPTION_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_UNKNOWN_OPTION", "field_10885", "UNKNOWN_OPTION_EXCEPTION", "f_121384_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorOptions#INAPPLICABLE_OPTION_EXCEPTION
    [[maybe_unused]] static jobject get_field_INAPPLICABLE_OPTION_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_INAPPLICABLE_OPTION", "field_10887", "INAPPLICABLE_OPTION_EXCEPTION", "f_121385_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorOptions#INAPPLICABLE_OPTION_EXCEPTION
    [[maybe_unused]] static void set_field_INAPPLICABLE_OPTION_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_INAPPLICABLE_OPTION", "field_10887", "INAPPLICABLE_OPTION_EXCEPTION", "f_121385_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorOptions#NEGATIVE_DISTANCE_EXCEPTION
    [[maybe_unused]] static jobject get_field_NEGATIVE_DISTANCE_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_RANGE_NEGATIVE", "field_10890", "NEGATIVE_DISTANCE_EXCEPTION", "f_121386_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorOptions#NEGATIVE_DISTANCE_EXCEPTION
    [[maybe_unused]] static void set_field_NEGATIVE_DISTANCE_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_RANGE_NEGATIVE", "field_10890", "NEGATIVE_DISTANCE_EXCEPTION", "f_121386_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorOptions#NEGATIVE_LEVEL_EXCEPTION
    [[maybe_unused]] static jobject get_field_NEGATIVE_LEVEL_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_LEVEL_NEGATIVE", "field_10893", "NEGATIVE_LEVEL_EXCEPTION", "f_121387_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorOptions#NEGATIVE_LEVEL_EXCEPTION
    [[maybe_unused]] static void set_field_NEGATIVE_LEVEL_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_LEVEL_NEGATIVE", "field_10893", "NEGATIVE_LEVEL_EXCEPTION", "f_121387_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorOptions#TOO_SMALL_LEVEL_EXCEPTION
    [[maybe_unused]] static jobject get_field_TOO_SMALL_LEVEL_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ERROR_LIMIT_TOO_SMALL", "field_10886", "TOO_SMALL_LEVEL_EXCEPTION", "f_121388_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorOptions#TOO_SMALL_LEVEL_EXCEPTION
    [[maybe_unused]] static void set_field_TOO_SMALL_LEVEL_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ERROR_LIMIT_TOO_SMALL", "field_10886", "TOO_SMALL_LEVEL_EXCEPTION", "f_121388_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorOptions#IRREVERSIBLE_SORT_EXCEPTION
    [[maybe_unused]] static jobject get_field_IRREVERSIBLE_SORT_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ERROR_SORT_UNKNOWN", "field_10888", "IRREVERSIBLE_SORT_EXCEPTION", "f_121389_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorOptions#IRREVERSIBLE_SORT_EXCEPTION
    [[maybe_unused]] static void set_field_IRREVERSIBLE_SORT_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ERROR_SORT_UNKNOWN", "field_10888", "IRREVERSIBLE_SORT_EXCEPTION", "f_121389_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorOptions#INVALID_MODE_EXCEPTION
    [[maybe_unused]] static jobject get_field_INVALID_MODE_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ERROR_GAME_MODE_INVALID", "field_10889", "INVALID_MODE_EXCEPTION", "f_121390_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorOptions#INVALID_MODE_EXCEPTION
    [[maybe_unused]] static void set_field_INVALID_MODE_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ERROR_GAME_MODE_INVALID", "field_10889", "INVALID_MODE_EXCEPTION", "f_121390_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorOptions#INVALID_TYPE_EXCEPTION
    [[maybe_unused]] static jobject get_field_INVALID_TYPE_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ERROR_ENTITY_TYPE_INVALID", "field_10892", "INVALID_TYPE_EXCEPTION", "f_121391_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorOptions#INVALID_TYPE_EXCEPTION
    [[maybe_unused]] static void set_field_INVALID_TYPE_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ERROR_ENTITY_TYPE_INVALID", "field_10892", "INVALID_TYPE_EXCEPTION", "f_121391_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_putOption() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_9961", "putOption", "m_121453_"), "(Ljava/lang/String;Lhk$a;Ljava/util/function/Predicate;Lwz;)V");
    }

    static void putOption(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_putOption();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootStrap", "method_9960", "register", "m_121426_"), "()V");
    }

    static void register() {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_9976", "getHandler", "m_121447_"), "(Lhj;Ljava/lang/String;I)Lhk$a;");
    }

    static jobject getHandler(const jobject& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getHandler();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_suggestOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "suggestNames", "method_9930", "suggestOptions", "m_121440_"), "(Lhj;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V");
    }

    static void suggestOptions(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_suggestOptions();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ENTITYSELECTOROPTIONS_HPP