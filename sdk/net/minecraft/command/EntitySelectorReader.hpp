// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ENTITYSELECTORREADER_HPP
#define NET_MINECRAFT_COMMAND_ENTITYSELECTORREADER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.EntitySelectorReader
 * Remapped: hj
 */
namespace EntitySelectorReader {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("hj", "net/minecraft/commands/arguments/selector/EntitySelectorParser", "net/minecraft/class_2303", "net/minecraft/command/EntitySelectorReader", "net/minecraft/src/C_4651_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#SELECTOR_PREFIX
    [[maybe_unused]] static jchar get_field_SELECTOR_PREFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SYNTAX_SELECTOR_START", "field_33069", "SELECTOR_PREFIX", "f_175112_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#SELECTOR_PREFIX
    [[maybe_unused]] static void set_field_SELECTOR_PREFIX(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SYNTAX_SELECTOR_START", "field_33069", "SELECTOR_PREFIX", "f_175112_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.EntitySelectorReader#ARGUMENTS_OPENING
    [[maybe_unused]] static jchar get_field_ARGUMENTS_OPENING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SYNTAX_OPTIONS_START", "field_33073", "ARGUMENTS_OPENING", "f_175116_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#ARGUMENTS_OPENING
    [[maybe_unused]] static void set_field_ARGUMENTS_OPENING(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SYNTAX_OPTIONS_START", "field_33073", "ARGUMENTS_OPENING", "f_175116_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.EntitySelectorReader#ARGUMENTS_CLOSING
    [[maybe_unused]] static jchar get_field_ARGUMENTS_CLOSING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SYNTAX_OPTIONS_END", "field_33074", "ARGUMENTS_CLOSING", "f_175117_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#ARGUMENTS_CLOSING
    [[maybe_unused]] static void set_field_ARGUMENTS_CLOSING(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SYNTAX_OPTIONS_END", "field_33074", "ARGUMENTS_CLOSING", "f_175117_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#ARGUMENT_DEFINER
    [[maybe_unused]] static jchar get_field_ARGUMENT_DEFINER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR", "field_33070", "ARGUMENT_DEFINER", "f_175113_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#ARGUMENT_DEFINER
    [[maybe_unused]] static void set_field_ARGUMENT_DEFINER(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR", "field_33070", "ARGUMENT_DEFINER", "f_175113_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.EntitySelectorReader#ARGUMENT_SEPARATOR
    [[maybe_unused]] static jchar get_field_ARGUMENT_SEPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SYNTAX_OPTIONS_SEPARATOR", "field_33075", "ARGUMENT_SEPARATOR", "f_175118_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#ARGUMENT_SEPARATOR
    [[maybe_unused]] static void set_field_ARGUMENT_SEPARATOR(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SYNTAX_OPTIONS_SEPARATOR", "field_33075", "ARGUMENT_SEPARATOR", "f_175118_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#INVERT_MODIFIER
    [[maybe_unused]] static jchar get_field_INVERT_MODIFIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SYNTAX_NOT", "field_33071", "INVERT_MODIFIER", "f_175114_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#INVERT_MODIFIER
    [[maybe_unused]] static void set_field_INVERT_MODIFIER(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SYNTAX_NOT", "field_33071", "INVERT_MODIFIER", "f_175114_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#TAG_MODIFIER
    [[maybe_unused]] static jchar get_field_TAG_MODIFIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SYNTAX_TAG", "field_33072", "TAG_MODIFIER", "f_175115_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#TAG_MODIFIER
    [[maybe_unused]] static void set_field_TAG_MODIFIER(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SYNTAX_TAG", "field_33072", "TAG_MODIFIER", "f_175115_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.EntitySelectorReader#NEAREST_PLAYER
    [[maybe_unused]] static jchar get_field_NEAREST_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SELECTOR_NEAREST_PLAYER", "field_33076", "NEAREST_PLAYER", "f_175119_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#NEAREST_PLAYER
    [[maybe_unused]] static void set_field_NEAREST_PLAYER(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SELECTOR_NEAREST_PLAYER", "field_33076", "NEAREST_PLAYER", "f_175119_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.EntitySelectorReader#ALL_PLAYERS
    [[maybe_unused]] static jchar get_field_ALL_PLAYERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SELECTOR_ALL_PLAYERS", "field_33077", "ALL_PLAYERS", "f_175120_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#ALL_PLAYERS
    [[maybe_unused]] static void set_field_ALL_PLAYERS(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SELECTOR_ALL_PLAYERS", "field_33077", "ALL_PLAYERS", "f_175120_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.EntitySelectorReader#RANDOM_PLAYER
    [[maybe_unused]] static jchar get_field_RANDOM_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SELECTOR_RANDOM_PLAYERS", "field_33078", "RANDOM_PLAYER", "f_175121_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#RANDOM_PLAYER
    [[maybe_unused]] static void set_field_RANDOM_PLAYER(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SELECTOR_RANDOM_PLAYERS", "field_33078", "RANDOM_PLAYER", "f_175121_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.EntitySelectorReader#SELF
    [[maybe_unused]] static jchar get_field_SELF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SELECTOR_CURRENT_ENTITY", "field_33079", "SELF", "f_175122_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#SELF
    [[maybe_unused]] static void set_field_SELF(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SELECTOR_CURRENT_ENTITY", "field_33079", "SELF", "f_175122_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.EntitySelectorReader#ALL_ENTITIES
    [[maybe_unused]] static jchar get_field_ALL_ENTITIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SELECTOR_ALL_ENTITIES", "field_33080", "ALL_ENTITIES", "f_175123_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#ALL_ENTITIES
    [[maybe_unused]] static void set_field_ALL_ENTITIES(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SELECTOR_ALL_ENTITIES", "field_33080", "ALL_ENTITIES", "f_175123_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.EntitySelectorReader#NEAREST_ENTITY
    [[maybe_unused]] static jchar get_field_NEAREST_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SELECTOR_NEAREST_ENTITY", "field_52174", "NEAREST_ENTITY", "f_337504_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#NEAREST_ENTITY
    [[maybe_unused]] static void set_field_NEAREST_ENTITY(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SELECTOR_NEAREST_ENTITY", "field_52174", "NEAREST_ENTITY", "f_337504_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#INVALID_ENTITY_EXCEPTION
    [[maybe_unused]] static jobject get_field_INVALID_ENTITY_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ERROR_INVALID_NAME_OR_UUID", "field_10875", "INVALID_ENTITY_EXCEPTION", "f_121190_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#INVALID_ENTITY_EXCEPTION
    [[maybe_unused]] static void set_field_INVALID_ENTITY_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ERROR_INVALID_NAME_OR_UUID", "field_10875", "INVALID_ENTITY_EXCEPTION", "f_121190_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#UNKNOWN_SELECTOR_EXCEPTION
    [[maybe_unused]] static jobject get_field_UNKNOWN_SELECTOR_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ERROR_UNKNOWN_SELECTOR_TYPE", "field_10853", "UNKNOWN_SELECTOR_EXCEPTION", "f_121191_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#UNKNOWN_SELECTOR_EXCEPTION
    [[maybe_unused]] static void set_field_UNKNOWN_SELECTOR_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ERROR_UNKNOWN_SELECTOR_TYPE", "field_10853", "UNKNOWN_SELECTOR_EXCEPTION", "f_121191_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#NOT_ALLOWED_EXCEPTION
    [[maybe_unused]] static jobject get_field_NOT_ALLOWED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ERROR_SELECTORS_NOT_ALLOWED", "field_10880", "NOT_ALLOWED_EXCEPTION", "f_121192_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#NOT_ALLOWED_EXCEPTION
    [[maybe_unused]] static void set_field_NOT_ALLOWED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ERROR_SELECTORS_NOT_ALLOWED", "field_10880", "NOT_ALLOWED_EXCEPTION", "f_121192_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#MISSING_EXCEPTION
    [[maybe_unused]] static jobject get_field_MISSING_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ERROR_MISSING_SELECTOR_TYPE", "field_10844", "MISSING_EXCEPTION", "f_121193_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#MISSING_EXCEPTION
    [[maybe_unused]] static void set_field_MISSING_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ERROR_MISSING_SELECTOR_TYPE", "field_10844", "MISSING_EXCEPTION", "f_121193_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#UNTERMINATED_EXCEPTION
    [[maybe_unused]] static jobject get_field_UNTERMINATED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ERROR_EXPECTED_END_OF_OPTIONS", "field_10837", "UNTERMINATED_EXCEPTION", "f_121194_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#UNTERMINATED_EXCEPTION
    [[maybe_unused]] static void set_field_UNTERMINATED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ERROR_EXPECTED_END_OF_OPTIONS", "field_10837", "UNTERMINATED_EXCEPTION", "f_121194_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#VALUELESS_EXCEPTION
    [[maybe_unused]] static jobject get_field_VALUELESS_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ERROR_EXPECTED_OPTION_VALUE", "field_10855", "VALUELESS_EXCEPTION", "f_121195_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#VALUELESS_EXCEPTION
    [[maybe_unused]] static void set_field_VALUELESS_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ERROR_EXPECTED_OPTION_VALUE", "field_10855", "VALUELESS_EXCEPTION", "f_121195_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#NEAREST
    [[maybe_unused]] static jobject get_field_NEAREST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ORDER_NEAREST", "field_10869", "NEAREST", "f_121197_"), "Ljava/util/function/BiConsumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#NEAREST
    [[maybe_unused]] static void set_field_NEAREST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ORDER_NEAREST", "field_10869", "NEAREST", "f_121197_"), "Ljava/util/function/BiConsumer;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#FURTHEST
    [[maybe_unused]] static jobject get_field_FURTHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "ORDER_FURTHEST", "field_10882", "FURTHEST", "f_121198_"), "Ljava/util/function/BiConsumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#FURTHEST
    [[maybe_unused]] static void set_field_FURTHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "ORDER_FURTHEST", "field_10882", "FURTHEST", "f_121198_"), "Ljava/util/function/BiConsumer;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#RANDOM
    [[maybe_unused]] static jobject get_field_RANDOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "ORDER_RANDOM", "field_10850", "RANDOM", "f_121199_"), "Ljava/util/function/BiConsumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#RANDOM
    [[maybe_unused]] static void set_field_RANDOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "ORDER_RANDOM", "field_10850", "RANDOM", "f_121199_"), "Ljava/util/function/BiConsumer;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelectorReader#DEFAULT_SUGGESTION_PROVIDER
    [[maybe_unused]] static jobject get_field_DEFAULT_SUGGESTION_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SUGGEST_NOTHING", "field_10867", "DEFAULT_SUGGESTION_PROVIDER", "f_121200_"), "Ljava/util/function/BiFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelectorReader#DEFAULT_SUGGESTION_PROVIDER
    [[maybe_unused]] static void set_field_DEFAULT_SUGGESTION_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SUGGEST_NOTHING", "field_10867", "DEFAULT_SUGGESTION_PROVIDER", "f_121200_"), "Ljava/util/function/BiFunction;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#reader
    static jobject get_field_reader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "reader", "field_10860", "reader", "f_121201_"), "Lcom/mojang/brigadier/StringReader;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#reader
    static void set_field_reader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "reader", "field_10860", "reader", "f_121201_"), "Lcom/mojang/brigadier/StringReader;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#atAllowed
    static jboolean get_field_atAllowed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "allowSelectors", "field_10846", "atAllowed", "f_121202_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#atAllowed
    static void set_field_atAllowed(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "allowSelectors", "field_10846", "atAllowed", "f_121202_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#limit
    static jint get_field_limit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "maxResults", "field_10858", "limit", "f_121203_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#limit
    static void set_field_limit(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "maxResults", "field_10858", "limit", "f_121203_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#includesNonPlayers
    static jboolean get_field_includesNonPlayers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "includesEntities", "field_10843", "includesNonPlayers", "f_121204_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#includesNonPlayers
    static void set_field_includesNonPlayers(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "includesEntities", "field_10843", "includesNonPlayers", "f_121204_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#localWorldOnly
    static jboolean get_field_localWorldOnly(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "worldLimited", "field_10866", "localWorldOnly", "f_121205_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#localWorldOnly
    static void set_field_localWorldOnly(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "worldLimited", "field_10866", "localWorldOnly", "f_121205_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#distance
    static jobject get_field_distance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "distance", "field_10838", "distance", "f_121206_"), "Ldh$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#distance
    static void set_field_distance(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "distance", "field_10838", "distance", "f_121206_"), "Ldh$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#levelRange
    static jobject get_field_levelRange(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "level", "field_10842", "levelRange", "f_121207_"), "Ldh$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#levelRange
    static void set_field_levelRange(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "level", "field_10842", "levelRange", "f_121207_"), "Ldh$d;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#x
    static jobject get_field_x(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "x", "field_10857", "x", "f_121208_"), "Ljava/lang/Double;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#x
    static void set_field_x(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "x", "field_10857", "x", "f_121208_"), "Ljava/lang/Double;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#y
    static jobject get_field_y(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "y", "field_10872", "y", "f_121209_"), "Ljava/lang/Double;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#y
    static void set_field_y(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "y", "field_10872", "y", "f_121209_"), "Ljava/lang/Double;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#z
    static jobject get_field_z(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "z", "field_10839", "z", "f_121210_"), "Ljava/lang/Double;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#z
    static void set_field_z(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "z", "field_10839", "z", "f_121210_"), "Ljava/lang/Double;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#dx
    static jobject get_field_dx(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "deltaX", "field_10862", "dx", "f_121211_"), "Ljava/lang/Double;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#dx
    static void set_field_dx(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "deltaX", "field_10862", "dx", "f_121211_"), "Ljava/lang/Double;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#dy
    static jobject get_field_dy(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "deltaY", "field_10852", "dy", "f_121212_"), "Ljava/lang/Double;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#dy
    static void set_field_dy(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "deltaY", "field_10852", "dy", "f_121212_"), "Ljava/lang/Double;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#dz
    static jobject get_field_dz(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "deltaZ", "field_10881", "dz", "f_121213_"), "Ljava/lang/Double;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#dz
    static void set_field_dz(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "deltaZ", "field_10881", "dz", "f_121213_"), "Ljava/lang/Double;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#pitchRange
    static jobject get_field_pitchRange(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "rotX", "field_10877", "pitchRange", "f_121214_"), "Lek;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#pitchRange
    static void set_field_pitchRange(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "rotX", "field_10877", "pitchRange", "f_121214_"), "Lek;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#yawRange
    static jobject get_field_yawRange(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "rotY", "field_10859", "yawRange", "f_121215_"), "Lek;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#yawRange
    static void set_field_yawRange(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "rotY", "field_10859", "yawRange", "f_121215_"), "Lek;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#predicates
    static jobject get_field_predicates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "predicates", "field_10870", "predicates", "f_336972_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#predicates
    static void set_field_predicates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "predicates", "field_10870", "predicates", "f_336972_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#sorter
    static jobject get_field_sorter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "order", "field_10847", "sorter", "f_121171_"), "Ljava/util/function/BiConsumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#sorter
    static void set_field_sorter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "order", "field_10847", "sorter", "f_121171_"), "Ljava/util/function/BiConsumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#senderOnly
    static jboolean get_field_senderOnly(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "currentEntity", "field_10879", "senderOnly", "f_121172_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#senderOnly
    static void set_field_senderOnly(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "currentEntity", "field_10879", "senderOnly", "f_121172_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#playerName
    static jobject get_field_playerName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "playerName", "field_10876", "playerName", "f_121173_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#playerName
    static void set_field_playerName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "playerName", "field_10876", "playerName", "f_121173_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#startCursor
    static jint get_field_startCursor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "startPosition", "field_10861", "startCursor", "f_121174_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#startCursor
    static void set_field_startCursor(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "startPosition", "field_10861", "startCursor", "f_121174_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#uuid
    static jobject get_field_uuid(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "entityUUID", "field_10878", "uuid", "f_121175_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#uuid
    static void set_field_uuid(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "entityUUID", "field_10878", "uuid", "f_121175_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#suggestionProvider
    static jobject get_field_suggestionProvider(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "suggestions", "field_10848", "suggestionProvider", "f_121176_"), "Ljava/util/function/BiFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#suggestionProvider
    static void set_field_suggestionProvider(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "suggestions", "field_10848", "suggestionProvider", "f_121176_"), "Ljava/util/function/BiFunction;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#selectsName
    static jboolean get_field_selectsName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "hasNameEquals", "field_10854", "selectsName", "f_121177_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#selectsName
    static void set_field_selectsName(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "hasNameEquals", "field_10854", "selectsName", "f_121177_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#excludesName
    static jboolean get_field_excludesName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "hasNameNotEquals", "field_10874", "excludesName", "f_121178_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#excludesName
    static void set_field_excludesName(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "hasNameNotEquals", "field_10874", "excludesName", "f_121178_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#hasLimit
    static jboolean get_field_hasLimit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "isLimited", "field_10851", "hasLimit", "f_121179_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#hasLimit
    static void set_field_hasLimit(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "isLimited", "field_10851", "hasLimit", "f_121179_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#hasSorter
    static jboolean get_field_hasSorter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "isSorted", "field_10873", "hasSorter", "f_121180_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#hasSorter
    static void set_field_hasSorter(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "isSorted", "field_10873", "hasSorter", "f_121180_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#selectsGameMode
    static jboolean get_field_selectsGameMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "hasGamemodeEquals", "field_10849", "selectsGameMode", "f_121181_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#selectsGameMode
    static void set_field_selectsGameMode(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "hasGamemodeEquals", "field_10849", "selectsGameMode", "f_121181_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#excludesGameMode
    static jboolean get_field_excludesGameMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "hasGamemodeNotEquals", "field_10871", "excludesGameMode", "f_121182_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#excludesGameMode
    static void set_field_excludesGameMode(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "hasGamemodeNotEquals", "field_10871", "excludesGameMode", "f_121182_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#selectsTeam
    static jboolean get_field_selectsTeam(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "hasTeamEquals", "field_10845", "selectsTeam", "f_121183_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#selectsTeam
    static void set_field_selectsTeam(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "hasTeamEquals", "field_10845", "selectsTeam", "f_121183_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#excludesTeam
    static jboolean get_field_excludesTeam(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "hasTeamNotEquals", "field_10868", "excludesTeam", "f_121184_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#excludesTeam
    static void set_field_excludesTeam(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "hasTeamNotEquals", "field_10868", "excludesTeam", "f_121184_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#entityType
    static jobject get_field_entityType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "type", "field_10863", "entityType", "f_121185_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#entityType
    static void set_field_entityType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "type", "field_10863", "entityType", "f_121185_"), "Lbsx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#excludesEntityType
    static jboolean get_field_excludesEntityType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "typeInverse", "field_10865", "excludesEntityType", "f_121186_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#excludesEntityType
    static void set_field_excludesEntityType(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "typeInverse", "field_10865", "excludesEntityType", "f_121186_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#selectsScores
    static jboolean get_field_selectsScores(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "hasScores", "field_10841", "selectsScores", "f_121187_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#selectsScores
    static void set_field_selectsScores(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "hasScores", "field_10841", "selectsScores", "f_121187_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#selectsAdvancements
    static jboolean get_field_selectsAdvancements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "hasAdvancements", "field_10864", "selectsAdvancements", "f_121188_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#selectsAdvancements
    static void set_field_selectsAdvancements(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "hasAdvancements", "field_10864", "selectsAdvancements", "f_121188_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelectorReader#usesAt
    static jboolean get_field_usesAt(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "usesSelectors", "field_10840", "usesAt", "f_121189_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelectorReader#usesAt
    static void set_field_usesAt(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "usesSelectors", "field_10840", "usesAt", "f_121189_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSelector", "method_9871", "build", "m_121230_"), "()Lhi;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createAabb", "method_9894", "createBox", "m_121233_"), "(DDD)Lewx;");
    }

    static jobject createBox(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_createBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_buildPredicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "finalizePredicates", "method_9878", "buildPredicate", "m_121229_"), "()V");
    }

    static void buildPredicate(const jobject& obj) {
                
       const auto methodID = methodID_buildPredicate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_rotationPredicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createRotationPredicate", "method_9859", "rotationPredicate", "m_121254_"), "(Lek;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate;");
    }

    static jobject rotationPredicate(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_rotationPredicate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readAtVariable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "parseSelector", "method_9917", "readAtVariable", "m_121281_"), "()V");
    }

    static void readAtVariable(const jobject& obj) {
                
       const auto methodID = methodID_readAtVariable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_readRegular() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "parseNameOrUUID", "method_9849", "readRegular", "m_121304_"), "()V");
    }

    static void readRegular(const jobject& obj) {
                
       const auto methodID = methodID_readRegular();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_readArguments() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "parseOptions", "method_9874", "readArguments", "m_121317_"), "()V");
    }

    static void readArguments(const jobject& obj) {
                
       const auto methodID = methodID_readArguments();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_readNegationCharacter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "shouldInvertValue", "method_9892", "readNegationCharacter", "m_121330_"), "()Z");
    }

    static jboolean readNegationCharacter(const jobject& obj) {
                
       const auto methodID = methodID_readNegationCharacter();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_readTagCharacter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isTag", "method_9915", "readTagCharacter", "m_121338_"), "()Z");
    }

    static jboolean readTagCharacter(const jobject& obj) {
                
       const auto methodID = methodID_readTagCharacter();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getReader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getReader", "method_9835", "getReader", "m_121346_"), "()Lcom/mojang/brigadier/StringReader;");
    }

    static jobject getReader(const jobject& obj) {
                
       const auto methodID = methodID_getReader();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addPredicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPredicate", "method_9916", "addPredicate", "m_121272_"), "(Ljava/util/function/Predicate;)V");
    }

    static void addPredicate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addPredicate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setLocalWorldOnly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "setWorldLimited", "method_9852", "setLocalWorldOnly", "m_121352_"), "()V");
    }

    static void setLocalWorldOnly(const jobject& obj) {
                
       const auto methodID = methodID_setLocalWorldOnly();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getDistance", "method_9873", "getDistance", "m_175142_"), "()Ldh$c;");
    }

    static jobject getDistance(const jobject& obj) {
                
       const auto methodID = methodID_getDistance();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDistance", "method_9870", "setDistance", "m_175127_"), "(Ldh$c;)V");
    }

    static void setDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDistance();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLevelRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getLevel", "method_9895", "getLevelRange", "m_121361_"), "()Ldh$d;");
    }

    static jobject getLevelRange(const jobject& obj) {
                
       const auto methodID = methodID_getLevelRange();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setLevelRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLevel", "method_9846", "setLevelRange", "m_121245_"), "(Ldh$d;)V");
    }

    static void setLevelRange(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setLevelRange();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPitchRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getRotX", "method_9883", "getPitchRange", "m_121367_"), "()Lek;");
    }

    static jobject getPitchRange(const jobject& obj) {
                
       const auto methodID = methodID_getPitchRange();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPitchRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setRotX", "method_9898", "setPitchRange", "m_121252_"), "(Lek;)V");
    }

    static void setPitchRange(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPitchRange();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getYawRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getRotY", "method_9853", "getYawRange", "m_121370_"), "()Lek;");
    }

    static jobject getYawRange(const jobject& obj) {
                
       const auto methodID = methodID_getYawRange();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setYawRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setRotY", "method_9855", "setYawRange", "m_121289_"), "(Lek;)V");
    }

    static void setYawRange(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setYawRange();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getX", "method_9902", "getX", "m_121371_"), "()Ljava/lang/Double;");
    }

    static jobject getX(const jobject& obj) {
                
       const auto methodID = methodID_getX();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getY", "method_9884", "getY", "m_121372_"), "()Ljava/lang/Double;");
    }

    static jobject getY(const jobject& obj) {
                
       const auto methodID = methodID_getY();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getZ", "method_9868", "getZ", "m_121373_"), "()Ljava/lang/Double;");
    }

    static jobject getZ(const jobject& obj) {
                
       const auto methodID = methodID_getZ();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setX", "method_9850", "setX", "m_121231_"), "(D)V");
    }

    static void setX(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setX();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setY", "method_9864", "setY", "m_121282_"), "(D)V");
    }

    static void setY(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setY();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setZ", "method_9879", "setZ", "m_121305_"), "(D)V");
    }

    static void setZ(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setZ();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setDx() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setDeltaX", "method_9891", "setDx", "m_121318_"), "(D)V");
    }

    static void setDx(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setDx();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setDy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setDeltaY", "method_9905", "setDy", "m_121331_"), "(D)V");
    }

    static void setDy(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setDy();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setDz() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "setDeltaZ", "method_9918", "setDz", "m_121339_"), "(D)V");
    }

    static void setDz(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setDz();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDx() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getDeltaX", "method_9851", "getDx", "m_121374_"), "()Ljava/lang/Double;");
    }

    static jobject getDx(const jobject& obj) {
                
       const auto methodID = methodID_getDx();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getDeltaY", "method_9840", "getDy", "m_121375_"), "()Ljava/lang/Double;");
    }

    static jobject getDy(const jobject& obj) {
                
       const auto methodID = methodID_getDy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDz() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "getDeltaZ", "method_9907", "getDz", "m_121376_"), "()Ljava/lang/Double;");
    }

    static jobject getDz(const jobject& obj) {
                
       const auto methodID = methodID_getDz();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setMaxResults", "method_9900", "setLimit", "m_121237_"), "(I)V");
    }

    static void setLimit(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setLimit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setIncludesNonPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setIncludesEntities", "method_9841", "setIncludesNonPlayers", "m_121279_"), "(Z)V");
    }

    static void setIncludesNonPlayers(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setIncludesNonPlayers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSorter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getOrder", "method_35818", "getSorter", "m_175146_"), "()Ljava/util/function/BiConsumer;");
    }

    static jobject getSorter(const jobject& obj) {
                
       const auto methodID = methodID_getSorter();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSorter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOrder", "method_9845", "setSorter", "m_121268_"), "(Ljava/util/function/BiConsumer;)V");
    }

    static void setSorter(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setSorter();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_read() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "parse", "method_9882", "read", "m_121377_"), "()Lhi;");
    }

    static jobject read(const jobject& obj) {
                
       const auto methodID = methodID_read();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_suggestSelector() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fillSelectorSuggestions", "method_9896", "suggestSelector", "m_121247_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V");
    }

    static void suggestSelector(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_suggestSelector();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__suggestSelector() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "suggestNameOrSelector", "method_9880", "suggestSelector", "m_121286_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject _suggestSelector(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__suggestSelector();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_suggestNormal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "suggestName", "method_9858", "suggestNormal", "m_121309_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestNormal(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_suggestNormal();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_suggestSelectorRest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "suggestSelector", "method_9834", "suggestSelectorRest", "m_121322_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestSelectorRest(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_suggestSelectorRest();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_suggestOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "suggestOpenOptions", "method_9893", "suggestOpen", "m_121333_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestOpen(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_suggestOpen();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_suggestOptionOrEnd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "suggestOptionsKeyOrClose", "method_9911", "suggestOptionOrEnd", "m_121341_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestOptionOrEnd(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_suggestOptionOrEnd();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_suggestOption() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "suggestOptionsKey", "method_9909", "suggestOption", "m_121347_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestOption(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_suggestOption();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_suggestEndNext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "suggestOptionsNextOrClose", "method_9847", "suggestEndNext", "m_121353_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestEndNext(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_suggestEndNext();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_suggestDefinerNext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "suggestEquals", "method_35817", "suggestDefinerNext", "m_175143_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestDefinerNext(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_suggestDefinerNext();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isSenderOnly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "isCurrentEntity", "method_9885", "isSenderOnly", "m_121378_"), "()Z");
    }

    static jboolean isSenderOnly(const jobject& obj) {
                
       const auto methodID = methodID_isSenderOnly();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSuggestionProvider() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSuggestions", "method_9875", "setSuggestionProvider", "m_121270_"), "(Ljava/util/function/BiFunction;)V");
    }

    static void setSuggestionProvider(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setSuggestionProvider();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_listSuggestions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillSuggestions", "method_9908", "listSuggestions", "m_121249_"), "(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject listSuggestions(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_listSuggestions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__selectsName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "hasNameEquals", "method_9912", "selectsName", "m_121379_"), "()Z");
    }

    static jboolean _selectsName(const jobject& obj) {
                
       const auto methodID = methodID__selectsName();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSelectsName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setHasNameEquals", "method_9899", "setSelectsName", "m_121302_"), "(Z)V");
    }

    static void setSelectsName(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSelectsName();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__excludesName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "hasNameNotEquals", "method_9844", "excludesName", "m_121380_"), "()Z");
    }

    static jboolean _excludesName(const jobject& obj) {
                
       const auto methodID = methodID__excludesName();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setExcludesName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setHasNameNotEquals", "method_9913", "setExcludesName", "m_121315_"), "(Z)V");
    }

    static void setExcludesName(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setExcludesName();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__hasLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "isLimited", "method_9866", "hasLimit", "m_121381_"), "()Z");
    }

    static jboolean _hasLimit(const jobject& obj) {
                
       const auto methodID = methodID__hasLimit();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHasLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setLimited", "method_9877", "setHasLimit", "m_121328_"), "(Z)V");
    }

    static void setHasLimit(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setHasLimit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__hasSorter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "isSorted", "method_9889", "hasSorter", "m_121382_"), "()Z");
    }

    static jboolean _hasSorter(const jobject& obj) {
                
       const auto methodID = methodID__hasSorter();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHasSorter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setSorted", "method_9887", "setHasSorter", "m_121336_"), "(Z)V");
    }

    static void setHasSorter(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setHasSorter();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__selectsGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "hasGamemodeEquals", "method_9839", "selectsGameMode", "m_121383_"), "()Z");
    }

    static jboolean _selectsGameMode(const jobject& obj) {
                
       const auto methodID = methodID__selectsGameMode();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSelectsGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "setHasGamemodeEquals", "method_9890", "setSelectsGameMode", "m_121344_"), "(Z)V");
    }

    static void setSelectsGameMode(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSelectsGameMode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__excludesGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "hasGamemodeNotEquals", "method_9837", "excludesGameMode", "m_121222_"), "()Z");
    }

    static jboolean _excludesGameMode(const jobject& obj) {
                
       const auto methodID = methodID__excludesGameMode();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setExcludesGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "setHasGamemodeNotEquals", "method_9857", "setExcludesGameMode", "m_121350_"), "(Z)V");
    }

    static void setExcludesGameMode(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setExcludesGameMode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__selectsTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "hasTeamEquals", "method_9904", "selectsTeam", "m_121223_"), "()Z");
    }

    static jboolean _selectsTeam(const jobject& obj) {
                
       const auto methodID = methodID__selectsTeam();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSelectsTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "setHasTeamEquals", "method_9865", "setSelectsTeam", "m_121356_"), "(Z)V");
    }

    static void setSelectsTeam(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSelectsTeam();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__excludesTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "hasTeamNotEquals", "method_35816", "excludesTeam", "m_175124_"), "()Z");
    }

    static jboolean _excludesTeam(const jobject& obj) {
                
       const auto methodID = methodID__excludesTeam();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setExcludesTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "setHasTeamNotEquals", "method_9833", "setExcludesTeam", "m_121359_"), "(Z)V");
    }

    static void setExcludesTeam(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setExcludesTeam();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setEntityType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "limitToType", "method_9842", "setEntityType", "m_121241_"), "(Lbsx;)V");
    }

    static void setEntityType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setEntityType();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setExcludesEntityType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "setTypeLimitedInversely", "method_9860", "setExcludesEntityType", "m_121224_"), "()V");
    }

    static void setExcludesEntityType(const jobject& obj) {
                
       const auto methodID = methodID_setExcludesEntityType();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_selectsEntityType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "isTypeLimited", "method_9886", "selectsEntityType", "m_121225_"), "()Z");
    }

    static jboolean selectsEntityType(const jobject& obj) {
                
       const auto methodID = methodID_selectsEntityType();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__excludesEntityType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "isTypeLimitedInversely", "method_9910", "excludesEntityType", "m_121226_"), "()Z");
    }

    static jboolean _excludesEntityType(const jobject& obj) {
                
       const auto methodID = methodID__excludesEntityType();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__selectsScores() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "hasScores", "method_9843", "selectsScores", "m_121227_"), "()Z");
    }

    static jboolean _selectsScores(const jobject& obj) {
                
       const auto methodID = methodID__selectsScores();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSelectsScores() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "setHasScores", "method_9848", "setSelectsScores", "m_121365_"), "(Z)V");
    }

    static void setSelectsScores(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSelectsScores();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__selectsAdvancements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "hasAdvancements", "method_9861", "selectsAdvancements", "m_121228_"), "()Z");
    }

    static jboolean _selectsAdvancements(const jobject& obj) {
                
       const auto methodID = methodID__selectsAdvancements();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSelectsAdvancements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "setHasAdvancements", "method_9906", "setSelectsAdvancements", "m_121368_"), "(Z)V");
    }

    static void setSelectsAdvancements(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSelectsAdvancements();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ENTITYSELECTORREADER_HPP