// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_SINGLECOMMANDACTION_HPP
#define NET_MINECRAFT_COMMAND_SINGLECOMMANDACTION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.SingleCommandAction
 * Remapped: hy
 */
namespace SingleCommandAction {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("hy", "net/minecraft/commands/execution/tasks/BuildContexts", "net/minecraft/class_8858", "net/minecraft/command/SingleCommandAction", "net/minecraft/src/C_301911_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.command.SingleCommandAction#FORK_LIMIT_EXCEPTION
    [[maybe_unused]] static jobject get_field_FORK_LIMIT_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_FORK_LIMIT_REACHED", "field_46739", "FORK_LIMIT_EXCEPTION", "f_302201_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.SingleCommandAction#FORK_LIMIT_EXCEPTION
    [[maybe_unused]] static void set_field_FORK_LIMIT_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_FORK_LIMIT_REACHED", "field_46739", "FORK_LIMIT_EXCEPTION", "f_302201_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.command.SingleCommandAction#command
    static jobject get_field_command(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "commandInput", "field_46740", "command", "f_303818_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.SingleCommandAction#command
    static void set_field_command(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "commandInput", "field_46740", "command", "f_303818_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.SingleCommandAction#contextChain
    static jobject get_field_contextChain(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "command", "field_46741", "contextChain", "f_302616_"), "Lcom/mojang/brigadier/context/ContextChain;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.SingleCommandAction#contextChain
    static void set_field_contextChain(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "command", "field_46741", "contextChain", "f_302616_"), "Lcom/mojang/brigadier/context/ContextChain;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_execute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "execute", "method_54410", "execute", "m_305670_"), "(Lev;Ljava/util/List;Lhs;Lhu;Lhn;)V");
    }

    static void execute(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_execute();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_traceCommandStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "traceCommandStart", "method_54407", "traceCommandStart", "m_307886_"), "(Lhs;Lhu;)V");
    }

    static void traceCommandStart(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_traceCommandStart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_SINGLECOMMANDACTION_HPP