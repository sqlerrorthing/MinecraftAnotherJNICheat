// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMMAND_ENTITYSELECTOR_HPP
#define NET_MINECRAFT_COMMAND_ENTITYSELECTOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.command.EntitySelector
 * Remapped: hi
 */
namespace EntitySelector {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("hi", "net/minecraft/commands/arguments/selector/EntitySelector", "net/minecraft/class_2300", "net/minecraft/command/EntitySelector", "net/minecraft/src/C_4650_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.command.EntitySelector#MAX_VALUE
    [[maybe_unused]] static jint get_field_MAX_VALUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INFINITE", "field_33068", "MAX_VALUE", "f_175099_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelector#MAX_VALUE
    [[maybe_unused]] static void set_field_MAX_VALUE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INFINITE", "field_33068", "MAX_VALUE", "f_175099_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.command.EntitySelector#ARBITRARY
    [[maybe_unused]] static jobject get_field_ARBITRARY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ORDER_ARBITRARY", "field_41524", "ARBITRARY", "f_260598_"), "Ljava/util/function/BiConsumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.command.EntitySelector#ARBITRARY
    [[maybe_unused]] static void set_field_ARBITRARY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ORDER_ARBITRARY", "field_41524", "ARBITRARY", "f_260598_"), "Ljava/util/function/BiConsumer;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.command.EntitySelector#PASSTHROUGH_FILTER
    [[maybe_unused]] static jobject get_field_PASSTHROUGH_FILTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ANY_TYPE", "field_27774", "PASSTHROUGH_FILTER", "f_175100_"), "Ldxn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#PASSTHROUGH_FILTER
    [[maybe_unused]] static void set_field_PASSTHROUGH_FILTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ANY_TYPE", "field_27774", "PASSTHROUGH_FILTER", "f_175100_"), "Ldxn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#limit
    static jint get_field_limit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "maxResults", "field_10822", "limit", "f_121111_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#limit
    static void set_field_limit(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "maxResults", "field_10822", "limit", "f_121111_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#includesNonPlayers
    static jboolean get_field_includesNonPlayers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "includesEntities", "field_10830", "includesNonPlayers", "f_121112_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#includesNonPlayers
    static void set_field_includesNonPlayers(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "includesEntities", "field_10830", "includesNonPlayers", "f_121112_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#localWorldOnly
    static jboolean get_field_localWorldOnly(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "worldLimited", "field_10829", "localWorldOnly", "f_121113_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#localWorldOnly
    static void set_field_localWorldOnly(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "worldLimited", "field_10829", "localWorldOnly", "f_121113_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#predicates
    static jobject get_field_predicates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "contextFreePredicates", "field_52308", "predicates", "f_336651_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#predicates
    static void set_field_predicates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "contextFreePredicates", "field_52308", "predicates", "f_336651_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#distance
    static jobject get_field_distance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "range", "field_10825", "distance", "f_121115_"), "Ldh$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#distance
    static void set_field_distance(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "range", "field_10825", "distance", "f_121115_"), "Ldh$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#positionOffset
    static jobject get_field_positionOffset(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "position", "field_10823", "positionOffset", "f_121116_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#positionOffset
    static void set_field_positionOffset(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "position", "field_10823", "positionOffset", "f_121116_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#box
    static jobject get_field_box(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "aabb", "field_10824", "box", "f_121117_"), "Lewx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#box
    static void set_field_box(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "aabb", "field_10824", "box", "f_121117_"), "Lewx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#sorter
    static jobject get_field_sorter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "order", "field_10826", "sorter", "f_121118_"), "Ljava/util/function/BiConsumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#sorter
    static void set_field_sorter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "order", "field_10826", "sorter", "f_121118_"), "Ljava/util/function/BiConsumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#senderOnly
    static jboolean get_field_senderOnly(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "currentEntity", "field_10828", "senderOnly", "f_121119_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#senderOnly
    static void set_field_senderOnly(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "currentEntity", "field_10828", "senderOnly", "f_121119_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#playerName
    static jobject get_field_playerName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "playerName", "field_10831", "playerName", "f_121120_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#playerName
    static void set_field_playerName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "playerName", "field_10831", "playerName", "f_121120_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#uuid
    static jobject get_field_uuid(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "entityUUID", "field_10821", "uuid", "f_121121_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#uuid
    static void set_field_uuid(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "entityUUID", "field_10821", "uuid", "f_121121_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#entityFilter
    static jobject get_field_entityFilter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "type", "field_10832", "entityFilter", "f_121122_"), "Ldxn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#entityFilter
    static void set_field_entityFilter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "type", "field_10832", "entityFilter", "f_121122_"), "Ldxn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.command.EntitySelector#usesAt
    static jboolean get_field_usesAt(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "usesSelector", "field_10827", "usesAt", "f_121123_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.command.EntitySelector#usesAt
    static void set_field_usesAt(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "usesSelector", "field_10827", "usesAt", "f_121123_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMaxResults", "method_9815", "getLimit", "m_121138_"), "()I");
    }

    static jint getLimit(const jobject& obj) {
                
       const auto methodID = methodID_getLimit();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__includesNonPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "includesEntities", "method_9819", "includesNonPlayers", "m_121159_"), "()Z");
    }

    static jboolean _includesNonPlayers(const jobject& obj) {
                
       const auto methodID = methodID__includesNonPlayers();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSenderOnly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isSelfSelector", "method_9820", "isSenderOnly", "m_121162_"), "()Z");
    }

    static jboolean isSenderOnly(const jobject& obj) {
                
       const auto methodID = methodID_isSenderOnly();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isLocalWorldOnly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isWorldLimited", "method_9821", "isLocalWorldOnly", "m_121165_"), "()Z");
    }

    static jboolean isLocalWorldOnly(const jobject& obj) {
                
       const auto methodID = methodID_isLocalWorldOnly();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__usesAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "usesSelector", "method_35815", "usesAt", "m_175105_"), "()Z");
    }

    static jboolean _usesAt(const jobject& obj) {
                
       const auto methodID = methodID__usesAt();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_checkSourcePermission() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "checkPermissions", "method_9818", "checkSourcePermission", "m_121168_"), "(Let;)V");
    }

    static void checkSourcePermission(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_checkSourcePermission();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findSingleEntity", "method_9809", "getEntity", "m_121139_"), "(Let;)Lbsr;");
    }

    static jobject getEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "findEntities", "method_9816", "getEntities", "m_121160_"), "(Let;)Ljava/util/List;");
    }

    static jobject getEntities(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEntities();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_appendEntitiesFromWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addEntities", "method_9823", "appendEntitiesFromWorld", "m_121154_"), "(Ljava/util/List;Laqu;Lewx;Ljava/util/function/Predicate;)V");
    }

    static void appendEntitiesFromWorld(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_appendEntitiesFromWorld();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getAppendLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getResultLimit", "method_47803", "getAppendLimit", "m_261276_"), "()I");
    }

    static jint getAppendLimit(const jobject& obj) {
                
       const auto methodID = methodID_getAppendLimit();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "findSinglePlayer", "method_9811", "getPlayer", "m_121163_"), "(Let;)Laqv;");
    }

    static jobject getPlayer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPlayer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "findPlayers", "method_9813", "getPlayers", "m_121166_"), "(Let;)Ljava/util/List;");
    }

    static jobject getPlayers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPlayers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOffsetBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAbsoluteAabb", "method_61160", "getOffsetBox", "m_340474_"), "(Lexc;)Lewx;");
    }

    static jobject getOffsetBox(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOffsetBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPositionPredicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPredicate", "method_9817", "getPositionPredicate", "m_121144_"), "(Lexc;Lewx;Lcpl;)Ljava/util/function/Predicate;");
    }

    static jobject getPositionPredicate(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getPositionPredicate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__getEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sortAndLimit", "method_9814", "getEntities", "m_121149_"), "(Lexc;Ljava/util/List;)Ljava/util/List;");
    }

    static jobject _getEntities(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__getEntities();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getNames() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "joinNames", "method_9822", "getNames", "m_175103_"), "(Ljava/util/List;)Lwz;");
    }

    static jobject getNames(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getNames();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_COMMAND_ENTITYSELECTOR_HPP