// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NBT_ABSTRACTNBTLIST_HPP
#define NET_MINECRAFT_NBT_ABSTRACTNBTLIST_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.nbt.AbstractNbtList
 * Remapped: ua
 */
namespace AbstractNbtList {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ua", "net/minecraft/nbt/CollectionTag", "net/minecraft/class_2483", "net/minecraft/nbt/AbstractNbtList", "net/minecraft/src/C_4916_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "set", "method_10606", "set", "set"), "(ILuy;)Luy;");
    }

    static jobject set(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_set();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "add", "method_10531", "add", "add"), "(ILuy;)V");
    }

    static void add(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "remove", "method_10536", "remove", "remove"), "(I)Luy;");
    }

    static jobject remove(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_remove();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setElement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setTag", "method_10535", "setElement", "m_7615_"), "(ILuy;)Z");
    }

    static jboolean setElement(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setElement();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addElement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addTag", "method_10533", "addElement", "m_7614_"), "(ILuy;)Z");
    }

    static jboolean addElement(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addElement();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getHeldType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getElementType", "method_10601", "getHeldType", "m_7264_"), "()B");
    }

    static jbyte getHeldType(const jobject& obj) {
                
       const auto methodID = methodID_getHeldType();
       return MinecraftSDK::env->CallByteMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_NBT_ABSTRACTNBTLIST_HPP