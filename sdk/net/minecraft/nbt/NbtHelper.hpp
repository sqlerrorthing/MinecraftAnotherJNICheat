// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NBT_NBTHELPER_HPP
#define NET_MINECRAFT_NBT_NBTHELPER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.nbt.NbtHelper
 * Remapped: uq
 */
namespace NbtHelper {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("uq", "net/minecraft/nbt/NbtUtils", "net/minecraft/class_2512", "net/minecraft/nbt/NbtHelper", "net/minecraft/src/C_4943_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.nbt.NbtHelper#BLOCK_POS_COMPARATOR
    [[maybe_unused]] static jobject get_field_BLOCK_POS_COMPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "YXZ_LISTTAG_INT_COMPARATOR", "field_27816", "BLOCK_POS_COMPARATOR", "f_178008_"), "Ljava/util/Comparator;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtHelper#BLOCK_POS_COMPARATOR
    [[maybe_unused]] static void set_field_BLOCK_POS_COMPARATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "YXZ_LISTTAG_INT_COMPARATOR", "field_27816", "BLOCK_POS_COMPARATOR", "f_178008_"), "Ljava/util/Comparator;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.NbtHelper#ENTITY_POS_COMPARATOR
    [[maybe_unused]] static jobject get_field_ENTITY_POS_COMPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "YXZ_LISTTAG_DOUBLE_COMPARATOR", "field_27817", "ENTITY_POS_COMPARATOR", "f_178009_"), "Ljava/util/Comparator;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtHelper#ENTITY_POS_COMPARATOR
    [[maybe_unused]] static void set_field_ENTITY_POS_COMPARATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "YXZ_LISTTAG_DOUBLE_COMPARATOR", "field_27817", "ENTITY_POS_COMPARATOR", "f_178009_"), "Ljava/util/Comparator;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.NbtHelper#DATA_KEY
    [[maybe_unused]] static jobject get_field_DATA_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SNBT_DATA_TAG", "field_33224", "DATA_KEY", "f_178007_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.NbtHelper#DATA_KEY
    [[maybe_unused]] static void set_field_DATA_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SNBT_DATA_TAG", "field_33224", "DATA_KEY", "f_178007_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.NbtHelper#LEFT_CURLY_BRACKET
    [[maybe_unused]] static jchar get_field_LEFT_CURLY_BRACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PROPERTIES_START", "field_33225", "LEFT_CURLY_BRACKET", "f_178010_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtHelper#LEFT_CURLY_BRACKET
    [[maybe_unused]] static void set_field_LEFT_CURLY_BRACKET(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PROPERTIES_START", "field_33225", "LEFT_CURLY_BRACKET", "f_178010_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.NbtHelper#RIGHT_CURLY_BRACKET
    [[maybe_unused]] static jchar get_field_RIGHT_CURLY_BRACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PROPERTIES_END", "field_33226", "RIGHT_CURLY_BRACKET", "f_178011_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtHelper#RIGHT_CURLY_BRACKET
    [[maybe_unused]] static void set_field_RIGHT_CURLY_BRACKET(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PROPERTIES_END", "field_33226", "RIGHT_CURLY_BRACKET", "f_178011_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.NbtHelper#COMMA
    [[maybe_unused]] static jobject get_field_COMMA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ELEMENT_SEPARATOR", "field_33227", "COMMA", "f_178012_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtHelper#COMMA
    [[maybe_unused]] static void set_field_COMMA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ELEMENT_SEPARATOR", "field_33227", "COMMA", "f_178012_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.NbtHelper#COLON
    [[maybe_unused]] static jchar get_field_COLON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "KEY_VALUE_SEPARATOR", "field_33228", "COLON", "f_178013_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtHelper#COLON
    [[maybe_unused]] static void set_field_COLON(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "KEY_VALUE_SEPARATOR", "field_33228", "COLON", "f_178013_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.NbtHelper#COMMA_SPLITTER
    [[maybe_unused]] static jobject get_field_COMMA_SPLITTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "COMMA_SPLITTER", "field_27818", "COMMA_SPLITTER", "f_178014_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtHelper#COMMA_SPLITTER
    [[maybe_unused]] static void set_field_COMMA_SPLITTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "COMMA_SPLITTER", "field_27818", "COMMA_SPLITTER", "f_178014_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.NbtHelper#COLON_SPLITTER
    [[maybe_unused]] static jobject get_field_COLON_SPLITTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "COLON_SPLITTER", "field_27819", "COLON_SPLITTER", "f_178015_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtHelper#COLON_SPLITTER
    [[maybe_unused]] static void set_field_COLON_SPLITTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "COLON_SPLITTER", "field_27819", "COLON_SPLITTER", "f_178015_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.NbtHelper#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "LOGGER", "field_11582", "LOGGER", "f_129200_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtHelper#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "LOGGER", "field_11582", "LOGGER", "f_129200_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.NbtHelper#field_33229
    [[maybe_unused]] static jint get_field_field_33229() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "INDENT", "field_33229", "field_33229", "f_178016_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtHelper#field_33229
    [[maybe_unused]] static void set_field_field_33229(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "INDENT", "field_33229", "field_33229", "f_178016_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.NbtHelper#field_33230
    [[maybe_unused]] static jint get_field_field_33230() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "NOT_FOUND", "field_33230", "field_33230", "f_178017_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtHelper#field_33230
    [[maybe_unused]] static void set_field_field_33230(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "NOT_FOUND", "field_33230", "field_33230", "f_178017_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_matches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "compareNbt", "method_10687", "matches", "m_129235_"), "(Luy;Luy;Z)Z");
    }

    static jboolean matches(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_matches();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_fromUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createUUID", "method_25929", "fromUuid", "m_129226_"), "(Ljava/util/UUID;)Luf;");
    }

    static jobject fromUuid(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromUuid();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "loadUUID", "method_25930", "toUuid", "m_129233_"), "(Luy;)Ljava/util/UUID;");
    }

    static jobject toUuid(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toUuid();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toBlockPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readBlockPos", "method_10691", "toBlockPos", "m_129239_"), "(Lub;Ljava/lang/String;)Ljava/util/Optional;");
    }

    static jobject toBlockPos(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_toBlockPos();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_fromBlockPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeBlockPos", "method_10692", "fromBlockPos", "m_129224_"), "(Ljd;)Luy;");
    }

    static jobject fromBlockPos(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromBlockPos();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readBlockState", "method_10681", "toBlockState", "m_247651_"), "(Ljn;Lub;)Ldtc;");
    }

    static jobject toBlockState(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_toBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_withProperty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setValueHelper", "method_10682", "withProperty", "m_129204_"), "(Ldte;Lduf;Ljava/lang/String;Lub;Lub;)Ldte;");
    }

    static jobject withProperty(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_withProperty();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_fromBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeBlockState", "method_10686", "fromBlockState", "m_129202_"), "(Ldtc;)Lub;");
    }

    static jobject fromBlockState(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromFluidState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeFluidState", "method_36115", "fromFluidState", "m_178022_"), "(Lepe;)Lub;");
    }

    static jobject fromFluidState(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromFluidState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_nameValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getName", "method_10685", "nameValue", "m_129210_"), "(Lduf;Ljava/lang/Comparable;)Ljava/lang/String;");
    }

    static jobject nameValue(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_nameValue();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_toFormattedString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "prettyPrint", "method_36118", "toFormattedString", "m_178057_"), "(Luy;)Ljava/lang/String;");
    }

    static jobject toFormattedString(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toFormattedString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__toFormattedString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "prettyPrint", "method_36117", "toFormattedString", "m_178050_"), "(Luy;Z)Ljava/lang/String;");
    }

    static jobject _toFormattedString(const jobject& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__toFormattedString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_appendFormattedString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "prettyPrint", "method_36116", "appendFormattedString", "m_178026_"), "(Ljava/lang/StringBuilder;Luy;IZ)Ljava/lang/StringBuilder;");
    }

    static jobject appendFormattedString(const jobject& arg0, const jobject& arg1, const jint& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_appendFormattedString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_appendIndent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "indent", "method_36114", "appendIndent", "m_178019_"), "(ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder;");
    }

    static jobject appendIndent(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_appendIndent();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_toPrettyPrintedText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "toPrettyComponent", "method_32270", "toPrettyPrintedText", "m_178061_"), "(Luy;)Lwz;");
    }

    static jobject toPrettyPrintedText(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toPrettyPrintedText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toNbtProviderString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "structureToSnbt", "method_32271", "toNbtProviderString", "m_178063_"), "(Lub;)Ljava/lang/String;");
    }

    static jobject toNbtProviderString(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toNbtProviderString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromNbtProviderString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "snbtToStructure", "method_32260", "fromNbtProviderString", "m_178024_"), "(Ljava/lang/String;)Lub;");
    }

    static jobject fromNbtProviderString(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromNbtProviderString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toNbtProviderFormat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "packStructureTemplate", "method_32273", "toNbtProviderFormat", "m_178067_"), "(Lub;)Lub;");
    }

    static jobject toNbtProviderFormat(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toNbtProviderFormat();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromNbtProviderFormat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "unpackStructureTemplate", "method_32275", "fromNbtProviderFormat", "m_178071_"), "(Lub;)Lub;");
    }

    static jobject fromNbtProviderFormat(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromNbtProviderFormat();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toNbtProviderFormattedPalette() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "packBlockState", "method_32277", "toNbtProviderFormattedPalette", "m_178075_"), "(Lub;)Ljava/lang/String;");
    }

    static jobject toNbtProviderFormattedPalette(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toNbtProviderFormattedPalette();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromNbtProviderFormattedPalette() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "unpackBlockState", "method_32267", "fromNbtProviderFormattedPalette", "m_178053_"), "(Ljava/lang/String;)Lub;");
    }

    static jobject fromNbtProviderFormattedPalette(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromNbtProviderFormattedPalette();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_putDataVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "addCurrentDataVersion", "method_48310", "putDataVersion", "m_264171_"), "(Lub;)Lub;");
    }

    static jobject putDataVersion(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_putDataVersion();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__putDataVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addDataVersion", "method_48308", "putDataVersion", "m_264046_"), "(Lub;I)Lub;");
    }

    static jobject _putDataVersion(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__putDataVersion();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getDataVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getDataVersion", "method_48309", "getDataVersion", "m_264487_"), "(Lub;I)I");
    }

    static jint getDataVersion(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getDataVersion();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_NBT_NBTHELPER_HPP