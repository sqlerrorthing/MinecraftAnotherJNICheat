// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NBT_VISITOR_NBTTEXTFORMATTER_HPP
#define NET_MINECRAFT_NBT_VISITOR_NBTTEXTFORMATTER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.nbt.visitor.NbtTextFormatter
 * Remapped: vd
 */
namespace NbtTextFormatter {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("vd", "net/minecraft/nbt/TextComponentTagVisitor", "net/minecraft/class_5628", "net/minecraft/nbt/visitor/NbtTextFormatter", "net/minecraft/src/C_141839_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_27831", "LOGGER", "f_178229_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_27831", "LOGGER", "f_178229_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#field_33271
    [[maybe_unused]] static jint get_field_field_33271() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "INLINE_LIST_THRESHOLD", "field_33271", "field_33271", "f_178230_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#field_33271
    [[maybe_unused]] static void set_field_field_33271(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "INLINE_LIST_THRESHOLD", "field_33271", "field_33271", "f_178230_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#field_51497
    [[maybe_unused]] static jint get_field_field_51497() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_DEPTH", "field_51497", "field_51497", "f_316829_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#field_51497
    [[maybe_unused]] static void set_field_field_51497(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_DEPTH", "field_51497", "field_51497", "f_316829_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#field_51921
    [[maybe_unused]] static jint get_field_field_51921() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MAX_LENGTH", "field_51921", "field_51921", "f_336868_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#field_51921
    [[maybe_unused]] static void set_field_field_51921(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MAX_LENGTH", "field_51921", "field_51921", "f_336868_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SINGLE_LINE_ELEMENT_TYPES
    [[maybe_unused]] static jobject get_field_SINGLE_LINE_ELEMENT_TYPES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "INLINE_ELEMENT_TYPES", "field_27832", "SINGLE_LINE_ELEMENT_TYPES", "f_178231_"), "Lit/unimi/dsi/fastutil/bytes/ByteCollection;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SINGLE_LINE_ELEMENT_TYPES
    [[maybe_unused]] static void set_field_SINGLE_LINE_ELEMENT_TYPES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "INLINE_ELEMENT_TYPES", "field_27832", "SINGLE_LINE_ELEMENT_TYPES", "f_178231_"), "Lit/unimi/dsi/fastutil/bytes/ByteCollection;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#NAME_COLOR
    [[maybe_unused]] static jobject get_field_NAME_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SYNTAX_HIGHLIGHTING_KEY", "field_27833", "NAME_COLOR", "f_178232_"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#NAME_COLOR
    [[maybe_unused]] static void set_field_NAME_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SYNTAX_HIGHLIGHTING_KEY", "field_27833", "NAME_COLOR", "f_178232_"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#STRING_COLOR
    [[maybe_unused]] static jobject get_field_STRING_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SYNTAX_HIGHLIGHTING_STRING", "field_27834", "STRING_COLOR", "f_178233_"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#STRING_COLOR
    [[maybe_unused]] static void set_field_STRING_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SYNTAX_HIGHLIGHTING_STRING", "field_27834", "STRING_COLOR", "f_178233_"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#NUMBER_COLOR
    [[maybe_unused]] static jobject get_field_NUMBER_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SYNTAX_HIGHLIGHTING_NUMBER", "field_27835", "NUMBER_COLOR", "f_178234_"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#NUMBER_COLOR
    [[maybe_unused]] static void set_field_NUMBER_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SYNTAX_HIGHLIGHTING_NUMBER", "field_27835", "NUMBER_COLOR", "f_178234_"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#TYPE_SUFFIX_COLOR
    [[maybe_unused]] static jobject get_field_TYPE_SUFFIX_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SYNTAX_HIGHLIGHTING_NUMBER_TYPE", "field_27836", "TYPE_SUFFIX_COLOR", "f_178235_"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#TYPE_SUFFIX_COLOR
    [[maybe_unused]] static void set_field_TYPE_SUFFIX_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SYNTAX_HIGHLIGHTING_NUMBER_TYPE", "field_27836", "TYPE_SUFFIX_COLOR", "f_178235_"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SIMPLE_NAME
    [[maybe_unused]] static jobject get_field_SIMPLE_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SIMPLE_VALUE", "field_27837", "SIMPLE_NAME", "f_178236_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SIMPLE_NAME
    [[maybe_unused]] static void set_field_SIMPLE_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SIMPLE_VALUE", "field_27837", "SIMPLE_NAME", "f_178236_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SQUARE_OPEN_BRACKET
    [[maybe_unused]] static jobject get_field_SQUARE_OPEN_BRACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LIST_OPEN", "field_33272", "SQUARE_OPEN_BRACKET", "f_178239_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SQUARE_OPEN_BRACKET
    [[maybe_unused]] static void set_field_SQUARE_OPEN_BRACKET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LIST_OPEN", "field_33272", "SQUARE_OPEN_BRACKET", "f_178239_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SQUARE_CLOSE_BRACKET
    [[maybe_unused]] static jobject get_field_SQUARE_CLOSE_BRACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "LIST_CLOSE", "field_33273", "SQUARE_CLOSE_BRACKET", "f_178240_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SQUARE_CLOSE_BRACKET
    [[maybe_unused]] static void set_field_SQUARE_CLOSE_BRACKET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "LIST_CLOSE", "field_33273", "SQUARE_CLOSE_BRACKET", "f_178240_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SEMICOLON
    [[maybe_unused]] static jobject get_field_SEMICOLON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "LIST_TYPE_SEPARATOR", "field_33274", "SEMICOLON", "f_178241_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SEMICOLON
    [[maybe_unused]] static void set_field_SEMICOLON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "LIST_TYPE_SEPARATOR", "field_33274", "SEMICOLON", "f_178241_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SPACE
    [[maybe_unused]] static jobject get_field_SPACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ELEMENT_SPACING", "field_33275", "SPACE", "f_178242_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SPACE
    [[maybe_unused]] static void set_field_SPACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ELEMENT_SPACING", "field_33275", "SPACE", "f_178242_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#CURLY_OPEN_BRACKET
    [[maybe_unused]] static jobject get_field_CURLY_OPEN_BRACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "STRUCT_OPEN", "field_33276", "CURLY_OPEN_BRACKET", "f_178243_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#CURLY_OPEN_BRACKET
    [[maybe_unused]] static void set_field_CURLY_OPEN_BRACKET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "STRUCT_OPEN", "field_33276", "CURLY_OPEN_BRACKET", "f_178243_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#CURLY_CLOSE_BRACKET
    [[maybe_unused]] static jobject get_field_CURLY_CLOSE_BRACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "STRUCT_CLOSE", "field_33277", "CURLY_CLOSE_BRACKET", "f_178244_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#CURLY_CLOSE_BRACKET
    [[maybe_unused]] static void set_field_CURLY_CLOSE_BRACKET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "STRUCT_CLOSE", "field_33277", "CURLY_CLOSE_BRACKET", "f_178244_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#NEW_LINE
    [[maybe_unused]] static jobject get_field_NEW_LINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "NEWLINE", "field_33278", "NEW_LINE", "f_178245_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#NEW_LINE
    [[maybe_unused]] static void set_field_NEW_LINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "NEWLINE", "field_33278", "NEW_LINE", "f_178245_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#COLON_WITH_SPACE
    [[maybe_unused]] static jobject get_field_COLON_WITH_SPACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "NAME_VALUE_SEPARATOR", "field_51922", "COLON_WITH_SPACE", "f_178237_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#COLON_WITH_SPACE
    [[maybe_unused]] static void set_field_COLON_WITH_SPACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "NAME_VALUE_SEPARATOR", "field_51922", "COLON_WITH_SPACE", "f_178237_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#ENTRY_SEPARATOR
    [[maybe_unused]] static jobject get_field_ENTRY_SEPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "ELEMENT_SEPARATOR", "field_27839", "ENTRY_SEPARATOR", "f_178238_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#ENTRY_SEPARATOR
    [[maybe_unused]] static void set_field_ENTRY_SEPARATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "ELEMENT_SEPARATOR", "field_27839", "ENTRY_SEPARATOR", "f_178238_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#ENTRY_SEPARATOR_WITH_NEW_LINE
    [[maybe_unused]] static jobject get_field_ENTRY_SEPARATOR_WITH_NEW_LINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "WRAPPED_ELEMENT_SEPARATOR", "field_51923", "ENTRY_SEPARATOR_WITH_NEW_LINE", "f_337729_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#ENTRY_SEPARATOR_WITH_NEW_LINE
    [[maybe_unused]] static void set_field_ENTRY_SEPARATOR_WITH_NEW_LINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "WRAPPED_ELEMENT_SEPARATOR", "field_51923", "ENTRY_SEPARATOR_WITH_NEW_LINE", "f_337729_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#ENTRY_SEPARATOR_WITH_SPACE
    [[maybe_unused]] static jobject get_field_ENTRY_SEPARATOR_WITH_SPACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SPACED_ELEMENT_SEPARATOR", "field_51924", "ENTRY_SEPARATOR_WITH_SPACE", "f_336896_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#ENTRY_SEPARATOR_WITH_SPACE
    [[maybe_unused]] static void set_field_ENTRY_SEPARATOR_WITH_SPACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SPACED_ELEMENT_SEPARATOR", "field_51924", "ENTRY_SEPARATOR_WITH_SPACE", "f_336896_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#ELLIPSIS
    [[maybe_unused]] static jobject get_field_ELLIPSIS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FOLDED", "field_51925", "ELLIPSIS", "f_337349_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#ELLIPSIS
    [[maybe_unused]] static void set_field_ELLIPSIS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FOLDED", "field_51925", "ELLIPSIS", "f_337349_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#BYTE_TYPE_SUFFIX
    [[maybe_unused]] static jobject get_field_BYTE_TYPE_SUFFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "BYTE_TYPE", "field_51926", "BYTE_TYPE_SUFFIX", "f_336626_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#BYTE_TYPE_SUFFIX
    [[maybe_unused]] static void set_field_BYTE_TYPE_SUFFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "BYTE_TYPE", "field_51926", "BYTE_TYPE_SUFFIX", "f_336626_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SHORT_TYPE_SUFFIX
    [[maybe_unused]] static jobject get_field_SHORT_TYPE_SUFFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SHORT_TYPE", "field_51927", "SHORT_TYPE_SUFFIX", "f_337428_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#SHORT_TYPE_SUFFIX
    [[maybe_unused]] static void set_field_SHORT_TYPE_SUFFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SHORT_TYPE", "field_51927", "SHORT_TYPE_SUFFIX", "f_337428_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#INT_TYPE_SUFFIX
    [[maybe_unused]] static jobject get_field_INT_TYPE_SUFFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "INT_TYPE", "field_51928", "INT_TYPE_SUFFIX", "f_336761_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#INT_TYPE_SUFFIX
    [[maybe_unused]] static void set_field_INT_TYPE_SUFFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "INT_TYPE", "field_51928", "INT_TYPE_SUFFIX", "f_336761_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#LONG_TYPE_SUFFIX
    [[maybe_unused]] static jobject get_field_LONG_TYPE_SUFFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "LONG_TYPE", "field_51929", "LONG_TYPE_SUFFIX", "f_337355_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#LONG_TYPE_SUFFIX
    [[maybe_unused]] static void set_field_LONG_TYPE_SUFFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "LONG_TYPE", "field_51929", "LONG_TYPE_SUFFIX", "f_337355_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#FLOAT_TYPE_SUFFIX
    [[maybe_unused]] static jobject get_field_FLOAT_TYPE_SUFFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "FLOAT_TYPE", "field_51918", "FLOAT_TYPE_SUFFIX", "f_337623_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#FLOAT_TYPE_SUFFIX
    [[maybe_unused]] static void set_field_FLOAT_TYPE_SUFFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "FLOAT_TYPE", "field_51918", "FLOAT_TYPE_SUFFIX", "f_337623_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#DOUBLE_TYPE_SUFFIX
    [[maybe_unused]] static jobject get_field_DOUBLE_TYPE_SUFFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DOUBLE_TYPE", "field_51919", "DOUBLE_TYPE_SUFFIX", "f_337460_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#DOUBLE_TYPE_SUFFIX
    [[maybe_unused]] static void set_field_DOUBLE_TYPE_SUFFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DOUBLE_TYPE", "field_51919", "DOUBLE_TYPE_SUFFIX", "f_337460_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#ARRAY_BYTE_TYPE_SUFFIX
    [[maybe_unused]] static jobject get_field_ARRAY_BYTE_TYPE_SUFFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "BYTE_ARRAY_TYPE", "field_51920", "ARRAY_BYTE_TYPE_SUFFIX", "f_336796_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#ARRAY_BYTE_TYPE_SUFFIX
    [[maybe_unused]] static void set_field_ARRAY_BYTE_TYPE_SUFFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "BYTE_ARRAY_TYPE", "field_51920", "ARRAY_BYTE_TYPE_SUFFIX", "f_336796_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.nbt.visitor.NbtTextFormatter#prefix
    static jobject get_field_prefix(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "indentation", "field_27840", "prefix", "f_178246_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#prefix
    static void set_field_prefix(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "indentation", "field_27840", "prefix", "f_178246_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.nbt.visitor.NbtTextFormatter#indentationLevel
    static jint get_field_indentationLevel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "indentDepth", "field_51499", "indentationLevel", "f_316357_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#indentationLevel
    static void set_field_indentationLevel(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "indentDepth", "field_51499", "indentationLevel", "f_316357_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.nbt.visitor.NbtTextFormatter#depth
    static jint get_field_depth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "depth", "field_27841", "depth", "f_178247_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#depth
    static void set_field_depth(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "depth", "field_27841", "depth", "f_178247_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.nbt.visitor.NbtTextFormatter#result
    static jobject get_field_result(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "result", "field_27842", "result", "f_178248_"), "Lxn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.nbt.visitor.NbtTextFormatter#result
    static void set_field_result(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "result", "field_27842", "result", "f_178248_"), "Lxn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_32305", "apply", "m_178281_"), "(Luy;)Lwz;");
    }

    static jobject apply(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_apply();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitString", "method_32302", "visitString", "m_142614_"), "(Luw;)V");
    }

    static void visitString(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitString();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitByte", "method_32291", "visitByte", "m_141946_"), "(Ltz;)V");
    }

    static void visitByte(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitByte();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitShort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitShort", "method_32301", "visitShort", "m_142183_"), "(Lut;)V");
    }

    static void visitShort(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitShort();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitInt", "method_32297", "visitInt", "m_142045_"), "(Lug;)V");
    }

    static void visitInt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitInt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitLong", "method_32300", "visitLong", "m_142046_"), "(Luj;)V");
    }

    static void visitLong(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitLong();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitFloat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitFloat", "method_32295", "visitFloat", "m_142181_"), "(Lue;)V");
    }

    static void visitFloat(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitFloat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitDouble() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitDouble", "method_32293", "visitDouble", "m_142121_"), "(Luc;)V");
    }

    static void visitDouble(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitDouble();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitByteArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitByteArray", "method_32290", "visitByteArray", "m_142154_"), "(Lty;)V");
    }

    static void visitByteArray(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitByteArray();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitIntArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitIntArray", "method_32296", "visitIntArray", "m_142251_"), "(Luf;)V");
    }

    static void visitIntArray(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitIntArray();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitLongArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitLongArray", "method_32299", "visitLongArray", "m_142309_"), "(Lui;)V");
    }

    static void visitLongArray(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitLongArray();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitList", "method_32298", "visitList", "m_142447_"), "(Luh;)V");
    }

    static void visitList(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitList();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitCompound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitCompound", "method_32292", "visitCompound", "m_142303_"), "(Lub;)V");
    }

    static void visitCompound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitCompound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_formatSubElement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "appendSubTag", "method_60585", "formatSubElement", "m_338669_"), "(Luy;Z)V");
    }

    static void formatSubElement(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_formatSubElement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_escapeName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "handleEscapePretty", "method_32304", "escapeName", "m_178253_"), "(Ljava/lang/String;)Lwz;");
    }

    static jobject escapeName(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_escapeName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_visitEnd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitEnd", "method_32294", "visitEnd", "m_142384_"), "(Lud;)V");
    }

    static void visitEnd(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitEnd();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_NBT_VISITOR_NBTTEXTFORMATTER_HPP