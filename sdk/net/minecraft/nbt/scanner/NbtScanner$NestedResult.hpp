// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NBT_SCANNER_NBTSCANNER$NESTEDRESULT_HPP
#define NET_MINECRAFT_NBT_SCANNER_NBTSCANNER$NESTEDRESULT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.nbt.scanner.NbtScanner$NestedResult
 * Remapped: uv$a
 */
namespace NbtScanner$NestedResult {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("uv$a", "net/minecraft/nbt/StreamTagVisitor$EntryResult", "net/minecraft/class_6836$class_6837", "net/minecraft/nbt/scanner/NbtScanner$NestedResult", "net/minecraft/src/C_196121_$C_196122_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.nbt.scanner.NbtScanner$NestedResult#ENTER
    [[maybe_unused]] static jobject get_field_ENTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ENTER", "field_36248", "ENTER", "ENTER"), "Luv$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.scanner.NbtScanner$NestedResult#ENTER
    [[maybe_unused]] static void set_field_ENTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ENTER", "field_36248", "ENTER", "ENTER"), "Luv$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.scanner.NbtScanner$NestedResult#SKIP
    [[maybe_unused]] static jobject get_field_SKIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SKIP", "field_36249", "SKIP", "SKIP"), "Luv$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.scanner.NbtScanner$NestedResult#SKIP
    [[maybe_unused]] static void set_field_SKIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SKIP", "field_36249", "SKIP", "SKIP"), "Luv$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.scanner.NbtScanner$NestedResult#BREAK
    [[maybe_unused]] static jobject get_field_BREAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BREAK", "field_36250", "BREAK", "BREAK"), "Luv$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.scanner.NbtScanner$NestedResult#BREAK
    [[maybe_unused]] static void set_field_BREAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BREAK", "field_36250", "BREAK", "BREAK"), "Luv$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.scanner.NbtScanner$NestedResult#HALT
    [[maybe_unused]] static jobject get_field_HALT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HALT", "field_36251", "HALT", "HALT"), "Luv$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.scanner.NbtScanner$NestedResult#HALT
    [[maybe_unused]] static void set_field_HALT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HALT", "field_36251", "HALT", "HALT"), "Luv$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Luv$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Luv$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_NBT_SCANNER_NBTSCANNER$NESTEDRESULT_HPP