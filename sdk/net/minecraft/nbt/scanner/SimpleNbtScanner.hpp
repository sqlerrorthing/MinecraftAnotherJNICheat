// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NBT_SCANNER_SIMPLENBTSCANNER_HPP
#define NET_MINECRAFT_NBT_SCANNER_SIMPLENBTSCANNER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.nbt.scanner.SimpleNbtScanner
 * Remapped: vj
 */
namespace SimpleNbtScanner {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("vj", "net/minecraft/nbt/visitors/SkipAll", "net/minecraft/class_6845", "net/minecraft/nbt/scanner/SimpleNbtScanner", "net/minecraft/src/C_196131_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.nbt.scanner.SimpleNbtScanner#NOOP
    [[maybe_unused]] static jobject get_field_NOOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INSTANCE", "field_36264", "NOOP", "f_197715_"), "Lvj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.scanner.SimpleNbtScanner#NOOP
    [[maybe_unused]] static void set_field_NOOP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INSTANCE", "field_36264", "NOOP", "f_197715_"), "Lvj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_visitEnd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitEnd", "method_39856", "visitEnd", "m_196525_"), "()Luv$b;");
    }

    static jobject visitEnd(const jobject& obj) {
                
       const auto methodID = methodID_visitEnd();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_visitString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_39862", "visitString", "m_196458_"), "(Ljava/lang/String;)Luv$b;");
    }

    static jobject visitString(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_39857", "visitByte", "m_196209_"), "(B)Luv$b;");
    }

    static jobject visitByte(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_visitByte();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitShort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_39866", "visitShort", "m_196553_"), "(S)Luv$b;");
    }

    static jobject visitShort(const jobject& obj, const jshort& arg0) {
                
       const auto methodID = methodID_visitShort();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_39860", "visitInt", "m_196353_"), "(I)Luv$b;");
    }

    static jobject visitInt(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_visitInt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_39861", "visitLong", "m_196295_"), "(J)Luv$b;");
    }

    static jobject visitLong(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_visitLong();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitFloat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_39859", "visitFloat", "m_196532_"), "(F)Luv$b;");
    }

    static jobject visitFloat(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_visitFloat();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitDouble() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_39858", "visitDouble", "m_196455_"), "(D)Luv$b;");
    }

    static jobject visitDouble(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_visitDouble();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visitByteArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_39867", "visitByteArray", "m_196152_"), "([B)Luv$b;");
    }

    static jobject visitByteArray(const jobject& obj, const jarray& arg0, const jbyte& arg1) {
                
       const auto methodID = methodID_visitByteArray();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_visitIntArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_39868", "visitIntArray", "m_196376_"), "([I)Luv$b;");
    }

    static jobject visitIntArray(const jobject& obj, const jarray& arg0, const jint& arg1) {
                
       const auto methodID = methodID_visitIntArray();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_visitLongArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visit", "method_39869", "visitLongArray", "m_196280_"), "([J)Luv$b;");
    }

    static jobject visitLongArray(const jobject& obj, const jarray& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_visitLongArray();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_visitListMeta() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitList", "method_39864", "visitListMeta", "m_196339_"), "(Lva;I)Luv$b;");
    }

    static jobject visitListMeta(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_visitListMeta();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_startListItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "visitElement", "method_39872", "startListItem", "m_196338_"), "(Lva;I)Luv$a;");
    }

    static jobject startListItem(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_startListItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_visitSubNbtType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitEntry", "method_39863", "visitSubNbtType", "m_196214_"), "(Lva;)Luv$a;");
    }

    static jobject visitSubNbtType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visitSubNbtType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_startSubNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitEntry", "method_39865", "startSubNbt", "m_196425_"), "(Lva;Ljava/lang/String;)Luv$a;");
    }

    static jobject startSubNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_startSubNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_endNested() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "visitContainerEnd", "method_39870", "endNested", "m_196527_"), "()Luv$b;");
    }

    static jobject endNested(const jobject& obj) {
                
       const auto methodID = methodID_endNested();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "visitRootEntry", "method_39871", "start", "m_196213_"), "(Lva;)Luv$b;");
    }

    static jobject start(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_start();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_NBT_SCANNER_SIMPLENBTSCANNER_HPP