// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NBT_NBTIO_HPP
#define NET_MINECRAFT_NBT_NBTIO_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.nbt.NbtIo
 * Remapped: uo
 */
namespace NbtIo {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("uo", "net/minecraft/nbt/NbtIo", "net/minecraft/class_2507", "net/minecraft/nbt/NbtIo", "net/minecraft/src/C_4939_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.nbt.NbtIo#OPEN_OPTIONS
    [[maybe_unused]] static jobject get_field_OPEN_OPTIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SYNC_OUTPUT_OPTIONS", "field_47513", "OPEN_OPTIONS", "f_302613_"), "[Ljava/nio/file/OpenOption;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtIo#OPEN_OPTIONS
    [[maybe_unused]] static void set_field_OPEN_OPTIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SYNC_OUTPUT_OPTIONS", "field_47513", "OPEN_OPTIONS", "f_302613_"), "[Ljava/nio/file/OpenOption;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_readCompressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readCompressed", "method_30613", "readCompressed", "m_128939_"), "(Ljava/nio/file/Path;Luk;)Lub;");
    }

    static jobject readCompressed(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_readCompressed();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_decompress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createDecompressorStream", "method_40059", "decompress", "m_202493_"), "(Ljava/io/InputStream;)Ljava/io/DataInputStream;");
    }

    static jobject decompress(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_decompress();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_compress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createCompressorStream", "method_54906", "compress", "m_306903_"), "(Ljava/io/OutputStream;)Ljava/io/DataOutputStream;");
    }

    static jobject compress(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_compress();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__readCompressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readCompressed", "method_10629", "readCompressed", "m_128937_"), "(Ljava/io/InputStream;Luk;)Lub;");
    }

    static jobject _readCompressed(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__readCompressed();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_scanCompressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseCompressed", "method_40057", "scanCompressed", "m_202487_"), "(Ljava/nio/file/Path;Luv;Luk;)V");
    }

    static void scanCompressed(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_scanCompressed();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__scanCompressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseCompressed", "method_40058", "scanCompressed", "m_202490_"), "(Ljava/io/InputStream;Luv;Luk;)V");
    }

    static void _scanCompressed(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__scanCompressed();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_writeCompressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeCompressed", "method_30614", "writeCompressed", "m_128944_"), "(Lub;Ljava/nio/file/Path;)V");
    }

    static void writeCompressed(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_writeCompressed();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__writeCompressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeCompressed", "method_10634", "writeCompressed", "m_128947_"), "(Lub;Ljava/io/OutputStream;)V");
    }

    static void _writeCompressed(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__writeCompressed();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "write", "method_10630", "write", "m_128955_"), "(Lub;Ljava/nio/file/Path;)V");
    }

    static void write(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_read() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "read", "method_10633", "read", "m_128953_"), "(Ljava/nio/file/Path;)Lub;");
    }

    static jobject read(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_read();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_readCompound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "read", "method_10627", "readCompound", "m_128928_"), "(Ljava/io/DataInput;)Lub;");
    }

    static jobject readCompound(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_readCompound();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__readCompound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "read", "method_10625", "readCompound", "m_128934_"), "(Ljava/io/DataInput;Luk;)Lub;");
    }

    static jobject _readCompound(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__readCompound();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeCompound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_10628", "writeCompound", "m_128941_"), "(Lub;Ljava/io/DataOutput;)V");
    }

    static void writeCompound(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_writeCompound();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_scan() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_39855", "scan", "m_197509_"), "(Ljava/io/DataInput;Luv;Luk;)V");
    }

    static void scan(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_scan();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__read() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "readAnyTag", "method_52894", "read", "m_295332_"), "(Ljava/io/DataInput;Luk;)Luy;");
    }

    static jobject _read(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__read();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeForPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeAnyTag", "method_52893", "writeForPacket", "m_292740_"), "(Luy;Ljava/io/DataOutput;)V");
    }

    static void writeForPacket(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_writeForPacket();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeUnsafe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "writeUnnamedTag", "method_10631", "writeUnsafe", "m_128950_"), "(Luy;Ljava/io/DataOutput;)V");
    }

    static void writeUnsafe(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_writeUnsafe();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "writeUnnamedTagWithFallback", "method_55324", "write", "m_306638_"), "(Luy;Ljava/io/DataOutput;)V");
    }

    static void _write(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__write();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readElement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "readUnnamedTag", "method_10626", "readElement", "m_128930_"), "(Ljava/io/DataInput;Luk;)Luy;");
    }

    static jobject readElement(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_readElement();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__readElement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readTagSafe", "method_52892", "readElement", "m_292742_"), "(Ljava/io/DataInput;Luk;B)Luy;");
    }

    static jobject _readElement(const jobject& arg0, const jobject& arg1, const jbyte& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__readElement();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_NBT_NBTIO_HPP