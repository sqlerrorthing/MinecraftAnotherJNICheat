// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NBT_NBTCOMPOUND_HPP
#define NET_MINECRAFT_NBT_NBTCOMPOUND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.nbt.NbtCompound
 * Remapped: ub
 */
namespace NbtCompound {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ub", "net/minecraft/nbt/CompoundTag", "net/minecraft/class_2487", "net/minecraft/nbt/NbtCompound", "net/minecraft/src/C_4917_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.nbt.NbtCompound#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_25128", "CODEC", "f_128325_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.NbtCompound#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_25128", "CODEC", "f_128325_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.NbtCompound#SIZE
    [[maybe_unused]] static jint get_field_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SELF_SIZE_IN_BYTES", "field_41718", "SIZE", "f_263436_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtCompound#SIZE
    [[maybe_unused]] static void set_field_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SELF_SIZE_IN_BYTES", "field_41718", "SIZE", "f_263436_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.NbtCompound#field_41719
    [[maybe_unused]] static jint get_field_field_41719() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "MAP_ENTRY_SIZE_IN_BYTES", "field_41719", "field_41719", "f_263443_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtCompound#field_41719
    [[maybe_unused]] static void set_field_field_41719(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "MAP_ENTRY_SIZE_IN_BYTES", "field_41719", "field_41719", "f_263443_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.NbtCompound#TYPE
    [[maybe_unused]] static jobject get_field_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TYPE", "field_21029", "TYPE", "f_128326_"), "Lva;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.NbtCompound#TYPE
    [[maybe_unused]] static void set_field_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TYPE", "field_21029", "TYPE", "f_128326_"), "Lva;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.nbt.NbtCompound#entries
    static jobject get_field_entries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "tags", "field_11515", "entries", "f_128329_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.nbt.NbtCompound#entries
    static void set_field_entries(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "tags", "field_11515", "entries", "f_128329_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_10713", "write", "m_6434_"), "(Ljava/io/DataOutput;)V");
    }

    static void write(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSizeInBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sizeInBytes", "method_47988", "getSizeInBytes", "m_263179_"), "()I");
    }

    static jint getSizeInBytes(const jobject& obj) {
                
       const auto methodID = methodID_getSizeInBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getKeys() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getAllKeys", "method_10541", "getKeys", "m_128431_"), "()Ljava/util/Set;");
    }

    static jobject getKeys(const jobject& obj) {
                
       const auto methodID = methodID_getKeys();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getId", "method_10711", "getType", "m_7060_"), "()B");
    }

    static jbyte getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallByteMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNbtType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getType", "method_23258", "getNbtType", "m_6458_"), "()Lva;");
    }

    static jobject getNbtType(const jobject& obj) {
                
       const auto methodID = methodID_getNbtType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "size", "method_10546", "getSize", "m_128440_"), "()I");
    }

    static jint getSize(const jobject& obj) {
                
       const auto methodID = methodID_getSize();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_put() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "put", "method_10566", "put", "m_128365_"), "(Ljava/lang/String;Luy;)Luy;");
    }

    static jobject put(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_put();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putByte", "method_10567", "putByte", "m_128344_"), "(Ljava/lang/String;B)V");
    }

    static void putByte(const jobject& obj, const jobject& arg0, const jbyte& arg1) {
                
       const auto methodID = methodID_putByte();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putShort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putShort", "method_10575", "putShort", "m_128376_"), "(Ljava/lang/String;S)V");
    }

    static void putShort(const jobject& obj, const jobject& arg0, const jshort& arg1) {
                
       const auto methodID = methodID_putShort();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putInt", "method_10569", "putInt", "m_128405_"), "(Ljava/lang/String;I)V");
    }

    static void putInt(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_putInt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putLong", "method_10544", "putLong", "m_128356_"), "(Ljava/lang/String;J)V");
    }

    static void putLong(const jobject& obj, const jobject& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_putLong();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putUUID", "method_25927", "putUuid", "m_128362_"), "(Ljava/lang/String;Ljava/util/UUID;)V");
    }

    static void putUuid(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_putUuid();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getUUID", "method_25926", "getUuid", "m_128342_"), "(Ljava/lang/String;)Ljava/util/UUID;");
    }

    static jobject getUuid(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getUuid();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_containsUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasUUID", "method_25928", "containsUuid", "m_128403_"), "(Ljava/lang/String;)Z");
    }

    static jboolean containsUuid(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_containsUuid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_putFloat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putFloat", "method_10548", "putFloat", "m_128350_"), "(Ljava/lang/String;F)V");
    }

    static void putFloat(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_putFloat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putDouble() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putDouble", "method_10549", "putDouble", "m_128347_"), "(Ljava/lang/String;D)V");
    }

    static void putDouble(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_putDouble();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putString", "method_10582", "putString", "m_128359_"), "(Ljava/lang/String;Ljava/lang/String;)V");
    }

    static void putString(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_putString();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putByteArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putByteArray", "method_10570", "putByteArray", "m_128382_"), "(Ljava/lang/String;[B)V");
    }

    static void putByteArray(const jobject& obj, const jobject& arg0, const jarray& arg1, const jbyte& arg2) {
                
       const auto methodID = methodID_putByteArray();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__putByteArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putByteArray", "method_36110", "putByteArray", "m_177853_"), "(Ljava/lang/String;Ljava/util/List;)V");
    }

    static void _putByteArray(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__putByteArray();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putIntArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putIntArray", "method_10539", "putIntArray", "m_128385_"), "(Ljava/lang/String;[I)V");
    }

    static void putIntArray(const jobject& obj, const jobject& arg0, const jarray& arg1, const jint& arg2) {
                
       const auto methodID = methodID_putIntArray();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__putIntArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "putIntArray", "method_10572", "putIntArray", "m_128408_"), "(Ljava/lang/String;Ljava/util/List;)V");
    }

    static void _putIntArray(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__putIntArray();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putLongArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putLongArray", "method_10564", "putLongArray", "m_128388_"), "(Ljava/lang/String;[J)V");
    }

    static void putLongArray(const jobject& obj, const jobject& arg0, const jarray& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_putLongArray();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__putLongArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "putLongArray", "method_10538", "putLongArray", "m_128428_"), "(Ljava/lang/String;Ljava/util/List;)V");
    }

    static void _putLongArray(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__putLongArray();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putBoolean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putBoolean", "method_10556", "putBoolean", "m_128379_"), "(Ljava/lang/String;Z)V");
    }

    static void putBoolean(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_putBoolean();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "get", "method_10580", "get", "m_128423_"), "(Ljava/lang/String;)Luy;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getTagType", "method_10540", "getType", "m_128435_"), "(Ljava/lang/String;)B");
    }

    static jbyte _getType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getType();
       return MinecraftSDK::env->CallByteMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "contains", "method_10545", "contains", "m_128441_"), "(Ljava/lang/String;)Z");
    }

    static jboolean contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "contains", "method_10573", "contains", "m_128425_"), "(Ljava/lang/String;I)Z");
    }

    static jboolean _contains(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getByte", "method_10571", "getByte", "m_128445_"), "(Ljava/lang/String;)B");
    }

    static jbyte getByte(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getByte();
       return MinecraftSDK::env->CallByteMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getShort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getShort", "method_10568", "getShort", "m_128448_"), "(Ljava/lang/String;)S");
    }

    static jshort getShort(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getShort();
       return MinecraftSDK::env->CallShortMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getInt", "method_10550", "getInt", "m_128451_"), "(Ljava/lang/String;)I");
    }

    static jint getInt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getInt();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getLong", "method_10537", "getLong", "m_128454_"), "(Ljava/lang/String;)J");
    }

    static jlong getLong(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getLong();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFloat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getFloat", "method_10583", "getFloat", "m_128457_"), "(Ljava/lang/String;)F");
    }

    static jfloat getFloat(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFloat();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDouble() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getDouble", "method_10574", "getDouble", "m_128459_"), "(Ljava/lang/String;)D");
    }

    static jdouble getDouble(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDouble();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getString", "method_10558", "getString", "m_128461_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject getString(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getByteArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getByteArray", "method_10547", "getByteArray", "m_128463_"), "(Ljava/lang/String;)[B");
    }

    static jbyte getByteArray(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getByteArray();
       return MinecraftSDK::env->CallByteMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getIntArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getIntArray", "method_10561", "getIntArray", "m_128465_"), "(Ljava/lang/String;)[I");
    }

    static jint getIntArray(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getIntArray();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLongArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getLongArray", "method_10565", "getLongArray", "m_128467_"), "(Ljava/lang/String;)[J");
    }

    static jlong getLongArray(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getLongArray();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCompound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getCompound", "method_10562", "getCompound", "m_128469_"), "(Ljava/lang/String;)Lub;");
    }

    static jobject getCompound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getCompound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getList", "method_10554", "getList", "m_128437_"), "(Ljava/lang/String;I)Luh;");
    }

    static jobject getList(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_getList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBoolean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getBoolean", "method_10577", "getBoolean", "m_128471_"), "(Ljava/lang/String;)Z");
    }

    static jboolean getBoolean(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBoolean();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "remove", "method_10551", "remove", "m_128473_"), "(Ljava/lang/String;)V");
    }

    static void remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "isEmpty", "method_33133", "isEmpty", "m_128456_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_createCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createReport", "method_10559", "createCrashReport", "m_128372_"), "(Ljava/lang/String;Lva;Ljava/lang/ClassCastException;)Lo;");
    }

    static jobject createCrashReport(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_createCrashReport();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_shallowCopy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "shallowCopy", "method_59873", "shallowCopy", "m_322637_"), "()Lub;");
    }

    static jobject shallowCopy(const jobject& obj) {
                
       const auto methodID = methodID_shallowCopy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "copy", "method_10553", "copy", "m_6426_"), "()Lub;");
    }

    static jobject copy(const jobject& obj) {
                
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeNamedTag", "method_10555", "write", "m_128368_"), "(Ljava/lang/String;Luy;Ljava/io/DataOutput;)V");
    }

    static void _write(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__write();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_read() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readNamedTagData", "method_10581", "read", "m_128413_"), "(Lva;Ljava/lang/String;Ljava/io/DataInput;Luk;)Luy;");
    }

    static jobject read(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_read();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_copyFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "merge", "method_10543", "copyFrom", "m_128391_"), "(Lub;)Lub;");
    }

    static jobject copyFrom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_copyFrom();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_accept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "accept", "method_32289", "accept", "m_142327_"), "(Lvc;)V");
    }

    static void accept(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_accept();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_entrySet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "entrySet", "method_59874", "entrySet", "m_324503_"), "()Ljava/util/Set;");
    }

    static jobject entrySet(const jobject& obj) {
                
       const auto methodID = methodID_entrySet();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_doAccept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "accept", "method_39850", "doAccept", "m_196533_"), "(Luv;)Luv$b;");
    }

    static jobject doAccept(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_doAccept();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_NBT_NBTCOMPOUND_HPP