// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NBT_STRINGNBTREADER_HPP
#define NET_MINECRAFT_NBT_STRINGNBTREADER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.nbt.StringNbtReader
 * Remapped: uz
 */
namespace StringNbtReader {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("uz", "net/minecraft/nbt/TagParser", "net/minecraft/class_2522", "net/minecraft/nbt/StringNbtReader", "net/minecraft/src/C_4951_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.nbt.StringNbtReader#TRAILING
    [[maybe_unused]] static jobject get_field_TRAILING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_TRAILING_DATA", "field_11602", "TRAILING", "f_129334_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.StringNbtReader#TRAILING
    [[maybe_unused]] static void set_field_TRAILING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_TRAILING_DATA", "field_11602", "TRAILING", "f_129334_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.StringNbtReader#EXPECTED_KEY
    [[maybe_unused]] static jobject get_field_EXPECTED_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_EXPECTED_KEY", "field_11608", "EXPECTED_KEY", "f_129335_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.StringNbtReader#EXPECTED_KEY
    [[maybe_unused]] static void set_field_EXPECTED_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_EXPECTED_KEY", "field_11608", "EXPECTED_KEY", "f_129335_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.StringNbtReader#EXPECTED_VALUE
    [[maybe_unused]] static jobject get_field_EXPECTED_VALUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_EXPECTED_VALUE", "field_11605", "EXPECTED_VALUE", "f_129336_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.StringNbtReader#EXPECTED_VALUE
    [[maybe_unused]] static void set_field_EXPECTED_VALUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_EXPECTED_VALUE", "field_11605", "EXPECTED_VALUE", "f_129336_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.StringNbtReader#LIST_MIXED
    [[maybe_unused]] static jobject get_field_LIST_MIXED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_INSERT_MIXED_LIST", "field_11603", "LIST_MIXED", "f_129337_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.StringNbtReader#LIST_MIXED
    [[maybe_unused]] static void set_field_LIST_MIXED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_INSERT_MIXED_LIST", "field_11603", "LIST_MIXED", "f_129337_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.StringNbtReader#ARRAY_MIXED
    [[maybe_unused]] static jobject get_field_ARRAY_MIXED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ERROR_INSERT_MIXED_ARRAY", "field_11597", "ARRAY_MIXED", "f_129338_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.StringNbtReader#ARRAY_MIXED
    [[maybe_unused]] static void set_field_ARRAY_MIXED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ERROR_INSERT_MIXED_ARRAY", "field_11597", "ARRAY_MIXED", "f_129338_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.StringNbtReader#ARRAY_INVALID
    [[maybe_unused]] static jobject get_field_ARRAY_INVALID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ERROR_INVALID_ARRAY", "field_11604", "ARRAY_INVALID", "f_129339_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.StringNbtReader#ARRAY_INVALID
    [[maybe_unused]] static void set_field_ARRAY_INVALID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ERROR_INVALID_ARRAY", "field_11604", "ARRAY_INVALID", "f_129339_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.StringNbtReader#COMMA
    [[maybe_unused]] static jchar get_field_COMMA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ELEMENT_SEPARATOR", "field_33265", "COMMA", "f_178209_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.StringNbtReader#COMMA
    [[maybe_unused]] static void set_field_COMMA(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ELEMENT_SEPARATOR", "field_33265", "COMMA", "f_178209_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.StringNbtReader#COLON
    [[maybe_unused]] static jchar get_field_COLON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "NAME_VALUE_SEPARATOR", "field_33266", "COLON", "f_178210_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.StringNbtReader#COLON
    [[maybe_unused]] static void set_field_COLON(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "NAME_VALUE_SEPARATOR", "field_33266", "COLON", "f_178210_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.StringNbtReader#SQUARE_OPEN_BRACKET
    [[maybe_unused]] static jchar get_field_SQUARE_OPEN_BRACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LIST_OPEN", "field_33267", "SQUARE_OPEN_BRACKET", "f_178211_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.StringNbtReader#SQUARE_OPEN_BRACKET
    [[maybe_unused]] static void set_field_SQUARE_OPEN_BRACKET(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LIST_OPEN", "field_33267", "SQUARE_OPEN_BRACKET", "f_178211_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.StringNbtReader#SQUARE_CLOSE_BRACKET
    [[maybe_unused]] static jchar get_field_SQUARE_CLOSE_BRACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "LIST_CLOSE", "field_33268", "SQUARE_CLOSE_BRACKET", "f_178212_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.StringNbtReader#SQUARE_CLOSE_BRACKET
    [[maybe_unused]] static void set_field_SQUARE_CLOSE_BRACKET(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "LIST_CLOSE", "field_33268", "SQUARE_CLOSE_BRACKET", "f_178212_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.StringNbtReader#RIGHT_CURLY_BRACKET
    [[maybe_unused]] static jchar get_field_RIGHT_CURLY_BRACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "STRUCT_CLOSE", "field_33269", "RIGHT_CURLY_BRACKET", "f_178213_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.StringNbtReader#RIGHT_CURLY_BRACKET
    [[maybe_unused]] static void set_field_RIGHT_CURLY_BRACKET(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "STRUCT_CLOSE", "field_33269", "RIGHT_CURLY_BRACKET", "f_178213_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.StringNbtReader#LEFT_CURLY_BRACKET
    [[maybe_unused]] static jchar get_field_LEFT_CURLY_BRACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "STRUCT_OPEN", "field_33270", "LEFT_CURLY_BRACKET", "f_178214_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.StringNbtReader#LEFT_CURLY_BRACKET
    [[maybe_unused]] static void set_field_LEFT_CURLY_BRACKET(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "STRUCT_OPEN", "field_33270", "LEFT_CURLY_BRACKET", "f_178214_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.StringNbtReader#DOUBLE_PATTERN_IMPLICIT
    [[maybe_unused]] static jobject get_field_DOUBLE_PATTERN_IMPLICIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "DOUBLE_PATTERN_NOSUFFIX", "field_11607", "DOUBLE_PATTERN_IMPLICIT", "f_129340_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.StringNbtReader#DOUBLE_PATTERN_IMPLICIT
    [[maybe_unused]] static void set_field_DOUBLE_PATTERN_IMPLICIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "DOUBLE_PATTERN_NOSUFFIX", "field_11607", "DOUBLE_PATTERN_IMPLICIT", "f_129340_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.StringNbtReader#DOUBLE_PATTERN
    [[maybe_unused]] static jobject get_field_DOUBLE_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "DOUBLE_PATTERN", "field_11600", "DOUBLE_PATTERN", "f_129341_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.StringNbtReader#DOUBLE_PATTERN
    [[maybe_unused]] static void set_field_DOUBLE_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "DOUBLE_PATTERN", "field_11600", "DOUBLE_PATTERN", "f_129341_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.StringNbtReader#FLOAT_PATTERN
    [[maybe_unused]] static jobject get_field_FLOAT_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "FLOAT_PATTERN", "field_11596", "FLOAT_PATTERN", "f_129342_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.StringNbtReader#FLOAT_PATTERN
    [[maybe_unused]] static void set_field_FLOAT_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "FLOAT_PATTERN", "field_11596", "FLOAT_PATTERN", "f_129342_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.StringNbtReader#BYTE_PATTERN
    [[maybe_unused]] static jobject get_field_BYTE_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "BYTE_PATTERN", "field_11606", "BYTE_PATTERN", "f_129343_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.StringNbtReader#BYTE_PATTERN
    [[maybe_unused]] static void set_field_BYTE_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "BYTE_PATTERN", "field_11606", "BYTE_PATTERN", "f_129343_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.StringNbtReader#LONG_PATTERN
    [[maybe_unused]] static jobject get_field_LONG_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LONG_PATTERN", "field_11609", "LONG_PATTERN", "f_129344_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.StringNbtReader#LONG_PATTERN
    [[maybe_unused]] static void set_field_LONG_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LONG_PATTERN", "field_11609", "LONG_PATTERN", "f_129344_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.StringNbtReader#SHORT_PATTERN
    [[maybe_unused]] static jobject get_field_SHORT_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SHORT_PATTERN", "field_11601", "SHORT_PATTERN", "f_129345_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.StringNbtReader#SHORT_PATTERN
    [[maybe_unused]] static void set_field_SHORT_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SHORT_PATTERN", "field_11601", "SHORT_PATTERN", "f_129345_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.nbt.StringNbtReader#INT_PATTERN
    [[maybe_unused]] static jobject get_field_INT_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "INT_PATTERN", "field_11599", "INT_PATTERN", "f_129346_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.nbt.StringNbtReader#INT_PATTERN
    [[maybe_unused]] static void set_field_INT_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "INT_PATTERN", "field_11599", "INT_PATTERN", "f_129346_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.StringNbtReader#STRINGIFIED_CODEC
    [[maybe_unused]] static jobject get_field_STRINGIFIED_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "AS_CODEC", "field_45952", "STRINGIFIED_CODEC", "f_290338_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.StringNbtReader#STRINGIFIED_CODEC
    [[maybe_unused]] static void set_field_STRINGIFIED_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "AS_CODEC", "field_45952", "STRINGIFIED_CODEC", "f_290338_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.nbt.StringNbtReader#NBT_COMPOUND_CODEC
    [[maybe_unused]] static jobject get_field_NBT_COMPOUND_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "LENIENT_CODEC", "field_51469", "NBT_COMPOUND_CODEC", "f_316526_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.nbt.StringNbtReader#NBT_COMPOUND_CODEC
    [[maybe_unused]] static void set_field_NBT_COMPOUND_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "LENIENT_CODEC", "field_51469", "NBT_COMPOUND_CODEC", "f_316526_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.nbt.StringNbtReader#reader
    static jobject get_field_reader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "reader", "field_11598", "reader", "f_129347_"), "Lcom/mojang/brigadier/StringReader;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.nbt.StringNbtReader#reader
    static void set_field_reader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "reader", "field_11598", "reader", "f_129347_"), "Lcom/mojang/brigadier/StringReader;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseTag", "method_10718", "parse", "m_129359_"), "(Ljava/lang/String;)Lub;");
    }

    static jobject parse(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_parse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_readCompound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readSingleStruct", "method_10721", "readCompound", "m_129351_"), "()Lub;");
    }

    static jobject readCompound(const jobject& obj) {
                
       const auto methodID = methodID_readCompound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "readKey", "method_10725", "readString", "m_129364_"), "()Ljava/lang/String;");
    }

    static jobject readString(const jobject& obj) {
                
       const auto methodID = methodID_readString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_parseElementPrimitive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "readTypedValue", "method_10722", "parseElementPrimitive", "m_129370_"), "()Luy;");
    }

    static jobject parseElementPrimitive(const jobject& obj) {
                
       const auto methodID = methodID_parseElementPrimitive();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_parsePrimitive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "type", "method_10731", "parsePrimitive", "m_129368_"), "(Ljava/lang/String;)Luy;");
    }

    static jobject parsePrimitive(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_parsePrimitive();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_parseElement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "readValue", "method_10723", "parseElement", "m_129371_"), "()Luy;");
    }

    static jobject parseElement(const jobject& obj) {
                
       const auto methodID = methodID_parseElement();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_parseArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "readList", "method_10717", "parseArray", "m_129372_"), "()Luy;");
    }

    static jobject parseArray(const jobject& obj) {
                
       const auto methodID = methodID_parseArray();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_parseCompound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "readStruct", "method_10727", "parseCompound", "m_129373_"), "()Lub;");
    }

    static jobject parseCompound(const jobject& obj) {
                
       const auto methodID = methodID_parseCompound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_parseList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "readListTag", "method_10729", "parseList", "m_129374_"), "()Luy;");
    }

    static jobject parseList(const jobject& obj) {
                
       const auto methodID = methodID_parseList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_parseElementPrimitiveArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "readArrayTag", "method_10726", "parseElementPrimitiveArray", "m_129375_"), "()Luy;");
    }

    static jobject parseElementPrimitiveArray(const jobject& obj) {
                
       const auto methodID = methodID_parseElementPrimitiveArray();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readArray", "method_10728", "readArray", "m_129361_"), "(Lva;Lva;)Ljava/util/List;");
    }

    static jobject readArray(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readArray();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readComma() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "hasElementSeparator", "method_10716", "readComma", "m_129376_"), "()Z");
    }

    static jboolean readComma(const jobject& obj) {
                
       const auto methodID = methodID_readComma();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_expect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "expect", "method_10719", "expect", "m_129352_"), "(C)V");
    }

    static void expect(const jobject& obj, const jchar& arg0) {
                
       const auto methodID = methodID_expect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_NBT_STRINGNBTREADER_HPP