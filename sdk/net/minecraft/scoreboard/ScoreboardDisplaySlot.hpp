// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SCOREBOARD_SCOREBOARDDISPLAYSLOT_HPP
#define NET_MINECRAFT_SCOREBOARD_SCOREBOARDDISPLAYSLOT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.scoreboard.ScoreboardDisplaySlot
 * Remapped: exx
 */
namespace ScoreboardDisplaySlot {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("exx", "net/minecraft/world/scores/DisplaySlot", "net/minecraft/class_8646", "net/minecraft/scoreboard/ScoreboardDisplaySlot", "net/minecraft/src/C_290072_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#LIST
    [[maybe_unused]] static jobject get_field_LIST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LIST", "field_45156", "LIST", "LIST"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#LIST
    [[maybe_unused]] static void set_field_LIST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LIST", "field_45156", "LIST", "LIST"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#SIDEBAR
    [[maybe_unused]] static jobject get_field_SIDEBAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SIDEBAR", "field_45157", "SIDEBAR", "SIDEBAR"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#SIDEBAR
    [[maybe_unused]] static void set_field_SIDEBAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SIDEBAR", "field_45157", "SIDEBAR", "SIDEBAR"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#BELOW_NAME
    [[maybe_unused]] static jobject get_field_BELOW_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BELOW_NAME", "field_45158", "BELOW_NAME", "BELOW_NAME"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#BELOW_NAME
    [[maybe_unused]] static void set_field_BELOW_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BELOW_NAME", "field_45158", "BELOW_NAME", "BELOW_NAME"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_BLACK
    [[maybe_unused]] static jobject get_field_TEAM_BLACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TEAM_BLACK", "field_45159", "TEAM_BLACK", "TEAM_BLACK"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_BLACK
    [[maybe_unused]] static void set_field_TEAM_BLACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TEAM_BLACK", "field_45159", "TEAM_BLACK", "TEAM_BLACK"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_DARK_BLUE
    [[maybe_unused]] static jobject get_field_TEAM_DARK_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TEAM_DARK_BLUE", "field_45160", "TEAM_DARK_BLUE", "TEAM_DARK_BLUE"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_DARK_BLUE
    [[maybe_unused]] static void set_field_TEAM_DARK_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TEAM_DARK_BLUE", "field_45160", "TEAM_DARK_BLUE", "TEAM_DARK_BLUE"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_DARK_GREEN
    [[maybe_unused]] static jobject get_field_TEAM_DARK_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TEAM_DARK_GREEN", "field_45161", "TEAM_DARK_GREEN", "TEAM_DARK_GREEN"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_DARK_GREEN
    [[maybe_unused]] static void set_field_TEAM_DARK_GREEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TEAM_DARK_GREEN", "field_45161", "TEAM_DARK_GREEN", "TEAM_DARK_GREEN"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_DARK_AQUA
    [[maybe_unused]] static jobject get_field_TEAM_DARK_AQUA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "TEAM_DARK_AQUA", "field_45162", "TEAM_DARK_AQUA", "TEAM_DARK_AQUA"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_DARK_AQUA
    [[maybe_unused]] static void set_field_TEAM_DARK_AQUA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "TEAM_DARK_AQUA", "field_45162", "TEAM_DARK_AQUA", "TEAM_DARK_AQUA"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_DARK_RED
    [[maybe_unused]] static jobject get_field_TEAM_DARK_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "TEAM_DARK_RED", "field_45163", "TEAM_DARK_RED", "TEAM_DARK_RED"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_DARK_RED
    [[maybe_unused]] static void set_field_TEAM_DARK_RED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "TEAM_DARK_RED", "field_45163", "TEAM_DARK_RED", "TEAM_DARK_RED"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_DARK_PURPLE
    [[maybe_unused]] static jobject get_field_TEAM_DARK_PURPLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "TEAM_DARK_PURPLE", "field_45164", "TEAM_DARK_PURPLE", "TEAM_DARK_PURPLE"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_DARK_PURPLE
    [[maybe_unused]] static void set_field_TEAM_DARK_PURPLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "TEAM_DARK_PURPLE", "field_45164", "TEAM_DARK_PURPLE", "TEAM_DARK_PURPLE"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_GOLD
    [[maybe_unused]] static jobject get_field_TEAM_GOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TEAM_GOLD", "field_45165", "TEAM_GOLD", "TEAM_GOLD"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_GOLD
    [[maybe_unused]] static void set_field_TEAM_GOLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TEAM_GOLD", "field_45165", "TEAM_GOLD", "TEAM_GOLD"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_GRAY
    [[maybe_unused]] static jobject get_field_TEAM_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "TEAM_GRAY", "field_45166", "TEAM_GRAY", "TEAM_GRAY"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_GRAY
    [[maybe_unused]] static void set_field_TEAM_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "TEAM_GRAY", "field_45166", "TEAM_GRAY", "TEAM_GRAY"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_DARK_GRAY
    [[maybe_unused]] static jobject get_field_TEAM_DARK_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "TEAM_DARK_GRAY", "field_45167", "TEAM_DARK_GRAY", "TEAM_DARK_GRAY"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_DARK_GRAY
    [[maybe_unused]] static void set_field_TEAM_DARK_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "TEAM_DARK_GRAY", "field_45167", "TEAM_DARK_GRAY", "TEAM_DARK_GRAY"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_BLUE
    [[maybe_unused]] static jobject get_field_TEAM_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "TEAM_BLUE", "field_45168", "TEAM_BLUE", "TEAM_BLUE"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_BLUE
    [[maybe_unused]] static void set_field_TEAM_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "TEAM_BLUE", "field_45168", "TEAM_BLUE", "TEAM_BLUE"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_GREEN
    [[maybe_unused]] static jobject get_field_TEAM_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "TEAM_GREEN", "field_45169", "TEAM_GREEN", "TEAM_GREEN"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_GREEN
    [[maybe_unused]] static void set_field_TEAM_GREEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "TEAM_GREEN", "field_45169", "TEAM_GREEN", "TEAM_GREEN"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_AQUA
    [[maybe_unused]] static jobject get_field_TEAM_AQUA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "TEAM_AQUA", "field_45170", "TEAM_AQUA", "TEAM_AQUA"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_AQUA
    [[maybe_unused]] static void set_field_TEAM_AQUA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "TEAM_AQUA", "field_45170", "TEAM_AQUA", "TEAM_AQUA"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_RED
    [[maybe_unused]] static jobject get_field_TEAM_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "TEAM_RED", "field_45171", "TEAM_RED", "TEAM_RED"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_RED
    [[maybe_unused]] static void set_field_TEAM_RED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "TEAM_RED", "field_45171", "TEAM_RED", "TEAM_RED"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_LIGHT_PURPLE
    [[maybe_unused]] static jobject get_field_TEAM_LIGHT_PURPLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "TEAM_LIGHT_PURPLE", "field_45172", "TEAM_LIGHT_PURPLE", "TEAM_LIGHT_PURPLE"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_LIGHT_PURPLE
    [[maybe_unused]] static void set_field_TEAM_LIGHT_PURPLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "TEAM_LIGHT_PURPLE", "field_45172", "TEAM_LIGHT_PURPLE", "TEAM_LIGHT_PURPLE"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_YELLOW
    [[maybe_unused]] static jobject get_field_TEAM_YELLOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "TEAM_YELLOW", "field_45173", "TEAM_YELLOW", "TEAM_YELLOW"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_YELLOW
    [[maybe_unused]] static void set_field_TEAM_YELLOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "TEAM_YELLOW", "field_45173", "TEAM_YELLOW", "TEAM_YELLOW"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_WHITE
    [[maybe_unused]] static jobject get_field_TEAM_WHITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "TEAM_WHITE", "field_45174", "TEAM_WHITE", "TEAM_WHITE"), "Lexx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#TEAM_WHITE
    [[maybe_unused]] static void set_field_TEAM_WHITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "TEAM_WHITE", "field_45174", "TEAM_WHITE", "TEAM_WHITE"), "Lexx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "CODEC", "field_45175", "CODEC", "f_290512_"), "Lazk$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "CODEC", "field_45175", "CODEC", "f_290512_"), "Lazk$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#FROM_ID
    [[maybe_unused]] static jobject get_field_FROM_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BY_ID", "field_45176", "FROM_ID", "f_291875_"), "Ljava/util/function/IntFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardDisplaySlot#FROM_ID
    [[maybe_unused]] static void set_field_FROM_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BY_ID", "field_45176", "FROM_ID", "f_291875_"), "Ljava/util/function/IntFunction;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.ScoreboardDisplaySlot#id
    static jint get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "id", "field_45177", "id", "f_291414_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.ScoreboardDisplaySlot#id
    static void set_field_id(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "id", "field_45177", "id", "f_291414_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.ScoreboardDisplaySlot#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "name", "field_45178", "name", "f_291131_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.ScoreboardDisplaySlot#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "name", "field_45178", "name", "f_291131_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lexx;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lexx;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "id", "method_52621", "getId", "m_294413_"), "()I");
    }

    static jint getId(const jobject& obj) {
                
       const auto methodID = methodID_getId();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_asString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getSerializedName", "method_15434", "asString", "m_7912_"), "()Ljava/lang/String;");
    }

    static jobject asString(const jobject& obj) {
                
       const auto methodID = methodID_asString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_fromFormatting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "teamColorToSlot", "method_52622", "fromFormatting", "m_293761_"), "(Ln;)Lexx;");
    }

    static jobject fromFormatting(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromFormatting();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SCOREBOARD_SCOREBOARDDISPLAYSLOT_HPP