// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SCOREBOARD_SCOREBOARDCRITERION_HPP
#define NET_MINECRAFT_SCOREBOARD_SCOREBOARDCRITERION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.scoreboard.ScoreboardCriterion
 * Remapped: eyj
 */
namespace ScoreboardCriterion {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eyj", "net/minecraft/world/scores/criteria/ObjectiveCriteria", "net/minecraft/class_274", "net/minecraft/scoreboard/ScoreboardCriterion", "net/minecraft/src/C_3081_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.scoreboard.ScoreboardCriterion#SIMPLE_CRITERIA
    [[maybe_unused]] static jobject get_field_SIMPLE_CRITERIA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CUSTOM_CRITERIA", "field_33939", "SIMPLE_CRITERIA", "f_166107_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.ScoreboardCriterion#SIMPLE_CRITERIA
    [[maybe_unused]] static void set_field_SIMPLE_CRITERIA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CUSTOM_CRITERIA", "field_33939", "SIMPLE_CRITERIA", "f_166107_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.scoreboard.ScoreboardCriterion#CRITERIA
    [[maybe_unused]] static jobject get_field_CRITERIA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CRITERIA_CACHE", "field_1455", "CRITERIA", "f_166108_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.ScoreboardCriterion#CRITERIA
    [[maybe_unused]] static void set_field_CRITERIA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CRITERIA_CACHE", "field_1455", "CRITERIA", "f_166108_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#DUMMY
    [[maybe_unused]] static jobject get_field_DUMMY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DUMMY", "field_1468", "DUMMY", "f_83588_"), "Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#DUMMY
    [[maybe_unused]] static void set_field_DUMMY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DUMMY", "field_1468", "DUMMY", "f_83588_"), "Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#TRIGGER
    [[maybe_unused]] static jobject get_field_TRIGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TRIGGER", "field_1462", "TRIGGER", "f_83589_"), "Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#TRIGGER
    [[maybe_unused]] static void set_field_TRIGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TRIGGER", "field_1462", "TRIGGER", "f_83589_"), "Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#DEATH_COUNT
    [[maybe_unused]] static jobject get_field_DEATH_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEATH_COUNT", "field_1456", "DEATH_COUNT", "f_83590_"), "Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#DEATH_COUNT
    [[maybe_unused]] static void set_field_DEATH_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEATH_COUNT", "field_1456", "DEATH_COUNT", "f_83590_"), "Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#PLAYER_KILL_COUNT
    [[maybe_unused]] static jobject get_field_PLAYER_KILL_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "KILL_COUNT_PLAYERS", "field_1463", "PLAYER_KILL_COUNT", "f_83591_"), "Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#PLAYER_KILL_COUNT
    [[maybe_unused]] static void set_field_PLAYER_KILL_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "KILL_COUNT_PLAYERS", "field_1463", "PLAYER_KILL_COUNT", "f_83591_"), "Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#TOTAL_KILL_COUNT
    [[maybe_unused]] static jobject get_field_TOTAL_KILL_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "KILL_COUNT_ALL", "field_1457", "TOTAL_KILL_COUNT", "f_83592_"), "Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#TOTAL_KILL_COUNT
    [[maybe_unused]] static void set_field_TOTAL_KILL_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "KILL_COUNT_ALL", "field_1457", "TOTAL_KILL_COUNT", "f_83592_"), "Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#HEALTH
    [[maybe_unused]] static jobject get_field_HEALTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "HEALTH", "field_1453", "HEALTH", "f_83593_"), "Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#HEALTH
    [[maybe_unused]] static void set_field_HEALTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "HEALTH", "field_1453", "HEALTH", "f_83593_"), "Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#FOOD
    [[maybe_unused]] static jobject get_field_FOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "FOOD", "field_1464", "FOOD", "f_83594_"), "Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#FOOD
    [[maybe_unused]] static void set_field_FOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "FOOD", "field_1464", "FOOD", "f_83594_"), "Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#AIR
    [[maybe_unused]] static jobject get_field_AIR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "AIR", "field_1459", "AIR", "f_83595_"), "Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#AIR
    [[maybe_unused]] static void set_field_AIR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "AIR", "field_1459", "AIR", "f_83595_"), "Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#ARMOR
    [[maybe_unused]] static jobject get_field_ARMOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ARMOR", "field_1452", "ARMOR", "f_83596_"), "Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#ARMOR
    [[maybe_unused]] static void set_field_ARMOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ARMOR", "field_1452", "ARMOR", "f_83596_"), "Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#XP
    [[maybe_unused]] static jobject get_field_XP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "EXPERIENCE", "field_1460", "XP", "f_83597_"), "Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#XP
    [[maybe_unused]] static void set_field_XP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "EXPERIENCE", "field_1460", "XP", "f_83597_"), "Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#LEVEL
    [[maybe_unused]] static jobject get_field_LEVEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "LEVEL", "field_1465", "LEVEL", "f_83598_"), "Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#LEVEL
    [[maybe_unused]] static void set_field_LEVEL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "LEVEL", "field_1465", "LEVEL", "f_83598_"), "Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#TEAM_KILLS
    [[maybe_unused]] static jobject get_field_TEAM_KILLS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "TEAM_KILL", "field_1466", "TEAM_KILLS", "f_83599_"), "[Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#TEAM_KILLS
    [[maybe_unused]] static void set_field_TEAM_KILLS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "TEAM_KILL", "field_1466", "TEAM_KILLS", "f_83599_"), "[Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.scoreboard.ScoreboardCriterion#KILLED_BY_TEAMS
    [[maybe_unused]] static jobject get_field_KILLED_BY_TEAMS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "KILLED_BY_TEAM", "field_1458", "KILLED_BY_TEAMS", "f_83600_"), "[Leyj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.ScoreboardCriterion#KILLED_BY_TEAMS
    [[maybe_unused]] static void set_field_KILLED_BY_TEAMS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "KILLED_BY_TEAM", "field_1458", "KILLED_BY_TEAMS", "f_83600_"), "[Leyj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.ScoreboardCriterion#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "name", "field_1454", "name", "f_83601_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.ScoreboardCriterion#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "name", "field_1454", "name", "f_83601_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.ScoreboardCriterion#readOnly
    static jboolean get_field_readOnly(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "readOnly", "field_1461", "readOnly", "f_83602_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.ScoreboardCriterion#readOnly
    static void set_field_readOnly(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "readOnly", "field_1461", "readOnly", "f_83602_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.ScoreboardCriterion#defaultRenderType
    static jobject get_field_defaultRenderType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "renderType", "field_1467", "defaultRenderType", "f_83603_"), "Leyj$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.ScoreboardCriterion#defaultRenderType
    static void set_field_defaultRenderType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "renderType", "field_1467", "defaultRenderType", "f_83603_"), "Leyj$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "registerCustom", "method_37269", "create", "m_166109_"), "(Ljava/lang/String;ZLeyj$a;)Leyj;");
    }

    static jobject create(const jobject& arg0, const jboolean& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "registerCustom", "method_37270", "create", "m_166113_"), "(Ljava/lang/String;)Leyj;");
    }

    static jobject _create(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getAllSimpleCriteria() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getCustomCriteriaNames", "method_37271", "getAllSimpleCriteria", "m_166115_"), "()Ljava/util/Set;");
    }

    static jobject getAllSimpleCriteria() {
       const auto clazz = self();
       const auto methodID = methodID_getAllSimpleCriteria();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getOrCreateStatCriterion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "byName", "method_1224", "getOrCreateStatCriterion", "m_83614_"), "(Ljava/lang/String;)Ljava/util/Optional;");
    }

    static jobject getOrCreateStatCriterion(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getOrCreateStatCriterion();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__getOrCreateStatCriterion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getStat", "method_1223", "getOrCreateStatCriterion", "m_83611_"), "(Lavy;Lakr;)Ljava/util/Optional;");
    }

    static jobject _getOrCreateStatCriterion(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__getOrCreateStatCriterion();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getName", "method_1225", "getName", "m_83620_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isReadOnly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isReadOnly", "method_1226", "isReadOnly", "m_83621_"), "()Z");
    }

    static jboolean isReadOnly(const jobject& obj) {
                
       const auto methodID = methodID_isReadOnly();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultRenderType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getDefaultRenderType", "method_1227", "getDefaultRenderType", "m_83622_"), "()Leyj$a;");
    }

    static jobject getDefaultRenderType(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultRenderType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SCOREBOARD_SCOREBOARDCRITERION_HPP