// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SCOREBOARD_TEAM_HPP
#define NET_MINECRAFT_SCOREBOARD_TEAM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.scoreboard.Team
 * Remapped: eyb
 */
namespace Team {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eyb", "net/minecraft/world/scores/PlayerTeam", "net/minecraft/class_268", "net/minecraft/scoreboard/Team", "net/minecraft/src/C_3074_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.scoreboard.Team#field_31884
    [[maybe_unused]] static jint get_field_field_31884() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BIT_FRIENDLY_FIRE", "field_31884", "field_31884", "f_166084_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#field_31884
    [[maybe_unused]] static void set_field_field_31884(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BIT_FRIENDLY_FIRE", "field_31884", "field_31884", "f_166084_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.scoreboard.Team#field_31885
    [[maybe_unused]] static jint get_field_field_31885() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BIT_SEE_INVISIBLES", "field_31885", "field_31885", "f_166085_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#field_31885
    [[maybe_unused]] static void set_field_field_31885(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BIT_SEE_INVISIBLES", "field_31885", "field_31885", "f_166085_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#scoreboard
    static jobject get_field_scoreboard(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "scoreboard", "field_1420", "scoreboard", "f_83326_"), "Leyg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#scoreboard
    static void set_field_scoreboard(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "scoreboard", "field_1420", "scoreboard", "f_83326_"), "Leyg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "name", "field_1421", "name", "f_83327_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "name", "field_1421", "name", "f_83327_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#playerList
    static jobject get_field_playerList(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "players", "field_1415", "playerList", "f_83328_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#playerList
    static void set_field_playerList(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "players", "field_1415", "playerList", "f_83328_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#displayName
    static jobject get_field_displayName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "displayName", "field_1414", "displayName", "f_83329_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#displayName
    static void set_field_displayName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "displayName", "field_1414", "displayName", "f_83329_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#prefix
    static jobject get_field_prefix(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "playerPrefix", "field_1418", "prefix", "f_83330_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#prefix
    static void set_field_prefix(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "playerPrefix", "field_1418", "prefix", "f_83330_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#suffix
    static jobject get_field_suffix(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "playerSuffix", "field_1419", "suffix", "f_83331_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#suffix
    static void set_field_suffix(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "playerSuffix", "field_1419", "suffix", "f_83331_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#friendlyFire
    static jboolean get_field_friendlyFire(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "allowFriendlyFire", "field_1417", "friendlyFire", "f_83332_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#friendlyFire
    static void set_field_friendlyFire(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "allowFriendlyFire", "field_1417", "friendlyFire", "f_83332_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#showFriendlyInvisibles
    static jboolean get_field_showFriendlyInvisibles(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "seeFriendlyInvisibles", "field_1416", "showFriendlyInvisibles", "f_83333_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#showFriendlyInvisibles
    static void set_field_showFriendlyInvisibles(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "seeFriendlyInvisibles", "field_1416", "showFriendlyInvisibles", "f_83333_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#nameTagVisibilityRule
    static jobject get_field_nameTagVisibilityRule(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "nameTagVisibility", "field_1423", "nameTagVisibilityRule", "f_83334_"), "Leyi$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#nameTagVisibilityRule
    static void set_field_nameTagVisibilityRule(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "nameTagVisibility", "field_1423", "nameTagVisibilityRule", "f_83334_"), "Leyi$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#deathMessageVisibilityRule
    static jobject get_field_deathMessageVisibilityRule(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "deathMessageVisibility", "field_1422", "deathMessageVisibilityRule", "f_83335_"), "Leyi$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#deathMessageVisibilityRule
    static void set_field_deathMessageVisibilityRule(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "deathMessageVisibility", "field_1422", "deathMessageVisibilityRule", "f_83335_"), "Leyi$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#color
    static jobject get_field_color(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "color", "field_1424", "color", "f_83336_"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#color
    static void set_field_color(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "color", "field_1424", "color", "f_83336_"), "Ln;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#collisionRule
    static jobject get_field_collisionRule(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "collisionRule", "field_1425", "collisionRule", "f_83337_"), "Leyi$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#collisionRule
    static void set_field_collisionRule(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "collisionRule", "field_1425", "collisionRule", "f_83337_"), "Leyi$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Team#nameStyle
    static jobject get_field_nameStyle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "displayNameStyle", "field_24195", "nameStyle", "f_83338_"), "Lxw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Team#nameStyle
    static void set_field_nameStyle(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "displayNameStyle", "field_24195", "nameStyle", "f_83338_"), "Lxw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getScoreboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getScoreboard", "method_35594", "getScoreboard", "m_166086_"), "()Leyg;");
    }

    static jobject getScoreboard(const jobject& obj) {
                
       const auto methodID = methodID_getScoreboard();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getName", "method_1197", "getName", "m_5758_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDisplayName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getDisplayName", "method_1140", "getDisplayName", "m_83364_"), "()Lwz;");
    }

    static jobject getDisplayName(const jobject& obj) {
                
       const auto methodID = methodID_getDisplayName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFormattedName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getFormattedDisplayName", "method_1148", "getFormattedName", "m_83367_"), "()Lxn;");
    }

    static jobject getFormattedName(const jobject& obj) {
                
       const auto methodID = methodID_getFormattedName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDisplayName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDisplayName", "method_1137", "setDisplayName", "m_83353_"), "(Lwz;)V");
    }

    static void setDisplayName(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDisplayName();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setPrefix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setPlayerPrefix", "method_1138", "setPrefix", "m_83360_"), "(Lwz;)V");
    }

    static void setPrefix(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPrefix();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPrefix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getPlayerPrefix", "method_1144", "getPrefix", "m_83370_"), "()Lwz;");
    }

    static jobject getPrefix(const jobject& obj) {
                
       const auto methodID = methodID_getPrefix();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSuffix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setPlayerSuffix", "method_1139", "setSuffix", "m_83365_"), "(Lwz;)V");
    }

    static void setSuffix(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setSuffix();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSuffix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getPlayerSuffix", "method_1136", "getSuffix", "m_83371_"), "()Lwz;");
    }

    static jobject getSuffix(const jobject& obj) {
                
       const auto methodID = methodID_getSuffix();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayerList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getPlayers", "method_1204", "getPlayerList", "m_6809_"), "()Ljava/util/Collection;");
    }

    static jobject getPlayerList(const jobject& obj) {
                
       const auto methodID = methodID_getPlayerList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_decorateName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getFormattedName", "method_1198", "decorateName", "m_6870_"), "(Lwz;)Lxn;");
    }

    static jobject decorateName(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_decorateName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__decorateName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "formatNameForTeam", "method_1142", "decorateName", "m_83348_"), "(Leyi;Lwz;)Lxn;");
    }

    static jobject _decorateName(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__decorateName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isFriendlyFireAllowed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "isAllowFriendlyFire", "method_1205", "isFriendlyFireAllowed", "m_6260_"), "()Z");
    }

    static jboolean isFriendlyFireAllowed(const jobject& obj) {
                
       const auto methodID = methodID_isFriendlyFireAllowed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setFriendlyFireAllowed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setAllowFriendlyFire", "method_1135", "setFriendlyFireAllowed", "m_83355_"), "(Z)V");
    }

    static void setFriendlyFireAllowed(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setFriendlyFireAllowed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldShowFriendlyInvisibles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "canSeeFriendlyInvisibles", "method_1199", "shouldShowFriendlyInvisibles", "m_6259_"), "()Z");
    }

    static jboolean shouldShowFriendlyInvisibles(const jobject& obj) {
                
       const auto methodID = methodID_shouldShowFriendlyInvisibles();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setShowFriendlyInvisibles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setSeeFriendlyInvisibles", "method_1143", "setShowFriendlyInvisibles", "m_83362_"), "(Z)V");
    }

    static void setShowFriendlyInvisibles(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setShowFriendlyInvisibles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNameTagVisibilityRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getNameTagVisibility", "method_1201", "getNameTagVisibilityRule", "m_7470_"), "()Leyi$b;");
    }

    static jobject getNameTagVisibilityRule(const jobject& obj) {
                
       const auto methodID = methodID_getNameTagVisibilityRule();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDeathMessageVisibilityRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getDeathMessageVisibility", "method_1200", "getDeathMessageVisibilityRule", "m_7468_"), "()Leyi$b;");
    }

    static jobject getDeathMessageVisibilityRule(const jobject& obj) {
                
       const auto methodID = methodID_getDeathMessageVisibilityRule();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setNameTagVisibilityRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setNameTagVisibility", "method_1149", "setNameTagVisibilityRule", "m_83346_"), "(Leyi$b;)V");
    }

    static void setNameTagVisibilityRule(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setNameTagVisibilityRule();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setDeathMessageVisibilityRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setDeathMessageVisibility", "method_1133", "setDeathMessageVisibilityRule", "m_83358_"), "(Leyi$b;)V");
    }

    static void setDeathMessageVisibilityRule(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDeathMessageVisibilityRule();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCollisionRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getCollisionRule", "method_1203", "getCollisionRule", "m_7156_"), "()Leyi$a;");
    }

    static jobject getCollisionRule(const jobject& obj) {
                
       const auto methodID = methodID_getCollisionRule();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCollisionRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCollisionRule", "method_1145", "setCollisionRule", "m_83344_"), "(Leyi$a;)V");
    }

    static void setCollisionRule(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCollisionRule();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFriendlyFlagsBitwise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "packOptions", "method_1147", "getFriendlyFlagsBitwise", "m_83378_"), "()I");
    }

    static jint getFriendlyFlagsBitwise(const jobject& obj) {
                
       const auto methodID = methodID_getFriendlyFlagsBitwise();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setFriendlyFlagsBitwise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "unpackOptions", "method_1146", "setFriendlyFlagsBitwise", "m_83342_"), "(I)V");
    }

    static void setFriendlyFlagsBitwise(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setFriendlyFlagsBitwise();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setColor", "method_1141", "setColor", "m_83351_"), "(Ln;)V");
    }

    static void setColor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setColor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getColor", "method_1202", "getColor", "m_7414_"), "()Ln;");
    }

    static jobject getColor(const jobject& obj) {
                
       const auto methodID = methodID_getColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SCOREBOARD_TEAM_HPP