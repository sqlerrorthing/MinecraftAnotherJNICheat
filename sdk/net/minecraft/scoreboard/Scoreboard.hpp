// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SCOREBOARD_SCOREBOARD_HPP
#define NET_MINECRAFT_SCOREBOARD_SCOREBOARD_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.scoreboard.Scoreboard
 * Remapped: eyg
 */
namespace Scoreboard {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eyg", "net/minecraft/world/scores/Scoreboard", "net/minecraft/class_269", "net/minecraft/scoreboard/Scoreboard", "net/minecraft/src/C_3076_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.scoreboard.Scoreboard#field_47542
    [[maybe_unused]] static jobject get_field_field_47542() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "HIDDEN_SCORE_PREFIX", "field_47542", "field_47542", "f_303532_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.scoreboard.Scoreboard#field_47542
    [[maybe_unused]] static void set_field_field_47542(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "HIDDEN_SCORE_PREFIX", "field_47542", "field_47542", "f_303532_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.scoreboard.Scoreboard#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_36309", "LOGGER", "f_199933_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Scoreboard#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_36309", "LOGGER", "f_199933_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Scoreboard#objectives
    static jobject get_field_objectives(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "objectivesByName", "field_1428", "objectives", "f_83408_"), "Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Scoreboard#objectives
    static void set_field_objectives(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "objectivesByName", "field_1428", "objectives", "f_83408_"), "Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Scoreboard#objectivesByCriterion
    static jobject get_field_objectivesByCriterion(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "objectivesByCriteria", "field_1429", "objectivesByCriterion", "f_83409_"), "Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Scoreboard#objectivesByCriterion
    static void set_field_objectivesByCriterion(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "objectivesByCriteria", "field_1429", "objectivesByCriterion", "f_83409_"), "Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Scoreboard#scores
    static jobject get_field_scores(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "playerScores", "field_1431", "scores", "f_83410_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Scoreboard#scores
    static void set_field_scores(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "playerScores", "field_1431", "scores", "f_83410_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Scoreboard#objectiveSlots
    static jobject get_field_objectiveSlots(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "displayObjectives", "field_1432", "objectiveSlots", "f_83411_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Scoreboard#objectiveSlots
    static void set_field_objectiveSlots(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "displayObjectives", "field_1432", "objectiveSlots", "f_83411_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Scoreboard#teams
    static jobject get_field_teams(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "teamsByName", "field_1426", "teams", "f_83412_"), "Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Scoreboard#teams
    static void set_field_teams(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "teamsByName", "field_1426", "teams", "f_83412_"), "Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.Scoreboard#teamsByScoreHolder
    static jobject get_field_teamsByScoreHolder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "teamsByPlayer", "field_1427", "teamsByScoreHolder", "f_83413_"), "Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.Scoreboard#teamsByScoreHolder
    static void set_field_teamsByScoreHolder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "teamsByPlayer", "field_1427", "teamsByScoreHolder", "f_83413_"), "Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getNullableObjective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getObjective", "method_1170", "getNullableObjective", "m_83477_"), "(Ljava/lang/String;)Lexy;");
    }

    static jobject getNullableObjective(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getNullableObjective();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addObjective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addObjective", "method_1168", "addObjective", "m_83436_"), "(Ljava/lang/String;Leyj;Lwz;Leyj$a;ZLyp;)Lexy;");
    }

    static jobject addObjective(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jboolean& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_addObjective();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_forEachScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forAllObjectives", "method_1162", "forEachScore", "m_83427_"), "(Leyj;Leyf;Ljava/util/function/Consumer;)V");
    }

    static void forEachScore(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_forEachScore();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getScores() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getOrCreatePlayerInfo", "method_55431", "getScores", "m_307682_"), "(Ljava/lang/String;)Leya;");
    }

    static jobject getScores(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getScores();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOrCreateScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getOrCreatePlayerScore", "method_1180", "getOrCreateScore", "m_83471_"), "(Leyf;Lexy;)Leye;");
    }

    static jobject getOrCreateScore(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getOrCreateScore();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getOrCreateScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOrCreatePlayerScore", "method_55425", "getOrCreateScore", "m_307672_"), "(Leyf;Lexy;Z)Leye;");
    }

    static jobject _getOrCreateScore(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID__getOrCreateScore();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getPlayerScoreInfo", "method_55430", "getScore", "m_305759_"), "(Leyf;Lexy;)Leyc;");
    }

    static jobject getScore(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getScore();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getScoreboardEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "listPlayerScores", "method_1184", "getScoreboardEntries", "m_306706_"), "(Lexy;)Ljava/util/Collection;");
    }

    static jobject getScoreboardEntries(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getScoreboardEntries();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getObjectives() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getObjectives", "method_1151", "getObjectives", "m_83466_"), "()Ljava/util/Collection;");
    }

    static jobject getObjectives(const jobject& obj) {
                
       const auto methodID = methodID_getObjectives();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getObjectiveNames() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getObjectiveNames", "method_1163", "getObjectiveNames", "m_83474_"), "()Ljava/util/Collection;");
    }

    static jobject getObjectiveNames(const jobject& obj) {
                
       const auto methodID = methodID_getObjectiveNames();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getKnownScoreHolders() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getTrackedPlayers", "method_1178", "getKnownScoreHolders", "m_83482_"), "()Ljava/util/Collection;");
    }

    static jobject getKnownScoreHolders(const jobject& obj) {
                
       const auto methodID = methodID_getKnownScoreHolders();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeScores() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "resetAllPlayerScores", "method_55429", "removeScores", "m_307153_"), "(Leyf;)V");
    }

    static void removeScores(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeScores();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "resetSinglePlayerScore", "method_1155", "removeScore", "m_305788_"), "(Leyf;Lexy;)V");
    }

    static void removeScore(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_removeScore();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getScoreHolderObjectives() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "listPlayerScores", "method_1166", "getScoreHolderObjectives", "m_307827_"), "(Leyf;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;");
    }

    static jobject getScoreHolderObjectives(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getScoreHolderObjectives();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeObjective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "removeObjective", "method_1194", "removeObjective", "m_83502_"), "(Lexy;)V");
    }

    static void removeObjective(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeObjective();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setObjectiveSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDisplayObjective", "method_1158", "setObjectiveSlot", "m_7136_"), "(Lexx;Lexy;)V");
    }

    static void setObjectiveSlot(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setObjectiveSlot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getObjectiveForSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDisplayObjective", "method_1189", "getObjectiveForSlot", "m_83416_"), "(Lexx;)Lexy;");
    }

    static jobject getObjectiveForSlot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getObjectiveForSlot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getPlayerTeam", "method_1153", "getTeam", "m_83489_"), "(Ljava/lang/String;)Leyb;");
    }

    static jobject getTeam(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTeam();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "addPlayerTeam", "method_1171", "addTeam", "m_83492_"), "(Ljava/lang/String;)Leyb;");
    }

    static jobject addTeam(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addTeam();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "removePlayerTeam", "method_1191", "removeTeam", "m_83475_"), "(Leyb;)V");
    }

    static void removeTeam(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeTeam();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addScoreHolderToTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPlayerToTeam", "method_1172", "addScoreHolderToTeam", "m_6546_"), "(Ljava/lang/String;Leyb;)Z");
    }

    static jboolean addScoreHolderToTeam(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addScoreHolderToTeam();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_clearTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "removePlayerFromTeam", "method_1195", "clearTeam", "m_83495_"), "(Ljava/lang/String;)Z");
    }

    static jboolean clearTeam(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_clearTeam();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeScoreHolderFromTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "removePlayerFromTeam", "method_1157", "removeScoreHolderFromTeam", "m_6519_"), "(Ljava/lang/String;Leyb;)V");
    }

    static void removeScoreHolderFromTeam(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_removeScoreHolderFromTeam();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getTeamNames() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getTeamNames", "method_1196", "getTeamNames", "m_83488_"), "()Ljava/util/Collection;");
    }

    static jobject getTeamNames(const jobject& obj) {
                
       const auto methodID = methodID_getTeamNames();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTeams() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getPlayerTeams", "method_1159", "getTeams", "m_83491_"), "()Ljava/util/Collection;");
    }

    static jobject getTeams(const jobject& obj) {
                
       const auto methodID = methodID_getTeams();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getScoreHolderTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getPlayersTeam", "method_1164", "getScoreHolderTeam", "m_83500_"), "(Ljava/lang/String;)Leyb;");
    }

    static jobject getScoreHolderTeam(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getScoreHolderTeam();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateObjective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onObjectiveAdded", "method_1185", "updateObjective", "m_7092_"), "(Lexy;)V");
    }

    static void updateObjective(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateObjective();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateExistingObjective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onObjectiveChanged", "method_1175", "updateExistingObjective", "m_7091_"), "(Lexy;)V");
    }

    static void updateExistingObjective(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateExistingObjective();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateRemovedObjective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "onObjectiveRemoved", "method_1173", "updateRemovedObjective", "m_7093_"), "(Lexy;)V");
    }

    static void updateRemovedObjective(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateRemovedObjective();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onScoreChanged", "method_1176", "updateScore", "m_5734_"), "(Leyf;Lexy;Leyd;)V");
    }

    static void updateScore(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateScore();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_resetScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onScoreLockChanged", "method_55337", "resetScore", "m_304975_"), "(Leyf;Lexy;)V");
    }

    static void resetScore(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_resetScore();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onScoreHolderRemoved() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onPlayerRemoved", "method_1152", "onScoreHolderRemoved", "m_7182_"), "(Leyf;)V");
    }

    static void onScoreHolderRemoved(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onScoreHolderRemoved();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onScoreRemoved() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onPlayerScoreRemoved", "method_1190", "onScoreRemoved", "m_5973_"), "(Leyf;Lexy;)V");
    }

    static void onScoreRemoved(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onScoreRemoved();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateScoreboardTeamAndPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onTeamAdded", "method_1160", "updateScoreboardTeamAndPlayers", "m_7650_"), "(Leyb;)V");
    }

    static void updateScoreboardTeamAndPlayers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateScoreboardTeamAndPlayers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateScoreboardTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onTeamChanged", "method_1154", "updateScoreboardTeam", "m_7645_"), "(Leyb;)V");
    }

    static void updateScoreboardTeam(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateScoreboardTeam();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateRemovedTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "onTeamRemoved", "method_1193", "updateRemovedTeam", "m_7644_"), "(Leyb;)V");
    }

    static void updateRemovedTeam(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateRemovedTeam();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clearDeadEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "entityRemoved", "method_1150", "clearDeadEntity", "m_83420_"), "(Lbsr;)V");
    }

    static void clearDeadEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_clearDeadEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "savePlayerScores", "method_1169", "toNbt", "m_83497_"), "(Ljo$a;)Luh;");
    }

    static jobject toNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadPlayerScores", "method_1188", "readNbt", "m_83445_"), "(Luh;Ljo$a;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_SCOREBOARD_SCOREBOARD_HPP