// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SCOREBOARD_SERVERSCOREBOARD_HPP
#define NET_MINECRAFT_SCOREBOARD_SERVERSCOREBOARD_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.scoreboard.ServerScoreboard
 * Remapped: alk
 */
namespace ServerScoreboard {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("alk", "net/minecraft/server/ServerScoreboard", "net/minecraft/class_2995", "net/minecraft/scoreboard/ServerScoreboard", "net/minecraft/src/C_5286_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.scoreboard.ServerScoreboard#server
    static jobject get_field_server(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "server", "field_13428", "server", "f_136193_"), "Lnet/minecraft/server/MinecraftServer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.ServerScoreboard#server
    static void set_field_server(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "server", "field_13428", "server", "f_136193_"), "Lnet/minecraft/server/MinecraftServer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.ServerScoreboard#objectives
    static jobject get_field_objectives(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "trackedObjectives", "field_13427", "objectives", "f_136194_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.ServerScoreboard#objectives
    static void set_field_objectives(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "trackedObjectives", "field_13427", "objectives", "f_136194_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.scoreboard.ServerScoreboard#updateListeners
    static jobject get_field_updateListeners(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "dirtyListeners", "field_13426", "updateListeners", "f_136195_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.scoreboard.ServerScoreboard#updateListeners
    static void set_field_updateListeners(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "dirtyListeners", "field_13426", "updateListeners", "f_136195_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_updateScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onScoreChanged", "method_1176", "updateScore", "m_5734_"), "(Leyf;Lexy;Leyd;)V");
    }

    static void updateScore(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateScore();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_resetScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onScoreLockChanged", "method_55337", "resetScore", "m_304975_"), "(Leyf;Lexy;)V");
    }

    static void resetScore(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_resetScore();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onScoreHolderRemoved() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onPlayerRemoved", "method_1152", "onScoreHolderRemoved", "m_7182_"), "(Leyf;)V");
    }

    static void onScoreHolderRemoved(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onScoreHolderRemoved();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onScoreRemoved() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onPlayerScoreRemoved", "method_1190", "onScoreRemoved", "m_5973_"), "(Leyf;Lexy;)V");
    }

    static void onScoreRemoved(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onScoreRemoved();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setObjectiveSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDisplayObjective", "method_1158", "setObjectiveSlot", "m_7136_"), "(Lexx;Lexy;)V");
    }

    static void setObjectiveSlot(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setObjectiveSlot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addScoreHolderToTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPlayerToTeam", "method_1172", "addScoreHolderToTeam", "m_6546_"), "(Ljava/lang/String;Leyb;)Z");
    }

    static jboolean addScoreHolderToTeam(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addScoreHolderToTeam();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_removeScoreHolderFromTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "removePlayerFromTeam", "method_1157", "removeScoreHolderFromTeam", "m_6519_"), "(Ljava/lang/String;Leyb;)V");
    }

    static void removeScoreHolderFromTeam(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_removeScoreHolderFromTeam();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateObjective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onObjectiveAdded", "method_1185", "updateObjective", "m_7092_"), "(Lexy;)V");
    }

    static void updateObjective(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateObjective();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateExistingObjective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onObjectiveChanged", "method_1175", "updateExistingObjective", "m_7091_"), "(Lexy;)V");
    }

    static void updateExistingObjective(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateExistingObjective();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateRemovedObjective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "onObjectiveRemoved", "method_1173", "updateRemovedObjective", "m_7093_"), "(Lexy;)V");
    }

    static void updateRemovedObjective(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateRemovedObjective();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateScoreboardTeamAndPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onTeamAdded", "method_1160", "updateScoreboardTeamAndPlayers", "m_7650_"), "(Leyb;)V");
    }

    static void updateScoreboardTeamAndPlayers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateScoreboardTeamAndPlayers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateScoreboardTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onTeamChanged", "method_1154", "updateScoreboardTeam", "m_7645_"), "(Leyb;)V");
    }

    static void updateScoreboardTeam(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateScoreboardTeam();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateRemovedTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "onTeamRemoved", "method_1193", "updateRemovedTeam", "m_7644_"), "(Leyb;)V");
    }

    static void updateRemovedTeam(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateRemovedTeam();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addUpdateListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addDirtyListener", "method_12935", "addUpdateListener", "m_136207_"), "(Ljava/lang/Runnable;)V");
    }

    static void addUpdateListener(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addUpdateListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_runUpdateListeners() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDirty", "method_12941", "runUpdateListeners", "m_136217_"), "()V");
    }

    static void runUpdateListeners(const jobject& obj) {
                
       const auto methodID = methodID_runUpdateListeners();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createChangePackets() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getStartTrackingPackets", "method_12937", "createChangePackets", "m_136229_"), "(Lexy;)Ljava/util/List;");
    }

    static jobject createChangePackets(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createChangePackets();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addScoreboardObjective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "startTrackingObjective", "method_12939", "addScoreboardObjective", "m_136231_"), "(Lexy;)V");
    }

    static void addScoreboardObjective(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addScoreboardObjective();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createRemovePackets() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getStopTrackingPackets", "method_12940", "createRemovePackets", "m_136233_"), "(Lexy;)Ljava/util/List;");
    }

    static jobject createRemovePackets(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createRemovePackets();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeScoreboardObjective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "stopTrackingObjective", "method_12938", "removeScoreboardObjective", "m_136235_"), "(Lexy;)V");
    }

    static void removeScoreboardObjective(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeScoreboardObjective();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getObjectiveDisplaySlotCount", "method_12936", "getSlot", "m_136237_"), "(Lexy;)I");
    }

    static jint getSlot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSlot();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPersistentStateType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "dataFactory", "method_52297", "getPersistentStateType", "m_294331_"), "()Leql$a;");
    }

    static jobject getPersistentStateType(const jobject& obj) {
                
       const auto methodID = methodID_getPersistentStateType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "createData", "method_32705", "createState", "m_180015_"), "()Leyh;");
    }

    static jobject createState(const jobject& obj) {
                
       const auto methodID = methodID_createState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_stateFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createData", "method_32704", "stateFromNbt", "m_180013_"), "(Lub;Ljo$a;)Leyh;");
    }

    static jobject stateFromNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_stateFromNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_SCOREBOARD_SERVERSCOREBOARD_HPP