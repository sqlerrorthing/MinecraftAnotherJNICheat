// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ADVANCEMENT_ADVANCEMENTREQUIREMENTS_HPP
#define NET_MINECRAFT_ADVANCEMENT_ADVANCEMENTREQUIREMENTS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.advancement.AdvancementRequirements
 * Remapped: aj
 */
namespace AdvancementRequirements {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aj", "net/minecraft/advancements/AdvancementRequirements", "net/minecraft/class_8782", "net/minecraft/advancement/AdvancementRequirements", "net/minecraft/src/C_290174_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.advancement.AdvancementRequirements#requirements
    static jobject get_field_requirements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "requirements", "comp_1922", "requirements", "f_291804_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementRequirements#requirements
    static void set_field_requirements(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "requirements", "comp_1922", "requirements", "f_291804_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.AdvancementRequirements#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_47184", "CODEC", "f_302300_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.AdvancementRequirements#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_47184", "CODEC", "f_302300_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.AdvancementRequirements#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EMPTY", "field_46084", "EMPTY", "f_291378_"), "Laj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.AdvancementRequirements#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EMPTY", "field_46084", "EMPTY", "f_291378_"), "Laj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_writeRequirements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_53670", "writeRequirements", "m_292869_"), "(Lvw;)V");
    }

    static void writeRequirements(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeRequirements();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_allOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "allOf", "method_53668", "allOf", "m_295902_"), "(Ljava/util/Collection;)Laj;");
    }

    static jobject allOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_allOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_anyOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "anyOf", "method_53674", "anyOf", "m_292608_"), "(Ljava/util/Collection;)Laj;");
    }

    static jobject anyOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_anyOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "size", "method_53664", "getLength", "m_294969_"), "()I");
    }

    static jint getLength(const jobject& obj) {
                
       const auto methodID = methodID_getLength();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_matches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "test", "method_53669", "matches", "m_295452_"), "(Ljava/util/function/Predicate;)Z");
    }

    static jboolean matches(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_matches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_countMatches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "count", "method_53675", "countMatches", "m_292826_"), "(Ljava/util/function/Predicate;)I");
    }

    static jint countMatches(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_countMatches();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_anyMatch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "anyMatch", "method_53671", "anyMatch", "m_292769_"), "(Ljava/util/List;Ljava/util/function/Predicate;)Z");
    }

    static jboolean anyMatch(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_anyMatch();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "validate", "method_54925", "validate", "m_305436_"), "(Ljava/util/Set;)Lcom/mojang/serialization/DataResult;");
    }

    static jobject validate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_validate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isEmpty", "method_53677", "isEmpty", "m_293044_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNames() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "names", "method_53678", "getNames", "m_294727_"), "()Ljava/util/Set;");
    }

    static jobject getNames(const jobject& obj) {
                
       const auto methodID = methodID_getNames();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__requirements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "requirements", "comp_1922", "requirements", "f_291804_"), "()Ljava/util/List;");
    }

    static jobject _requirements(const jobject& obj) {
                
       const auto methodID = methodID__requirements();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ADVANCEMENT_ADVANCEMENTREQUIREMENTS_HPP