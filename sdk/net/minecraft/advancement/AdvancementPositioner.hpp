// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ADVANCEMENT_ADVANCEMENTPOSITIONER_HPP
#define NET_MINECRAFT_ADVANCEMENT_ADVANCEMENTPOSITIONER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.advancement.AdvancementPositioner
 * Remapped: at
 */
namespace AdvancementPositioner {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("at", "net/minecraft/advancements/TreeNodePosition", "net/minecraft/class_194", "net/minecraft/advancement/AdvancementPositioner", "net/minecraft/src/C_328_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.advancement.AdvancementPositioner#advancement
    static jobject get_field_advancement(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "node", "field_46086", "advancement", "f_291776_"), "Lah;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementPositioner#advancement
    static void set_field_advancement(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "node", "field_46086", "advancement", "f_291776_"), "Lah;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementPositioner#parent
    static jobject get_field_parent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "parent", "field_1258", "parent", "f_16555_"), "Lat;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementPositioner#parent
    static void set_field_parent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "parent", "field_1258", "parent", "f_16555_"), "Lat;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementPositioner#previousSibling
    static jobject get_field_previousSibling(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "previousSibling", "field_1260", "previousSibling", "f_16556_"), "Lat;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementPositioner#previousSibling
    static void set_field_previousSibling(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "previousSibling", "field_1260", "previousSibling", "f_16556_"), "Lat;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementPositioner#childrenSize
    static jint get_field_childrenSize(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "childIndex", "field_1261", "childrenSize", "f_16557_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementPositioner#childrenSize
    static void set_field_childrenSize(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "childIndex", "field_1261", "childrenSize", "f_16557_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementPositioner#children
    static jobject get_field_children(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "children", "field_1267", "children", "f_16558_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementPositioner#children
    static void set_field_children(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "children", "field_1267", "children", "f_16558_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementPositioner#optionalLast
    static jobject get_field_optionalLast(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "ancestor", "field_1262", "optionalLast", "f_16559_"), "Lat;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementPositioner#optionalLast
    static void set_field_optionalLast(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "ancestor", "field_1262", "optionalLast", "f_16559_"), "Lat;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementPositioner#substituteChild
    static jobject get_field_substituteChild(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "thread", "field_1264", "substituteChild", "f_16560_"), "Lat;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementPositioner#substituteChild
    static void set_field_substituteChild(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "thread", "field_1264", "substituteChild", "f_16560_"), "Lat;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementPositioner#depth
    static jint get_field_depth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "x", "field_1259", "depth", "f_16561_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementPositioner#depth
    static void set_field_depth(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "x", "field_1259", "depth", "f_16561_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementPositioner#row
    static jfloat get_field_row(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "y", "field_1269", "row", "f_16562_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementPositioner#row
    static void set_field_row(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "y", "field_1269", "row", "f_16562_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementPositioner#relativeRowInSiblings
    static jfloat get_field_relativeRowInSiblings(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "mod", "field_1268", "relativeRowInSiblings", "f_16563_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementPositioner#relativeRowInSiblings
    static void set_field_relativeRowInSiblings(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "mod", "field_1268", "relativeRowInSiblings", "f_16563_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementPositioner#field_1266
    static jfloat get_field_field_1266(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "change", "field_1266", "field_1266", "f_16564_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementPositioner#field_1266
    static void set_field_field_1266(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "change", "field_1266", "field_1266", "f_16564_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementPositioner#field_1265
    static jfloat get_field_field_1265(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "shift", "field_1265", "field_1265", "f_16565_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementPositioner#field_1265
    static void set_field_field_1265(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "shift", "field_1265", "field_1265", "f_16565_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_findChildrenRecursively() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addChild", "method_846", "findChildrenRecursively", "m_16589_"), "(Lah;Lat;)Lat;");
    }

    static jobject findChildrenRecursively(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_findChildrenRecursively();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_calculateRecursively() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "firstWalk", "method_847", "calculateRecursively", "m_16572_"), "()V");
    }

    static void calculateRecursively(const jobject& obj) {
                
       const auto methodID = methodID_calculateRecursively();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_findMinRowRecursively() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "secondWalk", "method_842", "findMinRowRecursively", "m_16575_"), "(FIF)F");
    }

    static jfloat findMinRowRecursively(const jobject& obj, const jfloat& arg0, const jint& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_findMinRowRecursively();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_increaseRowRecursively() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "thirdWalk", "method_843", "increaseRowRecursively", "m_16573_"), "(F)V");
    }

    static void increaseRowRecursively(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_increaseRowRecursively();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onFinishChildrenCalculation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "executeShifts", "method_850", "onFinishChildrenCalculation", "m_16592_"), "()V");
    }

    static void onFinishChildrenCalculation(const jobject& obj) {
                
       const auto methodID = methodID_onFinishChildrenCalculation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFirstChild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "previousOrThread", "method_849", "getFirstChild", "m_16593_"), "()Lat;");
    }

    static jobject getFirstChild(const jobject& obj) {
                
       const auto methodID = methodID_getFirstChild();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLastChild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "nextOrThread", "method_844", "getLastChild", "m_16594_"), "()Lat;");
    }

    static jobject getLastChild(const jobject& obj) {
                
       const auto methodID = methodID_getLastChild();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onFinishCalculation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apportion", "method_841", "onFinishCalculation", "m_16579_"), "(Lat;)Lat;");
    }

    static jobject onFinishCalculation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onFinishCalculation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_pushDown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "moveSubtree", "method_848", "pushDown", "m_16581_"), "(Lat;F)V");
    }

    static void pushDown(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_pushDown();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAncestor", "method_845", "getLast", "m_16584_"), "(Lat;Lat;)Lat;");
    }

    static jobject getLast(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getLast();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "finalizePosition", "method_851", "apply", "m_16595_"), "()V");
    }

    static void apply(const jobject& obj) {
                
       const auto methodID = methodID_apply();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_arrangeForTree() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "run", "method_852", "arrangeForTree", "m_16587_"), "(Lah;)V");
    }

    static void arrangeForTree(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_arrangeForTree();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ADVANCEMENT_ADVANCEMENTPOSITIONER_HPP