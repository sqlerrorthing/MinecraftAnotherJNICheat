// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ADVANCEMENT_PLAYERADVANCEMENTTRACKER$PROGRESSMAP_HPP
#define NET_MINECRAFT_ADVANCEMENT_PLAYERADVANCEMENTTRACKER$PROGRESSMAP_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.advancement.PlayerAdvancementTracker$ProgressMap
 * Remapped: akz$a
 */
namespace PlayerAdvancementTracker$ProgressMap {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("akz$a", "net/minecraft/server/PlayerAdvancements$Data", "net/minecraft/class_2985$class_8780", "net/minecraft/advancement/PlayerAdvancementTracker$ProgressMap", "net/minecraft/src/C_5276_$C_290114_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.advancement.PlayerAdvancementTracker$ProgressMap#map
    static jobject get_field_map(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "map", "comp_1921", "map", "f_290510_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker$ProgressMap#map
    static void set_field_map(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "map", "comp_1921", "map", "f_290510_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.PlayerAdvancementTracker$ProgressMap#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_46075", "CODEC", "f_291638_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.PlayerAdvancementTracker$ProgressMap#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_46075", "CODEC", "f_291638_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_forEach() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forEach", "method_53644", "forEach", "m_293404_"), "(Ljava/util/function/BiConsumer;)V");
    }

    static void forEach(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEach();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__map() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "map", "comp_1921", "map", "f_290510_"), "()Ljava/util/Map;");
    }

    static jobject _map(const jobject& obj) {
                
       const auto methodID = methodID__map();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ADVANCEMENT_PLAYERADVANCEMENTTRACKER$PROGRESSMAP_HPP