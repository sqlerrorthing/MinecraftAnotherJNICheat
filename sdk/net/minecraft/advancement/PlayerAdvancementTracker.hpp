// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ADVANCEMENT_PLAYERADVANCEMENTTRACKER_HPP
#define NET_MINECRAFT_ADVANCEMENT_PLAYERADVANCEMENTTRACKER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.advancement.PlayerAdvancementTracker
 * Remapped: akz
 */
namespace PlayerAdvancementTracker {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("akz", "net/minecraft/server/PlayerAdvancements", "net/minecraft/class_2985", "net/minecraft/advancement/PlayerAdvancementTracker", "net/minecraft/src/C_5276_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.advancement.PlayerAdvancementTracker#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_13394", "LOGGER", "f_135958_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_13394", "LOGGER", "f_135958_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.advancement.PlayerAdvancementTracker#GSON
    [[maybe_unused]] static jobject get_field_GSON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GSON", "field_13395", "GSON", "f_135959_"), "Lcom/google/gson/Gson;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#GSON
    [[maybe_unused]] static void set_field_GSON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GSON", "field_13395", "GSON", "f_135959_"), "Lcom/google/gson/Gson;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.PlayerAdvancementTracker#playerManager
    static jobject get_field_playerManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "playerList", "field_25325", "playerManager", "f_135962_"), "Laur;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#playerManager
    static void set_field_playerManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "playerList", "field_25325", "playerManager", "f_135962_"), "Laur;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.PlayerAdvancementTracker#filePath
    static jobject get_field_filePath(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "playerSavePath", "field_41734", "filePath", "f_263766_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#filePath
    static void set_field_filePath(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "playerSavePath", "field_41734", "filePath", "f_263766_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.PlayerAdvancementTracker#advancementManager
    static jobject get_field_advancementManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "tree", "field_46073", "advancementManager", "f_291661_"), "Lal;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#advancementManager
    static void set_field_advancementManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "tree", "field_46073", "advancementManager", "f_291661_"), "Lal;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.PlayerAdvancementTracker#progress
    static jobject get_field_progress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "progress", "field_41735", "progress", "f_263740_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#progress
    static void set_field_progress(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "progress", "field_41735", "progress", "f_263740_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.PlayerAdvancementTracker#visibleAdvancements
    static jobject get_field_visibleAdvancements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "visible", "field_13390", "visibleAdvancements", "f_135965_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#visibleAdvancements
    static void set_field_visibleAdvancements(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "visible", "field_13390", "visibleAdvancements", "f_135965_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.PlayerAdvancementTracker#progressUpdates
    static jobject get_field_progressUpdates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "progressChanged", "field_13388", "progressUpdates", "f_135967_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#progressUpdates
    static void set_field_progressUpdates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "progressChanged", "field_13388", "progressUpdates", "f_135967_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.PlayerAdvancementTracker#updatedRoots
    static jobject get_field_updatedRoots(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "rootsToUpdate", "field_41736", "updatedRoots", "f_263821_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#updatedRoots
    static void set_field_updatedRoots(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "rootsToUpdate", "field_41736", "updatedRoots", "f_263821_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.PlayerAdvancementTracker#owner
    static jobject get_field_owner(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "player", "field_13391", "owner", "f_135968_"), "Laqv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#owner
    static void set_field_owner(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "player", "field_13391", "owner", "f_135968_"), "Laqv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.PlayerAdvancementTracker#currentDisplayTab
    static jobject get_field_currentDisplayTab(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "lastSelectedTab", "field_13387", "currentDisplayTab", "f_135969_"), "Lag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#currentDisplayTab
    static void set_field_currentDisplayTab(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "lastSelectedTab", "field_13387", "currentDisplayTab", "f_135969_"), "Lag;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.PlayerAdvancementTracker#dirty
    static jboolean get_field_dirty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "isFirstPacket", "field_13396", "dirty", "f_135970_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#dirty
    static void set_field_dirty(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "isFirstPacket", "field_13396", "dirty", "f_135970_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.PlayerAdvancementTracker#progressMapCodec
    static jobject get_field_progressMapCodec(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "codec", "field_46074", "progressMapCodec", "f_290992_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.PlayerAdvancementTracker#progressMapCodec
    static void set_field_progressMapCodec(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "codec", "field_46074", "progressMapCodec", "f_290992_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_setOwner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPlayer", "method_12875", "setOwner", "m_135979_"), "(Laqv;)V");
    }

    static void setOwner(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOwner();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clearCriteria() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stopListening", "method_12881", "clearCriteria", "m_135978_"), "()V");
    }

    static void clearCriteria(const jobject& obj) {
                
       const auto methodID = methodID_clearCriteria();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_reload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "reload", "method_12886", "reload", "m_135981_"), "(Lale;)V");
    }

    static void reload(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_reload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_beginTrackingAllAdvancements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "registerListeners", "method_12889", "beginTrackingAllAdvancements", "m_135994_"), "(Lale;)V");
    }

    static void beginTrackingAllAdvancements(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_beginTrackingAllAdvancements();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_rewardEmptyAdvancements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "checkForAutomaticTriggers", "method_12872", "rewardEmptyAdvancements", "m_136002_"), "(Lale;)V");
    }

    static void rewardEmptyAdvancements(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_rewardEmptyAdvancements();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "load", "method_12873", "load", "m_136006_"), "(Lale;)V");
    }

    static void load(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_load();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_save() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "save", "method_12890", "save", "m_135991_"), "()V");
    }

    static void save(const jobject& obj) {
                
       const auto methodID = methodID_save();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadProgressMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyFrom", "method_53640", "loadProgressMap", "m_294994_"), "(Lale;Lakz$a;)V");
    }

    static void loadProgressMap(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_loadProgressMap();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createProgressMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "asData", "method_53643", "createProgressMap", "m_295536_"), "()Lakz$a;");
    }

    static jobject createProgressMap(const jobject& obj) {
                
       const auto methodID = methodID_createProgressMap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_grantCriterion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "award", "method_12878", "grantCriterion", "m_135988_"), "(Lag;Ljava/lang/String;)Z");
    }

    static jboolean grantCriterion(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_grantCriterion();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_revokeCriterion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "revoke", "method_12883", "revokeCriterion", "m_135998_"), "(Lag;Ljava/lang/String;)Z");
    }

    static jboolean revokeCriterion(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_revokeCriterion();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onStatusUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "markForVisibilityUpdate", "method_48028", "onStatusUpdate", "m_264423_"), "(Lag;)V");
    }

    static void onStatusUpdate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onStatusUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_beginTracking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "registerListeners", "method_12874", "beginTracking", "m_136004_"), "(Lag;)V");
    }

    static void beginTracking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_beginTracking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__beginTracking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "registerListener", "method_53638", "beginTracking", "m_293212_"), "(Lag;Ljava/lang/String;Lao;)V");
    }

    static void _beginTracking(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__beginTracking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_endTrackingCompleted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "unregisterListeners", "method_12880", "endTrackingCompleted", "m_136008_"), "(Lag;)V");
    }

    static void endTrackingCompleted(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_endTrackingCompleted();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__endTrackingCompleted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "removeListener", "method_53642", "endTrackingCompleted", "m_292677_"), "(Lag;Ljava/lang/String;Lao;)V");
    }

    static void _endTrackingCompleted(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__endTrackingCompleted();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_sendUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "flushDirty", "method_12876", "sendUpdate", "m_135992_"), "(Laqv;)V");
    }

    static void sendUpdate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setDisplayTab() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSelectedTab", "method_12888", "setDisplayTab", "m_135983_"), "(Lag;)V");
    }

    static void setDisplayTab(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDisplayTab();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getOrStartProgress", "method_12882", "getProgress", "m_135996_"), "(Lag;)Lai;");
    }

    static jobject getProgress(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getProgress();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startProgress", "method_12884", "initProgress", "m_135985_"), "(Lag;Lai;)V");
    }

    static void initProgress(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_initProgress();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_calculateDisplay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateTreeVisibility", "method_48025", "calculateDisplay", "m_264265_"), "(Lah;Ljava/util/Set;Ljava/util/Set;)V");
    }

    static void calculateDisplay(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_calculateDisplay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_ADVANCEMENT_PLAYERADVANCEMENTTRACKER_HPP