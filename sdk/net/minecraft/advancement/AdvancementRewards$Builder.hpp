// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ADVANCEMENT_ADVANCEMENTREWARDS$BUILDER_HPP
#define NET_MINECRAFT_ADVANCEMENT_ADVANCEMENTREWARDS$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.advancement.AdvancementRewards$Builder
 * Remapped: ak$a
 */
namespace AdvancementRewards$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ak$a", "net/minecraft/advancements/AdvancementRewards$Builder", "net/minecraft/class_170$class_171", "net/minecraft/advancement/AdvancementRewards$Builder", "net/minecraft/src/C_35_$C_36_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.advancement.AdvancementRewards$Builder#experience
    static jint get_field_experience(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "experience", "field_1169", "experience", "f_9999_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementRewards$Builder#experience
    static void set_field_experience(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "experience", "field_1169", "experience", "f_9999_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementRewards$Builder#loot
    static jobject get_field_loot(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "loot", "field_1171", "loot", "f_10000_"), "Lcom/google/common/collect/ImmutableList$Builder;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementRewards$Builder#loot
    static void set_field_loot(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "loot", "field_1171", "loot", "f_10000_"), "Lcom/google/common/collect/ImmutableList$Builder;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementRewards$Builder#recipes
    static jobject get_field_recipes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "recipes", "field_1168", "recipes", "f_10001_"), "Lcom/google/common/collect/ImmutableList$Builder;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementRewards$Builder#recipes
    static void set_field_recipes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "recipes", "field_1168", "recipes", "f_10001_"), "Lcom/google/common/collect/ImmutableList$Builder;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.advancement.AdvancementRewards$Builder#function
    static jobject get_field_function(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "function", "field_1170", "function", "f_10002_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.advancement.AdvancementRewards$Builder#function
    static void set_field_function(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "function", "field_1170", "function", "f_10002_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID__experience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "experience", "method_750", "experience", "m_10005_"), "(I)Lak$a;");
    }

    static jobject _experience(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__experience();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_setExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addExperience", "method_749", "setExperience", "m_10007_"), "(I)Lak$a;");
    }

    static jobject setExperience(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setExperience();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__loot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "loot", "method_34899", "loot", "m_144822_"), "(Lakq;)Lak$a;");
    }

    static jobject _loot(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__loot();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addLootTable", "method_34900", "addLoot", "m_144824_"), "(Lakq;)Lak$a;");
    }

    static jobject addLoot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addLoot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_recipe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "recipe", "method_753", "recipe", "m_10009_"), "(Lakr;)Lak$a;");
    }

    static jobject recipe(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_recipe();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addRecipe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addRecipe", "method_752", "addRecipe", "m_10011_"), "(Lakr;)Lak$a;");
    }

    static jobject addRecipe(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addRecipe();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__function() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "function", "method_34901", "function", "m_144826_"), "(Lakr;)Lak$a;");
    }

    static jobject _function(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__function();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_setFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "runs", "method_34902", "setFunction", "m_144828_"), "(Lakr;)Lak$a;");
    }

    static jobject setFunction(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setFunction();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "build", "method_751", "build", "m_10004_"), "()Lak;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ADVANCEMENT_ADVANCEMENTREWARDS$BUILDER_HPP