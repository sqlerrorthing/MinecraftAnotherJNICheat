// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ADVANCEMENT_CRITERION_CRITERIA_HPP
#define NET_MINECRAFT_ADVANCEMENT_CRITERION_CRITERIA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.advancement.criterion.Criteria
 * Remapped: an
 */
namespace Criteria {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("an", "net/minecraft/advancements/CriteriaTriggers", "net/minecraft/class_174", "net/minecraft/advancement/criterion/Criteria", "net/minecraft/src/C_66_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_47187", "CODEC", "f_302311_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_47187", "CODEC", "f_302311_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#IMPOSSIBLE
    [[maybe_unused]] static jobject get_field_IMPOSSIBLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "IMPOSSIBLE", "field_1184", "IMPOSSIBLE", "f_10567_"), "Lcf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#IMPOSSIBLE
    [[maybe_unused]] static void set_field_IMPOSSIBLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "IMPOSSIBLE", "field_1184", "IMPOSSIBLE", "f_10567_"), "Lcf;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#PLAYER_KILLED_ENTITY
    [[maybe_unused]] static jobject get_field_PLAYER_KILLED_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PLAYER_KILLED_ENTITY", "field_1192", "PLAYER_KILLED_ENTITY", "f_10568_"), "Lda;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#PLAYER_KILLED_ENTITY
    [[maybe_unused]] static void set_field_PLAYER_KILLED_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PLAYER_KILLED_ENTITY", "field_1192", "PLAYER_KILLED_ENTITY", "f_10568_"), "Lda;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#ENTITY_KILLED_PLAYER
    [[maybe_unused]] static jobject get_field_ENTITY_KILLED_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ENTITY_KILLED_PLAYER", "field_1188", "ENTITY_KILLED_PLAYER", "f_10569_"), "Lda;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#ENTITY_KILLED_PLAYER
    [[maybe_unused]] static void set_field_ENTITY_KILLED_PLAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ENTITY_KILLED_PLAYER", "field_1188", "ENTITY_KILLED_PLAYER", "f_10569_"), "Lda;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#ENTER_BLOCK
    [[maybe_unused]] static jobject get_field_ENTER_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ENTER_BLOCK", "field_1180", "ENTER_BLOCK", "f_10570_"), "Lbr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#ENTER_BLOCK
    [[maybe_unused]] static void set_field_ENTER_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ENTER_BLOCK", "field_1180", "ENTER_BLOCK", "f_10570_"), "Lbr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#INVENTORY_CHANGED
    [[maybe_unused]] static jobject get_field_INVENTORY_CHANGED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "INVENTORY_CHANGED", "field_1195", "INVENTORY_CHANGED", "f_10571_"), "Lcg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#INVENTORY_CHANGED
    [[maybe_unused]] static void set_field_INVENTORY_CHANGED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "INVENTORY_CHANGED", "field_1195", "INVENTORY_CHANGED", "f_10571_"), "Lcg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#RECIPE_UNLOCKED
    [[maybe_unused]] static jobject get_field_RECIPE_UNLOCKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RECIPE_UNLOCKED", "field_1207", "RECIPE_UNLOCKED", "f_10572_"), "Ldt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#RECIPE_UNLOCKED
    [[maybe_unused]] static void set_field_RECIPE_UNLOCKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RECIPE_UNLOCKED", "field_1207", "RECIPE_UNLOCKED", "f_10572_"), "Ldt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#PLAYER_HURT_ENTITY
    [[maybe_unused]] static jobject get_field_PLAYER_HURT_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PLAYER_HURT_ENTITY", "field_1199", "PLAYER_HURT_ENTITY", "f_10573_"), "Ldm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#PLAYER_HURT_ENTITY
    [[maybe_unused]] static void set_field_PLAYER_HURT_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PLAYER_HURT_ENTITY", "field_1199", "PLAYER_HURT_ENTITY", "f_10573_"), "Ldm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#ENTITY_HURT_PLAYER
    [[maybe_unused]] static jobject get_field_ENTITY_HURT_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ENTITY_HURT_PLAYER", "field_1209", "ENTITY_HURT_PLAYER", "f_10574_"), "Lbu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#ENTITY_HURT_PLAYER
    [[maybe_unused]] static void set_field_ENTITY_HURT_PLAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ENTITY_HURT_PLAYER", "field_1209", "ENTITY_HURT_PLAYER", "f_10574_"), "Lbu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#ENCHANTED_ITEM
    [[maybe_unused]] static jobject get_field_ENCHANTED_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ENCHANTED_ITEM", "field_1181", "ENCHANTED_ITEM", "f_10575_"), "Lbp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#ENCHANTED_ITEM
    [[maybe_unused]] static void set_field_ENCHANTED_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ENCHANTED_ITEM", "field_1181", "ENCHANTED_ITEM", "f_10575_"), "Lbp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#FILLED_BUCKET
    [[maybe_unused]] static jobject get_field_FILLED_BUCKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "FILLED_BUCKET", "field_1208", "FILLED_BUCKET", "f_10576_"), "Lca;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#FILLED_BUCKET
    [[maybe_unused]] static void set_field_FILLED_BUCKET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "FILLED_BUCKET", "field_1208", "FILLED_BUCKET", "f_10576_"), "Lca;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#BREWED_POTION
    [[maybe_unused]] static jobject get_field_BREWED_POTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BREWED_POTION", "field_1213", "BREWED_POTION", "f_10577_"), "Lay;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#BREWED_POTION
    [[maybe_unused]] static void set_field_BREWED_POTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BREWED_POTION", "field_1213", "BREWED_POTION", "f_10577_"), "Lay;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#CONSTRUCT_BEACON
    [[maybe_unused]] static jobject get_field_CONSTRUCT_BEACON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "CONSTRUCT_BEACON", "field_1189", "CONSTRUCT_BEACON", "f_10578_"), "Lbe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#CONSTRUCT_BEACON
    [[maybe_unused]] static void set_field_CONSTRUCT_BEACON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "CONSTRUCT_BEACON", "field_1189", "CONSTRUCT_BEACON", "f_10578_"), "Lbe;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#USED_ENDER_EYE
    [[maybe_unused]] static jobject get_field_USED_ENDER_EYE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "USED_ENDER_EYE", "field_1186", "USED_ENDER_EYE", "f_10579_"), "Leh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#USED_ENDER_EYE
    [[maybe_unused]] static void set_field_USED_ENDER_EYE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "USED_ENDER_EYE", "field_1186", "USED_ENDER_EYE", "f_10579_"), "Leh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#SUMMONED_ENTITY
    [[maybe_unused]] static jobject get_field_SUMMONED_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SUMMONED_ENTITY", "field_1182", "SUMMONED_ENTITY", "f_10580_"), "Lec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#SUMMONED_ENTITY
    [[maybe_unused]] static void set_field_SUMMONED_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SUMMONED_ENTITY", "field_1182", "SUMMONED_ENTITY", "f_10580_"), "Lec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#BRED_ANIMALS
    [[maybe_unused]] static jobject get_field_BRED_ANIMALS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "BRED_ANIMALS", "field_1190", "BRED_ANIMALS", "f_10581_"), "Lax;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#BRED_ANIMALS
    [[maybe_unused]] static void set_field_BRED_ANIMALS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "BRED_ANIMALS", "field_1190", "BRED_ANIMALS", "f_10581_"), "Lax;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#LOCATION
    [[maybe_unused]] static jobject get_field_LOCATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "LOCATION", "field_1194", "LOCATION", "f_10582_"), "Ldq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#LOCATION
    [[maybe_unused]] static void set_field_LOCATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "LOCATION", "field_1194", "LOCATION", "f_10582_"), "Ldq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#SLEPT_IN_BED
    [[maybe_unused]] static jobject get_field_SLEPT_IN_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SLEPT_IN_BED", "field_1212", "SLEPT_IN_BED", "f_10583_"), "Ldq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#SLEPT_IN_BED
    [[maybe_unused]] static void set_field_SLEPT_IN_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SLEPT_IN_BED", "field_1212", "SLEPT_IN_BED", "f_10583_"), "Ldq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#CURED_ZOMBIE_VILLAGER
    [[maybe_unused]] static jobject get_field_CURED_ZOMBIE_VILLAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "CURED_ZOMBIE_VILLAGER", "field_1210", "CURED_ZOMBIE_VILLAGER", "f_10584_"), "Lbi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#CURED_ZOMBIE_VILLAGER
    [[maybe_unused]] static void set_field_CURED_ZOMBIE_VILLAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "CURED_ZOMBIE_VILLAGER", "field_1210", "CURED_ZOMBIE_VILLAGER", "f_10584_"), "Lbi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#VILLAGER_TRADE
    [[maybe_unused]] static jobject get_field_VILLAGER_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "TRADE", "field_1206", "VILLAGER_TRADE", "f_10585_"), "Leg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#VILLAGER_TRADE
    [[maybe_unused]] static void set_field_VILLAGER_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "TRADE", "field_1206", "VILLAGER_TRADE", "f_10585_"), "Leg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#ITEM_DURABILITY_CHANGED
    [[maybe_unused]] static jobject get_field_ITEM_DURABILITY_CHANGED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ITEM_DURABILITY_CHANGED", "field_1185", "ITEM_DURABILITY_CHANGED", "f_10586_"), "Lcm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#ITEM_DURABILITY_CHANGED
    [[maybe_unused]] static void set_field_ITEM_DURABILITY_CHANGED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ITEM_DURABILITY_CHANGED", "field_1185", "ITEM_DURABILITY_CHANGED", "f_10586_"), "Lcm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#LEVITATION
    [[maybe_unused]] static jobject get_field_LEVITATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "LEVITATION", "field_1200", "LEVITATION", "f_10587_"), "Ldb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#LEVITATION
    [[maybe_unused]] static void set_field_LEVITATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "LEVITATION", "field_1200", "LEVITATION", "f_10587_"), "Ldb;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#CHANGED_DIMENSION
    [[maybe_unused]] static jobject get_field_CHANGED_DIMENSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "CHANGED_DIMENSION", "field_1183", "CHANGED_DIMENSION", "f_10588_"), "Laz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#CHANGED_DIMENSION
    [[maybe_unused]] static void set_field_CHANGED_DIMENSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "CHANGED_DIMENSION", "field_1183", "CHANGED_DIMENSION", "f_10588_"), "Laz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#TICK
    [[maybe_unused]] static jobject get_field_TICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "TICK", "field_1187", "TICK", "f_10589_"), "Ldq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#TICK
    [[maybe_unused]] static void set_field_TICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "TICK", "field_1187", "TICK", "f_10589_"), "Ldq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#TAME_ANIMAL
    [[maybe_unused]] static jobject get_field_TAME_ANIMAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "TAME_ANIMAL", "field_1201", "TAME_ANIMAL", "f_10590_"), "Lee;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#TAME_ANIMAL
    [[maybe_unused]] static void set_field_TAME_ANIMAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "TAME_ANIMAL", "field_1201", "TAME_ANIMAL", "f_10590_"), "Lee;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#PLACED_BLOCK
    [[maybe_unused]] static jobject get_field_PLACED_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "PLACED_BLOCK", "field_1191", "PLACED_BLOCK", "f_10591_"), "Lcw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#PLACED_BLOCK
    [[maybe_unused]] static void set_field_PLACED_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "PLACED_BLOCK", "field_1191", "PLACED_BLOCK", "f_10591_"), "Lcw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#CONSUME_ITEM
    [[maybe_unused]] static jobject get_field_CONSUME_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "CONSUME_ITEM", "field_1198", "CONSUME_ITEM", "f_10592_"), "Lbf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#CONSUME_ITEM
    [[maybe_unused]] static void set_field_CONSUME_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "CONSUME_ITEM", "field_1198", "CONSUME_ITEM", "f_10592_"), "Lbf;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#EFFECTS_CHANGED
    [[maybe_unused]] static jobject get_field_EFFECTS_CHANGED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "EFFECTS_CHANGED", "field_1193", "EFFECTS_CHANGED", "f_10550_"), "Lbo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#EFFECTS_CHANGED
    [[maybe_unused]] static void set_field_EFFECTS_CHANGED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "EFFECTS_CHANGED", "field_1193", "EFFECTS_CHANGED", "f_10550_"), "Lbo;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#USED_TOTEM
    [[maybe_unused]] static jobject get_field_USED_TOTEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "USED_TOTEM", "field_1204", "USED_TOTEM", "f_10551_"), "Lei;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#USED_TOTEM
    [[maybe_unused]] static void set_field_USED_TOTEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "USED_TOTEM", "field_1204", "USED_TOTEM", "f_10551_"), "Lei;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#NETHER_TRAVEL
    [[maybe_unused]] static jobject get_field_NETHER_TRAVEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "NETHER_TRAVEL", "field_1211", "NETHER_TRAVEL", "f_10552_"), "Lbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#NETHER_TRAVEL
    [[maybe_unused]] static void set_field_NETHER_TRAVEL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "NETHER_TRAVEL", "field_1211", "NETHER_TRAVEL", "f_10552_"), "Lbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#FISHING_ROD_HOOKED
    [[maybe_unused]] static jobject get_field_FISHING_ROD_HOOKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "FISHING_ROD_HOOKED", "field_1203", "FISHING_ROD_HOOKED", "f_10553_"), "Lcc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#FISHING_ROD_HOOKED
    [[maybe_unused]] static void set_field_FISHING_ROD_HOOKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "FISHING_ROD_HOOKED", "field_1203", "FISHING_ROD_HOOKED", "f_10553_"), "Lcc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#CHANNELED_LIGHTNING
    [[maybe_unused]] static jobject get_field_CHANNELED_LIGHTNING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "CHANNELED_LIGHTNING", "field_1202", "CHANNELED_LIGHTNING", "f_10554_"), "Lba;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#CHANNELED_LIGHTNING
    [[maybe_unused]] static void set_field_CHANNELED_LIGHTNING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "CHANNELED_LIGHTNING", "field_1202", "CHANNELED_LIGHTNING", "f_10554_"), "Lba;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#SHOT_CROSSBOW
    [[maybe_unused]] static jobject get_field_SHOT_CROSSBOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "SHOT_CROSSBOW", "field_1196", "SHOT_CROSSBOW", "f_10555_"), "Ldu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#SHOT_CROSSBOW
    [[maybe_unused]] static void set_field_SHOT_CROSSBOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "SHOT_CROSSBOW", "field_1196", "SHOT_CROSSBOW", "f_10555_"), "Ldu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#KILLED_BY_CROSSBOW
    [[maybe_unused]] static jobject get_field_KILLED_BY_CROSSBOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "KILLED_BY_CROSSBOW", "field_1197", "KILLED_BY_CROSSBOW", "f_10556_"), "Lcz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#KILLED_BY_CROSSBOW
    [[maybe_unused]] static void set_field_KILLED_BY_CROSSBOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "KILLED_BY_CROSSBOW", "field_1197", "KILLED_BY_CROSSBOW", "f_10556_"), "Lcz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#HERO_OF_THE_VILLAGE
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "RAID_WIN", "field_19250", "HERO_OF_THE_VILLAGE", "f_10557_"), "Ldq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#HERO_OF_THE_VILLAGE
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "RAID_WIN", "field_19250", "HERO_OF_THE_VILLAGE", "f_10557_"), "Ldq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#VOLUNTARY_EXILE
    [[maybe_unused]] static jobject get_field_VOLUNTARY_EXILE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "RAID_OMEN", "field_19251", "VOLUNTARY_EXILE", "f_315944_"), "Ldq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#VOLUNTARY_EXILE
    [[maybe_unused]] static void set_field_VOLUNTARY_EXILE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "RAID_OMEN", "field_19251", "VOLUNTARY_EXILE", "f_315944_"), "Ldq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#SLIDE_DOWN_BLOCK
    [[maybe_unused]] static jobject get_field_SLIDE_DOWN_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "HONEY_BLOCK_SLIDE", "field_21628", "SLIDE_DOWN_BLOCK", "f_10559_"), "Ldx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#SLIDE_DOWN_BLOCK
    [[maybe_unused]] static void set_field_SLIDE_DOWN_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "HONEY_BLOCK_SLIDE", "field_21628", "SLIDE_DOWN_BLOCK", "f_10559_"), "Ldx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#BEE_NEST_DESTROYED
    [[maybe_unused]] static jobject get_field_BEE_NEST_DESTROYED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "BEE_NEST_DESTROYED", "field_21629", "BEE_NEST_DESTROYED", "f_10560_"), "Lav;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#BEE_NEST_DESTROYED
    [[maybe_unused]] static void set_field_BEE_NEST_DESTROYED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "BEE_NEST_DESTROYED", "field_21629", "BEE_NEST_DESTROYED", "f_10560_"), "Lav;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#TARGET_HIT
    [[maybe_unused]] static jobject get_field_TARGET_HIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "TARGET_BLOCK_HIT", "field_22450", "TARGET_HIT", "f_10561_"), "Lef;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#TARGET_HIT
    [[maybe_unused]] static void set_field_TARGET_HIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "TARGET_BLOCK_HIT", "field_22450", "TARGET_HIT", "f_10561_"), "Lef;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#ITEM_USED_ON_BLOCK
    [[maybe_unused]] static jobject get_field_ITEM_USED_ON_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "ITEM_USED_ON_BLOCK", "field_24478", "ITEM_USED_ON_BLOCK", "f_10562_"), "Lcw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#ITEM_USED_ON_BLOCK
    [[maybe_unused]] static void set_field_ITEM_USED_ON_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "ITEM_USED_ON_BLOCK", "field_24478", "ITEM_USED_ON_BLOCK", "f_10562_"), "Lcw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#DEFAULT_BLOCK_USE
    [[maybe_unused]] static jobject get_field_DEFAULT_BLOCK_USE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "DEFAULT_BLOCK_USE", "field_48268", "DEFAULT_BLOCK_USE", "f_315578_"), "Lbl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#DEFAULT_BLOCK_USE
    [[maybe_unused]] static void set_field_DEFAULT_BLOCK_USE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "DEFAULT_BLOCK_USE", "field_48268", "DEFAULT_BLOCK_USE", "f_315578_"), "Lbl;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#ANY_BLOCK_USE
    [[maybe_unused]] static jobject get_field_ANY_BLOCK_USE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "ANY_BLOCK_USE", "field_48269", "ANY_BLOCK_USE", "f_314545_"), "Lau;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#ANY_BLOCK_USE
    [[maybe_unused]] static void set_field_ANY_BLOCK_USE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "ANY_BLOCK_USE", "field_48269", "ANY_BLOCK_USE", "f_314545_"), "Lau;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#PLAYER_GENERATES_CONTAINER_LOOT
    [[maybe_unused]] static jobject get_field_PLAYER_GENERATES_CONTAINER_LOOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "GENERATE_LOOT", "field_24479", "PLAYER_GENERATES_CONTAINER_LOOT", "f_10563_"), "Ldg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#PLAYER_GENERATES_CONTAINER_LOOT
    [[maybe_unused]] static void set_field_PLAYER_GENERATES_CONTAINER_LOOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "GENERATE_LOOT", "field_24479", "PLAYER_GENERATES_CONTAINER_LOOT", "f_10563_"), "Ldg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#THROWN_ITEM_PICKED_UP_BY_ENTITY
    [[maybe_unused]] static jobject get_field_THROWN_ITEM_PICKED_UP_BY_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "THROWN_ITEM_PICKED_UP_BY_ENTITY", "field_24480", "THROWN_ITEM_PICKED_UP_BY_ENTITY", "f_215654_"), "Ldl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#THROWN_ITEM_PICKED_UP_BY_ENTITY
    [[maybe_unused]] static void set_field_THROWN_ITEM_PICKED_UP_BY_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "THROWN_ITEM_PICKED_UP_BY_ENTITY", "field_24480", "THROWN_ITEM_PICKED_UP_BY_ENTITY", "f_215654_"), "Ldl;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#THROWN_ITEM_PICKED_UP_BY_PLAYER
    [[maybe_unused]] static jobject get_field_THROWN_ITEM_PICKED_UP_BY_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "THROWN_ITEM_PICKED_UP_BY_PLAYER", "field_38700", "THROWN_ITEM_PICKED_UP_BY_PLAYER", "f_215655_"), "Ldl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#THROWN_ITEM_PICKED_UP_BY_PLAYER
    [[maybe_unused]] static void set_field_THROWN_ITEM_PICKED_UP_BY_PLAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "THROWN_ITEM_PICKED_UP_BY_PLAYER", "field_38700", "THROWN_ITEM_PICKED_UP_BY_PLAYER", "f_215655_"), "Ldl;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#PLAYER_INTERACTED_WITH_ENTITY
    [[maybe_unused]] static jobject get_field_PLAYER_INTERACTED_WITH_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "PLAYER_INTERACTED_WITH_ENTITY", "field_25694", "PLAYER_INTERACTED_WITH_ENTITY", "f_10565_"), "Ldn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#PLAYER_INTERACTED_WITH_ENTITY
    [[maybe_unused]] static void set_field_PLAYER_INTERACTED_WITH_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "PLAYER_INTERACTED_WITH_ENTITY", "field_25694", "PLAYER_INTERACTED_WITH_ENTITY", "f_10565_"), "Ldn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#STARTED_RIDING
    [[maybe_unused]] static jobject get_field_STARTED_RIDING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "START_RIDING_TRIGGER", "field_33870", "STARTED_RIDING", "f_145088_"), "Lea;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#STARTED_RIDING
    [[maybe_unused]] static void set_field_STARTED_RIDING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "START_RIDING_TRIGGER", "field_33870", "STARTED_RIDING", "f_145088_"), "Lea;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#LIGHTNING_STRIKE
    [[maybe_unused]] static jobject get_field_LIGHTNING_STRIKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "LIGHTNING_STRIKE", "field_33871", "LIGHTNING_STRIKE", "f_145089_"), "Lde;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#LIGHTNING_STRIKE
    [[maybe_unused]] static void set_field_LIGHTNING_STRIKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "LIGHTNING_STRIKE", "field_33871", "LIGHTNING_STRIKE", "f_145089_"), "Lde;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#USING_ITEM
    [[maybe_unused]] static jobject get_field_USING_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "USING_ITEM", "field_33872", "USING_ITEM", "f_145090_"), "Lej;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#USING_ITEM
    [[maybe_unused]] static void set_field_USING_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "USING_ITEM", "field_33872", "USING_ITEM", "f_145090_"), "Lej;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#FALL_FROM_HEIGHT
    [[maybe_unused]] static jobject get_field_FALL_FROM_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "FALL_FROM_HEIGHT", "field_35013", "FALL_FROM_HEIGHT", "f_184759_"), "Lbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#FALL_FROM_HEIGHT
    [[maybe_unused]] static void set_field_FALL_FROM_HEIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "FALL_FROM_HEIGHT", "field_35013", "FALL_FROM_HEIGHT", "f_184759_"), "Lbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#RIDE_ENTITY_IN_LAVA
    [[maybe_unused]] static jobject get_field_RIDE_ENTITY_IN_LAVA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "RIDE_ENTITY_IN_LAVA_TRIGGER", "field_35014", "RIDE_ENTITY_IN_LAVA", "f_184760_"), "Lbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#RIDE_ENTITY_IN_LAVA
    [[maybe_unused]] static void set_field_RIDE_ENTITY_IN_LAVA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "RIDE_ENTITY_IN_LAVA_TRIGGER", "field_35014", "RIDE_ENTITY_IN_LAVA", "f_184760_"), "Lbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#KILL_MOB_NEAR_SCULK_CATALYST
    [[maybe_unused]] static jobject get_field_KILL_MOB_NEAR_SCULK_CATALYST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "KILL_MOB_NEAR_SCULK_CATALYST", "field_38376", "KILL_MOB_NEAR_SCULK_CATALYST", "f_215656_"), "Lda;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#KILL_MOB_NEAR_SCULK_CATALYST
    [[maybe_unused]] static void set_field_KILL_MOB_NEAR_SCULK_CATALYST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "KILL_MOB_NEAR_SCULK_CATALYST", "field_38376", "KILL_MOB_NEAR_SCULK_CATALYST", "f_215656_"), "Lda;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#ALLAY_DROP_ITEM_ON_BLOCK
    [[maybe_unused]] static jobject get_field_ALLAY_DROP_ITEM_ON_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "ALLAY_DROP_ITEM_ON_BLOCK", "field_38701", "ALLAY_DROP_ITEM_ON_BLOCK", "f_215657_"), "Lcw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#ALLAY_DROP_ITEM_ON_BLOCK
    [[maybe_unused]] static void set_field_ALLAY_DROP_ITEM_ON_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "ALLAY_DROP_ITEM_ON_BLOCK", "field_38701", "ALLAY_DROP_ITEM_ON_BLOCK", "f_215657_"), "Lcw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#AVOID_VIBRATION
    [[maybe_unused]] static jobject get_field_AVOID_VIBRATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "AVOID_VIBRATION", "field_38838", "AVOID_VIBRATION", "f_215658_"), "Ldq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#AVOID_VIBRATION
    [[maybe_unused]] static void set_field_AVOID_VIBRATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "AVOID_VIBRATION", "field_38838", "AVOID_VIBRATION", "f_215658_"), "Ldq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#RECIPE_CRAFTED
    [[maybe_unused]] static jobject get_field_RECIPE_CRAFTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "RECIPE_CRAFTED", "field_44587", "RECIPE_CRAFTED", "f_279543_"), "Lds;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#RECIPE_CRAFTED
    [[maybe_unused]] static void set_field_RECIPE_CRAFTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "RECIPE_CRAFTED", "field_44587", "RECIPE_CRAFTED", "f_279543_"), "Lds;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#CRAFTER_RECIPE_CRAFTED
    [[maybe_unused]] static jobject get_field_CRAFTER_RECIPE_CRAFTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "CRAFTER_RECIPE_CRAFTED", "field_49922", "CRAFTER_RECIPE_CRAFTED", "f_315310_"), "Lds;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#CRAFTER_RECIPE_CRAFTED
    [[maybe_unused]] static void set_field_CRAFTER_RECIPE_CRAFTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "CRAFTER_RECIPE_CRAFTED", "field_49922", "CRAFTER_RECIPE_CRAFTED", "f_315310_"), "Lds;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.advancement.criterion.Criteria#FALL_AFTER_EXPLOSION
    [[maybe_unused]] static jobject get_field_FALL_AFTER_EXPLOSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "FALL_AFTER_EXPLOSION", "field_49923", "FALL_AFTER_EXPLOSION", "f_314306_"), "Lbz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.advancement.criterion.Criteria#FALL_AFTER_EXPLOSION
    [[maybe_unused]] static void set_field_FALL_AFTER_EXPLOSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "FALL_AFTER_EXPLOSION", "field_49923", "FALL_AFTER_EXPLOSION", "f_314306_"), "Lbz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_767", "register", "m_10595_"), "(Ljava/lang/String;Laq;)Laq;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getDefault() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_54933", "getDefault", "m_305022_"), "(Ljz;)Laq;");
    }

    static jobject getDefault(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getDefault();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ADVANCEMENT_CRITERION_CRITERIA_HPP