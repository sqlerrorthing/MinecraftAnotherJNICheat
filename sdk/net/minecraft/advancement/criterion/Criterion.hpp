// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ADVANCEMENT_CRITERION_CRITERION_HPP
#define NET_MINECRAFT_ADVANCEMENT_CRITERION_CRITERION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.advancement.criterion.Criterion
 * Remapped: aq
 */
namespace Criterion {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aq", "net/minecraft/advancements/CriterionTrigger", "net/minecraft/class_179", "net/minecraft/advancement/criterion/Criterion", "net/minecraft/src/C_176_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_beginTrackingCondition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPlayerListener", "method_792", "beginTrackingCondition", "m_6467_"), "(Lakz;Laq$a;)V");
    }

    static void beginTrackingCondition(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_beginTrackingCondition();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_endTrackingCondition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "removePlayerListener", "method_793", "endTrackingCondition", "m_6468_"), "(Lakz;Laq$a;)V");
    }

    static void endTrackingCondition(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_endTrackingCondition();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_endTracking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removePlayerListeners", "method_791", "endTracking", "m_5656_"), "(Lakz;)V");
    }

    static void endTracking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_endTracking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getConditionsCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "codec", "method_54937", "getConditionsCodec", "m_5868_"), "()Lcom/mojang/serialization/Codec;");
    }

    static jobject getConditionsCodec(const jobject& obj) {
                
       const auto methodID = methodID_getConditionsCodec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createCriterion", "method_53699", "create", "m_292665_"), "(Lar;)Lao;");
    }

    static jobject create(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ADVANCEMENT_CRITERION_CRITERION_HPP