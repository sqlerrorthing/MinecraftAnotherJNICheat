// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_TEST_STRUCTURETESTLISTENER_HPP
#define NET_MINECRAFT_TEST_STRUCTURETESTLISTENER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.test.StructureTestListener
 * Remapped: tj
 */
namespace StructureTestListener {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("tj", "net/minecraft/gametest/framework/ReportGameListener", "net/minecraft/class_5624", "net/minecraft/test/StructureTestListener", "net/minecraft/src/C_141828_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.test.StructureTestListener#attempt
    static jint get_field_attempt(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "attempts", "field_27808", "attempt", "f_177686_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.StructureTestListener#attempt
    static void set_field_attempt(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "attempts", "field_27808", "attempt", "f_177686_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.StructureTestListener#successes
    static jint get_field_successes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "successes", "field_27809", "successes", "f_177687_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.StructureTestListener#successes
    static void set_field_successes(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "successes", "field_27809", "successes", "f_177687_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_onStarted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "testStructureLoaded", "method_22188", "onStarted", "m_8073_"), "(Lsx;)V");
    }

    static void onStarted(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onStarted();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_retry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleRetry", "method_56244", "retry", "m_321376_"), "(Lsx;Lta;Z)V");
    }

    static void retry(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_retry();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onPassed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "testPassed", "method_33317", "onPassed", "m_142378_"), "(Lsx;Lta;)V");
    }

    static void onPassed(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onPassed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onFailed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "testFailed", "method_22190", "onFailed", "m_8066_"), "(Lsx;Lta;)V");
    }

    static void onFailed(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onFailed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onRetry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "testAddedForRerun", "method_56216", "onRetry", "m_177684_"), "(Lsx;Lsx;Lta;)V");
    }

    static void onRetry(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onRetry();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_passTest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "reportPassed", "method_33320", "passTest", "m_177722_"), "(Lsx;Ljava/lang/String;)V");
    }

    static void passTest(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_passTest();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_finishPassedTest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "visualizePassedTest", "method_33321", "finishPassedTest", "m_177730_"), "(Lsx;Ljava/lang/String;)V");
    }

    static void finishPassedTest(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_finishPassedTest();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_failTest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "reportFailure", "method_32254", "failTest", "m_177725_"), "(Lsx;Ljava/lang/Throwable;)V");
    }

    static void failTest(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_failTest();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_finishFailedTest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "visualizeFailedTest", "method_32255", "finishFailedTest", "m_177733_"), "(Lsx;Ljava/lang/Throwable;)V");
    }

    static void finishFailedTest(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_finishFailedTest();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_visualizeTest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnBeacon", "method_32253", "visualizeTest", "m_177719_"), "(Lsx;Ldfy;)V");
    }

    static void visualizeTest(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_visualizeTest();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBeaconPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getBeaconPos", "method_61099", "getBeaconPos", "m_338884_"), "(Lsx;)Ljd;");
    }

    static jobject getBeaconPos(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getBeaconPos();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_placeAboveBeacon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "updateBeaconGlass", "method_61100", "placeAboveBeacon", "m_339749_"), "(Lsx;Ldfy;)V");
    }

    static void placeAboveBeacon(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_placeAboveBeacon();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createTestOutputLectern() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "spawnLectern", "method_32256", "createTestOutputLectern", "m_177738_"), "(Lsx;Ljava/lang/String;)V");
    }

    static void createTestOutputLectern(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createTestOutputLectern();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createBookWithText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createBook", "method_32251", "createBookWithText", "m_177710_"), "(Ljava/lang/String;ZLjava/lang/String;)Lcuq;");
    }

    static jobject createBookWithText(const jobject& arg0, const jboolean& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createBookWithText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_sendMessageToAllPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "say", "method_32248", "sendMessageToAllPlayers", "m_177700_"), "(Laqu;Ln;Ljava/lang/String;)V");
    }

    static void sendMessageToAllPlayers(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_sendMessageToAllPlayers();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addGameTestMarker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "showRedBox", "method_32247", "addGameTestMarker", "m_177696_"), "(Laqu;Ljd;Ljava/lang/String;)V");
    }

    static void addGameTestMarker(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_addGameTestMarker();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_TEST_STRUCTURETESTLISTENER_HPP