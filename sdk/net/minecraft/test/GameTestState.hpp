// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_TEST_GAMETESTSTATE_HPP
#define NET_MINECRAFT_TEST_GAMETESTSTATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.test.GameTestState
 * Remapped: sx
 */
namespace GameTestState {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("sx", "net/minecraft/gametest/framework/GameTestInfo", "net/minecraft/class_4517", "net/minecraft/test/GameTestState", "net/minecraft/src/C_4889_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.test.GameTestState#testFunction
    static jobject get_field_testFunction(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "testFunction", "field_20559", "testFunction", "f_127598_"), "Ltr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#testFunction
    static void set_field_testFunction(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "testFunction", "field_20559", "testFunction", "f_127598_"), "Ltr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "structureBlockPos", "field_20560", "pos", "f_127599_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "structureBlockPos", "field_20560", "pos", "f_127599_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#boxMinPos
    static jobject get_field_boxMinPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "northWestCorner", "field_48468", "boxMinPos", "f_317131_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#boxMinPos
    static void set_field_boxMinPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "northWestCorner", "field_48468", "boxMinPos", "f_317131_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "level", "field_20561", "world", "f_127600_"), "Laqu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "level", "field_20561", "world", "f_127600_"), "Laqu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#listeners
    static jobject get_field_listeners(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "listeners", "field_20562", "listeners", "f_127601_"), "Ljava/util/Collection;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#listeners
    static void set_field_listeners(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "listeners", "field_20562", "listeners", "f_127601_"), "Ljava/util/Collection;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#tickLimit
    static jint get_field_tickLimit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "timeoutTicks", "field_20563", "tickLimit", "f_127602_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#tickLimit
    static void set_field_tickLimit(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "timeoutTicks", "field_20563", "tickLimit", "f_127602_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#timedTaskRunners
    static jobject get_field_timedTaskRunners(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "sequences", "field_21452", "timedTaskRunners", "f_127603_"), "Ljava/util/Collection;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#timedTaskRunners
    static void set_field_timedTaskRunners(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "sequences", "field_21452", "timedTaskRunners", "f_127603_"), "Ljava/util/Collection;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#ticksByRunnables
    static jobject get_field_ticksByRunnables(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "runAtTickTimeMap", "field_21453", "ticksByRunnables", "f_127604_"), "Lit/unimi/dsi/fastutil/objects/Object2LongMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#ticksByRunnables
    static void set_field_ticksByRunnables(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "runAtTickTimeMap", "field_21453", "ticksByRunnables", "f_127604_"), "Lit/unimi/dsi/fastutil/objects/Object2LongMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#startTime
    static jlong get_field_startTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "startTick", "field_21454", "startTime", "f_127605_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#startTime
    static void set_field_startTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "startTick", "field_21454", "startTime", "f_127605_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#initialDelay
    static jint get_field_initialDelay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "ticksToWaitForChunkLoading", "field_47172", "initialDelay", "f_302353_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#initialDelay
    static void set_field_initialDelay(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "ticksToWaitForChunkLoading", "field_47172", "initialDelay", "f_302353_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#initialized
    static jboolean get_field_initialized(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "placedStructure", "field_47173", "initialized", "f_303273_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#initialized
    static void set_field_initialized(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "placedStructure", "field_47173", "initialized", "f_303273_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#tickedOnce
    static jboolean get_field_tickedOnce(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "chunksLoaded", "field_47174", "tickedOnce", "f_303601_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#tickedOnce
    static void set_field_tickedOnce(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "chunksLoaded", "field_47174", "tickedOnce", "f_303601_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#tick
    static jlong get_field_tick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "tickCount", "field_21455", "tick", "f_127606_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#tick
    static void set_field_tick(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "tickCount", "field_21455", "tick", "f_127606_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#started
    static jboolean get_field_started(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "started", "field_20565", "started", "f_127607_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#started
    static void set_field_started(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "started", "field_20565", "started", "f_127607_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#testAttemptConfig
    static jobject get_field_testAttemptConfig(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "retryOptions", "field_48469", "testAttemptConfig", "f_314573_"), "Ltk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#testAttemptConfig
    static void set_field_testAttemptConfig(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "retryOptions", "field_48469", "testAttemptConfig", "f_314573_"), "Ltk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#stopwatch
    static jobject get_field_stopwatch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "timer", "field_21456", "stopwatch", "f_127608_"), "Lcom/google/common/base/Stopwatch;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#stopwatch
    static void set_field_stopwatch(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "timer", "field_21456", "stopwatch", "f_127608_"), "Lcom/google/common/base/Stopwatch;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#completed
    static jboolean get_field_completed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "done", "field_20567", "completed", "f_127609_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#completed
    static void set_field_completed(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "done", "field_20567", "completed", "f_127609_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#rotation
    static jobject get_field_rotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "rotation", "field_25301", "rotation", "f_127610_"), "Ldmm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#rotation
    static void set_field_rotation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "rotation", "field_25301", "rotation", "f_127610_"), "Ldmm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#throwable
    static jobject get_field_throwable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "error", "field_20569", "throwable", "f_127611_"), "Ljava/lang/Throwable;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#throwable
    static void set_field_throwable(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "error", "field_20569", "throwable", "f_127611_"), "Ljava/lang/Throwable;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.test.GameTestState#structureBlockEntity
    static jobject get_field_structureBlockEntity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "structureBlockEntity", "field_27805", "structureBlockEntity", "f_177469_"), "Ldrx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.test.GameTestState#structureBlockEntity
    static void set_field_structureBlockEntity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "structureBlockEntity", "field_27805", "structureBlockEntity", "f_177469_"), "Ldrx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_setPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setStructureBlockPos", "method_23635", "setPos", "m_127617_"), "(Ljd;)V");
    }

    static void setPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_startCountdown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startExecution", "method_23634", "startCountdown", "m_127616_"), "(I)Lsx;");
    }

    static jobject startCountdown(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_startCountdown();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initializeImmediately() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "placeStructure", "method_56213", "initializeImmediately", "m_322668_"), "()Lsx;");
    }

    static jobject initializeImmediately(const jobject& obj) {
                
       const auto methodID = methodID_initializeImmediately();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "ensureStructureIsPlaced", "method_56211", "initialize", "m_321951_"), "()Z");
    }

    static jboolean initialize(const jobject& obj) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_22165", "tick", "m_127628_"), "(Lta;)V");
    }

    static void _tick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickTests() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "tickInternal", "method_33315", "tickTests", "m_177470_"), "()V");
    }

    static void tickTests(const jobject& obj) {
                
       const auto methodID = methodID_tickTests();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "startTest", "method_23639", "start", "m_127649_"), "()V");
    }

    static void start(const jobject& obj) {
                
       const auto methodID = methodID_start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_runAtTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setRunAtTickTime", "method_36060", "runAtTick", "m_177472_"), "(JLjava/lang/Runnable;)V");
    }

    static void runAtTick(const jobject& obj, const jlong& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_runAtTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getTemplatePath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTestName", "method_22169", "getTemplatePath", "m_127633_"), "()Ljava/lang/String;");
    }

    static jobject getTemplatePath(const jobject& obj) {
                
       const auto methodID = methodID_getTemplatePath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getStructureBlockPos", "method_22172", "getPos", "m_127636_"), "()Ljd;");
    }

    static jobject getPos(const jobject& obj) {
                
       const auto methodID = methodID_getPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getStructureBounds", "method_36062", "getBoundingBox", "m_177484_"), "()Lewx;");
    }

    static jobject getBoundingBox(const jobject& obj) {
                
       const auto methodID = methodID_getBoundingBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStructureBlockBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getStructureBlockEntity", "method_36059", "getStructureBlockBlockEntity", "m_177471_"), "()Ldrx;");
    }

    static jobject getStructureBlockBlockEntity(const jobject& obj) {
                
       const auto methodID = methodID_getStructureBlockBlockEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getLevel", "method_22176", "getWorld", "m_127637_"), "()Laqu;");
    }

    static jobject getWorld(const jobject& obj) {
                
       const auto methodID = methodID_getWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPassed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "hasSucceeded", "method_22177", "isPassed", "m_127638_"), "()Z");
    }

    static jboolean isPassed(const jobject& obj) {
                
       const auto methodID = methodID_isPassed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFailed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "hasFailed", "method_22178", "isFailed", "m_127639_"), "()Z");
    }

    static jboolean isFailed(const jobject& obj) {
                
       const auto methodID = methodID_isFailed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isStarted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "hasStarted", "method_22179", "isStarted", "m_127640_"), "()Z");
    }

    static jboolean isStarted(const jobject& obj) {
                
       const auto methodID = methodID_isStarted();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isCompleted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "isDone", "method_22180", "isCompleted", "m_127641_"), "()Z");
    }

    static jboolean isCompleted(const jobject& obj) {
                
       const auto methodID = methodID_isCompleted();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getElapsedMilliseconds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getRunTime", "method_36063", "getElapsedMilliseconds", "m_177485_"), "()J");
    }

    static jlong getElapsedMilliseconds(const jobject& obj) {
                
       const auto methodID = methodID_getElapsedMilliseconds();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_complete() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "finish", "method_23640", "complete", "m_127650_"), "()V");
    }

    static void complete(const jobject& obj) {
                
       const auto methodID = methodID_complete();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_completeIfSuccessful() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "succeed", "method_36064", "completeIfSuccessful", "m_177486_"), "()V");
    }

    static void completeIfSuccessful(const jobject& obj) {
                
       const auto methodID = methodID_completeIfSuccessful();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_fail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fail", "method_22168", "fail", "m_127622_"), "(Ljava/lang/Throwable;)V");
    }

    static void fail(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_fail();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getThrowable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getError", "method_22182", "getThrowable", "m_127642_"), "()Ljava/lang/Throwable;");
    }

    static jobject getThrowable(const jobject& obj) {
                
       const auto methodID = methodID_getThrowable();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addListener", "method_22167", "addListener", "m_127624_"), "(Lsy;)V");
    }

    static void addListener(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "prepareTestStructure", "method_22166", "init", "m_306517_"), "()Lsx;");
    }

    static jobject init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getTick", "method_36065", "getTick", "m_177488_"), "()J");
    }

    static jlong getTick(const jobject& obj) {
                
       const auto methodID = methodID_getTick();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_createTimedTaskRunner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "createSequence", "method_36066", "createTimedTaskRunner", "m_177489_"), "()Ltb;");
    }

    static jobject createTimedTaskRunner(const jobject& obj) {
                
       const auto methodID = methodID_createTimedTaskRunner();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isRequired() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "isRequired", "method_22183", "isRequired", "m_127643_"), "()Z");
    }

    static jboolean isRequired(const jobject& obj) {
                
       const auto methodID = methodID_isRequired();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isOptional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "isOptional", "method_22184", "isOptional", "m_127644_"), "()Z");
    }

    static jboolean isOptional(const jobject& obj) {
                
       const auto methodID = methodID_isOptional();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTemplateName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getStructureName", "method_23638", "getTemplateName", "m_127645_"), "()Ljava/lang/String;");
    }

    static jobject getTemplateName(const jobject& obj) {
                
       const auto methodID = methodID_getTemplateName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getRotation", "method_29402", "getRotation", "m_127646_"), "()Ldmm;");
    }

    static jobject getRotation(const jobject& obj) {
                
       const auto methodID = methodID_getRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTestFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "getTestFunction", "method_29403", "getTestFunction", "m_127648_"), "()Ltr;");
    }

    static jobject getTestFunction(const jobject& obj) {
                
       const auto methodID = methodID_getTestFunction();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTickLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getTimeoutTicks", "method_36067", "getTickLimit", "m_177490_"), "()I");
    }

    static jint getTickLimit(const jobject& obj) {
                
       const auto methodID = methodID_getTickLimit();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFlaky() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "isFlaky", "method_32241", "isFlaky", "m_177491_"), "()Z");
    }

    static jboolean isFlaky(const jobject& obj) {
                
       const auto methodID = methodID_isFlaky();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxAttempts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "maxAttempts", "method_32242", "getMaxAttempts", "m_177492_"), "()I");
    }

    static jint getMaxAttempts(const jobject& obj) {
                
       const auto methodID = methodID_getMaxAttempts();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRequiredSuccesses() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "requiredSuccesses", "method_32243", "getRequiredSuccesses", "m_177493_"), "()I");
    }

    static jint getRequiredSuccesses(const jobject& obj) {
                
       const auto methodID = methodID_getRequiredSuccesses();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTestAttemptConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "retryOptions", "method_56215", "getTestAttemptConfig", "m_324328_"), "()Ltk;");
    }

    static jobject getTestAttemptConfig(const jobject& obj) {
                
       const auto methodID = methodID_getTestAttemptConfig();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_streamListeners() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "getListeners", "method_56209", "streamListeners", "m_324070_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamListeners(const jobject& obj) {
                
       const auto methodID = methodID_streamListeners();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "copyReset", "method_56210", "copy", "m_325037_"), "()Lsx;");
    }

    static jobject copy(const jobject& obj) {
                
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoxMinPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "getOrCalculateNorthwestCorner", "method_56212", "getBoxMinPos", "m_325039_"), "()Ljd;");
    }

    static jobject getBoxMinPos(const jobject& obj) {
                
       const auto methodID = methodID_getBoxMinPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setBoxMinPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setNorthWestCorner", "method_56214", "setBoxMinPos", "m_322570_"), "(Ljd;)V");
    }

    static void setBoxMinPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setBoxMinPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_TEST_GAMETESTSTATE_HPP