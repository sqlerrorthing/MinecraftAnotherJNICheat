// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_TEST_TESTFUNCTIONS_HPP
#define NET_MINECRAFT_TEST_TESTFUNCTIONS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.test.TestFunctions
 * Remapped: sz
 */
namespace TestFunctions {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("sz", "net/minecraft/gametest/framework/GameTestRegistry", "net/minecraft/class_4519", "net/minecraft/test/TestFunctions", "net/minecraft/src/C_4891_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.test.TestFunctions#TEST_FUNCTIONS
    [[maybe_unused]] static jobject get_field_TEST_FUNCTIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TEST_FUNCTIONS", "field_20570", "TEST_FUNCTIONS", "f_177495_"), "Ljava/util/Collection;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.test.TestFunctions#TEST_FUNCTIONS
    [[maybe_unused]] static void set_field_TEST_FUNCTIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TEST_FUNCTIONS", "field_20570", "TEST_FUNCTIONS", "f_177495_"), "Ljava/util/Collection;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.test.TestFunctions#TEST_CLASSES
    [[maybe_unused]] static jobject get_field_TEST_CLASSES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TEST_CLASS_NAMES", "field_20571", "TEST_CLASSES", "f_177496_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.test.TestFunctions#TEST_CLASSES
    [[maybe_unused]] static void set_field_TEST_CLASSES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TEST_CLASS_NAMES", "field_20571", "TEST_CLASSES", "f_177496_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.test.TestFunctions#BEFORE_BATCH_CONSUMERS
    [[maybe_unused]] static jobject get_field_BEFORE_BATCH_CONSUMERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BEFORE_BATCH_FUNCTIONS", "field_20572", "BEFORE_BATCH_CONSUMERS", "f_177497_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.test.TestFunctions#BEFORE_BATCH_CONSUMERS
    [[maybe_unused]] static void set_field_BEFORE_BATCH_CONSUMERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BEFORE_BATCH_FUNCTIONS", "field_20572", "BEFORE_BATCH_CONSUMERS", "f_177497_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.test.TestFunctions#AFTER_BATCH_CONSUMERS
    [[maybe_unused]] static jobject get_field_AFTER_BATCH_CONSUMERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "AFTER_BATCH_FUNCTIONS", "field_27806", "AFTER_BATCH_CONSUMERS", "f_177498_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.test.TestFunctions#AFTER_BATCH_CONSUMERS
    [[maybe_unused]] static void set_field_AFTER_BATCH_CONSUMERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "AFTER_BATCH_FUNCTIONS", "field_27806", "AFTER_BATCH_CONSUMERS", "f_177498_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.test.TestFunctions#FAILED_TEST_FUNCTIONS
    [[maybe_unused]] static jobject get_field_FAILED_TEST_FUNCTIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LAST_FAILED_TESTS", "field_25302", "FAILED_TEST_FUNCTIONS", "f_177499_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.test.TestFunctions#FAILED_TEST_FUNCTIONS
    [[maybe_unused]] static void set_field_FAILED_TEST_FUNCTIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LAST_FAILED_TESTS", "field_25302", "FAILED_TEST_FUNCTIONS", "f_177499_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_36068", "register", "m_177501_"), "(Ljava/lang/Class;)V");
    }

    static void register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_36069", "register", "m_177503_"), "(Ljava/lang/reflect/Method;)V");
    }

    static void _register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_registerBatchConsumers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "registerBatchFunction", "method_36070", "registerBatchConsumers", "m_177505_"), "(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V");
    }

    static void registerBatchConsumers(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_registerBatchConsumers();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getTestFunctions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getTestFunctionsForClassName", "method_22193", "getTestFunctions", "m_127659_"), "(Ljava/lang/String;)Ljava/util/stream/Stream;");
    }

    static jobject getTestFunctions(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getTestFunctions();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__getTestFunctions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getAllTestFunctions", "method_22191", "getTestFunctions", "m_127658_"), "()Ljava/util/Collection;");
    }

    static jobject _getTestFunctions() {
       const auto clazz = self();
       const auto methodID = methodID__getTestFunctions();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getTestClasses() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getAllTestClassNames", "method_22195", "getTestClasses", "m_127669_"), "()Ljava/util/Collection;");
    }

    static jobject getTestClasses() {
       const auto clazz = self();
       const auto methodID = methodID_getTestClasses();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_testClassExists() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isTestClass", "method_22196", "testClassExists", "m_127670_"), "(Ljava/lang/String;)Z");
    }

    static jboolean testClassExists(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_testClassExists();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getBeforeBatchConsumer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getBeforeBatchFunction", "method_22198", "getBeforeBatchConsumer", "m_127676_"), "(Ljava/lang/String;)Ljava/util/function/Consumer;");
    }

    static jobject getBeforeBatchConsumer(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getBeforeBatchConsumer();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getAfterBatchConsumer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getAfterBatchFunction", "method_32244", "getAfterBatchConsumer", "m_177517_"), "(Ljava/lang/String;)Ljava/util/function/Consumer;");
    }

    static jobject getAfterBatchConsumer(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getAfterBatchConsumer();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTestFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "findTestFunction", "method_22199", "getTestFunction", "m_127679_"), "(Ljava/lang/String;)Ljava/util/Optional;");
    }

    static jobject getTestFunction(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getTestFunction();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTestFunctionOrThrow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "getTestFunction", "method_22200", "getTestFunctionOrThrow", "m_127681_"), "(Ljava/lang/String;)Ltr;");
    }

    static jobject getTestFunctionOrThrow(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getTestFunctionOrThrow();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getCustomTestFunctions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "useTestGeneratorMethod", "method_36072", "getCustomTestFunctions", "m_177513_"), "(Ljava/lang/reflect/Method;)Ljava/util/Collection;");
    }

    static jobject getCustomTestFunctions(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getCustomTestFunctions();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__getTestFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "turnMethodIntoTestFunction", "method_36073", "getTestFunction", "m_177515_"), "(Ljava/lang/reflect/Method;)Ltr;");
    }

    static jobject _getTestFunction(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__getTestFunction();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getInvoker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "turnMethodIntoConsumer", "method_36074", "getInvoker", "m_177519_"), "(Ljava/lang/reflect/Method;)Ljava/util/function/Consumer;");
    }

    static jobject getInvoker(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getInvoker();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isInClass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isTestFunctionPartOfClass", "method_22192", "isInClass", "m_127666_"), "(Ltr;Ljava/lang/String;)Z");
    }

    static jboolean isInClass(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isInClass();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getFailedTestFunctions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getLastFailedTests", "method_29405", "getFailedTestFunctions", "m_127675_"), "()Ljava/util/stream/Stream;");
    }

    static jobject getFailedTestFunctions() {
       const auto clazz = self();
       const auto methodID = methodID_getFailedTestFunctions();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_addFailedTestFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "rememberFailedTest", "method_29404", "addFailedTestFunction", "m_127664_"), "(Ltr;)V");
    }

    static void addFailedTestFunction(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addFailedTestFunction();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_clearFailedTestFunctions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "forgetFailedTests", "method_29406", "clearFailedTestFunctions", "m_127678_"), "()V");
    }

    static void clearFailedTestFunctions() {
       const auto clazz = self();
       const auto methodID = methodID_clearFailedTestFunctions();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_TEST_TESTFUNCTIONS_HPP