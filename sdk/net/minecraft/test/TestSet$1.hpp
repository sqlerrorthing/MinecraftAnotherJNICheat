// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_TEST_TESTSET$1_HPP
#define NET_MINECRAFT_TEST_TESTSET$1_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.test.TestSet$1
 * Remapped: ti$1
 */
namespace TestSet$1 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ti$1", "net/minecraft/gametest/framework/MultipleTestTracker$1", "net/minecraft/class_4524$1", "net/minecraft/test/TestSet$1", "net/minecraft/src/C_4898_$C_4899_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_onStarted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "testStructureLoaded", "method_22188", "onStarted", "m_8073_"), "(Lsx;)V");
    }

    static void onStarted(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onStarted();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onPassed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "testPassed", "method_33317", "onPassed", "m_142378_"), "(Lsx;Lta;)V");
    }

    static void onPassed(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onPassed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onFailed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "testFailed", "method_22190", "onFailed", "m_8066_"), "(Lsx;Lta;)V");
    }

    static void onFailed(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onFailed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onRetry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "testAddedForRerun", "method_56216", "onRetry", "m_177684_"), "(Lsx;Lsx;Lta;)V");
    }

    static void onRetry(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onRetry();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_TEST_TESTSET$1_HPP