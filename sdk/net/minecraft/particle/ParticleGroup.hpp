// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_PARTICLE_PARTICLEGROUP_HPP
#define NET_MINECRAFT_PARTICLE_PARTICLEGROUP_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.particle.ParticleGroup
 * Remapped: lj
 */
namespace ParticleGroup {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("lj", "net/minecraft/core/particles/ParticleGroup", "net/minecraft/class_5878", "net/minecraft/particle/ParticleGroup", "net/minecraft/src/C_141791_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.particle.ParticleGroup#maxCount
    static jint get_field_maxCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "limit", "field_29078", "maxCount", "f_175815_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.particle.ParticleGroup#maxCount
    static void set_field_maxCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "limit", "field_29078", "maxCount", "f_175815_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleGroup#SPORE_BLOSSOM_AIR
    [[maybe_unused]] static jobject get_field_SPORE_BLOSSOM_AIR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPORE_BLOSSOM", "field_29077", "SPORE_BLOSSOM_AIR", "f_175814_"), "Llj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleGroup#SPORE_BLOSSOM_AIR
    [[maybe_unused]] static void set_field_SPORE_BLOSSOM_AIR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPORE_BLOSSOM", "field_29077", "SPORE_BLOSSOM_AIR", "f_175814_"), "Llj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getMaxCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getLimit", "method_34045", "getMaxCount", "m_175819_"), "()I");
    }

    static jint getMaxCount(const jobject& obj) {
                
       const auto methodID = methodID_getMaxCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_PARTICLE_PARTICLEGROUP_HPP