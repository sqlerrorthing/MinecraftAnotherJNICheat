// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_PARTICLE_PARTICLETYPES_HPP
#define NET_MINECRAFT_PARTICLE_PARTICLETYPES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.particle.ParticleTypes
 * Remapped: lm
 */
namespace ParticleTypes {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("lm", "net/minecraft/core/particles/ParticleTypes", "net/minecraft/class_2398", "net/minecraft/particle/ParticleTypes", "net/minecraft/src/C_4759_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#ANGRY_VILLAGER
    [[maybe_unused]] static jobject get_field_ANGRY_VILLAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ANGRY_VILLAGER", "field_11231", "ANGRY_VILLAGER", "f_123792_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#ANGRY_VILLAGER
    [[maybe_unused]] static void set_field_ANGRY_VILLAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ANGRY_VILLAGER", "field_11231", "ANGRY_VILLAGER", "f_123792_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#BLOCK
    [[maybe_unused]] static jobject get_field_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BLOCK", "field_11217", "BLOCK", "f_123794_"), "Lll;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#BLOCK
    [[maybe_unused]] static void set_field_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BLOCK", "field_11217", "BLOCK", "f_123794_"), "Lll;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#BLOCK_MARKER
    [[maybe_unused]] static jobject get_field_BLOCK_MARKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BLOCK_MARKER", "field_35434", "BLOCK_MARKER", "f_194652_"), "Lll;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#BLOCK_MARKER
    [[maybe_unused]] static void set_field_BLOCK_MARKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BLOCK_MARKER", "field_35434", "BLOCK_MARKER", "f_194652_"), "Lll;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#BUBBLE
    [[maybe_unused]] static jobject get_field_BUBBLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BUBBLE", "field_11247", "BUBBLE", "f_123795_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#BUBBLE
    [[maybe_unused]] static void set_field_BUBBLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BUBBLE", "field_11247", "BUBBLE", "f_123795_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#CLOUD
    [[maybe_unused]] static jobject get_field_CLOUD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CLOUD", "field_11204", "CLOUD", "f_123796_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#CLOUD
    [[maybe_unused]] static void set_field_CLOUD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CLOUD", "field_11204", "CLOUD", "f_123796_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#CRIT
    [[maybe_unused]] static jobject get_field_CRIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CRIT", "field_11205", "CRIT", "f_123797_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#CRIT
    [[maybe_unused]] static void set_field_CRIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CRIT", "field_11205", "CRIT", "f_123797_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DAMAGE_INDICATOR
    [[maybe_unused]] static jobject get_field_DAMAGE_INDICATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DAMAGE_INDICATOR", "field_11209", "DAMAGE_INDICATOR", "f_123798_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DAMAGE_INDICATOR
    [[maybe_unused]] static void set_field_DAMAGE_INDICATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DAMAGE_INDICATOR", "field_11209", "DAMAGE_INDICATOR", "f_123798_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DRAGON_BREATH
    [[maybe_unused]] static jobject get_field_DRAGON_BREATH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DRAGON_BREATH", "field_11216", "DRAGON_BREATH", "f_123799_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DRAGON_BREATH
    [[maybe_unused]] static void set_field_DRAGON_BREATH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DRAGON_BREATH", "field_11216", "DRAGON_BREATH", "f_123799_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DRIPPING_LAVA
    [[maybe_unused]] static jobject get_field_DRIPPING_LAVA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DRIPPING_LAVA", "field_11223", "DRIPPING_LAVA", "f_123800_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DRIPPING_LAVA
    [[maybe_unused]] static void set_field_DRIPPING_LAVA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DRIPPING_LAVA", "field_11223", "DRIPPING_LAVA", "f_123800_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FALLING_LAVA
    [[maybe_unused]] static jobject get_field_FALLING_LAVA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "FALLING_LAVA", "field_18304", "FALLING_LAVA", "f_123801_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FALLING_LAVA
    [[maybe_unused]] static void set_field_FALLING_LAVA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "FALLING_LAVA", "field_18304", "FALLING_LAVA", "f_123801_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#LANDING_LAVA
    [[maybe_unused]] static jobject get_field_LANDING_LAVA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LANDING_LAVA", "field_18305", "LANDING_LAVA", "f_123802_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#LANDING_LAVA
    [[maybe_unused]] static void set_field_LANDING_LAVA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LANDING_LAVA", "field_18305", "LANDING_LAVA", "f_123802_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DRIPPING_WATER
    [[maybe_unused]] static jobject get_field_DRIPPING_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "DRIPPING_WATER", "field_11232", "DRIPPING_WATER", "f_123803_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DRIPPING_WATER
    [[maybe_unused]] static void set_field_DRIPPING_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "DRIPPING_WATER", "field_11232", "DRIPPING_WATER", "f_123803_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FALLING_WATER
    [[maybe_unused]] static jobject get_field_FALLING_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "FALLING_WATER", "field_18306", "FALLING_WATER", "f_123804_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FALLING_WATER
    [[maybe_unused]] static void set_field_FALLING_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "FALLING_WATER", "field_18306", "FALLING_WATER", "f_123804_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DUST
    [[maybe_unused]] static jobject get_field_DUST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "DUST", "field_11212", "DUST", "f_123805_"), "Lll;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DUST
    [[maybe_unused]] static void set_field_DUST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "DUST", "field_11212", "DUST", "f_123805_"), "Lll;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DUST_COLOR_TRANSITION
    [[maybe_unused]] static jobject get_field_DUST_COLOR_TRANSITION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "DUST_COLOR_TRANSITION", "field_28276", "DUST_COLOR_TRANSITION", "f_175836_"), "Lll;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DUST_COLOR_TRANSITION
    [[maybe_unused]] static void set_field_DUST_COLOR_TRANSITION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "DUST_COLOR_TRANSITION", "field_28276", "DUST_COLOR_TRANSITION", "f_175836_"), "Lll;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#EFFECT
    [[maybe_unused]] static jobject get_field_EFFECT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "EFFECT", "field_11245", "EFFECT", "f_123806_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#EFFECT
    [[maybe_unused]] static void set_field_EFFECT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "EFFECT", "field_11245", "EFFECT", "f_123806_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#ELDER_GUARDIAN
    [[maybe_unused]] static jobject get_field_ELDER_GUARDIAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "ELDER_GUARDIAN", "field_11250", "ELDER_GUARDIAN", "f_123807_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#ELDER_GUARDIAN
    [[maybe_unused]] static void set_field_ELDER_GUARDIAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "ELDER_GUARDIAN", "field_11250", "ELDER_GUARDIAN", "f_123807_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#ENCHANTED_HIT
    [[maybe_unused]] static jobject get_field_ENCHANTED_HIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "ENCHANTED_HIT", "field_11208", "ENCHANTED_HIT", "f_123808_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#ENCHANTED_HIT
    [[maybe_unused]] static void set_field_ENCHANTED_HIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "ENCHANTED_HIT", "field_11208", "ENCHANTED_HIT", "f_123808_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#ENCHANT
    [[maybe_unused]] static jobject get_field_ENCHANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "ENCHANT", "field_11215", "ENCHANT", "f_123809_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#ENCHANT
    [[maybe_unused]] static void set_field_ENCHANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "ENCHANT", "field_11215", "ENCHANT", "f_123809_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#END_ROD
    [[maybe_unused]] static jobject get_field_END_ROD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "END_ROD", "field_11207", "END_ROD", "f_123810_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#END_ROD
    [[maybe_unused]] static void set_field_END_ROD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "END_ROD", "field_11207", "END_ROD", "f_123810_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#ENTITY_EFFECT
    [[maybe_unused]] static jobject get_field_ENTITY_EFFECT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ENTITY_EFFECT", "field_11226", "ENTITY_EFFECT", "f_123811_"), "Lll;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#ENTITY_EFFECT
    [[maybe_unused]] static void set_field_ENTITY_EFFECT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ENTITY_EFFECT", "field_11226", "ENTITY_EFFECT", "f_123811_"), "Lll;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#EXPLOSION_EMITTER
    [[maybe_unused]] static jobject get_field_EXPLOSION_EMITTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "EXPLOSION_EMITTER", "field_11221", "EXPLOSION_EMITTER", "f_123812_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#EXPLOSION_EMITTER
    [[maybe_unused]] static void set_field_EXPLOSION_EMITTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "EXPLOSION_EMITTER", "field_11221", "EXPLOSION_EMITTER", "f_123812_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#EXPLOSION
    [[maybe_unused]] static jobject get_field_EXPLOSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "EXPLOSION", "field_11236", "EXPLOSION", "f_123813_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#EXPLOSION
    [[maybe_unused]] static void set_field_EXPLOSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "EXPLOSION", "field_11236", "EXPLOSION", "f_123813_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#GUST
    [[maybe_unused]] static jobject get_field_GUST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "GUST", "field_47494", "GUST", "f_302334_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#GUST
    [[maybe_unused]] static void set_field_GUST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "GUST", "field_47494", "GUST", "f_302334_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SMALL_GUST
    [[maybe_unused]] static jobject get_field_SMALL_GUST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SMALL_GUST", "field_50252", "SMALL_GUST", "f_314220_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SMALL_GUST
    [[maybe_unused]] static void set_field_SMALL_GUST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SMALL_GUST", "field_50252", "SMALL_GUST", "f_314220_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#GUST_EMITTER_LARGE
    [[maybe_unused]] static jobject get_field_GUST_EMITTER_LARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "GUST_EMITTER_LARGE", "field_49140", "GUST_EMITTER_LARGE", "f_316181_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#GUST_EMITTER_LARGE
    [[maybe_unused]] static void set_field_GUST_EMITTER_LARGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "GUST_EMITTER_LARGE", "field_49140", "GUST_EMITTER_LARGE", "f_316181_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#GUST_EMITTER_SMALL
    [[maybe_unused]] static jobject get_field_GUST_EMITTER_SMALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "GUST_EMITTER_SMALL", "field_49139", "GUST_EMITTER_SMALL", "f_315099_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#GUST_EMITTER_SMALL
    [[maybe_unused]] static void set_field_GUST_EMITTER_SMALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "GUST_EMITTER_SMALL", "field_49139", "GUST_EMITTER_SMALL", "f_315099_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SONIC_BOOM
    [[maybe_unused]] static jobject get_field_SONIC_BOOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SONIC_BOOM", "field_38908", "SONIC_BOOM", "f_235902_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SONIC_BOOM
    [[maybe_unused]] static void set_field_SONIC_BOOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SONIC_BOOM", "field_38908", "SONIC_BOOM", "f_235902_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FALLING_DUST
    [[maybe_unused]] static jobject get_field_FALLING_DUST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "FALLING_DUST", "field_11206", "FALLING_DUST", "f_123814_"), "Lll;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FALLING_DUST
    [[maybe_unused]] static void set_field_FALLING_DUST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "FALLING_DUST", "field_11206", "FALLING_DUST", "f_123814_"), "Lll;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FIREWORK
    [[maybe_unused]] static jobject get_field_FIREWORK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "FIREWORK", "field_11248", "FIREWORK", "f_123815_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FIREWORK
    [[maybe_unused]] static void set_field_FIREWORK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "FIREWORK", "field_11248", "FIREWORK", "f_123815_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FISHING
    [[maybe_unused]] static jobject get_field_FISHING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "FISHING", "field_11244", "FISHING", "f_123816_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FISHING
    [[maybe_unused]] static void set_field_FISHING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "FISHING", "field_11244", "FISHING", "f_123816_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FLAME
    [[maybe_unused]] static jobject get_field_FLAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "FLAME", "field_11240", "FLAME", "f_123744_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FLAME
    [[maybe_unused]] static void set_field_FLAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "FLAME", "field_11240", "FLAME", "f_123744_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#INFESTED
    [[maybe_unused]] static jobject get_field_INFESTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "INFESTED", "field_50245", "INFESTED", "f_314307_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#INFESTED
    [[maybe_unused]] static void set_field_INFESTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "INFESTED", "field_50245", "INFESTED", "f_314307_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#CHERRY_LEAVES
    [[maybe_unused]] static jobject get_field_CHERRY_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "CHERRY_LEAVES", "field_43379", "CHERRY_LEAVES", "f_276452_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#CHERRY_LEAVES
    [[maybe_unused]] static void set_field_CHERRY_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "CHERRY_LEAVES", "field_43379", "CHERRY_LEAVES", "f_276452_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SCULK_SOUL
    [[maybe_unused]] static jobject get_field_SCULK_SOUL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SCULK_SOUL", "field_38002", "SCULK_SOUL", "f_235898_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SCULK_SOUL
    [[maybe_unused]] static void set_field_SCULK_SOUL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SCULK_SOUL", "field_38002", "SCULK_SOUL", "f_235898_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SCULK_CHARGE
    [[maybe_unused]] static jobject get_field_SCULK_CHARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SCULK_CHARGE", "field_38003", "SCULK_CHARGE", "f_235899_"), "Lll;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SCULK_CHARGE
    [[maybe_unused]] static void set_field_SCULK_CHARGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SCULK_CHARGE", "field_38003", "SCULK_CHARGE", "f_235899_"), "Lll;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SCULK_CHARGE_POP
    [[maybe_unused]] static jobject get_field_SCULK_CHARGE_POP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SCULK_CHARGE_POP", "field_38004", "SCULK_CHARGE_POP", "f_235900_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SCULK_CHARGE_POP
    [[maybe_unused]] static void set_field_SCULK_CHARGE_POP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SCULK_CHARGE_POP", "field_38004", "SCULK_CHARGE_POP", "f_235900_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SOUL_FIRE_FLAME
    [[maybe_unused]] static jobject get_field_SOUL_FIRE_FLAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SOUL_FIRE_FLAME", "field_22246", "SOUL_FIRE_FLAME", "f_123745_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SOUL_FIRE_FLAME
    [[maybe_unused]] static void set_field_SOUL_FIRE_FLAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SOUL_FIRE_FLAME", "field_22246", "SOUL_FIRE_FLAME", "f_123745_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SOUL
    [[maybe_unused]] static jobject get_field_SOUL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SOUL", "field_23114", "SOUL", "f_123746_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SOUL
    [[maybe_unused]] static void set_field_SOUL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SOUL", "field_23114", "SOUL", "f_123746_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FLASH
    [[maybe_unused]] static jobject get_field_FLASH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "FLASH", "field_17909", "FLASH", "f_123747_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FLASH
    [[maybe_unused]] static void set_field_FLASH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "FLASH", "field_17909", "FLASH", "f_123747_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#HAPPY_VILLAGER
    [[maybe_unused]] static jobject get_field_HAPPY_VILLAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "HAPPY_VILLAGER", "field_11211", "HAPPY_VILLAGER", "f_123748_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#HAPPY_VILLAGER
    [[maybe_unused]] static void set_field_HAPPY_VILLAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "HAPPY_VILLAGER", "field_11211", "HAPPY_VILLAGER", "f_123748_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#COMPOSTER
    [[maybe_unused]] static jobject get_field_COMPOSTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "COMPOSTER", "field_17741", "COMPOSTER", "f_123749_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#COMPOSTER
    [[maybe_unused]] static void set_field_COMPOSTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "COMPOSTER", "field_17741", "COMPOSTER", "f_123749_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#HEART
    [[maybe_unused]] static jobject get_field_HEART() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "HEART", "field_11201", "HEART", "f_123750_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#HEART
    [[maybe_unused]] static void set_field_HEART(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "HEART", "field_11201", "HEART", "f_123750_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#INSTANT_EFFECT
    [[maybe_unused]] static jobject get_field_INSTANT_EFFECT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "INSTANT_EFFECT", "field_11213", "INSTANT_EFFECT", "f_123751_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#INSTANT_EFFECT
    [[maybe_unused]] static void set_field_INSTANT_EFFECT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "INSTANT_EFFECT", "field_11213", "INSTANT_EFFECT", "f_123751_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#ITEM
    [[maybe_unused]] static jobject get_field_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "ITEM", "field_11218", "ITEM", "f_123752_"), "Lll;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#ITEM
    [[maybe_unused]] static void set_field_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "ITEM", "field_11218", "ITEM", "f_123752_"), "Lll;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#VIBRATION
    [[maybe_unused]] static jobject get_field_VIBRATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "VIBRATION", "field_28275", "VIBRATION", "f_175820_"), "Lll;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#VIBRATION
    [[maybe_unused]] static void set_field_VIBRATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "VIBRATION", "field_28275", "VIBRATION", "f_175820_"), "Lll;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#ITEM_SLIME
    [[maybe_unused]] static jobject get_field_ITEM_SLIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "ITEM_SLIME", "field_11246", "ITEM_SLIME", "f_123753_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#ITEM_SLIME
    [[maybe_unused]] static void set_field_ITEM_SLIME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "ITEM_SLIME", "field_11246", "ITEM_SLIME", "f_123753_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#ITEM_COBWEB
    [[maybe_unused]] static jobject get_field_ITEM_COBWEB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "ITEM_COBWEB", "field_50246", "ITEM_COBWEB", "f_315496_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#ITEM_COBWEB
    [[maybe_unused]] static void set_field_ITEM_COBWEB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "ITEM_COBWEB", "field_50246", "ITEM_COBWEB", "f_315496_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#ITEM_SNOWBALL
    [[maybe_unused]] static jobject get_field_ITEM_SNOWBALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "ITEM_SNOWBALL", "field_11230", "ITEM_SNOWBALL", "f_123754_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#ITEM_SNOWBALL
    [[maybe_unused]] static void set_field_ITEM_SNOWBALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "ITEM_SNOWBALL", "field_11230", "ITEM_SNOWBALL", "f_123754_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#LARGE_SMOKE
    [[maybe_unused]] static jobject get_field_LARGE_SMOKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "LARGE_SMOKE", "field_11237", "LARGE_SMOKE", "f_123755_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#LARGE_SMOKE
    [[maybe_unused]] static void set_field_LARGE_SMOKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "LARGE_SMOKE", "field_11237", "LARGE_SMOKE", "f_123755_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#LAVA
    [[maybe_unused]] static jobject get_field_LAVA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "LAVA", "field_11239", "LAVA", "f_123756_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#LAVA
    [[maybe_unused]] static void set_field_LAVA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "LAVA", "field_11239", "LAVA", "f_123756_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#MYCELIUM
    [[maybe_unused]] static jobject get_field_MYCELIUM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "MYCELIUM", "field_11219", "MYCELIUM", "f_123757_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#MYCELIUM
    [[maybe_unused]] static void set_field_MYCELIUM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "MYCELIUM", "field_11219", "MYCELIUM", "f_123757_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#NOTE
    [[maybe_unused]] static jobject get_field_NOTE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "NOTE", "field_11224", "NOTE", "f_123758_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#NOTE
    [[maybe_unused]] static void set_field_NOTE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "NOTE", "field_11224", "NOTE", "f_123758_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#POOF
    [[maybe_unused]] static jobject get_field_POOF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "POOF", "field_11203", "POOF", "f_123759_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#POOF
    [[maybe_unused]] static void set_field_POOF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "POOF", "field_11203", "POOF", "f_123759_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#PORTAL
    [[maybe_unused]] static jobject get_field_PORTAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "PORTAL", "field_11214", "PORTAL", "f_123760_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#PORTAL
    [[maybe_unused]] static void set_field_PORTAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "PORTAL", "field_11214", "PORTAL", "f_123760_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#RAIN
    [[maybe_unused]] static jobject get_field_RAIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "RAIN", "field_11242", "RAIN", "f_123761_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#RAIN
    [[maybe_unused]] static void set_field_RAIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "RAIN", "field_11242", "RAIN", "f_123761_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SMOKE
    [[maybe_unused]] static jobject get_field_SMOKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "SMOKE", "field_11251", "SMOKE", "f_123762_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SMOKE
    [[maybe_unused]] static void set_field_SMOKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "SMOKE", "field_11251", "SMOKE", "f_123762_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#WHITE_SMOKE
    [[maybe_unused]] static jobject get_field_WHITE_SMOKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "WHITE_SMOKE", "field_46911", "WHITE_SMOKE", "f_302345_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#WHITE_SMOKE
    [[maybe_unused]] static void set_field_WHITE_SMOKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "WHITE_SMOKE", "field_46911", "WHITE_SMOKE", "f_302345_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SNEEZE
    [[maybe_unused]] static jobject get_field_SNEEZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "SNEEZE", "field_11234", "SNEEZE", "f_123763_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SNEEZE
    [[maybe_unused]] static void set_field_SNEEZE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "SNEEZE", "field_11234", "SNEEZE", "f_123763_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SPIT
    [[maybe_unused]] static jobject get_field_SPIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "SPIT", "field_11228", "SPIT", "f_123764_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SPIT
    [[maybe_unused]] static void set_field_SPIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "SPIT", "field_11228", "SPIT", "f_123764_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SQUID_INK
    [[maybe_unused]] static jobject get_field_SQUID_INK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "SQUID_INK", "field_11233", "SQUID_INK", "f_123765_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SQUID_INK
    [[maybe_unused]] static void set_field_SQUID_INK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "SQUID_INK", "field_11233", "SQUID_INK", "f_123765_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SWEEP_ATTACK
    [[maybe_unused]] static jobject get_field_SWEEP_ATTACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "SWEEP_ATTACK", "field_11227", "SWEEP_ATTACK", "f_123766_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SWEEP_ATTACK
    [[maybe_unused]] static void set_field_SWEEP_ATTACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "SWEEP_ATTACK", "field_11227", "SWEEP_ATTACK", "f_123766_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#TOTEM_OF_UNDYING
    [[maybe_unused]] static jobject get_field_TOTEM_OF_UNDYING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "TOTEM_OF_UNDYING", "field_11220", "TOTEM_OF_UNDYING", "f_123767_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#TOTEM_OF_UNDYING
    [[maybe_unused]] static void set_field_TOTEM_OF_UNDYING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "TOTEM_OF_UNDYING", "field_11220", "TOTEM_OF_UNDYING", "f_123767_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#UNDERWATER
    [[maybe_unused]] static jobject get_field_UNDERWATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "UNDERWATER", "field_11210", "UNDERWATER", "f_123768_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#UNDERWATER
    [[maybe_unused]] static void set_field_UNDERWATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "UNDERWATER", "field_11210", "UNDERWATER", "f_123768_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SPLASH
    [[maybe_unused]] static jobject get_field_SPLASH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "SPLASH", "field_11202", "SPLASH", "f_123769_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SPLASH
    [[maybe_unused]] static void set_field_SPLASH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "SPLASH", "field_11202", "SPLASH", "f_123769_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#WITCH
    [[maybe_unused]] static jobject get_field_WITCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "WITCH", "field_11249", "WITCH", "f_123771_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#WITCH
    [[maybe_unused]] static void set_field_WITCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "WITCH", "field_11249", "WITCH", "f_123771_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#BUBBLE_POP
    [[maybe_unused]] static jobject get_field_BUBBLE_POP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "BUBBLE_POP", "field_11241", "BUBBLE_POP", "f_123772_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#BUBBLE_POP
    [[maybe_unused]] static void set_field_BUBBLE_POP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "BUBBLE_POP", "field_11241", "BUBBLE_POP", "f_123772_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#CURRENT_DOWN
    [[maybe_unused]] static jobject get_field_CURRENT_DOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "CURRENT_DOWN", "field_11243", "CURRENT_DOWN", "f_123773_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#CURRENT_DOWN
    [[maybe_unused]] static void set_field_CURRENT_DOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "CURRENT_DOWN", "field_11243", "CURRENT_DOWN", "f_123773_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#BUBBLE_COLUMN_UP
    [[maybe_unused]] static jobject get_field_BUBBLE_COLUMN_UP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "BUBBLE_COLUMN_UP", "field_11238", "BUBBLE_COLUMN_UP", "f_123774_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#BUBBLE_COLUMN_UP
    [[maybe_unused]] static void set_field_BUBBLE_COLUMN_UP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "BUBBLE_COLUMN_UP", "field_11238", "BUBBLE_COLUMN_UP", "f_123774_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#NAUTILUS
    [[maybe_unused]] static jobject get_field_NAUTILUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "NAUTILUS", "field_11229", "NAUTILUS", "f_123775_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#NAUTILUS
    [[maybe_unused]] static void set_field_NAUTILUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "NAUTILUS", "field_11229", "NAUTILUS", "f_123775_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DOLPHIN
    [[maybe_unused]] static jobject get_field_DOLPHIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "DOLPHIN", "field_11222", "DOLPHIN", "f_123776_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DOLPHIN
    [[maybe_unused]] static void set_field_DOLPHIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "DOLPHIN", "field_11222", "DOLPHIN", "f_123776_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#CAMPFIRE_COSY_SMOKE
    [[maybe_unused]] static jobject get_field_CAMPFIRE_COSY_SMOKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "CAMPFIRE_COSY_SMOKE", "field_17430", "CAMPFIRE_COSY_SMOKE", "f_123777_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#CAMPFIRE_COSY_SMOKE
    [[maybe_unused]] static void set_field_CAMPFIRE_COSY_SMOKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "CAMPFIRE_COSY_SMOKE", "field_17430", "CAMPFIRE_COSY_SMOKE", "f_123777_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#CAMPFIRE_SIGNAL_SMOKE
    [[maybe_unused]] static jobject get_field_CAMPFIRE_SIGNAL_SMOKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "CAMPFIRE_SIGNAL_SMOKE", "field_17431", "CAMPFIRE_SIGNAL_SMOKE", "f_123778_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#CAMPFIRE_SIGNAL_SMOKE
    [[maybe_unused]] static void set_field_CAMPFIRE_SIGNAL_SMOKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "CAMPFIRE_SIGNAL_SMOKE", "field_17431", "CAMPFIRE_SIGNAL_SMOKE", "f_123778_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DRIPPING_HONEY
    [[maybe_unused]] static jobject get_field_DRIPPING_HONEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "DRIPPING_HONEY", "field_20534", "DRIPPING_HONEY", "f_123779_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DRIPPING_HONEY
    [[maybe_unused]] static void set_field_DRIPPING_HONEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "DRIPPING_HONEY", "field_20534", "DRIPPING_HONEY", "f_123779_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FALLING_HONEY
    [[maybe_unused]] static jobject get_field_FALLING_HONEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "FALLING_HONEY", "field_20535", "FALLING_HONEY", "f_123780_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FALLING_HONEY
    [[maybe_unused]] static void set_field_FALLING_HONEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "FALLING_HONEY", "field_20535", "FALLING_HONEY", "f_123780_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#LANDING_HONEY
    [[maybe_unused]] static jobject get_field_LANDING_HONEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "LANDING_HONEY", "field_20536", "LANDING_HONEY", "f_123781_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#LANDING_HONEY
    [[maybe_unused]] static void set_field_LANDING_HONEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "LANDING_HONEY", "field_20536", "LANDING_HONEY", "f_123781_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FALLING_NECTAR
    [[maybe_unused]] static jobject get_field_FALLING_NECTAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "FALLING_NECTAR", "field_20537", "FALLING_NECTAR", "f_123782_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FALLING_NECTAR
    [[maybe_unused]] static void set_field_FALLING_NECTAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "FALLING_NECTAR", "field_20537", "FALLING_NECTAR", "f_123782_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FALLING_SPORE_BLOSSOM
    [[maybe_unused]] static jobject get_field_FALLING_SPORE_BLOSSOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "FALLING_SPORE_BLOSSOM", "field_28802", "FALLING_SPORE_BLOSSOM", "f_175832_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FALLING_SPORE_BLOSSOM
    [[maybe_unused]] static void set_field_FALLING_SPORE_BLOSSOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "FALLING_SPORE_BLOSSOM", "field_28802", "FALLING_SPORE_BLOSSOM", "f_175832_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#ASH
    [[maybe_unused]] static jobject get_field_ASH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "ASH", "field_22247", "ASH", "f_123783_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#ASH
    [[maybe_unused]] static void set_field_ASH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "ASH", "field_22247", "ASH", "f_123783_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#CRIMSON_SPORE
    [[maybe_unused]] static jobject get_field_CRIMSON_SPORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "CRIMSON_SPORE", "field_22248", "CRIMSON_SPORE", "f_123784_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#CRIMSON_SPORE
    [[maybe_unused]] static void set_field_CRIMSON_SPORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "CRIMSON_SPORE", "field_22248", "CRIMSON_SPORE", "f_123784_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#WARPED_SPORE
    [[maybe_unused]] static jobject get_field_WARPED_SPORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "WARPED_SPORE", "field_22249", "WARPED_SPORE", "f_123785_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#WARPED_SPORE
    [[maybe_unused]] static void set_field_WARPED_SPORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "WARPED_SPORE", "field_22249", "WARPED_SPORE", "f_123785_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SPORE_BLOSSOM_AIR
    [[maybe_unused]] static jobject get_field_SPORE_BLOSSOM_AIR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "SPORE_BLOSSOM_AIR", "field_28803", "SPORE_BLOSSOM_AIR", "f_175833_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SPORE_BLOSSOM_AIR
    [[maybe_unused]] static void set_field_SPORE_BLOSSOM_AIR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "SPORE_BLOSSOM_AIR", "field_28803", "SPORE_BLOSSOM_AIR", "f_175833_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DRIPPING_OBSIDIAN_TEAR
    [[maybe_unused]] static jobject get_field_DRIPPING_OBSIDIAN_TEAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "DRIPPING_OBSIDIAN_TEAR", "field_22446", "DRIPPING_OBSIDIAN_TEAR", "f_123786_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DRIPPING_OBSIDIAN_TEAR
    [[maybe_unused]] static void set_field_DRIPPING_OBSIDIAN_TEAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "DRIPPING_OBSIDIAN_TEAR", "field_22446", "DRIPPING_OBSIDIAN_TEAR", "f_123786_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FALLING_OBSIDIAN_TEAR
    [[maybe_unused]] static jobject get_field_FALLING_OBSIDIAN_TEAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "FALLING_OBSIDIAN_TEAR", "field_22447", "FALLING_OBSIDIAN_TEAR", "f_123787_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FALLING_OBSIDIAN_TEAR
    [[maybe_unused]] static void set_field_FALLING_OBSIDIAN_TEAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "FALLING_OBSIDIAN_TEAR", "field_22447", "FALLING_OBSIDIAN_TEAR", "f_123787_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#LANDING_OBSIDIAN_TEAR
    [[maybe_unused]] static jobject get_field_LANDING_OBSIDIAN_TEAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "LANDING_OBSIDIAN_TEAR", "field_22448", "LANDING_OBSIDIAN_TEAR", "f_123788_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#LANDING_OBSIDIAN_TEAR
    [[maybe_unused]] static void set_field_LANDING_OBSIDIAN_TEAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "LANDING_OBSIDIAN_TEAR", "field_22448", "LANDING_OBSIDIAN_TEAR", "f_123788_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#REVERSE_PORTAL
    [[maybe_unused]] static jobject get_field_REVERSE_PORTAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "REVERSE_PORTAL", "field_23190", "REVERSE_PORTAL", "f_123789_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#REVERSE_PORTAL
    [[maybe_unused]] static void set_field_REVERSE_PORTAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "REVERSE_PORTAL", "field_23190", "REVERSE_PORTAL", "f_123789_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#WHITE_ASH
    [[maybe_unused]] static jobject get_field_WHITE_ASH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "WHITE_ASH", "field_23956", "WHITE_ASH", "f_123790_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#WHITE_ASH
    [[maybe_unused]] static void set_field_WHITE_ASH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "WHITE_ASH", "field_23956", "WHITE_ASH", "f_123790_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SMALL_FLAME
    [[maybe_unused]] static jobject get_field_SMALL_FLAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "SMALL_FLAME", "field_27783", "SMALL_FLAME", "f_175834_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SMALL_FLAME
    [[maybe_unused]] static void set_field_SMALL_FLAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "SMALL_FLAME", "field_27783", "SMALL_FLAME", "f_175834_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SNOWFLAKE
    [[maybe_unused]] static jobject get_field_SNOWFLAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "SNOWFLAKE", "field_28013", "SNOWFLAKE", "f_175821_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SNOWFLAKE
    [[maybe_unused]] static void set_field_SNOWFLAKE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "SNOWFLAKE", "field_28013", "SNOWFLAKE", "f_175821_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DRIPPING_DRIPSTONE_LAVA
    [[maybe_unused]] static jobject get_field_DRIPPING_DRIPSTONE_LAVA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "DRIPPING_DRIPSTONE_LAVA", "field_28076", "DRIPPING_DRIPSTONE_LAVA", "f_175822_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DRIPPING_DRIPSTONE_LAVA
    [[maybe_unused]] static void set_field_DRIPPING_DRIPSTONE_LAVA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "DRIPPING_DRIPSTONE_LAVA", "field_28076", "DRIPPING_DRIPSTONE_LAVA", "f_175822_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FALLING_DRIPSTONE_LAVA
    [[maybe_unused]] static jobject get_field_FALLING_DRIPSTONE_LAVA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "FALLING_DRIPSTONE_LAVA", "field_28077", "FALLING_DRIPSTONE_LAVA", "f_175823_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FALLING_DRIPSTONE_LAVA
    [[maybe_unused]] static void set_field_FALLING_DRIPSTONE_LAVA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "FALLING_DRIPSTONE_LAVA", "field_28077", "FALLING_DRIPSTONE_LAVA", "f_175823_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DRIPPING_DRIPSTONE_WATER
    [[maybe_unused]] static jobject get_field_DRIPPING_DRIPSTONE_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "DRIPPING_DRIPSTONE_WATER", "field_28078", "DRIPPING_DRIPSTONE_WATER", "f_175824_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DRIPPING_DRIPSTONE_WATER
    [[maybe_unused]] static void set_field_DRIPPING_DRIPSTONE_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "DRIPPING_DRIPSTONE_WATER", "field_28078", "DRIPPING_DRIPSTONE_WATER", "f_175824_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#FALLING_DRIPSTONE_WATER
    [[maybe_unused]] static jobject get_field_FALLING_DRIPSTONE_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "FALLING_DRIPSTONE_WATER", "field_28079", "FALLING_DRIPSTONE_WATER", "f_175825_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#FALLING_DRIPSTONE_WATER
    [[maybe_unused]] static void set_field_FALLING_DRIPSTONE_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "FALLING_DRIPSTONE_WATER", "field_28079", "FALLING_DRIPSTONE_WATER", "f_175825_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#GLOW_SQUID_INK
    [[maybe_unused]] static jobject get_field_GLOW_SQUID_INK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "GLOW_SQUID_INK", "field_28478", "GLOW_SQUID_INK", "f_175826_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#GLOW_SQUID_INK
    [[maybe_unused]] static void set_field_GLOW_SQUID_INK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "GLOW_SQUID_INK", "field_28478", "GLOW_SQUID_INK", "f_175826_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#GLOW
    [[maybe_unused]] static jobject get_field_GLOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "GLOW", "field_28479", "GLOW", "f_175827_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#GLOW
    [[maybe_unused]] static void set_field_GLOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "GLOW", "field_28479", "GLOW", "f_175827_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#WAX_ON
    [[maybe_unused]] static jobject get_field_WAX_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "WAX_ON", "field_29642", "WAX_ON", "f_175828_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#WAX_ON
    [[maybe_unused]] static void set_field_WAX_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "WAX_ON", "field_29642", "WAX_ON", "f_175828_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#WAX_OFF
    [[maybe_unused]] static jobject get_field_WAX_OFF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "WAX_OFF", "field_29643", "WAX_OFF", "f_175829_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#WAX_OFF
    [[maybe_unused]] static void set_field_WAX_OFF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "WAX_OFF", "field_29643", "WAX_OFF", "f_175829_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#ELECTRIC_SPARK
    [[maybe_unused]] static jobject get_field_ELECTRIC_SPARK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "ELECTRIC_SPARK", "field_29644", "ELECTRIC_SPARK", "f_175830_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#ELECTRIC_SPARK
    [[maybe_unused]] static void set_field_ELECTRIC_SPARK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "ELECTRIC_SPARK", "field_29644", "ELECTRIC_SPARK", "f_175830_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SCRAPE
    [[maybe_unused]] static jobject get_field_SCRAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "SCRAPE", "field_29645", "SCRAPE", "f_175831_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SCRAPE
    [[maybe_unused]] static void set_field_SCRAPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "SCRAPE", "field_29645", "SCRAPE", "f_175831_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#SHRIEK
    [[maybe_unused]] static jobject get_field_SHRIEK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "SHRIEK", "field_38357", "SHRIEK", "f_235901_"), "Lll;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#SHRIEK
    [[maybe_unused]] static void set_field_SHRIEK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "SHRIEK", "field_38357", "SHRIEK", "f_235901_"), "Lll;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#EGG_CRACK
    [[maybe_unused]] static jobject get_field_EGG_CRACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "EGG_CRACK", "field_43380", "EGG_CRACK", "f_276512_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#EGG_CRACK
    [[maybe_unused]] static void set_field_EGG_CRACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "EGG_CRACK", "field_43380", "EGG_CRACK", "f_276512_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DUST_PLUME
    [[maybe_unused]] static jobject get_field_DUST_PLUME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "DUST_PLUME", "field_46763", "DUST_PLUME", "f_303068_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DUST_PLUME
    [[maybe_unused]] static void set_field_DUST_PLUME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "DUST_PLUME", "field_46763", "DUST_PLUME", "f_303068_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#TRIAL_SPAWNER_DETECTION
    [[maybe_unused]] static jobject get_field_TRIAL_SPAWNER_DETECTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "TRIAL_SPAWNER_DETECTED_PLAYER", "field_47493", "TRIAL_SPAWNER_DETECTION", "f_314928_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#TRIAL_SPAWNER_DETECTION
    [[maybe_unused]] static void set_field_TRIAL_SPAWNER_DETECTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "TRIAL_SPAWNER_DETECTED_PLAYER", "field_47493", "TRIAL_SPAWNER_DETECTION", "f_314928_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#TRIAL_SPAWNER_DETECTION_OMINOUS
    [[maybe_unused]] static jobject get_field_TRIAL_SPAWNER_DETECTION_OMINOUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "TRIAL_SPAWNER_DETECTED_PLAYER_OMINOUS", "field_50247", "TRIAL_SPAWNER_DETECTION_OMINOUS", "f_314692_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#TRIAL_SPAWNER_DETECTION_OMINOUS
    [[maybe_unused]] static void set_field_TRIAL_SPAWNER_DETECTION_OMINOUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "TRIAL_SPAWNER_DETECTED_PLAYER_OMINOUS", "field_50247", "TRIAL_SPAWNER_DETECTION_OMINOUS", "f_314692_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#VAULT_CONNECTION
    [[maybe_unused]] static jobject get_field_VAULT_CONNECTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "VAULT_CONNECTION", "field_48975", "VAULT_CONNECTION", "f_314380_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#VAULT_CONNECTION
    [[maybe_unused]] static void set_field_VAULT_CONNECTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "VAULT_CONNECTION", "field_48975", "VAULT_CONNECTION", "f_314380_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#DUST_PILLAR
    [[maybe_unused]] static jobject get_field_DUST_PILLAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "DUST_PILLAR", "field_50248", "DUST_PILLAR", "f_314186_"), "Lll;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#DUST_PILLAR
    [[maybe_unused]] static void set_field_DUST_PILLAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "DUST_PILLAR", "field_50248", "DUST_PILLAR", "f_314186_"), "Lll;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#OMINOUS_SPAWNING
    [[maybe_unused]] static jobject get_field_OMINOUS_SPAWNING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "OMINOUS_SPAWNING", "field_50249", "OMINOUS_SPAWNING", "f_314395_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#OMINOUS_SPAWNING
    [[maybe_unused]] static void set_field_OMINOUS_SPAWNING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "OMINOUS_SPAWNING", "field_50249", "OMINOUS_SPAWNING", "f_314395_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#RAID_OMEN
    [[maybe_unused]] static jobject get_field_RAID_OMEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "RAID_OMEN", "field_50250", "RAID_OMEN", "f_314966_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#RAID_OMEN
    [[maybe_unused]] static void set_field_RAID_OMEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "RAID_OMEN", "field_50250", "RAID_OMEN", "f_314966_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#TRIAL_OMEN
    [[maybe_unused]] static jobject get_field_TRIAL_OMEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "TRIAL_OMEN", "field_50251", "TRIAL_OMEN", "f_317125_"), "Llq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#TRIAL_OMEN
    [[maybe_unused]] static void set_field_TRIAL_OMEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "TRIAL_OMEN", "field_50251", "TRIAL_OMEN", "f_317125_"), "Llq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#TYPE_CODEC
    [[maybe_unused]] static jobject get_field_TYPE_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "CODEC", "field_25125", "TYPE_CODEC", "f_123791_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#TYPE_CODEC
    [[maybe_unused]] static void set_field_TYPE_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "CODEC", "field_25125", "TYPE_CODEC", "f_123791_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.particle.ParticleTypes#PACKET_CODEC
    [[maybe_unused]] static jobject get_field_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "STREAM_CODEC", "field_48456", "PACKET_CODEC", "f_314250_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.particle.ParticleTypes#PACKET_CODEC
    [[maybe_unused]] static void set_field_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "STREAM_CODEC", "field_48456", "PACKET_CODEC", "f_314250_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_10303", "register", "m_123824_"), "(Ljava/lang/String;Z)Llq;");
    }

    static jobject register(const jobject& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_42022", "register", "m_235905_"), "(Ljava/lang/String;ZLjava/util/function/Function;Ljava/util/function/Function;)Lll;");
    }

    static jobject _register(const jobject& arg0, const jboolean& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_PARTICLE_PARTICLETYPES_HPP