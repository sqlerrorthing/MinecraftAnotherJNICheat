// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_CHASE_CHASESERVER_HPP
#define NET_MINECRAFT_SERVER_CHASE_CHASESERVER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.chase.ChaseServer
 * Remapped: alw
 */
namespace ChaseServer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("alw", "net/minecraft/server/chase/ChaseServer", "net/minecraft/class_6632", "net/minecraft/server/chase/ChaseServer", "net/minecraft/src/C_183130_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.chase.ChaseServer#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_34991", "LOGGER", "f_196022_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_34991", "LOGGER", "f_196022_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.chase.ChaseServer#ip
    static jobject get_field_ip(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "serverBindAddress", "field_34992", "ip", "f_196023_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer#ip
    static void set_field_ip(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "serverBindAddress", "field_34992", "ip", "f_196023_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.chase.ChaseServer#port
    static jint get_field_port(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "serverPort", "field_34993", "port", "f_196024_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer#port
    static void set_field_port(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "serverPort", "field_34993", "port", "f_196024_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.chase.ChaseServer#playerManager
    static jobject get_field_playerManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "playerList", "field_34994", "playerManager", "f_196025_"), "Laur;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer#playerManager
    static void set_field_playerManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "playerList", "field_34994", "playerManager", "f_196025_"), "Laur;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.chase.ChaseServer#interval
    static jint get_field_interval(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "broadcastIntervalMs", "field_34995", "interval", "f_196026_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer#interval
    static void set_field_interval(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "broadcastIntervalMs", "field_34995", "interval", "f_196026_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.chase.ChaseServer#running
    static jboolean get_field_running(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "wantsToRun", "field_34996", "running", "f_196027_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer#running
    static void set_field_running(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "wantsToRun", "field_34996", "running", "f_196027_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.chase.ChaseServer#socket
    static jobject get_field_socket(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "serverSocket", "field_34997", "socket", "f_196028_"), "Ljava/net/ServerSocket;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer#socket
    static void set_field_socket(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "serverSocket", "field_34997", "socket", "f_196028_"), "Ljava/net/ServerSocket;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.chase.ChaseServer#clientSockets
    static jobject get_field_clientSockets(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "clientSockets", "field_34998", "clientSockets", "f_196029_"), "Ljava/util/concurrent/CopyOnWriteArrayList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer#clientSockets
    static void set_field_clientSockets(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "clientSockets", "field_34998", "clientSockets", "f_196029_"), "Ljava/util/concurrent/CopyOnWriteArrayList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "start", "method_38764", "start", "m_196036_"), "()V");
    }

    static void start(const jobject& obj) {
                
       const auto methodID = methodID_start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_runSender() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "runSender", "method_38767", "runSender", "m_196041_"), "()V");
    }

    static void runSender(const jobject& obj) {
                
       const auto methodID = methodID_runSender();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_stop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "stop", "method_38766", "stop", "m_196040_"), "()V");
    }

    static void stop(const jobject& obj) {
                
       const auto methodID = methodID_stop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_runAcceptor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "runAcceptor", "method_38768", "runAcceptor", "m_196042_"), "()V");
    }

    static void runAcceptor(const jobject& obj) {
                
       const auto methodID = methodID_runAcceptor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTeleportPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getPlayerPosition", "method_38959", "getTeleportPosition", "m_196043_"), "()Lalw$a;");
    }

    static jobject getTeleportPosition(const jobject& obj) {
                
       const auto methodID = methodID_getTeleportPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_CHASE_CHASESERVER_HPP