// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_CHASE_CHASESERVER$TELEPORTPOS_HPP
#define NET_MINECRAFT_SERVER_CHASE_CHASESERVER$TELEPORTPOS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.chase.ChaseServer$TeleportPos
 * Remapped: alw$a
 */
namespace ChaseServer$TeleportPos {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("alw$a", "net/minecraft/server/chase/ChaseServer$PlayerPosition", "net/minecraft/class_6632$class_6668", "net/minecraft/server/chase/ChaseServer$TeleportPos", "net/minecraft/src/C_183130_$C_183131_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.chase.ChaseServer$TeleportPos#dimensionName
    static jobject get_field_dimensionName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "dimensionName", "comp_160", "dimensionName", "f_196044_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer$TeleportPos#dimensionName
    static void set_field_dimensionName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "dimensionName", "comp_160", "dimensionName", "f_196044_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.chase.ChaseServer$TeleportPos#x
    static jdouble get_field_x(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "x", "comp_161", "x", "f_196045_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer$TeleportPos#x
    static void set_field_x(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "x", "comp_161", "x", "f_196045_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.chase.ChaseServer$TeleportPos#y
    static jdouble get_field_y(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "y", "comp_162", "y", "f_196046_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer$TeleportPos#y
    static void set_field_y(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "y", "comp_162", "y", "f_196046_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.chase.ChaseServer$TeleportPos#z
    static jdouble get_field_z(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "z", "comp_163", "z", "f_196047_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer$TeleportPos#z
    static void set_field_z(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "z", "comp_163", "z", "f_196047_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.chase.ChaseServer$TeleportPos#yaw
    static jfloat get_field_yaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "yRot", "comp_164", "yaw", "f_196048_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer$TeleportPos#yaw
    static void set_field_yaw(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "yRot", "comp_164", "yaw", "f_196048_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.chase.ChaseServer$TeleportPos#pitch
    static jfloat get_field_pitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "xRot", "comp_165", "pitch", "f_196049_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.chase.ChaseServer$TeleportPos#pitch
    static void set_field_pitch(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "xRot", "comp_165", "pitch", "f_196049_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_getTeleportCommand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "format", "method_38960", "getTeleportCommand", "m_196065_"), "()Ljava/lang/String;");
    }

    static jobject getTeleportCommand(const jobject& obj) {
                
       const auto methodID = methodID_getTeleportCommand();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__dimensionName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dimensionName", "comp_160", "dimensionName", "f_196044_"), "()Ljava/lang/String;");
    }

    static jobject _dimensionName(const jobject& obj) {
                
       const auto methodID = methodID__dimensionName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__x() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "x", "comp_161", "x", "f_196045_"), "()D");
    }

    static jdouble _x(const jobject& obj) {
                
       const auto methodID = methodID__x();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID__y() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "y", "comp_162", "y", "f_196046_"), "()D");
    }

    static jdouble _y(const jobject& obj) {
                
       const auto methodID = methodID__y();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID__z() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "z", "comp_163", "z", "f_196047_"), "()D");
    }

    static jdouble _z(const jobject& obj) {
                
       const auto methodID = methodID__z();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID__yaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "yRot", "comp_164", "yaw", "f_196048_"), "()F");
    }

    static jfloat _yaw(const jobject& obj) {
                
       const auto methodID = methodID__yaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__pitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "xRot", "comp_165", "pitch", "f_196049_"), "()F");
    }

    static jfloat _pitch(const jobject& obj) {
                
       const auto methodID = methodID__pitch();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_CHASE_CHASESERVER$TELEPORTPOS_HPP