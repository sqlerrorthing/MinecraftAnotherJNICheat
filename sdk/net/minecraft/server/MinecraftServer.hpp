// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_MINECRAFTSERVER_HPP
#define NET_MINECRAFT_SERVER_MINECRAFTSERVER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.MinecraftServer
 * Remapped: net/minecraft/server/MinecraftServer
 */
namespace MinecraftServer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("net/minecraft/server/MinecraftServer", "net/minecraft/server/MinecraftServer", "net/minecraft/server/MinecraftServer", "net/minecraft/server/MinecraftServer", "net/minecraft/server/MinecraftServer"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.MinecraftServer#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LOGGER", "field_4546", "LOGGER", "f_129750_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LOGGER", "field_4546", "LOGGER", "f_129750_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.MinecraftServer#VANILLA
    [[maybe_unused]] static jobject get_field_VANILLA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "VANILLA_BRAND", "field_34982", "VANILLA", "f_195495_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.MinecraftServer#VANILLA
    [[maybe_unused]] static void set_field_VANILLA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "VANILLA_BRAND", "field_34982", "VANILLA", "f_195495_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#field_33212
    [[maybe_unused]] static jfloat get_field_field_33212() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "AVERAGE_TICK_TIME_SMOOTHING", "field_33212", "field_33212", "f_177884_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#field_33212
    [[maybe_unused]] static void set_field_field_33212(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "AVERAGE_TICK_TIME_SMOOTHING", "field_33212", "field_33212", "f_177884_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#field_33213
    [[maybe_unused]] static jint get_field_field_33213() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "TICK_STATS_SPAN", "field_33213", "field_33213", "f_177885_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#field_33213
    [[maybe_unused]] static void set_field_field_33213(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "TICK_STATS_SPAN", "field_33213", "field_33213", "f_177885_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#OVERLOAD_THRESHOLD_NANOS
    [[maybe_unused]] static jlong get_field_OVERLOAD_THRESHOLD_NANOS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "OVERLOADED_THRESHOLD_NANOS", "field_47143", "OVERLOAD_THRESHOLD_NANOS", "f_302524_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#OVERLOAD_THRESHOLD_NANOS
    [[maybe_unused]] static void set_field_OVERLOAD_THRESHOLD_NANOS(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "OVERLOADED_THRESHOLD_NANOS", "field_47143", "OVERLOAD_THRESHOLD_NANOS", "f_302524_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#field_47144
    [[maybe_unused]] static jint get_field_field_47144() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "OVERLOADED_TICKS_THRESHOLD", "field_47144", "field_47144", "f_303374_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#field_47144
    [[maybe_unused]] static void set_field_field_47144(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "OVERLOADED_TICKS_THRESHOLD", "field_47144", "field_47144", "f_303374_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#OVERLOAD_WARNING_INTERVAL_NANOS
    [[maybe_unused]] static jlong get_field_OVERLOAD_WARNING_INTERVAL_NANOS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "OVERLOADED_WARNING_INTERVAL_NANOS", "field_47145", "OVERLOAD_WARNING_INTERVAL_NANOS", "f_302842_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#OVERLOAD_WARNING_INTERVAL_NANOS
    [[maybe_unused]] static void set_field_OVERLOAD_WARNING_INTERVAL_NANOS(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "OVERLOADED_WARNING_INTERVAL_NANOS", "field_47145", "OVERLOAD_WARNING_INTERVAL_NANOS", "f_302842_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#field_47146
    [[maybe_unused]] static jint get_field_field_47146() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "OVERLOADED_TICKS_WARNING_INTERVAL", "field_47146", "field_47146", "f_302898_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#field_47146
    [[maybe_unused]] static void set_field_field_47146(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "OVERLOADED_TICKS_WARNING_INTERVAL", "field_47146", "field_47146", "f_302898_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#PLAYER_SAMPLE_UPDATE_INTERVAL_NANOS
    [[maybe_unused]] static jlong get_field_PLAYER_SAMPLE_UPDATE_INTERVAL_NANOS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "STATUS_EXPIRE_TIME_NANOS", "field_47147", "PLAYER_SAMPLE_UPDATE_INTERVAL_NANOS", "f_303358_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#PLAYER_SAMPLE_UPDATE_INTERVAL_NANOS
    [[maybe_unused]] static void set_field_PLAYER_SAMPLE_UPDATE_INTERVAL_NANOS(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "STATUS_EXPIRE_TIME_NANOS", "field_47147", "PLAYER_SAMPLE_UPDATE_INTERVAL_NANOS", "f_303358_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#PREPARE_START_REGION_TICK_DELAY_NANOS
    [[maybe_unused]] static jlong get_field_PREPARE_START_REGION_TICK_DELAY_NANOS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "PREPARE_LEVELS_DEFAULT_DELAY_NANOS", "field_47148", "PREPARE_START_REGION_TICK_DELAY_NANOS", "f_303596_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#PREPARE_START_REGION_TICK_DELAY_NANOS
    [[maybe_unused]] static void set_field_PREPARE_START_REGION_TICK_DELAY_NANOS(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "PREPARE_LEVELS_DEFAULT_DELAY_NANOS", "field_47148", "PREPARE_START_REGION_TICK_DELAY_NANOS", "f_303596_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#field_33218
    [[maybe_unused]] static jint get_field_field_33218() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "MAX_STATUS_PLAYER_SAMPLE", "field_33218", "field_33218", "f_177890_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#field_33218
    [[maybe_unused]] static void set_field_field_33218(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "MAX_STATUS_PLAYER_SAMPLE", "field_33218", "field_33218", "f_177890_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#field_48466
    [[maybe_unused]] static jint get_field_field_48466() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SPAWN_POSITION_SEARCH_RADIUS", "field_48466", "field_48466", "f_314478_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#field_48466
    [[maybe_unused]] static void set_field_field_48466(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SPAWN_POSITION_SEARCH_RADIUS", "field_48466", "field_48466", "f_314478_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#field_33220
    [[maybe_unused]] static jint get_field_field_33220() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "AUTOSAVE_INTERVAL", "field_33220", "field_33220", "f_177892_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#field_33220
    [[maybe_unused]] static void set_field_field_33220(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "AUTOSAVE_INTERVAL", "field_33220", "field_33220", "f_177892_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#field_47149
    [[maybe_unused]] static jint get_field_field_47149() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "MIMINUM_AUTOSAVE_TICKS", "field_47149", "field_47149", "f_303515_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#field_47149
    [[maybe_unused]] static void set_field_field_47149(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "MIMINUM_AUTOSAVE_TICKS", "field_47149", "field_47149", "f_303515_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#field_33221
    [[maybe_unused]] static jint get_field_field_33221() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "MAX_TICK_LATENCY", "field_33221", "field_33221", "f_177893_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#field_33221
    [[maybe_unused]] static void set_field_field_33221(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "MAX_TICK_LATENCY", "field_33221", "field_33221", "f_177893_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.MinecraftServer#MAX_WORLD_BORDER_RADIUS
    [[maybe_unused]] static jint get_field_MAX_WORLD_BORDER_RADIUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ABSOLUTE_MAX_WORLD_SIZE", "field_33211", "MAX_WORLD_BORDER_RADIUS", "f_177883_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.MinecraftServer#MAX_WORLD_BORDER_RADIUS
    [[maybe_unused]] static void set_field_MAX_WORLD_BORDER_RADIUS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ABSOLUTE_MAX_WORLD_SIZE", "field_33211", "MAX_WORLD_BORDER_RADIUS", "f_177883_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.MinecraftServer#DEMO_LEVEL_INFO
    [[maybe_unused]] static jobject get_field_DEMO_LEVEL_INFO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEMO_SETTINGS", "field_17704", "DEMO_LEVEL_INFO", "f_129743_"), "Ldda;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.MinecraftServer#DEMO_LEVEL_INFO
    [[maybe_unused]] static void set_field_DEMO_LEVEL_INFO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEMO_SETTINGS", "field_17704", "DEMO_LEVEL_INFO", "f_129743_"), "Ldda;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.MinecraftServer#ANONYMOUS_PLAYER_PROFILE
    [[maybe_unused]] static jobject get_field_ANONYMOUS_PLAYER_PROFILE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ANONYMOUS_PLAYER_PROFILE", "field_35641", "ANONYMOUS_PLAYER_PROFILE", "f_195496_"), "Lcom/mojang/authlib/GameProfile;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.MinecraftServer#ANONYMOUS_PLAYER_PROFILE
    [[maybe_unused]] static void set_field_ANONYMOUS_PLAYER_PROFILE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ANONYMOUS_PLAYER_PROFILE", "field_35641", "ANONYMOUS_PLAYER_PROFILE", "f_195496_"), "Lcom/mojang/authlib/GameProfile;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.server.MinecraftServer#session
    static jobject get_field_session(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "storageSource", "field_23784", "session", "f_129744_"), "Lerf$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.server.MinecraftServer#session
    static void set_field_session(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "storageSource", "field_23784", "session", "f_129744_"), "Lerf$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.server.MinecraftServer#saveHandler
    static jobject get_field_saveHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "playerDataStorage", "field_24371", "saveHandler", "f_129745_"), "Leri;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.server.MinecraftServer#saveHandler
    static void set_field_saveHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "playerDataStorage", "field_24371", "saveHandler", "f_129745_"), "Leri;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#serverGuiTickables
    static jobject get_field_serverGuiTickables(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "tickables", "field_4568", "serverGuiTickables", "f_129752_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#serverGuiTickables
    static void set_field_serverGuiTickables(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "tickables", "field_4568", "serverGuiTickables", "f_129752_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#recorder
    static jobject get_field_recorder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "metricsRecorder", "field_22250", "recorder", "f_177872_"), "Lbot;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#recorder
    static void set_field_recorder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "metricsRecorder", "field_22250", "recorder", "f_177872_"), "Lbot;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#profiler
    static jobject get_field_profiler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "profiler", "field_16258", "profiler", "f_129754_"), "Lbnf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#profiler
    static void set_field_profiler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "profiler", "field_16258", "profiler", "f_129754_"), "Lbnf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#recorderResultConsumer
    static jobject get_field_recorderResultConsumer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "onMetricsRecordingStopped", "field_33975", "recorderResultConsumer", "f_177873_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#recorderResultConsumer
    static void set_field_recorderResultConsumer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "onMetricsRecordingStopped", "field_33975", "recorderResultConsumer", "f_177873_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#recorderDumpConsumer
    static jobject get_field_recorderDumpConsumer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "onMetricsRecordingFinished", "field_33976", "recorderDumpConsumer", "f_177874_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#recorderDumpConsumer
    static void set_field_recorderDumpConsumer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "onMetricsRecordingFinished", "field_33976", "recorderDumpConsumer", "f_177874_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#needsRecorderSetup
    static jboolean get_field_needsRecorderSetup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "willStartRecordingMetrics", "field_33977", "needsRecorderSetup", "f_177875_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#needsRecorderSetup
    static void set_field_needsRecorderSetup(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "willStartRecordingMetrics", "field_33977", "needsRecorderSetup", "f_177875_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#debugStart
    static jobject get_field_debugStart(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "debugCommandProfiler", "field_33978", "debugStart", "f_177876_"), "Lnet/minecraft/server/MinecraftServer$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#debugStart
    static void set_field_debugStart(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "debugCommandProfiler", "field_33978", "debugStart", "f_177876_"), "Lnet/minecraft/server/MinecraftServer$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#needsDebugSetup
    static jboolean get_field_needsDebugSetup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "debugCommandProfilerDelayStart", "field_33979", "needsDebugSetup", "f_177877_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#needsDebugSetup
    static void set_field_needsDebugSetup(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "debugCommandProfilerDelayStart", "field_33979", "needsDebugSetup", "f_177877_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#networkIo
    static jobject get_field_networkIo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "connection", "field_4563", "networkIo", "f_129755_"), "Lart;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#networkIo
    static void set_field_networkIo(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "connection", "field_4563", "networkIo", "f_129755_"), "Lart;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#worldGenerationProgressListenerFactory
    static jobject get_field_worldGenerationProgressListenerFactory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "progressListenerFactory", "field_17439", "worldGenerationProgressListenerFactory", "f_129756_"), "Lare;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#worldGenerationProgressListenerFactory
    static void set_field_worldGenerationProgressListenerFactory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "progressListenerFactory", "field_17439", "worldGenerationProgressListenerFactory", "f_129756_"), "Lare;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#metadata
    static jobject get_field_metadata(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "status", "field_4593", "metadata", "f_129757_"), "Lajq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#metadata
    static void set_field_metadata(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "status", "field_4593", "metadata", "f_129757_"), "Lajq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#favicon
    static jobject get_field_favicon(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "statusIcon", "field_42958", "favicon", "f_271173_"), "Lajq$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#favicon
    static void set_field_favicon(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "statusIcon", "field_42958", "favicon", "f_271173_"), "Lajq$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#random
    static jobject get_field_random(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "random", "field_4602", "random", "f_129758_"), "Layw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#random
    static void set_field_random(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "random", "field_4602", "random", "f_129758_"), "Layw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#dataFixer
    static jobject get_field_dataFixer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "fixerUpper", "field_4587", "dataFixer", "f_129759_"), "Lcom/mojang/datafixers/DataFixer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#dataFixer
    static void set_field_dataFixer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "fixerUpper", "field_4587", "dataFixer", "f_129759_"), "Lcom/mojang/datafixers/DataFixer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#serverIp
    static jobject get_field_serverIp(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "localIp", "field_4585", "serverIp", "f_129760_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#serverIp
    static void set_field_serverIp(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "localIp", "field_4585", "serverIp", "f_129760_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#serverPort
    static jint get_field_serverPort(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "port", "field_4555", "serverPort", "f_129761_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#serverPort
    static void set_field_serverPort(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "port", "field_4555", "serverPort", "f_129761_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#combinedDynamicRegistries
    static jobject get_field_combinedDynamicRegistries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "registries", "field_25132", "combinedDynamicRegistries", "f_244176_"), "Ljt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#combinedDynamicRegistries
    static void set_field_combinedDynamicRegistries(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "registries", "field_25132", "combinedDynamicRegistries", "f_244176_"), "Ljt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#worlds
    static jobject get_field_worlds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "levels", "field_4589", "worlds", "f_129762_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#worlds
    static void set_field_worlds(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "levels", "field_4589", "worlds", "f_129762_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#playerManager
    static jobject get_field_playerManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "playerList", "field_4550", "playerManager", "f_129763_"), "Laur;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#playerManager
    static void set_field_playerManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "playerList", "field_4550", "playerManager", "f_129763_"), "Laur;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#running
    static jboolean get_field_running(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "running", "field_4544", "running", "f_129764_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#running
    static void set_field_running(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "running", "field_4544", "running", "f_129764_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#stopped
    static jboolean get_field_stopped(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "stopped", "field_4561", "stopped", "f_129765_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#stopped
    static void set_field_stopped(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "stopped", "field_4561", "stopped", "f_129765_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#ticks
    static jint get_field_ticks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "tickCount", "field_4572", "ticks", "f_129766_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#ticks
    static void set_field_ticks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "tickCount", "field_4572", "ticks", "f_129766_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#ticksUntilAutosave
    static jint get_field_ticksUntilAutosave(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "ticksUntilAutosave", "field_47135", "ticksUntilAutosave", "f_302260_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#ticksUntilAutosave
    static void set_field_ticksUntilAutosave(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "ticksUntilAutosave", "field_47135", "ticksUntilAutosave", "f_302260_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.server.MinecraftServer#proxy
    static jobject get_field_proxy(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "proxy", "field_4599", "proxy", "f_129747_"), "Ljava/net/Proxy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.server.MinecraftServer#proxy
    static void set_field_proxy(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "proxy", "field_4599", "proxy", "f_129747_"), "Ljava/net/Proxy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#onlineMode
    static jboolean get_field_onlineMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "onlineMode", "field_4543", "onlineMode", "f_129705_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#onlineMode
    static void set_field_onlineMode(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "onlineMode", "field_4543", "onlineMode", "f_129705_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#preventProxyConnections
    static jboolean get_field_preventProxyConnections(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "preventProxyConnections", "field_4560", "preventProxyConnections", "f_129706_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#preventProxyConnections
    static void set_field_preventProxyConnections(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "preventProxyConnections", "field_4560", "preventProxyConnections", "f_129706_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#pvpEnabled
    static jboolean get_field_pvpEnabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "pvp", "field_4604", "pvpEnabled", "f_129707_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#pvpEnabled
    static void set_field_pvpEnabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "pvp", "field_4604", "pvpEnabled", "f_129707_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#flightEnabled
    static jboolean get_field_flightEnabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "allowFlight", "field_4554", "flightEnabled", "f_129708_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#flightEnabled
    static void set_field_flightEnabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "allowFlight", "field_4554", "flightEnabled", "f_129708_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#motd
    static jobject get_field_motd(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "motd", "field_4564", "motd", "f_129709_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#motd
    static void set_field_motd(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "motd", "field_4564", "motd", "f_129709_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#playerIdleTimeout
    static jint get_field_playerIdleTimeout(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "playerIdleTimeout", "field_4596", "playerIdleTimeout", "f_129711_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#playerIdleTimeout
    static void set_field_playerIdleTimeout(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "playerIdleTimeout", "field_4596", "playerIdleTimeout", "f_129711_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#tickTimes
    static jlong get_field_tickTimes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "tickTimesNanos", "field_47136", "tickTimes", "f_303727_"), "[J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#tickTimes
    static void set_field_tickTimes(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "tickTimesNanos", "field_47136", "tickTimes", "f_303727_"), "[J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#recentTickTimesNanos
    static jlong get_field_recentTickTimesNanos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "aggregatedTickTimesNanos", "field_47137", "recentTickTimesNanos", "f_302883_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#recentTickTimesNanos
    static void set_field_recentTickTimesNanos(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "aggregatedTickTimesNanos", "field_47137", "recentTickTimesNanos", "f_302883_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#keyPair
    static jobject get_field_keyPair(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "keyPair", "field_4552", "keyPair", "f_129712_"), "Ljava/security/KeyPair;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#keyPair
    static void set_field_keyPair(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "keyPair", "field_4552", "keyPair", "f_129712_"), "Ljava/security/KeyPair;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#hostProfile
    static jobject get_field_hostProfile(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "singleplayerProfile", "field_39214", "hostProfile", "f_236719_"), "Lcom/mojang/authlib/GameProfile;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#hostProfile
    static void set_field_hostProfile(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "singleplayerProfile", "field_39214", "hostProfile", "f_236719_"), "Lcom/mojang/authlib/GameProfile;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#demo
    static jboolean get_field_demo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "isDemo", "field_4549", "demo", "f_129714_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#demo
    static void set_field_demo(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "isDemo", "field_4549", "demo", "f_129714_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#loading
    static jboolean get_field_loading(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ag", "isReady", "field_4547", "loading", "f_129717_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#loading
    static void set_field_loading(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ag", "isReady", "field_4547", "loading", "f_129717_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#lastOverloadWarningNanos
    static jlong get_field_lastOverloadWarningNanos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ah", "lastOverloadWarningNanos", "field_47138", "lastOverloadWarningNanos", "f_302681_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#lastOverloadWarningNanos
    static void set_field_lastOverloadWarningNanos(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ah", "lastOverloadWarningNanos", "field_47138", "lastOverloadWarningNanos", "f_302681_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.server.MinecraftServer#apiServices
    static jobject get_field_apiServices(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "services", "field_39440", "apiServices", "f_236721_"), "Lalm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.server.MinecraftServer#apiServices
    static void set_field_apiServices(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "services", "field_39440", "apiServices", "f_236721_"), "Lalm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#lastPlayerSampleUpdate
    static jlong get_field_lastPlayerSampleUpdate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ai", "lastServerStatus", "field_4551", "lastPlayerSampleUpdate", "f_129724_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#lastPlayerSampleUpdate
    static void set_field_lastPlayerSampleUpdate(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ai", "lastServerStatus", "field_4551", "lastPlayerSampleUpdate", "f_129724_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#serverThread
    static jobject get_field_serverThread(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aj", "serverThread", "field_16257", "serverThread", "f_129725_"), "Ljava/lang/Thread;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#serverThread
    static void set_field_serverThread(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aj", "serverThread", "field_16257", "serverThread", "f_129725_"), "Ljava/lang/Thread;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#prevFullTickLogTime
    static jlong get_field_prevFullTickLogTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "lastTickNanos", "field_48773", "prevFullTickLogTime", "f_314161_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#prevFullTickLogTime
    static void set_field_prevFullTickLogTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "lastTickNanos", "field_48773", "prevFullTickLogTime", "f_314161_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#tasksStartTime
    static jlong get_field_tasksStartTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("al", "taskExecutionStartNanos", "field_48774", "tasksStartTime", "f_316583_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#tasksStartTime
    static void set_field_tasksStartTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("al", "taskExecutionStartNanos", "field_48774", "tasksStartTime", "f_316583_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#waitTime
    static jlong get_field_waitTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("am", "idleTimeNanos", "field_48775", "waitTime", "f_316472_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#waitTime
    static void set_field_waitTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("am", "idleTimeNanos", "field_48775", "waitTime", "f_316472_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#tickStartTimeNanos
    static jlong get_field_tickStartTimeNanos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("an", "nextTickTimeNanos", "field_47139", "tickStartTimeNanos", "f_302313_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#tickStartTimeNanos
    static void set_field_tickStartTimeNanos(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("an", "nextTickTimeNanos", "field_47139", "tickStartTimeNanos", "f_302313_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#tickEndTimeNanos
    static jlong get_field_tickEndTimeNanos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ao", "delayedTasksMaxNextTickTimeNanos", "field_47140", "tickEndTimeNanos", "f_302364_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#tickEndTimeNanos
    static void set_field_tickEndTimeNanos(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ao", "delayedTasksMaxNextTickTimeNanos", "field_47140", "tickEndTimeNanos", "f_302364_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#waitingForNextTick
    static jboolean get_field_waitingForNextTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ap", "mayHaveDelayedTasks", "field_19249", "waitingForNextTick", "f_129728_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#waitingForNextTick
    static void set_field_waitingForNextTick(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ap", "mayHaveDelayedTasks", "field_19249", "waitingForNextTick", "f_129728_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#dataPackManager
    static jobject get_field_dataPackManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aq", "packRepository", "field_4595", "dataPackManager", "f_129730_"), "Latp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#dataPackManager
    static void set_field_dataPackManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aq", "packRepository", "field_4595", "dataPackManager", "f_129730_"), "Latp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#scoreboard
    static jobject get_field_scoreboard(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ar", "scoreboard", "field_4558", "scoreboard", "f_129731_"), "Lalk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#scoreboard
    static void set_field_scoreboard(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ar", "scoreboard", "field_4558", "scoreboard", "f_129731_"), "Lalk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#dataCommandStorage
    static jobject get_field_dataCommandStorage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("as", "commandStorage", "field_20850", "dataCommandStorage", "f_129732_"), "Leqw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#dataCommandStorage
    static void set_field_dataCommandStorage(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("as", "commandStorage", "field_20850", "dataCommandStorage", "f_129732_"), "Leqw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#bossBarManager
    static jobject get_field_bossBarManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("at", "customBossEvents", "field_4548", "bossBarManager", "f_129733_"), "Lalt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#bossBarManager
    static void set_field_bossBarManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("at", "customBossEvents", "field_4548", "bossBarManager", "f_129733_"), "Lalt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#commandFunctionManager
    static jobject get_field_commandFunctionManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("au", "functionManager", "field_4591", "commandFunctionManager", "f_129734_"), "Lalg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#commandFunctionManager
    static void set_field_commandFunctionManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("au", "functionManager", "field_4591", "commandFunctionManager", "f_129734_"), "Lalg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#enforceWhitelist
    static jboolean get_field_enforceWhitelist(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("av", "enforceWhitelist", "field_4570", "enforceWhitelist", "f_129736_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#enforceWhitelist
    static void set_field_enforceWhitelist(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("av", "enforceWhitelist", "field_4570", "enforceWhitelist", "f_129736_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#averageTickTime
    static jfloat get_field_averageTickTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aw", "smoothedTickTimeMillis", "field_47141", "averageTickTime", "f_303084_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#averageTickTime
    static void set_field_averageTickTime(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aw", "smoothedTickTimeMillis", "field_47141", "averageTickTime", "f_303084_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#workerExecutor
    static jobject get_field_workerExecutor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ax", "executor", "field_17200", "workerExecutor", "f_129738_"), "Ljava/util/concurrent/Executor;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#workerExecutor
    static void set_field_workerExecutor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ax", "executor", "field_17200", "workerExecutor", "f_129738_"), "Ljava/util/concurrent/Executor;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#serverId
    static jobject get_field_serverId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ay", "serverId", "field_17601", "serverId", "f_129739_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#serverId
    static void set_field_serverId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ay", "serverId", "field_17601", "serverId", "f_129739_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#resourceManagerHolder
    static jobject get_field_resourceManagerHolder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("az", "resources", "field_25318", "resourceManagerHolder", "f_129740_"), "Lnet/minecraft/server/MinecraftServer$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#resourceManagerHolder
    static void set_field_resourceManagerHolder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("az", "resources", "field_25318", "resourceManagerHolder", "f_129740_"), "Lnet/minecraft/server/MinecraftServer$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#structureTemplateManager
    static jobject get_field_structureTemplateManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aA", "structureTemplateManager", "field_24370", "structureTemplateManager", "f_236720_"), "Lenu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#structureTemplateManager
    static void set_field_structureTemplateManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aA", "structureTemplateManager", "field_24370", "structureTemplateManager", "f_236720_"), "Lenu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#tickManager
    static jobject get_field_tickManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aB", "tickRateManager", "field_47142", "tickManager", "f_303645_"), "Lall;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#tickManager
    static void set_field_tickManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aB", "tickRateManager", "field_47142", "tickManager", "f_303645_"), "Lall;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.server.MinecraftServer#saveProperties
    static jobject get_field_saveProperties(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "worldData", "field_24372", "saveProperties", "f_129749_"), "Lerl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.server.MinecraftServer#saveProperties
    static void set_field_saveProperties(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "worldData", "field_24372", "saveProperties", "f_129749_"), "Lerl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#brewingRecipeRegistry
    static jobject get_field_brewingRecipeRegistry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aC", "potionBrewing", "field_51466", "brewingRecipeRegistry", "f_316552_"), "Lcwt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#brewingRecipeRegistry
    static void set_field_brewingRecipeRegistry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aC", "potionBrewing", "field_51466", "brewingRecipeRegistry", "f_316552_"), "Lcwt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.MinecraftServer#saving
    static jboolean get_field_saving(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aD", "isSaving", "field_35437", "saving", "f_195494_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#saving
    static void set_field_saving(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aD", "isSaving", "field_35437", "saving", "f_195494_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.server.MinecraftServer#WORLD_GEN_EXCEPTION
    [[maybe_unused]] static jobject get_field_WORLD_GEN_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "fatalException", "field_51917", "WORLD_GEN_EXCEPTION", "f_336607_"), "Ljava/util/concurrent/atomic/AtomicReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.MinecraftServer#WORLD_GEN_EXCEPTION
    [[maybe_unused]] static void set_field_WORLD_GEN_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "fatalException", "field_51917", "WORLD_GEN_EXCEPTION", "f_336607_"), "Ljava/util/concurrent/atomic/AtomicReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_startServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "spin", "method_29740", "startServer", "m_129872_"), "(Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer;");
    }

    static jobject startServer(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_startServer();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_initScoreboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readScoreboard", "method_17976", "initScoreboard", "m_129841_"), "(Leqz;)V");
    }

    static void initScoreboard(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initScoreboard();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setupServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "initServer", "method_3823", "setupServer", "m_7038_"), "()Z");
    }

    static jboolean setupServer(const jobject& obj) {
                
       const auto methodID = methodID_setupServer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t_", "loadLevel", "method_3735", "loadWorld", "m_130006_"), "()V");
    }

    static void loadWorld(const jobject& obj) {
                
       const auto methodID = methodID_loadWorld();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "forceDifficulty", "method_27731", "updateDifficulty", "m_7044_"), "()V");
    }

    static void updateDifficulty(const jobject& obj) {
                
       const auto methodID = methodID_updateDifficulty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createWorlds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createLevels", "method_3786", "createWorlds", "m_129815_"), "(Lard;)V");
    }

    static void createWorlds(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createWorlds();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setupSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setInitialSpawn", "method_27901", "setupSpawn", "m_177896_"), "(Laqu;Lerk;ZZ)V");
    }

    static void setupSpawn(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_setupSpawn();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_setToDebugWorldProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupDebugLevel", "method_17977", "setToDebugWorldProperties", "m_129847_"), "(Lerl;)V");
    }

    static void setToDebugWorldProperties(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setToDebugWorldProperties();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_prepareStartRegion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "prepareLevels", "method_3774", "prepareStartRegion", "m_129940_"), "(Lard;)V");
    }

    static void prepareStartRegion(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_prepareStartRegion();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDefaultGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u_", "getDefaultGameType", "method_3790", "getDefaultGameMode", "m_130008_"), "()Ldct;");
    }

    static jobject getDefaultGameMode(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultGameMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isHardcore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "isHardcore", "method_3754", "isHardcore", "m_7035_"), "()Z");
    }

    static jboolean isHardcore(const jobject& obj) {
                
       const auto methodID = methodID_isHardcore();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOpPermissionLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getOperatorUserPermissionLevel", "method_3798", "getOpPermissionLevel", "m_7022_"), "()I");
    }

    static jint getOpPermissionLevel(const jobject& obj) {
                
       const auto methodID = methodID_getOpPermissionLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFunctionPermissionLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getFunctionCompilationLevel", "method_21714", "getFunctionPermissionLevel", "m_7034_"), "()I");
    }

    static jint getFunctionPermissionLevel(const jobject& obj) {
                
       const auto methodID = methodID_getFunctionPermissionLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldBroadcastRconToOps() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "shouldRconBroadcast", "method_3732", "shouldBroadcastRconToOps", "m_6983_"), "()Z");
    }

    static jboolean shouldBroadcastRconToOps(const jobject& obj) {
                
       const auto methodID = methodID_shouldBroadcastRconToOps();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_save() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "saveAllChunks", "method_3723", "save", "m_129885_"), "(ZZZ)Z");
    }

    static jboolean save(const jobject& obj, const jboolean& arg0, const jboolean& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_save();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_saveAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveEverything", "method_39218", "saveAll", "m_195514_"), "(ZZZ)Z");
    }

    static jboolean saveAll(const jobject& obj, const jboolean& arg0, const jboolean& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_saveAll();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_shutdown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "stopServer", "method_3782", "shutdown", "m_7041_"), "()V");
    }

    static void shutdown(const jobject& obj) {
                
       const auto methodID = methodID_shutdown();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServerIp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getLocalIp", "method_3819", "getServerIp", "m_130009_"), "()Ljava/lang/String;");
    }

    static jobject getServerIp(const jobject& obj) {
                
       const auto methodID = methodID_getServerIp();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setServerIp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "setLocalIp", "method_3842", "setServerIp", "m_129913_"), "(Ljava/lang/String;)V");
    }

    static void setServerIp(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setServerIp();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "isRunning", "method_3806", "isRunning", "m_130010_"), "()Z");
    }

    static jboolean isRunning(const jobject& obj) {
                
       const auto methodID = methodID_isRunning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_stop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "halt", "method_3747", "stop", "m_7570_"), "(Z)V");
    }

    static void stop(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_stop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_runServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "runServer", "method_29741", "runServer", "m_130011_"), "()V");
    }

    static void runServer(const jobject& obj) {
                
       const auto methodID = methodID_runServer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_pushFullTickLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("br", "logFullTickTime", "method_56603", "pushFullTickLog", "m_321294_"), "()V");
    }

    static void pushFullTickLog(const jobject& obj) {
                
       const auto methodID = methodID_pushFullTickLog();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_startTaskPerformanceLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bs", "startMeasuringTaskExecutionTime", "method_56604", "startTaskPerformanceLog", "m_320448_"), "()V");
    }

    static void startTaskPerformanceLog(const jobject& obj) {
                
       const auto methodID = methodID_startTaskPerformanceLog();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_pushPerformanceLogs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bt", "finishMeasuringTaskExecutionTime", "method_56605", "pushPerformanceLogs", "m_321667_"), "()V");
    }

    static void pushPerformanceLogs(const jobject& obj) {
                
       const auto methodID = methodID_pushPerformanceLogs();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "constructOrExtractCrashReport", "method_40376", "createCrashReport", "m_206568_"), "(Ljava/lang/Throwable;)Lo;");
    }

    static jobject createCrashReport(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createCrashReport();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_shouldKeepTicking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bu", "haveTime", "method_3866", "shouldKeepTicking", "m_129960_"), "()Z");
    }

    static jboolean shouldKeepTicking(const jobject& obj) {
                
       const auto methodID = methodID_shouldKeepTicking();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_checkWorldGenException() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("z", "throwIfFatalException", "method_60584", "checkWorldGenException", "m_339664_"), "()Z");
    }

    static jboolean checkWorldGenException() {
       const auto clazz = self();
       const auto methodID = methodID_checkWorldGenException();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID);
    };
    
    static jmethodID methodID_setWorldGenException() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setFatalException", "method_60582", "setWorldGenException", "m_339773_"), "(Ljava/lang/RuntimeException;)V");
    }

    static void setWorldGenException(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_setWorldGenException();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_runTasks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "managedBlock", "method_18857", "runTasks", "m_18701_"), "(Ljava/util/function/BooleanSupplier;)V");
    }

    static void runTasks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_runTasks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_runTasksTillTickEnd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v_", "waitUntilNextTick", "method_16208", "runTasksTillTickEnd", "m_130012_"), "()V");
    }

    static void runTasksTillTickEnd(const jobject& obj) {
                
       const auto methodID = methodID_runTasksTillTickEnd();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_waitForTasks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "waitForTasks", "method_20813", "waitForTasks", "m_5667_"), "()V");
    }

    static void waitForTasks(const jobject& obj) {
                
       const auto methodID = methodID_waitForTasks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "wrapRunnable", "method_16209", "createTask", "m_6681_"), "(Ljava/lang/Runnable;)Laln;");
    }

    static jobject createTask(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createTask();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canExecute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldRun", "method_19464", "canExecute", "m_6362_"), "(Laln;)Z");
    }

    static jboolean canExecute(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canExecute();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_runTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "pollTask", "method_16075", "runTask", "m_7245_"), "()Z");
    }

    static jboolean runTask(const jobject& obj) {
                
       const auto methodID = methodID_runTask();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_runOneTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bv", "pollTaskInternal", "method_20415", "runOneTask", "m_129961_"), "()Z");
    }

    static jboolean runOneTask(const jobject& obj) {
                
       const auto methodID = methodID_runOneTask();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_executeTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "doRunTask", "method_24306", "executeTask", "m_6367_"), "(Laln;)V");
    }

    static void executeTask(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_executeTask();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_loadFavicon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bD", "loadStatusIcon", "method_49384", "loadFavicon", "m_272273_"), "()Ljava/util/Optional;");
    }

    static jobject loadFavicon(const jobject& obj) {
                
       const auto methodID = methodID_loadFavicon();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getIconFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "getWorldScreenshotFile", "method_3725", "getIconFile", "m_182649_"), "()Ljava/util/Optional;");
    }

    static jobject getIconFile(const jobject& obj) {
                
       const auto methodID = methodID_getIconFile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRunDirectory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "getServerDirectory", "method_3831", "getRunDirectory", "m_6237_"), "()Ljava/nio/file/Path;");
    }

    static jobject getRunDirectory(const jobject& obj) {
                
       const auto methodID = methodID_getRunDirectory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onServerCrash", "method_3744", "setCrashReport", "m_7268_"), "(Lo;)V");
    }

    static void setCrashReport(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCrashReport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_exit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "onServerExit", "method_3821", "exit", "m_6988_"), "()V");
    }

    static void exit(const jobject& obj) {
                
       const auto methodID = methodID_exit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPaused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "isPaused", "method_54809", "isPaused", "m_305863_"), "()Z");
    }

    static jboolean isPaused(const jobject& obj) {
                
       const auto methodID = methodID_isPaused();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickServer", "method_3748", "tick", "m_5705_"), "(Ljava/util/function/BooleanSupplier;)V");
    }

    static void tick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_pushTickLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "logTickMethodTime", "method_56602", "pushTickLog", "m_319509_"), "(J)V");
    }

    static void pushTickLog(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_pushTickLog();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAutosaveInterval() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bE", "computeNextAutosaveInterval", "method_54837", "getAutosaveInterval", "m_307733_"), "()I");
    }

    static jint getAutosaveInterval(const jobject& obj) {
                
       const auto methodID = methodID_getAutosaveInterval();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateAutosaveTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "onTickRateChanged", "method_54831", "updateAutosaveTicks", "m_305364_"), "()V");
    }

    static void updateAutosaveTicks(const jobject& obj) {
                
       const auto methodID = methodID_updateAutosaveTicks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDebugSampleLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getTickTimeLogger", "method_56593", "getDebugSampleLog", "m_318596_"), "()Lblu;");
    }

    static jobject getDebugSampleLog(const jobject& obj) {
                
       const auto methodID = methodID_getDebugSampleLog();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldPushTickTimeLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "isTickTimeLoggingEnabled", "method_56626", "shouldPushTickTimeLog", "m_319241_"), "()Z");
    }

    static jboolean shouldPushTickTimeLog(const jobject& obj) {
                
       const auto methodID = methodID_shouldPushTickTimeLog();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_createMetadata() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bF", "buildServerStatus", "method_49385", "createMetadata", "m_271988_"), "()Lajq;");
    }

    static jobject createMetadata(const jobject& obj) {
                
       const auto methodID = methodID_createMetadata();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createMetadataPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bG", "buildPlayerStatus", "method_49386", "createMetadataPlayers", "m_271961_"), "()Lajq$b;");
    }

    static jobject createMetadataPlayers(const jobject& obj) {
                
       const auto methodID = methodID_createMetadataPlayers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickWorlds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "tickChildren", "method_3813", "tickWorlds", "m_5703_"), "(Ljava/util/function/BooleanSupplier;)V");
    }

    static void tickWorlds(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tickWorlds();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendTimeUpdatePackets() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "synchronizeTime", "method_49750", "sendTimeUpdatePackets", "m_276346_"), "(Laqu;)V");
    }

    static void sendTimeUpdatePackets(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendTimeUpdatePackets();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__sendTimeUpdatePackets() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "forceTimeSynchronization", "method_49749", "sendTimeUpdatePackets", "m_276350_"), "()V");
    }

    static void _sendTimeUpdatePackets(const jobject& obj) {
                
       const auto methodID = methodID__sendTimeUpdatePackets();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isWorldAllowed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isLevelEnabled", "method_60671", "isWorldAllowed", "m_7079_"), "(Ldcw;)Z");
    }

    static jboolean isWorldAllowed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isWorldAllowed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addServerGuiTickable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addTickable", "method_3742", "addServerGuiTickable", "m_129946_"), "(Ljava/lang/Runnable;)V");
    }

    static void addServerGuiTickable(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addServerGuiTickable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setServerId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setId", "method_17819", "setServerId", "m_129948_"), "(Ljava/lang/String;)V");
    }

    static void setServerId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setServerId();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isStopping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "isShutdown", "method_16043", "isStopping", "m_129782_"), "()Z");
    }

    static jboolean isStopping(const jobject& obj) {
                
       const auto methodID = methodID_isStopping();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getFile", "method_3758", "getPath", "m_129971_"), "(Ljava/lang/String;)Ljava/nio/file/Path;");
    }

    static jobject getPath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOverworld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "overworld", "method_30002", "getOverworld", "m_129783_"), "()Laqu;");
    }

    static jobject getOverworld(const jobject& obj) {
                
       const auto methodID = methodID_getOverworld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getLevel", "method_3847", "getWorld", "m_129880_"), "(Lakq;)Laqu;");
    }

    static jobject getWorld(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWorldRegistryKeys() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "levelKeys", "method_29435", "getWorldRegistryKeys", "m_129784_"), "()Ljava/util/Set;");
    }

    static jobject getWorldRegistryKeys(const jobject& obj) {
                
       const auto methodID = methodID_getWorldRegistryKeys();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWorlds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "getAllLevels", "method_3738", "getWorlds", "m_129785_"), "()Ljava/lang/Iterable;");
    }

    static jobject getWorlds(const jobject& obj) {
                
       const auto methodID = methodID_getWorlds();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L", "getServerVersion", "method_3827", "getVersion", "m_129786_"), "()Ljava/lang/String;");
    }

    static jobject getVersion(const jobject& obj) {
                
       const auto methodID = methodID_getVersion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCurrentPlayerCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("M", "getPlayerCount", "method_3788", "getCurrentPlayerCount", "m_129787_"), "()I");
    }

    static jint getCurrentPlayerCount(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentPlayerCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxPlayerCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("N", "getMaxPlayers", "method_3802", "getMaxPlayerCount", "m_129788_"), "()I");
    }

    static jint getMaxPlayerCount(const jobject& obj) {
                
       const auto methodID = methodID_getMaxPlayerCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayerNames() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("O", "getPlayerNames", "method_3858", "getPlayerNames", "m_7641_"), "()[Ljava/lang/String;");
    }

    static jobject getPlayerNames(const jobject& obj) {
                
       const auto methodID = methodID_getPlayerNames();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServerModName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getServerModName", "getServerModName", "", "", "getServerModName"), "()Ljava/lang/String;");
    }

    static jobject getServerModName(const jobject& obj) {
                
       const auto methodID = methodID_getServerModName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addSystemDetails() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "fillSystemReport", "method_37324", "addSystemDetails", "m_177935_"), "(Lac;)Lac;");
    }

    static jobject addSystemDetails(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addSystemDetails();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addExtraSystemDetails() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillServerSystemReport", "method_3859", "addExtraSystemDetails", "m_142424_"), "(Lac;)Lac;");
    }

    static jobject addExtraSystemDetails(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addExtraSystemDetails();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getModStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("P", "getModdedStatus", "method_24307", "getModStatus", "m_183471_"), "()Layn;");
    }

    static jobject getModStatus(const jobject& obj) {
                
       const auto methodID = methodID_getModStatus();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendSystemMessage", "method_43496", "sendMessage", "m_213846_"), "(Lwz;)V");
    }

    static void sendMessage(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getKeyPair() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Q", "getKeyPair", "method_3716", "getKeyPair", "m_129790_"), "()Ljava/security/KeyPair;");
    }

    static jobject getKeyPair(const jobject& obj) {
                
       const auto methodID = methodID_getKeyPair();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServerPort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R", "getPort", "method_3756", "getServerPort", "m_7010_"), "()I");
    }

    static jint getServerPort(const jobject& obj) {
                
       const auto methodID = methodID_getServerPort();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setServerPort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPort", "method_3779", "setServerPort", "m_129801_"), "(I)V");
    }

    static void setServerPort(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setServerPort();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHostProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("S", "getSingleplayerProfile", "method_43824", "getHostProfile", "m_236731_"), "()Lcom/mojang/authlib/GameProfile;");
    }

    static jobject getHostProfile(const jobject& obj) {
                
       const auto methodID = methodID_getHostProfile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHostProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setSingleplayerProfile", "method_43825", "setHostProfile", "m_236740_"), "(Lcom/mojang/authlib/GameProfile;)V");
    }

    static void setHostProfile(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setHostProfile();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSingleplayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("T", "isSingleplayer", "method_3724", "isSingleplayer", "m_129792_"), "()Z");
    }

    static jboolean isSingleplayer(const jobject& obj) {
                
       const auto methodID = methodID_isSingleplayer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_generateKeyPair() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("U", "initializeKeyPair", "method_31400", "generateKeyPair", "m_129793_"), "()V");
    }

    static void generateKeyPair(const jobject& obj) {
                
       const auto methodID = methodID_generateKeyPair();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDifficulty", "method_3776", "setDifficulty", "m_129827_"), "(Lbqo;Z)V");
    }

    static void setDifficulty(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setDifficulty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_adjustTrackingDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getScaledTrackingDistance", "method_27903", "adjustTrackingDistance", "m_7186_"), "(I)I");
    }

    static jint adjustTrackingDistance(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_adjustTrackingDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateMobSpawnOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bH", "updateMobSpawningFlags", "method_27729", "updateMobSpawnOptions", "m_129962_"), "()V");
    }

    static void updateMobSpawnOptions(const jobject& obj) {
                
       const auto methodID = methodID_updateMobSpawnOptions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDifficultyLocked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setDifficultyLocked", "method_19467", "setDifficultyLocked", "m_129958_"), "(Z)V");
    }

    static void setDifficultyLocked(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setDifficultyLocked();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "sendDifficultyUpdate", "method_19465", "sendDifficulty", "m_129938_"), "(Laqv;)V");
    }

    static void sendDifficulty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendDifficulty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isMonsterSpawningEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("V", "isSpawningMonsters", "method_3783", "isMonsterSpawningEnabled", "m_7004_"), "()Z");
    }

    static jboolean isMonsterSpawningEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isMonsterSpawningEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDemo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("W", "isDemo", "method_3799", "isDemo", "m_129794_"), "()Z");
    }

    static jboolean isDemo(const jobject& obj) {
                
       const auto methodID = methodID_isDemo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDemo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setDemo", "method_3730", "setDemo", "m_129975_"), "(Z)V");
    }

    static void setDemo(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setDemo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getResourcePackProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("X", "getServerResourcePack", "method_43659", "getResourcePackProperties", "m_214042_"), "()Ljava/util/Optional;");
    }

    static jobject getResourcePackProperties(const jobject& obj) {
                
       const auto methodID = methodID_getResourcePackProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_requireResourcePack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Y", "isResourcePackRequired", "method_32303", "requireResourcePack", "m_142205_"), "()Z");
    }

    static jboolean requireResourcePack(const jobject& obj) {
                
       const auto methodID = methodID_requireResourcePack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDedicated() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "isDedicatedServer", "method_3816", "isDedicated", "m_6982_"), "()Z");
    }

    static jboolean isDedicated(const jobject& obj) {
                
       const auto methodID = methodID_isDedicated();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRateLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getRateLimitPacketsPerSecond", "method_30612", "getRateLimit", "m_7032_"), "()I");
    }

    static jint getRateLimit(const jobject& obj) {
                
       const auto methodID = methodID_getRateLimit();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isOnlineMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Z", "usesAuthentication", "method_3828", "isOnlineMode", "m_129797_"), "()Z");
    }

    static jboolean isOnlineMode(const jobject& obj) {
                
       const auto methodID = methodID_isOnlineMode();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setOnlineMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setUsesAuthentication", "method_3864", "setOnlineMode", "m_129985_"), "(Z)V");
    }

    static void setOnlineMode(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setOnlineMode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldPreventProxyConnections() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "getPreventProxyConnections", "method_3775", "shouldPreventProxyConnections", "m_129798_"), "()Z");
    }

    static jboolean shouldPreventProxyConnections(const jobject& obj) {
                
       const auto methodID = methodID_shouldPreventProxyConnections();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPreventProxyConnections() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setPreventProxyConnections", "method_3764", "setPreventProxyConnections", "m_129993_"), "(Z)V");
    }

    static void setPreventProxyConnections(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setPreventProxyConnections();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldSpawnAnimals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "isSpawningAnimals", "method_3796", "shouldSpawnAnimals", "m_6998_"), "()Z");
    }

    static jboolean shouldSpawnAnimals(const jobject& obj) {
                
       const auto methodID = methodID_shouldSpawnAnimals();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldSpawnNpcs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ac", "areNpcsEnabled", "method_3736", "shouldSpawnNpcs", "m_6997_"), "()Z");
    }

    static jboolean shouldSpawnNpcs(const jobject& obj) {
                
       const auto methodID = methodID_shouldSpawnNpcs();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isUsingNativeTransport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "isEpollEnabled", "method_3759", "isUsingNativeTransport", "m_6994_"), "()Z");
    }

    static jboolean isUsingNativeTransport(const jobject& obj) {
                
       const auto methodID = methodID_isUsingNativeTransport();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPvpEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ad", "isPvpAllowed", "method_3852", "isPvpEnabled", "m_129799_"), "()Z");
    }

    static jboolean isPvpEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isPvpEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPvpEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "setPvpAllowed", "method_3815", "setPvpEnabled", "m_129997_"), "(Z)V");
    }

    static void setPvpEnabled(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setPvpEnabled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isFlightEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ae", "isFlightAllowed", "method_3718", "isFlightEnabled", "m_129915_"), "()Z");
    }

    static jboolean isFlightEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isFlightEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setFlightEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "setFlightAllowed", "method_3745", "setFlightEnabled", "m_129999_"), "(Z)V");
    }

    static void setFlightEnabled(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setFlightEnabled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_areCommandBlocksEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "isCommandBlockEnabled", "method_3812", "areCommandBlocksEnabled", "m_6993_"), "()Z");
    }

    static jboolean areCommandBlocksEnabled(const jobject& obj) {
                
       const auto methodID = methodID_areCommandBlocksEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServerMotd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("af", "getMotd", "method_3818", "getServerMotd", "m_129916_"), "()Ljava/lang/String;");
    }

    static jobject getServerMotd(const jobject& obj) {
                
       const auto methodID = methodID_getServerMotd();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setMotd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setMotd", "method_3834", "setMotd", "m_129989_"), "(Ljava/lang/String;)V");
    }

    static void setMotd(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setMotd();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isStopped() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ag", "isStopped", "method_3750", "isStopped", "m_129918_"), "()Z");
    }

    static jboolean isStopped(const jobject& obj) {
                
       const auto methodID = methodID_isStopped();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayerManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ah", "getPlayerList", "method_3760", "getPlayerManager", "m_6846_"), "()Laur;");
    }

    static jobject getPlayerManager(const jobject& obj) {
                
       const auto methodID = methodID_getPlayerManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPlayerManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPlayerList", "method_3846", "setPlayerManager", "m_129823_"), "(Laur;)V");
    }

    static void setPlayerManager(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPlayerManager();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isRemote() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "isPublished", "method_3860", "isRemote", "m_6992_"), "()Z");
    }

    static jboolean isRemote(const jobject& obj) {
                
       const auto methodID = methodID_isRemote();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDefaultGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDefaultGameType", "method_3838", "setDefaultGameMode", "m_7835_"), "(Ldct;)V");
    }

    static void setDefaultGameMode(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDefaultGameMode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNetworkIo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ai", "getConnection", "method_3787", "getNetworkIo", "m_129919_"), "()Lart;");
    }

    static jobject getNetworkIo(const jobject& obj) {
                
       const auto methodID = methodID_getNetworkIo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isLoading() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aj", "isReady", "method_3820", "isLoading", "m_129920_"), "()Z");
    }

    static jboolean isLoading(const jobject& obj) {
                
       const auto methodID = methodID_isLoading();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasGui() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ak", "hasGui", "method_3727", "hasGui", "m_6370_"), "()Z");
    }

    static jboolean hasGui(const jobject& obj) {
                
       const auto methodID = methodID_hasGui();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_openToLan() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "publishServer", "method_3763", "openToLan", "m_7386_"), "(Ldct;ZI)Z");
    }

    static jboolean openToLan(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jint& arg2) {
                
       const auto methodID = methodID_openToLan();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("al", "getTickCount", "method_3780", "getTicks", "m_129921_"), "()I");
    }

    static jint getTicks(const jobject& obj) {
                
       const auto methodID = methodID_getTicks();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpawnProtectionRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("am", "getSpawnProtectionRadius", "method_3841", "getSpawnProtectionRadius", "m_6396_"), "()I");
    }

    static jint getSpawnProtectionRadius(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnProtectionRadius();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSpawnProtected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isUnderSpawnProtection", "method_3785", "isSpawnProtected", "m_7762_"), "(Laqu;Ljd;Lcmx;)Z");
    }

    static jboolean isSpawnProtected(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_isSpawnProtected();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_acceptsStatusQuery() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("an", "repliesToStatus", "method_27902", "acceptsStatusQuery", "m_6373_"), "()Z");
    }

    static jboolean acceptsStatusQuery(const jobject& obj) {
                
       const auto methodID = methodID_acceptsStatusQuery();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_hideOnlinePlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ao", "hidesOnlinePlayers", "method_39424", "hideOnlinePlayers", "m_183306_"), "()Z");
    }

    static jboolean hideOnlinePlayers(const jobject& obj) {
                
       const auto methodID = methodID_hideOnlinePlayers();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getProxy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ap", "getProxy", "method_36113", "getProxy", "m_177930_"), "()Ljava/net/Proxy;");
    }

    static jobject getProxy(const jobject& obj) {
                
       const auto methodID = methodID_getProxy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayerIdleTimeout() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aq", "getPlayerIdleTimeout", "method_3862", "getPlayerIdleTimeout", "m_129924_"), "()I");
    }

    static jint getPlayerIdleTimeout(const jobject& obj) {
                
       const auto methodID = methodID_getPlayerIdleTimeout();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPlayerIdleTimeout() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setPlayerIdleTimeout", "method_3803", "setPlayerIdleTimeout", "m_7196_"), "(I)V");
    }

    static void setPlayerIdleTimeout(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setPlayerIdleTimeout();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSessionService() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ar", "getSessionService", "method_3844", "getSessionService", "m_129925_"), "()Lcom/mojang/authlib/minecraft/MinecraftSessionService;");
    }

    static jobject getSessionService(const jobject& obj) {
                
       const auto methodID = methodID_getSessionService();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServicesSignatureVerifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("as", "getProfileKeySignatureValidator", "method_44301", "getServicesSignatureVerifier", "m_284385_"), "()Lazb;");
    }

    static jobject getServicesSignatureVerifier(const jobject& obj) {
                
       const auto methodID = methodID_getServicesSignatureVerifier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGameProfileRepo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("at", "getProfileRepository", "method_3719", "getGameProfileRepo", "m_129926_"), "()Lcom/mojang/authlib/GameProfileRepository;");
    }

    static jobject getGameProfileRepo(const jobject& obj) {
                
       const auto methodID = methodID_getGameProfileRepo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getUserCache() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("au", "getProfileCache", "method_3793", "getUserCache", "m_129927_"), "()Laun;");
    }

    static jobject getUserCache(const jobject& obj) {
                
       const auto methodID = methodID_getUserCache();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServerMetadata() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("av", "getStatus", "method_3765", "getServerMetadata", "m_129928_"), "()Lajq;");
    }

    static jobject getServerMetadata(const jobject& obj) {
                
       const auto methodID = methodID_getServerMetadata();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_forcePlayerSampleUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aw", "invalidateStatus", "method_3856", "forcePlayerSampleUpdate", "m_129929_"), "()V");
    }

    static void forcePlayerSampleUpdate(const jobject& obj) {
                
       const auto methodID = methodID_forcePlayerSampleUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxWorldBorderRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ax", "getAbsoluteMaxWorldSize", "method_3749", "getMaxWorldBorderRadius", "m_6329_"), "()I");
    }

    static jint getMaxWorldBorderRadius(const jobject& obj) {
                
       const auto methodID = methodID_getMaxWorldBorderRadius();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldExecuteAsync() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ay", "scheduleExecutables", "method_5384", "shouldExecuteAsync", "m_5660_"), "()Z");
    }

    static jboolean shouldExecuteAsync(const jobject& obj) {
                
       const auto methodID = methodID_shouldExecuteAsync();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_executeSync() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "executeIfPossible", "method_40000", "executeSync", "m_201446_"), "(Ljava/lang/Runnable;)V");
    }

    static void executeSync(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_executeSync();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getThread() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("az", "getRunningThread", "method_3777", "getThread", "m_6304_"), "()Ljava/lang/Thread;");
    }

    static jobject getThread(const jobject& obj) {
                
       const auto methodID = methodID_getThread();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNetworkCompressionThreshold() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aA", "getCompressionThreshold", "method_3773", "getNetworkCompressionThreshold", "m_6328_"), "()I");
    }

    static jint getNetworkCompressionThreshold(const jobject& obj) {
                
       const auto methodID = methodID_getNetworkCompressionThreshold();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldEnforceSecureProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aB", "enforceSecureProfile", "method_43500", "shouldEnforceSecureProfile", "m_214005_"), "()Z");
    }

    static jboolean shouldEnforceSecureProfile(const jobject& obj) {
                
       const auto methodID = methodID_shouldEnforceSecureProfile();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTimeReference() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aC", "getNextTickTime", "method_3826", "getTimeReference", "m_129932_"), "()J");
    }

    static jlong getTimeReference(const jobject& obj) {
                
       const auto methodID = methodID_getTimeReference();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDataFixer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aD", "getFixerUpper", "method_3855", "getDataFixer", "m_129933_"), "()Lcom/mojang/datafixers/DataFixer;");
    }

    static jobject getDataFixer(const jobject& obj) {
                
       const auto methodID = methodID_getDataFixer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpawnRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpawnRadius", "method_3829", "getSpawnRadius", "m_129803_"), "(Laqu;)I");
    }

    static jint getSpawnRadius(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSpawnRadius();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAdvancementLoader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aE", "getAdvancements", "method_3851", "getAdvancementLoader", "m_129889_"), "()Lale;");
    }

    static jobject getAdvancementLoader(const jobject& obj) {
                
       const auto methodID = methodID_getAdvancementLoader();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCommandFunctionManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aF", "getFunctions", "method_3740", "getCommandFunctionManager", "m_129890_"), "()Lalg;");
    }

    static jobject getCommandFunctionManager(const jobject& obj) {
                
       const auto methodID = methodID_getCommandFunctionManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_reloadResources() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "reloadResources", "method_29439", "reloadResources", "m_129861_"), "(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject reloadResources(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_reloadResources();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_loadDataPacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "configurePackRepository", "method_29736", "loadDataPacks", "m_246048_"), "(Latp;Lddr;ZZ)Lddr;");
    }

    static jobject loadDataPacks(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_loadDataPacks();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__loadDataPacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "configureRepositoryWithSelection", "method_59848", "loadDataPacks", "m_319199_"), "(Latp;Ljava/util/Collection;Lcpl;Z)Lddr;");
    }

    static jobject _loadDataPacks(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__loadDataPacks();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_forceEnableRequestedFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "enableForcedFeaturePacks", "method_59847", "forceEnableRequestedFeatures", "m_324483_"), "(Latp;Lcpl;)V");
    }

    static void forceEnableRequestedFeatures(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_forceEnableRequestedFeatures();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createDataPackSettings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getSelectedPacks", "method_29735", "createDataPackSettings", "m_129817_"), "(Latp;Z)Ldck;");
    }

    static jobject createDataPackSettings(const jobject& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createDataPackSettings();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_kickNonWhitelistedPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "kickUnlistedPlayers", "method_3728", "kickNonWhitelistedPlayers", "m_129849_"), "(Let;)V");
    }

    static void kickNonWhitelistedPlayers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_kickNonWhitelistedPlayers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDataPackManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aG", "getPackRepository", "method_3836", "getDataPackManager", "m_129891_"), "()Latp;");
    }

    static jobject getDataPackManager(const jobject& obj) {
                
       const auto methodID = methodID_getDataPackManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCommandManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aH", "getCommands", "method_3734", "getCommandManager", "m_129892_"), "()Leu;");
    }

    static jobject getCommandManager(const jobject& obj) {
                
       const auto methodID = methodID_getCommandManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCommandSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aI", "createCommandSourceStack", "method_3739", "getCommandSource", "m_129893_"), "()Let;");
    }

    static jobject getCommandSource(const jobject& obj) {
                
       const auto methodID = methodID_getCommandSource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldReceiveFeedback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k_", "acceptsSuccess", "method_9200", "shouldReceiveFeedback", "m_6999_"), "()Z");
    }

    static jboolean shouldReceiveFeedback(const jobject& obj) {
                
       const auto methodID = methodID_shouldReceiveFeedback();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldTrackOutput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w_", "acceptsFailure", "method_9202", "shouldTrackOutput", "m_7028_"), "()Z");
    }

    static jboolean shouldTrackOutput(const jobject& obj) {
                
       const auto methodID = methodID_shouldTrackOutput();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldBroadcastConsoleToOps() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("M_", "shouldInformAdmins", "method_9201", "shouldBroadcastConsoleToOps", "m_6102_"), "()Z");
    }

    static jboolean shouldBroadcastConsoleToOps(const jobject& obj) {
                
       const auto methodID = methodID_shouldBroadcastConsoleToOps();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRecipeManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aJ", "getRecipeManager", "method_3772", "getRecipeManager", "m_129894_"), "()Lczd;");
    }

    static jobject getRecipeManager(const jobject& obj) {
                
       const auto methodID = methodID_getRecipeManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getScoreboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aK", "getScoreboard", "method_3845", "getScoreboard", "m_129896_"), "()Lalk;");
    }

    static jobject getScoreboard(const jobject& obj) {
                
       const auto methodID = methodID_getScoreboard();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDataCommandStorage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aL", "getCommandStorage", "method_22827", "getDataCommandStorage", "m_129897_"), "()Leqw;");
    }

    static jobject getDataCommandStorage(const jobject& obj) {
                
       const auto methodID = methodID_getDataCommandStorage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGameRules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aM", "getGameRules", "method_3767", "getGameRules", "m_129900_"), "()Ldcs;");
    }

    static jobject getGameRules(const jobject& obj) {
                
       const auto methodID = methodID_getGameRules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBossBarManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aN", "getCustomBossEvents", "method_3837", "getBossBarManager", "m_129901_"), "()Lalt;");
    }

    static jobject getBossBarManager(const jobject& obj) {
                
       const auto methodID = methodID_getBossBarManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEnforceWhitelist() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aO", "isEnforceWhitelist", "method_3729", "isEnforceWhitelist", "m_129902_"), "()Z");
    }

    static jboolean isEnforceWhitelist(const jobject& obj) {
                
       const auto methodID = methodID_isEnforceWhitelist();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setEnforceWhitelist() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "setEnforceWhitelist", "method_3731", "setEnforceWhitelist", "m_130004_"), "(Z)V");
    }

    static void setEnforceWhitelist(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setEnforceWhitelist();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAverageTickTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aP", "getCurrentSmoothedTickTime", "method_54832", "getAverageTickTime", "m_304767_"), "()F");
    }

    static jfloat getAverageTickTime(const jobject& obj) {
                
       const auto methodID = methodID_getAverageTickTime();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTickManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aQ", "tickRateManager", "method_54833", "getTickManager", "m_306290_"), "()Lall;");
    }

    static jobject getTickManager(const jobject& obj) {
                
       const auto methodID = methodID_getTickManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAverageNanosPerTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aR", "getAverageTickTimeNanos", "method_54834", "getAverageNanosPerTick", "m_304840_"), "()J");
    }

    static jlong getAverageNanosPerTick(const jobject& obj) {
                
       const auto methodID = methodID_getAverageNanosPerTick();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTickTimes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aS", "getTickTimesNanos", "method_54835", "getTickTimes", "m_307378_"), "()[J");
    }

    static jlong getTickTimes(const jobject& obj) {
                
       const auto methodID = methodID_getTickTimes();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPermissionLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getProfilePermissions", "method_3835", "getPermissionLevel", "m_129944_"), "(Lcom/mojang/authlib/GameProfile;)I");
    }

    static jint getPermissionLevel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPermissionLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getProfiler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT", "getProfiler", "method_16044", "getProfiler", "m_129905_"), "()Lbnf;");
    }

    static jobject getProfiler(const jobject& obj) {
                
       const auto methodID = methodID_getProfiler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isHost() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isSingleplayerOwner", "method_19466", "isHost", "m_7779_"), "(Lcom/mojang/authlib/GameProfile;)Z");
    }

    static jboolean isHost(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isHost();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dumpProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dumpServerProperties", "method_37113", "dumpProperties", "m_142116_"), "(Ljava/nio/file/Path;)V");
    }

    static void dumpProperties(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dumpProperties();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "saveDebugReport", "method_21613", "dump", "m_129859_"), "(Ljava/nio/file/Path;)V");
    }

    static void dump(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dump();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dumpStats() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "dumpMiscStats", "method_21692", "dumpStats", "m_129950_"), "(Ljava/nio/file/Path;)V");
    }

    static void dumpStats(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dumpStats();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dumpGamerules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "dumpGameRules", "method_21615", "dumpGamerules", "m_129983_"), "(Ljava/nio/file/Path;)V");
    }

    static void dumpGamerules(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dumpGamerules();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dumpClasspath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "dumpClasspath", "method_21616", "dumpClasspath", "m_129991_"), "(Ljava/nio/file/Path;)V");
    }

    static void dumpClasspath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dumpClasspath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dumpThreads() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "dumpThreads", "method_21713", "dumpThreads", "m_129995_"), "(Ljava/nio/file/Path;)V");
    }

    static void dumpThreads(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dumpThreads();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dumpNativeModules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "dumpNativeModules", "method_38584", "dumpNativeModules", "m_195521_"), "(Ljava/nio/file/Path;)V");
    }

    static void dumpNativeModules(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dumpNativeModules();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_startTickMetrics() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bI", "startMetricsRecordingTick", "method_24487", "startTickMetrics", "m_177945_"), "()V");
    }

    static void startTickMetrics(const jobject& obj) {
                
       const auto methodID = methodID_startTickMetrics();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_endTickMetrics() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aU", "endMetricsRecordingTick", "method_24490", "endTickMetrics", "m_177946_"), "()V");
    }

    static void endTickMetrics(const jobject& obj) {
                
       const auto methodID = methodID_endTickMetrics();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isRecorderActive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aV", "isRecordingMetrics", "method_37321", "isRecorderActive", "m_177927_"), "()Z");
    }

    static jboolean isRecorderActive(const jobject& obj) {
                
       const auto methodID = methodID_isRecorderActive();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setupRecorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startRecordingMetrics", "method_37320", "setupRecorder", "m_177923_"), "(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V");
    }

    static void setupRecorder(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setupRecorder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_resetRecorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aW", "stopRecordingMetrics", "method_37322", "resetRecorder", "m_177928_"), "()V");
    }

    static void resetRecorder(const jobject& obj) {
                
       const auto methodID = methodID_resetRecorder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_stopRecorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aX", "finishRecordingMetrics", "method_37323", "stopRecorder", "m_177929_"), "()V");
    }

    static void stopRecorder(const jobject& obj) {
                
       const auto methodID = methodID_stopRecorder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_forceStopRecorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aY", "cancelRecordingMetrics", "method_42062", "forceStopRecorder", "m_236737_"), "()V");
    }

    static void forceStopRecorder(const jobject& obj) {
                
       const auto methodID = methodID_forceStopRecorder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSavePath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getWorldPath", "method_27050", "getSavePath", "m_129843_"), "(Lerd;)Ljava/nio/file/Path;");
    }

    static jobject getSavePath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSavePath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_syncChunkWrites() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aZ", "forceSynchronousWrites", "method_27051", "syncChunkWrites", "m_6365_"), "()Z");
    }

    static jboolean syncChunkWrites(const jobject& obj) {
                
       const auto methodID = methodID_syncChunkWrites();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStructureTemplateManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ba", "getStructureManager", "method_27727", "getStructureTemplateManager", "m_236738_"), "()Lenu;");
    }

    static jobject getStructureTemplateManager(const jobject& obj) {
                
       const auto methodID = methodID_getStructureTemplateManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSaveProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bb", "getWorldData", "method_27728", "getSaveProperties", "m_129910_"), "()Lerl;");
    }

    static jobject getSaveProperties(const jobject& obj) {
                
       const auto methodID = methodID_getSaveProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRegistryManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bc", "registryAccess", "method_30611", "getRegistryManager", "m_206579_"), "()Lka$b;");
    }

    static jobject getRegistryManager(const jobject& obj) {
                
       const auto methodID = methodID_getRegistryManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCombinedDynamicRegistries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bd", "registries", "method_46221", "getCombinedDynamicRegistries", "m_247573_"), "()Ljt;");
    }

    static jobject getCombinedDynamicRegistries(const jobject& obj) {
                
       const auto methodID = methodID_getCombinedDynamicRegistries();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getReloadableRegistries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("be", "reloadableRegistries", "method_58576", "getReloadableRegistries", "m_323018_"), "()Lalb$b;");
    }

    static jobject getReloadableRegistries(const jobject& obj) {
                
       const auto methodID = methodID_getReloadableRegistries();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createFilterer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTextFilterForPlayer", "method_31371", "createFilterer", "m_7950_"), "(Laqv;)Larz;");
    }

    static jobject createFilterer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createFilterer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPlayerInteractionManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createGameModeForPlayer", "method_32816", "getPlayerInteractionManager", "m_177933_"), "(Laqv;)Laqw;");
    }

    static jobject getPlayerInteractionManager(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPlayerInteractionManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getForcedGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bf", "getForcedGameType", "method_3761", "getForcedGameMode", "m_142359_"), "()Ldct;");
    }

    static jobject getForcedGameMode(const jobject& obj) {
                
       const auto methodID = methodID_getForcedGameMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getResourceManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bg", "getResourceManager", "method_34864", "getResourceManager", "m_177941_"), "()Laue;");
    }

    static jobject getResourceManager(const jobject& obj) {
                
       const auto methodID = methodID_getResourceManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSaving() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bh", "isCurrentlySaving", "method_39219", "isSaving", "m_195518_"), "()Z");
    }

    static jboolean isSaving(const jobject& obj) {
                
       const auto methodID = methodID_isSaving();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDebugRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bi", "isTimeProfilerRunning", "method_24488", "isDebugRunning", "m_177942_"), "()Z");
    }

    static jboolean isDebugRunning(const jobject& obj) {
                
       const auto methodID = methodID_isDebugRunning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_startDebug() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bj", "startTimeProfiler", "method_3832", "startDebug", "m_177943_"), "()V");
    }

    static void startDebug(const jobject& obj) {
                
       const auto methodID = methodID_startDebug();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_stopDebug() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bk", "stopTimeProfiler", "method_24489", "stopDebug", "m_177944_"), "()Lbne;");
    }

    static jobject stopDebug(const jobject& obj) {
                
       const auto methodID = methodID_stopDebug();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxChainedNeighborUpdates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bl", "getMaxChainedNeighborUpdates", "method_41239", "getMaxChainedNeighborUpdates", "m_213994_"), "()I");
    }

    static jint getMaxChainedNeighborUpdates(const jobject& obj) {
                
       const auto methodID = methodID_getMaxChainedNeighborUpdates();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_logChatMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "logChatMessage", "method_43614", "logChatMessage", "m_241158_"), "(Lwz;Lwv$a;Ljava/lang/String;)V");
    }

    static void logChatMessage(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_logChatMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getMessageDecorator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bm", "getChatDecorator", "method_43929", "getMessageDecorator", "m_236742_"), "()Lwu;");
    }

    static jobject getMessageDecorator(const jobject& obj) {
                
       const auto methodID = methodID_getMessageDecorator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldLogIps() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bn", "logIPs", "method_52344", "shouldLogIps", "m_292975_"), "()Z");
    }

    static jboolean shouldLogIps(const jobject& obj) {
                
       const auto methodID = methodID_shouldLogIps();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_subscribeToDebugSample() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "subscribeToDebugSample", "method_56625", "subscribeToDebugSample", "m_320401_"), "(Laqv;Lbls;)V");
    }

    static void subscribeToDebugSample(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_subscribeToDebugSample();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_acceptsTransfers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bo", "acceptsTransfers", "method_56040", "acceptsTransfers", "m_320782_"), "()Z");
    }

    static jboolean acceptsTransfers(const jobject& obj) {
                
       const auto methodID = methodID_acceptsTransfers();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeChunkIoReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "storeChunkIoError", "method_61089", "writeChunkIoReport", "m_338468_"), "(Lo;Ldcd;Ldws;)V");
    }

    static void writeChunkIoReport(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_writeChunkIoReport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onChunkLoadFailure() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "reportChunkLoadFailure", "method_57821", "onChunkLoadFailure", "m_293783_"), "(Ljava/lang/Throwable;Ldws;Ldcd;)V");
    }

    static void onChunkLoadFailure(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onChunkLoadFailure();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onChunkSaveFailure() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "reportChunkSaveFailure", "method_57822", "onChunkSaveFailure", "m_322794_"), "(Ljava/lang/Throwable;Ldws;Ldcd;)V");
    }

    static void onChunkSaveFailure(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onChunkSaveFailure();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getBrewingRecipeRegistry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bp", "potionBrewing", "method_59777", "getBrewingRecipeRegistry", "m_323711_"), "()Lcwt;");
    }

    static jobject getBrewingRecipeRegistry(const jobject& obj) {
                
       const auto methodID = methodID_getBrewingRecipeRegistry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServerLinks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bq", "serverLinks", "method_60672", "getServerLinks", "m_338896_"), "()Lalj;");
    }

    static jobject getServerLinks(const jobject& obj) {
                
       const auto methodID = methodID_getServerLinks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_MINECRAFTSERVER_HPP