// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_SAMPLESUBSCRIPTIONTRACKER_HPP
#define NET_MINECRAFT_SERVER_SAMPLESUBSCRIPTIONTRACKER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.SampleSubscriptionTracker
 * Remapped: blq
 */
namespace SampleSubscriptionTracker {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("blq", "net/minecraft/util/debugchart/DebugSampleSubscriptionTracker", "net/minecraft/class_9188", "net/minecraft/server/SampleSubscriptionTracker", "net/minecraft/src/C_313282_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.server.SampleSubscriptionTracker#STOP_TRACK_TICK
    [[maybe_unused]] static jint get_field_STOP_TRACK_TICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STOP_SENDING_AFTER_TICKS", "field_48808", "STOP_TRACK_TICK", "f_316334_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.SampleSubscriptionTracker#STOP_TRACK_TICK
    [[maybe_unused]] static void set_field_STOP_TRACK_TICK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STOP_SENDING_AFTER_TICKS", "field_48808", "STOP_TRACK_TICK", "f_316334_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.SampleSubscriptionTracker#STOP_TRACK_MS
    [[maybe_unused]] static jint get_field_STOP_TRACK_MS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STOP_SENDING_AFTER_MS", "field_48809", "STOP_TRACK_MS", "f_315995_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.SampleSubscriptionTracker#STOP_TRACK_MS
    [[maybe_unused]] static void set_field_STOP_TRACK_MS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STOP_SENDING_AFTER_MS", "field_48809", "STOP_TRACK_MS", "f_315995_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.SampleSubscriptionTracker#playerManager
    static jobject get_field_playerManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "playerList", "field_48810", "playerManager", "f_316118_"), "Laur;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.SampleSubscriptionTracker#playerManager
    static void set_field_playerManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "playerList", "field_48810", "playerManager", "f_316118_"), "Laur;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.SampleSubscriptionTracker#subscriptionMap
    static jobject get_field_subscriptionMap(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "subscriptions", "field_48811", "subscriptionMap", "f_317029_"), "Ljava/util/EnumMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.SampleSubscriptionTracker#subscriptionMap
    static void set_field_subscriptionMap(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "subscriptions", "field_48811", "subscriptionMap", "f_317029_"), "Ljava/util/EnumMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.SampleSubscriptionTracker#pendingQueue
    static jobject get_field_pendingQueue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "subscriptionRequestQueue", "field_48812", "pendingQueue", "f_316497_"), "Ljava/util/Queue;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.SampleSubscriptionTracker#pendingQueue
    static void set_field_pendingQueue(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "subscriptionRequestQueue", "field_48812", "pendingQueue", "f_316497_"), "Ljava/util/Queue;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_shouldPush() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldLogSamples", "method_56657", "shouldPush", "m_322854_"), "(Lbls;)Z");
    }

    static jboolean shouldPush(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldPush();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "broadcast", "method_56655", "sendPacket", "m_319135_"), "(Lacv;)V");
    }

    static void sendPacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendPacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "subscribe", "method_56656", "addPlayer", "m_320353_"), "(Laqv;Lbls;)V");
    }

    static void addPlayer(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addPlayer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_56652", "tick", "m_322357_"), "(I)V");
    }

    static void tick(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onSubscription() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleSubscriptions", "method_56654", "onSubscription", "m_322060_"), "(JI)V");
    }

    static void onSubscription(const jobject& obj, const jlong& arg0, const jint& arg1) {
                
       const auto methodID = methodID_onSubscription();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onUnsubscription() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleUnsubscriptions", "method_56658", "onUnsubscription", "m_320531_"), "(JI)V");
    }

    static void onUnsubscription(const jobject& obj, const jlong& arg0, const jint& arg1) {
                
       const auto methodID = methodID_onUnsubscription();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_SERVER_SAMPLESUBSCRIPTIONTRACKER_HPP