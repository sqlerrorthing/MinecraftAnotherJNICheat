// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_FILTER_FILTEREDMESSAGE_HPP
#define NET_MINECRAFT_SERVER_FILTER_FILTEREDMESSAGE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.filter.FilteredMessage
 * Remapped: arm
 */
namespace FilteredMessage {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("arm", "net/minecraft/server/network/FilteredText", "net/minecraft/class_5837", "net/minecraft/server/filter/FilteredMessage", "net/minecraft/src/C_212939_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.filter.FilteredMessage#raw
    static jobject get_field_raw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "raw", "comp_841", "raw", "f_215168_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.filter.FilteredMessage#raw
    static void set_field_raw(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "raw", "comp_841", "raw", "f_215168_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.filter.FilteredMessage#mask
    static jobject get_field_mask(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "mask", "comp_978", "mask", "f_243010_"), "Lxd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.filter.FilteredMessage#mask
    static void set_field_mask(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "mask", "comp_978", "mask", "f_243010_"), "Lxd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.server.filter.FilteredMessage#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_28863", "EMPTY", "f_243020_"), "Larm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.filter.FilteredMessage#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_28863", "EMPTY", "f_243020_"), "Larm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_permitted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "passThrough", "method_45060", "permitted", "m_243054_"), "(Ljava/lang/String;)Larm;");
    }

    static jobject permitted(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_permitted();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_censored() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "fullyFiltered", "method_45062", "censored", "m_243131_"), "(Ljava/lang/String;)Larm;");
    }

    static jobject censored(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_censored();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_filter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "filtered", "method_45059", "filter", "m_243090_"), "()Ljava/lang/String;");
    }

    static jobject filter(const jobject& obj) {
                
       const auto methodID = methodID_filter();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "filteredOrEmpty", "method_45061", "getString", "m_243113_"), "()Ljava/lang/String;");
    }

    static jobject getString(const jobject& obj) {
                
       const auto methodID = methodID_getString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFiltered() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isFiltered", "method_45063", "isFiltered", "m_215174_"), "()Z");
    }

    static jboolean isFiltered(const jobject& obj) {
                
       const auto methodID = methodID_isFiltered();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__raw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "raw", "comp_841", "raw", "f_215168_"), "()Ljava/lang/String;");
    }

    static jobject _raw(const jobject& obj) {
                
       const auto methodID = methodID__raw();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__mask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "mask", "comp_978", "mask", "f_243010_"), "()Lxd;");
    }

    static jobject _mask(const jobject& obj) {
                
       const auto methodID = methodID__mask();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_FILTER_FILTEREDMESSAGE_HPP