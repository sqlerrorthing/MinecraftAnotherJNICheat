// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_FILTER_TEXTFILTERER$IMPL_HPP
#define NET_MINECRAFT_SERVER_FILTER_TEXTFILTERER$IMPL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.filter.TextFilterer$Impl
 * Remapped: asa$d
 */
namespace TextFilterer$Impl {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("asa$d", "net/minecraft/server/network/TextFilterClient$PlayerContext", "net/minecraft/class_5514$class_5516", "net/minecraft/server/filter/TextFilterer$Impl", "net/minecraft/src/C_42_$C_45_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.filter.TextFilterer$Impl#gameProfile
    static jobject get_field_gameProfile(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "profile", "field_26837", "gameProfile", "f_10175_"), "Lcom/mojang/authlib/GameProfile;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.filter.TextFilterer$Impl#gameProfile
    static void set_field_gameProfile(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "profile", "field_26837", "gameProfile", "f_10175_"), "Lcom/mojang/authlib/GameProfile;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.filter.TextFilterer$Impl#executor
    static jobject get_field_executor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "streamExecutor", "field_26838", "executor", "f_10176_"), "Ljava/util/concurrent/Executor;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.filter.TextFilterer$Impl#executor
    static void set_field_executor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "streamExecutor", "field_26838", "executor", "f_10176_"), "Ljava/util/concurrent/Executor;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_onConnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "join", "method_31287", "onConnect", "m_7674_"), "()V");
    }

    static void onConnect(const jobject& obj) {
                
       const auto methodID = methodID_onConnect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onDisconnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "leave", "method_31290", "onDisconnect", "m_7670_"), "()V");
    }

    static void onDisconnect(const jobject& obj) {
                
       const auto methodID = methodID_onDisconnect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_filterTexts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "processMessageBundle", "method_31289", "filterTexts", "m_5925_"), "(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject filterTexts(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_filterTexts();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_filterText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "processStreamMessage", "method_31288", "filterText", "m_6770_"), "(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject filterText(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_filterText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_FILTER_TEXTFILTERER$IMPL_HPP