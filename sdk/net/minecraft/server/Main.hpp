// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_MAIN_HPP
#define NET_MINECRAFT_SERVER_MAIN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.Main
 * Remapped: net/minecraft/server/Main
 */
namespace Main {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("net/minecraft/server/Main", "net/minecraft/server/Main", "net/minecraft/server/Main", "net/minecraft/server/Main", "net/minecraft/server/Main"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.Main#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_24625", "LOGGER", "f_129670_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.Main#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_24625", "LOGGER", "f_129670_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_main() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("main", "main", "main", "main", "main"), "([Ljava/lang/String;)V");
    }

    static void main(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_main();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writePidFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writePidFile", "method_49066", "writePidFile", "m_269308_"), "(Ljava/nio/file/Path;)V");
    }

    static void writePidFile(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_writePidFile();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createServerConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "loadOrCreateConfig", "method_46219", "createServerConfig", "m_245383_"), "(Lapo;Lcom/mojang/serialization/Dynamic;ZLatp;)Lalo$c;");
    }

    static jobject createServerConfig(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createServerConfig();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_forceUpgradeWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forceUpgrade", "method_29173", "forceUpgradeWorld", "m_195488_"), "(Lerf$c;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lka;Z)V");
    }

    static void forceUpgradeWorld(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jobject& arg3, const jobject& arg4, const jboolean& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_forceUpgradeWorld();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
};

#endif // NET_MINECRAFT_SERVER_MAIN_HPP