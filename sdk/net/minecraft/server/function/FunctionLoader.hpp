// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_FUNCTION_FUNCTIONLOADER_HPP
#define NET_MINECRAFT_SERVER_FUNCTION_FUNCTIONLOADER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.function.FunctionLoader
 * Remapped: alf
 */
namespace FunctionLoader {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("alf", "net/minecraft/server/ServerFunctionLibrary", "net/minecraft/class_5349", "net/minecraft/server/function/FunctionLoader", "net/minecraft/src/C_5280_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.function.FunctionLoader#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_25326", "LOGGER", "f_136043_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.function.FunctionLoader#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_25326", "LOGGER", "f_136043_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.function.FunctionLoader#FUNCTION_REGISTRY_KEY
    [[maybe_unused]] static jobject get_field_FUNCTION_REGISTRY_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TYPE_KEY", "field_51976", "FUNCTION_REGISTRY_KEY", "f_336672_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.function.FunctionLoader#FUNCTION_REGISTRY_KEY
    [[maybe_unused]] static void set_field_FUNCTION_REGISTRY_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TYPE_KEY", "field_51976", "FUNCTION_REGISTRY_KEY", "f_336672_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.function.FunctionLoader#FINDER
    [[maybe_unused]] static jobject get_field_FINDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LISTER", "field_39978", "FINDER", "f_244053_"), "Lakk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.function.FunctionLoader#FINDER
    [[maybe_unused]] static void set_field_FINDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LISTER", "field_39978", "FINDER", "f_244053_"), "Lakk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.function.FunctionLoader#functions
    static jobject get_field_functions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "functions", "field_25329", "functions", "f_136046_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.function.FunctionLoader#functions
    static void set_field_functions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "functions", "field_25329", "functions", "f_136046_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.function.FunctionLoader#tagLoader
    static jobject get_field_tagLoader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "tagsLoader", "field_25330", "tagLoader", "f_136047_"), "Lawv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.function.FunctionLoader#tagLoader
    static void set_field_tagLoader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "tagsLoader", "field_25330", "tagLoader", "f_136047_"), "Lawv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.function.FunctionLoader#tags
    static jobject get_field_tags(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "tags", "field_25801", "tags", "f_136048_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.function.FunctionLoader#tags
    static void set_field_tags(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "tags", "field_25801", "tags", "f_136048_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.function.FunctionLoader#level
    static jint get_field_level(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "functionCompilationLevel", "field_25331", "level", "f_136049_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.function.FunctionLoader#level
    static void set_field_level(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "functionCompilationLevel", "field_25331", "level", "f_136049_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.function.FunctionLoader#commandDispatcher
    static jobject get_field_commandDispatcher(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "dispatcher", "field_25332", "commandDispatcher", "f_136050_"), "Lcom/mojang/brigadier/CommandDispatcher;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.function.FunctionLoader#commandDispatcher
    static void set_field_commandDispatcher(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "dispatcher", "field_25332", "commandDispatcher", "f_136050_"), "Lcom/mojang/brigadier/CommandDispatcher;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getFunction", "method_29456", "get", "m_136089_"), "(Lakr;)Ljava/util/Optional;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFunctions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getFunctions", "method_29447", "getFunctions", "m_136055_"), "()Ljava/util/Map;");
    }

    static jobject getFunctions(const jobject& obj) {
                
       const auto methodID = methodID_getFunctions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTagOrEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTag", "method_29459", "getTagOrEmpty", "m_214327_"), "(Lakr;)Ljava/util/Collection;");
    }

    static jobject getTagOrEmpty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTagOrEmpty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getAvailableTags", "method_29458", "getTags", "m_206891_"), "()Ljava/lang/Iterable;");
    }

    static jobject getTags(const jobject& obj) {
                
       const auto methodID = methodID_getTags();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_reload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "reload", "method_25931", "reload", "m_5540_"), "(Laty$a;Laue;Lbnf;Lbnf;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject reload(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_reload();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_readLines() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readLines", "method_29450", "readLines", "m_214316_"), "(Lauc;)Ljava/util/List;");
    }

    static jobject readLines(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_readLines();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_FUNCTION_FUNCTIONLOADER_HPP