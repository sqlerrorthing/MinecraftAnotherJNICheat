// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_FUNCTION_COMMANDFUNCTIONMANAGER_HPP
#define NET_MINECRAFT_SERVER_FUNCTION_COMMANDFUNCTIONMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.function.CommandFunctionManager
 * Remapped: alg
 */
namespace CommandFunctionManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("alg", "net/minecraft/server/ServerFunctionManager", "net/minecraft/class_2991", "net/minecraft/server/function/CommandFunctionManager", "net/minecraft/src/C_5281_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.function.CommandFunctionManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_47181", "LOGGER", "f_302783_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.function.CommandFunctionManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_47181", "LOGGER", "f_302783_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.function.CommandFunctionManager#TICK_TAG_ID
    [[maybe_unused]] static jobject get_field_TICK_TAG_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TICK_FUNCTION_TAG", "field_13417", "TICK_TAG_ID", "f_136099_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.function.CommandFunctionManager#TICK_TAG_ID
    [[maybe_unused]] static void set_field_TICK_TAG_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TICK_FUNCTION_TAG", "field_13417", "TICK_TAG_ID", "f_136099_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.function.CommandFunctionManager#LOAD_TAG_ID
    [[maybe_unused]] static jobject get_field_LOAD_TAG_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOAD_FUNCTION_TAG", "field_13412", "LOAD_TAG_ID", "f_136100_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.function.CommandFunctionManager#LOAD_TAG_ID
    [[maybe_unused]] static void set_field_LOAD_TAG_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOAD_FUNCTION_TAG", "field_13412", "LOAD_TAG_ID", "f_136100_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.function.CommandFunctionManager#server
    static jobject get_field_server(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "server", "field_13419", "server", "f_136101_"), "Lnet/minecraft/server/MinecraftServer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.function.CommandFunctionManager#server
    static void set_field_server(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "server", "field_13419", "server", "f_136101_"), "Lnet/minecraft/server/MinecraftServer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.function.CommandFunctionManager#tickFunctions
    static jobject get_field_tickFunctions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "ticking", "field_13418", "tickFunctions", "f_136105_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.function.CommandFunctionManager#tickFunctions
    static void set_field_tickFunctions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "ticking", "field_13418", "tickFunctions", "f_136105_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.function.CommandFunctionManager#justLoaded
    static jboolean get_field_justLoaded(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "postReload", "field_13422", "justLoaded", "f_136106_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.function.CommandFunctionManager#justLoaded
    static void set_field_justLoaded(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "postReload", "field_13422", "justLoaded", "f_136106_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.function.CommandFunctionManager#loader
    static jobject get_field_loader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "library", "field_25333", "loader", "f_136107_"), "Lalf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.function.CommandFunctionManager#loader
    static void set_field_loader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "library", "field_25333", "loader", "f_136107_"), "Lalf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getDispatcher() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDispatcher", "method_12900", "getDispatcher", "m_136127_"), "()Lcom/mojang/brigadier/CommandDispatcher;");
    }

    static jobject getDispatcher(const jobject& obj) {
                
       const auto methodID = methodID_getDispatcher();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "tick", "method_18699", "tick", "m_136128_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_executeAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "executeTagFunctions", "method_29460", "executeAll", "m_136115_"), "(Ljava/util/Collection;Lakr;)V");
    }

    static void executeAll(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_executeAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_execute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "execute", "method_12904", "execute", "m_136112_"), "(Lig;Let;)V");
    }

    static void execute(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_execute();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setFunctions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "replaceLibrary", "method_29461", "setFunctions", "m_136120_"), "(Lalf;)V");
    }

    static void setFunctions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setFunctions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "postReload", "method_29773", "load", "m_136125_"), "(Lalf;)V");
    }

    static void load(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_load();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getScheduledCommandSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getGameLoopSender", "method_12899", "getScheduledCommandSource", "m_136129_"), "()Let;");
    }

    static jobject getScheduledCommandSource(const jobject& obj) {
                
       const auto methodID = methodID_getScheduledCommandSource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFunction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_12905", "getFunction", "m_136118_"), "(Lakr;)Ljava/util/Optional;");
    }

    static jobject getFunction(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFunction();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTag", "method_29462", "getTag", "m_214331_"), "(Lakr;)Ljava/util/Collection;");
    }

    static jobject getTag(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTag();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAllFunctions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getFunctionNames", "method_29463", "getAllFunctions", "m_136130_"), "()Ljava/lang/Iterable;");
    }

    static jobject getAllFunctions(const jobject& obj) {
                
       const auto methodID = methodID_getAllFunctions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFunctionTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getTagNames", "method_29464", "getFunctionTags", "m_136131_"), "()Ljava/lang/Iterable;");
    }

    static jobject getFunctionTags(const jobject& obj) {
                
       const auto methodID = methodID_getFunctionTags();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_FUNCTION_COMMANDFUNCTIONMANAGER_HPP