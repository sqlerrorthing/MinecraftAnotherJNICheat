// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_BANENTRY_HPP
#define NET_MINECRAFT_SERVER_BANENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.BanEntry
 * Remapped: aum
 */
namespace BanEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aum", "net/minecraft/server/players/BanListEntry", "net/minecraft/class_3309", "net/minecraft/server/BanEntry", "net/minecraft/src/C_89_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.server.BanEntry#DATE_FORMAT
    [[maybe_unused]] static jobject get_field_DATE_FORMAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DATE_FORMAT", "field_14308", "DATE_FORMAT", "f_10943_"), "Ljava/text/SimpleDateFormat;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.BanEntry#DATE_FORMAT
    [[maybe_unused]] static void set_field_DATE_FORMAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DATE_FORMAT", "field_14308", "DATE_FORMAT", "f_10943_"), "Ljava/text/SimpleDateFormat;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.BanEntry#FOREVER
    [[maybe_unused]] static jobject get_field_FOREVER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EXPIRES_NEVER", "field_29787", "FOREVER", "f_143953_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.BanEntry#FOREVER
    [[maybe_unused]] static void set_field_FOREVER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EXPIRES_NEVER", "field_29787", "FOREVER", "f_143953_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.server.BanEntry#creationDate
    static jobject get_field_creationDate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "created", "field_14306", "creationDate", "f_10944_"), "Ljava/util/Date;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.server.BanEntry#creationDate
    static void set_field_creationDate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "created", "field_14306", "creationDate", "f_10944_"), "Ljava/util/Date;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.server.BanEntry#source
    static jobject get_field_source(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "source", "field_14304", "source", "f_10945_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.server.BanEntry#source
    static void set_field_source(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "source", "field_14304", "source", "f_10945_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.server.BanEntry#expiryDate
    static jobject get_field_expiryDate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "expires", "field_14305", "expiryDate", "f_10946_"), "Ljava/util/Date;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.server.BanEntry#expiryDate
    static void set_field_expiryDate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "expires", "field_14305", "expiryDate", "f_10946_"), "Ljava/util/Date;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.server.BanEntry#reason
    static jobject get_field_reason(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "reason", "field_14307", "reason", "f_10947_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.server.BanEntry#reason
    static void set_field_reason(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "reason", "field_14307", "reason", "f_10947_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getCreationDate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getCreated", "method_34885", "getCreationDate", "m_143954_"), "()Ljava/util/Date;");
    }

    static jobject getCreationDate(const jobject& obj) {
                
       const auto methodID = methodID_getCreationDate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSource", "method_14501", "getSource", "m_10960_"), "()Ljava/lang/String;");
    }

    static jobject getSource(const jobject& obj) {
                
       const auto methodID = methodID_getSource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getExpiryDate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getExpires", "method_14502", "getExpiryDate", "m_10961_"), "()Ljava/util/Date;");
    }

    static jobject getExpiryDate(const jobject& obj) {
                
       const auto methodID = methodID_getExpiryDate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getReason() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getReason", "method_14503", "getReason", "m_10962_"), "()Ljava/lang/String;");
    }

    static jobject getReason(const jobject& obj) {
                
       const auto methodID = methodID_getReason();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDisplayName", "method_14504", "toText", "m_8003_"), "()Lwz;");
    }

    static jobject toText(const jobject& obj) {
                
       const auto methodID = methodID_toText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInvalid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "hasExpired", "method_14627", "isInvalid", "m_7524_"), "()Z");
    }

    static jboolean isInvalid(const jobject& obj) {
                
       const auto methodID = methodID_isInvalid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "serialize", "method_24896", "write", "m_6009_"), "(Lcom/google/gson/JsonObject;)V");
    }

    static void write(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_BANENTRY_HPP