// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_SERVERNETWORKIO$DELAYINGCHANNELINBOUNDHANDLER_HPP
#define NET_MINECRAFT_SERVER_SERVERNETWORKIO$DELAYINGCHANNELINBOUNDHANDLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.ServerNetworkIo$DelayingChannelInboundHandler
 * Remapped: art$a
 */
namespace ServerNetworkIo$DelayingChannelInboundHandler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("art$a", "net/minecraft/server/network/ServerConnectionListener$LatencySimulator", "net/minecraft/class_3242$class_5980", "net/minecraft/server/ServerNetworkIo$DelayingChannelInboundHandler", "net/minecraft/src/C_28_$C_140958_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.ServerNetworkIo$DelayingChannelInboundHandler#TIMER
    [[maybe_unused]] static jobject get_field_TIMER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TIMER", "field_29772", "TIMER", "f_143587_"), "Lio/netty/util/Timer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.ServerNetworkIo$DelayingChannelInboundHandler#TIMER
    [[maybe_unused]] static void set_field_TIMER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TIMER", "field_29772", "TIMER", "f_143587_"), "Lio/netty/util/Timer;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.ServerNetworkIo$DelayingChannelInboundHandler#baseDelay
    static jint get_field_baseDelay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "delay", "field_29773", "baseDelay", "f_143588_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.ServerNetworkIo$DelayingChannelInboundHandler#baseDelay
    static void set_field_baseDelay(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "delay", "field_29773", "baseDelay", "f_143588_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.ServerNetworkIo$DelayingChannelInboundHandler#extraDelay
    static jint get_field_extraDelay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "jitter", "field_29774", "extraDelay", "f_143589_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.ServerNetworkIo$DelayingChannelInboundHandler#extraDelay
    static void set_field_extraDelay(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "jitter", "field_29774", "extraDelay", "f_143589_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.ServerNetworkIo$DelayingChannelInboundHandler#packets
    static jobject get_field_packets(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "queuedMessages", "field_29775", "packets", "f_143590_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.ServerNetworkIo$DelayingChannelInboundHandler#packets
    static void set_field_packets(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "queuedMessages", "field_29775", "packets", "f_143590_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_channelRead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("channelRead", "channelRead", "channelRead", "channelRead", "channelRead"), "(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V");
    }

    static void channelRead(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_channelRead();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_delay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "delayDownstream", "method_34880", "delay", "m_143595_"), "(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V");
    }

    static void delay(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_delay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_forward() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onTimeout", "method_34881", "forward", "m_143598_"), "(Lio/netty/util/Timeout;)V");
    }

    static void forward(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forward();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_SERVERNETWORKIO$DELAYINGCHANNELINBOUNDHANDLER_HPP