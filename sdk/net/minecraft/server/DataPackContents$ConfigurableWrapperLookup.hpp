// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_DATAPACKCONTENTS$CONFIGURABLEWRAPPERLOOKUP_HPP
#define NET_MINECRAFT_SERVER_DATAPACKCONTENTS$CONFIGURABLEWRAPPERLOOKUP_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.DataPackContents$ConfigurableWrapperLookup
 * Remapped: alc$a
 */
namespace DataPackContents$ConfigurableWrapperLookup {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("alc$a", "net/minecraft/server/ReloadableServerResources$ConfigurableRegistryLookup", "net/minecraft/class_5350$class_9180", "net/minecraft/server/DataPackContents$ConfigurableWrapperLookup", "net/minecraft/src/C_203256_$C_313324_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.DataPackContents$ConfigurableWrapperLookup#dynamicRegistryManager
    static jobject get_field_dynamicRegistryManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "registryAccess", "field_48786", "dynamicRegistryManager", "f_316437_"), "Lka;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.DataPackContents$ConfigurableWrapperLookup#dynamicRegistryManager
    static void set_field_dynamicRegistryManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "registryAccess", "field_48786", "dynamicRegistryManager", "f_316437_"), "Lka;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.server.DataPackContents$ConfigurableWrapperLookup#entryListCreationPolicy
    static jobject get_field_entryListCreationPolicy(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "missingTagAccessPolicy", "field_40912", "entryListCreationPolicy", "f_316104_"), "Lalc$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.DataPackContents$ConfigurableWrapperLookup#entryListCreationPolicy
    static void set_field_entryListCreationPolicy(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "missingTagAccessPolicy", "field_40912", "entryListCreationPolicy", "f_316104_"), "Lalc$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_setEntryListCreationPolicy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "missingTagAccessPolicy", "method_46724", "setEntryListCreationPolicy", "m_322619_"), "(Lalc$b;)V");
    }

    static void setEntryListCreationPolicy(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setEntryListCreationPolicy();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_streamAllRegistryKeys() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "listRegistries", "method_55282", "streamAllRegistryKeys", "m_305097_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamAllRegistryKeys(const jobject& obj) {
                
       const auto methodID = methodID_streamAllRegistryKeys();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOptionalWrapper() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lookup", "method_46759", "getOptionalWrapper", "m_254861_"), "(Lakq;)Ljava/util/Optional;");
    }

    static jobject getOptionalWrapper(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOptionalWrapper();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWrapper() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createDispatchedLookup", "method_56623", "getWrapper", "m_322228_"), "(Ljo$b;Ljo$b;)Ljo$b;");
    }

    static jobject getWrapper(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getWrapper();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_SERVER_DATAPACKCONTENTS$CONFIGURABLEWRAPPERLOOKUP_HPP