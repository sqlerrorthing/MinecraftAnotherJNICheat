// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_DEDICATED_SERVERMBEAN_HPP
#define NET_MINECRAFT_SERVER_DEDICATED_SERVERMBEAN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.dedicated.ServerMBean
 * Remapped: bmb
 */
namespace ServerMBean {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bmb", "net/minecraft/util/monitoring/jmx/MinecraftServerStatistics", "net/minecraft/class_5169", "net/minecraft/server/dedicated/ServerMBean", "net/minecraft/src/C_428_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.dedicated.ServerMBean#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_23970", "LOGGER", "f_18314_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.ServerMBean#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_23970", "LOGGER", "f_18314_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.dedicated.ServerMBean#server
    static jobject get_field_server(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "server", "field_23971", "server", "f_18315_"), "Lnet/minecraft/server/MinecraftServer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.ServerMBean#server
    static void set_field_server(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "server", "field_23971", "server", "f_18315_"), "Lnet/minecraft/server/MinecraftServer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.dedicated.ServerMBean#mBeanInfo
    static jobject get_field_mBeanInfo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "mBeanInfo", "field_23972", "mBeanInfo", "f_18316_"), "Ljavax/management/MBeanInfo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.ServerMBean#mBeanInfo
    static void set_field_mBeanInfo(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "mBeanInfo", "field_23972", "mBeanInfo", "f_18316_"), "Ljavax/management/MBeanInfo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.dedicated.ServerMBean#entries
    static jobject get_field_entries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "attributeDescriptionByName", "field_23973", "entries", "f_18317_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.ServerMBean#entries
    static void set_field_entries(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "attributeDescriptionByName", "field_23973", "entries", "f_18317_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "registerJmxMonitoring", "method_27181", "register", "m_18328_"), "(Lnet/minecraft/server/MinecraftServer;)V");
    }

    static void register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getAverageTickTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAverageTickTime", "method_27177", "getAverageTickTime", "m_18321_"), "()F");
    }

    static jfloat getAverageTickTime(const jobject& obj) {
                
       const auto methodID = methodID_getAverageTickTime();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTickTimes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTickTimes", "method_27182", "getTickTimes", "m_18330_"), "()[J");
    }

    static jlong getTickTimes(const jobject& obj) {
                
       const auto methodID = methodID_getTickTimes();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttribute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getAttribute", "getAttribute", "getAttribute", "getAttribute", "getAttribute"), "(Ljava/lang/String;)Ljava/lang/Object;");
    }

    static jobject getAttribute(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAttribute();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setAttribute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("setAttribute", "setAttribute", "setAttribute", "setAttribute", "setAttribute"), "(Ljavax/management/Attribute;)V");
    }

    static void setAttribute(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setAttribute();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getAttributes", "getAttributes", "getAttributes", "getAttributes", "getAttributes"), "([Ljava/lang/String;)Ljavax/management/AttributeList;");
    }

    static jobject getAttributes(const jobject& obj, const jarray& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getAttributes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("setAttributes", "setAttributes", "setAttributes", "setAttributes", "setAttributes"), "(Ljavax/management/AttributeList;)Ljavax/management/AttributeList;");
    }

    static jobject setAttributes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setAttributes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_invoke() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("invoke", "invoke", "invoke", "invoke", "invoke"), "(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;");
    }

    static jobject invoke(const jobject& obj, const jobject& arg0, const jarray& arg1, const jobject& arg2, const jarray& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_invoke();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getMBeanInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getMBeanInfo", "getMBeanInfo", "", "", "getMBeanInfo"), "()Ljavax/management/MBeanInfo;");
    }

    static jobject getMBeanInfo(const jobject& obj) {
                
       const auto methodID = methodID_getMBeanInfo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_DEDICATED_SERVERMBEAN_HPP