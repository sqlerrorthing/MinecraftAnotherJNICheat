// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_DEDICATED_SERVERPROPERTIESHANDLER_HPP
#define NET_MINECRAFT_SERVER_DEDICATED_SERVERPROPERTIESHANDLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.dedicated.ServerPropertiesHandler
 * Remapped: apo
 */
namespace ServerPropertiesHandler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("apo", "net/minecraft/server/dedicated/DedicatedServerProperties", "net/minecraft/class_3806", "net/minecraft/server/dedicated/ServerPropertiesHandler", "net/minecraft/src/C_5409_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.server.dedicated.ServerPropertiesHandler#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "LOGGER", "field_37276", "LOGGER", "f_214805_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.server.dedicated.ServerPropertiesHandler#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "LOGGER", "field_37276", "LOGGER", "f_214805_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.dedicated.ServerPropertiesHandler#SHA1_PATTERN
    [[maybe_unused]] static jobject get_field_SHA1_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "SHA1", "field_39094", "SHA1_PATTERN", "f_214806_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.ServerPropertiesHandler#SHA1_PATTERN
    [[maybe_unused]] static void set_field_SHA1_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "SHA1", "field_39094", "SHA1_PATTERN", "f_214806_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.dedicated.ServerPropertiesHandler#COMMA_SPLITTER
    [[maybe_unused]] static jobject get_field_COMMA_SPLITTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "COMMA_SPLITTER", "field_39982", "COMMA_SPLITTER", "f_243988_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.ServerPropertiesHandler#COMMA_SPLITTER
    [[maybe_unused]] static void set_field_COMMA_SPLITTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "COMMA_SPLITTER", "field_39982", "COMMA_SPLITTER", "f_243988_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#onlineMode
    static jboolean get_field_onlineMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "onlineMode", "field_16813", "onlineMode", "f_139728_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#onlineMode
    static void set_field_onlineMode(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "onlineMode", "field_16813", "onlineMode", "f_139728_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#preventProxyConnections
    static jboolean get_field_preventProxyConnections(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "preventProxyConnections", "field_16839", "preventProxyConnections", "f_139729_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#preventProxyConnections
    static void set_field_preventProxyConnections(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "preventProxyConnections", "field_16839", "preventProxyConnections", "f_139729_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#serverIp
    static jobject get_field_serverIp(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "serverIp", "field_16829", "serverIp", "f_139730_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#serverIp
    static void set_field_serverIp(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "serverIp", "field_16829", "serverIp", "f_139730_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#spawnAnimals
    static jboolean get_field_spawnAnimals(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "spawnAnimals", "field_16836", "spawnAnimals", "f_139731_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#spawnAnimals
    static void set_field_spawnAnimals(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "spawnAnimals", "field_16836", "spawnAnimals", "f_139731_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#spawnNpcs
    static jboolean get_field_spawnNpcs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "spawnNpcs", "field_16809", "spawnNpcs", "f_139732_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#spawnNpcs
    static void set_field_spawnNpcs(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "spawnNpcs", "field_16809", "spawnNpcs", "f_139732_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#pvp
    static jboolean get_field_pvp(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "pvp", "field_16833", "pvp", "f_139733_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#pvp
    static void set_field_pvp(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "pvp", "field_16833", "pvp", "f_139733_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#allowFlight
    static jboolean get_field_allowFlight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "allowFlight", "field_16807", "allowFlight", "f_139734_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#allowFlight
    static void set_field_allowFlight(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "allowFlight", "field_16807", "allowFlight", "f_139734_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#motd
    static jobject get_field_motd(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "motd", "field_16825", "motd", "f_139736_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#motd
    static void set_field_motd(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "motd", "field_16825", "motd", "f_139736_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#bugReportLink
    static jobject get_field_bugReportLink(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "bugReportLink", "field_51987", "bugReportLink", "f_337054_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#bugReportLink
    static void set_field_bugReportLink(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "bugReportLink", "field_51987", "bugReportLink", "f_337054_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#forceGameMode
    static jboolean get_field_forceGameMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "forceGameMode", "field_16827", "forceGameMode", "f_139737_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#forceGameMode
    static void set_field_forceGameMode(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "forceGameMode", "field_16827", "forceGameMode", "f_139737_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#enforceWhitelist
    static jboolean get_field_enforceWhitelist(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "enforceWhitelist", "field_16805", "enforceWhitelist", "f_139738_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#enforceWhitelist
    static void set_field_enforceWhitelist(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "enforceWhitelist", "field_16805", "enforceWhitelist", "f_139738_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#difficulty
    static jobject get_field_difficulty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "difficulty", "field_16840", "difficulty", "f_139739_"), "Lbqo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#difficulty
    static void set_field_difficulty(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "difficulty", "field_16840", "difficulty", "f_139739_"), "Lbqo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#gameMode
    static jobject get_field_gameMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "gamemode", "field_16841", "gameMode", "f_139740_"), "Ldct;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#gameMode
    static void set_field_gameMode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "gamemode", "field_16841", "gameMode", "f_139740_"), "Ldct;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#levelName
    static jobject get_field_levelName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "levelName", "field_16820", "levelName", "f_139741_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#levelName
    static void set_field_levelName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "levelName", "field_16820", "levelName", "f_139741_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#serverPort
    static jint get_field_serverPort(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "serverPort", "field_16837", "serverPort", "f_139742_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#serverPort
    static void set_field_serverPort(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "serverPort", "field_16837", "serverPort", "f_139742_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#announcePlayerAchievements
    static jobject get_field_announcePlayerAchievements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "announcePlayerAchievements", "field_16830", "announcePlayerAchievements", "f_139744_"), "Ljava/lang/Boolean;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#announcePlayerAchievements
    static void set_field_announcePlayerAchievements(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "announcePlayerAchievements", "field_16830", "announcePlayerAchievements", "f_139744_"), "Ljava/lang/Boolean;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#enableQuery
    static jboolean get_field_enableQuery(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "enableQuery", "field_16819", "enableQuery", "f_139745_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#enableQuery
    static void set_field_enableQuery(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "enableQuery", "field_16819", "enableQuery", "f_139745_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#queryPort
    static jint get_field_queryPort(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "queryPort", "field_16831", "queryPort", "f_139746_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#queryPort
    static void set_field_queryPort(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "queryPort", "field_16831", "queryPort", "f_139746_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#enableRcon
    static jboolean get_field_enableRcon(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "enableRcon", "field_16818", "enableRcon", "f_139747_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#enableRcon
    static void set_field_enableRcon(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "enableRcon", "field_16818", "enableRcon", "f_139747_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#rconPort
    static jint get_field_rconPort(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "rconPort", "field_16828", "rconPort", "f_139748_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#rconPort
    static void set_field_rconPort(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "rconPort", "field_16828", "rconPort", "f_139748_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#rconPassword
    static jobject get_field_rconPassword(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "rconPassword", "field_16823", "rconPassword", "f_139749_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#rconPassword
    static void set_field_rconPassword(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "rconPassword", "field_16823", "rconPassword", "f_139749_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#hardcore
    static jboolean get_field_hardcore(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "hardcore", "field_16838", "hardcore", "f_139752_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#hardcore
    static void set_field_hardcore(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "hardcore", "field_16838", "hardcore", "f_139752_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#allowNether
    static jboolean get_field_allowNether(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "allowNether", "field_16811", "allowNether", "f_139753_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#allowNether
    static void set_field_allowNether(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "allowNether", "field_16811", "allowNether", "f_139753_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#spawnMonsters
    static jboolean get_field_spawnMonsters(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "spawnMonsters", "field_16835", "spawnMonsters", "f_139705_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#spawnMonsters
    static void set_field_spawnMonsters(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "spawnMonsters", "field_16835", "spawnMonsters", "f_139705_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#useNativeTransport
    static jboolean get_field_useNativeTransport(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "useNativeTransport", "field_16832", "useNativeTransport", "f_139707_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#useNativeTransport
    static void set_field_useNativeTransport(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "useNativeTransport", "field_16832", "useNativeTransport", "f_139707_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#enableCommandBlock
    static jboolean get_field_enableCommandBlock(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "enableCommandBlock", "field_16806", "enableCommandBlock", "f_139708_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#enableCommandBlock
    static void set_field_enableCommandBlock(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "enableCommandBlock", "field_16806", "enableCommandBlock", "f_139708_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#spawnProtection
    static jint get_field_spawnProtection(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "spawnProtection", "field_16816", "spawnProtection", "f_139709_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#spawnProtection
    static void set_field_spawnProtection(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "spawnProtection", "field_16816", "spawnProtection", "f_139709_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#opPermissionLevel
    static jint get_field_opPermissionLevel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "opPermissionLevel", "field_16845", "opPermissionLevel", "f_139710_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#opPermissionLevel
    static void set_field_opPermissionLevel(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "opPermissionLevel", "field_16845", "opPermissionLevel", "f_139710_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#functionPermissionLevel
    static jint get_field_functionPermissionLevel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "functionPermissionLevel", "field_20324", "functionPermissionLevel", "f_139711_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#functionPermissionLevel
    static void set_field_functionPermissionLevel(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "functionPermissionLevel", "field_20324", "functionPermissionLevel", "f_139711_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#maxTickTime
    static jlong get_field_maxTickTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "maxTickTime", "field_16815", "maxTickTime", "f_139712_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#maxTickTime
    static void set_field_maxTickTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "maxTickTime", "field_16815", "maxTickTime", "f_139712_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#maxChainedNeighborUpdates
    static jint get_field_maxChainedNeighborUpdates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "maxChainedNeighborUpdates", "field_37275", "maxChainedNeighborUpdates", "f_214801_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#maxChainedNeighborUpdates
    static void set_field_maxChainedNeighborUpdates(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "maxChainedNeighborUpdates", "field_37275", "maxChainedNeighborUpdates", "f_214801_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#rateLimit
    static jint get_field_rateLimit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "rateLimitPacketsPerSecond", "field_25802", "rateLimit", "f_139713_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#rateLimit
    static void set_field_rateLimit(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "rateLimitPacketsPerSecond", "field_25802", "rateLimit", "f_139713_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#viewDistance
    static jint get_field_viewDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "viewDistance", "field_16844", "viewDistance", "f_139714_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#viewDistance
    static void set_field_viewDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "viewDistance", "field_16844", "viewDistance", "f_139714_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#simulationDistance
    static jint get_field_simulationDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "simulationDistance", "field_34883", "simulationDistance", "f_183715_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#simulationDistance
    static void set_field_simulationDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "simulationDistance", "field_34883", "simulationDistance", "f_183715_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#maxPlayers
    static jint get_field_maxPlayers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "maxPlayers", "field_16814", "maxPlayers", "f_139715_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#maxPlayers
    static void set_field_maxPlayers(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "maxPlayers", "field_16814", "maxPlayers", "f_139715_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#networkCompressionThreshold
    static jint get_field_networkCompressionThreshold(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "networkCompressionThreshold", "field_16842", "networkCompressionThreshold", "f_139716_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#networkCompressionThreshold
    static void set_field_networkCompressionThreshold(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "networkCompressionThreshold", "field_16842", "networkCompressionThreshold", "f_139716_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#broadcastRconToOps
    static jboolean get_field_broadcastRconToOps(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "broadcastRconToOps", "field_16824", "broadcastRconToOps", "f_139717_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#broadcastRconToOps
    static void set_field_broadcastRconToOps(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "broadcastRconToOps", "field_16824", "broadcastRconToOps", "f_139717_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#broadcastConsoleToOps
    static jboolean get_field_broadcastConsoleToOps(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "broadcastConsoleToOps", "field_16802", "broadcastConsoleToOps", "f_139718_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#broadcastConsoleToOps
    static void set_field_broadcastConsoleToOps(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "broadcastConsoleToOps", "field_16802", "broadcastConsoleToOps", "f_139718_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#maxWorldSize
    static jint get_field_maxWorldSize(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "maxWorldSize", "field_16812", "maxWorldSize", "f_139719_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#maxWorldSize
    static void set_field_maxWorldSize(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "maxWorldSize", "field_16812", "maxWorldSize", "f_139719_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#syncChunkWrites
    static jboolean get_field_syncChunkWrites(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "syncChunkWrites", "field_23785", "syncChunkWrites", "f_139720_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#syncChunkWrites
    static void set_field_syncChunkWrites(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "syncChunkWrites", "field_23785", "syncChunkWrites", "f_139720_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#regionFileCompression
    static jobject get_field_regionFileCompression(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "regionFileComression", "field_48711", "regionFileCompression", "f_316590_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#regionFileCompression
    static void set_field_regionFileCompression(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "regionFileComression", "field_48711", "regionFileCompression", "f_316590_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#enableJmxMonitoring
    static jboolean get_field_enableJmxMonitoring(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "enableJmxMonitoring", "field_24056", "enableJmxMonitoring", "f_139721_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#enableJmxMonitoring
    static void set_field_enableJmxMonitoring(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "enableJmxMonitoring", "field_24056", "enableJmxMonitoring", "f_139721_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#enableStatus
    static jboolean get_field_enableStatus(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "enableStatus", "field_24453", "enableStatus", "f_139722_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#enableStatus
    static void set_field_enableStatus(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "enableStatus", "field_24453", "enableStatus", "f_139722_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#hideOnlinePlayers
    static jboolean get_field_hideOnlinePlayers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "hideOnlinePlayers", "field_35564", "hideOnlinePlayers", "f_183716_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#hideOnlinePlayers
    static void set_field_hideOnlinePlayers(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "hideOnlinePlayers", "field_35564", "hideOnlinePlayers", "f_183716_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#entityBroadcastRangePercentage
    static jint get_field_entityBroadcastRangePercentage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "entityBroadcastRangePercentage", "field_24454", "entityBroadcastRangePercentage", "f_139723_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#entityBroadcastRangePercentage
    static void set_field_entityBroadcastRangePercentage(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "entityBroadcastRangePercentage", "field_24454", "entityBroadcastRangePercentage", "f_139723_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#textFilteringConfig
    static jobject get_field_textFilteringConfig(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "textFilteringConfig", "field_26899", "textFilteringConfig", "f_139724_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#textFilteringConfig
    static void set_field_textFilteringConfig(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "textFilteringConfig", "field_26899", "textFilteringConfig", "f_139724_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#serverResourcePackProperties
    static jobject get_field_serverResourcePackProperties(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "serverResourcePackInfo", "field_39093", "serverResourcePackProperties", "f_214802_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#serverResourcePackProperties
    static void set_field_serverResourcePackProperties(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "serverResourcePackInfo", "field_39093", "serverResourcePackProperties", "f_214802_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#dataPackSettings
    static jobject get_field_dataPackSettings(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "initialDataPackConfiguration", "field_39981", "dataPackSettings", "f_243997_"), "Ldck;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#dataPackSettings
    static void set_field_dataPackSettings(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "initialDataPackConfiguration", "field_39981", "dataPackSettings", "f_243997_"), "Ldck;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#playerIdleTimeout
    static jobject get_field_playerIdleTimeout(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "playerIdleTimeout", "field_16817", "playerIdleTimeout", "f_139725_"), "Lapr$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#playerIdleTimeout
    static void set_field_playerIdleTimeout(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "playerIdleTimeout", "field_16817", "playerIdleTimeout", "f_139725_"), "Lapr$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#whiteList
    static jobject get_field_whiteList(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "whiteList", "field_16804", "whiteList", "f_139726_"), "Lapr$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#whiteList
    static void set_field_whiteList(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "whiteList", "field_16804", "whiteList", "f_139726_"), "Lapr$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#enforceSecureProfile
    static jboolean get_field_enforceSecureProfile(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "enforceSecureProfile", "field_39018", "enforceSecureProfile", "f_214804_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#enforceSecureProfile
    static void set_field_enforceSecureProfile(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "enforceSecureProfile", "field_39018", "enforceSecureProfile", "f_214804_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#logIps
    static jboolean get_field_logIps(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "logIPs", "field_44985", "logIps", "f_290960_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#logIps
    static void set_field_logIps(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "logIPs", "field_44985", "logIps", "f_290960_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.dedicated.ServerPropertiesHandler#worldGenProperties
    static jobject get_field_worldGenProperties(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ag", "worldDimensionData", "field_39983", "worldGenProperties", "f_244504_"), "Lapo$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.ServerPropertiesHandler#worldGenProperties
    static void set_field_worldGenProperties(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ag", "worldDimensionData", "field_39983", "worldGenProperties", "f_244504_"), "Lapo$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#generatorOptions
    static jobject get_field_generatorOptions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "worldOptions", "field_24623", "generatorOptions", "f_243824_"), "Ldzw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#generatorOptions
    static void set_field_generatorOptions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "worldOptions", "field_24623", "generatorOptions", "f_243824_"), "Ldzw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.dedicated.ServerPropertiesHandler#acceptsTransfers
    static jboolean get_field_acceptsTransfers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "acceptsTransfers", "field_48270", "acceptsTransfers", "f_314355_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.dedicated.ServerPropertiesHandler#acceptsTransfers
    static void set_field_acceptsTransfers(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "acceptsTransfers", "field_48270", "acceptsTransfers", "f_314355_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromFile", "method_16714", "load", "m_180929_"), "(Ljava/nio/file/Path;)Lapo;");
    }

    static jobject load(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_load();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "reload", "method_16713", "create", "m_6764_"), "(Lka;Ljava/util/Properties;)Lapo;");
    }

    static jobject create(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_parseResourcePackPrompt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "parseResourcePackPrompt", "method_43661", "parseResourcePackPrompt", "m_214814_"), "(Ljava/lang/String;)Lwz;");
    }

    static jobject parseResourcePackPrompt(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_parseResourcePackPrompt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getServerResourcePackProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getServerPackInfo", "method_43660", "getServerResourcePackProperties", "m_214808_"), "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/util/Optional;");
    }

    static jobject getServerResourcePackProperties(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jboolean& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_getServerResourcePackProperties();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_parseDataPackSettings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getDatapackConfig", "method_45159", "parseDataPackSettings", "m_247013_"), "(Ljava/lang/String;Ljava/lang/String;)Ldck;");
    }

    static jobject parseDataPackSettings(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_parseDataPackSettings();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createDimensionsRegistryHolder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createDimensions", "method_45157", "createDimensionsRegistryHolder", "m_246483_"), "(Lka;)Ldzt;");
    }

    static jobject createDimensionsRegistryHolder(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createDimensionsRegistryHolder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_DEDICATED_SERVERPROPERTIESHANDLER_HPP