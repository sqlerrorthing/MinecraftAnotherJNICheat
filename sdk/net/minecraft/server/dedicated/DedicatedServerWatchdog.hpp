// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_DEDICATED_DEDICATEDSERVERWATCHDOG_HPP
#define NET_MINECRAFT_SERVER_DEDICATED_DEDICATEDSERVERWATCHDOG_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.dedicated.DedicatedServerWatchdog
 * Remapped: apq
 */
namespace DedicatedServerWatchdog {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("apq", "net/minecraft/server/dedicated/ServerWatchdog", "net/minecraft/class_3178", "net/minecraft/server/dedicated/DedicatedServerWatchdog", "net/minecraft/src/C_5411_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.dedicated.DedicatedServerWatchdog#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_13825", "LOGGER", "f_139781_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.DedicatedServerWatchdog#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_13825", "LOGGER", "f_139781_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.dedicated.DedicatedServerWatchdog#field_29664
    [[maybe_unused]] static jlong get_field_field_29664() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_SHUTDOWN_TIME", "field_29664", "field_29664", "f_142880_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.DedicatedServerWatchdog#field_29664
    [[maybe_unused]] static void set_field_field_29664(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_SHUTDOWN_TIME", "field_29664", "field_29664", "f_142880_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.dedicated.DedicatedServerWatchdog#field_29665
    [[maybe_unused]] static jint get_field_field_29665() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SHUTDOWN_STATUS", "field_29665", "field_29665", "f_142881_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.DedicatedServerWatchdog#field_29665
    [[maybe_unused]] static void set_field_field_29665(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SHUTDOWN_STATUS", "field_29665", "field_29665", "f_142881_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.dedicated.DedicatedServerWatchdog#server
    static jobject get_field_server(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "server", "field_13823", "server", "f_139782_"), "Lapn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.DedicatedServerWatchdog#server
    static void set_field_server(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "server", "field_13823", "server", "f_139782_"), "Lapn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.dedicated.DedicatedServerWatchdog#maxTickTime
    static jlong get_field_maxTickTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "maxTickTimeNanos", "field_46927", "maxTickTime", "f_302422_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.DedicatedServerWatchdog#maxTickTime
    static void set_field_maxTickTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "maxTickTimeNanos", "field_46927", "maxTickTime", "f_302422_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("run", "run", "", "", "run"), "()V");
    }

    static void run(const jobject& obj) {
                
       const auto methodID = methodID_run();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_shutdown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "exit", "method_13954", "shutdown", "m_139787_"), "()V");
    }

    static void shutdown(const jobject& obj) {
                
       const auto methodID = methodID_shutdown();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_DEDICATED_DEDICATEDSERVERWATCHDOG_HPP