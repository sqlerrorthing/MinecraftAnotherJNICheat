// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_DEDICATED_SERVERPROPERTIESLOADER_HPP
#define NET_MINECRAFT_SERVER_DEDICATED_SERVERPROPERTIESLOADER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.dedicated.ServerPropertiesLoader
 * Remapped: app
 */
namespace ServerPropertiesLoader {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("app", "net/minecraft/server/dedicated/DedicatedServerSettings", "net/minecraft/class_3807", "net/minecraft/server/dedicated/ServerPropertiesLoader", "net/minecraft/src/C_5410_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.dedicated.ServerPropertiesLoader#path
    static jobject get_field_path(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "source", "field_16846", "path", "f_139772_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.ServerPropertiesLoader#path
    static void set_field_path(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "source", "field_16846", "path", "f_139772_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.dedicated.ServerPropertiesLoader#propertiesHandler
    static jobject get_field_propertiesHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "properties", "field_16847", "propertiesHandler", "f_139773_"), "Lapo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.ServerPropertiesLoader#propertiesHandler
    static void set_field_propertiesHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "properties", "field_16847", "propertiesHandler", "f_139773_"), "Lapo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getPropertiesHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getProperties", "method_16717", "getPropertiesHandler", "m_139777_"), "()Lapo;");
    }

    static jobject getPropertiesHandler(const jobject& obj) {
                
       const auto methodID = methodID_getPropertiesHandler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_store() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "forceSave", "method_16719", "store", "m_139780_"), "()V");
    }

    static void store(const jobject& obj) {
                
       const auto methodID = methodID_store();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "update", "method_16718", "apply", "m_139778_"), "(Ljava/util/function/UnaryOperator;)Lapp;");
    }

    static jobject apply(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_apply();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_DEDICATED_SERVERPROPERTIESLOADER_HPP