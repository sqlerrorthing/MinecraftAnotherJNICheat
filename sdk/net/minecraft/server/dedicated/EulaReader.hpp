// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_DEDICATED_EULAREADER_HPP
#define NET_MINECRAFT_SERVER_DEDICATED_EULAREADER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.dedicated.EulaReader
 * Remapped: akx
 */
namespace EulaReader {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("akx", "net/minecraft/server/Eula", "net/minecraft/class_2981", "net/minecraft/server/dedicated/EulaReader", "net/minecraft/src/C_5274_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.dedicated.EulaReader#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_13381", "LOGGER", "f_135938_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.EulaReader#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_13381", "LOGGER", "f_135938_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.dedicated.EulaReader#eulaFile
    static jobject get_field_eulaFile(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "file", "field_13380", "eulaFile", "f_135939_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.EulaReader#eulaFile
    static void set_field_eulaFile(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "file", "field_13380", "eulaFile", "f_135939_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.dedicated.EulaReader#eulaAgreedTo
    static jboolean get_field_eulaAgreedTo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "agreed", "field_13379", "eulaAgreedTo", "f_135940_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.dedicated.EulaReader#eulaAgreedTo
    static void set_field_eulaAgreedTo(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "agreed", "field_13379", "eulaAgreedTo", "f_135940_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_checkEulaAgreement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "readFile", "method_12867", "checkEulaAgreement", "m_135945_"), "()Z");
    }

    static jboolean checkEulaAgreement(const jobject& obj) {
                
       const auto methodID = methodID_checkEulaAgreement();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEulaAgreedTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasAgreedToEULA", "method_12866", "isEulaAgreedTo", "m_135944_"), "()Z");
    }

    static jboolean isEulaAgreedTo(const jobject& obj) {
                
       const auto methodID = methodID_isEulaAgreedTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_createEulaFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "saveDefaults", "method_12868", "createEulaFile", "m_135946_"), "()V");
    }

    static void createEulaFile(const jobject& obj) {
                
       const auto methodID = methodID_createEulaFile();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_DEDICATED_EULAREADER_HPP