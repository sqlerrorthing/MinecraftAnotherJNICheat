// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_NETWORK_SERVERPLAYERENTITY_HPP
#define NET_MINECRAFT_SERVER_NETWORK_SERVERPLAYERENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.network.ServerPlayerEntity
 * Remapped: aqv
 */
namespace ServerPlayerEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqv", "net/minecraft/server/level/ServerPlayer", "net/minecraft/class_3222", "net/minecraft/server/network/ServerPlayerEntity", "net/minecraft/src/C_13_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.network.ServerPlayerEntity#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cz", "LOGGER", "field_13975", "LOGGER", "f_8907_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cz", "LOGGER", "field_13975", "LOGGER", "f_8907_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.network.ServerPlayerEntity#field_29769
    [[maybe_unused]] static jint get_field_field_29769() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cA", "NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ", "field_29769", "field_29769", "f_143381_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#field_29769
    [[maybe_unused]] static void set_field_field_29769(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cA", "NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ", "field_29769", "field_29769", "f_143381_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.network.ServerPlayerEntity#field_29770
    [[maybe_unused]] static jint get_field_field_29770() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cB", "NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y", "field_29770", "field_29770", "f_143382_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#field_29770
    [[maybe_unused]] static void set_field_field_29770(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cB", "NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y", "field_29770", "field_29770", "f_143382_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.network.ServerPlayerEntity#field_46928
    [[maybe_unused]] static jint get_field_field_46928() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cD", "FLY_STAT_RECORDING_SPEED", "field_46928", "field_46928", "f_303028_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#field_46928
    [[maybe_unused]] static void set_field_field_46928(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cD", "FLY_STAT_RECORDING_SPEED", "field_46928", "field_46928", "f_303028_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.network.ServerPlayerEntity#field_47708
    [[maybe_unused]] static jdouble get_field_field_47708() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "INTERACTION_DISTANCE_VERIFICATION_BUFFER", "field_47708", "field_47708", "f_316492_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerPlayerEntity#field_47708
    [[maybe_unused]] static void set_field_field_47708(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "INTERACTION_DISTANCE_VERIFICATION_BUFFER", "field_47708", "field_47708", "f_316492_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.network.ServerPlayerEntity#CREATIVE_BLOCK_INTERACTION_RANGE_MODIFIER
    [[maybe_unused]] static jobject get_field_CREATIVE_BLOCK_INTERACTION_RANGE_MODIFIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cE", "CREATIVE_BLOCK_INTERACTION_RANGE_MODIFIER", "field_47709", "CREATIVE_BLOCK_INTERACTION_RANGE_MODIFIER", "f_316163_"), "Lbuu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#CREATIVE_BLOCK_INTERACTION_RANGE_MODIFIER
    [[maybe_unused]] static void set_field_CREATIVE_BLOCK_INTERACTION_RANGE_MODIFIER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cE", "CREATIVE_BLOCK_INTERACTION_RANGE_MODIFIER", "field_47709", "CREATIVE_BLOCK_INTERACTION_RANGE_MODIFIER", "f_316163_"), "Lbuu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.network.ServerPlayerEntity#CREATIVE_ENTITY_INTERACTION_RANGE_MODIFIER
    [[maybe_unused]] static jobject get_field_CREATIVE_ENTITY_INTERACTION_RANGE_MODIFIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cF", "CREATIVE_ENTITY_INTERACTION_RANGE_MODIFIER", "field_47710", "CREATIVE_ENTITY_INTERACTION_RANGE_MODIFIER", "f_314131_"), "Lbuu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#CREATIVE_ENTITY_INTERACTION_RANGE_MODIFIER
    [[maybe_unused]] static void set_field_CREATIVE_ENTITY_INTERACTION_RANGE_MODIFIER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cF", "CREATIVE_ENTITY_INTERACTION_RANGE_MODIFIER", "field_47710", "CREATIVE_ENTITY_INTERACTION_RANGE_MODIFIER", "f_314131_"), "Lbuu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.server.network.ServerPlayerEntity#networkHandler
    static jobject get_field_networkHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "connection", "field_13987", "networkHandler", "f_8906_"), "Laru;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerPlayerEntity#networkHandler
    static void set_field_networkHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "connection", "field_13987", "networkHandler", "f_8906_"), "Laru;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.network.ServerPlayerEntity#server
    static jobject get_field_server(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "server", "field_13995", "server", "f_8924_"), "Lnet/minecraft/server/MinecraftServer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerPlayerEntity#server
    static void set_field_server(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "server", "field_13995", "server", "f_8924_"), "Lnet/minecraft/server/MinecraftServer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.network.ServerPlayerEntity#interactionManager
    static jobject get_field_interactionManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "gameMode", "field_13974", "interactionManager", "f_8941_"), "Laqw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerPlayerEntity#interactionManager
    static void set_field_interactionManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "gameMode", "field_13974", "interactionManager", "f_8941_"), "Laqw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#advancementTracker
    static jobject get_field_advancementTracker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cG", "advancements", "field_13970", "advancementTracker", "f_8909_"), "Lakz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#advancementTracker
    static void set_field_advancementTracker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cG", "advancements", "field_13970", "advancementTracker", "f_8909_"), "Lakz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#statHandler
    static jobject get_field_statHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cH", "stats", "field_13966", "statHandler", "f_8910_"), "Lavv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#statHandler
    static void set_field_statHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cH", "stats", "field_13966", "statHandler", "f_8910_"), "Lavv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#lastHealthScore
    static jfloat get_field_lastHealthScore(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cI", "lastRecordedHealthAndAbsorption", "field_13963", "lastHealthScore", "f_8911_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#lastHealthScore
    static void set_field_lastHealthScore(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cI", "lastRecordedHealthAndAbsorption", "field_13963", "lastHealthScore", "f_8911_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#lastFoodScore
    static jint get_field_lastFoodScore(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cJ", "lastRecordedFoodLevel", "field_13983", "lastFoodScore", "f_8912_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#lastFoodScore
    static void set_field_lastFoodScore(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cJ", "lastRecordedFoodLevel", "field_13983", "lastFoodScore", "f_8912_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#lastAirScore
    static jint get_field_lastAirScore(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cK", "lastRecordedAirLevel", "field_13968", "lastAirScore", "f_8913_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#lastAirScore
    static void set_field_lastAirScore(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cK", "lastRecordedAirLevel", "field_13968", "lastAirScore", "f_8913_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#lastArmorScore
    static jint get_field_lastArmorScore(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cL", "lastRecordedArmor", "field_13982", "lastArmorScore", "f_8914_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#lastArmorScore
    static void set_field_lastArmorScore(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cL", "lastRecordedArmor", "field_13982", "lastArmorScore", "f_8914_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#lastLevelScore
    static jint get_field_lastLevelScore(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cM", "lastRecordedLevel", "field_13965", "lastLevelScore", "f_8915_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#lastLevelScore
    static void set_field_lastLevelScore(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cM", "lastRecordedLevel", "field_13965", "lastLevelScore", "f_8915_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#lastExperienceScore
    static jint get_field_lastExperienceScore(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cN", "lastRecordedExperience", "field_13980", "lastExperienceScore", "f_8916_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#lastExperienceScore
    static void set_field_lastExperienceScore(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cN", "lastRecordedExperience", "field_13980", "lastExperienceScore", "f_8916_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#syncedHealth
    static jfloat get_field_syncedHealth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cO", "lastSentHealth", "field_13997", "syncedHealth", "f_8917_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#syncedHealth
    static void set_field_syncedHealth(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cO", "lastSentHealth", "field_13997", "syncedHealth", "f_8917_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#syncedFoodLevel
    static jint get_field_syncedFoodLevel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cP", "lastSentFood", "field_13979", "syncedFoodLevel", "f_8918_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#syncedFoodLevel
    static void set_field_syncedFoodLevel(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cP", "lastSentFood", "field_13979", "syncedFoodLevel", "f_8918_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#syncedSaturationIsZero
    static jboolean get_field_syncedSaturationIsZero(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cQ", "lastFoodSaturationZero", "field_13972", "syncedSaturationIsZero", "f_8919_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#syncedSaturationIsZero
    static void set_field_syncedSaturationIsZero(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cQ", "lastFoodSaturationZero", "field_13972", "syncedSaturationIsZero", "f_8919_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#syncedExperience
    static jint get_field_syncedExperience(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cR", "lastSentExp", "field_13978", "syncedExperience", "f_8920_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#syncedExperience
    static void set_field_syncedExperience(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cR", "lastSentExp", "field_13978", "syncedExperience", "f_8920_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#joinInvulnerabilityTicks
    static jint get_field_joinInvulnerabilityTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cS", "spawnInvulnerableTime", "field_13998", "joinInvulnerabilityTicks", "f_8921_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#joinInvulnerabilityTicks
    static void set_field_joinInvulnerabilityTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cS", "spawnInvulnerableTime", "field_13998", "joinInvulnerabilityTicks", "f_8921_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#clientChatVisibility
    static jobject get_field_clientChatVisibility(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cT", "chatVisibility", "field_13993", "clientChatVisibility", "f_8922_"), "Lcmv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#clientChatVisibility
    static void set_field_clientChatVisibility(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cT", "chatVisibility", "field_13993", "clientChatVisibility", "f_8922_"), "Lcmv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#clientChatColorsEnabled
    static jboolean get_field_clientChatColorsEnabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cU", "canChatColor", "field_13971", "clientChatColorsEnabled", "f_8923_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#clientChatColorsEnabled
    static void set_field_clientChatColorsEnabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cU", "canChatColor", "field_13971", "clientChatColorsEnabled", "f_8923_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#lastActionTime
    static jlong get_field_lastActionTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cV", "lastActionTime", "field_13976", "lastActionTime", "f_8925_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#lastActionTime
    static void set_field_lastActionTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cV", "lastActionTime", "field_13976", "lastActionTime", "f_8925_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#cameraEntity
    static jobject get_field_cameraEntity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cW", "camera", "field_13984", "cameraEntity", "f_8926_"), "Lbsr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#cameraEntity
    static void set_field_cameraEntity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cW", "camera", "field_13984", "cameraEntity", "f_8926_"), "Lbsr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#inTeleportationState
    static jboolean get_field_inTeleportationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cX", "isChangingDimension", "field_13985", "inTeleportationState", "f_8927_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#inTeleportationState
    static void set_field_inTeleportationState(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cX", "isChangingDimension", "field_13985", "inTeleportationState", "f_8927_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.network.ServerPlayerEntity#seenCredits
    static jboolean get_field_seenCredits(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "seenCredits", "field_13969", "seenCredits", "f_8928_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerPlayerEntity#seenCredits
    static void set_field_seenCredits(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "seenCredits", "field_13969", "seenCredits", "f_8928_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#recipeBook
    static jobject get_field_recipeBook(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cY", "recipeBook", "field_13996", "recipeBook", "f_8929_"), "Lavu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#recipeBook
    static void set_field_recipeBook(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cY", "recipeBook", "field_13996", "recipeBook", "f_8929_"), "Lavu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#levitationStartPos
    static jobject get_field_levitationStartPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cZ", "levitationStartPos", "field_13992", "levitationStartPos", "f_8930_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#levitationStartPos
    static void set_field_levitationStartPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cZ", "levitationStartPos", "field_13992", "levitationStartPos", "f_8930_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#levitationStartTick
    static jint get_field_levitationStartTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("da", "levitationStartTime", "field_13973", "levitationStartTick", "f_8931_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#levitationStartTick
    static void set_field_levitationStartTick(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("da", "levitationStartTime", "field_13973", "levitationStartTick", "f_8931_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#disconnected
    static jboolean get_field_disconnected(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("db", "disconnected", "field_13964", "disconnected", "f_8932_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#disconnected
    static void set_field_disconnected(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("db", "disconnected", "field_13964", "disconnected", "f_8932_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#viewDistance
    static jint get_field_viewDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dc", "requestedViewDistance", "field_44990", "viewDistance", "f_291772_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#viewDistance
    static void set_field_viewDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dc", "requestedViewDistance", "field_44990", "viewDistance", "f_291772_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#language
    static jobject get_field_language(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dd", "language", "field_46156", "language", "f_290755_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#language
    static void set_field_language(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dd", "language", "field_46156", "language", "f_290755_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#fallStartPos
    static jobject get_field_fallStartPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("de", "startingToFallPosition", "field_35007", "fallStartPos", "f_184125_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#fallStartPos
    static void set_field_fallStartPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("de", "startingToFallPosition", "field_35007", "fallStartPos", "f_184125_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#enteredNetherPos
    static jobject get_field_enteredNetherPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("df", "enteredNetherPosition", "field_13994", "enteredNetherPos", "f_8933_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#enteredNetherPos
    static void set_field_enteredNetherPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("df", "enteredNetherPosition", "field_13994", "enteredNetherPos", "f_8933_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#vehicleInLavaRidingPos
    static jobject get_field_vehicleInLavaRidingPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dg", "enteredLavaOnVehiclePosition", "field_35008", "vehicleInLavaRidingPos", "f_184126_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#vehicleInLavaRidingPos
    static void set_field_vehicleInLavaRidingPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dg", "enteredLavaOnVehiclePosition", "field_35008", "vehicleInLavaRidingPos", "f_184126_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#watchedSection
    static jobject get_field_watchedSection(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dh", "lastSectionPos", "field_13990", "watchedSection", "f_8934_"), "Lkf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#watchedSection
    static void set_field_watchedSection(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dh", "lastSectionPos", "field_13990", "watchedSection", "f_8934_"), "Lkf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#chunkFilter
    static jobject get_field_chunkFilter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("di", "chunkTrackingView", "field_44991", "chunkFilter", "f_290780_"), "Laqg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#chunkFilter
    static void set_field_chunkFilter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("di", "chunkTrackingView", "field_44991", "chunkFilter", "f_290780_"), "Laqg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#spawnPointDimension
    static jobject get_field_spawnPointDimension(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dj", "respawnDimension", "field_23191", "spawnPointDimension", "f_8935_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#spawnPointDimension
    static void set_field_spawnPointDimension(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dj", "respawnDimension", "field_23191", "spawnPointDimension", "f_8935_"), "Lakq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#spawnPointPosition
    static jobject get_field_spawnPointPosition(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dk", "respawnPosition", "field_23192", "spawnPointPosition", "f_8936_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#spawnPointPosition
    static void set_field_spawnPointPosition(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dk", "respawnPosition", "field_23192", "spawnPointPosition", "f_8936_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#spawnForced
    static jboolean get_field_spawnForced(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dl", "respawnForced", "field_23193", "spawnForced", "f_8937_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#spawnForced
    static void set_field_spawnForced(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dl", "respawnForced", "field_23193", "spawnForced", "f_8937_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#spawnAngle
    static jfloat get_field_spawnAngle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dm", "respawnAngle", "field_26353", "spawnAngle", "f_8938_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#spawnAngle
    static void set_field_spawnAngle(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dm", "respawnAngle", "field_26353", "spawnAngle", "f_8938_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#textStream
    static jobject get_field_textStream(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dn", "textFilter", "field_26821", "textStream", "f_8939_"), "Larz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#textStream
    static void set_field_textStream(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dn", "textFilter", "field_26821", "textStream", "f_8939_"), "Larz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#filterText
    static jboolean get_field_filterText(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("do", "textFilteringEnabled", "field_28860", "filterText", "f_143378_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#filterText
    static void set_field_filterText(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("do", "textFilteringEnabled", "field_28860", "filterText", "f_143378_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#allowServerListing
    static jboolean get_field_allowServerListing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dp", "allowsListing", "field_35566", "allowServerListing", "f_184127_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#allowServerListing
    static void set_field_allowServerListing(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dp", "allowsListing", "field_35566", "allowServerListing", "f_184127_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#spawnExtraParticlesOnFall
    static jboolean get_field_spawnExtraParticlesOnFall(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dq", "spawnExtraParticlesOnFall", "field_49776", "spawnExtraParticlesOnFall", "f_315612_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#spawnExtraParticlesOnFall
    static void set_field_spawnExtraParticlesOnFall(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dq", "spawnExtraParticlesOnFall", "field_49776", "spawnExtraParticlesOnFall", "f_315612_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#sculkShriekerWarningManager
    static jobject get_field_sculkShriekerWarningManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dr", "wardenSpawnTracker", "field_39985", "sculkShriekerWarningManager", "f_244516_"), "Lcmd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#sculkShriekerWarningManager
    static void set_field_sculkShriekerWarningManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dr", "wardenSpawnTracker", "field_39985", "sculkShriekerWarningManager", "f_244516_"), "Lcmd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#startRaidPos
    static jobject get_field_startRaidPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ds", "raidOmenPosition", "field_50088", "startRaidPos", "f_316184_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#startRaidPos
    static void set_field_startRaidPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ds", "raidOmenPosition", "field_50088", "startRaidPos", "f_316184_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#movement
    static jobject get_field_movement(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dt", "lastKnownClientMovement", "field_51875", "movement", "f_337064_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#movement
    static void set_field_movement(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dt", "lastKnownClientMovement", "field_51875", "movement", "f_337064_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#screenHandlerSyncHandler
    static jobject get_field_screenHandlerSyncHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("du", "containerSynchronizer", "field_29180", "screenHandlerSyncHandler", "f_143379_"), "Lcqi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#screenHandlerSyncHandler
    static void set_field_screenHandlerSyncHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("du", "containerSynchronizer", "field_29180", "screenHandlerSyncHandler", "f_143379_"), "Lcqi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#screenHandlerListener
    static jobject get_field_screenHandlerListener(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dv", "containerListener", "field_29181", "screenHandlerListener", "f_143380_"), "Lcqh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#screenHandlerListener
    static void set_field_screenHandlerListener(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dv", "containerListener", "field_29181", "screenHandlerListener", "f_143380_"), "Lcqh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#session
    static jobject get_field_session(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dw", "chatSession", "field_39986", "session", "f_244040_"), "Lxq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#session
    static void set_field_session(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dw", "chatSession", "field_39986", "session", "f_244040_"), "Lxq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.network.ServerPlayerEntity#field_49777
    static jobject get_field_field_49777(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "object", "field_49777", "field_49777", "f_316138_"), "Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerPlayerEntity#field_49777
    static void set_field_field_49777(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "object", "field_49777", "field_49777", "f_316138_"), "Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerEntity#screenHandlerSyncId
    static jint get_field_screenHandlerSyncId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dx", "containerCounter", "field_13986", "screenHandlerSyncId", "f_8940_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerEntity#screenHandlerSyncId
    static void set_field_screenHandlerSyncId(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("dx", "containerCounter", "field_13986", "screenHandlerSyncId", "f_8940_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.network.ServerPlayerEntity#notInAnyWorld
    static jboolean get_field_notInAnyWorld(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "wonGame", "field_13989", "notInAnyWorld", "f_8944_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerPlayerEntity#notInAnyWorld
    static void set_field_notInAnyWorld(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "wonGame", "field_13989", "notInAnyWorld", "f_8944_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getWorldSpawnPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "adjustSpawnLocation", "method_14245", "getWorldSpawnPos", "m_338926_"), "(Laqu;Ljd;)Ljd;");
    }

    static jobject getWorldSpawnPos(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getWorldSpawnPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_calculateSpawnOffsetMultiplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getCoprime", "method_14244", "calculateSpawnOffsetMultiplier", "m_9237_"), "(I)I");
    }

    static jint calculateSpawnOffsetMultiplier(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_calculateSpawnOffsetMultiplier();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setExperiencePoints() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setExperiencePoints", "method_14228", "setExperiencePoints", "m_8985_"), "(I)V");
    }

    static void setExperiencePoints(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setExperiencePoints();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setExperienceLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setExperienceLevels", "method_14252", "setExperienceLevel", "m_9174_"), "(I)V");
    }

    static void setExperienceLevel(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setExperienceLevel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addExperienceLevels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "giveExperienceLevels", "method_7316", "addExperienceLevels", "m_6749_"), "(I)V");
    }

    static void addExperienceLevels(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_addExperienceLevels();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_applyEnchantmentCosts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEnchantmentPerformed", "method_7286", "applyEnchantmentCosts", "m_7408_"), "(Lcuq;I)V");
    }

    static void applyEnchantmentCosts(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_applyEnchantmentCosts();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onScreenHandlerOpened() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "initMenu", "method_14235", "onScreenHandlerOpened", "m_143399_"), "(Lcpu;)V");
    }

    static void onScreenHandlerOpened(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onScreenHandlerOpened();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "initInventoryMenu", "method_34225", "onSpawn", "m_143429_"), "()V");
    }

    static void onSpawn(const jobject& obj) {
                
       const auto methodID = methodID_onSpawn();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_enterCombat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f_", "onEnterCombat", "method_6000", "enterCombat", "m_8108_"), "()V");
    }

    static void enterCombat(const jobject& obj) {
                
       const auto methodID = methodID_enterCombat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_endCombat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g_", "onLeaveCombat", "method_6044", "endCombat", "m_8098_"), "()V");
    }

    static void endCombat(const jobject& obj) {
                
       const auto methodID = methodID_endCombat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onBlockCollision() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onInsideBlock", "method_5622", "onBlockCollision", "m_6763_"), "(Ldtc;)V");
    }

    static void onBlockCollision(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onBlockCollision();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createCooldownManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "createItemCooldowns", "method_7265", "createCooldownManager", "m_7478_"), "()Lcum;");
    }

    static jobject createCooldownManager(const jobject& obj) {
                
       const auto methodID = methodID_createCooldownManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateCreativeInteractionRangeModifiers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gD", "updatePlayerAttributes", "method_55633", "updateCreativeInteractionRangeModifiers", "m_322045_"), "()V");
    }

    static void updateCreativeInteractionRangeModifiers(const jobject& obj) {
                
       const auto methodID = methodID_updateCreativeInteractionRangeModifiers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_playerTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "doTick", "method_14226", "playerTick", "m_9240_"), "()V");
    }

    static void playerTick(const jobject& obj) {
                
       const auto methodID = methodID_playerTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onLanding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "resetFallDistance", "method_38785", "onLanding", "m_183634_"), "()V");
    }

    static void onLanding(const jobject& obj) {
                
       const auto methodID = methodID_onLanding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickFallStartPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "trackStartFallingPosition", "method_38786", "tickFallStartPos", "m_184139_"), "()V");
    }

    static void tickFallStartPos(const jobject& obj) {
                
       const auto methodID = methodID_tickFallStartPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickVehicleInLavaRiding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "trackEnteredOrExitedLavaOnVehicle", "method_38787", "tickVehicleInLavaRiding", "m_184140_"), "()V");
    }

    static void tickVehicleInLavaRiding(const jobject& obj) {
                
       const auto methodID = methodID_tickVehicleInLavaRiding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateScores() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateScoreForCriteria", "method_14212", "updateScores", "m_9104_"), "(Leyj;I)V");
    }

    static void updateScores(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_updateScores();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onDeath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "die", "method_6078", "onDeath", "m_6667_"), "(Lbrk;)V");
    }

    static void onDeath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDeath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_forgiveMobAnger() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gE", "tellNeutralMobsThatIDied", "method_29779", "forgiveMobAnger", "m_9215_"), "()V");
    }

    static void forgiveMobAnger(const jobject& obj) {
                
       const auto methodID = methodID_forgiveMobAnger();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateKilledAdvancementCriterion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "awardKillScore", "method_5716", "updateKilledAdvancementCriterion", "m_5993_"), "(Lbsr;ILbrk;)V");
    }

    static void updateKilledAdvancementCriterion(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateKilledAdvancementCriterion();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_updateScoreboardScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleTeamKill", "method_14227", "updateScoreboardScore", "m_9124_"), "(Leyf;Leyf;[Leyj;)V");
    }

    static void updateScoreboardScore(const jobject& obj, const jobject& arg0, const jobject& arg1, const jarray& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_updateScoreboardScore();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldDamagePlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canHarmPlayer", "method_7256", "shouldDamagePlayer", "m_7099_"), "(Lcmx;)Z");
    }

    static jboolean shouldDamagePlayer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldDamagePlayer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPvpEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gF", "isPvpAllowed", "method_14230", "isPvpEnabled", "m_9216_"), "()Z");
    }

    static jboolean isPvpEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isPvpEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRespawnTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findRespawnPositionAndUseSpawnBlock", "method_60590", "getRespawnTarget", "m_340041_"), "(ZLeqc$a;)Leqc;");
    }

    static jobject getRespawnTarget(const jobject& obj, const jboolean& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getRespawnTarget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_findRespawnPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findRespawnAndUseSpawnBlock", "method_60588", "findRespawnPosition", "m_339196_"), "(Laqu;Ljd;FZZ)Ljava/util/Optional;");
    }

    static jobject findRespawnPosition(const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jboolean& arg3, const jboolean& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_findRespawnPosition();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_detachForDimensionChange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "showEndCredits", "method_60594", "detachForDimensionChange", "m_338855_"), "()V");
    }

    static void detachForDimensionChange(const jobject& obj) {
                
       const auto methodID = methodID_detachForDimensionChange();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_teleportTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "changeDimension", "method_5731", "teleportTo", "m_5489_"), "(Leqc;)Lbsr;");
    }

    static jobject teleportTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_teleportTo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_worldChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "triggerDimensionChangeTriggers", "method_18783", "worldChanged", "m_9209_"), "(Laqu;)V");
    }

    static void worldChanged(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_worldChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canBeSpectated() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "broadcastToPlayer", "method_5680", "canBeSpectated", "m_6459_"), "(Laqv;)Z");
    }

    static jboolean canBeSpectated(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canBeSpectated();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendPickup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "take", "method_6103", "sendPickup", "m_7938_"), "(Lbsr;I)V");
    }

    static void sendPickup(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_sendPickup();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_trySleep() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startSleepInBed", "method_7269", "trySleep", "m_7720_"), "(Ljd;)Lcom/mojang/datafixers/util/Either;");
    }

    static jobject trySleep(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_trySleep();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sleep() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "startSleeping", "method_18403", "sleep", "m_5802_"), "(Ljd;)V");
    }

    static void sleep(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sleep();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isBedWithinRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "bedInRange", "method_26285", "isBedWithinRange", "m_9116_"), "(Ljd;Lji;)Z");
    }

    static jboolean isBedWithinRange(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isBedWithinRange();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__isBedWithinRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isReachableBedBlock", "method_26287", "isBedWithinRange", "m_9222_"), "(Ljd;)Z");
    }

    static jboolean _isBedWithinRange(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__isBedWithinRange();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isBedObstructed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "bedBlocked", "method_26286", "isBedObstructed", "m_9191_"), "(Ljd;Lji;)Z");
    }

    static jboolean isBedObstructed(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isBedObstructed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_wakeUp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stopSleepInBed", "method_7358", "wakeUp", "m_6145_"), "(ZZ)V");
    }

    static void wakeUp(const jobject& obj, const jboolean& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_wakeUp();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_requestTeleportAndDismount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dismountTo", "method_33567", "requestTeleportAndDismount", "m_142098_"), "(DDD)V");
    }

    static void requestTeleportAndDismount(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_requestTeleportAndDismount();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isInvulnerableTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isInvulnerableTo", "method_5679", "isInvulnerableTo", "m_6673_"), "(Lbrk;)Z");
    }

    static jboolean isInvulnerableTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isInvulnerableTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_fall() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkFallDamage", "method_5623", "fall", "m_7840_"), "(DZLdtc;Ljd;)V");
    }

    static void fall(const jobject& obj, const jdouble& arg0, const jboolean& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_fall();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_applyMovementEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onChangedBlock", "method_6126", "applyMovementEffects", "m_5806_"), "(Laqu;Ljd;)V");
    }

    static void applyMovementEffects(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_applyMovementEffects();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_handleFall() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doCheckFallDamage", "method_14207", "handleFall", "m_289599_"), "(DDDZ)V");
    }

    static void handleFall(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_handleFall();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onExplodedBy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onExplosionHit", "method_56918", "onExplodedBy", "m_8061_"), "(Lbsr;)V");
    }

    static void onExplodedBy(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onExplodedBy();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickCramming() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "pushEntities", "method_6070", "tickCramming", "m_6138_"), "()V");
    }

    static void tickCramming(const jobject& obj) {
                
       const auto methodID = methodID_tickCramming();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_openEditSignScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openTextEdit", "method_7311", "openEditSignScreen", "m_7739_"), "(Ldrs;Z)V");
    }

    static void openEditSignScreen(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_openEditSignScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_incrementScreenHandlerSyncId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gG", "nextContainerCounter", "method_14237", "incrementScreenHandlerSyncId", "m_9217_"), "()V");
    }

    static void incrementScreenHandlerSyncId(const jobject& obj) {
                
       const auto methodID = methodID_incrementScreenHandlerSyncId();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_openHandledScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openMenu", "method_17355", "openHandledScreen", "m_5893_"), "(Lbqv;)Ljava/util/OptionalInt;");
    }

    static jobject openHandledScreen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openHandledScreen();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendTradeOffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendMerchantOffers", "method_17354", "sendTradeOffers", "m_7662_"), "(ILdbv;IIZZ)V");
    }

    static void sendTradeOffers(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jboolean& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID_sendTradeOffers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_openHorseInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openHorseInventory", "method_7291", "openHorseInventory", "m_6658_"), "(Lchi;Lbqk;)V");
    }

    static void openHorseInventory(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_openHorseInventory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_useBook() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openItemGui", "method_7315", "useBook", "m_6986_"), "(Lcuq;Lbqq;)V");
    }

    static void useBook(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_useBook();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_openCommandBlockScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openCommandBlock", "method_7323", "openCommandBlockScreen", "m_7698_"), "(Ldqr;)V");
    }

    static void openCommandBlockScreen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openCommandBlockScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_closeHandledScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "closeContainer", "method_7346", "closeHandledScreen", "m_6915_"), "()V");
    }

    static void closeHandledScreen(const jobject& obj) {
                
       const auto methodID = methodID_closeHandledScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onHandledScreenClosed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "doCloseContainer", "method_14247", "onHandledScreenClosed", "m_9230_"), "()V");
    }

    static void onHandledScreenClosed(const jobject& obj) {
                
       const auto methodID = methodID_onHandledScreenClosed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPlayerInput", "method_14218", "updateInput", "m_8980_"), "(FFZZ)V");
    }

    static void updateInput(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jboolean& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_updateInput();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_travel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "travel", "method_6091", "travel", "m_7023_"), "(Lexc;)V");
    }

    static void travel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_travel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickRiding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "rideTick", "method_5842", "tickRiding", "m_6083_"), "()V");
    }

    static void tickRiding(const jobject& obj) {
                
       const auto methodID = methodID_tickRiding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_increaseTravelMotionStats() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "checkMovementStatistics", "method_54720", "increaseTravelMotionStats", "m_307572_"), "(DDD)V");
    }

    static void increaseTravelMotionStats(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_increaseTravelMotionStats();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_increaseRidingMotionStats() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "checkRidingStatistics", "method_54721", "increaseRidingMotionStats", "m_306454_"), "(DDD)V");
    }

    static void increaseRidingMotionStats(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_increaseRidingMotionStats();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isZero() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("r", "didNotMove", "method_54722", "isZero", "m_307212_"), "(DDD)Z");
    }

    static jboolean isZero(const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_isZero();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_increaseStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "awardStat", "method_7342", "increaseStat", "m_6278_"), "(Lavw;I)V");
    }

    static void increaseStat(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_increaseStat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_resetStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resetStat", "method_7266", "resetStat", "m_7166_"), "(Lavw;)V");
    }

    static void resetStat(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_resetStat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_unlockRecipes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "awardRecipes", "method_7254", "unlockRecipes", "m_7281_"), "(Ljava/util/Collection;)I");
    }

    static jint unlockRecipes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_unlockRecipes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onRecipeCrafted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "triggerRecipeCrafted", "method_51283", "onRecipeCrafted", "m_280300_"), "(Lczb;Ljava/util/List;)V");
    }

    static void onRecipeCrafted(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onRecipeCrafted();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__unlockRecipes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "awardRecipesByKey", "method_7335", "unlockRecipes", "m_7902_"), "(Ljava/util/List;)V");
    }

    static void _unlockRecipes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__unlockRecipes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_lockRecipes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "resetRecipes", "method_7333", "lockRecipes", "m_7279_"), "(Ljava/util/Collection;)I");
    }

    static jint lockRecipes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_lockRecipes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "giveExperiencePoints", "method_7255", "addExperience", "m_6756_"), "(I)V");
    }

    static void addExperience(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_addExperience();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onDisconnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "disconnect", "method_14231", "onDisconnect", "m_9231_"), "()V");
    }

    static void onDisconnect(const jobject& obj) {
                
       const auto methodID = methodID_onDisconnect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDisconnected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "hasDisconnected", "method_14239", "isDisconnected", "m_9232_"), "()Z");
    }

    static jboolean isDisconnected(const jobject& obj) {
                
       const auto methodID = methodID_isDisconnected();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_markHealthDirty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "resetSentInfo", "method_14217", "markHealthDirty", "m_9233_"), "()V");
    }

    static void markHealthDirty(const jobject& obj) {
                
       const auto methodID = methodID_markHealthDirty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "displayClientMessage", "method_7353", "sendMessage", "m_5661_"), "(Lwz;Z)V");
    }

    static void sendMessage(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_sendMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_consumeItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L_", "completeUsingItem", "method_6040", "consumeItem", "m_8095_"), "()V");
    }

    static void consumeItem(const jobject& obj) {
                
       const auto methodID = methodID_consumeItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_lookAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lookAt", "method_5702", "lookAt", "m_7618_"), "(Lff$a;Lexc;)V");
    }

    static void lookAt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_lookAt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_lookAtEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lookAt", "method_14222", "lookAtEntity", "m_9107_"), "(Lff$a;Lbsr;Lff$a;)V");
    }

    static void lookAtEntity(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_lookAtEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_copyFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "restoreFrom", "method_14203", "copyFrom", "m_9015_"), "(Laqv;Z)V");
    }

    static void copyFrom(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_copyFrom();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onStatusEffectApplied() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEffectAdded", "method_6020", "onStatusEffectApplied", "m_142540_"), "(Lbrz;Lbsr;)V");
    }

    static void onStatusEffectApplied(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onStatusEffectApplied();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onStatusEffectUpgraded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEffectUpdated", "method_6009", "onStatusEffectUpgraded", "m_141973_"), "(Lbrz;ZLbsr;)V");
    }

    static void onStatusEffectUpgraded(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onStatusEffectUpgraded();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onStatusEffectRemoved() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEffectRemoved", "method_6129", "onStatusEffectRemoved", "m_7285_"), "(Lbrz;)V");
    }

    static void onStatusEffectRemoved(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onStatusEffectRemoved();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_requestTeleport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "teleportTo", "method_5859", "requestTeleport", "m_6021_"), "(DDD)V");
    }

    static void requestTeleport(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_requestTeleport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_requestTeleportOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "teleportRelative", "method_45166", "requestTeleportOffset", "m_246847_"), "(DDD)V");
    }

    static void requestTeleportOffset(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_requestTeleportOffset();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_teleport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "teleportTo", "method_48105", "teleport", "m_264318_"), "(Laqu;DDDLjava/util/Set;FF)Z");
    }

    static jboolean teleport(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jobject& arg4, const jfloat& arg5, const jfloat& arg6) {
                
       const auto methodID = methodID_teleport();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_refreshPositionAfterTeleport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "moveTo", "method_24203", "refreshPositionAfterTeleport", "m_6027_"), "(DDD)V");
    }

    static void refreshPositionAfterTeleport(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_refreshPositionAfterTeleport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addCritParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "crit", "method_7277", "addCritParticles", "m_5704_"), "(Lbsr;)V");
    }

    static void addCritParticles(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addCritParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addEnchantedHitParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "magicCrit", "method_7304", "addEnchantedHitParticles", "m_5700_"), "(Lbsr;)V");
    }

    static void addEnchantedHitParticles(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEnchantedHitParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendAbilitiesUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "onUpdateAbilities", "method_7355", "sendAbilitiesUpdate", "m_6885_"), "()V");
    }

    static void sendAbilitiesUpdate(const jobject& obj) {
                
       const auto methodID = methodID_sendAbilitiesUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServerWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "serverLevel", "method_51469", "getServerWorld", "m_284548_"), "()Laqu;");
    }

    static jobject getServerWorld(const jobject& obj) {
                
       const auto methodID = methodID_getServerWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_changeGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setGameMode", "method_7336", "changeGameMode", "m_143403_"), "(Ldct;)Z");
    }

    static jboolean changeGameMode(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_changeGameMode();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSpectator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R_", "isSpectator", "method_7325", "isSpectator", "m_5833_"), "()Z");
    }

    static jboolean isSpectator(const jobject& obj) {
                
       const auto methodID = methodID_isSpectator();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isCreative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isCreative", "method_7337", "isCreative", "m_7500_"), "()Z");
    }

    static jboolean isCreative(const jobject& obj) {
                
       const auto methodID = methodID_isCreative();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__sendMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendSystemMessage", "method_43496", "sendMessage", "m_213846_"), "(Lwz;)V");
    }

    static void _sendMessage(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__sendMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendMessageToClient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "sendSystemMessage", "method_43502", "sendMessageToClient", "m_240418_"), "(Lwz;Z)V");
    }

    static void sendMessageToClient(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_sendMessageToClient();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_sendChatMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendChatMessage", "method_43505", "sendChatMessage", "m_245069_"), "(Lxo;ZLwv$a;)V");
    }

    static void sendChatMessage(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_sendChatMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getIp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "getIpAddress", "method_14209", "getIp", "m_9239_"), "()Ljava/lang/String;");
    }

    static jobject getIp(const jobject& obj) {
                
       const auto methodID = methodID_getIp();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setClientOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateOptions", "method_14213", "setClientOptions", "m_9156_"), "(Laqh;)V");
    }

    static void setClientOptions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setClientOptions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getClientOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "clientInformation", "method_53823", "getClientOptions", "m_294559_"), "()Laqh;");
    }

    static jobject getClientOptions(const jobject& obj) {
                
       const auto methodID = methodID_getClientOptions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_areClientChatColorsEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "canChatInColor", "method_34879", "areClientChatColorsEnabled", "m_143432_"), "()Z");
    }

    static jboolean areClientChatColorsEnabled(const jobject& obj) {
                
       const auto methodID = methodID_areClientChatColorsEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getClientChatVisibility() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "getChatVisibility", "method_14238", "getClientChatVisibility", "m_9241_"), "()Lcmv;");
    }

    static jobject getClientChatVisibility(const jobject& obj) {
                
       const auto methodID = methodID_getClientChatVisibility();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_acceptsMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "acceptsSystemMessages", "method_44707", "acceptsMessage", "m_240399_"), "(Z)Z");
    }

    static jboolean acceptsMessage(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_acceptsMessage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_acceptsChatMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gH", "acceptsChatMessages", "method_44706", "acceptsChatMessage", "m_240422_"), "()Z");
    }

    static jboolean acceptsChatMessage(const jobject& obj) {
                
       const auto methodID = methodID_acceptsChatMessage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getViewDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "requestedViewDistance", "method_52371", "getViewDistance", "m_295486_"), "()I");
    }

    static jint getViewDistance(const jobject& obj) {
                
       const auto methodID = methodID_getViewDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendServerMetadata() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendServerStatus", "method_43930", "sendServerMetadata", "m_215109_"), "(Lajq;)V");
    }

    static void sendServerMetadata(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendServerMetadata();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPermissionLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "getPermissionLevel", "method_5691", "getPermissionLevel", "m_8088_"), "()I");
    }

    static jint getPermissionLevel(const jobject& obj) {
                
       const auto methodID = methodID_getPermissionLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateLastActionTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "resetLastActionTime", "method_14234", "updateLastActionTime", "m_9243_"), "()V");
    }

    static void updateLastActionTime(const jobject& obj) {
                
       const auto methodID = methodID_updateLastActionTime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStatHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "getStats", "method_14248", "getStatHandler", "m_8951_"), "()Lavv;");
    }

    static jobject getStatHandler(const jobject& obj) {
                
       const auto methodID = methodID_getStatHandler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRecipeBook() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "getRecipeBook", "method_14253", "getRecipeBook", "m_8952_"), "()Lavu;");
    }

    static jobject getRecipeBook(const jobject& obj) {
                
       const auto methodID = methodID_getRecipeBook();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_updatePotionVisibility() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "updateInvisibilityStatus", "method_6027", "updatePotionVisibility", "m_8034_"), "()V");
    }

    static void updatePotionVisibility(const jobject& obj) {
                
       const auto methodID = methodID_updatePotionVisibility();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCameraEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L", "getCamera", "method_14242", "getCameraEntity", "m_8954_"), "()Lbsr;");
    }

    static jobject getCameraEntity(const jobject& obj) {
                
       const auto methodID = methodID_getCameraEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCameraEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setCamera", "method_14224", "setCameraEntity", "m_9213_"), "(Lbsr;)V");
    }

    static void setCameraEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCameraEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickPortalCooldown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("M", "processPortalCooldown", "method_5760", "tickPortalCooldown", "m_8021_"), "()V");
    }

    static void tickPortalCooldown(const jobject& obj) {
                
       const auto methodID = methodID_tickPortalCooldown();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_attack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "attack", "method_7324", "attack", "m_5706_"), "(Lbsr;)V");
    }

    static void attack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_attack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLastActionTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("N", "getLastActionTime", "method_14219", "getLastActionTime", "m_8956_"), "()J");
    }

    static jlong getLastActionTime(const jobject& obj) {
                
       const auto methodID = methodID_getLastActionTime();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayerListName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("O", "getTabListDisplayName", "method_14206", "getPlayerListName", "m_8957_"), "()Lwz;");
    }

    static jobject getPlayerListName(const jobject& obj) {
                
       const auto methodID = methodID_getPlayerListName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_swingHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "swing", "method_6104", "swingHand", "m_6674_"), "(Lbqq;)V");
    }

    static void swingHand(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_swingHand();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isInTeleportationState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("P", "isChangingDimension", "method_14208", "isInTeleportationState", "m_8958_"), "()Z");
    }

    static jboolean isInTeleportationState(const jobject& obj) {
                
       const auto methodID = methodID_isInTeleportationState();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_onTeleportationDone() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Q", "hasChangedDimension", "method_14240", "onTeleportationDone", "m_8959_"), "()V");
    }

    static void onTeleportationDone(const jobject& obj) {
                
       const auto methodID = methodID_onTeleportationDone();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAdvancementTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R", "getAdvancements", "method_14236", "getAdvancementTracker", "m_8960_"), "()Lakz;");
    }

    static jobject getAdvancementTracker(const jobject& obj) {
                
       const auto methodID = methodID_getAdvancementTracker();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__teleport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "teleportTo", "method_14251", "teleport", "m_8999_"), "(Laqu;DDDFF)V");
    }

    static void _teleport(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jfloat& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID__teleport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getSpawnPointPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("S", "getRespawnPosition", "method_26280", "getSpawnPointPosition", "m_8961_"), "()Ljd;");
    }

    static jobject getSpawnPointPosition(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnPointPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpawnAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("T", "getRespawnAngle", "method_30631", "getSpawnAngle", "m_8962_"), "()F");
    }

    static jfloat getSpawnAngle(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnAngle();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpawnPointDimension() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("U", "getRespawnDimension", "method_26281", "getSpawnPointDimension", "m_8963_"), "()Lakq;");
    }

    static jobject getSpawnPointDimension(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnPointDimension();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSpawnForced() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("V", "isRespawnForced", "method_26282", "isSpawnForced", "m_8964_"), "()Z");
    }

    static jboolean isSpawnForced(const jobject& obj) {
                
       const auto methodID = methodID_isSpawnForced();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSpawnPointFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "copyRespawnPosition", "method_60592", "setSpawnPointFrom", "m_339924_"), "(Laqv;)V");
    }

    static void setSpawnPointFrom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setSpawnPointFrom();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setSpawnPoint() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setRespawnPosition", "method_26284", "setSpawnPoint", "m_9158_"), "(Lakq;Ljd;FZZ)V");
    }

    static void setSpawnPoint(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jboolean& arg3, const jboolean& arg4) {
                
       const auto methodID = methodID_setSpawnPoint();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getWatchedSection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("W", "getLastSectionPos", "method_14232", "getWatchedSection", "m_8965_"), "()Lkf;");
    }

    static jobject getWatchedSection(const jobject& obj) {
                
       const auto methodID = methodID_getWatchedSection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWatchedSection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLastSectionPos", "method_17668", "setWatchedSection", "m_9119_"), "(Lkf;)V");
    }

    static void setWatchedSection(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setWatchedSection();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getChunkFilter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("X", "getChunkTrackingView", "method_52372", "getChunkFilter", "m_292900_"), "()Laqg;");
    }

    static jobject getChunkFilter(const jobject& obj) {
                
       const auto methodID = methodID_getChunkFilter();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setChunkFilter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setChunkTrackingView", "method_52373", "setChunkFilter", "m_294756_"), "(Laqg;)V");
    }

    static void setChunkFilter(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setChunkFilter();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_playSoundToPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playNotifySound", "method_17356", "playSoundToPlayer", "m_6330_"), "(Lavo;Lavq;FF)V");
    }

    static void playSoundToPlayer(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_playSoundToPlayer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_dropItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "drop", "method_7329", "dropItem", "m_7197_"), "(Lcuq;ZZ)Lcjh;");
    }

    static jobject dropItem(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_dropItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getTextStream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Y", "getTextFilter", "method_31273", "getTextStream", "m_8967_"), "()Larz;");
    }

    static jobject getTextStream(const jobject& obj) {
                
       const auto methodID = methodID_getTextStream();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setServerWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setServerLevel", "method_51468", "setServerWorld", "m_284127_"), "(Laqu;)V");
    }

    static void setServerWorld(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setServerWorld();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_gameModeFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readPlayerMode", "method_32745", "gameModeFromNbt", "m_143413_"), "(Lub;Ljava/lang/String;)Ldct;");
    }

    static jobject gameModeFromNbt(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_gameModeFromNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getServerGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "calculateGameModeForNewPlayer", "method_32746", "getServerGameMode", "m_143423_"), "(Ldct;)Ldct;");
    }

    static jobject getServerGameMode(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getServerGameMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readGameModeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "loadGameTypes", "method_32748", "readGameModeNbt", "m_143427_"), "(Lub;)V");
    }

    static void readGameModeNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readGameModeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeGameModeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "storeGameTypes", "method_32749", "writeGameModeNbt", "m_143430_"), "(Lub;)V");
    }

    static void writeGameModeNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeGameModeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldFilterText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Z", "isTextFilteringEnabled", "method_33793", "shouldFilterText", "m_143387_"), "()Z");
    }

    static jboolean shouldFilterText(const jobject& obj) {
                
       const auto methodID = methodID_shouldFilterText();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldFilterMessagesSentTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "shouldFilterMessageTo", "method_33795", "shouldFilterMessagesSentTo", "m_143421_"), "(Laqv;)Z");
    }

    static jboolean shouldFilterMessagesSentTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldFilterMessagesSentTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canModifyAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mayInteract", "method_36971", "canModifyAt", "m_142265_"), "(Ldcw;Ljd;)Z");
    }

    static jboolean canModifyAt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canModifyAt();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tickItemStackUsage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateUsingItem", "method_37119", "tickItemStackUsage", "m_142106_"), "(Lcuq;)V");
    }

    static void tickItemStackUsage(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tickItemStackUsage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dropSelectedItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "drop", "method_37413", "dropSelectedItem", "m_182294_"), "(Z)Z");
    }

    static jboolean dropSelectedItem(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_dropSelectedItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_allowsServerListing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "allowsListing", "method_39426", "allowsServerListing", "m_184128_"), "()Z");
    }

    static jboolean allowsServerListing(const jobject& obj) {
                
       const auto methodID = methodID_allowsServerListing();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSculkShriekerWarningManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "getWardenSpawnTracker", "method_42272", "getSculkShriekerWarningManager", "m_245217_"), "()Ljava/util/Optional;");
    }

    static jobject getSculkShriekerWarningManager(const jobject& obj) {
                
       const auto methodID = methodID_getSculkShriekerWarningManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSpawnExtraParticlesOnFall() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setSpawnExtraParticlesOnFall", "method_58143", "setSpawnExtraParticlesOnFall", "m_324634_"), "(Z)V");
    }

    static void setSpawnExtraParticlesOnFall(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSpawnExtraParticlesOnFall();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_triggerItemPickedUpByEntityCriteria() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onItemPickup", "method_29499", "triggerItemPickedUpByEntityCriteria", "m_21053_"), "(Lcjh;)V");
    }

    static void triggerItemPickedUpByEntityCriteria(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_triggerItemPickedUpByEntityCriteria();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setSession() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setChatSession", "method_46364", "setSession", "m_252981_"), "(Lxq;)V");
    }

    static void setSession(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setSession();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSession() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ac", "getChatSession", "method_45163", "getSession", "m_246404_"), "()Lxq;");
    }

    static jobject getSession(const jobject& obj) {
                
       const auto methodID = methodID_getSession();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tiltScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "indicateDamage", "method_48761", "tiltScreen", "m_269405_"), "(DD)V");
    }

    static void tiltScreen(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_tiltScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_startRiding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startRiding", "method_5873", "startRiding", "m_7998_"), "(Lbsr;Z)Z");
    }

    static jboolean startRiding(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_startRiding();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_stopRiding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ad", "stopRiding", "method_5848", "stopRiding", "m_8127_"), "()V");
    }

    static void stopRiding(const jobject& obj) {
                
       const auto methodID = methodID_stopRiding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createCommonPlayerSpawnInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createCommonSpawnInfo", "method_52374", "createCommonPlayerSpawnInfo", "m_292591_"), "(Laqu;)Lagd;");
    }

    static jobject createCommonPlayerSpawnInfo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createCommonPlayerSpawnInfo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setStartRaidPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setRaidOmenPosition", "method_58586", "setStartRaidPos", "m_322512_"), "(Ljd;)V");
    }

    static void setStartRaidPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setStartRaidPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clearStartRaidPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ae", "clearRaidOmenPosition", "method_58584", "clearStartRaidPos", "m_321624_"), "()V");
    }

    static void clearStartRaidPos(const jobject& obj) {
                
       const auto methodID = methodID_clearStartRaidPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStartRaidPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("af", "getRaidOmenPosition", "method_58585", "getStartRaidPos", "m_323122_"), "()Ljd;");
    }

    static jobject getStartRaidPos(const jobject& obj) {
                
       const auto methodID = methodID_getStartRaidPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ag", "getKnownMovement", "method_60478", "getMovement", "m_339221_"), "()Lexc;");
    }

    static jobject getMovement(const jobject& obj) {
                
       const auto methodID = methodID_getMovement();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setOnGround() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setKnownMovement", "method_52208", "setOnGround", "m_340373_"), "(Lexc;)V");
    }

    static void setOnGround(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOnGround();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDamageAgainst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEnchantedDamage", "method_59903", "getDamageAgainst", "m_339569_"), "(Lbsr;FLbrk;)F");
    }

    static jfloat getDamageAgainst(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getDamageAgainst();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_sendEquipmentBreakStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEquippedItemBroken", "method_20235", "sendEquipmentBreakStatus", "m_339593_"), "(Lcul;Lbsy;)V");
    }

    static void sendEquipmentBreakStatus(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_sendEquipmentBreakStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_SERVER_NETWORK_SERVERPLAYERENTITY_HPP