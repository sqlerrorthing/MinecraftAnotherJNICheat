// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_NETWORK_CHUNKFILTER$1_HPP
#define NET_MINECRAFT_SERVER_NETWORK_CHUNKFILTER$1_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.network.ChunkFilter$1
 * Remapped: aqg$1
 */
namespace ChunkFilter$1 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqg$1", "net/minecraft/server/level/ChunkTrackingView$1", "net/minecraft/class_8603$1", "net/minecraft/server/network/ChunkFilter$1", "net/minecraft/src/C_290036_$C_290150_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_isWithinDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "contains", "method_52359", "isWithinDistance", "m_293955_"), "(IIZ)Z");
    }

    static jboolean isWithinDistance(const jobject& obj, const jint& arg0, const jint& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_isWithinDistance();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_forEach() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forEach", "method_52363", "forEach", "m_292843_"), "(Ljava/util/function/Consumer;)V");
    }

    static void forEach(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEach();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_NETWORK_CHUNKFILTER$1_HPP