// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_NETWORK_ENTITYTRACKERENTRY_HPP
#define NET_MINECRAFT_SERVER_NETWORK_ENTITYTRACKERENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.network.EntityTrackerEntry
 * Remapped: aqt
 */
namespace EntityTrackerEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqt", "net/minecraft/server/level/ServerEntity", "net/minecraft/class_3231", "net/minecraft/server/network/EntityTrackerEntry", "net/minecraft/src/C_11_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.network.EntityTrackerEntry#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_14041", "LOGGER", "f_8508_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_14041", "LOGGER", "f_8508_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.network.EntityTrackerEntry#field_29767
    [[maybe_unused]] static jint get_field_field_29767() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TOLERANCE_LEVEL_ROTATION", "field_29767", "field_29767", "f_143241_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#field_29767
    [[maybe_unused]] static void set_field_field_29767(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TOLERANCE_LEVEL_ROTATION", "field_29767", "field_29767", "f_143241_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.network.EntityTrackerEntry#field_44988
    [[maybe_unused]] static jdouble get_field_field_44988() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TOLERANCE_LEVEL_POSITION", "field_44988", "field_44988", "f_290999_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#field_44988
    [[maybe_unused]] static void set_field_field_44988(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TOLERANCE_LEVEL_POSITION", "field_44988", "field_44988", "f_290999_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.network.EntityTrackerEntry#field_44987
    [[maybe_unused]] static jint get_field_field_44987() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FORCED_POS_UPDATE_PERIOD", "field_44987", "field_44987", "f_291116_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.network.EntityTrackerEntry#field_44987
    [[maybe_unused]] static void set_field_field_44987(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FORCED_POS_UPDATE_PERIOD", "field_44987", "field_44987", "f_291116_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.network.EntityTrackerEntry#field_44989
    [[maybe_unused]] static jint get_field_field_44989() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FORCED_TELEPORT_PERIOD", "field_44989", "field_44989", "f_291733_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#field_44989
    [[maybe_unused]] static void set_field_field_44989(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FORCED_TELEPORT_PERIOD", "field_44989", "field_44989", "f_291733_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "level", "field_18258", "world", "f_8509_"), "Laqu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "level", "field_18258", "world", "f_8509_"), "Laqu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#entity
    static jobject get_field_entity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "entity", "field_14049", "entity", "f_8510_"), "Lbsr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#entity
    static void set_field_entity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "entity", "field_14049", "entity", "f_8510_"), "Lbsr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#tickInterval
    static jint get_field_tickInterval(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "updateInterval", "field_14037", "tickInterval", "f_8511_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#tickInterval
    static void set_field_tickInterval(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "updateInterval", "field_14037", "tickInterval", "f_8511_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#alwaysUpdateVelocity
    static jboolean get_field_alwaysUpdateVelocity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "trackDelta", "field_14039", "alwaysUpdateVelocity", "f_8512_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#alwaysUpdateVelocity
    static void set_field_alwaysUpdateVelocity(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "trackDelta", "field_14039", "alwaysUpdateVelocity", "f_8512_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#receiver
    static jobject get_field_receiver(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "broadcast", "field_18259", "receiver", "f_8513_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#receiver
    static void set_field_receiver(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "broadcast", "field_18259", "receiver", "f_8513_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#trackedPos
    static jobject get_field_trackedPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "positionCodec", "field_39019", "trackedPos", "f_214995_"), "Laig;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#trackedPos
    static void set_field_trackedPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "positionCodec", "field_39019", "trackedPos", "f_214995_"), "Laig;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#lastYaw
    static jint get_field_lastYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "lastSentYRot", "field_14060", "lastYaw", "f_336689_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#lastYaw
    static void set_field_lastYaw(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "lastSentYRot", "field_14060", "lastYaw", "f_336689_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#lastPitch
    static jint get_field_lastPitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "lastSentXRot", "field_14047", "lastPitch", "f_337451_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#lastPitch
    static void set_field_lastPitch(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "lastSentXRot", "field_14047", "lastPitch", "f_337451_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#lastHeadYaw
    static jint get_field_lastHeadYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "lastSentYHeadRot", "field_14059", "lastHeadYaw", "f_337287_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#lastHeadYaw
    static void set_field_lastHeadYaw(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "lastSentYHeadRot", "field_14059", "lastHeadYaw", "f_337287_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#velocity
    static jobject get_field_velocity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "lastSentMovement", "field_18278", "velocity", "f_337046_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#velocity
    static void set_field_velocity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "lastSentMovement", "field_18278", "velocity", "f_337046_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#trackingTick
    static jint get_field_trackingTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "tickCount", "field_14040", "trackingTick", "f_8521_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#trackingTick
    static void set_field_trackingTick(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "tickCount", "field_14040", "trackingTick", "f_8521_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#updatesWithoutVehicle
    static jint get_field_updatesWithoutVehicle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "teleportDelay", "field_14043", "updatesWithoutVehicle", "f_8522_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#updatesWithoutVehicle
    static void set_field_updatesWithoutVehicle(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "teleportDelay", "field_14043", "updatesWithoutVehicle", "f_8522_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#lastPassengers
    static jobject get_field_lastPassengers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "lastPassengers", "field_14045", "lastPassengers", "f_8523_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#lastPassengers
    static void set_field_lastPassengers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "lastPassengers", "field_14045", "lastPassengers", "f_8523_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#hadVehicle
    static jboolean get_field_hadVehicle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "wasRiding", "field_14051", "hadVehicle", "f_8524_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#hadVehicle
    static void set_field_hadVehicle(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "wasRiding", "field_14051", "hadVehicle", "f_8524_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#lastOnGround
    static jboolean get_field_lastOnGround(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "wasOnGround", "field_14036", "lastOnGround", "f_8525_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#lastOnGround
    static void set_field_lastOnGround(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "wasOnGround", "field_14036", "lastOnGround", "f_8525_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.EntityTrackerEntry#changedEntries
    static jobject get_field_changedEntries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "trackedDataValues", "field_41697", "changedEntries", "f_263120_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.EntityTrackerEntry#changedEntries
    static void set_field_changedEntries(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "trackedDataValues", "field_41697", "changedEntries", "f_263120_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendChanges", "method_18756", "tick", "m_8533_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_streamChangedPassengers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "removedPassengers", "method_49753", "streamChangedPassengers", "m_277180_"), "(Ljava/util/List;Ljava/util/List;)Ljava/util/stream/Stream;");
    }

    static jobject streamChangedPassengers(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_streamChangedPassengers();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_stopTracking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removePairing", "method_14302", "stopTracking", "m_8534_"), "(Laqv;)V");
    }

    static void stopTracking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_stopTracking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_startTracking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addPairing", "method_18760", "startTracking", "m_8541_"), "(Laqv;)V");
    }

    static void startTracking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_startTracking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendPackets() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendPairingData", "method_18757", "sendPackets", "m_289200_"), "(Laqv;Ljava/util/function/Consumer;)V");
    }

    static void sendPackets(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_sendPackets();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getPositionBase", "method_60942", "getPos", "m_339198_"), "()Lexc;");
    }

    static jobject getPos(const jobject& obj) {
                
       const auto methodID = methodID_getPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVelocity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getLastSentMovement", "method_60943", "getVelocity", "m_339745_"), "()Lexc;");
    }

    static jobject getVelocity(const jobject& obj) {
                
       const auto methodID = methodID_getVelocity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getLastSentXRot", "method_60944", "getPitch", "m_340051_"), "()F");
    }

    static jfloat getPitch(const jobject& obj) {
                
       const auto methodID = methodID_getPitch();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getLastSentYRot", "method_60945", "getYaw", "m_339137_"), "()F");
    }

    static jfloat getYaw(const jobject& obj) {
                
       const auto methodID = methodID_getYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeadYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getLastSentYHeadRot", "method_60946", "getHeadYaw", "m_339396_"), "()F");
    }

    static jfloat getHeadYaw(const jobject& obj) {
                
       const auto methodID = methodID_getHeadYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_syncEntityData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "sendDirtyEntityData", "method_14306", "syncEntityData", "m_8543_"), "()V");
    }

    static void syncEntityData(const jobject& obj) {
                
       const auto methodID = methodID_syncEntityData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendSyncPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "broadcastAndSend", "method_18758", "sendSyncPacket", "m_8538_"), "(Lzg;)V");
    }

    static void sendSyncPacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendSyncPacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_NETWORK_ENTITYTRACKERENTRY_HPP