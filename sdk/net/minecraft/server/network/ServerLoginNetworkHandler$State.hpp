// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_NETWORK_SERVERLOGINNETWORKHANDLER$STATE_HPP
#define NET_MINECRAFT_SERVER_NETWORK_SERVERLOGINNETWORKHANDLER$STATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.network.ServerLoginNetworkHandler$State
 * Remapped: arw$a
 */
namespace ServerLoginNetworkHandler$State {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("arw$a", "net/minecraft/server/network/ServerLoginPacketListenerImpl$State", "net/minecraft/class_3248$class_3249", "net/minecraft/server/network/ServerLoginNetworkHandler$State", "net/minecraft/src/C_37_$C_39_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#HELLO
    [[maybe_unused]] static jobject get_field_HELLO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "HELLO", "field_14170", "HELLO", "HELLO"), "Larw$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#HELLO
    [[maybe_unused]] static void set_field_HELLO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "HELLO", "field_14170", "HELLO", "HELLO"), "Larw$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#KEY
    [[maybe_unused]] static jobject get_field_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "KEY", "field_14175", "KEY", "KEY"), "Larw$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#KEY
    [[maybe_unused]] static void set_field_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "KEY", "field_14175", "KEY", "KEY"), "Larw$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#AUTHENTICATING
    [[maybe_unused]] static jobject get_field_AUTHENTICATING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "AUTHENTICATING", "field_14169", "AUTHENTICATING", "AUTHENTICATING"), "Larw$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#AUTHENTICATING
    [[maybe_unused]] static void set_field_AUTHENTICATING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "AUTHENTICATING", "field_14169", "AUTHENTICATING", "AUTHENTICATING"), "Larw$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#NEGOTIATING
    [[maybe_unused]] static jobject get_field_NEGOTIATING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NEGOTIATING", "field_14173", "NEGOTIATING", "NEGOTIATING"), "Larw$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#NEGOTIATING
    [[maybe_unused]] static void set_field_NEGOTIATING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NEGOTIATING", "field_14173", "NEGOTIATING", "NEGOTIATING"), "Larw$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#VERIFYING
    [[maybe_unused]] static jobject get_field_VERIFYING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "VERIFYING", "field_45030", "VERIFYING", "VERIFYING"), "Larw$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#VERIFYING
    [[maybe_unused]] static void set_field_VERIFYING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "VERIFYING", "field_45030", "VERIFYING", "VERIFYING"), "Larw$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#WAITING_FOR_DUPE_DISCONNECT
    [[maybe_unused]] static jobject get_field_WAITING_FOR_DUPE_DISCONNECT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "WAITING_FOR_DUPE_DISCONNECT", "field_45031", "WAITING_FOR_DUPE_DISCONNECT", "WAITING_FOR_DUPE_DISCONNECT"), "Larw$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#WAITING_FOR_DUPE_DISCONNECT
    [[maybe_unused]] static void set_field_WAITING_FOR_DUPE_DISCONNECT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "WAITING_FOR_DUPE_DISCONNECT", "field_45031", "WAITING_FOR_DUPE_DISCONNECT", "WAITING_FOR_DUPE_DISCONNECT"), "Larw$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#PROTOCOL_SWITCHING
    [[maybe_unused]] static jobject get_field_PROTOCOL_SWITCHING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PROTOCOL_SWITCHING", "field_45032", "PROTOCOL_SWITCHING", "PROTOCOL_SWITCHING"), "Larw$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#PROTOCOL_SWITCHING
    [[maybe_unused]] static void set_field_PROTOCOL_SWITCHING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PROTOCOL_SWITCHING", "field_45032", "PROTOCOL_SWITCHING", "PROTOCOL_SWITCHING"), "Larw$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#ACCEPTED
    [[maybe_unused]] static jobject get_field_ACCEPTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ACCEPTED", "field_14172", "ACCEPTED", "ACCEPTED"), "Larw$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.network.ServerLoginNetworkHandler$State#ACCEPTED
    [[maybe_unused]] static void set_field_ACCEPTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ACCEPTED", "field_14172", "ACCEPTED", "ACCEPTED"), "Larw$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Larw$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Larw$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_NETWORK_SERVERLOGINNETWORKHANDLER$STATE_HPP