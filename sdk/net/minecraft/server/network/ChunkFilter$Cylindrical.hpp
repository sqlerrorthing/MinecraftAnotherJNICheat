// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_NETWORK_CHUNKFILTER$CYLINDRICAL_HPP
#define NET_MINECRAFT_SERVER_NETWORK_CHUNKFILTER$CYLINDRICAL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.network.ChunkFilter$Cylindrical
 * Remapped: aqg$a
 */
namespace ChunkFilter$Cylindrical {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqg$a", "net/minecraft/server/level/ChunkTrackingView$Positioned", "net/minecraft/class_8603$class_8604", "net/minecraft/server/network/ChunkFilter$Cylindrical", "net/minecraft/src/C_290036_$C_290047_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.network.ChunkFilter$Cylindrical#center
    static jobject get_field_center(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "center", "comp_1574", "center", "f_290448_"), "Ldcd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ChunkFilter$Cylindrical#center
    static void set_field_center(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "center", "comp_1574", "center", "f_290448_"), "Ldcd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ChunkFilter$Cylindrical#viewDistance
    static jint get_field_viewDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "viewDistance", "comp_1575", "viewDistance", "f_290668_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ChunkFilter$Cylindrical#viewDistance
    static void set_field_viewDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "viewDistance", "comp_1575", "viewDistance", "f_290668_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getLeft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "minX", "method_52366", "getLeft", "m_292933_"), "()I");
    }

    static jint getLeft(const jobject& obj) {
                
       const auto methodID = methodID_getLeft();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBottom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "minZ", "method_52367", "getBottom", "m_294568_"), "()I");
    }

    static jint getBottom(const jobject& obj) {
                
       const auto methodID = methodID_getBottom();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "maxX", "method_52368", "getRight", "m_293927_"), "()I");
    }

    static jint getRight(const jobject& obj) {
                
       const auto methodID = methodID_getRight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "maxZ", "method_52369", "getTop", "m_295008_"), "()I");
    }

    static jint getTop(const jobject& obj) {
                
       const auto methodID = methodID_getTop();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_overlaps() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "squareIntersects", "method_52365", "overlaps", "m_294954_"), "(Laqg$a;)Z");
    }

    static jboolean overlaps(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_overlaps();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isWithinDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "contains", "method_52359", "isWithinDistance", "m_293955_"), "(IIZ)Z");
    }

    static jboolean isWithinDistance(const jobject& obj, const jint& arg0, const jint& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_isWithinDistance();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_forEach() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forEach", "method_52363", "forEach", "m_292843_"), "(Ljava/util/function/Consumer;)V");
    }

    static void forEach(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEach();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__center() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "center", "comp_1574", "center", "f_290448_"), "()Ldcd;");
    }

    static jobject _center(const jobject& obj) {
                
       const auto methodID = methodID__center();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__viewDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "viewDistance", "comp_1575", "viewDistance", "f_290668_"), "()I");
    }

    static jint _viewDistance(const jobject& obj) {
                
       const auto methodID = methodID__viewDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_NETWORK_CHUNKFILTER$CYLINDRICAL_HPP