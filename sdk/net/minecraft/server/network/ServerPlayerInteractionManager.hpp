// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_NETWORK_SERVERPLAYERINTERACTIONMANAGER_HPP
#define NET_MINECRAFT_SERVER_NETWORK_SERVERPLAYERINTERACTIONMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.network.ServerPlayerInteractionManager
 * Remapped: aqw
 */
namespace ServerPlayerInteractionManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqw", "net/minecraft/server/level/ServerPlayerGameMode", "net/minecraft/class_3225", "net/minecraft/server/network/ServerPlayerInteractionManager", "net/minecraft/src/C_14_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.network.ServerPlayerInteractionManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_20325", "LOGGER", "f_9246_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerInteractionManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_20325", "LOGGER", "f_9246_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.server.network.ServerPlayerInteractionManager#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "level", "field_14007", "world", "f_9244_"), "Laqu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.server.network.ServerPlayerInteractionManager#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "level", "field_14007", "world", "f_9244_"), "Laqu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.server.network.ServerPlayerInteractionManager#player
    static jobject get_field_player(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "player", "field_14008", "player", "f_9245_"), "Laqv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.server.network.ServerPlayerInteractionManager#player
    static void set_field_player(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "player", "field_14008", "player", "f_9245_"), "Laqv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerInteractionManager#gameMode
    static jobject get_field_gameMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "gameModeForPlayer", "field_14005", "gameMode", "f_9247_"), "Ldct;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerInteractionManager#gameMode
    static void set_field_gameMode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "gameModeForPlayer", "field_14005", "gameMode", "f_9247_"), "Ldct;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerInteractionManager#previousGameMode
    static jobject get_field_previousGameMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "previousGameModeForPlayer", "field_25715", "previousGameMode", "f_9248_"), "Ldct;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerInteractionManager#previousGameMode
    static void set_field_previousGameMode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "previousGameModeForPlayer", "field_25715", "previousGameMode", "f_9248_"), "Ldct;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerInteractionManager#mining
    static jboolean get_field_mining(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "isDestroyingBlock", "field_14003", "mining", "f_9249_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerInteractionManager#mining
    static void set_field_mining(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "isDestroyingBlock", "field_14003", "mining", "f_9249_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerInteractionManager#startMiningTime
    static jint get_field_startMiningTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "destroyProgressStart", "field_20326", "startMiningTime", "f_9250_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerInteractionManager#startMiningTime
    static void set_field_startMiningTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "destroyProgressStart", "field_20326", "startMiningTime", "f_9250_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerInteractionManager#miningPos
    static jobject get_field_miningPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "destroyPos", "field_20327", "miningPos", "f_9251_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerInteractionManager#miningPos
    static void set_field_miningPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "destroyPos", "field_20327", "miningPos", "f_9251_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerInteractionManager#tickCounter
    static jint get_field_tickCounter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "gameTicks", "field_14000", "tickCounter", "f_9252_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerInteractionManager#tickCounter
    static void set_field_tickCounter(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "gameTicks", "field_14000", "tickCounter", "f_9252_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerInteractionManager#failedToMine
    static jboolean get_field_failedToMine(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "hasDelayedDestroy", "field_20328", "failedToMine", "f_9253_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerInteractionManager#failedToMine
    static void set_field_failedToMine(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "hasDelayedDestroy", "field_20328", "failedToMine", "f_9253_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerInteractionManager#failedMiningPos
    static jobject get_field_failedMiningPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "delayedDestroyPos", "field_20329", "failedMiningPos", "f_9254_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerInteractionManager#failedMiningPos
    static void set_field_failedMiningPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "delayedDestroyPos", "field_20329", "failedMiningPos", "f_9254_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerInteractionManager#failedStartMiningTime
    static jint get_field_failedStartMiningTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "delayedTickStart", "field_20330", "failedStartMiningTime", "f_9255_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerInteractionManager#failedStartMiningTime
    static void set_field_failedStartMiningTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "delayedTickStart", "field_20330", "failedStartMiningTime", "f_9255_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.network.ServerPlayerInteractionManager#blockBreakingProgress
    static jint get_field_blockBreakingProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "lastSentState", "field_20331", "blockBreakingProgress", "f_9256_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.network.ServerPlayerInteractionManager#blockBreakingProgress
    static void set_field_blockBreakingProgress(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "lastSentState", "field_20331", "blockBreakingProgress", "f_9256_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_changeGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "changeGameModeForPlayer", "method_30118", "changeGameMode", "m_143473_"), "(Ldct;)Z");
    }

    static jboolean changeGameMode(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_changeGameMode();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setGameModeForPlayer", "method_14261", "setGameMode", "m_9273_"), "(Ldct;Ldct;)V");
    }

    static void setGameMode(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setGameMode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getGameModeForPlayer", "method_14257", "getGameMode", "m_9290_"), "()Ldct;");
    }

    static jobject getGameMode(const jobject& obj) {
                
       const auto methodID = methodID_getGameMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPreviousGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getPreviousGameModeForPlayer", "method_30119", "getPreviousGameMode", "m_9293_"), "()Ldct;");
    }

    static jobject getPreviousGameMode(const jobject& obj) {
                
       const auto methodID = methodID_getPreviousGameMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSurvivalLike() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isSurvival", "method_14267", "isSurvivalLike", "m_9294_"), "()Z");
    }

    static jboolean isSurvivalLike(const jobject& obj) {
                
       const auto methodID = methodID_isSurvivalLike();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isCreative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isCreative", "method_14268", "isCreative", "m_9295_"), "()Z");
    }

    static jboolean isCreative(const jobject& obj) {
                
       const auto methodID = methodID_isCreative();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_14264", "update", "m_7712_"), "()V");
    }

    static void update(const jobject& obj) {
                
       const auto methodID = methodID_update();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_continueMining() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "incrementDestroyProgress", "method_21716", "continueMining", "m_9276_"), "(Ldtc;Ljd;I)F");
    }

    static jfloat continueMining(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_continueMining();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onBlockBreakingAction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "debugLogging", "method_41250", "onBlockBreakingAction", "m_215125_"), "(Ljd;ZILjava/lang/String;)V");
    }

    static void onBlockBreakingAction(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_onBlockBreakingAction();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_processBlockBreakingAction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleBlockBreakAction", "method_14263", "processBlockBreakingAction", "m_214168_"), "(Ljd;Lahm$a;Lji;II)V");
    }

    static void processBlockBreakingAction(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_processBlockBreakingAction();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_finishMining() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "destroyAndAck", "method_21717", "finishMining", "m_215116_"), "(Ljd;ILjava/lang/String;)V");
    }

    static void finishMining(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_finishMining();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_tryBreakBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "destroyBlock", "method_14266", "tryBreakBlock", "m_9280_"), "(Ljd;)Z");
    }

    static jboolean tryBreakBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryBreakBlock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_interactItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "useItem", "method_14256", "interactItem", "m_6261_"), "(Laqv;Ldcw;Lcuq;Lbqq;)Lbqr;");
    }

    static jobject interactItem(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_interactItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_interactBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "useItemOn", "method_14262", "interactBlock", "m_7179_"), "(Laqv;Ldcw;Lcuq;Lbqq;Lewy;)Lbqr;");
    }

    static jobject interactBlock(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_interactBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_setWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLevel", "method_14259", "setWorld", "m_9260_"), "(Laqu;)V");
    }

    static void setWorld(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setWorld();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_NETWORK_SERVERPLAYERINTERACTIONMANAGER_HPP