// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_SCHEDULECOMMAND_HPP
#define NET_MINECRAFT_SERVER_COMMAND_SCHEDULECOMMAND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.ScheduleCommand
 * Remapped: aod
 */
namespace ScheduleCommand {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aod", "net/minecraft/server/commands/ScheduleCommand", "net/minecraft/class_3112", "net/minecraft/server/command/ScheduleCommand", "net/minecraft/src/C_5366_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.command.ScheduleCommand#SAME_TICK_EXCEPTION
    [[maybe_unused]] static jobject get_field_SAME_TICK_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_SAME_TICK", "field_13706", "SAME_TICK_EXCEPTION", "f_138415_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.ScheduleCommand#SAME_TICK_EXCEPTION
    [[maybe_unused]] static void set_field_SAME_TICK_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_SAME_TICK", "field_13706", "SAME_TICK_EXCEPTION", "f_138415_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.ScheduleCommand#CLEARED_FAILURE_EXCEPTION
    [[maybe_unused]] static jobject get_field_CLEARED_FAILURE_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_CANT_REMOVE", "field_20853", "CLEARED_FAILURE_EXCEPTION", "f_138416_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.ScheduleCommand#CLEARED_FAILURE_EXCEPTION
    [[maybe_unused]] static void set_field_CLEARED_FAILURE_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_CANT_REMOVE", "field_20853", "CLEARED_FAILURE_EXCEPTION", "f_138416_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.ScheduleCommand#SUGGESTION_PROVIDER
    [[maybe_unused]] static jobject get_field_SUGGESTION_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SUGGEST_SCHEDULE", "field_20854", "SUGGESTION_PROVIDER", "f_138417_"), "Lcom/mojang/brigadier/suggestion/SuggestionProvider;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.ScheduleCommand#SUGGESTION_PROVIDER
    [[maybe_unused]] static void set_field_SUGGESTION_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SUGGEST_SCHEDULE", "field_20854", "SUGGESTION_PROVIDER", "f_138417_"), "Lcom/mojang/brigadier/suggestion/SuggestionProvider;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_13567", "register", "m_138419_"), "(Lcom/mojang/brigadier/CommandDispatcher;)V");
    }

    static void register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_execute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "schedule", "method_13566", "execute", "m_138428_"), "(Let;Lcom/mojang/datafixers/util/Pair;IZ)I");
    }

    static jint execute(const jobject& arg0, const jobject& arg1, const jint& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_execute();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_clearEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "remove", "method_22833", "clearEvent", "m_138433_"), "(Let;Ljava/lang/String;)I");
    }

    static jint clearEvent(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_clearEvent();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_SCHEDULECOMMAND_HPP