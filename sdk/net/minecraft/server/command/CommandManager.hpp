// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_COMMANDMANAGER_HPP
#define NET_MINECRAFT_SERVER_COMMAND_COMMANDMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.CommandManager
 * Remapped: eu
 */
namespace CommandManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eu", "net/minecraft/commands/Commands", "net/minecraft/class_2170", "net/minecraft/server/command/CommandManager", "net/minecraft/src/C_3027_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.command.CommandManager#CURRENT_CONTEXT
    [[maybe_unused]] static jobject get_field_CURRENT_CONTEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CURRENT_EXECUTION_CONTEXT", "field_46823", "CURRENT_CONTEXT", "f_303274_"), "Ljava/lang/ThreadLocal;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.CommandManager#CURRENT_CONTEXT
    [[maybe_unused]] static void set_field_CURRENT_CONTEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CURRENT_EXECUTION_CONTEXT", "field_46823", "CURRENT_CONTEXT", "f_303274_"), "Ljava/lang/ThreadLocal;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.CommandManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "LOGGER", "field_9833", "LOGGER", "f_82089_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.CommandManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "LOGGER", "field_9833", "LOGGER", "f_82089_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.command.CommandManager#field_31837
    [[maybe_unused]] static jint get_field_field_31837() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LEVEL_ALL", "field_31837", "field_31837", "f_165682_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.command.CommandManager#field_31837
    [[maybe_unused]] static void set_field_field_31837(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LEVEL_ALL", "field_31837", "field_31837", "f_165682_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.command.CommandManager#field_31838
    [[maybe_unused]] static jint get_field_field_31838() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LEVEL_MODERATORS", "field_31838", "field_31838", "f_165683_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.command.CommandManager#field_31838
    [[maybe_unused]] static void set_field_field_31838(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LEVEL_MODERATORS", "field_31838", "field_31838", "f_165683_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.command.CommandManager#field_31839
    [[maybe_unused]] static jint get_field_field_31839() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LEVEL_GAMEMASTERS", "field_31839", "field_31839", "f_165684_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.command.CommandManager#field_31839
    [[maybe_unused]] static void set_field_field_31839(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LEVEL_GAMEMASTERS", "field_31839", "field_31839", "f_165684_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.command.CommandManager#field_31840
    [[maybe_unused]] static jint get_field_field_31840() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LEVEL_ADMINS", "field_31840", "field_31840", "f_165685_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.command.CommandManager#field_31840
    [[maybe_unused]] static void set_field_field_31840(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LEVEL_ADMINS", "field_31840", "field_31840", "f_165685_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.command.CommandManager#field_31841
    [[maybe_unused]] static jint get_field_field_31841() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LEVEL_OWNERS", "field_31841", "field_31841", "f_165686_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.command.CommandManager#field_31841
    [[maybe_unused]] static void set_field_field_31841(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LEVEL_OWNERS", "field_31841", "field_31841", "f_165686_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.command.CommandManager#dispatcher
    static jobject get_field_dispatcher(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "dispatcher", "field_9832", "dispatcher", "f_82090_"), "Lcom/mojang/brigadier/CommandDispatcher;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.command.CommandManager#dispatcher
    static void set_field_dispatcher(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "dispatcher", "field_9832", "dispatcher", "f_82090_"), "Lcom/mojang/brigadier/CommandDispatcher;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_withCommandSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "mapSource", "method_45018", "withCommandSource", "m_242611_"), "(Lcom/mojang/brigadier/ParseResults;Ljava/util/function/UnaryOperator;)Lcom/mojang/brigadier/ParseResults;");
    }

    static jobject withCommandSource(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_withCommandSource();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_executeWithPrefix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "performPrefixedCommand", "method_44252", "executeWithPrefix", "m_230957_"), "(Let;Ljava/lang/String;)V");
    }

    static void executeWithPrefix(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_executeWithPrefix();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_execute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "performCommand", "method_9249", "execute", "m_242674_"), "(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)V");
    }

    static void execute(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_execute();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_checkCommand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "finishParsing", "method_54492", "checkCommand", "m_304974_"), "(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;Let;)Lcom/mojang/brigadier/context/ContextChain;");
    }

    static jobject checkCommand(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_checkCommand();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_callWithContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "executeCommandInContext", "method_54313", "callWithContext", "m_306801_"), "(Let;Ljava/util/function/Consumer;)V");
    }

    static void callWithContext(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_callWithContext();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_sendCommandTree() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendCommands", "method_9241", "sendCommandTree", "m_82095_"), "(Laqv;)V");
    }

    static void sendCommandTree(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendCommandTree();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_makeTreeForSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillUsableCommands", "method_9239", "makeTreeForSource", "m_82112_"), "(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Let;Ljava/util/Map;)V");
    }

    static void makeTreeForSource(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_makeTreeForSource();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_literal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "literal", "method_9247", "literal", "m_82127_"), "(Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;");
    }

    static jobject literal(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_literal();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_argument() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "argument", "method_9244", "argument", "m_82129_"), "(Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;");
    }

    static jobject argument(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_argument();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getCommandValidator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createValidator", "method_9238", "getCommandValidator", "m_82120_"), "(Leu$b;)Ljava/util/function/Predicate;");
    }

    static jobject getCommandValidator(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getCommandValidator();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getDispatcher() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDispatcher", "method_9235", "getDispatcher", "m_82094_"), "()Lcom/mojang/brigadier/CommandDispatcher;");
    }

    static jobject getDispatcher(const jobject& obj) {
                
       const auto methodID = methodID_getDispatcher();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_throwException() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validateParseResults", "method_54312", "throwException", "m_307768_"), "(Lcom/mojang/brigadier/ParseResults;)V");
    }

    static void throwException(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_throwException();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getException() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getParseException", "method_23917", "getException", "m_82097_"), "(Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;");
    }

    static jobject getException(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getException();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createRegistryAccess() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createValidationContext", "method_46732", "createRegistryAccess", "m_255082_"), "(Ljo$a;)Lep;");
    }

    static jobject createRegistryAccess(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createRegistryAccess();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_checkMissing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "validate", "method_30852", "checkMissing", "m_82138_"), "()V");
    }

    static void checkMissing() {
       const auto clazz = self();
       const auto methodID = methodID_checkMissing();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_COMMANDMANAGER_HPP