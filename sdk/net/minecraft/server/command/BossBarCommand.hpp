// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_BOSSBARCOMMAND_HPP
#define NET_MINECRAFT_SERVER_COMMAND_BOSSBARCOMMAND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.BossBarCommand
 * Remapped: amd
 */
namespace BossBarCommand {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("amd", "net/minecraft/server/commands/BossBarCommands", "net/minecraft/class_3019", "net/minecraft/server/command/BossBarCommand", "net/minecraft/src/C_5301_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.command.BossBarCommand#CREATE_FAILED_EXCEPTION
    [[maybe_unused]] static jobject get_field_CREATE_FAILED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_ALREADY_EXISTS", "field_13478", "CREATE_FAILED_EXCEPTION", "f_136571_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.BossBarCommand#CREATE_FAILED_EXCEPTION
    [[maybe_unused]] static void set_field_CREATE_FAILED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_ALREADY_EXISTS", "field_13478", "CREATE_FAILED_EXCEPTION", "f_136571_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.BossBarCommand#UNKNOWN_EXCEPTION
    [[maybe_unused]] static jobject get_field_UNKNOWN_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_DOESNT_EXIST", "field_13486", "UNKNOWN_EXCEPTION", "f_136572_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.BossBarCommand#UNKNOWN_EXCEPTION
    [[maybe_unused]] static void set_field_UNKNOWN_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_DOESNT_EXIST", "field_13486", "UNKNOWN_EXCEPTION", "f_136572_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.BossBarCommand#SET_PLAYERS_UNCHANGED_EXCEPTION
    [[maybe_unused]] static jobject get_field_SET_PLAYERS_UNCHANGED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_NO_PLAYER_CHANGE", "field_13483", "SET_PLAYERS_UNCHANGED_EXCEPTION", "f_136573_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.BossBarCommand#SET_PLAYERS_UNCHANGED_EXCEPTION
    [[maybe_unused]] static void set_field_SET_PLAYERS_UNCHANGED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_NO_PLAYER_CHANGE", "field_13483", "SET_PLAYERS_UNCHANGED_EXCEPTION", "f_136573_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.BossBarCommand#SET_NAME_UNCHANGED_EXCEPTION
    [[maybe_unused]] static jobject get_field_SET_NAME_UNCHANGED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ERROR_NO_NAME_CHANGE", "field_13476", "SET_NAME_UNCHANGED_EXCEPTION", "f_136574_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.BossBarCommand#SET_NAME_UNCHANGED_EXCEPTION
    [[maybe_unused]] static void set_field_SET_NAME_UNCHANGED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ERROR_NO_NAME_CHANGE", "field_13476", "SET_NAME_UNCHANGED_EXCEPTION", "f_136574_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.BossBarCommand#SET_COLOR_UNCHANGED_EXCEPTION
    [[maybe_unused]] static jobject get_field_SET_COLOR_UNCHANGED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ERROR_NO_COLOR_CHANGE", "field_13480", "SET_COLOR_UNCHANGED_EXCEPTION", "f_136575_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.BossBarCommand#SET_COLOR_UNCHANGED_EXCEPTION
    [[maybe_unused]] static void set_field_SET_COLOR_UNCHANGED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ERROR_NO_COLOR_CHANGE", "field_13480", "SET_COLOR_UNCHANGED_EXCEPTION", "f_136575_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.BossBarCommand#SET_STYLE_UNCHANGED_EXCEPTION
    [[maybe_unused]] static jobject get_field_SET_STYLE_UNCHANGED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ERROR_NO_STYLE_CHANGE", "field_13481", "SET_STYLE_UNCHANGED_EXCEPTION", "f_136576_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.BossBarCommand#SET_STYLE_UNCHANGED_EXCEPTION
    [[maybe_unused]] static void set_field_SET_STYLE_UNCHANGED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ERROR_NO_STYLE_CHANGE", "field_13481", "SET_STYLE_UNCHANGED_EXCEPTION", "f_136576_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.BossBarCommand#SET_VALUE_UNCHANGED_EXCEPTION
    [[maybe_unused]] static jobject get_field_SET_VALUE_UNCHANGED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ERROR_NO_VALUE_CHANGE", "field_13477", "SET_VALUE_UNCHANGED_EXCEPTION", "f_136577_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.BossBarCommand#SET_VALUE_UNCHANGED_EXCEPTION
    [[maybe_unused]] static void set_field_SET_VALUE_UNCHANGED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ERROR_NO_VALUE_CHANGE", "field_13477", "SET_VALUE_UNCHANGED_EXCEPTION", "f_136577_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.BossBarCommand#SET_MAX_UNCHANGED_EXCEPTION
    [[maybe_unused]] static jobject get_field_SET_MAX_UNCHANGED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ERROR_NO_MAX_CHANGE", "field_13484", "SET_MAX_UNCHANGED_EXCEPTION", "f_136578_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.BossBarCommand#SET_MAX_UNCHANGED_EXCEPTION
    [[maybe_unused]] static void set_field_SET_MAX_UNCHANGED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ERROR_NO_MAX_CHANGE", "field_13484", "SET_MAX_UNCHANGED_EXCEPTION", "f_136578_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.BossBarCommand#SET_VISIBILITY_UNCHANGED_HIDDEN_EXCEPTION
    [[maybe_unused]] static jobject get_field_SET_VISIBILITY_UNCHANGED_HIDDEN_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ERROR_ALREADY_HIDDEN", "field_13479", "SET_VISIBILITY_UNCHANGED_HIDDEN_EXCEPTION", "f_136579_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.BossBarCommand#SET_VISIBILITY_UNCHANGED_HIDDEN_EXCEPTION
    [[maybe_unused]] static void set_field_SET_VISIBILITY_UNCHANGED_HIDDEN_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ERROR_ALREADY_HIDDEN", "field_13479", "SET_VISIBILITY_UNCHANGED_HIDDEN_EXCEPTION", "f_136579_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.BossBarCommand#SET_VISIBILITY_UNCHANGED_VISIBLE_EXCEPTION
    [[maybe_unused]] static jobject get_field_SET_VISIBILITY_UNCHANGED_VISIBLE_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ERROR_ALREADY_VISIBLE", "field_13485", "SET_VISIBILITY_UNCHANGED_VISIBLE_EXCEPTION", "f_136580_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.BossBarCommand#SET_VISIBILITY_UNCHANGED_VISIBLE_EXCEPTION
    [[maybe_unused]] static void set_field_SET_VISIBILITY_UNCHANGED_VISIBLE_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ERROR_ALREADY_VISIBLE", "field_13485", "SET_VISIBILITY_UNCHANGED_VISIBLE_EXCEPTION", "f_136580_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.command.BossBarCommand#SUGGESTION_PROVIDER
    [[maybe_unused]] static jobject get_field_SUGGESTION_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SUGGEST_BOSS_BAR", "field_13482", "SUGGESTION_PROVIDER", "f_136570_"), "Lcom/mojang/brigadier/suggestion/SuggestionProvider;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.command.BossBarCommand#SUGGESTION_PROVIDER
    [[maybe_unused]] static void set_field_SUGGESTION_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SUGGEST_BOSS_BAR", "field_13482", "SUGGESTION_PROVIDER", "f_136570_"), "Lcom/mojang/brigadier/suggestion/SuggestionProvider;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_13053", "register", "m_136582_"), "(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V");
    }

    static void register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getValue", "method_13065", "getValue", "m_136595_"), "(Let;Lals;)I");
    }

    static jint getValue(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getValue();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getMaxValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getMax", "method_13056", "getMaxValue", "m_136628_"), "(Let;Lals;)I");
    }

    static jint getMaxValue(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getMaxValue();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isVisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getVisible", "method_13041", "isVisible", "m_136639_"), "(Let;Lals;)I");
    }

    static jint isVisible(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isVisible();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getPlayers", "method_13030", "getPlayers", "m_136644_"), "(Let;Lals;)I");
    }

    static jint getPlayers(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getPlayers();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setVisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setVisible", "method_13068", "setVisible", "m_136618_"), "(Let;Lals;Z)I");
    }

    static jint setVisible(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_setVisible();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setValue", "method_13036", "setValue", "m_136598_"), "(Let;Lals;I)I");
    }

    static jint setValue(const jobject& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_setValue();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setMaxValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "setMax", "method_13066", "setMaxValue", "m_136631_"), "(Let;Lals;I)I");
    }

    static jint setMaxValue(const jobject& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_setMaxValue();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setColor", "method_13028", "setColor", "m_136602_"), "(Let;Lals;Lbqh$a;)I");
    }

    static jint setColor(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_setColor();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setStyle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setStyle", "method_13050", "setStyle", "m_136606_"), "(Let;Lals;Lbqh$b;)I");
    }

    static jint setStyle(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_setStyle();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setName", "method_13071", "setName", "m_136614_"), "(Let;Lals;Lwz;)I");
    }

    static jint setName(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_setName();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setPlayers", "method_13031", "setPlayers", "m_136610_"), "(Let;Lals;Ljava/util/Collection;)I");
    }

    static jint setPlayers(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_setPlayers();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_listBossBars() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "listBars", "method_13045", "listBossBars", "m_136589_"), "(Let;)I");
    }

    static jint listBossBars(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_listBossBars();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addBossBar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createBar", "method_13049", "addBossBar", "m_136591_"), "(Let;Lakr;Lwz;)I");
    }

    static jint addBossBar(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_addBossBar();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_removeBossBar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "removeBar", "method_13069", "removeBossBar", "m_136649_"), "(Let;Lals;)I");
    }

    static jint removeBossBar(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_removeBossBar();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBossBar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getBossBar", "method_13054", "getBossBar", "m_136584_"), "(Lcom/mojang/brigadier/context/CommandContext;)Lals;");
    }

    static jobject getBossBar(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getBossBar();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_BOSSBARCOMMAND_HPP