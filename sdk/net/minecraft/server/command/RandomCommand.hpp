// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_RANDOMCOMMAND_HPP
#define NET_MINECRAFT_SERVER_COMMAND_RANDOMCOMMAND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.RandomCommand
 * Remapped: anu
 */
namespace RandomCommand {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("anu", "net/minecraft/server/commands/RandomCommand", "net/minecraft/class_8602", "net/minecraft/server/command/RandomCommand", "net/minecraft/src/C_290118_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.command.RandomCommand#RANGE_TOO_LARGE_EXCEPTION
    [[maybe_unused]] static jobject get_field_RANGE_TOO_LARGE_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_RANGE_TOO_LARGE", "field_44983", "RANGE_TOO_LARGE_EXCEPTION", "f_290351_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.RandomCommand#RANGE_TOO_LARGE_EXCEPTION
    [[maybe_unused]] static void set_field_RANGE_TOO_LARGE_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_RANGE_TOO_LARGE", "field_44983", "RANGE_TOO_LARGE_EXCEPTION", "f_290351_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.RandomCommand#RANGE_TOO_SMALL_EXCEPTION
    [[maybe_unused]] static jobject get_field_RANGE_TOO_SMALL_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_RANGE_TOO_SMALL", "field_44984", "RANGE_TOO_SMALL_EXCEPTION", "f_291651_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.RandomCommand#RANGE_TOO_SMALL_EXCEPTION
    [[maybe_unused]] static void set_field_RANGE_TOO_SMALL_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_RANGE_TOO_SMALL", "field_44984", "RANGE_TOO_SMALL_EXCEPTION", "f_291651_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_52318", "register", "m_293091_"), "(Lcom/mojang/brigadier/CommandDispatcher;)V");
    }

    static void register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_random() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "drawRandomValueTree", "method_52326", "random", "m_294368_"), "(Ljava/lang/String;Z)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;");
    }

    static jobject random(const jobject& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_random();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_suggestSequences() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "suggestRandomSequence", "method_52320", "suggestSequences", "m_294242_"), "(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestSequences(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_suggestSequences();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_execute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "randomSample", "method_52325", "execute", "m_295741_"), "(Let;Ldh$d;Lakr;Z)I");
    }

    static jint execute(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_execute();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_executeReset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "resetSequence", "method_52323", "executeReset", "m_295473_"), "(Let;Lakr;)I");
    }

    static jint executeReset(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_executeReset();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__executeReset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "resetSequence", "method_52324", "executeReset", "m_294698_"), "(Let;Lakr;IZZ)I");
    }

    static jint _executeReset(const jobject& arg0, const jobject& arg1, const jint& arg2, const jboolean& arg3, const jboolean& arg4) {
       const auto clazz = self();
       const auto methodID = methodID__executeReset();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID___executeReset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "resetAllSequences", "method_52321", "executeReset", "m_293464_"), "(Let;)I");
    }

    static jint __executeReset(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID___executeReset();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID____executeReset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "resetAllSequencesAndSetNewDefaults", "method_52322", "executeReset", "m_295731_"), "(Let;IZZ)I");
    }

    static jint ___executeReset(const jobject& arg0, const jint& arg1, const jboolean& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID____executeReset();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_RANDOMCOMMAND_HPP