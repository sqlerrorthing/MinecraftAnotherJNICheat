// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_GAMEMODECOMMAND_HPP
#define NET_MINECRAFT_SERVER_COMMAND_GAMEMODECOMMAND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.GameModeCommand
 * Remapped: amz
 */
namespace GameModeCommand {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("amz", "net/minecraft/server/commands/GameModeCommand", "net/minecraft/class_3064", "net/minecraft/server/command/GameModeCommand", "net/minecraft/src/C_5335_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.server.command.GameModeCommand#REQUIRED_PERMISSION_LEVEL
    [[maybe_unused]] static jint get_field_REQUIRED_PERMISSION_LEVEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PERMISSION_LEVEL", "field_33393", "REQUIRED_PERMISSION_LEVEL", "f_180230_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.command.GameModeCommand#REQUIRED_PERMISSION_LEVEL
    [[maybe_unused]] static void set_field_REQUIRED_PERMISSION_LEVEL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PERMISSION_LEVEL", "field_33393", "REQUIRED_PERMISSION_LEVEL", "f_180230_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_13388", "register", "m_137729_"), "(Lcom/mojang/brigadier/CommandDispatcher;)V");
    }

    static void register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_sendFeedback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "logGamemodeChange", "method_13390", "sendFeedback", "m_137737_"), "(Let;Laqv;Ldct;)V");
    }

    static void sendFeedback(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_sendFeedback();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_execute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setMode", "method_13387", "execute", "m_137731_"), "(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Ldct;)I");
    }

    static jint execute(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_execute();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_GAMEMODECOMMAND_HPP