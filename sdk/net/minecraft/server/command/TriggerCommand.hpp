// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_TRIGGERCOMMAND_HPP
#define NET_MINECRAFT_SERVER_COMMAND_TRIGGERCOMMAND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.TriggerCommand
 * Remapped: apa
 */
namespace TriggerCommand {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("apa", "net/minecraft/server/commands/TriggerCommand", "net/minecraft/class_3153", "net/minecraft/server/command/TriggerCommand", "net/minecraft/src/C_5389_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.command.TriggerCommand#FAILED_UNPRIMED_EXCEPTION
    [[maybe_unused]] static jobject get_field_FAILED_UNPRIMED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_NOT_PRIMED", "field_13763", "FAILED_UNPRIMED_EXCEPTION", "f_139135_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TriggerCommand#FAILED_UNPRIMED_EXCEPTION
    [[maybe_unused]] static void set_field_FAILED_UNPRIMED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_NOT_PRIMED", "field_13763", "FAILED_UNPRIMED_EXCEPTION", "f_139135_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.TriggerCommand#FAILED_INVALID_EXCEPTION
    [[maybe_unused]] static jobject get_field_FAILED_INVALID_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_INVALID_OBJECTIVE", "field_13764", "FAILED_INVALID_EXCEPTION", "f_139136_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TriggerCommand#FAILED_INVALID_EXCEPTION
    [[maybe_unused]] static void set_field_FAILED_INVALID_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_INVALID_OBJECTIVE", "field_13764", "FAILED_INVALID_EXCEPTION", "f_139136_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_13813", "register", "m_139141_"), "(Lcom/mojang/brigadier/CommandDispatcher;)V");
    }

    static void register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_suggestObjectives() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "suggestObjectives", "method_13819", "suggestObjectives", "m_139148_"), "(Let;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject suggestObjectives(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_suggestObjectives();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_executeAdd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addValue", "method_13817", "executeAdd", "m_139154_"), "(Let;Laqv;Lexy;I)I");
    }

    static jint executeAdd(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_executeAdd();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_executeSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "setValue", "method_13820", "executeSet", "m_139160_"), "(Let;Laqv;Lexy;I)I");
    }

    static jint executeSet(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_executeSet();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_executeSimple() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "simpleTrigger", "method_13818", "executeSimple", "m_139151_"), "(Let;Laqv;Lexy;)I");
    }

    static jint executeSimple(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_executeSimple();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getScore", "method_13821", "getScore", "m_139138_"), "(Leyg;Leyf;Lexy;)Leye;");
    }

    static jobject getScore(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getScore();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_TRIGGERCOMMAND_HPP