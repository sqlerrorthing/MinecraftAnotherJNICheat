// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_TAGCOMMAND_HPP
#define NET_MINECRAFT_SERVER_COMMAND_TAGCOMMAND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.TagCommand
 * Remapped: aor
 */
namespace TagCommand {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aor", "net/minecraft/server/commands/TagCommand", "net/minecraft/class_3140", "net/minecraft/server/command/TagCommand", "net/minecraft/src/C_5381_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.command.TagCommand#ADD_FAILED_EXCEPTION
    [[maybe_unused]] static jobject get_field_ADD_FAILED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_ADD_FAILED", "field_13742", "ADD_FAILED_EXCEPTION", "f_138833_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TagCommand#ADD_FAILED_EXCEPTION
    [[maybe_unused]] static void set_field_ADD_FAILED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_ADD_FAILED", "field_13742", "ADD_FAILED_EXCEPTION", "f_138833_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.TagCommand#REMOVE_FAILED_EXCEPTION
    [[maybe_unused]] static jobject get_field_REMOVE_FAILED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_REMOVE_FAILED", "field_13743", "REMOVE_FAILED_EXCEPTION", "f_138834_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TagCommand#REMOVE_FAILED_EXCEPTION
    [[maybe_unused]] static void set_field_REMOVE_FAILED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_REMOVE_FAILED", "field_13743", "REMOVE_FAILED_EXCEPTION", "f_138834_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_13698", "register", "m_138836_"), "(Lcom/mojang/brigadier/CommandDispatcher;)V");
    }

    static void register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getTags", "method_13706", "getTags", "m_138852_"), "(Ljava/util/Collection;)Ljava/util/Collection;");
    }

    static jobject getTags(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getTags();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_executeAdd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addTag", "method_13702", "executeAdd", "m_138848_"), "(Let;Ljava/util/Collection;Ljava/lang/String;)I");
    }

    static jint executeAdd(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_executeAdd();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_executeRemove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "removeTag", "method_13699", "executeRemove", "m_138856_"), "(Let;Ljava/util/Collection;Ljava/lang/String;)I");
    }

    static jint executeRemove(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_executeRemove();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_executeList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "listTags", "method_13700", "executeList", "m_138845_"), "(Let;Ljava/util/Collection;)I");
    }

    static jint executeList(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_executeList();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_TAGCOMMAND_HPP