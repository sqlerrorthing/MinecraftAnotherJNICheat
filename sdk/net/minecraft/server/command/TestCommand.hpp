// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_TESTCOMMAND_HPP
#define NET_MINECRAFT_SERVER_COMMAND_TESTCOMMAND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.TestCommand
 * Remapped: tp
 */
namespace TestCommand {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("tp", "net/minecraft/gametest/framework/TestCommand", "net/minecraft/class_4527", "net/minecraft/server/command/TestCommand", "net/minecraft/src/C_4902_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.server.command.TestCommand#field_33180
    [[maybe_unused]] static jint get_field_field_33180() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS", "field_33180", "field_33180", "f_177788_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.command.TestCommand#field_33180
    [[maybe_unused]] static void set_field_field_33180(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS", "field_33180", "field_33180", "f_177788_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.command.TestCommand#field_33181
    [[maybe_unused]] static jint get_field_field_33181() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STRUCTURE_BLOCK_FULL_SEARCH_RADIUS", "field_33181", "field_33181", "f_177789_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.command.TestCommand#field_33181
    [[maybe_unused]] static void set_field_field_33181(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STRUCTURE_BLOCK_FULL_SEARCH_RADIUS", "field_33181", "field_33181", "f_177789_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.TestCommand#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOGGER", "field_45665", "LOGGER", "f_291298_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TestCommand#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOGGER", "field_45665", "LOGGER", "f_291298_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.TestCommand#field_33178
    [[maybe_unused]] static jint get_field_field_33178() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_CLEAR_RADIUS", "field_33178", "field_33178", "f_177786_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TestCommand#field_33178
    [[maybe_unused]] static void set_field_field_33178(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_CLEAR_RADIUS", "field_33178", "field_33178", "f_177786_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.TestCommand#field_33179
    [[maybe_unused]] static jint get_field_field_33179() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAX_CLEAR_RADIUS", "field_33179", "field_33179", "f_177787_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TestCommand#field_33179
    [[maybe_unused]] static void set_field_field_33179(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAX_CLEAR_RADIUS", "field_33179", "field_33179", "f_177787_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.TestCommand#field_33182
    [[maybe_unused]] static jint get_field_field_33182() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TEST_POS_Z_OFFSET_FROM_PLAYER", "field_33182", "field_33182", "f_177790_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TestCommand#field_33182
    [[maybe_unused]] static void set_field_field_33182(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TEST_POS_Z_OFFSET_FROM_PLAYER", "field_33182", "field_33182", "f_177790_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.TestCommand#field_33183
    [[maybe_unused]] static jint get_field_field_33183() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SHOW_POS_DURATION_MS", "field_33183", "field_33183", "f_177791_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TestCommand#field_33183
    [[maybe_unused]] static void set_field_field_33183(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SHOW_POS_DURATION_MS", "field_33183", "field_33183", "f_177791_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.TestCommand#field_33184
    [[maybe_unused]] static jint get_field_field_33184() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DEFAULT_X_SIZE", "field_33184", "field_33184", "f_177792_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TestCommand#field_33184
    [[maybe_unused]] static void set_field_field_33184(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DEFAULT_X_SIZE", "field_33184", "field_33184", "f_177792_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.TestCommand#field_33185
    [[maybe_unused]] static jint get_field_field_33185() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DEFAULT_Y_SIZE", "field_33185", "field_33185", "f_177793_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TestCommand#field_33185
    [[maybe_unused]] static void set_field_field_33185(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DEFAULT_Y_SIZE", "field_33185", "field_33185", "f_177793_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.TestCommand#field_33186
    [[maybe_unused]] static jint get_field_field_33186() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DEFAULT_Z_SIZE", "field_33186", "field_33186", "f_177794_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TestCommand#field_33186
    [[maybe_unused]] static void set_field_field_33186(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DEFAULT_Z_SIZE", "field_33186", "field_33186", "f_177794_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.TestCommand#BLOCK_ENTITY_NOT_FOUND_TEXT
    [[maybe_unused]] static jobject get_field_BLOCK_ENTITY_NOT_FOUND_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "STRUCTURE_BLOCK_ENTITY_COULD_NOT_BE_FOUND", "field_48504", "BLOCK_ENTITY_NOT_FOUND_TEXT", "f_316045_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TestCommand#BLOCK_ENTITY_NOT_FOUND_TEXT
    [[maybe_unused]] static void set_field_BLOCK_ENTITY_NOT_FOUND_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "STRUCTURE_BLOCK_ENTITY_COULD_NOT_BE_FOUND", "field_48504", "BLOCK_ENTITY_NOT_FOUND_TEXT", "f_316045_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.TestCommand#RUNNERS
    [[maybe_unused]] static jobject get_field_RUNNERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "testFinder", "field_48505", "RUNNERS", "f_316814_"), "Ltq$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TestCommand#RUNNERS
    [[maybe_unused]] static void set_field_RUNNERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "testFinder", "field_48505", "RUNNERS", "f_316814_"), "Ltq$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_testAttemptConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "runWithRetryOptions", "method_56258", "testAttemptConfig", "m_319788_"), "(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;");
    }

    static jobject testAttemptConfig(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_testAttemptConfig();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__testAttemptConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "runWithRetryOptions", "method_56257", "testAttemptConfig", "m_324887_"), "(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;");
    }

    static jobject _testAttemptConfig(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__testAttemptConfig();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_testAttemptAndPlacementConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "runWithRetryOptionsAndBuildInfo", "method_56268", "testAttemptAndPlacementConfig", "m_322812_"), "(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;");
    }

    static jobject testAttemptAndPlacementConfig(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_testAttemptAndPlacementConfig();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_22270", "register", "m_127946_"), "(Lcom/mojang/brigadier/CommandDispatcher;)V");
    }

    static void register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_reset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "resetGameTestInfo", "method_56267", "reset", "m_324923_"), "(Lsx;)I");
    }

    static jint reset(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_reset();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_stream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "toGameTestInfos", "method_56261", "stream", "m_322751_"), "(Let;Ltk;Ltl;)Ljava/util/stream/Stream;");
    }

    static jobject stream(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_stream();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__stream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "toGameTestInfo", "method_56262", "stream", "m_325000_"), "(Let;Ltk;Ltt;I)Ljava/util/stream/Stream;");
    }

    static jobject _stream(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__stream();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_find() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createGameTestInfo", "method_56264", "find", "m_324715_"), "(Ljd;Laqu;Ltk;)Ljava/util/Optional;");
    }

    static jobject find(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_find();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_executeCreate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createNewStructure", "method_22268", "executeCreate", "m_127967_"), "(Let;Ljava/lang/String;III)I");
    }

    static jint executeCreate(const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_executeCreate();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_executePos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "showPos", "method_22264", "executePos", "m_127959_"), "(Let;Ljava/lang/String;)I");
    }

    static jint executePos(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_executePos();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_stop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stopTests", "method_56254", "stop", "m_320848_"), "()I");
    }

    static jint stop() {
       const auto clazz = self();
       const auto methodID = methodID_stop();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID_start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "trackAndStartRunner", "method_56259", "start", "m_324481_"), "(Let;Laqu;Lta;)I");
    }

    static jint start(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_start();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_export() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "saveAndExportTestStructure", "method_54905", "export", "m_306022_"), "(Let;Ldrx;)I");
    }

    static jint export(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_export();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_executeExport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "exportTestStructure", "method_22282", "executeExport", "m_128010_"), "(Let;Ljava/lang/String;)I");
    }

    static jint executeExport(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_executeExport();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_checkStructure() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "verifyStructureExists", "method_54904", "checkStructure", "m_306765_"), "(Laqu;Ljava/lang/String;)Z");
    }

    static jboolean checkStructure(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_checkStructure();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getStructurePos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createTestPositionAround", "method_54850", "getStructurePos", "m_307920_"), "(Let;)Ljd;");
    }

    static jobject getStructurePos(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getStructurePos();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_sendMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "say", "method_22278", "sendMessage", "m_128003_"), "(Let;Ljava/lang/String;)V");
    }

    static void sendMessage(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_sendMessage();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_executeImport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "importTestStructure", "method_22285", "executeImport", "m_128015_"), "(Let;Ljava/lang/String;)I");
    }

    static jint executeImport(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_executeImport();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__sendMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "say", "method_22275", "sendMessage", "m_127933_"), "(Laqu;Ljava/lang/String;Ln;)V");
    }

    static void _sendMessage(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__sendMessage();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_TESTCOMMAND_HPP