// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_GIVECOMMAND_HPP
#define NET_MINECRAFT_SERVER_COMMAND_GIVECOMMAND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.GiveCommand
 * Remapped: anb
 */
namespace GiveCommand {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("anb", "net/minecraft/server/commands/GiveCommand", "net/minecraft/class_3068", "net/minecraft/server/command/GiveCommand", "net/minecraft/src/C_5338_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.server.command.GiveCommand#MAX_STACKS
    [[maybe_unused]] static jint get_field_MAX_STACKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_ALLOWED_ITEMSTACKS", "field_33394", "MAX_STACKS", "f_180233_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.command.GiveCommand#MAX_STACKS
    [[maybe_unused]] static void set_field_MAX_STACKS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_ALLOWED_ITEMSTACKS", "field_33394", "MAX_STACKS", "f_180233_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_13402", "register", "m_214445_"), "(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V");
    }

    static void register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_execute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "giveItem", "method_13401", "execute", "m_137778_"), "(Let;Lhd;Ljava/util/Collection;I)I");
    }

    static jint execute(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_execute();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_GIVECOMMAND_HPP