// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_SPREADPLAYERSCOMMAND$PILE_HPP
#define NET_MINECRAFT_SERVER_COMMAND_SPREADPLAYERSCOMMAND$PILE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.SpreadPlayersCommand$Pile
 * Remapped: aon$a
 */
namespace SpreadPlayersCommand$Pile {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aon$a", "net/minecraft/server/commands/SpreadPlayersCommand$Position", "net/minecraft/class_3131$class_3132", "net/minecraft/server/command/SpreadPlayersCommand$Pile", "net/minecraft/src/C_5376_$C_5377_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.server.command.SpreadPlayersCommand$Pile#x
    static jdouble get_field_x(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "x", "field_13737", "x", "f_138749_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.command.SpreadPlayersCommand$Pile#x
    static void set_field_x(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "x", "field_13737", "x", "f_138749_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.server.command.SpreadPlayersCommand$Pile#z
    static jdouble get_field_z(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "z", "field_13736", "z", "f_138750_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.command.SpreadPlayersCommand$Pile#z
    static void set_field_z(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "z", "field_13736", "z", "f_138750_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    static jmethodID methodID_getDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dist", "method_13665", "getDistance", "m_138767_"), "(Laon$a;)D");
    }

    static jdouble getDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDistance();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_normalize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "normalize", "method_13671", "normalize", "m_138752_"), "()V");
    }

    static void normalize(const jobject& obj) {
                
       const auto methodID = methodID_normalize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_absolute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getLength", "method_13668", "absolute", "m_180525_"), "()D");
    }

    static jdouble absolute(const jobject& obj) {
                
       const auto methodID = methodID_absolute();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_subtract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "moveAway", "method_13670", "subtract", "m_138776_"), "(Laon$a;)V");
    }

    static void subtract(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_subtract();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clamp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clamp", "method_13666", "clamp", "m_138753_"), "(DDDD)Z");
    }

    static jboolean clamp(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
                
       const auto methodID = methodID_clamp();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpawnY", "method_13669", "getY", "m_138758_"), "(Ldcc;I)I");
    }

    static jint getY(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_getY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isSafe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isSafe", "method_13662", "isSafe", "m_138773_"), "(Ldcc;I)Z");
    }

    static jboolean isSafe(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_isSafe();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setPileLocation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "randomize", "method_13667", "setPileLocation", "m_214752_"), "(Layw;DDDD)V");
    }

    static void setPileLocation(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_setPileLocation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_SPREADPLAYERSCOMMAND$PILE_HPP