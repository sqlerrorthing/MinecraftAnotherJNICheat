// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_CLONECOMMAND_HPP
#define NET_MINECRAFT_SERVER_COMMAND_CLONECOMMAND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.CloneCommand
 * Remapped: amg
 */
namespace CloneCommand {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("amg", "net/minecraft/server/commands/CloneCommands", "net/minecraft/class_3023", "net/minecraft/server/command/CloneCommand", "net/minecraft/src/C_5303_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.command.CloneCommand#OVERLAP_EXCEPTION
    [[maybe_unused]] static jobject get_field_OVERLAP_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_OVERLAP", "field_13493", "OVERLAP_EXCEPTION", "f_136723_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.CloneCommand#OVERLAP_EXCEPTION
    [[maybe_unused]] static void set_field_OVERLAP_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_OVERLAP", "field_13493", "OVERLAP_EXCEPTION", "f_136723_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.CloneCommand#TOO_BIG_EXCEPTION
    [[maybe_unused]] static jobject get_field_TOO_BIG_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_AREA_TOO_LARGE", "field_13491", "TOO_BIG_EXCEPTION", "f_136724_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.CloneCommand#TOO_BIG_EXCEPTION
    [[maybe_unused]] static void set_field_TOO_BIG_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_AREA_TOO_LARGE", "field_13491", "TOO_BIG_EXCEPTION", "f_136724_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.CloneCommand#FAILED_EXCEPTION
    [[maybe_unused]] static jobject get_field_FAILED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_FAILED", "field_13492", "FAILED_EXCEPTION", "f_136725_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.CloneCommand#FAILED_EXCEPTION
    [[maybe_unused]] static void set_field_FAILED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_FAILED", "field_13492", "FAILED_EXCEPTION", "f_136725_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.command.CloneCommand#IS_AIR_PREDICATE
    [[maybe_unused]] static jobject get_field_IS_AIR_PREDICATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FILTER_AIR", "field_13490", "IS_AIR_PREDICATE", "f_136722_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.command.CloneCommand#IS_AIR_PREDICATE
    [[maybe_unused]] static void set_field_IS_AIR_PREDICATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FILTER_AIR", "field_13490", "IS_AIR_PREDICATE", "f_136722_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_13089", "register", "m_214423_"), "(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V");
    }

    static void register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createSourceArgs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "beginEndDestinationAndModeSuffix", "method_48042", "createSourceArgs", "m_264501_"), "(Lep;Lamg$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;");
    }

    static jobject createSourceArgs(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createSourceArgs();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createDimensionalPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getLoadedDimensionAndPosition", "method_48040", "createDimensionalPos", "m_264576_"), "(Lcom/mojang/brigadier/context/CommandContext;Laqu;Ljava/lang/String;)Lamg$d;");
    }

    static jobject createDimensionalPos(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createDimensionalPos();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createDestinationArgs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "destinationAndModeSuffix", "method_48043", "createDestinationArgs", "m_264459_"), "(Lep;Lamg$c;Lamg$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;");
    }

    static jobject createDestinationArgs(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createDestinationArgs();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createModeArgs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "wrapWithCloneMode", "method_48035", "createModeArgs", "m_264123_"), "(Lamg$c;Lamg$c;Lamg$c;Lamg$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;");
    }

    static jobject createModeArgs(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_createModeArgs();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_execute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "clone", "method_13090", "execute", "m_264087_"), "(Let;Lamg$d;Lamg$d;Lamg$d;Ljava/util/function/Predicate;Lamg$e;)I");
    }

    static jint execute(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_execute();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_CLONECOMMAND_HPP