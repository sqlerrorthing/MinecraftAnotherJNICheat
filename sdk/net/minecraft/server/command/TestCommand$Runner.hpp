// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_TESTCOMMAND$RUNNER_HPP
#define NET_MINECRAFT_SERVER_COMMAND_TESTCOMMAND$RUNNER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.TestCommand$Runner
 * Remapped: tp$a
 */
namespace TestCommand$Runner {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("tp$a", "net/minecraft/gametest/framework/TestCommand$Runner", "net/minecraft/class_4527$class_9121", "net/minecraft/server/command/TestCommand$Runner", "net/minecraft/src/C_4902_$C_313851_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.command.TestCommand$Runner#finder
    static jobject get_field_finder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "finder", "field_48506", "finder", "f_314747_"), "Ltq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.command.TestCommand$Runner#finder
    static void set_field_finder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "finder", "field_48506", "finder", "f_314747_"), "Ltq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_reset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "reset", "method_56288", "reset", "m_324404_"), "()I");
    }

    static jint reset(const jobject& obj) {
                
       const auto methodID = methodID_reset();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_forEach() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "logAndRun", "method_56295", "forEach", "m_321203_"), "(Ljava/util/stream/Stream;Ljava/util/function/ToIntFunction;Ljava/lang/Runnable;Ljava/util/function/Consumer;)V");
    }

    static void forEach(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_forEach();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "clear", "method_56299", "clear", "m_321437_"), "()I");
    }

    static jint clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_export() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "export", "method_56302", "export", "m_318776_"), "()I");
    }

    static jint export(const jobject& obj) {
                
       const auto methodID = methodID_export();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_verify() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "verify", "method_61104", "verify", "m_340635_"), "()I");
    }

    static jint verify(const jobject& obj) {
                
       const auto methodID = methodID_verify();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "run", "method_56298", "start", "m_322161_"), "(Ltk;II)I");
    }

    static jint start(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_start();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_runOnce() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "run", "method_56290", "runOnce", "m_320717_"), "(II)I");
    }

    static jint runOnce(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_runOnce();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__runOnce() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "run", "method_56289", "runOnce", "m_324466_"), "(I)I");
    }

    static jint _runOnce(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__runOnce();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "run", "method_56297", "run", "m_324097_"), "(Ltk;I)I");
    }

    static jint run(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_run();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "run", "method_56296", "run", "m_324651_"), "(Ltk;)I");
    }

    static jint _run(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__run();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___runOnce() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "run", "method_56303", "runOnce", "m_322798_"), "()I");
    }

    static jint __runOnce(const jobject& obj) {
                
       const auto methodID = methodID___runOnce();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_locate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "locate", "method_59790", "locate", "m_324809_"), "()I");
    }

    static jint locate(const jobject& obj) {
                
       const auto methodID = methodID_locate();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_TESTCOMMAND$RUNNER_HPP