// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_COMMAND_ENCHANTCOMMAND_HPP
#define NET_MINECRAFT_SERVER_COMMAND_ENCHANTCOMMAND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.command.EnchantCommand
 * Remapped: ams
 */
namespace EnchantCommand {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ams", "net/minecraft/server/commands/EnchantCommand", "net/minecraft/class_3048", "net/minecraft/server/command/EnchantCommand", "net/minecraft/src/C_5314_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.command.EnchantCommand#FAILED_ENTITY_EXCEPTION
    [[maybe_unused]] static jobject get_field_FAILED_ENTITY_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_NOT_LIVING_ENTITY", "field_13629", "FAILED_ENTITY_EXCEPTION", "f_137002_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.EnchantCommand#FAILED_ENTITY_EXCEPTION
    [[maybe_unused]] static void set_field_FAILED_ENTITY_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_NOT_LIVING_ENTITY", "field_13629", "FAILED_ENTITY_EXCEPTION", "f_137002_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.EnchantCommand#FAILED_ITEMLESS_EXCEPTION
    [[maybe_unused]] static jobject get_field_FAILED_ITEMLESS_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_NO_ITEM", "field_13631", "FAILED_ITEMLESS_EXCEPTION", "f_137003_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.EnchantCommand#FAILED_ITEMLESS_EXCEPTION
    [[maybe_unused]] static void set_field_FAILED_ITEMLESS_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ERROR_NO_ITEM", "field_13631", "FAILED_ITEMLESS_EXCEPTION", "f_137003_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.EnchantCommand#FAILED_INCOMPATIBLE_EXCEPTION
    [[maybe_unused]] static jobject get_field_FAILED_INCOMPATIBLE_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_INCOMPATIBLE", "field_13633", "FAILED_INCOMPATIBLE_EXCEPTION", "f_137004_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.EnchantCommand#FAILED_INCOMPATIBLE_EXCEPTION
    [[maybe_unused]] static void set_field_FAILED_INCOMPATIBLE_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_INCOMPATIBLE", "field_13633", "FAILED_INCOMPATIBLE_EXCEPTION", "f_137004_"), "Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.EnchantCommand#FAILED_LEVEL_EXCEPTION
    [[maybe_unused]] static jobject get_field_FAILED_LEVEL_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_LEVEL_TOO_HIGH", "field_13632", "FAILED_LEVEL_EXCEPTION", "f_137005_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.EnchantCommand#FAILED_LEVEL_EXCEPTION
    [[maybe_unused]] static void set_field_FAILED_LEVEL_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ERROR_LEVEL_TOO_HIGH", "field_13632", "FAILED_LEVEL_EXCEPTION", "f_137005_"), "Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.command.EnchantCommand#FAILED_EXCEPTION
    [[maybe_unused]] static jobject get_field_FAILED_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ERROR_NOTHING_HAPPENED", "field_13630", "FAILED_EXCEPTION", "f_137006_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.command.EnchantCommand#FAILED_EXCEPTION
    [[maybe_unused]] static void set_field_FAILED_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ERROR_NOTHING_HAPPENED", "field_13630", "FAILED_EXCEPTION", "f_137006_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_13243", "register", "m_245923_"), "(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V");
    }

    static void register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_execute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "enchant", "method_13241", "execute", "m_246270_"), "(Let;Ljava/util/Collection;Ljm;I)I");
    }

    static jint execute(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_execute();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_SERVER_COMMAND_ENCHANTCOMMAND_HPP