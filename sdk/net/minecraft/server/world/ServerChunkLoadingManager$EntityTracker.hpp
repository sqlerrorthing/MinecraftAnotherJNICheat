// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_WORLD_SERVERCHUNKLOADINGMANAGER$ENTITYTRACKER_HPP
#define NET_MINECRAFT_SERVER_WORLD_SERVERCHUNKLOADINGMANAGER$ENTITYTRACKER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.world.ServerChunkLoadingManager$EntityTracker
 * Remapped: aqb$b
 */
namespace ServerChunkLoadingManager$EntityTracker {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqb$b", "net/minecraft/server/level/ChunkMap$TrackedEntity", "net/minecraft/class_3898$class_3208", "net/minecraft/server/world/ServerChunkLoadingManager$EntityTracker", "net/minecraft/src/C_5429_$C_5433_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.server.world.ServerChunkLoadingManager$EntityTracker#entry
    static jobject get_field_entry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "serverEntity", "field_18246", "entry", "f_140471_"), "Laqt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerChunkLoadingManager$EntityTracker#entry
    static void set_field_entry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "serverEntity", "field_18246", "entry", "f_140471_"), "Laqt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.server.world.ServerChunkLoadingManager$EntityTracker#entity
    static jobject get_field_entity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "entity", "field_18247", "entity", "f_140472_"), "Lbsr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerChunkLoadingManager$EntityTracker#entity
    static void set_field_entity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "entity", "field_18247", "entity", "f_140472_"), "Lbsr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerChunkLoadingManager$EntityTracker#maxDistance
    static jint get_field_maxDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "range", "field_18248", "maxDistance", "f_140473_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerChunkLoadingManager$EntityTracker#maxDistance
    static void set_field_maxDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "range", "field_18248", "maxDistance", "f_140473_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.server.world.ServerChunkLoadingManager$EntityTracker#trackedSection
    static jobject get_field_trackedSection(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "lastSectionPos", "field_18249", "trackedSection", "f_140474_"), "Lkf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerChunkLoadingManager$EntityTracker#trackedSection
    static void set_field_trackedSection(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "lastSectionPos", "field_18249", "trackedSection", "f_140474_"), "Lkf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerChunkLoadingManager$EntityTracker#listeners
    static jobject get_field_listeners(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "seenBy", "field_18250", "listeners", "f_140475_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerChunkLoadingManager$EntityTracker#listeners
    static void set_field_listeners(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "seenBy", "field_18250", "listeners", "f_140475_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_sendToOtherNearbyPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "broadcast", "method_18730", "sendToOtherNearbyPlayers", "m_140489_"), "(Lzg;)V");
    }

    static void sendToOtherNearbyPlayers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendToOtherNearbyPlayers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendToNearbyPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "broadcastAndSend", "method_18734", "sendToNearbyPlayers", "m_140499_"), "(Lzg;)V");
    }

    static void sendToNearbyPlayers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendToNearbyPlayers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopTracking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "broadcastRemoved", "method_18728", "stopTracking", "m_140482_"), "()V");
    }

    static void stopTracking(const jobject& obj) {
                
       const auto methodID = methodID_stopTracking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__stopTracking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removePlayer", "method_18733", "stopTracking", "m_140485_"), "(Laqv;)V");
    }

    static void _stopTracking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__stopTracking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateTrackedStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updatePlayer", "method_18736", "updateTrackedStatus", "m_140497_"), "(Laqv;)V");
    }

    static void updateTrackedStatus(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateTrackedStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_adjustTrackingDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "scaledRange", "method_27906", "adjustTrackingDistance", "m_140483_"), "(I)I");
    }

    static jint adjustTrackingDistance(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_adjustTrackingDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMaxTrackDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getEffectiveRange", "method_22844", "getMaxTrackDistance", "m_140496_"), "()I");
    }

    static jint getMaxTrackDistance(const jobject& obj) {
                
       const auto methodID = methodID_getMaxTrackDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__updateTrackedStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updatePlayers", "method_18729", "updateTrackedStatus", "m_140487_"), "(Ljava/util/List;)V");
    }

    static void _updateTrackedStatus(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__updateTrackedStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_WORLD_SERVERCHUNKLOADINGMANAGER$ENTITYTRACKER_HPP