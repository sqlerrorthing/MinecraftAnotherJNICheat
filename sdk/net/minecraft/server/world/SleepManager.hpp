// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_WORLD_SLEEPMANAGER_HPP
#define NET_MINECRAFT_SERVER_WORLD_SLEEPMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.world.SleepManager
 * Remapped: auu
 */
namespace SleepManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("auu", "net/minecraft/server/players/SleepStatus", "net/minecraft/class_5838", "net/minecraft/server/world/SleepManager", "net/minecraft/src/C_140976_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.world.SleepManager#total
    static jint get_field_total(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "activePlayers", "field_28866", "total", "f_143998_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.SleepManager#total
    static void set_field_total(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "activePlayers", "field_28866", "total", "f_143998_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.SleepManager#sleeping
    static jint get_field_sleeping(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "sleepingPlayers", "field_28867", "sleeping", "f_143999_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.SleepManager#sleeping
    static void set_field_sleeping(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "sleepingPlayers", "field_28867", "sleeping", "f_143999_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_canSkipNight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "areEnoughSleeping", "method_33812", "canSkipNight", "m_144002_"), "(I)Z");
    }

    static jboolean canSkipNight(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_canSkipNight();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canResetTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "areEnoughDeepSleeping", "method_33813", "canResetTime", "m_144004_"), "(ILjava/util/List;)Z");
    }

    static jboolean canResetTime(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canResetTime();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getNightSkippingRequirement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "sleepersNeeded", "method_33816", "getNightSkippingRequirement", "m_144010_"), "(I)I");
    }

    static jint getNightSkippingRequirement(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getNightSkippingRequirement();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clearSleeping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeAllSleepers", "method_33811", "clearSleeping", "m_144001_"), "()V");
    }

    static void clearSleeping(const jobject& obj) {
                
       const auto methodID = methodID_clearSleeping();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSleeping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "amountSleeping", "method_33815", "getSleeping", "m_144009_"), "()I");
    }

    static jint getSleeping(const jobject& obj) {
                
       const auto methodID = methodID_getSleeping();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "update", "method_33814", "update", "m_144007_"), "(Ljava/util/List;)Z");
    }

    static jboolean update(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_update();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_WORLD_SLEEPMANAGER_HPP