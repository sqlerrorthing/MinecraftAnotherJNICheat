// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_WORLD_CHUNKTICKET_HPP
#define NET_MINECRAFT_SERVER_WORLD_CHUNKTICKET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.world.ChunkTicket
 * Remapped: aqy
 */
namespace ChunkTicket {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqy", "net/minecraft/server/level/Ticket", "net/minecraft/class_3228", "net/minecraft/server/world/ChunkTicket", "net/minecraft/src/C_17_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.world.ChunkTicket#type
    static jobject get_field_type(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "type", "field_14023", "type", "f_9420_"), "Laqz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ChunkTicket#type
    static void set_field_type(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "type", "field_14023", "type", "f_9420_"), "Laqz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ChunkTicket#level
    static jint get_field_level(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "ticketLevel", "field_14025", "level", "f_9421_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ChunkTicket#level
    static void set_field_level(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "ticketLevel", "field_14025", "level", "f_9421_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ChunkTicket#argument
    static jobject get_field_argument(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "key", "field_14022", "argument", "f_9422_"), "Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ChunkTicket#argument
    static void set_field_argument(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "key", "field_14022", "argument", "f_9422_"), "Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ChunkTicket#tickCreated
    static jlong get_field_tickCreated(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "createdTick", "field_14024", "tickCreated", "f_9423_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ChunkTicket#tickCreated
    static void set_field_tickCreated(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "createdTick", "field_14024", "tickCreated", "f_9423_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_compareTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "compareTo", "method_14285", "compareTo", "compareTo"), "(Laqy;)I");
    }

    static jint compareTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_compareTo();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getType", "method_14281", "getType", "m_9428_"), "()Laqz;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTicketLevel", "method_14283", "getLevel", "m_9433_"), "()I");
    }

    static jint getLevel(const jobject& obj) {
                
       const auto methodID = methodID_getLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setTickCreated() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCreatedTick", "method_23956", "setTickCreated", "m_9429_"), "(J)V");
    }

    static void setTickCreated(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_setTickCreated();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isExpired() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "timedOut", "method_20627", "isExpired", "m_9434_"), "(J)Z");
    }

    static jboolean isExpired(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_isExpired();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_WORLD_CHUNKTICKET_HPP