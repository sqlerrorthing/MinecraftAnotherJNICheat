// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_WORLD_SERVERWORLD_HPP
#define NET_MINECRAFT_SERVER_WORLD_SERVERWORLD_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.world.ServerWorld
 * Remapped: aqu
 */
namespace ServerWorld {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqu", "net/minecraft/server/level/ServerLevel", "net/minecraft/class_3218", "net/minecraft/server/world/ServerWorld", "net/minecraft/src/C_12_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.server.world.ServerWorld#END_SPAWN_POS
    [[maybe_unused]] static jobject get_field_END_SPAWN_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "END_SPAWN_POINT", "field_25144", "END_SPAWN_POS", "f_8562_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.world.ServerWorld#END_SPAWN_POS
    [[maybe_unused]] static void set_field_END_SPAWN_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "END_SPAWN_POINT", "field_25144", "END_SPAWN_POS", "f_8562_"), "Ljd;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.world.ServerWorld#CLEAR_WEATHER_DURATION_PROVIDER
    [[maybe_unused]] static jobject get_field_CLEAR_WEATHER_DURATION_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RAIN_DELAY", "field_41749", "CLEAR_WEATHER_DURATION_PROVIDER", "f_263704_"), "Lbpw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.world.ServerWorld#CLEAR_WEATHER_DURATION_PROVIDER
    [[maybe_unused]] static void set_field_CLEAR_WEATHER_DURATION_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RAIN_DELAY", "field_41749", "CLEAR_WEATHER_DURATION_PROVIDER", "f_263704_"), "Lbpw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.world.ServerWorld#RAIN_WEATHER_DURATION_PROVIDER
    [[maybe_unused]] static jobject get_field_RAIN_WEATHER_DURATION_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RAIN_DURATION", "field_41750", "RAIN_WEATHER_DURATION_PROVIDER", "f_263681_"), "Lbpw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.world.ServerWorld#RAIN_WEATHER_DURATION_PROVIDER
    [[maybe_unused]] static void set_field_RAIN_WEATHER_DURATION_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RAIN_DURATION", "field_41750", "RAIN_WEATHER_DURATION_PROVIDER", "f_263681_"), "Lbpw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.world.ServerWorld#CLEAR_THUNDER_WEATHER_DURATION_PROVIDER
    [[maybe_unused]] static jobject get_field_CLEAR_THUNDER_WEATHER_DURATION_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "THUNDER_DELAY", "field_41748", "CLEAR_THUNDER_WEATHER_DURATION_PROVIDER", "f_263684_"), "Lbpw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#CLEAR_THUNDER_WEATHER_DURATION_PROVIDER
    [[maybe_unused]] static void set_field_CLEAR_THUNDER_WEATHER_DURATION_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "THUNDER_DELAY", "field_41748", "CLEAR_THUNDER_WEATHER_DURATION_PROVIDER", "f_263684_"), "Lbpw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.world.ServerWorld#THUNDER_WEATHER_DURATION_PROVIDER
    [[maybe_unused]] static jobject get_field_THUNDER_WEATHER_DURATION_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "THUNDER_DURATION", "field_41751", "THUNDER_WEATHER_DURATION_PROVIDER", "f_263755_"), "Lbpw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.world.ServerWorld#THUNDER_WEATHER_DURATION_PROVIDER
    [[maybe_unused]] static void set_field_THUNDER_WEATHER_DURATION_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "THUNDER_DURATION", "field_41751", "THUNDER_WEATHER_DURATION_PROVIDER", "f_263755_"), "Lbpw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.world.ServerWorld#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "LOGGER", "field_13952", "LOGGER", "f_8566_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "LOGGER", "field_13952", "LOGGER", "f_8566_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.world.ServerWorld#SERVER_IDLE_COOLDOWN
    [[maybe_unused]] static jint get_field_SERVER_IDLE_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "EMPTY_TIME_NO_TICK", "field_29768", "SERVER_IDLE_COOLDOWN", "f_143242_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#SERVER_IDLE_COOLDOWN
    [[maybe_unused]] static void set_field_SERVER_IDLE_COOLDOWN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "EMPTY_TIME_NO_TICK", "field_29768", "SERVER_IDLE_COOLDOWN", "f_143242_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.world.ServerWorld#MAX_TICKS
    [[maybe_unused]] static jint get_field_MAX_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "MAX_SCHEDULED_TICKS_PER_TICK", "field_35441", "MAX_TICKS", "f_184046_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#MAX_TICKS
    [[maybe_unused]] static void set_field_MAX_TICKS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "MAX_SCHEDULED_TICKS_PER_TICK", "field_35441", "MAX_TICKS", "f_184046_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.server.world.ServerWorld#players
    static jobject get_field_players(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "players", "field_18261", "players", "f_8546_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerWorld#players
    static void set_field_players(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "players", "field_18261", "players", "f_8546_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#chunkManager
    static jobject get_field_chunkManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "chunkSource", "field_24624", "chunkManager", "f_8547_"), "Laqs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#chunkManager
    static void set_field_chunkManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "chunkSource", "field_24624", "chunkManager", "f_8547_"), "Laqs;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#server
    static jobject get_field_server(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "server", "field_13959", "server", "f_8548_"), "Lnet/minecraft/server/MinecraftServer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#server
    static void set_field_server(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "server", "field_13959", "server", "f_8548_"), "Lnet/minecraft/server/MinecraftServer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#worldProperties
    static jobject get_field_worldProperties(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "serverLevelData", "field_24456", "worldProperties", "f_8549_"), "Lerk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#worldProperties
    static void set_field_worldProperties(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "serverLevelData", "field_24456", "worldProperties", "f_8549_"), "Lerk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#spawnChunkRadius
    static jint get_field_spawnChunkRadius(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "lastSpawnChunkRadius", "field_48271", "spawnChunkRadius", "f_315190_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#spawnChunkRadius
    static void set_field_spawnChunkRadius(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "lastSpawnChunkRadius", "field_48271", "spawnChunkRadius", "f_315190_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.server.world.ServerWorld#entityList
    static jobject get_field_entityList(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "entityTickList", "field_26934", "entityList", "f_143243_"), "Ldxm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerWorld#entityList
    static void set_field_entityList(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "entityTickList", "field_26934", "entityList", "f_143243_"), "Ldxm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#entityManager
    static jobject get_field_entityManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "entityManager", "field_26935", "entityManager", "f_143244_"), "Ldxr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#entityManager
    static void set_field_entityManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "entityManager", "field_26935", "entityManager", "f_143244_"), "Ldxr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#gameEventDispatchManager
    static jobject get_field_gameEventDispatchManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "gameEventDispatcher", "field_39984", "gameEventDispatchManager", "f_243695_"), "Ldya;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#gameEventDispatchManager
    static void set_field_gameEventDispatchManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "gameEventDispatcher", "field_39984", "gameEventDispatchManager", "f_243695_"), "Ldya;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.server.world.ServerWorld#savingDisabled
    static jboolean get_field_savingDisabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "noSave", "field_13957", "savingDisabled", "f_8564_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.server.world.ServerWorld#savingDisabled
    static void set_field_savingDisabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "noSave", "field_13957", "savingDisabled", "f_8564_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#sleepManager
    static jobject get_field_sleepManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "sleepStatus", "field_28859", "sleepManager", "f_143245_"), "Lauu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#sleepManager
    static void set_field_sleepManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "sleepStatus", "field_28859", "sleepManager", "f_143245_"), "Lauu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#idleTimeout
    static jint get_field_idleTimeout(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "emptyTime", "field_13948", "idleTimeout", "f_8551_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#idleTimeout
    static void set_field_idleTimeout(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "emptyTime", "field_13948", "idleTimeout", "f_8551_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#portalForcer
    static jobject get_field_portalForcer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "portalForcer", "field_13956", "portalForcer", "f_8552_"), "Leqd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#portalForcer
    static void set_field_portalForcer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "portalForcer", "field_13956", "portalForcer", "f_8552_"), "Leqd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#blockTickScheduler
    static jobject get_field_blockTickScheduler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "blockTicks", "field_13949", "blockTickScheduler", "f_8553_"), "Leyq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#blockTickScheduler
    static void set_field_blockTickScheduler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "blockTicks", "field_13949", "blockTickScheduler", "f_8553_"), "Leyq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#fluidTickScheduler
    static jobject get_field_fluidTickScheduler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "fluidTicks", "field_13951", "fluidTickScheduler", "f_184047_"), "Leyq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#fluidTickScheduler
    static void set_field_fluidTickScheduler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "fluidTicks", "field_13951", "fluidTickScheduler", "f_184047_"), "Leyq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#pathNodeTypeCache
    static jobject get_field_pathNodeTypeCache(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "pathTypesByPosCache", "field_49172", "pathNodeTypeCache", "f_315437_"), "Lepw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#pathNodeTypeCache
    static void set_field_pathNodeTypeCache(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "pathTypesByPosCache", "field_49172", "pathNodeTypeCache", "f_315437_"), "Lepw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.server.world.ServerWorld#loadedMobs
    static jobject get_field_loadedMobs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "navigatingMobs", "field_26932", "loadedMobs", "f_143246_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerWorld#loadedMobs
    static void set_field_loadedMobs(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "navigatingMobs", "field_26932", "loadedMobs", "f_143246_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.server.world.ServerWorld#duringListenerUpdate
    static jboolean get_field_duringListenerUpdate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "isUpdatingNavigations", "field_36317", "duringListenerUpdate", "f_200893_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerWorld#duringListenerUpdate
    static void set_field_duringListenerUpdate(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "isUpdatingNavigations", "field_36317", "duringListenerUpdate", "f_200893_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.server.world.ServerWorld#raidManager
    static jobject get_field_raidManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "raids", "field_18811", "raidManager", "f_8565_"), "Lcok;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.server.world.ServerWorld#raidManager
    static void set_field_raidManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "raids", "field_18811", "raidManager", "f_8565_"), "Lcok;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#syncedBlockEventQueue
    static jobject get_field_syncedBlockEventQueue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "blockEvents", "field_13950", "syncedBlockEventQueue", "f_8556_"), "Lit/unimi/dsi/fastutil/objects/ObjectLinkedOpenHashSet;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#syncedBlockEventQueue
    static void set_field_syncedBlockEventQueue(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "blockEvents", "field_13950", "syncedBlockEventQueue", "f_8556_"), "Lit/unimi/dsi/fastutil/objects/ObjectLinkedOpenHashSet;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#blockEventQueue
    static jobject get_field_blockEventQueue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "blockEventsToReschedule", "field_35565", "blockEventQueue", "f_184048_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#blockEventQueue
    static void set_field_blockEventQueue(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "blockEventsToReschedule", "field_35565", "blockEventQueue", "f_184048_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#inBlockTick
    static jboolean get_field_inBlockTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "handlingTick", "field_13953", "inBlockTick", "f_8557_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#inBlockTick
    static void set_field_inBlockTick(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "handlingTick", "field_13953", "inBlockTick", "f_8557_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#spawners
    static jobject get_field_spawners(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "customSpawners", "field_25141", "spawners", "f_8558_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#spawners
    static void set_field_spawners(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "customSpawners", "field_25141", "spawners", "f_8558_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#enderDragonFight
    static jobject get_field_enderDragonFight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "dragonFight", "field_25142", "enderDragonFight", "f_8559_"), "Ldxb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#enderDragonFight
    static void set_field_enderDragonFight(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "dragonFight", "field_25142", "enderDragonFight", "f_8559_"), "Ldxb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.server.world.ServerWorld#dragonParts
    static jobject get_field_dragonParts(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "dragonParts", "field_26933", "dragonParts", "f_143247_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerWorld#dragonParts
    static void set_field_dragonParts(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "dragonParts", "field_26933", "dragonParts", "f_143247_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#structureAccessor
    static jobject get_field_structureAccessor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "structureManager", "field_23787", "structureAccessor", "f_214997_"), "Lddq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#structureAccessor
    static void set_field_structureAccessor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "structureManager", "field_23787", "structureAccessor", "f_214997_"), "Lddq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#structureLocator
    static jobject get_field_structureLocator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "structureCheck", "field_36208", "structureLocator", "f_196556_"), "Lejs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#structureLocator
    static void set_field_structureLocator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "structureCheck", "field_36208", "structureLocator", "f_196556_"), "Lejs;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#shouldTickTime
    static jboolean get_field_shouldTickTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "tickTime", "field_25143", "shouldTickTime", "f_8561_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#shouldTickTime
    static void set_field_shouldTickTime(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "tickTime", "field_25143", "shouldTickTime", "f_8561_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerWorld#randomSequences
    static jobject get_field_randomSequences(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ag", "randomSequences", "field_44857", "randomSequences", "f_286969_"), "Lbqy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerWorld#randomSequences
    static void set_field_randomSequences(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ag", "randomSequences", "field_44857", "randomSequences", "f_286969_"), "Lbqy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_setEnderDragonFight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDragonFight", "method_51837", "setEnderDragonFight", "m_287200_"), "(Ldxb;)V");
    }

    static void setEnderDragonFight(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setEnderDragonFight();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setWeather() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWeatherParameters", "method_27910", "setWeather", "m_8606_"), "(IIZZ)V");
    }

    static void setWeather(const jobject& obj, const jint& arg0, const jint& arg1, const jboolean& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_setWeather();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getGeneratorStoredBiome() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getUncachedNoiseBiome", "method_22387", "getGeneratorStoredBiome", "m_203675_"), "(III)Ljm;");
    }

    static jobject getGeneratorStoredBiome(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_getGeneratorStoredBiome();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getStructureAccessor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "structureManager", "method_27056", "getStructureAccessor", "m_215010_"), "()Lddq;");
    }

    static jobject getStructureAccessor(const jobject& obj) {
                
       const auto methodID = methodID_getStructureAccessor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_18765", "tick", "m_8793_"), "(Ljava/util/function/BooleanSupplier;)V");
    }

    static void tick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldTickBlocksInChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldTickBlocksAt", "method_39425", "shouldTickBlocksInChunk", "m_183438_"), "(J)Z");
    }

    static jboolean shouldTickBlocksInChunk(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_shouldTickBlocksInChunk();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "tickTime", "method_29203", "tickTime", "m_8809_"), "()V");
    }

    static void tickTime(const jobject& obj) {
                
       const auto methodID = methodID_tickTime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setTimeOfDay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setDayTime", "method_29199", "setTimeOfDay", "m_8615_"), "(J)V");
    }

    static void setTimeOfDay(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_setTimeOfDay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickSpawners() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickCustomSpawners", "method_29202", "tickSpawners", "m_8799_"), "(ZZ)V");
    }

    static void tickSpawners(const jobject& obj, const jboolean& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_tickSpawners();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldCancelSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "shouldDiscardEntity", "method_31430", "shouldCancelSpawn", "m_143342_"), "(Lbsr;)Z");
    }

    static jboolean shouldCancelSpawn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldCancelSpawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_wakeSleepingPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("as", "wakeUpAllPlayers", "method_23660", "wakeSleepingPlayers", "m_8804_"), "()V");
    }

    static void wakeSleepingPlayers(const jobject& obj) {
                
       const auto methodID = methodID_wakeSleepingPlayers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickChunk", "method_18203", "tickChunk", "m_8714_"), "(Ldvi;I)V");
    }

    static void tickChunk(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_tickChunk();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tickIceAndSnow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickPrecipitation", "method_52370", "tickIceAndSnow", "m_293428_"), "(Ljd;)V");
    }

    static void tickIceAndSnow(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tickIceAndSnow();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLightningRodPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "findLightningRod", "method_31418", "getLightningRodPos", "m_143248_"), "(Ljd;)Ljava/util/Optional;");
    }

    static jobject getLightningRodPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getLightningRodPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLightningPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "findLightningTargetAround", "method_18210", "getLightningPos", "m_143288_"), "(Ljd;)Ljd;");
    }

    static jobject getLightningPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getLightningPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isInBlockTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isHandlingTick", "method_14177", "isInBlockTick", "m_8874_"), "()Z");
    }

    static jboolean isInBlockTick(const jobject& obj) {
                
       const auto methodID = methodID_isInBlockTick();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSleepingEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "canSleepThroughNights", "method_33144", "isSleepingEnabled", "m_143333_"), "()Z");
    }

    static jboolean isSleepingEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isSleepingEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendSleepingStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("at", "announceSleepStatus", "method_33143", "sendSleepingStatus", "m_143315_"), "()V");
    }

    static void sendSleepingStatus(const jobject& obj) {
                
       const auto methodID = methodID_sendSleepingStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateSleepingPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "updateSleepingPlayerList", "method_8448", "updateSleepingPlayers", "m_8878_"), "()V");
    }

    static void updateSleepingPlayers(const jobject& obj) {
                
       const auto methodID = methodID_updateSleepingPlayers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getScoreboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getScoreboard", "method_14170", "getScoreboard", "m_6188_"), "()Lalk;");
    }

    static jobject getScoreboard(const jobject& obj) {
                
       const auto methodID = methodID_getScoreboard();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickWeather() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("au", "advanceWeatherCycle", "method_39501", "tickWeather", "m_184096_"), "()V");
    }

    static void tickWeather(const jobject& obj) {
                
       const auto methodID = methodID_tickWeather();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_resetWeather() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "resetWeatherCycle", "method_14195", "resetWeather", "m_184097_"), "()V");
    }

    static void resetWeather(const jobject& obj) {
                
       const auto methodID = methodID_resetWeather();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_resetIdleTimeout() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "resetEmptyTime", "method_14197", "resetIdleTimeout", "m_8886_"), "()V");
    }

    static void resetIdleTimeout(const jobject& obj) {
                
       const auto methodID = methodID_resetIdleTimeout();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickFluid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickFluid", "method_14171", "tickFluid", "m_184076_"), "(Ljd;Lepd;)V");
    }

    static void tickFluid(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_tickFluid();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tickBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "tickBlock", "method_14189", "tickBlock", "m_184112_"), "(Ljd;Ldfy;)V");
    }

    static void tickBlock(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_tickBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tickEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickNonPassenger", "method_18762", "tickEntity", "m_8647_"), "(Lbsr;)V");
    }

    static void tickEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tickEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickPassenger() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickPassenger", "method_18763", "tickPassenger", "m_8662_"), "(Lbsr;Lbsr;)V");
    }

    static void tickPassenger(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_tickPassenger();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canPlayerModifyAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mayInteract", "method_8505", "canPlayerModifyAt", "m_7966_"), "(Lcmx;Ljd;)Z");
    }

    static jboolean canPlayerModifyAt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canPlayerModifyAt();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_save() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "save", "method_14176", "save", "m_8643_"), "(Layv;ZZ)V");
    }

    static void save(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_save();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_saveLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("av", "saveLevelData", "method_14188", "saveLevel", "m_8806_"), "()V");
    }

    static void saveLevel(const jobject& obj) {
                
       const auto methodID = methodID_saveLevel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntitiesByType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntities", "method_18198", "getEntitiesByType", "m_143280_"), "(Ldxn;Ljava/util/function/Predicate;)Ljava/util/List;");
    }

    static jobject getEntitiesByType(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getEntitiesByType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_collectEntitiesByType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntities", "method_47538", "collectEntitiesByType", "m_260813_"), "(Ldxn;Ljava/util/function/Predicate;Ljava/util/List;)V");
    }

    static void collectEntitiesByType(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_collectEntitiesByType();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__collectEntitiesByType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntities", "method_47539", "collectEntitiesByType", "m_261178_"), "(Ldxn;Ljava/util/function/Predicate;Ljava/util/List;I)V");
    }

    static void _collectEntitiesByType(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID__collectEntitiesByType();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getAliveEnderDragons() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getDragons", "method_18776", "getAliveEnderDragons", "m_8857_"), "()Ljava/util/List;");
    }

    static jobject getAliveEnderDragons(const jobject& obj) {
                
       const auto methodID = methodID_getAliveEnderDragons();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPlayers", "method_18766", "getPlayers", "m_8795_"), "(Ljava/util/function/Predicate;)Ljava/util/List;");
    }

    static jobject getPlayers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPlayers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPlayers", "method_47540", "getPlayers", "m_261156_"), "(Ljava/util/function/Predicate;I)Ljava/util/List;");
    }

    static jobject _getPlayers(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__getPlayers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getRandomAlivePlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getRandomPlayer", "method_18779", "getRandomAlivePlayer", "m_8890_"), "()Laqv;");
    }

    static jobject getRandomAlivePlayer(const jobject& obj) {
                
       const auto methodID = methodID_getRandomAlivePlayer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_spawnEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addFreshEntity", "method_8649", "spawnEntity", "m_7967_"), "(Lbsr;)Z");
    }

    static jboolean spawnEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_spawnEntity();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tryLoadEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "addWithUUID", "method_18768", "tryLoadEntity", "m_8847_"), "(Lbsr;)Z");
    }

    static jboolean tryLoadEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryLoadEntity();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onDimensionChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "addDuringTeleport", "method_18769", "onDimensionChanged", "m_143334_"), "(Lbsr;)V");
    }

    static void onDimensionChanged(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDimensionChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onPlayerConnected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addNewPlayer", "method_18213", "onPlayerConnected", "m_8834_"), "(Laqv;)V");
    }

    static void onPlayerConnected(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onPlayerConnected();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onPlayerRespawned() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addRespawnedPlayer", "method_18215", "onPlayerRespawned", "m_8845_"), "(Laqv;)V");
    }

    static void onPlayerRespawned(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onPlayerRespawned();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "addPlayer", "method_18771", "addPlayer", "m_8853_"), "(Laqv;)V");
    }

    static void addPlayer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addPlayer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "addEntity", "method_14175", "addEntity", "m_8872_"), "(Lbsr;)Z");
    }

    static jboolean addEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEntity();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_spawnNewEntityAndPassengers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "tryAddFreshEntityWithPassengers", "method_30736", "spawnNewEntityAndPassengers", "m_8860_"), "(Lbsr;)Z");
    }

    static jboolean spawnNewEntityAndPassengers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_spawnNewEntityAndPassengers();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_unloadEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "unload", "method_18764", "unloadEntities", "m_8712_"), "(Ldvi;)V");
    }

    static void unloadEntities(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_unloadEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removePlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removePlayerImmediately", "method_18770", "removePlayer", "m_143261_"), "(Laqv;Lbsr$c;)V");
    }

    static void removePlayer(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_removePlayer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setBlockBreakingInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "destroyBlockProgress", "method_8517", "setBlockBreakingInfo", "m_6801_"), "(ILjd;I)V");
    }

    static void setBlockBreakingInfo(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_setBlockBreakingInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_playSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playSeededSound", "method_8465", "playSound", "m_262808_"), "(Lcmx;DDDLjm;Lavq;FFJ)V");
    }

    static void playSound(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jobject& arg4, const jobject& arg5, const jfloat& arg6, const jfloat& arg7, const jlong& arg8) {
                
       const auto methodID = methodID_playSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_playSoundFromEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playSeededSound", "method_8449", "playSoundFromEntity", "m_213890_"), "(Lcmx;Lbsr;Ljm;Lavq;FFJ)V");
    }

    static void playSoundFromEntity(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jfloat& arg4, const jfloat& arg5, const jlong& arg6) {
                
       const auto methodID = methodID_playSoundFromEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_syncGlobalEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "globalLevelEvent", "method_8474", "syncGlobalEvent", "m_6798_"), "(ILjd;I)V");
    }

    static void syncGlobalEvent(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_syncGlobalEvent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_syncWorldEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "levelEvent", "method_8444", "syncWorldEvent", "m_5898_"), "(Lcmx;ILjd;I)V");
    }

    static void syncWorldEvent(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_syncWorldEvent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getLogicalHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getLogicalHeight", "method_32819", "getLogicalHeight", "m_143344_"), "()I");
    }

    static jint getLogicalHeight(const jobject& obj) {
                
       const auto methodID = methodID_getLogicalHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_emitGameEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "gameEvent", "method_32888", "emitGameEvent", "m_214171_"), "(Ljm;Lexc;Ldxz$a;)V");
    }

    static void emitGameEvent(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_emitGameEvent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_updateListeners() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendBlockUpdated", "method_8413", "updateListeners", "m_7260_"), "(Ljd;Ldtc;Ldtc;I)V");
    }

    static void updateListeners(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_updateListeners();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_updateNeighborsAlways() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateNeighborsAt", "method_8452", "updateNeighborsAlways", "m_46672_"), "(Ljd;Ldfy;)V");
    }

    static void updateNeighborsAlways(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_updateNeighborsAlways();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateNeighborsExcept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateNeighborsAtExceptFromFacing", "method_8508", "updateNeighborsExcept", "m_46590_"), "(Ljd;Ldfy;Lji;)V");
    }

    static void updateNeighborsExcept(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateNeighborsExcept();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_updateNeighbor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "neighborChanged", "method_8492", "updateNeighbor", "m_46586_"), "(Ljd;Ldfy;Ljd;)V");
    }

    static void updateNeighbor(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateNeighbor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__updateNeighbor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "neighborChanged", "method_41410", "updateNeighbor", "m_213960_"), "(Ldtc;Ljd;Ldfy;Ljd;Z)V");
    }

    static void _updateNeighbor(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jboolean& arg4) {
                
       const auto methodID = methodID__updateNeighbor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_sendEntityStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "broadcastEntityEvent", "method_8421", "sendEntityStatus", "m_7605_"), "(Lbsr;B)V");
    }

    static void sendEntityStatus(const jobject& obj, const jobject& arg0, const jbyte& arg1) {
                
       const auto methodID = methodID_sendEntityStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_sendEntityDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "broadcastDamageEvent", "method_48760", "sendEntityDamage", "m_269196_"), "(Lbsr;Lbrk;)V");
    }

    static void sendEntityDamage(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_sendEntityDamage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getChunkManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getChunkSource", "method_14178", "getChunkManager", "m_7726_"), "()Laqs;");
    }

    static jobject getChunkManager(const jobject& obj) {
                
       const auto methodID = methodID_getChunkManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "explode", "method_8454", "createExplosion", "m_255039_"), "(Lbsr;Lbrk;Ldcp;DDDFZLdcw$a;Llk;Llk;Ljm;)Ldco;");
    }

    static jobject createExplosion(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jfloat& arg6, const jboolean& arg7, const jobject& arg8, const jobject& arg9, const jobject& arg10, const jobject& arg11) {
                
       const auto methodID = methodID_createExplosion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
    };
    
    static jmethodID methodID_addSyncedBlockEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "blockEvent", "method_8427", "addSyncedBlockEvent", "m_7696_"), "(Ljd;Ldfy;II)V");
    }

    static void addSyncedBlockEvent(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_addSyncedBlockEvent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_processSyncedBlockEvents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aw", "runBlockEvents", "method_14192", "processSyncedBlockEvents", "m_8807_"), "()V");
    }

    static void processSyncedBlockEvents(const jobject& obj) {
                
       const auto methodID = methodID_processSyncedBlockEvents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_processBlockEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doBlockEvent", "method_14174", "processBlockEvent", "m_8698_"), "(Ldcb;)Z");
    }

    static jboolean processBlockEvent(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_processBlockEvent();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBlockTickScheduler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getBlockTicks", "method_14196", "getBlockTickScheduler", "m_183326_"), "()Leyq;");
    }

    static jobject getBlockTickScheduler(const jobject& obj) {
                
       const auto methodID = methodID_getBlockTickScheduler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFluidTickScheduler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getFluidTicks", "method_14179", "getFluidTickScheduler", "m_183324_"), "()Leyq;");
    }

    static jobject getFluidTickScheduler(const jobject& obj) {
                
       const auto methodID = methodID_getFluidTickScheduler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getServer", "method_8503", "getServer", "m_7654_"), "()Lnet/minecraft/server/MinecraftServer;");
    }

    static jobject getServer(const jobject& obj) {
                
       const auto methodID = methodID_getServer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPortalForcer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getPortalForcer", "method_14173", "getPortalForcer", "m_8871_"), "()Leqd;");
    }

    static jobject getPortalForcer(const jobject& obj) {
                
       const auto methodID = methodID_getPortalForcer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStructureTemplateManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getStructureManager", "method_14183", "getStructureTemplateManager", "m_215082_"), "()Lenu;");
    }

    static jobject getStructureTemplateManager(const jobject& obj) {
                
       const auto methodID = methodID_getStructureTemplateManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_spawnParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendParticles", "method_14199", "spawnParticles", "m_8767_"), "(Llk;DDDIDDDD)I");
    }

    static jint spawnParticles(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jint& arg4, const jdouble& arg5, const jdouble& arg6, const jdouble& arg7, const jdouble& arg8) {
                
       const auto methodID = methodID_spawnParticles();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID__spawnParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendParticles", "method_14166", "spawnParticles", "m_8624_"), "(Laqv;Llk;ZDDDIDDDD)Z");
    }

    static jboolean _spawnParticles(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jint& arg6, const jdouble& arg7, const jdouble& arg8, const jdouble& arg9, const jdouble& arg10) {
                
       const auto methodID = methodID__spawnParticles();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    };
    
    static jmethodID methodID_sendToPlayerIfNearby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendParticles", "method_14191", "sendToPlayerIfNearby", "m_8636_"), "(Laqv;ZDDDLzg;)Z");
    }

    static jboolean sendToPlayerIfNearby(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_sendToPlayerIfNearby();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getEntityById() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntity", "method_8469", "getEntityById", "m_6815_"), "(I)Lbsr;");
    }

    static jobject getEntityById(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getEntityById();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDragonPart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getEntityOrPart", "method_31424", "getDragonPart", "m_143317_"), "(I)Lbsr;");
    }

    static jobject getDragonPart(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getDragonPart();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntity", "method_14190", "getEntity", "m_8791_"), "(Ljava/util/UUID;)Lbsr;");
    }

    static jobject getEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_locateStructure() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findNearestMapStructure", "method_8487", "locateStructure", "m_215011_"), "(Lawu;Ljd;IZ)Ljd;");
    }

    static jobject locateStructure(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_locateStructure();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_locateBiome() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findClosestBiome3d", "method_42108", "locateBiome", "m_215069_"), "(Ljava/util/function/Predicate;Ljd;III)Lcom/mojang/datafixers/util/Pair;");
    }

    static jobject locateBiome(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_locateBiome();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getRecipeManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "getRecipeManager", "method_8433", "getRecipeManager", "m_7465_"), "()Lczd;");
    }

    static jobject getRecipeManager(const jobject& obj) {
                
       const auto methodID = methodID_getRecipeManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTickManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "tickRateManager", "method_54719", "getTickManager", "m_304826_"), "()Lbrc;");
    }

    static jobject getTickManager(const jobject& obj) {
                
       const auto methodID = methodID_getTickManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSavingDisabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "noSave", "method_8458", "isSavingDisabled", "m_7441_"), "()Z");
    }

    static jboolean isSavingDisabled(const jobject& obj) {
                
       const auto methodID = methodID_isSavingDisabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPersistentStateManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "getDataStorage", "method_17983", "getPersistentStateManager", "m_8895_"), "()Leqz;");
    }

    static jobject getPersistentStateManager(const jobject& obj) {
                
       const auto methodID = methodID_getPersistentStateManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMapState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMapData", "method_17891", "getMapState", "m_7489_"), "(Leqr;)Leqt;");
    }

    static jobject getMapState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getMapState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_putMapState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setMapData", "method_17890", "putMapState", "m_142325_"), "(Leqr;Leqt;)V");
    }

    static void putMapState(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_putMapState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_increaseAndGetMapId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getFreeMapId", "method_17889", "increaseAndGetMapId", "m_7354_"), "()Leqr;");
    }

    static jobject increaseAndGetMapId(const jobject& obj) {
                
       const auto methodID = methodID_increaseAndGetMapId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSpawnPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDefaultSpawnPos", "method_8554", "setSpawnPos", "m_8733_"), "(Ljd;F)V");
    }

    static void setSpawnPos(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_setSpawnPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getForcedChunks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getForcedChunks", "method_17984", "getForcedChunks", "m_8902_"), "()Lit/unimi/dsi/fastutil/longs/LongSet;");
    }

    static jobject getForcedChunks(const jobject& obj) {
                
       const auto methodID = methodID_getForcedChunks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setChunkForced() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setChunkForced", "method_17988", "setChunkForced", "m_8602_"), "(IIZ)Z");
    }

    static jboolean setChunkForced(const jobject& obj, const jint& arg0, const jint& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_setChunkForced();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___getPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "players", "method_18456", "getPlayers", "m_6907_"), "()Ljava/util/List;");
    }

    static jobject __getPlayers(const jobject& obj) {
                
       const auto methodID = methodID___getPlayers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onBlockChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onBlockStateChange", "method_19282", "onBlockChanged", "m_6559_"), "(Ljd;Ldtc;Ldtc;)V");
    }

    static void onBlockChanged(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onBlockChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getPointOfInterestStorage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "getPoiManager", "method_19494", "getPointOfInterestStorage", "m_8904_"), "()Lces;");
    }

    static jobject getPointOfInterestStorage(const jobject& obj) {
                
       const auto methodID = methodID_getPointOfInterestStorage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isNearOccupiedPointOfInterest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isVillage", "method_19500", "isNearOccupiedPointOfInterest", "m_8802_"), "(Ljd;)Z");
    }

    static jboolean isNearOccupiedPointOfInterest(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isNearOccupiedPointOfInterest();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__isNearOccupiedPointOfInterest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isVillage", "method_20588", "isNearOccupiedPointOfInterest", "m_8762_"), "(Lkf;)Z");
    }

    static jboolean _isNearOccupiedPointOfInterest(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__isNearOccupiedPointOfInterest();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___isNearOccupiedPointOfInterest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isCloseToVillage", "method_19497", "isNearOccupiedPointOfInterest", "m_8736_"), "(Ljd;I)Z");
    }

    static jboolean __isNearOccupiedPointOfInterest(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID___isNearOccupiedPointOfInterest();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getOccupiedPointOfInterestDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "sectionsToVillage", "method_19498", "getOccupiedPointOfInterestDistance", "m_8828_"), "(Lkf;)I");
    }

    static jint getOccupiedPointOfInterestDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOccupiedPointOfInterestDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRaidManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "getRaids", "method_19495", "getRaidManager", "m_8905_"), "()Lcok;");
    }

    static jobject getRaidManager(const jobject& obj) {
                
       const auto methodID = methodID_getRaidManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRaidAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getRaidAt", "method_19502", "getRaidAt", "m_8832_"), "(Ljd;)Lcoi;");
    }

    static jobject getRaidAt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getRaidAt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasRaidAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isRaided", "method_19503", "hasRaidAt", "m_8843_"), "(Ljd;)Z");
    }

    static jboolean hasRaidAt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_hasRaidAt();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_handleInteraction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onReputationEvent", "method_19496", "handleInteraction", "m_8670_"), "(Lcep;Lbsr;Lbud;)V");
    }

    static void handleInteraction(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_handleInteraction();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_dump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "saveDebugReport", "method_21625", "dump", "m_8786_"), "(Ljava/nio/file/Path;)V");
    }

    static void dump(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dump();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dumpEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "dumpEntities", "method_21624", "dumpEntities", "m_8781_"), "(Ljava/io/Writer;Ljava/lang/Iterable;)V");
    }

    static void dumpEntities(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_dumpEntities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_dumpBlockEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dumpBlockEntityTickers", "method_21626", "dumpBlockEntities", "m_143299_"), "(Ljava/io/Writer;)V");
    }

    static void dumpBlockEntities(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dumpBlockEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clearUpdatesInArea() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clearBlockEvents", "method_23658", "clearUpdatesInArea", "m_8722_"), "(Lejj;)V");
    }

    static void clearUpdatesInArea(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_clearUpdatesInArea();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateNeighbors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "blockUpdated", "method_8408", "updateNeighbors", "m_6289_"), "(Ljd;Ldfy;)V");
    }

    static void updateNeighbors(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_updateNeighbors();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBrightness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getShade", "method_24852", "getBrightness", "m_7717_"), "(Lji;Z)F");
    }

    static jfloat getBrightness(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_getBrightness();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_iterateEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "getAllEntities", "method_27909", "iterateEntities", "m_8583_"), "()Ljava/lang/Iterable;");
    }

    static jobject iterateEntities(const jobject& obj) {
                
       const auto methodID = methodID_iterateEntities();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFlat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "isFlat", "method_28125", "isFlat", "m_8584_"), "()Z");
    }

    static jboolean isFlat(const jobject& obj) {
                
       const auto methodID = methodID_isFlat();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "getSeed", "method_8412", "getSeed", "m_7328_"), "()J");
    }

    static jlong getSeed(const jobject& obj) {
                
       const auto methodID = methodID_getSeed();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEnderDragonFight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "getDragonFight", "method_29198", "getEnderDragonFight", "m_8586_"), "()Ldxb;");
    }

    static jobject getEnderDragonFight(const jobject& obj) {
                
       const auto methodID = methodID_getEnderDragonFight();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toServerWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "getLevel", "method_8410", "toServerWorld", "m_6018_"), "()Laqu;");
    }

    static jobject toServerWorld(const jobject& obj) {
                
       const auto methodID = methodID_toServerWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDebugString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "getWatchdogStats", "method_31268", "getDebugString", "m_8590_"), "()Ljava/lang/String;");
    }

    static jobject getDebugString(const jobject& obj) {
                
       const auto methodID = methodID_getDebugString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTopFive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getTypeCount", "method_31270", "getTopFive", "m_143301_"), "(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String;");
    }

    static jobject getTopFive(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getTopFive();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getEntityLookup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "getEntities", "method_31592", "getEntityLookup", "m_142646_"), "()Ldxp;");
    }

    static jobject getEntityLookup(const jobject& obj) {
                
       const auto methodID = methodID_getEntityLookup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addLegacyChunkEntities", "method_31423", "loadEntities", "m_143311_"), "(Ljava/util/stream/Stream;)V");
    }

    static void loadEntities(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addWorldGenChunkEntities", "method_31426", "addEntities", "m_143327_"), "(Ljava/util/stream/Stream;)V");
    }

    static void addEntities(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_disableTickSchedulers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "startTickingChunk", "method_39223", "disableTickSchedulers", "m_184102_"), "(Ldvi;)V");
    }

    static void disableTickSchedulers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_disableTickSchedulers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_cacheStructures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onStructureStartsAvailable", "method_39778", "cacheStructures", "m_196557_"), "(Lduy;)V");
    }

    static void cacheStructures(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_cacheStructures();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPathNodeTypeCache() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "getPathTypeCache", "method_57133", "getPathNodeTypeCache", "m_321916_"), "()Lepw;");
    }

    static jobject getPathNodeTypeCache(const jobject& obj) {
                
       const auto methodID = methodID_getPathNodeTypeCache();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_asString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "gatherChunkSourceStats", "method_31419", "asString", "m_46464_"), "()Ljava/lang/String;");
    }

    static jobject asString(const jobject& obj) {
                
       const auto methodID = methodID_asString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isChunkLoaded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "areEntitiesLoaded", "method_37116", "isChunkLoaded", "m_143319_"), "(J)Z");
    }

    static jboolean isChunkLoaded(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_isChunkLoaded();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isTickingFutureReady() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isPositionTickingWithEntitiesLoaded", "method_37117", "isTickingFutureReady", "m_184110_"), "(J)Z");
    }

    static jboolean isTickingFutureReady(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_isTickingFutureReady();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldTickEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isPositionEntityTicking", "method_37118", "shouldTickEntity", "m_143340_"), "(Ljd;)Z");
    }

    static jboolean shouldTickEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldTickEntity();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "isNaturalSpawningAllowed", "method_39999", "shouldTick", "m_201918_"), "(Ljd;)Z");
    }

    static jboolean shouldTick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldTick();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__shouldTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isNaturalSpawningAllowed", "method_39998", "shouldTick", "m_201916_"), "(Ldcd;)Z");
    }

    static jboolean _shouldTick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__shouldTick();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEnabledFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "enabledFeatures", "method_45162", "getEnabledFeatures", "m_246046_"), "()Lcpl;");
    }

    static jobject getEnabledFeatures(const jobject& obj) {
                
       const auto methodID = methodID_getEnabledFeatures();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBrewingRecipeRegistry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "potionBrewing", "method_59547", "getBrewingRecipeRegistry", "m_319308_"), "()Lcwt;");
    }

    static jobject getBrewingRecipeRegistry(const jobject& obj) {
                
       const auto methodID = methodID_getBrewingRecipeRegistry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOrCreateRandom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomSequence", "method_51836", "getOrCreateRandom", "m_287143_"), "(Lakr;)Layw;");
    }

    static jobject getOrCreateRandom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOrCreateRandom();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRandomSequences() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L", "getRandomSequences", "method_52168", "getRandomSequences", "m_288231_"), "()Lbqy;");
    }

    static jobject getRandomSequences(const jobject& obj) {
                
       const auto methodID = methodID_getRandomSequences();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addDetailsToCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillReportDetails", "method_8538", "addDetailsToCrashReport", "m_6026_"), "(Lo;)Lp;");
    }

    static jobject addDetailsToCrashReport(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addDetailsToCrashReport();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_WORLD_SERVERWORLD_HPP