// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_WORLD_CHUNKTASKPRIORITYSYSTEM_HPP
#define NET_MINECRAFT_SERVER_WORLD_CHUNKTASKPRIORITYSYSTEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.world.ChunkTaskPrioritySystem
 * Remapped: aqe
 */
namespace ChunkTaskPrioritySystem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqe", "net/minecraft/server/level/ChunkTaskPriorityQueueSorter", "net/minecraft/class_3900", "net/minecraft/server/world/ChunkTaskPrioritySystem", "net/minecraft/src/C_5435_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.world.ChunkTaskPrioritySystem#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_17248", "LOGGER", "f_140549_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ChunkTaskPrioritySystem#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_17248", "LOGGER", "f_140549_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ChunkTaskPrioritySystem#queues
    static jobject get_field_queues(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "queues", "field_17249", "queues", "f_140550_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ChunkTaskPrioritySystem#queues
    static void set_field_queues(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "queues", "field_17249", "queues", "f_140550_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ChunkTaskPrioritySystem#idleActors
    static jobject get_field_idleActors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "sleeping", "field_17250", "idleActors", "f_140551_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ChunkTaskPrioritySystem#idleActors
    static void set_field_idleActors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "sleeping", "field_17250", "idleActors", "f_140551_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ChunkTaskPrioritySystem#controlActor
    static jobject get_field_controlActor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "mailbox", "field_17251", "controlActor", "f_140552_"), "Lbpk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ChunkTaskPrioritySystem#controlActor
    static void set_field_controlActor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "mailbox", "field_17251", "controlActor", "f_140552_"), "Lbpk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_shouldDelayShutdown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasWork", "method_39994", "shouldDelayShutdown", "m_201909_"), "()Z");
    }

    static jboolean shouldDelayShutdown(const jobject& obj) {
                
       const auto methodID = methodID_shouldDelayShutdown();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_createTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "message", "method_34871", "createTask", "m_143181_"), "(Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Laqe$a;");
    }

    static jobject createTask(const jobject& arg0, const jlong& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createTask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "message", "method_17626", "createMessage", "m_140624_"), "(Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Laqe$a;");
    }

    static jobject createMessage(const jobject& arg0, const jlong& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createMessage();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__createMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "message", "method_17629", "createMessage", "m_140642_"), "(Laqn;Ljava/lang/Runnable;)Laqe$a;");
    }

    static jobject _createMessage(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__createMessage();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__createTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "message", "method_34870", "createTask", "m_143156_"), "(Laqn;Ljava/util/function/Function;)Laqe$a;");
    }

    static jobject _createTask(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__createTask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createUnblockingMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "release", "method_17627", "createUnblockingMessage", "m_140628_"), "(Ljava/lang/Runnable;JZ)Laqe$b;");
    }

    static jobject createUnblockingMessage(const jobject& arg0, const jlong& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createUnblockingMessage();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createExecutor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getProcessor", "method_17622", "createExecutor", "m_140604_"), "(Lbpj;Z)Lbpj;");
    }

    static jobject createExecutor(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_createExecutor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createUnblockingExecutor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getReleaseProcessor", "method_17614", "createUnblockingExecutor", "m_140567_"), "(Lbpj;)Lbpj;");
    }

    static jobject createUnblockingExecutor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createUnblockingExecutor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("onLevelChange", "onLevelChange", "method_17209", "updateLevel", "m_6250_"), "(Ldcd;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V");
    }

    static void updateLevel(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_updateLevel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_removeChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "release", "method_17615", "removeChunk", "m_140569_"), "(Lbpj;JLjava/lang/Runnable;Z)V");
    }

    static void removeChunk(const jobject& obj, const jobject& arg0, const jlong& arg1, const jobject& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_removeChunk();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_enqueueChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "submit", "method_17282", "enqueueChunk", "m_140589_"), "(Lbpj;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V");
    }

    static void enqueueChunk(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2, const jobject& arg3, const jboolean& arg4) {
                
       const auto methodID = methodID_enqueueChunk();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_enqueueExecution() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pollTask", "method_17630", "enqueueExecution", "m_140645_"), "(Laqd;Lbpj;)V");
    }

    static void enqueueExecution(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_enqueueExecution();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getQueue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getQueue", "method_17632", "getQueue", "m_140652_"), "(Lbpj;)Laqd;");
    }

    static jobject getQueue(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getQueue();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDebugString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getDebugStatus", "method_21680", "getDebugString", "m_140558_"), "()Ljava/lang/String;");
    }

    static jobject getDebugString(const jobject& obj) {
                
       const auto methodID = methodID_getDebugString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_WORLD_CHUNKTASKPRIORITYSYSTEM_HPP