// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_WORLD_SERVERENTITYMANAGER_HPP
#define NET_MINECRAFT_SERVER_WORLD_SERVERENTITYMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.world.ServerEntityManager
 * Remapped: dxr
 */
namespace ServerEntityManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dxr", "net/minecraft/world/level/entity/PersistentEntitySectionManager", "net/minecraft/class_5579", "net/minecraft/server/world/ServerEntityManager", "net/minecraft/src/C_141295_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.server.world.ServerEntityManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_27260", "LOGGER", "f_157490_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerEntityManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_27260", "LOGGER", "f_157490_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.server.world.ServerEntityManager#entityUuids
    static jobject get_field_entityUuids(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "knownUuids", "field_27261", "entityUuids", "f_157491_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerEntityManager#entityUuids
    static void set_field_entityUuids(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "knownUuids", "field_27261", "entityUuids", "f_157491_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.server.world.ServerEntityManager#handler
    static jobject get_field_handler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "callbacks", "field_27262", "handler", "f_157492_"), "Ldxo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerEntityManager#handler
    static void set_field_handler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "callbacks", "field_27262", "handler", "f_157492_"), "Ldxo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerEntityManager#dataAccess
    static jobject get_field_dataAccess(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "permanentStorage", "field_27263", "dataAccess", "f_157493_"), "Ldxj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerEntityManager#dataAccess
    static void set_field_dataAccess(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "permanentStorage", "field_27263", "dataAccess", "f_157493_"), "Ldxj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerEntityManager#index
    static jobject get_field_index(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "visibleEntityStorage", "field_27264", "index", "f_157494_"), "Ldxi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerEntityManager#index
    static void set_field_index(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "visibleEntityStorage", "field_27264", "index", "f_157494_"), "Ldxi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.server.world.ServerEntityManager#cache
    static jobject get_field_cache(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "sectionStorage", "field_27265", "cache", "f_157495_"), "Ldxl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerEntityManager#cache
    static void set_field_cache(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "sectionStorage", "field_27265", "cache", "f_157495_"), "Ldxl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerEntityManager#lookup
    static jobject get_field_lookup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "entityGetter", "field_27266", "lookup", "f_157496_"), "Ldxp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerEntityManager#lookup
    static void set_field_lookup(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "entityGetter", "field_27266", "lookup", "f_157496_"), "Ldxp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerEntityManager#trackingStatuses
    static jobject get_field_trackingStatuses(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "chunkVisibility", "field_27267", "trackingStatuses", "f_157497_"), "Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerEntityManager#trackingStatuses
    static void set_field_trackingStatuses(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "chunkVisibility", "field_27267", "trackingStatuses", "f_157497_"), "Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerEntityManager#managedStatuses
    static jobject get_field_managedStatuses(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "chunkLoadStatuses", "field_27268", "managedStatuses", "f_157498_"), "Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerEntityManager#managedStatuses
    static void set_field_managedStatuses(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "chunkLoadStatuses", "field_27268", "managedStatuses", "f_157498_"), "Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerEntityManager#pendingUnloads
    static jobject get_field_pendingUnloads(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "chunksToUnload", "field_27269", "pendingUnloads", "f_157499_"), "Lit/unimi/dsi/fastutil/longs/LongSet;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerEntityManager#pendingUnloads
    static void set_field_pendingUnloads(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "chunksToUnload", "field_27269", "pendingUnloads", "f_157499_"), "Lit/unimi/dsi/fastutil/longs/LongSet;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.world.ServerEntityManager#loadingQueue
    static jobject get_field_loadingQueue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "loadingInbox", "field_27270", "loadingQueue", "f_157500_"), "Ljava/util/Queue;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.ServerEntityManager#loadingQueue
    static void set_field_loadingQueue(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "loadingInbox", "field_27270", "loadingQueue", "f_157500_"), "Ljava/util/Queue;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_entityLeftSection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeSectionIfEmpty", "method_31811", "entityLeftSection", "m_157509_"), "(JLdxk;)V");
    }

    static void entityLeftSection(const jobject& obj, const jlong& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_entityLeftSection();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addEntityUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addEntityUuid", "method_31831", "addEntityUuid", "m_157557_"), "(Ldxg;)Z");
    }

    static jboolean addEntityUuid(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEntityUuid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addNewEntity", "method_31818", "addEntity", "m_157533_"), "(Ldxg;)Z");
    }

    static jboolean addEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEntity();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__addEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addEntity", "method_31820", "addEntity", "m_157538_"), "(Ldxg;Z)Z");
    }

    static jboolean _addEntity(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID__addEntity();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getNeededLoadStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getEffectiveStatus", "method_31832", "getNeededLoadStatus", "m_157535_"), "(Ldxg;Ldxt;)Ldxt;");
    }

    static jobject getNeededLoadStatus(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getNeededLoadStatus();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_loadEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addLegacyChunkEntities", "method_31828", "loadEntities", "m_157552_"), "(Ljava/util/stream/Stream;)V");
    }

    static void loadEntities(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addWorldGenChunkEntities", "method_31835", "addEntities", "m_157559_"), "(Ljava/util/stream/Stream;)V");
    }

    static void addEntities(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_startTicking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "startTicking", "method_31838", "startTicking", "m_157564_"), "(Ldxg;)V");
    }

    static void startTicking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_startTicking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopTicking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "stopTicking", "method_31843", "stopTicking", "m_157570_"), "(Ldxg;)V");
    }

    static void stopTicking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_stopTicking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_startTracking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "startTracking", "method_31847", "startTracking", "m_157575_"), "(Ldxg;)V");
    }

    static void startTracking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_startTracking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopTracking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "stopTracking", "method_31850", "stopTracking", "m_157580_"), "(Ldxg;)V");
    }

    static void stopTracking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_stopTracking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateTrackingStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateChunkStatus", "method_31815", "updateTrackingStatus", "m_287207_"), "(Ldcd;Laql;)V");
    }

    static void updateTrackingStatus(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_updateTrackingStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__updateTrackingStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateChunkStatus", "method_31816", "updateTrackingStatus", "m_157527_"), "(Ldcd;Ldxt;)V");
    }

    static void _updateTrackingStatus(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__updateTrackingStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readIfFresh() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "ensureChunkQueuedForLoad", "method_31810", "readIfFresh", "m_157555_"), "(J)V");
    }

    static void readIfFresh(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_readIfFresh();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_trySave() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "storeChunkSections", "method_31812", "trySave", "m_157512_"), "(JLjava/util/function/Consumer;)Z");
    }

    static jboolean trySave(const jobject& obj, const jlong& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_trySave();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_scheduleRead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "requestChunkLoad", "method_31830", "scheduleRead", "m_157562_"), "(J)V");
    }

    static void scheduleRead(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_scheduleRead();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_unload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "processChunkUnload", "method_31837", "unload", "m_157568_"), "(J)Z");
    }

    static jboolean unload(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_unload();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__unload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "unloadEntity", "method_31852", "unload", "m_157585_"), "(Ldxg;)V");
    }

    static void _unload(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__unload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_unloadChunks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "processUnloads", "method_31851", "unloadChunks", "m_157577_"), "()V");
    }

    static void unloadChunks(const jobject& obj) {
                
       const auto methodID = methodID_unloadChunks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadChunks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "processPendingLoads", "method_31853", "loadChunks", "m_157582_"), "()V");
    }

    static void loadChunks(const jobject& obj) {
                
       const auto methodID = methodID_loadChunks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_31809", "tick", "m_157506_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLoadedChunks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getAllChunksToSave", "method_31855", "getLoadedChunks", "m_157587_"), "()Lit/unimi/dsi/fastutil/longs/LongSet;");
    }

    static jobject getLoadedChunks(const jobject& obj) {
                
       const auto methodID = methodID_getLoadedChunks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_save() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "autoSave", "method_31829", "save", "m_157554_"), "()V");
    }

    static void save(const jobject& obj) {
                
       const auto methodID = methodID_save();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_flush() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "saveAll", "method_31836", "flush", "m_157561_"), "()V");
    }

    static void flush(const jobject& obj) {
                
       const auto methodID = methodID_flush();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_has() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isLoaded", "method_31827", "has", "m_157550_"), "(Ljava/util/UUID;)Z");
    }

    static jboolean has(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_has();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLookup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getEntityGetter", "method_31841", "getLookup", "m_157567_"), "()Ldxp;");
    }

    static jobject getLookup(const jobject& obj) {
                
       const auto methodID = methodID_getLookup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canPositionTick", "method_40022", "shouldTick", "m_202167_"), "(Ljd;)Z");
    }

    static jboolean shouldTick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldTick();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__shouldTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canPositionTick", "method_40021", "shouldTick", "m_202165_"), "(Ldcd;)Z");
    }

    static jboolean _shouldTick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__shouldTick();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isLoaded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "areEntitiesLoaded", "method_37252", "isLoaded", "m_157507_"), "(J)Z");
    }

    static jboolean isLoaded(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_isLoaded();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dumpSections", "method_31826", "dump", "m_157548_"), "(Ljava/io/Writer;)V");
    }

    static void dump(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dump();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDebugString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "gatherStats", "method_31845", "getDebugString", "m_157572_"), "()Ljava/lang/String;");
    }

    static jobject getDebugString(const jobject& obj) {
                
       const auto methodID = methodID_getDebugString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getIndexSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "count", "method_54490", "getIndexSize", "m_306627_"), "()I");
    }

    static jint getIndexSize(const jobject& obj) {
                
       const auto methodID = methodID_getIndexSize();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_WORLD_SERVERENTITYMANAGER_HPP