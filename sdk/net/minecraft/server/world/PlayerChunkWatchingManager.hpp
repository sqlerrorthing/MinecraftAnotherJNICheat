// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_WORLD_PLAYERCHUNKWATCHINGMANAGER_HPP
#define NET_MINECRAFT_SERVER_WORLD_PLAYERCHUNKWATCHINGMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.world.PlayerChunkWatchingManager
 * Remapped: aqo
 */
namespace PlayerChunkWatchingManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqo", "net/minecraft/server/level/PlayerMap", "net/minecraft/class_3210", "net/minecraft/server/world/PlayerChunkWatchingManager", "net/minecraft/src/C_4_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.world.PlayerChunkWatchingManager#watchingPlayers
    static jobject get_field_watchingPlayers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "players", "field_13910", "watchingPlayers", "f_8241_"), "Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.world.PlayerChunkWatchingManager#watchingPlayers
    static void set_field_watchingPlayers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "players", "field_13910", "watchingPlayers", "f_8241_"), "Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getPlayersWatchingChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAllPlayers", "method_14083", "getPlayersWatchingChunk", "m_183926_"), "()Ljava/util/Set;");
    }

    static jobject getPlayersWatchingChunk(const jobject& obj) {
                
       const auto methodID = methodID_getPlayersWatchingChunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPlayer", "method_14085", "add", "m_8252_"), "(Laqv;Z)V");
    }

    static void add(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removePlayer", "method_14084", "remove", "m_8249_"), "(Laqv;)V");
    }

    static void remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_disableWatch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "ignorePlayer", "method_14086", "disableWatch", "m_8256_"), "(Laqv;)V");
    }

    static void disableWatch(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_disableWatch();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_enableWatch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "unIgnorePlayer", "method_14087", "enableWatch", "m_8258_"), "(Laqv;)V");
    }

    static void enableWatch(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_enableWatch();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isWatchInactive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "ignoredOrUnknown", "method_21715", "isWatchInactive", "m_8260_"), "(Laqv;)Z");
    }

    static jboolean isWatchInactive(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isWatchInactive();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isWatchDisabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "ignored", "method_14082", "isWatchDisabled", "m_8262_"), "(Laqv;)Z");
    }

    static jboolean isWatchDisabled(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isWatchDisabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_WORLD_PLAYERCHUNKWATCHINGMANAGER_HPP