// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_WORLD_SERVERCHUNKMANAGER$CHUNKWITHHOLDER_HPP
#define NET_MINECRAFT_SERVER_WORLD_SERVERCHUNKMANAGER$CHUNKWITHHOLDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.world.ServerChunkManager$ChunkWithHolder
 * Remapped: aqs$a
 */
namespace ServerChunkManager$ChunkWithHolder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqs$a", "net/minecraft/server/level/ServerChunkCache$ChunkAndHolder", "net/minecraft/class_3215$class_6635", "net/minecraft/server/world/ServerChunkManager$ChunkWithHolder", "net/minecraft/src/C_8_$C_182766_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.server.world.ServerChunkManager$ChunkWithHolder#chunk
    static jobject get_field_chunk(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "chunk", "comp_141", "chunk", "f_184028_"), "Ldvi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerChunkManager$ChunkWithHolder#chunk
    static void set_field_chunk(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "chunk", "comp_141", "chunk", "f_184028_"), "Ldvi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.server.world.ServerChunkManager$ChunkWithHolder#holder
    static jobject get_field_holder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "holder", "comp_142", "holder", "f_184029_"), "Lapz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.server.world.ServerChunkManager$ChunkWithHolder#holder
    static void set_field_holder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "holder", "comp_142", "holder", "f_184029_"), "Lapz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID__chunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "chunk", "comp_141", "chunk", "f_184028_"), "()Ldvi;");
    }

    static jobject _chunk(const jobject& obj) {
                
       const auto methodID = methodID__chunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__holder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "holder", "comp_142", "holder", "f_184029_"), "()Lapz;");
    }

    static jobject _holder(const jobject& obj) {
                
       const auto methodID = methodID__holder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_WORLD_SERVERCHUNKMANAGER$CHUNKWITHHOLDER_HPP