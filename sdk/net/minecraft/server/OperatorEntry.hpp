// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_OPERATORENTRY_HPP
#define NET_MINECRAFT_SERVER_OPERATORENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.OperatorEntry
 * Remapped: aut
 */
namespace OperatorEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aut", "net/minecraft/server/players/ServerOpListEntry", "net/minecraft/class_3327", "net/minecraft/server/OperatorEntry", "net/minecraft/src/C_105_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.OperatorEntry#permissionLevel
    static jint get_field_permissionLevel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "level", "field_14366", "permissionLevel", "f_11355_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.OperatorEntry#permissionLevel
    static void set_field_permissionLevel(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "level", "field_14366", "permissionLevel", "f_11355_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.OperatorEntry#bypassPlayerLimit
    static jboolean get_field_bypassPlayerLimit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "bypassesPlayerLimit", "field_14367", "bypassPlayerLimit", "f_11356_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.OperatorEntry#bypassPlayerLimit
    static void set_field_bypassPlayerLimit(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "bypassesPlayerLimit", "field_14367", "bypassPlayerLimit", "f_11356_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getPermissionLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getLevel", "method_14623", "getPermissionLevel", "m_11363_"), "()I");
    }

    static jint getPermissionLevel(const jobject& obj) {
                
       const auto methodID = methodID_getPermissionLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_canBypassPlayerLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getBypassesPlayerLimit", "method_14622", "canBypassPlayerLimit", "m_11366_"), "()Z");
    }

    static jboolean canBypassPlayerLimit(const jobject& obj) {
                
       const auto methodID = methodID_canBypassPlayerLimit();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "serialize", "method_24896", "write", "m_6009_"), "(Lcom/google/gson/JsonObject;)V");
    }

    static void write(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getProfileFromJson() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createGameProfile", "method_14621", "getProfileFromJson", "m_11367_"), "(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;");
    }

    static jobject getProfileFromJson(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getProfileFromJson();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_OPERATORENTRY_HPP