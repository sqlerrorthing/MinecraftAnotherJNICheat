// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_BANNEDIPLIST_HPP
#define NET_MINECRAFT_SERVER_BANNEDIPLIST_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.BannedIpList
 * Remapped: auo
 */
namespace BannedIpList {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("auo", "net/minecraft/server/players/IpBanList", "net/minecraft/class_3317", "net/minecraft/server/BannedIpList", "net/minecraft/src/C_93_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_fromJson() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createEntry", "method_14642", "fromJson", "m_6666_"), "(Lcom/google/gson/JsonObject;)Lauv;");
    }

    static jobject fromJson(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_fromJson();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isBanned() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isBanned", "method_14527", "isBanned", "m_11041_"), "(Ljava/net/SocketAddress;)Z");
    }

    static jboolean isBanned(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isBanned();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__isBanned() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isBanned", "method_14529", "isBanned", "m_11039_"), "(Ljava/lang/String;)Z");
    }

    static jboolean _isBanned(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__isBanned();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "get", "method_14528", "get", "m_11043_"), "(Ljava/net/SocketAddress;)Laup;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stringifyAddress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getIpFromAddress", "method_14526", "stringifyAddress", "m_11045_"), "(Ljava/net/SocketAddress;)Ljava/lang/String;");
    }

    static jobject stringifyAddress(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_stringifyAddress();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_BANNEDIPLIST_HPP