// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_SAMPLESUBSCRIPTIONTRACKER$MEASURETIMETICK_HPP
#define NET_MINECRAFT_SERVER_SAMPLESUBSCRIPTIONTRACKER$MEASURETIMETICK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.SampleSubscriptionTracker$MeasureTimeTick
 * Remapped: blq$b
 */
namespace SampleSubscriptionTracker$MeasureTimeTick {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("blq$b", "net/minecraft/util/debugchart/DebugSampleSubscriptionTracker$SubscriptionStartedAt", "net/minecraft/class_9188$class_9190", "net/minecraft/server/SampleSubscriptionTracker$MeasureTimeTick", "net/minecraft/src/C_313282_$C_313362_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.SampleSubscriptionTracker$MeasureTimeTick#millis
    static jlong get_field_millis(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "millis", "comp_2290", "millis", "f_315212_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.SampleSubscriptionTracker$MeasureTimeTick#millis
    static void set_field_millis(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "millis", "comp_2290", "millis", "f_315212_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.SampleSubscriptionTracker$MeasureTimeTick#tick
    static jint get_field_tick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "tick", "comp_2291", "tick", "f_315963_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.SampleSubscriptionTracker$MeasureTimeTick#tick
    static void set_field_tick(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "tick", "comp_2291", "tick", "f_315963_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID__millis() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "millis", "comp_2290", "millis", "f_315212_"), "()J");
    }

    static jlong _millis(const jobject& obj) {
                
       const auto methodID = methodID__millis();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "tick", "comp_2291", "tick", "f_315963_"), "()I");
    }

    static jint _tick(const jobject& obj) {
                
       const auto methodID = methodID__tick();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_SAMPLESUBSCRIPTIONTRACKER$MEASURETIMETICK_HPP