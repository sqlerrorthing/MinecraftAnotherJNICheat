// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_INTEGRATED_INTEGRATEDSERVERLOADER_HPP
#define NET_MINECRAFT_SERVER_INTEGRATED_INTEGRATEDSERVERLOADER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.integrated.IntegratedServerLoader
 * Remapped: ftm
 */
namespace IntegratedServerLoader {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ftm", "net/minecraft/client/gui/screens/worldselection/WorldOpenFlows", "net/minecraft/class_7196", "net/minecraft/server/integrated/IntegratedServerLoader", "net/minecraft/src/C_213389_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.integrated.IntegratedServerLoader#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_37913", "LOGGER", "f_233088_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.integrated.IntegratedServerLoader#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_37913", "LOGGER", "f_233088_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.integrated.IntegratedServerLoader#WORLD_PACK_ID
    [[maybe_unused]] static jobject get_field_WORLD_PACK_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WORLD_PACK_ID", "field_47592", "WORLD_PACK_ID", "f_303497_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.integrated.IntegratedServerLoader#WORLD_PACK_ID
    [[maybe_unused]] static void set_field_WORLD_PACK_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WORLD_PACK_ID", "field_47592", "WORLD_PACK_ID", "f_303497_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.integrated.IntegratedServerLoader#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minecraft", "field_37914", "client", "f_233089_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.integrated.IntegratedServerLoader#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minecraft", "field_37914", "client", "f_233089_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.integrated.IntegratedServerLoader#storage
    static jobject get_field_storage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "levelSource", "field_37915", "storage", "f_233090_"), "Lerf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.integrated.IntegratedServerLoader#storage
    static void set_field_storage(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "levelSource", "field_37915", "storage", "f_233090_"), "Lerf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_createAndStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createFreshLevel", "method_41895", "createAndStart", "m_233157_"), "(Ljava/lang/String;Ldda;Ldzw;Ljava/util/function/Function;Lfod;)V");
    }

    static void createAndStart(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_createAndStart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_createSession() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createWorldAccess", "method_41901", "createSession", "m_233155_"), "(Ljava/lang/String;)Lerf$c;");
    }

    static jobject createSession(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createSession();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_startNewWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createLevelFromExistingSettings", "method_41889", "startNewWorld", "m_245064_"), "(Lerf$c;Lalc;Ljt;Lerl;)V");
    }

    static void startNewWorld(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_startNewWorld();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadWorldStem", "method_54610", "load", "m_233122_"), "(Lcom/mojang/serialization/Dynamic;ZLatp;)Lalp;");
    }

    static jobject load(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_load();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_loadForRecreation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "recreateWorldData", "method_45696", "loadForRecreation", "m_246225_"), "(Lerf$c;)Lcom/mojang/datafixers/util/Pair;");
    }

    static jobject loadForRecreation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadForRecreation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadWorldDataBlocking", "method_45694", "load", "m_246486_"), "(Lalo$d;Lalo$f;Lalo$e;)Ljava/lang/Object;");
    }

    static jobject _load(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__load();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_showBackupPromptScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "askForBackup", "method_41898", "showBackupPromptScreen", "m_233140_"), "(Lerf$c;ZLjava/lang/Runnable;Ljava/lang/Runnable;)V");
    }

    static void showBackupPromptScreen(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_showBackupPromptScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_tryLoad() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "confirmWorldCreation", "method_41892", "tryLoad", "m_269260_"), "(Lfgo;Lftc;Lcom/mojang/serialization/Lifecycle;Ljava/lang/Runnable;Z)V");
    }

    static void tryLoad(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jboolean& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_tryLoad();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openWorld", "method_57784", "start", "m_320872_"), "(Ljava/lang/String;Ljava/lang/Runnable;)V");
    }

    static void start(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openWorldLoadLevelData", "method_57782", "start", "m_320544_"), "(Lerf$c;Ljava/lang/Runnable;)V");
    }

    static void _start(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openWorldCheckVersionCompatibility", "method_57781", "start", "m_321507_"), "(Lerf$c;Lerg;Lcom/mojang/serialization/Dynamic;Ljava/lang/Runnable;)V");
    }

    static void __start(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID___start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID____start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openWorldLoadLevelStem", "method_57780", "start", "m_320597_"), "(Lerf$c;Lcom/mojang/serialization/Dynamic;ZLjava/lang/Runnable;)V");
    }

    static void ___start(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jobject& arg3) {
                
       const auto methodID = methodID____start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_checkBackupAndStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openWorldCheckWorldStemCompatibility", "method_57775", "checkBackupAndStart", "m_324520_"), "(Lerf$c;Lalp;Latp;Ljava/lang/Runnable;)V");
    }

    static void checkBackupAndStart(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_checkBackupAndStart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_____start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "openWorldLoadBundledResourcePack", "method_57787", "start", "m_323928_"), "(Lerf$c;Lalp;Latp;Ljava/lang/Runnable;)V");
    }

    static void ____start(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_____start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID______start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openWorldCheckDiskSpace", "method_57776", "start", "m_323759_"), "(Lerf$c;Lalp;Lgtc;Latp;Ljava/lang/Runnable;)V");
    }

    static void _____start(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID______start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_______start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openWorldDoLoad", "method_57773", "start", "m_324083_"), "(Lerf$c;Lalp;Latp;)V");
    }

    static void ______start(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_______start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_applyWorldPack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadBundledResourcePack", "method_55510", "applyWorldPack", "m_306257_"), "(Lgtc;Lerf$c;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject applyWorldPack(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_applyWorldPack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_showPackLoadFailureScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "promptBundledPackLoadFailure", "method_43324", "showPackLoadFailureScreen", "m_233095_"), "()Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject showPackLoadFailureScreen(const jobject& obj) {
                
       const auto methodID = methodID_showPackLoadFailureScreen();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_INTEGRATED_INTEGRATEDSERVERLOADER_HPP