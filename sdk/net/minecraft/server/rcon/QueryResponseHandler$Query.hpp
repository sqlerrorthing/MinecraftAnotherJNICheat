// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_RCON_QUERYRESPONSEHANDLER$QUERY_HPP
#define NET_MINECRAFT_SERVER_RCON_QUERYRESPONSEHANDLER$QUERY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.rcon.QueryResponseHandler$Query
 * Remapped: avi$a
 */
namespace QueryResponseHandler$Query {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("avi$a", "net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge", "net/minecraft/class_3364$class_3365", "net/minecraft/server/rcon/QueryResponseHandler$Query", "net/minecraft/src/C_117_$C_118_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.rcon.QueryResponseHandler$Query#startTime
    static jlong get_field_startTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "time", "field_14459", "startTime", "f_11567_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.rcon.QueryResponseHandler$Query#startTime
    static void set_field_startTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "time", "field_14459", "startTime", "f_11567_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.rcon.QueryResponseHandler$Query#id
    static jint get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "challenge", "field_14458", "id", "f_11568_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.rcon.QueryResponseHandler$Query#id
    static void set_field_id(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "challenge", "field_14458", "id", "f_11568_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.rcon.QueryResponseHandler$Query#messageBytes
    static jbyte get_field_messageBytes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "identBytes", "field_14460", "messageBytes", "f_11569_"), "[B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.rcon.QueryResponseHandler$Query#messageBytes
    static void set_field_messageBytes(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "identBytes", "field_14460", "messageBytes", "f_11569_"), "[B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.rcon.QueryResponseHandler$Query#replyBuf
    static jbyte get_field_replyBuf(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "challengeBytes", "field_14461", "replyBuf", "f_11570_"), "[B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.rcon.QueryResponseHandler$Query#replyBuf
    static void set_field_replyBuf(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "challengeBytes", "field_14461", "replyBuf", "f_11570_"), "[B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.rcon.QueryResponseHandler$Query#message
    static jobject get_field_message(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "ident", "field_14462", "message", "f_11571_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.rcon.QueryResponseHandler$Query#message
    static void set_field_message(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "ident", "field_14462", "message", "f_11571_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_startedBefore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "before", "method_14755", "startedBefore", "m_11575_"), "(J)Ljava/lang/Boolean;");
    }

    static jobject startedBefore(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_startedBefore();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getChallenge", "method_14756", "getId", "m_11574_"), "()I");
    }

    static jint getId(const jobject& obj) {
                
       const auto methodID = methodID_getId();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getReplyBuf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getChallengeBytes", "method_14757", "getReplyBuf", "m_11577_"), "()[B");
    }

    static jbyte getReplyBuf(const jobject& obj) {
                
       const auto methodID = methodID_getReplyBuf();
       return MinecraftSDK::env->CallByteMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMessageBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getIdentBytes", "method_14758", "getMessageBytes", "m_11578_"), "()[B");
    }

    static jbyte getMessageBytes(const jobject& obj) {
                
       const auto methodID = methodID_getMessageBytes();
       return MinecraftSDK::env->CallByteMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getIdent", "method_34888", "getMessage", "m_144028_"), "()Ljava/lang/String;");
    }

    static jobject getMessage(const jobject& obj) {
                
       const auto methodID = methodID_getMessage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_RCON_QUERYRESPONSEHANDLER$QUERY_HPP