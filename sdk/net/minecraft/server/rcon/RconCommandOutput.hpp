// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_RCON_RCONCOMMANDOUTPUT_HPP
#define NET_MINECRAFT_SERVER_RCON_RCONCOMMANDOUTPUT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.rcon.RconCommandOutput
 * Remapped: avf
 */
namespace RconCommandOutput {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("avf", "net/minecraft/server/rcon/RconConsoleSource", "net/minecraft/class_3350", "net/minecraft/server/rcon/RconCommandOutput", "net/minecraft/src/C_115_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.server.rcon.RconCommandOutput#RCON_NAME
    [[maybe_unused]] static jobject get_field_RCON_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RCON", "field_29793", "RCON_NAME", "f_144022_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.rcon.RconCommandOutput#RCON_NAME
    [[maybe_unused]] static void set_field_RCON_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RCON", "field_29793", "RCON_NAME", "f_144022_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.server.rcon.RconCommandOutput#RCON_NAME_TEXT
    [[maybe_unused]] static jobject get_field_RCON_NAME_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RCON_COMPONENT", "field_25146", "RCON_NAME_TEXT", "f_11500_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.server.rcon.RconCommandOutput#RCON_NAME_TEXT
    [[maybe_unused]] static void set_field_RCON_NAME_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RCON_COMPONENT", "field_25146", "RCON_NAME_TEXT", "f_11500_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.server.rcon.RconCommandOutput#buffer
    static jobject get_field_buffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "buffer", "field_14404", "buffer", "f_11501_"), "Ljava/lang/StringBuffer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.rcon.RconCommandOutput#buffer
    static void set_field_buffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "buffer", "field_14404", "buffer", "f_11501_"), "Ljava/lang/StringBuffer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.rcon.RconCommandOutput#server
    static jobject get_field_server(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "server", "field_14405", "server", "f_11502_"), "Lnet/minecraft/server/MinecraftServer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.rcon.RconCommandOutput#server
    static void set_field_server(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "server", "field_14405", "server", "f_11502_"), "Lnet/minecraft/server/MinecraftServer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "prepareForCommand", "method_14702", "clear", "m_11512_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_asString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getCommandResponse", "method_14701", "asString", "m_11513_"), "()Ljava/lang/String;");
    }

    static jobject asString(const jobject& obj) {
                
       const auto methodID = methodID_asString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createRconCommandSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "createCommandSourceStack", "method_14700", "createRconCommandSource", "m_11514_"), "()Let;");
    }

    static jobject createRconCommandSource(const jobject& obj) {
                
       const auto methodID = methodID_createRconCommandSource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendSystemMessage", "method_43496", "sendMessage", "m_213846_"), "(Lwz;)V");
    }

    static void sendMessage(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldReceiveFeedback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k_", "acceptsSuccess", "method_9200", "shouldReceiveFeedback", "m_6999_"), "()Z");
    }

    static jboolean shouldReceiveFeedback(const jobject& obj) {
                
       const auto methodID = methodID_shouldReceiveFeedback();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldTrackOutput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w_", "acceptsFailure", "method_9202", "shouldTrackOutput", "m_7028_"), "()Z");
    }

    static jboolean shouldTrackOutput(const jobject& obj) {
                
       const auto methodID = methodID_shouldTrackOutput();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldBroadcastConsoleToOps() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("M_", "shouldInformAdmins", "method_9201", "shouldBroadcastConsoleToOps", "m_6102_"), "()Z");
    }

    static jboolean shouldBroadcastConsoleToOps(const jobject& obj) {
                
       const auto methodID = methodID_shouldBroadcastConsoleToOps();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_RCON_RCONCOMMANDOUTPUT_HPP