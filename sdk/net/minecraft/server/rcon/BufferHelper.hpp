// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_RCON_BUFFERHELPER_HPP
#define NET_MINECRAFT_SERVER_RCON_BUFFERHELPER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.rcon.BufferHelper
 * Remapped: ave
 */
namespace BufferHelper {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ave", "net/minecraft/server/rcon/PktUtils", "net/minecraft/class_3347", "net/minecraft/server/rcon/BufferHelper", "net/minecraft/src/C_114_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.server.rcon.BufferHelper#field_29792
    [[maybe_unused]] static jint get_field_field_29792() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_PACKET_SIZE", "field_29792", "field_29792", "f_144020_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.rcon.BufferHelper#field_29792
    [[maybe_unused]] static void set_field_field_29792(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_PACKET_SIZE", "field_29792", "field_29792", "f_144020_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.server.rcon.BufferHelper#HEX_CHARS_LOOKUP
    [[maybe_unused]] static jchar get_field_HEX_CHARS_LOOKUP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HEX_CHAR", "field_14398", "HEX_CHARS_LOOKUP", "f_11481_"), "[C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.server.rcon.BufferHelper#HEX_CHARS_LOOKUP
    [[maybe_unused]] static void set_field_HEX_CHARS_LOOKUP(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HEX_CHAR", "field_14398", "HEX_CHARS_LOOKUP", "f_11481_"), "[C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    static jmethodID methodID_getString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stringFromByteArray", "method_14697", "getString", "m_11488_"), "([BII)Ljava/lang/String;");
    }

    static jobject getString(const jarray& arg0, const jbyte& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getIntLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "intFromByteArray", "method_14695", "getIntLE", "m_11485_"), "([BI)I");
    }

    static jint getIntLE(const jarray& arg0, const jbyte& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getIntLE();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__getIntLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "intFromByteArray", "method_14696", "getIntLE", "m_11492_"), "([BII)I");
    }

    static jint _getIntLE(const jarray& arg0, const jbyte& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__getIntLE();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getIntBE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "intFromNetworkByteArray", "method_14698", "getIntBE", "m_11496_"), "([BII)I");
    }

    static jint getIntBE(const jarray& arg0, const jbyte& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getIntBE();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_toHex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "toHexString", "method_14699", "toHex", "m_11483_"), "(B)Ljava/lang/String;");
    }

    static jobject toHex(const jbyte& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toHex();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SERVER_RCON_BUFFERHELPER_HPP