// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SERVER_RCON_DATASTREAMHELPER_HPP
#define NET_MINECRAFT_SERVER_RCON_DATASTREAMHELPER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.server.rcon.DataStreamHelper
 * Remapped: avd
 */
namespace DataStreamHelper {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("avd", "net/minecraft/server/rcon/NetworkDataOutputStream", "net/minecraft/class_3345", "net/minecraft/server/rcon/DataStreamHelper", "net/minecraft/src/C_113_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.server.rcon.DataStreamHelper#byteArrayOutputStream
    static jobject get_field_byteArrayOutputStream(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "outputStream", "field_14395", "byteArrayOutputStream", "f_11467_"), "Ljava/io/ByteArrayOutputStream;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.rcon.DataStreamHelper#byteArrayOutputStream
    static void set_field_byteArrayOutputStream(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "outputStream", "field_14395", "byteArrayOutputStream", "f_11467_"), "Ljava/io/ByteArrayOutputStream;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.server.rcon.DataStreamHelper#dataOutputStream
    static jobject get_field_dataOutputStream(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "dataOutputStream", "field_14396", "dataOutputStream", "f_11468_"), "Ljava/io/DataOutputStream;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.server.rcon.DataStreamHelper#dataOutputStream
    static void set_field_dataOutputStream(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "dataOutputStream", "field_14396", "dataOutputStream", "f_11468_"), "Ljava/io/DataOutputStream;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeBytes", "method_14694", "write", "m_11478_"), "([B)V");
    }

    static void write(const jobject& obj, const jarray& arg0, const jbyte& arg1) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeString", "method_14690", "writeBytes", "m_11474_"), "(Ljava/lang/String;)V");
    }

    static void writeBytes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeBytes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_14692", "write", "m_11472_"), "(I)V");
    }

    static void _write(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeShort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeShort", "method_14691", "writeShort", "m_11476_"), "(S)V");
    }

    static void writeShort(const jobject& obj, const jshort& arg0) {
                
       const auto methodID = methodID_writeShort();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "writeInt", "method_34887", "writeInt", "m_144018_"), "(I)V");
    }

    static void writeInt(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeInt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeFloat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeFloat", "method_34886", "writeFloat", "m_144016_"), "(F)V");
    }

    static void writeFloat(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_writeFloat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_bytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "toByteArray", "method_14689", "bytes", "m_11471_"), "()[B");
    }

    static jbyte bytes(const jobject& obj) {
                
       const auto methodID = methodID_bytes();
       return MinecraftSDK::env->CallByteMethod(obj, methodID);
    };
    
    static jmethodID methodID_reset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "reset", "method_14693", "reset", "m_11480_"), "()V");
    }

    static void reset(const jobject& obj) {
                
       const auto methodID = methodID_reset();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SERVER_RCON_DATASTREAMHELPER_HPP