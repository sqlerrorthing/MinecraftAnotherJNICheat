// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMPONENT_DATACOMPONENTTYPES_HPP
#define NET_MINECRAFT_COMPONENT_DATACOMPONENTTYPES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.component.DataComponentTypes
 * Remapped: kq
 */
namespace DataComponentTypes {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("kq", "net/minecraft/core/component/DataComponents", "net/minecraft/class_9334", "net/minecraft/component/DataComponentTypes", "net/minecraft/src/C_313616_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.component.DataComponentTypes#CACHE
    [[maybe_unused]] static jobject get_field_CACHE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ENCODER_CACHE", "field_51518", "CACHE", "f_315405_"), "Laxu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.component.DataComponentTypes#CACHE
    [[maybe_unused]] static void set_field_CACHE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ENCODER_CACHE", "field_51518", "CACHE", "f_315405_"), "Laxu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#CUSTOM_DATA
    [[maybe_unused]] static jobject get_field_CUSTOM_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CUSTOM_DATA", "field_49628", "CUSTOM_DATA", "f_316665_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#CUSTOM_DATA
    [[maybe_unused]] static void set_field_CUSTOM_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CUSTOM_DATA", "field_49628", "CUSTOM_DATA", "f_316665_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#MAX_STACK_SIZE
    [[maybe_unused]] static jobject get_field_MAX_STACK_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_STACK_SIZE", "field_50071", "MAX_STACK_SIZE", "f_314701_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#MAX_STACK_SIZE
    [[maybe_unused]] static void set_field_MAX_STACK_SIZE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_STACK_SIZE", "field_50071", "MAX_STACK_SIZE", "f_314701_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#MAX_DAMAGE
    [[maybe_unused]] static jobject get_field_MAX_DAMAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MAX_DAMAGE", "field_50072", "MAX_DAMAGE", "f_316415_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#MAX_DAMAGE
    [[maybe_unused]] static void set_field_MAX_DAMAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MAX_DAMAGE", "field_50072", "MAX_DAMAGE", "f_316415_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#DAMAGE
    [[maybe_unused]] static jobject get_field_DAMAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DAMAGE", "field_49629", "DAMAGE", "f_313972_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#DAMAGE
    [[maybe_unused]] static void set_field_DAMAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DAMAGE", "field_49629", "DAMAGE", "f_313972_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#UNBREAKABLE
    [[maybe_unused]] static jobject get_field_UNBREAKABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "UNBREAKABLE", "field_49630", "UNBREAKABLE", "f_315410_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#UNBREAKABLE
    [[maybe_unused]] static void set_field_UNBREAKABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "UNBREAKABLE", "field_49630", "UNBREAKABLE", "f_315410_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#CUSTOM_NAME
    [[maybe_unused]] static jobject get_field_CUSTOM_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CUSTOM_NAME", "field_49631", "CUSTOM_NAME", "f_316016_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#CUSTOM_NAME
    [[maybe_unused]] static void set_field_CUSTOM_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CUSTOM_NAME", "field_49631", "CUSTOM_NAME", "f_316016_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#ITEM_NAME
    [[maybe_unused]] static jobject get_field_ITEM_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ITEM_NAME", "field_50239", "ITEM_NAME", "f_314548_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#ITEM_NAME
    [[maybe_unused]] static void set_field_ITEM_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ITEM_NAME", "field_50239", "ITEM_NAME", "f_314548_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#LORE
    [[maybe_unused]] static jobject get_field_LORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "LORE", "field_49632", "LORE", "f_315745_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#LORE
    [[maybe_unused]] static void set_field_LORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "LORE", "field_49632", "LORE", "f_315745_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#RARITY
    [[maybe_unused]] static jobject get_field_RARITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "RARITY", "field_50073", "RARITY", "f_315029_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#RARITY
    [[maybe_unused]] static void set_field_RARITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "RARITY", "field_50073", "RARITY", "f_315029_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#ENCHANTMENTS
    [[maybe_unused]] static jobject get_field_ENCHANTMENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ENCHANTMENTS", "field_49633", "ENCHANTMENTS", "f_314658_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#ENCHANTMENTS
    [[maybe_unused]] static void set_field_ENCHANTMENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ENCHANTMENTS", "field_49633", "ENCHANTMENTS", "f_314658_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#CAN_PLACE_ON
    [[maybe_unused]] static jobject get_field_CAN_PLACE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "CAN_PLACE_ON", "field_49634", "CAN_PLACE_ON", "f_315118_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#CAN_PLACE_ON
    [[maybe_unused]] static void set_field_CAN_PLACE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "CAN_PLACE_ON", "field_49634", "CAN_PLACE_ON", "f_315118_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#CAN_BREAK
    [[maybe_unused]] static jobject get_field_CAN_BREAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "CAN_BREAK", "field_49635", "CAN_BREAK", "f_316977_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#CAN_BREAK
    [[maybe_unused]] static void set_field_CAN_BREAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "CAN_BREAK", "field_49635", "CAN_BREAK", "f_316977_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#ATTRIBUTE_MODIFIERS
    [[maybe_unused]] static jobject get_field_ATTRIBUTE_MODIFIERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ATTRIBUTE_MODIFIERS", "field_49636", "ATTRIBUTE_MODIFIERS", "f_316119_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#ATTRIBUTE_MODIFIERS
    [[maybe_unused]] static void set_field_ATTRIBUTE_MODIFIERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ATTRIBUTE_MODIFIERS", "field_49636", "ATTRIBUTE_MODIFIERS", "f_316119_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#CUSTOM_MODEL_DATA
    [[maybe_unused]] static jobject get_field_CUSTOM_MODEL_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CUSTOM_MODEL_DATA", "field_49637", "CUSTOM_MODEL_DATA", "f_315513_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#CUSTOM_MODEL_DATA
    [[maybe_unused]] static void set_field_CUSTOM_MODEL_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CUSTOM_MODEL_DATA", "field_49637", "CUSTOM_MODEL_DATA", "f_315513_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#HIDE_ADDITIONAL_TOOLTIP
    [[maybe_unused]] static jobject get_field_HIDE_ADDITIONAL_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "HIDE_ADDITIONAL_TOOLTIP", "field_49638", "HIDE_ADDITIONAL_TOOLTIP", "f_316186_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#HIDE_ADDITIONAL_TOOLTIP
    [[maybe_unused]] static void set_field_HIDE_ADDITIONAL_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "HIDE_ADDITIONAL_TOOLTIP", "field_49638", "HIDE_ADDITIONAL_TOOLTIP", "f_316186_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#HIDE_TOOLTIP
    [[maybe_unused]] static jobject get_field_HIDE_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "HIDE_TOOLTIP", "field_50074", "HIDE_TOOLTIP", "f_314049_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#HIDE_TOOLTIP
    [[maybe_unused]] static void set_field_HIDE_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "HIDE_TOOLTIP", "field_50074", "HIDE_TOOLTIP", "f_314049_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#REPAIR_COST
    [[maybe_unused]] static jobject get_field_REPAIR_COST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "REPAIR_COST", "field_49639", "REPAIR_COST", "f_315107_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#REPAIR_COST
    [[maybe_unused]] static void set_field_REPAIR_COST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "REPAIR_COST", "field_49639", "REPAIR_COST", "f_315107_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#CREATIVE_SLOT_LOCK
    [[maybe_unused]] static jobject get_field_CREATIVE_SLOT_LOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "CREATIVE_SLOT_LOCK", "field_49640", "CREATIVE_SLOT_LOCK", "f_314367_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#CREATIVE_SLOT_LOCK
    [[maybe_unused]] static void set_field_CREATIVE_SLOT_LOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "CREATIVE_SLOT_LOCK", "field_49640", "CREATIVE_SLOT_LOCK", "f_314367_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#ENCHANTMENT_GLINT_OVERRIDE
    [[maybe_unused]] static jobject get_field_ENCHANTMENT_GLINT_OVERRIDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "ENCHANTMENT_GLINT_OVERRIDE", "field_49641", "ENCHANTMENT_GLINT_OVERRIDE", "f_315974_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#ENCHANTMENT_GLINT_OVERRIDE
    [[maybe_unused]] static void set_field_ENCHANTMENT_GLINT_OVERRIDE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "ENCHANTMENT_GLINT_OVERRIDE", "field_49641", "ENCHANTMENT_GLINT_OVERRIDE", "f_315974_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#INTANGIBLE_PROJECTILE
    [[maybe_unused]] static jobject get_field_INTANGIBLE_PROJECTILE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "INTANGIBLE_PROJECTILE", "field_49642", "INTANGIBLE_PROJECTILE", "f_314381_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#INTANGIBLE_PROJECTILE
    [[maybe_unused]] static void set_field_INTANGIBLE_PROJECTILE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "INTANGIBLE_PROJECTILE", "field_49642", "INTANGIBLE_PROJECTILE", "f_314381_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#FOOD
    [[maybe_unused]] static jobject get_field_FOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FOOD", "field_50075", "FOOD", "f_315399_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#FOOD
    [[maybe_unused]] static void set_field_FOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FOOD", "field_50075", "FOOD", "f_315399_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#FIRE_RESISTANT
    [[maybe_unused]] static jobject get_field_FIRE_RESISTANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "FIRE_RESISTANT", "field_50076", "FIRE_RESISTANT", "f_315720_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#FIRE_RESISTANT
    [[maybe_unused]] static void set_field_FIRE_RESISTANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "FIRE_RESISTANT", "field_50076", "FIRE_RESISTANT", "f_315720_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#TOOL
    [[maybe_unused]] static jobject get_field_TOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "TOOL", "field_50077", "TOOL", "f_314833_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#TOOL
    [[maybe_unused]] static void set_field_TOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "TOOL", "field_50077", "TOOL", "f_314833_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#STORED_ENCHANTMENTS
    [[maybe_unused]] static jobject get_field_STORED_ENCHANTMENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "STORED_ENCHANTMENTS", "field_49643", "STORED_ENCHANTMENTS", "f_314515_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#STORED_ENCHANTMENTS
    [[maybe_unused]] static void set_field_STORED_ENCHANTMENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "STORED_ENCHANTMENTS", "field_49643", "STORED_ENCHANTMENTS", "f_314515_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#DYED_COLOR
    [[maybe_unused]] static jobject get_field_DYED_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DYED_COLOR", "field_49644", "DYED_COLOR", "f_315011_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#DYED_COLOR
    [[maybe_unused]] static void set_field_DYED_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DYED_COLOR", "field_49644", "DYED_COLOR", "f_315011_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#MAP_COLOR
    [[maybe_unused]] static jobject get_field_MAP_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "MAP_COLOR", "field_49645", "MAP_COLOR", "f_315135_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#MAP_COLOR
    [[maybe_unused]] static void set_field_MAP_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "MAP_COLOR", "field_49645", "MAP_COLOR", "f_315135_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#MAP_ID
    [[maybe_unused]] static jobject get_field_MAP_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "MAP_ID", "field_49646", "MAP_ID", "f_315230_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#MAP_ID
    [[maybe_unused]] static void set_field_MAP_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "MAP_ID", "field_49646", "MAP_ID", "f_315230_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#MAP_DECORATIONS
    [[maybe_unused]] static jobject get_field_MAP_DECORATIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "MAP_DECORATIONS", "field_49647", "MAP_DECORATIONS", "f_316761_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#MAP_DECORATIONS
    [[maybe_unused]] static void set_field_MAP_DECORATIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "MAP_DECORATIONS", "field_49647", "MAP_DECORATIONS", "f_316761_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#MAP_POST_PROCESSING
    [[maybe_unused]] static jobject get_field_MAP_POST_PROCESSING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "MAP_POST_PROCESSING", "field_49648", "MAP_POST_PROCESSING", "f_316856_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#MAP_POST_PROCESSING
    [[maybe_unused]] static void set_field_MAP_POST_PROCESSING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "MAP_POST_PROCESSING", "field_49648", "MAP_POST_PROCESSING", "f_316856_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#CHARGED_PROJECTILES
    [[maybe_unused]] static jobject get_field_CHARGED_PROJECTILES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "CHARGED_PROJECTILES", "field_49649", "CHARGED_PROJECTILES", "f_314625_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#CHARGED_PROJECTILES
    [[maybe_unused]] static void set_field_CHARGED_PROJECTILES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "CHARGED_PROJECTILES", "field_49649", "CHARGED_PROJECTILES", "f_314625_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#BUNDLE_CONTENTS
    [[maybe_unused]] static jobject get_field_BUNDLE_CONTENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "BUNDLE_CONTENTS", "field_49650", "BUNDLE_CONTENTS", "f_315394_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#BUNDLE_CONTENTS
    [[maybe_unused]] static void set_field_BUNDLE_CONTENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "BUNDLE_CONTENTS", "field_49650", "BUNDLE_CONTENTS", "f_315394_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#POTION_CONTENTS
    [[maybe_unused]] static jobject get_field_POTION_CONTENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "POTION_CONTENTS", "field_49651", "POTION_CONTENTS", "f_314188_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#POTION_CONTENTS
    [[maybe_unused]] static void set_field_POTION_CONTENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "POTION_CONTENTS", "field_49651", "POTION_CONTENTS", "f_314188_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#SUSPICIOUS_STEW_EFFECTS
    [[maybe_unused]] static jobject get_field_SUSPICIOUS_STEW_EFFECTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SUSPICIOUS_STEW_EFFECTS", "field_49652", "SUSPICIOUS_STEW_EFFECTS", "f_316666_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#SUSPICIOUS_STEW_EFFECTS
    [[maybe_unused]] static void set_field_SUSPICIOUS_STEW_EFFECTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SUSPICIOUS_STEW_EFFECTS", "field_49652", "SUSPICIOUS_STEW_EFFECTS", "f_316666_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#WRITABLE_BOOK_CONTENT
    [[maybe_unused]] static jobject get_field_WRITABLE_BOOK_CONTENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "WRITABLE_BOOK_CONTENT", "field_49653", "WRITABLE_BOOK_CONTENT", "f_314472_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#WRITABLE_BOOK_CONTENT
    [[maybe_unused]] static void set_field_WRITABLE_BOOK_CONTENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "WRITABLE_BOOK_CONTENT", "field_49653", "WRITABLE_BOOK_CONTENT", "f_314472_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#WRITTEN_BOOK_CONTENT
    [[maybe_unused]] static jobject get_field_WRITTEN_BOOK_CONTENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "WRITTEN_BOOK_CONTENT", "field_49606", "WRITTEN_BOOK_CONTENT", "f_315840_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#WRITTEN_BOOK_CONTENT
    [[maybe_unused]] static void set_field_WRITTEN_BOOK_CONTENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "WRITTEN_BOOK_CONTENT", "field_49606", "WRITTEN_BOOK_CONTENT", "f_315840_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#TRIM
    [[maybe_unused]] static jobject get_field_TRIM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "TRIM", "field_49607", "TRIM", "f_315199_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#TRIM
    [[maybe_unused]] static void set_field_TRIM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "TRIM", "field_49607", "TRIM", "f_315199_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#DEBUG_STICK_STATE
    [[maybe_unused]] static jobject get_field_DEBUG_STICK_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "DEBUG_STICK_STATE", "field_49608", "DEBUG_STICK_STATE", "f_314352_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#DEBUG_STICK_STATE
    [[maybe_unused]] static void set_field_DEBUG_STICK_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "DEBUG_STICK_STATE", "field_49608", "DEBUG_STICK_STATE", "f_314352_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#ENTITY_DATA
    [[maybe_unused]] static jobject get_field_ENTITY_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "ENTITY_DATA", "field_49609", "ENTITY_DATA", "f_315141_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#ENTITY_DATA
    [[maybe_unused]] static void set_field_ENTITY_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "ENTITY_DATA", "field_49609", "ENTITY_DATA", "f_315141_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#BUCKET_ENTITY_DATA
    [[maybe_unused]] static jobject get_field_BUCKET_ENTITY_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "BUCKET_ENTITY_DATA", "field_49610", "BUCKET_ENTITY_DATA", "f_315524_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#BUCKET_ENTITY_DATA
    [[maybe_unused]] static void set_field_BUCKET_ENTITY_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "BUCKET_ENTITY_DATA", "field_49610", "BUCKET_ENTITY_DATA", "f_315524_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#BLOCK_ENTITY_DATA
    [[maybe_unused]] static jobject get_field_BLOCK_ENTITY_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "BLOCK_ENTITY_DATA", "field_49611", "BLOCK_ENTITY_DATA", "f_316520_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#BLOCK_ENTITY_DATA
    [[maybe_unused]] static void set_field_BLOCK_ENTITY_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "BLOCK_ENTITY_DATA", "field_49611", "BLOCK_ENTITY_DATA", "f_316520_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#INSTRUMENT
    [[maybe_unused]] static jobject get_field_INSTRUMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "INSTRUMENT", "field_49612", "INSTRUMENT", "f_316614_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#INSTRUMENT
    [[maybe_unused]] static void set_field_INSTRUMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "INSTRUMENT", "field_49612", "INSTRUMENT", "f_316614_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#OMINOUS_BOTTLE_AMPLIFIER
    [[maybe_unused]] static jobject get_field_OMINOUS_BOTTLE_AMPLIFIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "OMINOUS_BOTTLE_AMPLIFIER", "field_50238", "OMINOUS_BOTTLE_AMPLIFIER", "f_314953_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#OMINOUS_BOTTLE_AMPLIFIER
    [[maybe_unused]] static void set_field_OMINOUS_BOTTLE_AMPLIFIER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "OMINOUS_BOTTLE_AMPLIFIER", "field_50238", "OMINOUS_BOTTLE_AMPLIFIER", "f_314953_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#JUKEBOX_PLAYABLE
    [[maybe_unused]] static jobject get_field_JUKEBOX_PLAYABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "JUKEBOX_PLAYABLE", "field_52175", "JUKEBOX_PLAYABLE", "f_336668_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#JUKEBOX_PLAYABLE
    [[maybe_unused]] static void set_field_JUKEBOX_PLAYABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "JUKEBOX_PLAYABLE", "field_52175", "JUKEBOX_PLAYABLE", "f_336668_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#RECIPES
    [[maybe_unused]] static jobject get_field_RECIPES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "RECIPES", "field_49613", "RECIPES", "f_315842_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#RECIPES
    [[maybe_unused]] static void set_field_RECIPES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "RECIPES", "field_49613", "RECIPES", "f_315842_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#LODESTONE_TRACKER
    [[maybe_unused]] static jobject get_field_LODESTONE_TRACKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "LODESTONE_TRACKER", "field_49614", "LODESTONE_TRACKER", "f_314784_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#LODESTONE_TRACKER
    [[maybe_unused]] static void set_field_LODESTONE_TRACKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "LODESTONE_TRACKER", "field_49614", "LODESTONE_TRACKER", "f_314784_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#FIREWORK_EXPLOSION
    [[maybe_unused]] static jobject get_field_FIREWORK_EXPLOSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "FIREWORK_EXPLOSION", "field_49615", "FIREWORK_EXPLOSION", "f_315608_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#FIREWORK_EXPLOSION
    [[maybe_unused]] static void set_field_FIREWORK_EXPLOSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "FIREWORK_EXPLOSION", "field_49615", "FIREWORK_EXPLOSION", "f_315608_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#FIREWORKS
    [[maybe_unused]] static jobject get_field_FIREWORKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "FIREWORKS", "field_49616", "FIREWORKS", "f_316632_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#FIREWORKS
    [[maybe_unused]] static void set_field_FIREWORKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "FIREWORKS", "field_49616", "FIREWORKS", "f_316632_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#PROFILE
    [[maybe_unused]] static jobject get_field_PROFILE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "PROFILE", "field_49617", "PROFILE", "f_315901_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#PROFILE
    [[maybe_unused]] static void set_field_PROFILE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "PROFILE", "field_49617", "PROFILE", "f_315901_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#NOTE_BLOCK_SOUND
    [[maybe_unused]] static jobject get_field_NOTE_BLOCK_SOUND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "NOTE_BLOCK_SOUND", "field_49618", "NOTE_BLOCK_SOUND", "f_315959_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#NOTE_BLOCK_SOUND
    [[maybe_unused]] static void set_field_NOTE_BLOCK_SOUND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "NOTE_BLOCK_SOUND", "field_49618", "NOTE_BLOCK_SOUND", "f_315959_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#BANNER_PATTERNS
    [[maybe_unused]] static jobject get_field_BANNER_PATTERNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "BANNER_PATTERNS", "field_49619", "BANNER_PATTERNS", "f_314522_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#BANNER_PATTERNS
    [[maybe_unused]] static void set_field_BANNER_PATTERNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "BANNER_PATTERNS", "field_49619", "BANNER_PATTERNS", "f_314522_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#BASE_COLOR
    [[maybe_unused]] static jobject get_field_BASE_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "BASE_COLOR", "field_49620", "BASE_COLOR", "f_315952_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#BASE_COLOR
    [[maybe_unused]] static void set_field_BASE_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "BASE_COLOR", "field_49620", "BASE_COLOR", "f_315952_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#POT_DECORATIONS
    [[maybe_unused]] static jobject get_field_POT_DECORATIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "POT_DECORATIONS", "field_49621", "POT_DECORATIONS", "f_316536_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#POT_DECORATIONS
    [[maybe_unused]] static void set_field_POT_DECORATIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "POT_DECORATIONS", "field_49621", "POT_DECORATIONS", "f_316536_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#CONTAINER
    [[maybe_unused]] static jobject get_field_CONTAINER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "CONTAINER", "field_49622", "CONTAINER", "f_316065_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#CONTAINER
    [[maybe_unused]] static void set_field_CONTAINER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "CONTAINER", "field_49622", "CONTAINER", "f_316065_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#BLOCK_STATE
    [[maybe_unused]] static jobject get_field_BLOCK_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "BLOCK_STATE", "field_49623", "BLOCK_STATE", "f_315479_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#BLOCK_STATE
    [[maybe_unused]] static void set_field_BLOCK_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "BLOCK_STATE", "field_49623", "BLOCK_STATE", "f_315479_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#BEES
    [[maybe_unused]] static jobject get_field_BEES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "BEES", "field_49624", "BEES", "f_314066_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#BEES
    [[maybe_unused]] static void set_field_BEES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "BEES", "field_49624", "BEES", "f_314066_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#LOCK
    [[maybe_unused]] static jobject get_field_LOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "LOCK", "field_49625", "LOCK", "f_315242_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#LOCK
    [[maybe_unused]] static void set_field_LOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "LOCK", "field_49625", "LOCK", "f_315242_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#CONTAINER_LOOT
    [[maybe_unused]] static jobject get_field_CONTAINER_LOOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "CONTAINER_LOOT", "field_49626", "CONTAINER_LOOT", "f_314304_"), "Lkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#CONTAINER_LOOT
    [[maybe_unused]] static void set_field_CONTAINER_LOOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "CONTAINER_LOOT", "field_49626", "CONTAINER_LOOT", "f_314304_"), "Lkp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.DataComponentTypes#DEFAULT_ITEM_COMPONENTS
    [[maybe_unused]] static jobject get_field_DEFAULT_ITEM_COMPONENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "COMMON_ITEM_COMPONENTS", "field_49627", "DEFAULT_ITEM_COMPONENTS", "f_316136_"), "Lkm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.DataComponentTypes#DEFAULT_ITEM_COMPONENTS
    [[maybe_unused]] static void set_field_DEFAULT_ITEM_COMPONENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "COMMON_ITEM_COMPONENTS", "field_49627", "DEFAULT_ITEM_COMPONENTS", "f_316136_"), "Lkm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getDefault() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_57905", "getDefault", "m_318674_"), "(Ljz;)Lkp;");
    }

    static jobject getDefault(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getDefault();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_57906", "register", "m_319350_"), "(Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lkp;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_COMPONENT_DATACOMPONENTTYPES_HPP