// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMPONENT_TYPE_FIREWORKEXPLOSIONCOMPONENT_HPP
#define NET_MINECRAFT_COMPONENT_TYPE_FIREWORKEXPLOSIONCOMPONENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.component.type.FireworkExplosionComponent
 * Remapped: cxl
 */
namespace FireworkExplosionComponent {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cxl", "net/minecraft/world/item/component/FireworkExplosion", "net/minecraft/class_9283", "net/minecraft/component/type/FireworkExplosionComponent", "net/minecraft/src/C_313884_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.component.type.FireworkExplosionComponent#shape
    static jobject get_field_shape(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "shape", "comp_2386", "shape", "f_316547_"), "Lcxl$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.FireworkExplosionComponent#shape
    static void set_field_shape(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "shape", "comp_2386", "shape", "f_316547_"), "Lcxl$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.component.type.FireworkExplosionComponent#colors
    static jobject get_field_colors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "colors", "comp_2387", "colors", "f_316201_"), "Lit/unimi/dsi/fastutil/ints/IntList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.FireworkExplosionComponent#colors
    static void set_field_colors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "colors", "comp_2387", "colors", "f_316201_"), "Lit/unimi/dsi/fastutil/ints/IntList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.component.type.FireworkExplosionComponent#fadeColors
    static jobject get_field_fadeColors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "fadeColors", "comp_2388", "fadeColors", "f_314743_"), "Lit/unimi/dsi/fastutil/ints/IntList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.FireworkExplosionComponent#fadeColors
    static void set_field_fadeColors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "fadeColors", "comp_2388", "fadeColors", "f_314743_"), "Lit/unimi/dsi/fastutil/ints/IntList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.component.type.FireworkExplosionComponent#hasTrail
    static jboolean get_field_hasTrail(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "hasTrail", "comp_2389", "hasTrail", "f_316522_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.FireworkExplosionComponent#hasTrail
    static void set_field_hasTrail(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "hasTrail", "comp_2389", "hasTrail", "f_316522_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.component.type.FireworkExplosionComponent#hasTwinkle
    static jboolean get_field_hasTwinkle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "hasTwinkle", "comp_2390", "hasTwinkle", "f_316285_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.FireworkExplosionComponent#hasTwinkle
    static void set_field_hasTwinkle(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "hasTwinkle", "comp_2390", "hasTwinkle", "f_316285_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.component.type.FireworkExplosionComponent#DEFAULT
    [[maybe_unused]] static jobject get_field_DEFAULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT", "field_49315", "DEFAULT", "f_316800_"), "Lcxl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.type.FireworkExplosionComponent#DEFAULT
    [[maybe_unused]] static void set_field_DEFAULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT", "field_49315", "DEFAULT", "f_316800_"), "Lcxl;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.type.FireworkExplosionComponent#COLORS_CODEC
    [[maybe_unused]] static jobject get_field_COLORS_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "COLOR_LIST_CODEC", "field_49318", "COLORS_CODEC", "f_314508_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.type.FireworkExplosionComponent#COLORS_CODEC
    [[maybe_unused]] static void set_field_COLORS_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "COLOR_LIST_CODEC", "field_49318", "COLORS_CODEC", "f_314508_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.type.FireworkExplosionComponent#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CODEC", "field_49316", "CODEC", "f_315661_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.type.FireworkExplosionComponent#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CODEC", "field_49316", "CODEC", "f_315661_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.component.type.FireworkExplosionComponent#COLORS_PACKET_CODEC
    [[maybe_unused]] static jobject get_field_COLORS_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "COLOR_LIST_STREAM_CODEC", "field_49319", "COLORS_PACKET_CODEC", "f_316103_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.component.type.FireworkExplosionComponent#COLORS_PACKET_CODEC
    [[maybe_unused]] static void set_field_COLORS_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "COLOR_LIST_STREAM_CODEC", "field_49319", "COLORS_PACKET_CODEC", "f_316103_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.type.FireworkExplosionComponent#PACKET_CODEC
    [[maybe_unused]] static jobject get_field_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STREAM_CODEC", "field_49317", "PACKET_CODEC", "f_316358_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.type.FireworkExplosionComponent#PACKET_CODEC
    [[maybe_unused]] static void set_field_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STREAM_CODEC", "field_49317", "PACKET_CODEC", "f_316358_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.component.type.FireworkExplosionComponent#CUSTOM_COLOR_TEXT
    [[maybe_unused]] static jobject get_field_CUSTOM_COLOR_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "CUSTOM_COLOR_NAME", "field_49320", "CUSTOM_COLOR_TEXT", "f_315548_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.component.type.FireworkExplosionComponent#CUSTOM_COLOR_TEXT
    [[maybe_unused]] static void set_field_CUSTOM_COLOR_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "CUSTOM_COLOR_NAME", "field_49320", "CUSTOM_COLOR_TEXT", "f_315548_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_appendTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addToTooltip", "method_57409", "appendTooltip", "m_319025_"), "(Lcul$b;Ljava/util/function/Consumer;Lcwm;)V");
    }

    static void appendTooltip(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_appendTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_appendShapeTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addShapeNameTooltip", "method_57475", "appendShapeTooltip", "m_321829_"), "(Ljava/util/function/Consumer;)V");
    }

    static void appendShapeTooltip(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_appendShapeTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_appendOptionalTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalTooltip", "method_57477", "appendOptionalTooltip", "m_323234_"), "(Ljava/util/function/Consumer;)V");
    }

    static void appendOptionalTooltip(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_appendOptionalTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_appendColorsTooltipText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "appendColors", "method_57476", "appendColorsTooltipText", "m_322644_"), "(Lxn;Lit/unimi/dsi/fastutil/ints/IntList;)Lwz;");
    }

    static jobject appendColorsTooltipText(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_appendColorsTooltipText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getColorText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getColorName", "method_57472", "getColorText", "m_319213_"), "(I)Lwz;");
    }

    static jobject getColorText(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getColorText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_withFadeColors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withFadeColors", "method_57474", "withFadeColors", "m_319637_"), "(Lit/unimi/dsi/fastutil/ints/IntList;)Lcxl;");
    }

    static jobject withFadeColors(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withFadeColors();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__shape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shape", "comp_2386", "shape", "f_316547_"), "()Lcxl$a;");
    }

    static jobject _shape(const jobject& obj) {
                
       const auto methodID = methodID__shape();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__colors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "colors", "comp_2387", "colors", "f_316201_"), "()Lit/unimi/dsi/fastutil/ints/IntList;");
    }

    static jobject _colors(const jobject& obj) {
                
       const auto methodID = methodID__colors();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__fadeColors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "fadeColors", "comp_2388", "fadeColors", "f_314743_"), "()Lit/unimi/dsi/fastutil/ints/IntList;");
    }

    static jobject _fadeColors(const jobject& obj) {
                
       const auto methodID = methodID__fadeColors();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__hasTrail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "hasTrail", "comp_2389", "hasTrail", "f_316522_"), "()Z");
    }

    static jboolean _hasTrail(const jobject& obj) {
                
       const auto methodID = methodID__hasTrail();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__hasTwinkle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "hasTwinkle", "comp_2390", "hasTwinkle", "f_316285_"), "()Z");
    }

    static jboolean _hasTwinkle(const jobject& obj) {
                
       const auto methodID = methodID__hasTwinkle();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMPONENT_TYPE_FIREWORKEXPLOSIONCOMPONENT_HPP