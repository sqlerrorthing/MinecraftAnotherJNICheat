// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMPONENT_TYPE_TOOLCOMPONENT$RULE_HPP
#define NET_MINECRAFT_COMPONENT_TYPE_TOOLCOMPONENT$RULE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.component.type.ToolComponent$Rule
 * Remapped: cxx$a
 */
namespace ToolComponent$Rule {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cxx$a", "net/minecraft/world/item/component/Tool$Rule", "net/minecraft/class_9424$class_9425", "net/minecraft/component/type/ToolComponent$Rule", "net/minecraft/src/C_313874_$C_313342_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.component.type.ToolComponent$Rule#blocks
    static jobject get_field_blocks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "blocks", "comp_2501", "blocks", "f_316953_"), "Ljq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.component.type.ToolComponent$Rule#blocks
    static void set_field_blocks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "blocks", "comp_2501", "blocks", "f_316953_"), "Ljq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.component.type.ToolComponent$Rule#speed
    static jobject get_field_speed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "speed", "comp_2502", "speed", "f_314550_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.component.type.ToolComponent$Rule#speed
    static void set_field_speed(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "speed", "comp_2502", "speed", "f_314550_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.component.type.ToolComponent$Rule#correctForDrops
    static jobject get_field_correctForDrops(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "correctForDrops", "comp_2503", "correctForDrops", "f_315140_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.component.type.ToolComponent$Rule#correctForDrops
    static void set_field_correctForDrops(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "correctForDrops", "comp_2503", "correctForDrops", "f_315140_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.component.type.ToolComponent$Rule#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_50011", "CODEC", "f_314178_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.type.ToolComponent$Rule#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_50011", "CODEC", "f_314178_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.type.ToolComponent$Rule#PACKET_CODEC
    [[maybe_unused]] static jobject get_field_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STREAM_CODEC", "field_50012", "PACKET_CODEC", "f_314031_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.type.ToolComponent$Rule#PACKET_CODEC
    [[maybe_unused]] static void set_field_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STREAM_CODEC", "field_50012", "PACKET_CODEC", "f_314031_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_ofAlwaysDropping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "minesAndDrops", "method_58431", "ofAlwaysDropping", "m_321859_"), "(Ljava/util/List;F)Lcxx$a;");
    }

    static jobject ofAlwaysDropping(const jobject& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_ofAlwaysDropping();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__ofAlwaysDropping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "minesAndDrops", "method_58428", "ofAlwaysDropping", "m_321972_"), "(Lawu;F)Lcxx$a;");
    }

    static jobject _ofAlwaysDropping(const jobject& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__ofAlwaysDropping();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_ofNeverDropping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "deniesDrops", "method_58427", "ofNeverDropping", "m_323695_"), "(Lawu;)Lcxx$a;");
    }

    static jobject ofNeverDropping(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_ofNeverDropping();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "overrideSpeed", "method_58433", "of", "m_319062_"), "(Lawu;F)Lcxx$a;");
    }

    static jobject of(const jobject& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "overrideSpeed", "method_58434", "of", "m_322924_"), "(Ljava/util/List;F)Lcxx$a;");
    }

    static jobject _of(const jobject& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forTag", "method_58429", "of", "m_320355_"), "(Lawu;Ljava/util/Optional;Ljava/util/Optional;)Lcxx$a;");
    }

    static jobject __of(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID___of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID____of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forBlocks", "method_58432", "of", "m_322181_"), "(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)Lcxx$a;");
    }

    static jobject ___of(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID____of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__blocks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "blocks", "comp_2501", "blocks", "f_316953_"), "()Ljq;");
    }

    static jobject _blocks(const jobject& obj) {
                
       const auto methodID = methodID__blocks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__speed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "speed", "comp_2502", "speed", "f_314550_"), "()Ljava/util/Optional;");
    }

    static jobject _speed(const jobject& obj) {
                
       const auto methodID = methodID__speed();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__correctForDrops() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "correctForDrops", "comp_2503", "correctForDrops", "f_315140_"), "()Ljava/util/Optional;");
    }

    static jobject _correctForDrops(const jobject& obj) {
                
       const auto methodID = methodID__correctForDrops();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMPONENT_TYPE_TOOLCOMPONENT$RULE_HPP