// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMPONENT_TYPE_TOOLCOMPONENT_HPP
#define NET_MINECRAFT_COMPONENT_TYPE_TOOLCOMPONENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.component.type.ToolComponent
 * Remapped: cxx
 */
namespace ToolComponent {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cxx", "net/minecraft/world/item/component/Tool", "net/minecraft/class_9424", "net/minecraft/component/type/ToolComponent", "net/minecraft/src/C_313874_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.component.type.ToolComponent#rules
    static jobject get_field_rules(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "rules", "comp_2498", "rules", "f_316959_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.ToolComponent#rules
    static void set_field_rules(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "rules", "comp_2498", "rules", "f_316959_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.component.type.ToolComponent#defaultMiningSpeed
    static jfloat get_field_defaultMiningSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "defaultMiningSpeed", "comp_2499", "defaultMiningSpeed", "f_314531_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.ToolComponent#defaultMiningSpeed
    static void set_field_defaultMiningSpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "defaultMiningSpeed", "comp_2499", "defaultMiningSpeed", "f_314531_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.component.type.ToolComponent#damagePerBlock
    static jint get_field_damagePerBlock(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "damagePerBlock", "comp_2500", "damagePerBlock", "f_315325_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.ToolComponent#damagePerBlock
    static void set_field_damagePerBlock(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "damagePerBlock", "comp_2500", "damagePerBlock", "f_315325_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.component.type.ToolComponent#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_50009", "CODEC", "f_314592_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.type.ToolComponent#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_50009", "CODEC", "f_314592_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.type.ToolComponent#PACKET_CODEC
    [[maybe_unused]] static jobject get_field_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STREAM_CODEC", "field_50010", "PACKET_CODEC", "f_314459_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.type.ToolComponent#PACKET_CODEC
    [[maybe_unused]] static void set_field_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STREAM_CODEC", "field_50010", "PACKET_CODEC", "f_314459_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMiningSpeed", "method_58425", "getSpeed", "m_325036_"), "(Ldtc;)F");
    }

    static jfloat getSpeed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isCorrectForDrops() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isCorrectForDrops", "method_58426", "isCorrectForDrops", "m_322492_"), "(Ldtc;)Z");
    }

    static jboolean isCorrectForDrops(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isCorrectForDrops();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__rules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "rules", "comp_2498", "rules", "f_316959_"), "()Ljava/util/List;");
    }

    static jobject _rules(const jobject& obj) {
                
       const auto methodID = methodID__rules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__defaultMiningSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "defaultMiningSpeed", "comp_2499", "defaultMiningSpeed", "f_314531_"), "()F");
    }

    static jfloat _defaultMiningSpeed(const jobject& obj) {
                
       const auto methodID = methodID__defaultMiningSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__damagePerBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "damagePerBlock", "comp_2500", "damagePerBlock", "f_315325_"), "()I");
    }

    static jint _damagePerBlock(const jobject& obj) {
                
       const auto methodID = methodID__damagePerBlock();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMPONENT_TYPE_TOOLCOMPONENT_HPP