// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMPONENT_TYPE_POTIONCONTENTSCOMPONENT_HPP
#define NET_MINECRAFT_COMPONENT_TYPE_POTIONCONTENTSCOMPONENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.component.type.PotionContentsComponent
 * Remapped: cwu
 */
namespace PotionContentsComponent {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cwu", "net/minecraft/world/item/alchemy/PotionContents", "net/minecraft/class_1844", "net/minecraft/component/type/PotionContentsComponent", "net/minecraft/src/C_313529_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.component.type.PotionContentsComponent#potion
    static jobject get_field_potion(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "potion", "comp_2378", "potion", "f_317059_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.PotionContentsComponent#potion
    static void set_field_potion(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "potion", "comp_2378", "potion", "f_317059_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.component.type.PotionContentsComponent#customColor
    static jobject get_field_customColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "customColor", "comp_2379", "customColor", "f_314927_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.PotionContentsComponent#customColor
    static void set_field_customColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "customColor", "comp_2379", "customColor", "f_314927_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.component.type.PotionContentsComponent#customEffects
    static jobject get_field_customEffects(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "customEffects", "comp_2380", "customEffects", "f_315369_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.PotionContentsComponent#customEffects
    static void set_field_customEffects(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "customEffects", "comp_2380", "customEffects", "f_315369_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.component.type.PotionContentsComponent#DEFAULT
    [[maybe_unused]] static jobject get_field_DEFAULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_49274", "DEFAULT", "f_313984_"), "Lcwu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.type.PotionContentsComponent#DEFAULT
    [[maybe_unused]] static void set_field_DEFAULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_49274", "DEFAULT", "f_313984_"), "Lcwu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.component.type.PotionContentsComponent#NONE_TEXT
    [[maybe_unused]] static jobject get_field_NONE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NO_EFFECT", "field_25817", "NONE_TEXT", "f_315730_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.component.type.PotionContentsComponent#NONE_TEXT
    [[maybe_unused]] static void set_field_NONE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NO_EFFECT", "field_25817", "NONE_TEXT", "f_315730_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.component.type.PotionContentsComponent#EFFECTLESS_COLOR
    [[maybe_unused]] static jint get_field_EFFECTLESS_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "BASE_POTION_COLOR", "field_49277", "EFFECTLESS_COLOR", "f_315879_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.component.type.PotionContentsComponent#EFFECTLESS_COLOR
    [[maybe_unused]] static void set_field_EFFECTLESS_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "BASE_POTION_COLOR", "field_49277", "EFFECTLESS_COLOR", "f_315879_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.component.type.PotionContentsComponent#BASE_CODEC
    [[maybe_unused]] static jobject get_field_BASE_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "FULL_CODEC", "field_49749", "BASE_CODEC", "f_316625_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.component.type.PotionContentsComponent#BASE_CODEC
    [[maybe_unused]] static void set_field_BASE_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "FULL_CODEC", "field_49749", "BASE_CODEC", "f_316625_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.type.PotionContentsComponent#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_49275", "CODEC", "f_315880_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.type.PotionContentsComponent#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_49275", "CODEC", "f_315880_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.component.type.PotionContentsComponent#PACKET_CODEC
    [[maybe_unused]] static jobject get_field_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "STREAM_CODEC", "field_49276", "PACKET_CODEC", "f_315823_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.component.type.PotionContentsComponent#PACKET_CODEC
    [[maybe_unused]] static void set_field_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "STREAM_CODEC", "field_49276", "PACKET_CODEC", "f_315823_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createItemStack", "method_57400", "createStack", "m_324840_"), "(Lcul;Ljm;)Lcuq;");
    }

    static jobject createStack(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createStack();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_matches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_57401", "matches", "m_323649_"), "(Ljm;)Z");
    }

    static jboolean matches(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_matches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAllEffects", "method_57397", "getEffects", "m_319638_"), "()Ljava/lang/Iterable;");
    }

    static jobject getEffects(const jobject& obj) {
                
       const auto methodID = methodID_getEffects();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_forEachEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forEachEffect", "method_57402", "forEachEffect", "m_325077_"), "(Ljava/util/function/Consumer;)V");
    }

    static void forEachEffect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEachEffect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_with() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "withPotion", "method_57403", "with", "m_324670_"), "(Ljm;)Lcwu;");
    }

    static jobject with(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_with();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__with() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withEffectAdded", "method_57398", "with", "m_324984_"), "(Lbrz;)Lcwu;");
    }

    static jobject _with(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__with();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getColor", "method_8064", "getColor", "m_318943_"), "()I");
    }

    static jint getColor(const jobject& obj) {
                
       const auto methodID = methodID_getColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__getColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getColor", "method_8062", "getColor", "m_318851_"), "(Ljm;)I");
    }

    static jint _getColor(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__getColor();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID___getColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getColor", "method_8055", "getColor", "m_324402_"), "(Ljava/lang/Iterable;)I");
    }

    static jint __getColor(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID___getColor();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_mixColors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getColorOptional", "method_58111", "mixColors", "m_320220_"), "(Ljava/lang/Iterable;)Ljava/util/OptionalInt;");
    }

    static jobject mixColors(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_mixColors();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "hasEffects", "method_57405", "hasEffects", "m_323528_"), "()Z");
    }

    static jboolean hasEffects(const jobject& obj) {
                
       const auto methodID = methodID_hasEffects();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__customEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "customEffects", "comp_2380", "customEffects", "m_321614_"), "()Ljava/util/List;");
    }

    static jobject _customEffects(const jobject& obj) {
                
       const auto methodID = methodID__customEffects();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_buildTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPotionTooltip", "method_47372", "buildTooltip", "m_324933_"), "(Ljava/util/function/Consumer;FF)V");
    }

    static void buildTooltip(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_buildTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__buildTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addPotionTooltip", "method_8065", "buildTooltip", "m_319937_"), "(Ljava/lang/Iterable;Ljava/util/function/Consumer;FF)V");
    }

    static void _buildTooltip(const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jfloat& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__buildTooltip();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__potion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "potion", "comp_2378", "potion", "f_317059_"), "()Ljava/util/Optional;");
    }

    static jobject _potion(const jobject& obj) {
                
       const auto methodID = methodID__potion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__customColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "customColor", "comp_2379", "customColor", "f_314927_"), "()Ljava/util/Optional;");
    }

    static jobject _customColor(const jobject& obj) {
                
       const auto methodID = methodID__customColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMPONENT_TYPE_POTIONCONTENTSCOMPONENT_HPP