// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_COMPONENT_TYPE_BUNDLECONTENTSCOMPONENT$BUILDER_HPP
#define NET_MINECRAFT_COMPONENT_TYPE_BUNDLECONTENTSCOMPONENT$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.component.type.BundleContentsComponent$Builder
 * Remapped: cxf$a
 */
namespace BundleContentsComponent$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cxf$a", "net/minecraft/world/item/component/BundleContents$Mutable", "net/minecraft/class_9276$class_9277", "net/minecraft/component/type/BundleContentsComponent$Builder", "net/minecraft/src/C_313255_$C_313858_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.component.type.BundleContentsComponent$Builder#stacks
    static jobject get_field_stacks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "items", "field_49296", "stacks", "f_314198_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.BundleContentsComponent$Builder#stacks
    static void set_field_stacks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "items", "field_49296", "stacks", "f_314198_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.component.type.BundleContentsComponent$Builder#occupancy
    static jobject get_field_occupancy(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "weight", "field_49297", "occupancy", "f_315301_"), "Lorg/apache/commons/lang3/math/Fraction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.component.type.BundleContentsComponent$Builder#occupancy
    static void set_field_occupancy(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "weight", "field_49297", "occupancy", "f_315301_"), "Lorg/apache/commons/lang3/math/Fraction;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clearItems", "method_59709", "clear", "m_321086_"), "()Lcxf$a;");
    }

    static jobject clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addInternal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "findStackIndex", "method_57434", "addInternal", "m_324669_"), "(Lcuq;)I");
    }

    static jint addInternal(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addInternal();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMaxAllowed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getMaxAmountToAdd", "method_57436", "getMaxAllowed", "m_323004_"), "(Lcuq;)I");
    }

    static jint getMaxAllowed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getMaxAllowed();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryInsert", "method_57432", "add", "m_319811_"), "(Lcuq;)I");
    }

    static jint add(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryTransfer", "method_57431", "add", "m_325088_"), "(Lcrq;Lcmx;)I");
    }

    static jint _add(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__add();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_removeFirst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "removeOne", "method_57430", "removeFirst", "m_324664_"), "()Lcuq;");
    }

    static jobject removeFirst(const jobject& obj) {
                
       const auto methodID = methodID_removeFirst();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOccupancy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "weight", "method_57433", "getOccupancy", "m_321048_"), "()Lorg/apache/commons/lang3/math/Fraction;");
    }

    static jobject getOccupancy(const jobject& obj) {
                
       const auto methodID = methodID_getOccupancy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "toImmutable", "method_57435", "build", "m_322369_"), "()Lcxf;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_COMPONENT_TYPE_BUNDLECONTENTSCOMPONENT$BUILDER_HPP