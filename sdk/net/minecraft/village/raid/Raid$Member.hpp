// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_VILLAGE_RAID_RAID$MEMBER_HPP
#define NET_MINECRAFT_VILLAGE_RAID_RAID$MEMBER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.village.raid.Raid$Member
 * Remapped: coi$b
 */
namespace Raid$Member {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("coi$b", "net/minecraft/world/entity/raid/Raid$RaiderType", "net/minecraft/class_3765$class_3766", "net/minecraft/village/raid/Raid$Member", "net/minecraft/src/C_1185_$C_1188_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.village.raid.Raid$Member#VINDICATOR
    [[maybe_unused]] static jobject get_field_VINDICATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "VINDICATOR", "field_16631", "VINDICATOR", "VINDICATOR"), "Lcoi$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.raid.Raid$Member#VINDICATOR
    [[maybe_unused]] static void set_field_VINDICATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "VINDICATOR", "field_16631", "VINDICATOR", "VINDICATOR"), "Lcoi$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.raid.Raid$Member#EVOKER
    [[maybe_unused]] static jobject get_field_EVOKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EVOKER", "field_16634", "EVOKER", "EVOKER"), "Lcoi$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.raid.Raid$Member#EVOKER
    [[maybe_unused]] static void set_field_EVOKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EVOKER", "field_16634", "EVOKER", "EVOKER"), "Lcoi$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.raid.Raid$Member#PILLAGER
    [[maybe_unused]] static jobject get_field_PILLAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PILLAGER", "field_16633", "PILLAGER", "PILLAGER"), "Lcoi$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.raid.Raid$Member#PILLAGER
    [[maybe_unused]] static void set_field_PILLAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PILLAGER", "field_16633", "PILLAGER", "PILLAGER"), "Lcoi$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.raid.Raid$Member#WITCH
    [[maybe_unused]] static jobject get_field_WITCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "WITCH", "field_16635", "WITCH", "WITCH"), "Lcoi$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.raid.Raid$Member#WITCH
    [[maybe_unused]] static void set_field_WITCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "WITCH", "field_16635", "WITCH", "WITCH"), "Lcoi$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.raid.Raid$Member#RAVAGER
    [[maybe_unused]] static jobject get_field_RAVAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "RAVAGER", "field_16630", "RAVAGER", "RAVAGER"), "Lcoi$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.raid.Raid$Member#RAVAGER
    [[maybe_unused]] static void set_field_RAVAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "RAVAGER", "field_16630", "RAVAGER", "RAVAGER"), "Lcoi$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.village.raid.Raid$Member#VALUES
    [[maybe_unused]] static jobject get_field_VALUES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "VALUES", "field_16636", "VALUES", "f_37813_"), "[Lcoi$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.village.raid.Raid$Member#VALUES
    [[maybe_unused]] static void set_field_VALUES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "VALUES", "field_16636", "VALUES", "f_37813_"), "[Lcoi$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.village.raid.Raid$Member#type
    static jobject get_field_type(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "entityType", "field_16629", "type", "f_37814_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.village.raid.Raid$Member#type
    static void set_field_type(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "entityType", "field_16629", "type", "f_37814_"), "Lbsx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.village.raid.Raid$Member#countInWave
    static jint get_field_countInWave(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "spawnsPerWaveBeforeBonus", "field_16628", "countInWave", "f_37815_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.village.raid.Raid$Member#countInWave
    static void set_field_countInWave(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "spawnsPerWaveBeforeBonus", "field_16628", "countInWave", "f_37815_"), "[I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lcoi$b;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lcoi$b;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_VILLAGE_RAID_RAID$MEMBER_HPP