// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_VILLAGE_TRADEOFFERS_HPP
#define NET_MINECRAFT_VILLAGE_TRADEOFFERS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.village.TradeOffers
 * Remapped: cmo
 */
namespace TradeOffers {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cmo", "net/minecraft/world/entity/npc/VillagerTrades", "net/minecraft/class_3853", "net/minecraft/village/TradeOffers", "net/minecraft/src/C_1122_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.village.TradeOffers#DEFAULT_MAX_USES
    [[maybe_unused]] static jint get_field_DEFAULT_MAX_USES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DEFAULT_SUPPLY", "field_30615", "DEFAULT_MAX_USES", "f_150029_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#DEFAULT_MAX_USES
    [[maybe_unused]] static void set_field_DEFAULT_MAX_USES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DEFAULT_SUPPLY", "field_30615", "DEFAULT_MAX_USES", "f_150029_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#COMMON_MAX_USES
    [[maybe_unused]] static jint get_field_COMMON_MAX_USES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "COMMON_ITEMS_SUPPLY", "field_30616", "COMMON_MAX_USES", "f_150030_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#COMMON_MAX_USES
    [[maybe_unused]] static void set_field_COMMON_MAX_USES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "COMMON_ITEMS_SUPPLY", "field_30616", "COMMON_MAX_USES", "f_150030_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#RARE_MAX_USES
    [[maybe_unused]] static jint get_field_RARE_MAX_USES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "UNCOMMON_ITEMS_SUPPLY", "field_30617", "RARE_MAX_USES", "f_150031_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#RARE_MAX_USES
    [[maybe_unused]] static void set_field_RARE_MAX_USES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "UNCOMMON_ITEMS_SUPPLY", "field_30617", "RARE_MAX_USES", "f_150031_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#NOVICE_SELL_XP
    [[maybe_unused]] static jint get_field_NOVICE_SELL_XP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "XP_LEVEL_1_SELL", "field_30618", "NOVICE_SELL_XP", "f_150032_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#NOVICE_SELL_XP
    [[maybe_unused]] static void set_field_NOVICE_SELL_XP(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "XP_LEVEL_1_SELL", "field_30618", "NOVICE_SELL_XP", "f_150032_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#NOVICE_BUY_XP
    [[maybe_unused]] static jint get_field_NOVICE_BUY_XP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "XP_LEVEL_1_BUY", "field_30619", "NOVICE_BUY_XP", "f_150033_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#NOVICE_BUY_XP
    [[maybe_unused]] static void set_field_NOVICE_BUY_XP(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "XP_LEVEL_1_BUY", "field_30619", "NOVICE_BUY_XP", "f_150033_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#APPRENTICE_SELL_XP
    [[maybe_unused]] static jint get_field_APPRENTICE_SELL_XP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "XP_LEVEL_2_SELL", "field_30620", "APPRENTICE_SELL_XP", "f_150034_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#APPRENTICE_SELL_XP
    [[maybe_unused]] static void set_field_APPRENTICE_SELL_XP(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "XP_LEVEL_2_SELL", "field_30620", "APPRENTICE_SELL_XP", "f_150034_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#APPRENTICE_BUY_XP
    [[maybe_unused]] static jint get_field_APPRENTICE_BUY_XP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "XP_LEVEL_2_BUY", "field_30621", "APPRENTICE_BUY_XP", "f_150035_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#APPRENTICE_BUY_XP
    [[maybe_unused]] static void set_field_APPRENTICE_BUY_XP(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "XP_LEVEL_2_BUY", "field_30621", "APPRENTICE_BUY_XP", "f_150035_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#JOURNEYMAN_SELL_XP
    [[maybe_unused]] static jint get_field_JOURNEYMAN_SELL_XP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "XP_LEVEL_3_SELL", "field_30622", "JOURNEYMAN_SELL_XP", "f_150036_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#JOURNEYMAN_SELL_XP
    [[maybe_unused]] static void set_field_JOURNEYMAN_SELL_XP(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "XP_LEVEL_3_SELL", "field_30622", "JOURNEYMAN_SELL_XP", "f_150036_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#JOURNEYMAN_BUY_XP
    [[maybe_unused]] static jint get_field_JOURNEYMAN_BUY_XP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "XP_LEVEL_3_BUY", "field_30623", "JOURNEYMAN_BUY_XP", "f_150037_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#JOURNEYMAN_BUY_XP
    [[maybe_unused]] static void set_field_JOURNEYMAN_BUY_XP(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "XP_LEVEL_3_BUY", "field_30623", "JOURNEYMAN_BUY_XP", "f_150037_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#EXPERT_SELL_XP
    [[maybe_unused]] static jint get_field_EXPERT_SELL_XP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "XP_LEVEL_4_SELL", "field_30624", "EXPERT_SELL_XP", "f_150038_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#EXPERT_SELL_XP
    [[maybe_unused]] static void set_field_EXPERT_SELL_XP(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "XP_LEVEL_4_SELL", "field_30624", "EXPERT_SELL_XP", "f_150038_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#EXPERT_BUY_XP
    [[maybe_unused]] static jint get_field_EXPERT_BUY_XP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "XP_LEVEL_4_BUY", "field_30625", "EXPERT_BUY_XP", "f_150039_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#EXPERT_BUY_XP
    [[maybe_unused]] static void set_field_EXPERT_BUY_XP(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "XP_LEVEL_4_BUY", "field_30625", "EXPERT_BUY_XP", "f_150039_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#MASTER_TRADE_XP
    [[maybe_unused]] static jint get_field_MASTER_TRADE_XP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "XP_LEVEL_5_TRADE", "field_30626", "MASTER_TRADE_XP", "f_150040_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#MASTER_TRADE_XP
    [[maybe_unused]] static void set_field_MASTER_TRADE_XP(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "XP_LEVEL_5_TRADE", "field_30626", "MASTER_TRADE_XP", "f_150040_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#LOW_PRICE_MULTIPLIER
    [[maybe_unused]] static jfloat get_field_LOW_PRICE_MULTIPLIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "LOW_TIER_PRICE_MULTIPLIER", "field_30627", "LOW_PRICE_MULTIPLIER", "f_150041_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#LOW_PRICE_MULTIPLIER
    [[maybe_unused]] static void set_field_LOW_PRICE_MULTIPLIER(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "LOW_TIER_PRICE_MULTIPLIER", "field_30627", "LOW_PRICE_MULTIPLIER", "f_150041_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#HIGH_PRICE_MULTIPLIER
    [[maybe_unused]] static jfloat get_field_HIGH_PRICE_MULTIPLIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "HIGH_TIER_PRICE_MULTIPLIER", "field_30628", "HIGH_PRICE_MULTIPLIER", "f_150042_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#HIGH_PRICE_MULTIPLIER
    [[maybe_unused]] static void set_field_HIGH_PRICE_MULTIPLIER(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "HIGH_TIER_PRICE_MULTIPLIER", "field_30628", "HIGH_PRICE_MULTIPLIER", "f_150042_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.TradeOffers#PROFESSION_TO_LEVELED_TRADE
    [[maybe_unused]] static jobject get_field_PROFESSION_TO_LEVELED_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TRADES", "field_17067", "PROFESSION_TO_LEVELED_TRADE", "f_35627_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.TradeOffers#PROFESSION_TO_LEVELED_TRADE
    [[maybe_unused]] static void set_field_PROFESSION_TO_LEVELED_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TRADES", "field_17067", "PROFESSION_TO_LEVELED_TRADE", "f_35627_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.TradeOffers#WANDERING_TRADER_TRADES
    [[maybe_unused]] static jobject get_field_WANDERING_TRADER_TRADES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WANDERING_TRADER_TRADES", "field_17724", "WANDERING_TRADER_TRADES", "f_35628_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.TradeOffers#WANDERING_TRADER_TRADES
    [[maybe_unused]] static void set_field_WANDERING_TRADER_TRADES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WANDERING_TRADER_TRADES", "field_17724", "WANDERING_TRADER_TRADES", "f_35628_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#SELL_DESERT_VILLAGE_MAP_TRADE
    [[maybe_unused]] static jobject get_field_SELL_DESERT_VILLAGE_MAP_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "DESERT_MAP", "field_46167", "SELL_DESERT_VILLAGE_MAP_TRADE", "f_291708_"), "Lcmo$l;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#SELL_DESERT_VILLAGE_MAP_TRADE
    [[maybe_unused]] static void set_field_SELL_DESERT_VILLAGE_MAP_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "DESERT_MAP", "field_46167", "SELL_DESERT_VILLAGE_MAP_TRADE", "f_291708_"), "Lcmo$l;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#SELL_SAVANNA_VILLAGE_MAP_TRADE
    [[maybe_unused]] static jobject get_field_SELL_SAVANNA_VILLAGE_MAP_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SAVANNA_MAP", "field_46168", "SELL_SAVANNA_VILLAGE_MAP_TRADE", "f_290781_"), "Lcmo$l;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#SELL_SAVANNA_VILLAGE_MAP_TRADE
    [[maybe_unused]] static void set_field_SELL_SAVANNA_VILLAGE_MAP_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SAVANNA_MAP", "field_46168", "SELL_SAVANNA_VILLAGE_MAP_TRADE", "f_290781_"), "Lcmo$l;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#SELL_PLAINS_VILLAGE_MAP_TRADE
    [[maybe_unused]] static jobject get_field_SELL_PLAINS_VILLAGE_MAP_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "PLAINS_MAP", "field_46169", "SELL_PLAINS_VILLAGE_MAP_TRADE", "f_290896_"), "Lcmo$l;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#SELL_PLAINS_VILLAGE_MAP_TRADE
    [[maybe_unused]] static void set_field_SELL_PLAINS_VILLAGE_MAP_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "PLAINS_MAP", "field_46169", "SELL_PLAINS_VILLAGE_MAP_TRADE", "f_290896_"), "Lcmo$l;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#SELL_TAIGA_VILLAGE_MAP_TRADE
    [[maybe_unused]] static jobject get_field_SELL_TAIGA_VILLAGE_MAP_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "TAIGA_MAP", "field_46170", "SELL_TAIGA_VILLAGE_MAP_TRADE", "f_291053_"), "Lcmo$l;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#SELL_TAIGA_VILLAGE_MAP_TRADE
    [[maybe_unused]] static void set_field_SELL_TAIGA_VILLAGE_MAP_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "TAIGA_MAP", "field_46170", "SELL_TAIGA_VILLAGE_MAP_TRADE", "f_291053_"), "Lcmo$l;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#SELL_SNOWY_VILLAGE_MAP_TRADE
    [[maybe_unused]] static jobject get_field_SELL_SNOWY_VILLAGE_MAP_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SNOWY_MAP", "field_46171", "SELL_SNOWY_VILLAGE_MAP_TRADE", "f_290428_"), "Lcmo$l;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#SELL_SNOWY_VILLAGE_MAP_TRADE
    [[maybe_unused]] static void set_field_SELL_SNOWY_VILLAGE_MAP_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SNOWY_MAP", "field_46171", "SELL_SNOWY_VILLAGE_MAP_TRADE", "f_290428_"), "Lcmo$l;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#SELL_JUNGLE_TEMPLE_MAP_TRADE
    [[maybe_unused]] static jobject get_field_SELL_JUNGLE_TEMPLE_MAP_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "JUNGLE_MAP", "field_46172", "SELL_JUNGLE_TEMPLE_MAP_TRADE", "f_291026_"), "Lcmo$l;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#SELL_JUNGLE_TEMPLE_MAP_TRADE
    [[maybe_unused]] static void set_field_SELL_JUNGLE_TEMPLE_MAP_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "JUNGLE_MAP", "field_46172", "SELL_JUNGLE_TEMPLE_MAP_TRADE", "f_291026_"), "Lcmo$l;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.village.TradeOffers#SELL_SWAMP_HUT_MAP_TRADE
    [[maybe_unused]] static jobject get_field_SELL_SWAMP_HUT_MAP_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SWAMP_MAP", "field_46173", "SELL_SWAMP_HUT_MAP_TRADE", "f_290383_"), "Lcmo$l;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.TradeOffers#SELL_SWAMP_HUT_MAP_TRADE
    [[maybe_unused]] static void set_field_SELL_SWAMP_HUT_MAP_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SWAMP_MAP", "field_46173", "SELL_SWAMP_HUT_MAP_TRADE", "f_290383_"), "Lcmo$l;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.TradeOffers#REBALANCED_PROFESSION_TO_LEVELED_TRADE
    [[maybe_unused]] static jobject get_field_REBALANCED_PROFESSION_TO_LEVELED_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "EXPERIMENTAL_TRADES", "field_45128", "REBALANCED_PROFESSION_TO_LEVELED_TRADE", "f_290516_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.TradeOffers#REBALANCED_PROFESSION_TO_LEVELED_TRADE
    [[maybe_unused]] static void set_field_REBALANCED_PROFESSION_TO_LEVELED_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "EXPERIMENTAL_TRADES", "field_45128", "REBALANCED_PROFESSION_TO_LEVELED_TRADE", "f_290516_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.TradeOffers#REBALANCED_WANDERING_TRADER_TRADES
    [[maybe_unused]] static jobject get_field_REBALANCED_WANDERING_TRADER_TRADES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "EXPERIMENTAL_WANDERING_TRADER_TRADES", "field_45129", "REBALANCED_WANDERING_TRADER_TRADES", "f_291388_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.TradeOffers#REBALANCED_WANDERING_TRADER_TRADES
    [[maybe_unused]] static void set_field_REBALANCED_WANDERING_TRADER_TRADES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "EXPERIMENTAL_WANDERING_TRADER_TRADES", "field_45129", "REBALANCED_WANDERING_TRADER_TRADES", "f_291388_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createLibrarianTradeFactory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "commonBooks", "method_52552", "createLibrarianTradeFactory", "m_295101_"), "(I)Lcmo$g;");
    }

    static jobject createLibrarianTradeFactory(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createLibrarianTradeFactory();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createMasterLibrarianTradeFactory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "specialBooks", "method_52551", "createMasterLibrarianTradeFactory", "m_293291_"), "()Lcmo$g;");
    }

    static jobject createMasterLibrarianTradeFactory() {
       const auto clazz = self();
       const auto methodID = methodID_createMasterLibrarianTradeFactory();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_copyToFastUtilMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "toIntMap", "method_16928", "copyToFastUtilMap", "m_35630_"), "(Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
    }

    static jobject copyToFastUtilMap(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_copyToFastUtilMap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createPotion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "potionCost", "method_57311", "createPotion", "m_318853_"), "(Ljm;)Ldbs;");
    }

    static jobject createPotion(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createPotion();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createPotionStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "potion", "method_52553", "createPotionStack", "m_293864_"), "(Ljm;)Lcuq;");
    }

    static jobject createPotionStack(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createPotionStack();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_VILLAGE_TRADEOFFERS_HPP