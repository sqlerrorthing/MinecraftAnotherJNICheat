// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_VILLAGE_ZOMBIESIEGEMANAGER_HPP
#define NET_MINECRAFT_VILLAGE_ZOMBIESIEGEMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.village.ZombieSiegeManager
 * Remapped: ceq
 */
namespace ZombieSiegeManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ceq", "net/minecraft/world/entity/ai/village/VillageSiege", "net/minecraft/class_1419", "net/minecraft/village/ZombieSiegeManager", "net/minecraft/src/C_785_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.village.ZombieSiegeManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_26390", "LOGGER", "f_26997_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.ZombieSiegeManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_26390", "LOGGER", "f_26997_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.village.ZombieSiegeManager#spawned
    static jboolean get_field_spawned(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "hasSetupSiege", "field_6725", "spawned", "f_26998_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.village.ZombieSiegeManager#spawned
    static void set_field_spawned(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "hasSetupSiege", "field_6725", "spawned", "f_26998_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.village.ZombieSiegeManager#state
    static jobject get_field_state(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "siegeState", "field_18479", "state", "f_26999_"), "Lceq$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.village.ZombieSiegeManager#state
    static void set_field_state(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "siegeState", "field_18479", "state", "f_26999_"), "Lceq$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.village.ZombieSiegeManager#remaining
    static jint get_field_remaining(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "zombiesToSpawn", "field_6723", "remaining", "f_27000_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.village.ZombieSiegeManager#remaining
    static void set_field_remaining(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "zombiesToSpawn", "field_6723", "remaining", "f_27000_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.village.ZombieSiegeManager#countdown
    static jint get_field_countdown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "nextSpawnTime", "field_6722", "countdown", "f_27001_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.village.ZombieSiegeManager#countdown
    static void set_field_countdown(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "nextSpawnTime", "field_6722", "countdown", "f_27001_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.village.ZombieSiegeManager#startX
    static jint get_field_startX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "spawnX", "field_6721", "startX", "f_27002_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.village.ZombieSiegeManager#startX
    static void set_field_startX(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "spawnX", "field_6721", "startX", "f_27002_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.village.ZombieSiegeManager#startY
    static jint get_field_startY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "spawnY", "field_6720", "startY", "f_27003_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.village.ZombieSiegeManager#startY
    static void set_field_startY(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "spawnY", "field_6720", "startY", "f_27003_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.village.ZombieSiegeManager#startZ
    static jint get_field_startZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "spawnZ", "field_6719", "startZ", "f_27004_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.village.ZombieSiegeManager#startZ
    static void set_field_startZ(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "spawnZ", "field_6719", "startZ", "f_27004_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_spawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_6445", "spawn", "m_7995_"), "(Laqu;ZZ)I");
    }

    static jint spawn(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_spawn();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__spawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryToSetupSiege", "method_6446", "spawn", "m_27007_"), "(Laqu;)Z");
    }

    static jboolean _spawn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__spawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_trySpawnZombie() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "trySpawn", "method_6447", "trySpawnZombie", "m_27016_"), "(Laqu;)V");
    }

    static void trySpawnZombie(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_trySpawnZombie();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSpawnVector() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findRandomSpawnPos", "method_6448", "getSpawnVector", "m_27009_"), "(Laqu;Ljd;)Lexc;");
    }

    static jobject getSpawnVector(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getSpawnVector();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_VILLAGE_ZOMBIESIEGEMANAGER_HPP