// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_VILLAGE_VILLAGERTYPE_HPP
#define NET_MINECRAFT_VILLAGE_VILLAGERTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.village.VillagerType
 * Remapped: cmp
 */
namespace VillagerType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cmp", "net/minecraft/world/entity/npc/VillagerType", "net/minecraft/class_3854", "net/minecraft/village/VillagerType", "net/minecraft/src/C_1134_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.village.VillagerType#DESERT
    [[maybe_unused]] static jobject get_field_DESERT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DESERT", "field_17071", "DESERT", "f_35819_"), "Lcmp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.VillagerType#DESERT
    [[maybe_unused]] static void set_field_DESERT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DESERT", "field_17071", "DESERT", "f_35819_"), "Lcmp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.VillagerType#JUNGLE
    [[maybe_unused]] static jobject get_field_JUNGLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "JUNGLE", "field_17072", "JUNGLE", "f_35820_"), "Lcmp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.VillagerType#JUNGLE
    [[maybe_unused]] static void set_field_JUNGLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "JUNGLE", "field_17072", "JUNGLE", "f_35820_"), "Lcmp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.VillagerType#PLAINS
    [[maybe_unused]] static jobject get_field_PLAINS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PLAINS", "field_17073", "PLAINS", "f_35821_"), "Lcmp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.VillagerType#PLAINS
    [[maybe_unused]] static void set_field_PLAINS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PLAINS", "field_17073", "PLAINS", "f_35821_"), "Lcmp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.VillagerType#SAVANNA
    [[maybe_unused]] static jobject get_field_SAVANNA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SAVANNA", "field_17074", "SAVANNA", "f_35822_"), "Lcmp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.VillagerType#SAVANNA
    [[maybe_unused]] static void set_field_SAVANNA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SAVANNA", "field_17074", "SAVANNA", "f_35822_"), "Lcmp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.VillagerType#SNOW
    [[maybe_unused]] static jobject get_field_SNOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SNOW", "field_17075", "SNOW", "f_35823_"), "Lcmp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.VillagerType#SNOW
    [[maybe_unused]] static void set_field_SNOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SNOW", "field_17075", "SNOW", "f_35823_"), "Lcmp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.VillagerType#SWAMP
    [[maybe_unused]] static jobject get_field_SWAMP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SWAMP", "field_17076", "SWAMP", "f_35824_"), "Lcmp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.VillagerType#SWAMP
    [[maybe_unused]] static void set_field_SWAMP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SWAMP", "field_17076", "SWAMP", "f_35824_"), "Lcmp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.village.VillagerType#TAIGA
    [[maybe_unused]] static jobject get_field_TAIGA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "TAIGA", "field_17077", "TAIGA", "f_35825_"), "Lcmp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.village.VillagerType#TAIGA
    [[maybe_unused]] static void set_field_TAIGA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "TAIGA", "field_17077", "TAIGA", "f_35825_"), "Lcmp;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.village.VillagerType#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "name", "field_26690", "name", "f_35826_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.village.VillagerType#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "name", "field_26690", "name", "f_35826_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.village.VillagerType#BIOME_TO_TYPE
    [[maybe_unused]] static jobject get_field_BIOME_TO_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "BY_BIOME", "field_17078", "BIOME_TO_TYPE", "f_35827_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.village.VillagerType#BIOME_TO_TYPE
    [[maybe_unused]] static void set_field_BIOME_TO_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "BY_BIOME", "field_17078", "BIOME_TO_TYPE", "f_35827_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_16931", "create", "m_35831_"), "(Ljava/lang/String;)Lcmp;");
    }

    static jobject create(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_forBiome() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "byBiome", "method_16930", "forBiome", "m_204073_"), "(Ljm;)Lcmp;");
    }

    static jobject forBiome(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_forBiome();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_VILLAGE_VILLAGERTYPE_HPP