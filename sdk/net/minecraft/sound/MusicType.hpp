// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SOUND_MUSICTYPE_HPP
#define NET_MINECRAFT_SOUND_MUSICTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.sound.MusicType
 * Remapped: avn
 */
namespace MusicType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("avn", "net/minecraft/sounds/Musics", "net/minecraft/class_1143", "net/minecraft/sound/MusicType", "net/minecraft/src/C_122_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.sound.MusicType#MENU_MIN_DELAY
    [[maybe_unused]] static jint get_field_MENU_MIN_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ONE_SECOND", "field_29804", "MENU_MIN_DELAY", "f_144042_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.sound.MusicType#MENU_MIN_DELAY
    [[maybe_unused]] static void set_field_MENU_MIN_DELAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ONE_SECOND", "field_29804", "MENU_MIN_DELAY", "f_144042_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.sound.MusicType#MENU_MAX_DELAY
    [[maybe_unused]] static jint get_field_MENU_MAX_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "THIRTY_SECONDS", "field_29805", "MENU_MAX_DELAY", "f_144043_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.sound.MusicType#MENU_MAX_DELAY
    [[maybe_unused]] static void set_field_MENU_MAX_DELAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "THIRTY_SECONDS", "field_29805", "MENU_MAX_DELAY", "f_144043_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.sound.MusicType#GAME_MIN_DELAY
    [[maybe_unused]] static jint get_field_GAME_MIN_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TEN_MINUTES", "field_29806", "GAME_MIN_DELAY", "f_144044_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.sound.MusicType#GAME_MIN_DELAY
    [[maybe_unused]] static void set_field_GAME_MIN_DELAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TEN_MINUTES", "field_29806", "GAME_MIN_DELAY", "f_144044_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.sound.MusicType#GAME_MAX_DELAY
    [[maybe_unused]] static jint get_field_GAME_MAX_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "TWENTY_MINUTES", "field_29807", "GAME_MAX_DELAY", "f_144045_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.sound.MusicType#GAME_MAX_DELAY
    [[maybe_unused]] static void set_field_GAME_MAX_DELAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "TWENTY_MINUTES", "field_29807", "GAME_MAX_DELAY", "f_144045_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.sound.MusicType#END_MIN_DELAY
    [[maybe_unused]] static jint get_field_END_MIN_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "FIVE_MINUTES", "field_29808", "END_MIN_DELAY", "f_144046_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.sound.MusicType#END_MIN_DELAY
    [[maybe_unused]] static void set_field_END_MIN_DELAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "FIVE_MINUTES", "field_29808", "END_MIN_DELAY", "f_144046_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.sound.MusicType#MENU
    [[maybe_unused]] static jobject get_field_MENU() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MENU", "field_5585", "MENU", "f_11645_"), "Lavm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.sound.MusicType#MENU
    [[maybe_unused]] static void set_field_MENU(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MENU", "field_5585", "MENU", "f_11645_"), "Lavm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.sound.MusicType#CREATIVE
    [[maybe_unused]] static jobject get_field_CREATIVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CREATIVE", "field_5581", "CREATIVE", "f_11646_"), "Lavm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.sound.MusicType#CREATIVE
    [[maybe_unused]] static void set_field_CREATIVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CREATIVE", "field_5581", "CREATIVE", "f_11646_"), "Lavm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.sound.MusicType#CREDITS
    [[maybe_unused]] static jobject get_field_CREDITS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CREDITS", "field_5578", "CREDITS", "f_11647_"), "Lavm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.sound.MusicType#CREDITS
    [[maybe_unused]] static void set_field_CREDITS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CREDITS", "field_5578", "CREDITS", "f_11647_"), "Lavm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.sound.MusicType#DRAGON
    [[maybe_unused]] static jobject get_field_DRAGON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "END_BOSS", "field_5580", "DRAGON", "f_11648_"), "Lavm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.sound.MusicType#DRAGON
    [[maybe_unused]] static void set_field_DRAGON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "END_BOSS", "field_5580", "DRAGON", "f_11648_"), "Lavm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.sound.MusicType#END
    [[maybe_unused]] static jobject get_field_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "END", "field_5583", "END", "f_11649_"), "Lavm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.sound.MusicType#END
    [[maybe_unused]] static void set_field_END(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "END", "field_5583", "END", "f_11649_"), "Lavm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.sound.MusicType#UNDERWATER
    [[maybe_unused]] static jobject get_field_UNDERWATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "UNDER_WATER", "field_5576", "UNDERWATER", "f_11650_"), "Lavm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.sound.MusicType#UNDERWATER
    [[maybe_unused]] static void set_field_UNDERWATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "UNDER_WATER", "field_5576", "UNDERWATER", "f_11650_"), "Lavm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.sound.MusicType#GAME
    [[maybe_unused]] static jobject get_field_GAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "GAME", "field_5586", "GAME", "f_11651_"), "Lavm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.sound.MusicType#GAME
    [[maybe_unused]] static void set_field_GAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "GAME", "field_5586", "GAME", "f_11651_"), "Lavm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createIngameMusic() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createGameMusic", "method_27283", "createIngameMusic", "m_263184_"), "(Ljm;)Lavm;");
    }

    static jobject createIngameMusic(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createIngameMusic();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SOUND_MUSICTYPE_HPP