// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_WIDGET_GRIDWIDGET$ADDER_HPP
#define NET_MINECRAFT_CLIENT_GUI_WIDGET_GRIDWIDGET$ADDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.widget.GridWidget$Adder
 * Remapped: fly$b
 */
namespace GridWidget$Adder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fly$b", "net/minecraft/client/gui/layouts/GridLayout$RowHelper", "net/minecraft/class_7845$class_7939", "net/minecraft/client/gui/widget/GridWidget$Adder", "net/minecraft/src/C_263586_$C_263601_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.gui.widget.GridWidget$Adder#columns
    static jint get_field_columns(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "columns", "field_41339", "columns", "f_263722_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.GridWidget$Adder#columns
    static void set_field_columns(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "columns", "field_41339", "columns", "f_263722_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.GridWidget$Adder#totalOccupiedColumns
    static jint get_field_totalOccupiedColumns(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "index", "field_41340", "totalOccupiedColumns", "f_263661_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.GridWidget$Adder#totalOccupiedColumns
    static void set_field_totalOccupiedColumns(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "index", "field_41340", "totalOccupiedColumns", "f_263661_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addChild", "method_47612", "add", "m_264139_"), "(Lfmb;)Lfmb;");
    }

    static jobject add(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addChild", "method_47613", "add", "m_264108_"), "(Lfmb;I)Lfmb;");
    }

    static jobject _add(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addChild", "method_47615", "add", "m_264206_"), "(Lfmb;Lfmc;)Lfmb;");
    }

    static jobject __add(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID___add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID____add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addChild", "method_47614", "add", "m_264276_"), "(Lfmb;ILfmc;)Lfmb;");
    }

    static jobject ___add(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID____add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getGridWidget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getGrid", "method_48638", "getGridWidget", "m_267613_"), "()Lfly;");
    }

    static jobject getGridWidget(const jobject& obj) {
                
       const auto methodID = methodID_getGridWidget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_copyPositioner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "newCellSettings", "method_47611", "copyPositioner", "m_264551_"), "()Lfmc;");
    }

    static jobject copyPositioner(const jobject& obj) {
                
       const auto methodID = methodID_copyPositioner();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMainPositioner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "defaultCellSetting", "method_47616", "getMainPositioner", "m_264502_"), "()Lfmc;");
    }

    static jobject getMainPositioner(const jobject& obj) {
                
       const auto methodID = methodID_getMainPositioner();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_WIDGET_GRIDWIDGET$ADDER_HPP