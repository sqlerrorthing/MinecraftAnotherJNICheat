// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_WIDGET_TABNAVIGATIONWIDGET_HPP
#define NET_MINECRAFT_CLIENT_GUI_WIDGET_TABNAVIGATIONWIDGET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.widget.TabNavigationWidget
 * Remapped: fkq
 */
namespace TabNavigationWidget {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fkq", "net/minecraft/client/gui/components/tabs/TabNavigationBar", "net/minecraft/class_8089", "net/minecraft/client/gui/widget/TabNavigationWidget", "net/minecraft/src/C_267342_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#field_42489
    [[maybe_unused]] static jint get_field_field_42489() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_TAB", "field_42489", "field_42489", "f_268741_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#field_42489
    [[maybe_unused]] static void set_field_field_42489(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_TAB", "field_42489", "field_42489", "f_268741_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#field_43076
    [[maybe_unused]] static jint get_field_field_43076() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_WIDTH", "field_43076", "field_43076", "f_273832_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#field_43076
    [[maybe_unused]] static void set_field_field_43076(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_WIDTH", "field_43076", "field_43076", "f_273832_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#field_43077
    [[maybe_unused]] static jint get_field_field_43077() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "HEIGHT", "field_43077", "field_43077", "f_273831_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#field_43077
    [[maybe_unused]] static void set_field_field_43077(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "HEIGHT", "field_43077", "field_43077", "f_273831_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#field_43078
    [[maybe_unused]] static jint get_field_field_43078() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MARGIN", "field_43078", "field_43078", "f_273887_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#field_43078
    [[maybe_unused]] static void set_field_field_43078(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MARGIN", "field_43078", "field_43078", "f_273887_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#USAGE_NARRATION_TEXT
    [[maybe_unused]] static jobject get_field_USAGE_NARRATION_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "USAGE_NARRATION", "field_43079", "USAGE_NARRATION_TEXT", "f_273890_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#USAGE_NARRATION_TEXT
    [[maybe_unused]] static void set_field_USAGE_NARRATION_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "USAGE_NARRATION", "field_43079", "USAGE_NARRATION_TEXT", "f_273890_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.TabNavigationWidget#grid
    static jobject get_field_grid(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "layout", "field_43080", "grid", "f_273942_"), "Lfmd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#grid
    static void set_field_grid(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "layout", "field_43080", "grid", "f_273942_"), "Lfmd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.TabNavigationWidget#tabNavWidth
    static jint get_field_tabNavWidth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "width", "field_42145", "tabNavWidth", "f_267467_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#tabNavWidth
    static void set_field_tabNavWidth(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "width", "field_42145", "tabNavWidth", "f_267467_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.TabNavigationWidget#tabManager
    static jobject get_field_tabManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "tabManager", "field_42146", "tabManager", "f_267401_"), "Lfkp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#tabManager
    static void set_field_tabManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "tabManager", "field_42146", "tabManager", "f_267401_"), "Lfkp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.TabNavigationWidget#tabs
    static jobject get_field_tabs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "tabs", "field_42147", "tabs", "f_267380_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#tabs
    static void set_field_tabs(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "tabs", "field_42147", "tabs", "f_267380_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.TabNavigationWidget#tabButtons
    static jobject get_field_tabButtons(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "tabButtons", "field_42148", "tabButtons", "f_267495_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.TabNavigationWidget#tabButtons
    static void set_field_tabButtons(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "tabButtons", "field_42148", "tabButtons", "f_267495_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_builder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "builder", "method_48623", "builder", "m_267630_"), "(Lfkp;I)Lfkq$a;");
    }

    static jobject builder(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_builder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWidth", "method_48618", "setWidth", "m_267604_"), "(I)V");
    }

    static void setWidth(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setWidth();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setFocused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setFocused", "method_25365", "setFocused", "m_93692_"), "(Z)V");
    }

    static void setFocused(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setFocused();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__setFocused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setFocused", "method_25395", "setFocused", "m_7522_"), "(Lfki;)V");
    }

    static void _setFocused(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__setFocused();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNavigationPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "nextFocusPath", "method_48205", "getNavigationPath", "m_264064_"), "(Lfmo;)Lfhw;");
    }

    static jobject getNavigationPath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getNavigationPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_children() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aK_", "children", "method_25396", "children", "m_6702_"), "()Ljava/util/List;");
    }

    static jobject children(const jobject& obj) {
                
       const auto methodID = methodID_children();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "narrationPriority", "method_37018", "getType", "m_142684_"), "()Lfmg$a;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_appendNarrations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updateNarration", "method_37020", "appendNarrations", "m_142291_"), "(Lfmi;)V");
    }

    static void appendNarrations(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_appendNarrations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__appendNarrations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "narrateListElementPosition", "method_49612", "appendNarrations", "m_274560_"), "(Lfmi;Lfjv;)V");
    }

    static void _appendNarrations(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__appendNarrations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getNavigationFocus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "getRectangle", "method_48202", "getNavigationFocus", "m_264198_"), "()Lfms;");
    }

    static jobject getNavigationFocus(const jobject& obj) {
                
       const auto methodID = methodID_getNavigationFocus();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "arrangeElements", "method_49613", "init", "m_267766_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_selectTab() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "selectTab", "method_48987", "selectTab", "m_276089_"), "(IZ)V");
    }

    static void selectTab(const jobject& obj, const jint& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_selectTab();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_trySwitchTabsWithKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "keyPressed", "method_48988", "trySwitchTabsWithKey", "m_269419_"), "(I)Z");
    }

    static jboolean trySwitchTabsWithKey(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_trySwitchTabsWithKey();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTabForKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getNextTabIndex", "method_48990", "getTabForKey", "m_269123_"), "(I)I");
    }

    static jint getTabForKey(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getTabForKey();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCurrentTabIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "currentTabIndex", "method_48989", "getCurrentTabIndex", "m_269025_"), "()I");
    }

    static jint getCurrentTabIndex(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentTabIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCurrentTabButton() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "currentTabButton", "method_49615", "getCurrentTabButton", "m_274517_"), "()Lfjv;");
    }

    static jobject getCurrentTabButton(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentTabButton();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_WIDGET_TABNAVIGATIONWIDGET_HPP