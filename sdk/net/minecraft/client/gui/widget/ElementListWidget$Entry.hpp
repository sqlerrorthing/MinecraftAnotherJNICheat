// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_WIDGET_ELEMENTLISTWIDGET$ENTRY_HPP
#define NET_MINECRAFT_CLIENT_GUI_WIDGET_ELEMENTLISTWIDGET$ENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.widget.ElementListWidget$Entry
 * Remapped: fis$a
 */
namespace ElementListWidget$Entry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fis$a", "net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry", "net/minecraft/class_4265$class_4266", "net/minecraft/client/gui/widget/ElementListWidget$Entry", "net/minecraft/src/C_3460_$C_3461_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.gui.widget.ElementListWidget$Entry#focused
    static jobject get_field_focused(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "focused", "field_19077", "focused", "f_94020_"), "Lfki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.ElementListWidget$Entry#focused
    static void set_field_focused(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "focused", "field_19077", "focused", "f_94020_"), "Lfki;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.ElementListWidget$Entry#focusedSelectable
    static jobject get_field_focusedSelectable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lastNarratable", "field_33782", "focusedSelectable", "f_168853_"), "Lfmg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.ElementListWidget$Entry#focusedSelectable
    static void set_field_focusedSelectable(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lastNarratable", "field_33782", "focusedSelectable", "f_168853_"), "Lfmg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.ElementListWidget$Entry#dragging
    static jboolean get_field_dragging(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "dragging", "field_19078", "dragging", "f_94021_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.ElementListWidget$Entry#dragging
    static void set_field_dragging(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "dragging", "field_19078", "dragging", "f_94021_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_isDragging() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aM_", "isDragging", "method_25397", "isDragging", "m_7282_"), "()Z");
    }

    static jboolean isDragging(const jobject& obj) {
                
       const auto methodID = methodID_isDragging();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDragging() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b_", "setDragging", "method_25398", "setDragging", "m_7897_"), "(Z)V");
    }

    static void setDragging(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setDragging();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setFocused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setFocused", "method_25395", "setFocused", "m_7522_"), "(Lfki;)V");
    }

    static void setFocused(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setFocused();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFocused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aN_", "getFocused", "method_25399", "getFocused", "m_7222_"), "()Lfki;");
    }

    static jobject getFocused(const jobject& obj) {
                
       const auto methodID = methodID_getFocused();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNavigationPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "focusPathAtIndex", "method_48208", "getNavigationPath", "m_264176_"), "(Lfmo;I)Lfhw;");
    }

    static jobject getNavigationPath(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_getNavigationPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getNavigationPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "nextFocusPath", "method_48205", "getNavigationPath", "m_264064_"), "(Lfmo;)Lfhw;");
    }

    static jobject _getNavigationPath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getNavigationPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_selectableChildren() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "narratables", "method_37025", "selectableChildren", "m_142437_"), "()Ljava/util/List;");
    }

    static jobject selectableChildren(const jobject& obj) {
                
       const auto methodID = methodID_selectableChildren();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_appendNarrations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateNarration", "method_37024", "appendNarrations", "m_168854_"), "(Lfmi;)V");
    }

    static void appendNarrations(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_appendNarrations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_WIDGET_ELEMENTLISTWIDGET$ENTRY_HPP