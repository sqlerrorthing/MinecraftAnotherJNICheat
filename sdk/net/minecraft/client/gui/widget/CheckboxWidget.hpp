// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_WIDGET_CHECKBOXWIDGET_HPP
#define NET_MINECRAFT_CLIENT_GUI_WIDGET_CHECKBOXWIDGET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.widget.CheckboxWidget
 * Remapped: fio
 */
namespace CheckboxWidget {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fio", "net/minecraft/client/gui/components/Checkbox", "net/minecraft/class_4286", "net/minecraft/client/gui/widget/CheckboxWidget", "net/minecraft/src/C_3455_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.widget.CheckboxWidget#SELECTED_HIGHLIGHTED_TEXTURE
    [[maybe_unused]] static jobject get_field_SELECTED_HIGHLIGHTED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CHECKBOX_SELECTED_HIGHLIGHTED_SPRITE", "field_45348", "SELECTED_HIGHLIGHTED_TEXTURE", "f_291205_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.CheckboxWidget#SELECTED_HIGHLIGHTED_TEXTURE
    [[maybe_unused]] static void set_field_SELECTED_HIGHLIGHTED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CHECKBOX_SELECTED_HIGHLIGHTED_SPRITE", "field_45348", "SELECTED_HIGHLIGHTED_TEXTURE", "f_291205_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.CheckboxWidget#SELECTED_TEXTURE
    [[maybe_unused]] static jobject get_field_SELECTED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CHECKBOX_SELECTED_SPRITE", "field_45349", "SELECTED_TEXTURE", "f_290627_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.CheckboxWidget#SELECTED_TEXTURE
    [[maybe_unused]] static void set_field_SELECTED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CHECKBOX_SELECTED_SPRITE", "field_45349", "SELECTED_TEXTURE", "f_290627_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.CheckboxWidget#HIGHLIGHTED_TEXTURE
    [[maybe_unused]] static jobject get_field_HIGHLIGHTED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CHECKBOX_HIGHLIGHTED_SPRITE", "field_45350", "HIGHLIGHTED_TEXTURE", "f_290543_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.CheckboxWidget#HIGHLIGHTED_TEXTURE
    [[maybe_unused]] static void set_field_HIGHLIGHTED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CHECKBOX_HIGHLIGHTED_SPRITE", "field_45350", "HIGHLIGHTED_TEXTURE", "f_290543_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.CheckboxWidget#TEXTURE
    [[maybe_unused]] static jobject get_field_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CHECKBOX_SPRITE", "field_45351", "TEXTURE", "f_291208_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.CheckboxWidget#TEXTURE
    [[maybe_unused]] static void set_field_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CHECKBOX_SPRITE", "field_45351", "TEXTURE", "f_291208_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.CheckboxWidget#TEXT_COLOR
    [[maybe_unused]] static jint get_field_TEXT_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TEXT_COLOR", "field_32181", "TEXT_COLOR", "f_168844_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.CheckboxWidget#TEXT_COLOR
    [[maybe_unused]] static void set_field_TEXT_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TEXT_COLOR", "field_32181", "TEXT_COLOR", "f_168844_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.CheckboxWidget#field_47105
    [[maybe_unused]] static jint get_field_field_47105() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SPACING", "field_47105", "field_47105", "f_302543_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.CheckboxWidget#field_47105
    [[maybe_unused]] static void set_field_field_47105(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SPACING", "field_47105", "field_47105", "f_302543_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.CheckboxWidget#field_47106
    [[maybe_unused]] static jint get_field_field_47106() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "BOX_PADDING", "field_47106", "field_47106", "f_302538_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.CheckboxWidget#field_47106
    [[maybe_unused]] static void set_field_field_47106(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "BOX_PADDING", "field_47106", "field_47106", "f_302538_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.CheckboxWidget#checked
    static jboolean get_field_checked(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "selected", "field_19230", "checked", "f_93822_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.CheckboxWidget#checked
    static void set_field_checked(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "selected", "field_19230", "checked", "f_93822_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.CheckboxWidget#callback
    static jobject get_field_callback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "onValueChange", "field_47107", "callback", "f_302693_"), "Lfio$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.CheckboxWidget#callback
    static void set_field_callback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "onValueChange", "field_47107", "callback", "f_302693_"), "Lfio$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.CheckboxWidget#textWidget
    static jobject get_field_textWidget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "textWidget", "field_52293", "textWidget", "f_337578_"), "Lfjg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.CheckboxWidget#textWidget
    static void set_field_textWidget(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "textWidget", "field_52293", "textWidget", "f_337578_"), "Lfjg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_calculateWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAdjustedWidth", "method_61128", "calculateWidth", "m_339832_"), "(ILwz;Lfhx;)I");
    }

    static jint calculateWidth(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_calculateWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_calculateHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getAdjustedHeight", "method_61129", "calculateHeight", "m_338792_"), "(Lfhx;)I");
    }

    static jint calculateHeight(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_calculateHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__calculateWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getDefaultWidth", "method_61130", "calculateWidth", "m_339463_"), "(Lwz;Lfhx;)I");
    }

    static jint _calculateWidth(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__calculateWidth();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_builder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "builder", "method_54787", "builder", "m_306644_"), "(Lwz;Lfhx;)Lfio$a;");
    }

    static jobject builder(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_builder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getCheckboxSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getBoxSize", "method_54786", "getCheckboxSize", "m_305019_"), "(Lfhx;)I");
    }

    static jint getCheckboxSize(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getCheckboxSize();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_onPress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onPress", "method_25306", "onPress", "m_5691_"), "()V");
    }

    static void onPress(const jobject& obj) {
                
       const auto methodID = methodID_onPress();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isChecked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "selected", "method_20372", "isChecked", "m_93840_"), "()Z");
    }

    static jboolean isChecked(const jobject& obj) {
                
       const auto methodID = methodID_isChecked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_appendClickableNarrations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateWidgetNarration", "method_47399", "appendClickableNarrations", "m_168797_"), "(Lfmi;)V");
    }

    static void appendClickableNarrations(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_appendClickableNarrations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_renderWidget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderWidget", "method_48579", "renderWidget", "m_87963_"), "(Lfhz;IIF)V");
    }

    static void renderWidget(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_renderWidget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_WIDGET_CHECKBOXWIDGET_HPP