// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_WIDGET_OPTIONLISTWIDGET_HPP
#define NET_MINECRAFT_CLIENT_GUI_WIDGET_OPTIONLISTWIDGET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.widget.OptionListWidget
 * Remapped: fjj
 */
namespace OptionListWidget {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fjj", "net/minecraft/client/gui/components/OptionsList", "net/minecraft/class_353", "net/minecraft/client/gui/widget/OptionListWidget", "net/minecraft/src/C_3477_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.widget.OptionListWidget#field_49481
    [[maybe_unused]] static jint get_field_field_49481() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BIG_BUTTON_WIDTH", "field_49481", "field_49481", "f_314638_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.OptionListWidget#field_49481
    [[maybe_unused]] static void set_field_field_49481(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BIG_BUTTON_WIDTH", "field_49481", "field_49481", "f_314638_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.OptionListWidget#field_49482
    [[maybe_unused]] static jint get_field_field_49482() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "DEFAULT_ITEM_HEIGHT", "field_49482", "field_49482", "f_314690_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.OptionListWidget#field_49482
    [[maybe_unused]] static void set_field_field_49482(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "DEFAULT_ITEM_HEIGHT", "field_49482", "field_49482", "f_314690_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.OptionListWidget#optionsScreen
    static jobject get_field_optionsScreen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "screen", "field_49483", "optionsScreen", "f_316801_"), "Lfrh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.OptionListWidget#optionsScreen
    static void set_field_optionsScreen(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "screen", "field_49483", "optionsScreen", "f_316801_"), "Lfrh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addSingleOptionEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addBig", "method_20406", "addSingleOptionEntry", "m_232528_"), "(Lfgr;)V");
    }

    static void addSingleOptionEntry(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addSingleOptionEntry();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addSmall", "method_20408", "addAll", "m_232533_"), "([Lfgr;)V");
    }

    static void addAll(const jobject& obj, const jarray& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__addAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addSmall", "method_58227", "addAll", "m_324569_"), "(Ljava/util/List;)V");
    }

    static void _addAll(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__addAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addWidgetEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addSmall", "method_20407", "addWidgetEntry", "m_232530_"), "(Lfik;Lfik;)V");
    }

    static void addWidgetEntry(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addWidgetEntry();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getRowWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRowWidth", "method_25322", "getRowWidth", "m_5759_"), "()I");
    }

    static jint getRowWidth(const jobject& obj) {
                
       const auto methodID = methodID_getRowWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWidgetFor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "findOption", "method_31046", "getWidgetFor", "m_232535_"), "(Lfgr;)Lfik;");
    }

    static jobject getWidgetFor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getWidgetFor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_applyAllPendingValues() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "applyUnsavedChanges", "method_59869", "applyAllPendingValues", "m_323432_"), "()V");
    }

    static void applyAllPendingValues(const jobject& obj) {
                
       const auto methodID = methodID_applyAllPendingValues();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHoveredWidget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getMouseOver", "method_29624", "getHoveredWidget", "m_94480_"), "(DD)Ljava/util/Optional;");
    }

    static jobject getHoveredWidget(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_getHoveredWidget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_WIDGET_OPTIONLISTWIDGET_HPP