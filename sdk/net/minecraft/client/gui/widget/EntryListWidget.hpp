// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_WIDGET_ENTRYLISTWIDGET_HPP
#define NET_MINECRAFT_CLIENT_GUI_WIDGET_ENTRYLISTWIDGET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.widget.EntryListWidget
 * Remapped: fih
 */
namespace EntryListWidget {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fih", "net/minecraft/client/gui/components/AbstractSelectionList", "net/minecraft/class_350", "net/minecraft/client/gui/widget/EntryListWidget", "net/minecraft/src/C_3443_"));
        }
        return cachedClass;
    };

    // getter for static protected field net.minecraft.client.gui.widget.EntryListWidget#field_45909
    [[maybe_unused]] static jint get_field_field_45909() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SCROLLBAR_WIDTH", "field_45909", "field_45909", "f_291900_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.widget.EntryListWidget#field_45909
    [[maybe_unused]] static void set_field_field_45909(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SCROLLBAR_WIDTH", "field_45909", "field_45909", "f_291900_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.EntryListWidget#SCROLLER_TEXTURE
    [[maybe_unused]] static jobject get_field_SCROLLER_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SCROLLER_SPRITE", "field_45908", "SCROLLER_TEXTURE", "f_291844_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.EntryListWidget#SCROLLER_TEXTURE
    [[maybe_unused]] static void set_field_SCROLLER_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SCROLLER_SPRITE", "field_45908", "SCROLLER_TEXTURE", "f_291844_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.EntryListWidget#SCROLLER_BACKGROUND_TEXTURE
    [[maybe_unused]] static jobject get_field_SCROLLER_BACKGROUND_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SCROLLER_BACKGROUND_SPRITE", "field_49477", "SCROLLER_BACKGROUND_TEXTURE", "f_317013_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.EntryListWidget#SCROLLER_BACKGROUND_TEXTURE
    [[maybe_unused]] static void set_field_SCROLLER_BACKGROUND_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SCROLLER_BACKGROUND_SPRITE", "field_49477", "SCROLLER_BACKGROUND_TEXTURE", "f_317013_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.EntryListWidget#MENU_LIST_BACKGROUND_TEXTURE
    [[maybe_unused]] static jobject get_field_MENU_LIST_BACKGROUND_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "MENU_LIST_BACKGROUND", "field_49478", "MENU_LIST_BACKGROUND_TEXTURE", "f_315877_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.EntryListWidget#MENU_LIST_BACKGROUND_TEXTURE
    [[maybe_unused]] static void set_field_MENU_LIST_BACKGROUND_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "MENU_LIST_BACKGROUND", "field_49478", "MENU_LIST_BACKGROUND_TEXTURE", "f_315877_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.widget.EntryListWidget#INWORLD_MENU_LIST_BACKGROUND_TEXTURE
    [[maybe_unused]] static jobject get_field_INWORLD_MENU_LIST_BACKGROUND_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "INWORLD_MENU_LIST_BACKGROUND", "field_49892", "INWORLD_MENU_LIST_BACKGROUND_TEXTURE", "f_313898_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.EntryListWidget#INWORLD_MENU_LIST_BACKGROUND_TEXTURE
    [[maybe_unused]] static void set_field_INWORLD_MENU_LIST_BACKGROUND_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "INWORLD_MENU_LIST_BACKGROUND", "field_49892", "INWORLD_MENU_LIST_BACKGROUND_TEXTURE", "f_313898_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.widget.EntryListWidget#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minecraft", "field_22740", "client", "f_93386_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.widget.EntryListWidget#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minecraft", "field_22740", "client", "f_93386_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.widget.EntryListWidget#itemHeight
    static jint get_field_itemHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "itemHeight", "field_22741", "itemHeight", "f_93387_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.widget.EntryListWidget#itemHeight
    static void set_field_itemHeight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "itemHeight", "field_22741", "itemHeight", "f_93387_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.EntryListWidget#children
    static jobject get_field_children(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "children", "field_22739", "children", "f_93385_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.EntryListWidget#children
    static void set_field_children(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "children", "field_22739", "children", "f_93385_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.widget.EntryListWidget#centerListVertically
    static jboolean get_field_centerListVertically(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "centerListVertically", "field_22744", "centerListVertically", "f_93394_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.widget.EntryListWidget#centerListVertically
    static void set_field_centerListVertically(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "centerListVertically", "field_22744", "centerListVertically", "f_93394_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.EntryListWidget#scrollAmount
    static jdouble get_field_scrollAmount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "scrollAmount", "field_22749", "scrollAmount", "f_93396_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.EntryListWidget#scrollAmount
    static void set_field_scrollAmount(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "scrollAmount", "field_22749", "scrollAmount", "f_93396_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.EntryListWidget#renderHeader
    static jboolean get_field_renderHeader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "renderHeader", "field_22747", "renderHeader", "f_93398_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.EntryListWidget#renderHeader
    static void set_field_renderHeader(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "renderHeader", "field_22747", "renderHeader", "f_93398_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.widget.EntryListWidget#headerHeight
    static jint get_field_headerHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "headerHeight", "field_22748", "headerHeight", "f_93395_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.widget.EntryListWidget#headerHeight
    static void set_field_headerHeight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "headerHeight", "field_22748", "headerHeight", "f_93395_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.EntryListWidget#scrolling
    static jboolean get_field_scrolling(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "scrolling", "field_22750", "scrolling", "f_93399_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.EntryListWidget#scrolling
    static void set_field_scrolling(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "scrolling", "field_22750", "scrolling", "f_93399_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.EntryListWidget#selected
    static jobject get_field_selected(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "selected", "field_22751", "selected", "f_93400_"), "Lfih$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.EntryListWidget#selected
    static void set_field_selected(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "selected", "field_22751", "selected", "f_93400_"), "Lfih$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.widget.EntryListWidget#hoveredEntry
    static jobject get_field_hoveredEntry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "hovered", "field_33780", "hoveredEntry", "f_168789_"), "Lfih$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.widget.EntryListWidget#hoveredEntry
    static void set_field_hoveredEntry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "hovered", "field_33780", "hoveredEntry", "f_168789_"), "Lfih$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_setRenderHeader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setRenderHeader", "method_25315", "setRenderHeader", "m_93473_"), "(ZI)V");
    }

    static void setRenderHeader(const jobject& obj, const jboolean& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setRenderHeader();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getRowWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRowWidth", "method_25322", "getRowWidth", "m_5759_"), "()I");
    }

    static jint getRowWidth(const jobject& obj) {
                
       const auto methodID = methodID_getRowWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSelectedOrNull() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getSelected", "method_25334", "getSelectedOrNull", "m_93511_"), "()Lfih$a;");
    }

    static jobject getSelectedOrNull(const jobject& obj) {
                
       const auto methodID = methodID_getSelectedOrNull();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSelected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSelected", "method_25313", "setSelected", "m_6987_"), "(Lfih$a;)V");
    }

    static void setSelected(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setSelected();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFirst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getFirstElement", "method_48200", "getFirst", "m_264567_"), "()Lfih$a;");
    }

    static jobject getFirst(const jobject& obj) {
                
       const auto methodID = methodID_getFirst();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFocused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getFocused", "method_25336", "getFocused", "m_7222_"), "()Lfih$a;");
    }

    static jobject getFocused(const jobject& obj) {
                
       const auto methodID = methodID_getFocused();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__children() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aK_", "children", "method_25396", "children", "m_6702_"), "()Ljava/util/List;");
    }

    static jobject _children(const jobject& obj) {
                
       const auto methodID = methodID__children();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_clearEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "clearEntries", "method_25339", "clearEntries", "m_93516_"), "()V");
    }

    static void clearEntries(const jobject& obj) {
                
       const auto methodID = methodID_clearEntries();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_replaceEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "replaceEntries", "method_25314", "replaceEntries", "m_5988_"), "(Ljava/util/Collection;)V");
    }

    static void replaceEntries(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_replaceEntries();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getEntry", "method_25326", "getEntry", "m_93500_"), "(I)Lfih$a;");
    }

    static jobject getEntry(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addEntry", "method_25321", "addEntry", "m_7085_"), "(Lfih$a;)I");
    }

    static jint addEntry(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEntry();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addEntryToTop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "addEntryToTop", "method_44399", "addEntryToTop", "m_239857_"), "(Lfih$a;)V");
    }

    static void addEntryToTop(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEntryToTop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeEntryWithoutScrolling() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "removeEntryFromTop", "method_44650", "removeEntryWithoutScrolling", "m_239045_"), "(Lfih$a;)Z");
    }

    static jboolean removeEntryWithoutScrolling(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeEntryWithoutScrolling();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntryCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getItemCount", "method_25340", "getEntryCount", "m_5773_"), "()I");
    }

    static jint getEntryCount(const jobject& obj) {
                
       const auto methodID = methodID_getEntryCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSelectedEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isSelectedItem", "method_25332", "isSelectedEntry", "m_7987_"), "(I)Z");
    }

    static jboolean isSelectedEntry(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_isSelectedEntry();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntryAtPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getEntryAtPosition", "method_25308", "getEntryAtPosition", "m_93412_"), "(DD)Lfih$a;");
    }

    static jobject getEntryAtPosition(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_getEntryAtPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_position() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateSize", "method_57712", "position", "m_319425_"), "(ILflz;)V");
    }

    static void position(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_position();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__position() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updateSizeAndPosition", "method_57714", "position", "m_321569_"), "(III)V");
    }

    static void _position(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID__position();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getMaxPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMaxPosition", "method_25317", "getMaxPosition", "m_5775_"), "()I");
    }

    static jint getMaxPosition(const jobject& obj) {
                
       const auto methodID = methodID_getMaxPosition();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_clickedHeader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clickedHeader", "method_25310", "clickedHeader", "m_6205_"), "(II)Z");
    }

    static jboolean clickedHeader(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_clickedHeader();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__renderHeader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderHeader", "method_25312", "renderHeader", "m_7415_"), "(Lfhz;II)V");
    }

    static void _renderHeader(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID__renderHeader();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_renderDecorations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderDecorations", "method_25320", "renderDecorations", "m_7154_"), "(Lfhz;II)V");
    }

    static void renderDecorations(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_renderDecorations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_renderWidget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderWidget", "method_48579", "renderWidget", "m_87963_"), "(Lfhz;IIF)V");
    }

    static void renderWidget(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_renderWidget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isScrollbarVisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "scrollbarVisible", "method_57717", "isScrollbarVisible", "m_324471_"), "()Z");
    }

    static jboolean isScrollbarVisible(const jobject& obj) {
                
       const auto methodID = methodID_isScrollbarVisible();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_drawHeaderAndFooterSeparators() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderListSeparators", "method_57713", "drawHeaderAndFooterSeparators", "m_319011_"), "(Lfhz;)V");
    }

    static void drawHeaderAndFooterSeparators(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_drawHeaderAndFooterSeparators();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drawMenuListBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderListBackground", "method_57715", "drawMenuListBackground", "m_323247_"), "(Lfhz;)V");
    }

    static void drawMenuListBackground(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_drawMenuListBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_enableScissor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "enableScissor", "method_49603", "enableScissor", "m_280310_"), "(Lfhz;)V");
    }

    static void enableScissor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_enableScissor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_centerScrollOn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "centerScrollOn", "method_25324", "centerScrollOn", "m_93494_"), "(Lfih$a;)V");
    }

    static void centerScrollOn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_centerScrollOn();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_ensureVisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "ensureVisible", "method_25328", "ensureVisible", "m_93498_"), "(Lfih$a;)V");
    }

    static void ensureVisible(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_ensureVisible();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_scroll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "scroll", "method_25309", "scroll", "m_93429_"), "(I)V");
    }

    static void scroll(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_scroll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getScrollAmount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getScrollAmount", "method_25341", "getScrollAmount", "m_93517_"), "()D");
    }

    static jdouble getScrollAmount(const jobject& obj) {
                
       const auto methodID = methodID_getScrollAmount();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_setScrollAmountOnly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setClampedScrollAmount", "method_60321", "setScrollAmountOnly", "m_340570_"), "(D)V");
    }

    static void setScrollAmountOnly(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setScrollAmountOnly();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setScrollAmount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setScrollAmount", "method_25307", "setScrollAmount", "m_93410_"), "(D)V");
    }

    static void setScrollAmount(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setScrollAmount();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_refreshScroll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "clampScrollAmount", "method_60322", "refreshScroll", "m_340250_"), "()V");
    }

    static void refreshScroll(const jobject& obj) {
                
       const auto methodID = methodID_refreshScroll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxScroll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getMaxScroll", "method_25331", "getMaxScroll", "m_93518_"), "()I");
    }

    static jint getMaxScroll(const jobject& obj) {
                
       const auto methodID = methodID_getMaxScroll();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateScrollingState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "updateScrollingState", "method_25318", "updateScrollingState", "m_93481_"), "(DDI)V");
    }

    static void updateScrollingState(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_updateScrollingState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getScrollbarX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getScrollbarPosition", "method_25329", "getScrollbarX", "m_5756_"), "()I");
    }

    static jint getScrollbarX(const jobject& obj) {
                
       const auto methodID = methodID_getScrollbarX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultScrollbarX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "getDefaultScrollbarPosition", "method_57718", "getDefaultScrollbarX", "m_319264_"), "()I");
    }

    static jint getDefaultScrollbarX(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultScrollbarX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getScrollbarMarginX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getListOutlinePadding", "method_57716", "getScrollbarMarginX", "m_321155_"), "()I");
    }

    static jint getScrollbarMarginX(const jobject& obj) {
                
       const auto methodID = methodID_getScrollbarMarginX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSelectButton() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isValidMouseClick", "method_53812", "isSelectButton", "m_293852_"), "(I)Z");
    }

    static jboolean isSelectButton(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_isSelectButton();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_mouseReleased() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "mouseReleased", "method_25406", "mouseReleased", "m_6348_"), "(DDI)Z");
    }

    static jboolean mouseReleased(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseReleased();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_mouseDragged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseDragged", "method_25403", "mouseDragged", "m_7979_"), "(DDIDD)Z");
    }

    static jboolean mouseDragged(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_mouseDragged();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_mouseScrolled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseScrolled", "method_25401", "mouseScrolled", "m_6050_"), "(DDDD)Z");
    }

    static jboolean mouseScrolled(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
                
       const auto methodID = methodID_mouseScrolled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_setFocused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setFocused", "method_25395", "setFocused", "m_7522_"), "(Lfki;)V");
    }

    static void setFocused(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setFocused();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNeighboringEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "nextEntry", "method_48197", "getNeighboringEntry", "m_264254_"), "(Lfmq;)Lfih$a;");
    }

    static jobject getNeighboringEntry(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getNeighboringEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getNeighboringEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "nextEntry", "method_48198", "getNeighboringEntry", "m_264620_"), "(Lfmq;Ljava/util/function/Predicate;)Lfih$a;");
    }

    static jobject _getNeighboringEntry(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__getNeighboringEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___getNeighboringEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "nextEntry", "method_48199", "getNeighboringEntry", "m_264238_"), "(Lfmq;Ljava/util/function/Predicate;Lfih$a;)Lfih$a;");
    }

    static jobject __getNeighboringEntry(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID___getNeighboringEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isMouseOver() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isMouseOver", "method_25405", "isMouseOver", "m_5953_"), "(DD)Z");
    }

    static jboolean isMouseOver(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_isMouseOver();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "renderListItems", "method_25311", "renderList", "m_239227_"), "(Lfhz;IIF)V");
    }

    static void renderList(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_renderList();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_renderEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderItem", "method_44397", "renderEntry", "m_238964_"), "(Lfhz;IIFIIIII)V");
    }

    static void renderEntry(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jint& arg8) {
                
       const auto methodID = methodID_renderEntry();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_drawSelectionHighlight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSelection", "method_44398", "drawSelectionHighlight", "m_240140_"), "(Lfhz;IIIII)V");
    }

    static void drawSelectionHighlight(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5) {
                
       const auto methodID = methodID_drawSelectionHighlight();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getRowLeft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getRowLeft", "method_25342", "getRowLeft", "m_5747_"), "()I");
    }

    static jint getRowLeft(const jobject& obj) {
                
       const auto methodID = methodID_getRowLeft();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBorderBoxLeft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "getRealRowLeft", "method_57710", "getBorderBoxLeft", "m_325018_"), "()I");
    }

    static jint getBorderBoxLeft(const jobject& obj) {
                
       const auto methodID = methodID_getBorderBoxLeft();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRowRight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getRowRight", "method_31383", "getRowRight", "m_93520_"), "()I");
    }

    static jint getRowRight(const jobject& obj) {
                
       const auto methodID = methodID_getRowRight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBorderBoxRight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "getRealRowRight", "method_57711", "getBorderBoxRight", "m_323514_"), "()I");
    }

    static jint getBorderBoxRight(const jobject& obj) {
                
       const auto methodID = methodID_getBorderBoxRight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRowTop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getRowTop", "method_25337", "getRowTop", "m_7610_"), "(I)I");
    }

    static jint getRowTop(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getRowTop();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRowBottom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getRowBottom", "method_25319", "getRowBottom", "m_93485_"), "(I)I");
    }

    static jint getRowBottom(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getRowBottom();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "narrationPriority", "method_37018", "getType", "m_142684_"), "()Lfmg$a;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "remove", "method_25338", "remove", "m_93514_"), "(I)Lfih$a;");
    }

    static jobject remove(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_remove();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "removeEntry", "method_25330", "removeEntry", "m_93502_"), "(Lfih$a;)Z");
    }

    static jboolean removeEntry(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeEntry();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHoveredEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getHovered", "method_37019", "getHoveredEntry", "m_168795_"), "()Lfih$a;");
    }

    static jobject getHoveredEntry(const jobject& obj) {
                
       const auto methodID = methodID_getHoveredEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setEntryParentList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "bindEntryToSelf", "method_29621", "setEntryParentList", "m_93505_"), "(Lfih$a;)V");
    }

    static void setEntryParentList(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setEntryParentList();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_appendNarrations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "narrateListElementPosition", "method_37017", "appendNarrations", "m_168790_"), "(Lfmi;Lfih$a;)V");
    }

    static void appendNarrations(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_appendNarrations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_WIDGET_ENTRYLISTWIDGET_HPP