// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_NAVIGATION_GUINAVIGATIONTYPE_HPP
#define NET_MINECRAFT_CLIENT_GUI_NAVIGATION_GUINAVIGATIONTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.navigation.GuiNavigationType
 * Remapped: fgl
 */
namespace GuiNavigationType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fgl", "net/minecraft/client/InputType", "net/minecraft/class_8015", "net/minecraft/client/gui/navigation/GuiNavigationType", "net/minecraft/src/C_263626_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.gui.navigation.GuiNavigationType#NONE
    [[maybe_unused]] static jobject get_field_NONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NONE", "field_41777", "NONE", "NONE"), "Lfgl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.navigation.GuiNavigationType#NONE
    [[maybe_unused]] static void set_field_NONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NONE", "field_41777", "NONE", "NONE"), "Lfgl;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.navigation.GuiNavigationType#MOUSE
    [[maybe_unused]] static jobject get_field_MOUSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MOUSE", "field_41778", "MOUSE", "MOUSE"), "Lfgl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.navigation.GuiNavigationType#MOUSE
    [[maybe_unused]] static void set_field_MOUSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MOUSE", "field_41778", "MOUSE", "MOUSE"), "Lfgl;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.navigation.GuiNavigationType#KEYBOARD_ARROW
    [[maybe_unused]] static jobject get_field_KEYBOARD_ARROW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "KEYBOARD_ARROW", "field_43097", "KEYBOARD_ARROW", "KEYBOARD_ARROW"), "Lfgl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.navigation.GuiNavigationType#KEYBOARD_ARROW
    [[maybe_unused]] static void set_field_KEYBOARD_ARROW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "KEYBOARD_ARROW", "field_43097", "KEYBOARD_ARROW", "KEYBOARD_ARROW"), "Lfgl;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.navigation.GuiNavigationType#KEYBOARD_TAB
    [[maybe_unused]] static jobject get_field_KEYBOARD_TAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "KEYBOARD_TAB", "field_41780", "KEYBOARD_TAB", "KEYBOARD_TAB"), "Lfgl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.navigation.GuiNavigationType#KEYBOARD_TAB
    [[maybe_unused]] static void set_field_KEYBOARD_TAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "KEYBOARD_TAB", "field_41780", "KEYBOARD_TAB", "KEYBOARD_TAB"), "Lfgl;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lfgl;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lfgl;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isMouse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isMouse", "method_48182", "isMouse", "m_264588_"), "()Z");
    }

    static jboolean isMouse(const jobject& obj) {
                
       const auto methodID = methodID_isMouse();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isKeyboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isKeyboard", "method_48183", "isKeyboard", "m_264505_"), "()Z");
    }

    static jboolean isKeyboard(const jobject& obj) {
                
       const auto methodID = methodID_isKeyboard();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_NAVIGATION_GUINAVIGATIONTYPE_HPP