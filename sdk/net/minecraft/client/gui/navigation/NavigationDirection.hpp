// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_NAVIGATION_NAVIGATIONDIRECTION_HPP
#define NET_MINECRAFT_CLIENT_GUI_NAVIGATION_NAVIGATIONDIRECTION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.navigation.NavigationDirection
 * Remapped: fmq
 */
namespace NavigationDirection {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fmq", "net/minecraft/client/gui/navigation/ScreenDirection", "net/minecraft/class_8028", "net/minecraft/client/gui/navigation/NavigationDirection", "net/minecraft/src/C_263621_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.gui.navigation.NavigationDirection#UP
    [[maybe_unused]] static jobject get_field_UP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UP", "field_41826", "UP", "UP"), "Lfmq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.navigation.NavigationDirection#UP
    [[maybe_unused]] static void set_field_UP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UP", "field_41826", "UP", "UP"), "Lfmq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.navigation.NavigationDirection#DOWN
    [[maybe_unused]] static jobject get_field_DOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DOWN", "field_41827", "DOWN", "DOWN"), "Lfmq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.navigation.NavigationDirection#DOWN
    [[maybe_unused]] static void set_field_DOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DOWN", "field_41827", "DOWN", "DOWN"), "Lfmq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.navigation.NavigationDirection#LEFT
    [[maybe_unused]] static jobject get_field_LEFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LEFT", "field_41828", "LEFT", "LEFT"), "Lfmq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.navigation.NavigationDirection#LEFT
    [[maybe_unused]] static void set_field_LEFT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LEFT", "field_41828", "LEFT", "LEFT"), "Lfmq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.navigation.NavigationDirection#RIGHT
    [[maybe_unused]] static jobject get_field_RIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RIGHT", "field_41829", "RIGHT", "RIGHT"), "Lfmq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.navigation.NavigationDirection#RIGHT
    [[maybe_unused]] static void set_field_RIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RIGHT", "field_41829", "RIGHT", "RIGHT"), "Lfmq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.navigation.NavigationDirection#comparator
    static jobject get_field_comparator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "coordinateValueComparator", "field_41830", "comparator", "f_263848_"), "Lit/unimi/dsi/fastutil/ints/IntComparator;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.navigation.NavigationDirection#comparator
    static void set_field_comparator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "coordinateValueComparator", "field_41830", "comparator", "f_263848_"), "Lit/unimi/dsi/fastutil/ints/IntComparator;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lfmq;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lfmq;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getAxis() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAxis", "method_48237", "getAxis", "m_264093_"), "()Lfmp;");
    }

    static jobject getAxis(const jobject& obj) {
                
       const auto methodID = methodID_getAxis();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOpposite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getOpposite", "method_48239", "getOpposite", "m_264089_"), "()Lfmq;");
    }

    static jobject getOpposite(const jobject& obj) {
                
       const auto methodID = methodID_getOpposite();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPositive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isPositive", "method_48241", "isPositive", "m_264119_"), "()Z");
    }

    static jboolean isPositive(const jobject& obj) {
                
       const auto methodID = methodID_isPositive();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAfter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isAfter", "method_48238", "isAfter", "m_264526_"), "(II)Z");
    }

    static jboolean isAfter(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_isAfter();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isBefore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isBefore", "method_48240", "isBefore", "m_264627_"), "(II)Z");
    }

    static jboolean isBefore(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_isBefore();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getComparator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "coordinateValueComparator", "method_48243", "getComparator", "m_264394_"), "()Lit/unimi/dsi/fastutil/ints/IntComparator;");
    }

    static jobject getComparator(const jobject& obj) {
                
       const auto methodID = methodID_getComparator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_NAVIGATION_NAVIGATIONDIRECTION_HPP