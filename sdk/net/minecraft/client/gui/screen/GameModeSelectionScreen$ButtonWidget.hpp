// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_GAMEMODESELECTIONSCREEN$BUTTONWIDGET_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_GAMEMODESELECTIONSCREEN$BUTTONWIDGET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.GameModeSelectionScreen$ButtonWidget
 * Remapped: fop$b
 */
namespace GameModeSelectionScreen$ButtonWidget {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fop$b", "net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot", "net/minecraft/class_5289$class_5291", "net/minecraft/client/gui/screen/GameModeSelectionScreen$ButtonWidget", "net/minecraft/src/C_3618_$C_3621_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.client.gui.screen.GameModeSelectionScreen$ButtonWidget#gameMode
    static jobject get_field_gameMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "icon", "field_24586", "gameMode", "f_97623_"), "Lfop$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.GameModeSelectionScreen$ButtonWidget#gameMode
    static void set_field_gameMode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "icon", "field_24586", "gameMode", "f_97623_"), "Lfop$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.GameModeSelectionScreen$ButtonWidget#selected
    static jboolean get_field_selected(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "isSelected", "field_24587", "selected", "f_97624_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.GameModeSelectionScreen$ButtonWidget#selected
    static void set_field_selected(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "isSelected", "field_24587", "selected", "f_97624_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_renderWidget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderWidget", "method_48579", "renderWidget", "m_87963_"), "(Lfhz;IIF)V");
    }

    static void renderWidget(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_renderWidget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_appendClickableNarrations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateWidgetNarration", "method_47399", "appendClickableNarrations", "m_168797_"), "(Lfmi;)V");
    }

    static void appendClickableNarrations(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_appendClickableNarrations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSelected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "isHoveredOrFocused", "method_25367", "isSelected", "m_198029_"), "()Z");
    }

    static jboolean isSelected(const jobject& obj) {
                
       const auto methodID = methodID_isSelected();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSelected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setSelected", "method_28083", "setSelected", "m_97643_"), "(Z)V");
    }

    static void setSelected(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSelected();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drawBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "drawSlot", "method_28080", "drawBackground", "m_280023_"), "(Lfhz;)V");
    }

    static void drawBackground(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_drawBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drawSelectionBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "drawSelection", "method_28082", "drawSelectionBox", "m_280608_"), "(Lfhz;)V");
    }

    static void drawSelectionBox(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_drawSelectionBox();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_GAMEMODESELECTIONSCREEN$BUTTONWIDGET_HPP