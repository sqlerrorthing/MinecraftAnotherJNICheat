// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_RECIPEBOOK_RECIPEBOOKWIDGET_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_RECIPEBOOK_RECIPEBOOKWIDGET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.recipebook.RecipeBookWidget
 * Remapped: fsa
 */
namespace RecipeBookWidget {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fsa", "net/minecraft/client/gui/screens/recipebook/RecipeBookComponent", "net/minecraft/class_507", "net/minecraft/client/gui/screen/recipebook/RecipeBookWidget", "net/minecraft/src/C_3718_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#BUTTON_TEXTURES
    [[maybe_unused]] static jobject get_field_BUTTON_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RECIPE_BUTTON_SPRITES", "field_45550", "BUTTON_TEXTURES", "f_291154_"), "Lfjz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#BUTTON_TEXTURES
    [[maybe_unused]] static void set_field_BUTTON_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RECIPE_BUTTON_SPRITES", "field_45550", "BUTTON_TEXTURES", "f_291154_"), "Lfjz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#FILTER_BUTTON_TEXTURES
    [[maybe_unused]] static jobject get_field_FILTER_BUTTON_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "FILTER_BUTTON_SPRITES", "field_45551", "FILTER_BUTTON_TEXTURES", "f_291757_"), "Lfjz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#FILTER_BUTTON_TEXTURES
    [[maybe_unused]] static void set_field_FILTER_BUTTON_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "FILTER_BUTTON_SPRITES", "field_45551", "FILTER_BUTTON_TEXTURES", "f_291757_"), "Lfjz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#TEXTURE
    [[maybe_unused]] static jobject get_field_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RECIPE_BOOK_LOCATION", "field_3097", "TEXTURE", "f_100268_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#TEXTURE
    [[maybe_unused]] static void set_field_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RECIPE_BOOK_LOCATION", "field_3097", "TEXTURE", "f_100268_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#SEARCH_HINT_TEXT
    [[maybe_unused]] static jobject get_field_SEARCH_HINT_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SEARCH_HINT", "field_25711", "SEARCH_HINT_TEXT", "f_100273_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#SEARCH_HINT_TEXT
    [[maybe_unused]] static void set_field_SEARCH_HINT_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SEARCH_HINT", "field_25711", "SEARCH_HINT_TEXT", "f_100273_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#field_32408
    [[maybe_unused]] static jint get_field_field_32408() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "IMAGE_WIDTH", "field_32408", "field_32408", "f_170042_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#field_32408
    [[maybe_unused]] static void set_field_field_32408(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "IMAGE_WIDTH", "field_32408", "field_32408", "f_170042_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#field_32409
    [[maybe_unused]] static jint get_field_field_32409() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "IMAGE_HEIGHT", "field_32409", "field_32409", "f_170043_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#field_32409
    [[maybe_unused]] static void set_field_field_32409(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "IMAGE_HEIGHT", "field_32409", "field_32409", "f_170043_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#field_32410
    [[maybe_unused]] static jint get_field_field_32410() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "OFFSET_X_POSITION", "field_32410", "field_32410", "f_170044_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#field_32410
    [[maybe_unused]] static void set_field_field_32410(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "OFFSET_X_POSITION", "field_32410", "field_32410", "f_170044_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#TOGGLE_CRAFTABLE_RECIPES_TEXT
    [[maybe_unused]] static jobject get_field_TOGGLE_CRAFTABLE_RECIPES_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "ONLY_CRAFTABLES_TOOLTIP", "field_26593", "TOGGLE_CRAFTABLE_RECIPES_TEXT", "f_100274_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#TOGGLE_CRAFTABLE_RECIPES_TEXT
    [[maybe_unused]] static void set_field_TOGGLE_CRAFTABLE_RECIPES_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "ONLY_CRAFTABLES_TOOLTIP", "field_26593", "TOGGLE_CRAFTABLE_RECIPES_TEXT", "f_100274_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#TOGGLE_ALL_RECIPES_TEXT
    [[maybe_unused]] static jobject get_field_TOGGLE_ALL_RECIPES_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "ALL_RECIPES_TOOLTIP", "field_26594", "TOGGLE_ALL_RECIPES_TEXT", "f_100275_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#TOGGLE_ALL_RECIPES_TEXT
    [[maybe_unused]] static void set_field_TOGGLE_ALL_RECIPES_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "ALL_RECIPES_TOOLTIP", "field_26594", "TOGGLE_ALL_RECIPES_TEXT", "f_100275_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#leftOffset
    static jint get_field_leftOffset(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "xOffset", "field_3102", "leftOffset", "f_100276_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#leftOffset
    static void set_field_leftOffset(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "xOffset", "field_3102", "leftOffset", "f_100276_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#parentWidth
    static jint get_field_parentWidth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "width", "field_3101", "parentWidth", "f_100277_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#parentWidth
    static void set_field_parentWidth(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "width", "field_3101", "parentWidth", "f_100277_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#parentHeight
    static jint get_field_parentHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "height", "field_3100", "parentHeight", "f_100278_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#parentHeight
    static void set_field_parentHeight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "height", "field_3100", "parentHeight", "f_100278_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#ghostSlots
    static jobject get_field_ghostSlots(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "ghostRecipe", "field_3092", "ghostSlots", "f_100269_"), "Lfry;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#ghostSlots
    static void set_field_ghostSlots(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "ghostRecipe", "field_3092", "ghostSlots", "f_100269_"), "Lfry;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#tabButtons
    static jobject get_field_tabButtons(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "tabButtons", "field_3094", "tabButtons", "f_100279_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#tabButtons
    static void set_field_tabButtons(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "tabButtons", "field_3094", "tabButtons", "f_100279_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#currentTab
    static jobject get_field_currentTab(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "selectedTab", "field_3098", "currentTab", "f_100280_"), "Lfsc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#currentTab
    static void set_field_currentTab(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "selectedTab", "field_3098", "currentTab", "f_100280_"), "Lfsc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#toggleCraftableButton
    static jobject get_field_toggleCraftableButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "filterButton", "field_3088", "toggleCraftableButton", "f_100270_"), "Lfjs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#toggleCraftableButton
    static void set_field_toggleCraftableButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "filterButton", "field_3088", "toggleCraftableButton", "f_100270_"), "Lfjs;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#craftingScreenHandler
    static jobject get_field_craftingScreenHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "menu", "field_3095", "craftingScreenHandler", "f_100271_"), "Lcri;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#craftingScreenHandler
    static void set_field_craftingScreenHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "menu", "field_3095", "craftingScreenHandler", "f_100271_"), "Lcri;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "minecraft", "field_3091", "client", "f_100272_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "minecraft", "field_3091", "client", "f_100272_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#searchField
    static jobject get_field_searchField(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "searchBox", "field_3089", "searchField", "f_100281_"), "Lfiv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#searchField
    static void set_field_searchField(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "searchBox", "field_3089", "searchField", "f_100281_"), "Lfiv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#searchText
    static jobject get_field_searchText(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "lastSearch", "field_3099", "searchText", "f_100282_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#searchText
    static void set_field_searchText(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "lastSearch", "field_3099", "searchText", "f_100282_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#recipeBook
    static jobject get_field_recipeBook(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "book", "field_3096", "recipeBook", "f_100283_"), "Lfga;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#recipeBook
    static void set_field_recipeBook(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "book", "field_3096", "recipeBook", "f_100283_"), "Lfga;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#recipesArea
    static jobject get_field_recipesArea(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "recipeBookPage", "field_3086", "recipesArea", "f_100284_"), "Lfsb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#recipesArea
    static void set_field_recipesArea(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "recipeBookPage", "field_3086", "recipesArea", "f_100284_"), "Lfsb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#recipeFinder
    static jobject get_field_recipeFinder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "stackedContents", "field_3090", "recipeFinder", "f_100285_"), "Lcnb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#recipeFinder
    static void set_field_recipeFinder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "stackedContents", "field_3090", "recipeFinder", "f_100285_"), "Lcnb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#cachedInvChangeCount
    static jint get_field_cachedInvChangeCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "timesInventoryChanged", "field_3093", "cachedInvChangeCount", "f_100286_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#cachedInvChangeCount
    static void set_field_cachedInvChangeCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "timesInventoryChanged", "field_3093", "cachedInvChangeCount", "f_100286_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#searching
    static jboolean get_field_searching(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "ignoreTextInput", "field_3087", "searching", "f_100287_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#searching
    static void set_field_searching(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "ignoreTextInput", "field_3087", "searching", "f_100287_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#open
    static jboolean get_field_open(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "visible", "field_33679", "open", "f_170041_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#open
    static void set_field_open(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "visible", "field_33679", "open", "f_170041_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#narrow
    static jboolean get_field_narrow(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "widthTooNarrow", "field_34001", "narrow", "f_181400_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.recipebook.RecipeBookWidget#narrow
    static void set_field_narrow(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "widthTooNarrow", "field_34001", "narrow", "f_181400_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "init", "method_2597", "initialize", "m_100309_"), "(IILfgo;ZLcri;)V");
    }

    static void initialize(const jobject& obj, const jint& arg0, const jint& arg1, const jobject& arg2, const jboolean& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_initialize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_reset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "initVisuals", "method_2579", "reset", "m_181404_"), "()V");
    }

    static void reset(const jobject& obj) {
                
       const auto methodID = methodID_reset();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updateFilterButtonTooltip", "method_47429", "updateTooltip", "m_257619_"), "()V");
    }

    static void updateTooltip(const jobject& obj) {
                
       const auto methodID = methodID_updateTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setBookButtonTexture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "initFilterButtonTextures", "method_2585", "setBookButtonTexture", "m_5674_"), "()V");
    }

    static void setBookButtonTexture(const jobject& obj) {
                
       const auto methodID = methodID_setBookButtonTexture();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_findLeftEdge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateScreenPosition", "method_2595", "findLeftEdge", "m_181401_"), "(II)I");
    }

    static jint findLeftEdge(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_findLeftEdge();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_toggleOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "toggleVisibility", "method_2591", "toggleOpen", "m_100384_"), "()V");
    }

    static void toggleOpen(const jobject& obj) {
                
       const auto methodID = methodID_toggleOpen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isVisible", "method_2605", "isOpen", "m_100385_"), "()Z");
    }

    static jboolean isOpen(const jobject& obj) {
                
       const auto methodID = methodID_isOpen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isGuiOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "isVisibleAccordingToBookData", "method_36485", "isGuiOpen", "m_170050_"), "()Z");
    }

    static jboolean isGuiOpen(const jobject& obj) {
                
       const auto methodID = methodID_isGuiOpen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setVisible", "method_2593", "setOpen", "m_100369_"), "(Z)V");
    }

    static void setOpen(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setOpen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_slotClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "slotClicked", "method_2600", "slotClicked", "m_6904_"), "(Lcrq;)V");
    }

    static void slotClicked(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_slotClicked();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_refreshResults() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "updateCollections", "method_2603", "refreshResults", "m_100382_"), "(Z)V");
    }

    static void refreshResults(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_refreshResults();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_refreshTabButtons() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "updateTabs", "method_2606", "refreshTabButtons", "m_100351_"), "()V");
    }

    static void refreshTabButtons(const jobject& obj) {
                
       const auto methodID = methodID_refreshTabButtons();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "tick", "method_2590", "update", "m_100386_"), "()V");
    }

    static void update(const jobject& obj) {
                
       const auto methodID = methodID_update();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_refreshInputs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "updateStackedContents", "method_2587", "refreshInputs", "m_100389_"), "()V");
    }

    static void refreshInputs(const jobject& obj) {
                
       const auto methodID = methodID_refreshInputs();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderTooltip", "method_2601", "drawTooltip", "m_280545_"), "(Lfhz;IIII)V");
    }

    static void drawTooltip(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_drawTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getToggleCraftableButtonText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getRecipeFilterName", "method_17064", "getToggleCraftableButtonText", "m_5815_"), "()Lwz;");
    }

    static jobject getToggleCraftableButtonText(const jobject& obj) {
                
       const auto methodID = methodID_getToggleCraftableButtonText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_drawGhostSlotTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderGhostRecipeTooltip", "method_2602", "drawGhostSlotTooltip", "m_280622_"), "(Lfhz;IIII)V");
    }

    static void drawGhostSlotTooltip(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_drawGhostSlotTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_drawGhostSlots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderGhostRecipe", "method_2581", "drawGhostSlots", "m_280128_"), "(Lfhz;IIZF)V");
    }

    static void drawGhostSlots(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jboolean& arg3, const jfloat& arg4) {
                
       const auto methodID = methodID_drawGhostSlots();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_toggleFilteringCraftable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "toggleFiltering", "method_2589", "toggleFilteringCraftable", "m_100391_"), "()Z");
    }

    static jboolean toggleFilteringCraftable(const jobject& obj) {
                
       const auto methodID = methodID_toggleFilteringCraftable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isClickOutsideBounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasClickedOutside", "method_2598", "isClickOutsideBounds", "m_100297_"), "(DDIIIII)Z");
    }

    static jboolean isClickOutsideBounds(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6) {
                
       const auto methodID = methodID_isClickOutsideBounds();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_keyPressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "keyPressed", "method_25404", "keyPressed", "m_7933_"), "(III)Z");
    }

    static jboolean keyPressed(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_keyPressed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_keyReleased() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "keyReleased", "method_16803", "keyReleased", "m_7920_"), "(III)Z");
    }

    static jboolean keyReleased(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_keyReleased();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_charTyped() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "charTyped", "method_25400", "charTyped", "m_5534_"), "(CI)Z");
    }

    static jboolean charTyped(const jobject& obj, const jchar& arg0, const jint& arg1) {
                
       const auto methodID = methodID_charTyped();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isMouseOver() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isMouseOver", "method_25405", "isMouseOver", "m_5953_"), "(DD)Z");
    }

    static jboolean isMouseOver(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_isMouseOver();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setFocused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setFocused", "method_25365", "setFocused", "m_93692_"), "(Z)V");
    }

    static void setFocused(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setFocused();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isFocused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aO_", "isFocused", "method_25370", "isFocused", "m_93696_"), "()Z");
    }

    static jboolean isFocused(const jobject& obj) {
                
       const auto methodID = methodID_isFocused();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_refreshSearchResults() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "checkSearchStringUpdate", "method_2586", "refreshSearchResults", "m_100392_"), "()V");
    }

    static void refreshSearchResults(const jobject& obj) {
                
       const auto methodID = methodID_refreshSearchResults();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_triggerPirateSpeakEasterEgg() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pirateSpeechForThePeople", "method_2576", "triggerPirateSpeakEasterEgg", "m_100335_"), "(Ljava/lang/String;)V");
    }

    static void triggerPirateSpeakEasterEgg(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_triggerPirateSpeakEasterEgg();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isWide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "isOffsetNextToMainGUI", "method_2604", "isWide", "m_100393_"), "()Z");
    }

    static jboolean isWide(const jobject& obj) {
                
       const auto methodID = methodID_isWide();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_refresh() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "recipesUpdated", "method_2592", "refresh", "m_100387_"), "()V");
    }

    static void refresh(const jobject& obj) {
                
       const auto methodID = methodID_refresh();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onRecipesDisplayed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "recipesShown", "method_2646", "onRecipesDisplayed", "m_7262_"), "(Ljava/util/List;)V");
    }

    static void onRecipesDisplayed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onRecipesDisplayed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_showGhostRecipe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupGhostRecipe", "method_2596", "showGhostRecipe", "m_7173_"), "(Lczb;Ljava/util/List;)V");
    }

    static void showGhostRecipe(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_showGhostRecipe();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_acceptAlignedInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addItemToSlot", "method_60344", "acceptAlignedInput", "m_5817_"), "(Lcyw;IIII)V");
    }

    static void acceptAlignedInput(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_acceptAlignedInput();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_sendBookDataPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "sendUpdateSettings", "method_2588", "sendBookDataPacket", "m_100388_"), "()V");
    }

    static void sendBookDataPacket(const jobject& obj) {
                
       const auto methodID = methodID_sendBookDataPacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "narrationPriority", "method_37018", "getType", "m_142684_"), "()Lfmg$a;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_appendNarrations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updateNarration", "method_37020", "appendNarrations", "m_142291_"), "(Lfmi;)V");
    }

    static void appendNarrations(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_appendNarrations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_RECIPEBOOK_RECIPEBOOKWIDGET_HPP