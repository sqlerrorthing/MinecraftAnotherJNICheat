// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_CHATINPUTSUGGESTOR_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_CHATINPUTSUGGESTOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.ChatInputSuggestor
 * Remapped: fip
 */
namespace ChatInputSuggestor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fip", "net/minecraft/client/gui/components/CommandSuggestions", "net/minecraft/class_4717", "net/minecraft/client/gui/screen/ChatInputSuggestor", "net/minecraft/src/C_3456_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#WHITESPACE_PATTERN
    [[maybe_unused]] static jobject get_field_WHITESPACE_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WHITESPACE_PATTERN", "field_21596", "WHITESPACE_PATTERN", "f_93847_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#WHITESPACE_PATTERN
    [[maybe_unused]] static void set_field_WHITESPACE_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WHITESPACE_PATTERN", "field_21596", "WHITESPACE_PATTERN", "f_93847_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#ERROR_STYLE
    [[maybe_unused]] static jobject get_field_ERROR_STYLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "UNPARSED_STYLE", "field_25885", "ERROR_STYLE", "f_93848_"), "Lxw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#ERROR_STYLE
    [[maybe_unused]] static void set_field_ERROR_STYLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "UNPARSED_STYLE", "field_25885", "ERROR_STYLE", "f_93848_"), "Lxw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#INFO_STYLE
    [[maybe_unused]] static jobject get_field_INFO_STYLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LITERAL_STYLE", "field_25886", "INFO_STYLE", "f_93849_"), "Lxw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#INFO_STYLE
    [[maybe_unused]] static void set_field_INFO_STYLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LITERAL_STYLE", "field_25886", "INFO_STYLE", "f_93849_"), "Lxw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#HIGHLIGHT_STYLES
    [[maybe_unused]] static jobject get_field_HIGHLIGHT_STYLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ARGUMENT_STYLES", "field_25887", "HIGHLIGHT_STYLES", "f_93850_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#HIGHLIGHT_STYLES
    [[maybe_unused]] static void set_field_HIGHLIGHT_STYLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ARGUMENT_STYLES", "field_25887", "HIGHLIGHT_STYLES", "f_93850_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.ChatInputSuggestor#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "minecraft", "field_21597", "client", "f_93851_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.ChatInputSuggestor#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "minecraft", "field_21597", "client", "f_93851_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ChatInputSuggestor#owner
    static jobject get_field_owner(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "screen", "field_21598", "owner", "f_93852_"), "Lfod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#owner
    static void set_field_owner(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "screen", "field_21598", "owner", "f_93852_"), "Lfod;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.ChatInputSuggestor#textField
    static jobject get_field_textField(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "input", "field_21599", "textField", "f_93853_"), "Lfiv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.ChatInputSuggestor#textField
    static void set_field_textField(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "input", "field_21599", "textField", "f_93853_"), "Lfiv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.ChatInputSuggestor#textRenderer
    static jobject get_field_textRenderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "font", "field_21600", "textRenderer", "f_93854_"), "Lfhx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.ChatInputSuggestor#textRenderer
    static void set_field_textRenderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "font", "field_21600", "textRenderer", "f_93854_"), "Lfhx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ChatInputSuggestor#slashOptional
    static jboolean get_field_slashOptional(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "commandsOnly", "field_21601", "slashOptional", "f_93855_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#slashOptional
    static void set_field_slashOptional(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "commandsOnly", "field_21601", "slashOptional", "f_93855_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ChatInputSuggestor#suggestingWhenEmpty
    static jboolean get_field_suggestingWhenEmpty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "onlyShowIfCursorPastError", "field_21602", "suggestingWhenEmpty", "f_93856_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#suggestingWhenEmpty
    static void set_field_suggestingWhenEmpty(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "onlyShowIfCursorPastError", "field_21602", "suggestingWhenEmpty", "f_93856_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.ChatInputSuggestor#inWindowIndexOffset
    static jint get_field_inWindowIndexOffset(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "lineStartOffset", "field_21603", "inWindowIndexOffset", "f_93857_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.ChatInputSuggestor#inWindowIndexOffset
    static void set_field_inWindowIndexOffset(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "lineStartOffset", "field_21603", "inWindowIndexOffset", "f_93857_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.ChatInputSuggestor#maxSuggestionSize
    static jint get_field_maxSuggestionSize(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "suggestionLineLimit", "field_21604", "maxSuggestionSize", "f_93858_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.ChatInputSuggestor#maxSuggestionSize
    static void set_field_maxSuggestionSize(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "suggestionLineLimit", "field_21604", "maxSuggestionSize", "f_93858_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.ChatInputSuggestor#chatScreenSized
    static jboolean get_field_chatScreenSized(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "anchorToBottom", "field_21605", "chatScreenSized", "f_93859_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.ChatInputSuggestor#chatScreenSized
    static void set_field_chatScreenSized(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "anchorToBottom", "field_21605", "chatScreenSized", "f_93859_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.ChatInputSuggestor#color
    static jint get_field_color(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "fillColor", "field_21606", "color", "f_93860_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.ChatInputSuggestor#color
    static void set_field_color(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "fillColor", "field_21606", "color", "f_93860_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ChatInputSuggestor#messages
    static jobject get_field_messages(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "commandUsage", "field_21607", "messages", "f_93861_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#messages
    static void set_field_messages(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "commandUsage", "field_21607", "messages", "f_93861_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ChatInputSuggestor#x
    static jint get_field_x(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "commandUsagePosition", "field_21608", "x", "f_93862_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#x
    static void set_field_x(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "commandUsagePosition", "field_21608", "x", "f_93862_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ChatInputSuggestor#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "commandUsageWidth", "field_21609", "width", "f_93863_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "commandUsageWidth", "field_21609", "width", "f_93863_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ChatInputSuggestor#parse
    static jobject get_field_parse(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "currentParse", "field_21610", "parse", "f_93864_"), "Lcom/mojang/brigadier/ParseResults;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#parse
    static void set_field_parse(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "currentParse", "field_21610", "parse", "f_93864_"), "Lcom/mojang/brigadier/ParseResults;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ChatInputSuggestor#pendingSuggestions
    static jobject get_field_pendingSuggestions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "pendingSuggestions", "field_21611", "pendingSuggestions", "f_93865_"), "Ljava/util/concurrent/CompletableFuture;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#pendingSuggestions
    static void set_field_pendingSuggestions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "pendingSuggestions", "field_21611", "pendingSuggestions", "f_93865_"), "Ljava/util/concurrent/CompletableFuture;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ChatInputSuggestor#window
    static jobject get_field_window(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "suggestions", "field_21612", "window", "f_93866_"), "Lfip$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#window
    static void set_field_window(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "suggestions", "field_21612", "window", "f_93866_"), "Lfip$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ChatInputSuggestor#windowActive
    static jboolean get_field_windowActive(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "allowSuggestions", "field_21613", "windowActive", "f_93867_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#windowActive
    static void set_field_windowActive(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "allowSuggestions", "field_21613", "windowActive", "f_93867_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.ChatInputSuggestor#completingSuggestions
    static jboolean get_field_completingSuggestions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "keepSuggestions", "field_21614", "completingSuggestions", "f_93868_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.ChatInputSuggestor#completingSuggestions
    static void set_field_completingSuggestions(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "keepSuggestions", "field_21614", "completingSuggestions", "f_93868_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ChatInputSuggestor#canLeave
    static jboolean get_field_canLeave(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "allowHiding", "field_46191", "canLeave", "f_301421_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ChatInputSuggestor#canLeave
    static void set_field_canLeave(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "allowHiding", "field_46191", "canLeave", "f_301421_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_setWindowActive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setAllowSuggestions", "method_23933", "setWindowActive", "m_93922_"), "(Z)V");
    }

    static void setWindowActive(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setWindowActive();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setCanLeave() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setAllowHiding", "method_53869", "setCanLeave", "m_301505_"), "(Z)V");
    }

    static void setCanLeave(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setCanLeave();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_keyPressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "keyPressed", "method_23924", "keyPressed", "m_93888_"), "(III)Z");
    }

    static jboolean keyPressed(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_keyPressed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_mouseScrolled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseScrolled", "method_23921", "mouseScrolled", "m_93882_"), "(D)Z");
    }

    static jboolean mouseScrolled(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_mouseScrolled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_23922", "mouseClicked", "m_93884_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_show() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "showSuggestions", "method_23920", "show", "m_93930_"), "(Z)V");
    }

    static void show(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_show();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isVisible", "method_53867", "isOpen", "m_301499_"), "()Z");
    }

    static jboolean isOpen(const jobject& obj) {
                
       const auto methodID = methodID_isOpen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSuggestionUsageNarrationText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getUsageNarration", "method_53868", "getSuggestionUsageNarrationText", "m_301506_"), "()Lwz;");
    }

    static jobject getSuggestionUsageNarrationText(const jobject& obj) {
                
       const auto methodID = methodID_getSuggestionUsageNarrationText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_clearWindow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "hide", "method_44931", "clearWindow", "m_241889_"), "()V");
    }

    static void clearWindow(const jobject& obj) {
                
       const auto methodID = methodID_clearWindow();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_sortSuggestions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sortSuggestions", "method_30104", "sortSuggestions", "m_93898_"), "(Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List;");
    }

    static jobject sortSuggestions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sortSuggestions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_refresh() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "updateCommandInfo", "method_23934", "refresh", "m_93881_"), "()V");
    }

    static void refresh(const jobject& obj) {
                
       const auto methodID = methodID_refresh();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStartOfCurrentWord() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getLastWordIndex", "method_23930", "getStartOfCurrentWord", "m_93912_"), "(Ljava/lang/String;)I");
    }

    static jint getStartOfCurrentWord(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getStartOfCurrentWord();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_formatException() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getExceptionMessage", "method_30505", "formatException", "m_93896_"), "(Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Laya;");
    }

    static jobject formatException(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_formatException();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_showCommandSuggestions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "updateUsageInfo", "method_23937", "showCommandSuggestions", "m_93932_"), "()V");
    }

    static void showCommandSuggestions(const jobject& obj) {
                
       const auto methodID = methodID_showCommandSuggestions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_showUsages() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillNodeUsage", "method_23929", "showUsages", "m_93920_"), "(Ln;)Z");
    }

    static jboolean showUsages(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_showUsages();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_provideRenderText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "formatChat", "method_23931", "provideRenderText", "m_93914_"), "(Ljava/lang/String;I)Laya;");
    }

    static jobject provideRenderText(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_provideRenderText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSuggestionSuffix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateSuggestionSuffix", "method_23936", "getSuggestionSuffix", "m_93927_"), "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject getSuggestionSuffix(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getSuggestionSuffix();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_highlight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "formatText", "method_23925", "highlight", "m_93892_"), "(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Laya;");
    }

    static jobject highlight(const jobject& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_highlight();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_23923", "render", "m_280540_"), "(Lfhz;II)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_tryRenderWindow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderSuggestions", "method_44933", "tryRenderWindow", "m_280467_"), "(Lfhz;II)Z");
    }

    static jboolean tryRenderWindow(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_tryRenderWindow();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_renderMessages() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderUsage", "method_44932", "renderMessages", "m_280123_"), "(Lfhz;)V");
    }

    static void renderMessages(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_renderMessages();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNarration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getNarrationMessage", "method_23958", "getNarration", "m_272218_"), "()Lwz;");
    }

    static jobject getNarration(const jobject& obj) {
                
       const auto methodID = methodID_getNarration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_CHATINPUTSUGGESTOR_HPP