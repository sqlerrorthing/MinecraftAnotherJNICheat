// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_OPTION_TELEMETRYINFOSCREEN_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_OPTION_TELEMETRYINFOSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.option.TelemetryInfoScreen
 * Remapped: fsz
 */
namespace TelemetryInfoScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fsz", "net/minecraft/client/gui/screens/telemetry/TelemetryInfoScreen", "net/minecraft/class_7944", "net/minecraft/client/gui/screen/option/TelemetryInfoScreen", "net/minecraft/src/C_260407_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#TITLE_TEXT
    [[maybe_unused]] static jobject get_field_TITLE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TITLE", "field_41369", "TITLE_TEXT", "f_260608_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#TITLE_TEXT
    [[maybe_unused]] static void set_field_TITLE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TITLE", "field_41369", "TITLE_TEXT", "f_260608_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#DESCRIPTION_TEXT
    [[maybe_unused]] static jobject get_field_DESCRIPTION_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DESCRIPTION", "field_41370", "DESCRIPTION_TEXT", "f_260486_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#DESCRIPTION_TEXT
    [[maybe_unused]] static void set_field_DESCRIPTION_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DESCRIPTION", "field_41370", "DESCRIPTION_TEXT", "f_260486_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#PRIVACY_STATEMENT_TEXT
    [[maybe_unused]] static jobject get_field_PRIVACY_STATEMENT_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BUTTON_PRIVACY_STATEMENT", "field_45567", "PRIVACY_STATEMENT_TEXT", "f_291048_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#PRIVACY_STATEMENT_TEXT
    [[maybe_unused]] static void set_field_PRIVACY_STATEMENT_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BUTTON_PRIVACY_STATEMENT", "field_45567", "PRIVACY_STATEMENT_TEXT", "f_291048_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#GIVE_FEEDBACK_TEXT
    [[maybe_unused]] static jobject get_field_GIVE_FEEDBACK_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "BUTTON_GIVE_FEEDBACK", "field_41371", "GIVE_FEEDBACK_TEXT", "f_260498_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#GIVE_FEEDBACK_TEXT
    [[maybe_unused]] static void set_field_GIVE_FEEDBACK_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "BUTTON_GIVE_FEEDBACK", "field_41371", "GIVE_FEEDBACK_TEXT", "f_260498_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#SHOW_DATA_TEXT
    [[maybe_unused]] static jobject get_field_SHOW_DATA_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BUTTON_VIEW_DATA", "field_41372", "SHOW_DATA_TEXT", "f_313941_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#SHOW_DATA_TEXT
    [[maybe_unused]] static void set_field_SHOW_DATA_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BUTTON_VIEW_DATA", "field_41372", "SHOW_DATA_TEXT", "f_313941_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#OPT_IN_DESCRIPTION_TEXT
    [[maybe_unused]] static jobject get_field_OPT_IN_DESCRIPTION_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "CHECKBOX_OPT_IN", "field_47126", "OPT_IN_DESCRIPTION_TEXT", "f_302505_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#OPT_IN_DESCRIPTION_TEXT
    [[maybe_unused]] static void set_field_OPT_IN_DESCRIPTION_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "CHECKBOX_OPT_IN", "field_47126", "OPT_IN_DESCRIPTION_TEXT", "f_302505_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#MARGIN
    [[maybe_unused]] static jint get_field_MARGIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SPACING", "field_41367", "MARGIN", "f_314086_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#MARGIN
    [[maybe_unused]] static void set_field_MARGIN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SPACING", "field_41367", "MARGIN", "f_314086_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#OPTIONAL_TELEMETRY_ENABLED_BY_API
    [[maybe_unused]] static jboolean get_field_OPTIONAL_TELEMETRY_ENABLED_BY_API() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "EXTRA_TELEMETRY_AVAILABLE", "field_49552", "OPTIONAL_TELEMETRY_ENABLED_BY_API", "f_315492_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#OPTIONAL_TELEMETRY_ENABLED_BY_API
    [[maybe_unused]] static void set_field_OPTIONAL_TELEMETRY_ENABLED_BY_API(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "EXTRA_TELEMETRY_AVAILABLE", "field_49552", "OPTIONAL_TELEMETRY_ENABLED_BY_API", "f_315492_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#parent
    static jobject get_field_parent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "lastScreen", "field_41373", "parent", "f_260671_"), "Lfod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#parent
    static void set_field_parent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "lastScreen", "field_41373", "parent", "f_260671_"), "Lfod;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#options
    static jobject get_field_options(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "options", "field_41374", "options", "f_260521_"), "Lfgs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#options
    static void set_field_options(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "options", "field_41374", "options", "f_260521_"), "Lfgs;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#layout
    static jobject get_field_layout(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "layout", "field_49553", "layout", "f_315925_"), "Lflz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#layout
    static void set_field_layout(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "layout", "field_49553", "layout", "f_315925_"), "Lflz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#telemetryEventWidget
    static jobject get_field_telemetryEventWidget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "telemetryEventWidget", "field_41375", "telemetryEventWidget", "f_260514_"), "Lfsy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#telemetryEventWidget
    static void set_field_telemetryEventWidget(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "telemetryEventWidget", "field_41375", "telemetryEventWidget", "f_260514_"), "Lfsy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#textWidget
    static jobject get_field_textWidget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "description", "field_49554", "textWidget", "f_314134_"), "Lfjg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#textWidget
    static void set_field_textWidget(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "description", "field_49554", "textWidget", "f_314134_"), "Lfjg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#scroll
    static jdouble get_field_scroll(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "savedScroll", "field_41376", "scroll", "f_260692_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryInfoScreen#scroll
    static void set_field_scroll(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "savedScroll", "field_41376", "scroll", "f_260692_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    static jmethodID methodID_getNarratedTitle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getNarrationMessage", "method_25435", "getNarratedTitle", "m_142562_"), "()Lwz;");
    }

    static jobject getNarratedTitle(const jobject& obj) {
                
       const auto methodID = methodID_getNarratedTitle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT_", "init", "method_25426", "init", "m_7856_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_initTabNavigation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "repositionElements", "method_48640", "initTabNavigation", "m_267719_"), "()V");
    }

    static void initTabNavigation(const jobject& obj) {
                
       const auto methodID = methodID_initTabNavigation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setInitialFocus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aI_", "setInitialFocus", "method_56131", "setInitialFocus", "m_318615_"), "()V");
    }

    static void setInitialFocus(const jobject& obj) {
                
       const auto methodID = methodID_setInitialFocus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createOptInCheckbox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "createTelemetryCheckbox", "method_54802", "createOptInCheckbox", "m_307958_"), "()Lfik;");
    }

    static jobject createOptInCheckbox(const jobject& obj) {
                
       const auto methodID = methodID_createOptInCheckbox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateOptIn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onOptInChanged", "method_54803", "updateOptIn", "m_306548_"), "(Lfik;Z)V");
    }

    static void updateOptIn(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_updateOptIn();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_openPrivacyStatementPage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openPrivacyStatementLink", "method_52765", "openPrivacyStatementPage", "m_292662_"), "(Lfim;)V");
    }

    static void openPrivacyStatementPage(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openPrivacyStatementPage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_openFeedbackPage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "openFeedbackLink", "method_47650", "openFeedbackPage", "m_260900_"), "(Lfim;)V");
    }

    static void openFeedbackPage(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openFeedbackPage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_openLogDirectory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "openDataFolder", "method_47651", "openLogDirectory", "m_261269_"), "(Lfim;)V");
    }

    static void openLogDirectory(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openLogDirectory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "onClose", "method_25419", "close", "m_7379_"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_OPTION_TELEMETRYINFOSCREEN_HPP