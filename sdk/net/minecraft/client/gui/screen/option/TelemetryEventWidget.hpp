// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_OPTION_TELEMETRYEVENTWIDGET_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_OPTION_TELEMETRYEVENTWIDGET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.option.TelemetryEventWidget
 * Remapped: fsy
 */
namespace TelemetryEventWidget {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fsy", "net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget", "net/minecraft/class_7941", "net/minecraft/client/gui/screen/option/TelemetryEventWidget", "net/minecraft/src/C_260377_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#MARGIN_X
    [[maybe_unused]] static jint get_field_MARGIN_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "HEADER_HORIZONTAL_PADDING", "field_41355", "MARGIN_X", "f_260678_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#MARGIN_X
    [[maybe_unused]] static void set_field_MARGIN_X(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "HEADER_HORIZONTAL_PADDING", "field_41355", "MARGIN_X", "f_260678_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#REQUIRED_TRANSLATION_KEY
    [[maybe_unused]] static jobject get_field_REQUIRED_TRANSLATION_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TELEMETRY_REQUIRED_TRANSLATION_KEY", "field_41356", "REQUIRED_TRANSLATION_KEY", "f_260637_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#REQUIRED_TRANSLATION_KEY
    [[maybe_unused]] static void set_field_REQUIRED_TRANSLATION_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TELEMETRY_REQUIRED_TRANSLATION_KEY", "field_41356", "REQUIRED_TRANSLATION_KEY", "f_260637_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#OPTIONAL_TRANSLATION_KEY
    [[maybe_unused]] static jobject get_field_OPTIONAL_TRANSLATION_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TELEMETRY_OPTIONAL_TRANSLATION_KEY", "field_41357", "OPTIONAL_TRANSLATION_KEY", "f_260658_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#OPTIONAL_TRANSLATION_KEY
    [[maybe_unused]] static void set_field_OPTIONAL_TRANSLATION_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TELEMETRY_OPTIONAL_TRANSLATION_KEY", "field_41357", "OPTIONAL_TRANSLATION_KEY", "f_260658_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#DISABLED_TRANSLATION_KEY
    [[maybe_unused]] static jobject get_field_DISABLED_TRANSLATION_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TELEMETRY_OPTIONAL_DISABLED_TRANSLATION_KEY", "field_47125", "DISABLED_TRANSLATION_KEY", "f_303382_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#DISABLED_TRANSLATION_KEY
    [[maybe_unused]] static void set_field_DISABLED_TRANSLATION_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TELEMETRY_OPTIONAL_DISABLED_TRANSLATION_KEY", "field_47125", "DISABLED_TRANSLATION_KEY", "f_303382_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#PROPERTY_TITLE_TEXT
    [[maybe_unused]] static jobject get_field_PROPERTY_TITLE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PROPERTY_TITLE", "field_41358", "PROPERTY_TITLE_TEXT", "f_260432_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#PROPERTY_TITLE_TEXT
    [[maybe_unused]] static void set_field_PROPERTY_TITLE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PROPERTY_TITLE", "field_41358", "PROPERTY_TITLE_TEXT", "f_260432_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#textRenderer
    static jobject get_field_textRenderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "font", "field_41359", "textRenderer", "f_260606_"), "Lfhx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#textRenderer
    static void set_field_textRenderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "font", "field_41359", "textRenderer", "f_260606_"), "Lfhx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#contents
    static jobject get_field_contents(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "content", "field_41360", "contents", "f_260489_"), "Lfsy$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#contents
    static void set_field_contents(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "content", "field_41360", "contents", "f_260489_"), "Lfsy$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#scrollConsumer
    static jobject get_field_scrollConsumer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "onScrolledListener", "field_41361", "scrollConsumer", "f_260673_"), "Ljava/util/function/DoubleConsumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.option.TelemetryEventWidget#scrollConsumer
    static void set_field_scrollConsumer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "onScrolledListener", "field_41361", "scrollConsumer", "f_260673_"), "Ljava/util/function/DoubleConsumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_refresh() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onOptInChanged", "method_47638", "refresh", "m_261018_"), "(Z)V");
    }

    static void refresh(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_refresh();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initContents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "updateLayout", "method_57767", "initContents", "m_320073_"), "()V");
    }

    static void initContents(const jobject& obj) {
                
       const auto methodID = methodID_initContents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_collectContents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "buildContent", "method_47639", "collectContents", "m_261270_"), "(Z)Lfsy$a;");
    }

    static jobject collectContents(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_collectContents();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setScrollConsumer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOnScrolledListener", "method_47637", "setScrollConsumer", "m_261118_"), "(Ljava/util/function/DoubleConsumer;)V");
    }

    static void setScrollConsumer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setScrollConsumer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setScrollY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setScrollAmount", "method_44382", "setScrollY", "m_240206_"), "(D)V");
    }

    static void setScrollY(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setScrollY();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getContentsHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getInnerHeight", "method_44391", "getContentsHeight", "m_239019_"), "()I");
    }

    static jint getContentsHeight(const jobject& obj) {
                
       const auto methodID = methodID_getContentsHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDeltaYPerScroll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "scrollRate", "method_44393", "getDeltaYPerScroll", "m_239725_"), "()D");
    }

    static jdouble getDeltaYPerScroll(const jobject& obj) {
                
       const auto methodID = methodID_getDeltaYPerScroll();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_renderContents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "renderContents", "method_44389", "renderContents", "m_239197_"), "(Lfhz;IIF)V");
    }

    static void renderContents(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_renderContents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_appendClickableNarrations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateWidgetNarration", "method_47399", "appendClickableNarrations", "m_168797_"), "(Lfmi;)V");
    }

    static void appendClickableNarrations(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_appendClickableNarrations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_formatTitleText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "grayOutIfDisabled", "method_54801", "formatTitleText", "m_307072_"), "(Lwz;Z)Lwz;");
    }

    static jobject formatTitleText(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_formatTitleText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_appendEventInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addEventType", "method_47635", "appendEventInfo", "m_261199_"), "(Lfsy$b;Lgvo;Z)V");
    }

    static void appendEventInfo(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_appendEventInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_appendProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addEventTypeProperties", "method_47636", "appendProperties", "m_260944_"), "(Lgvo;Lfsy$b;Z)V");
    }

    static void appendProperties(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_appendProperties();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getGridWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "containerWidth", "method_47640", "getGridWidth", "m_261310_"), "()I");
    }

    static jint getGridWidth(const jobject& obj) {
                
       const auto methodID = methodID_getGridWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_OPTION_TELEMETRYEVENTWIDGET_HPP