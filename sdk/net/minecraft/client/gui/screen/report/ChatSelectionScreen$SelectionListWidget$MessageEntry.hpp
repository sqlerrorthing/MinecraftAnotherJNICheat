// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_REPORT_CHATSELECTIONSCREEN$SELECTIONLISTWIDGET$MESSAGEENTRY_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_REPORT_CHATSELECTIONSCREEN$SELECTIONLISTWIDGET$MESSAGEENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry
 * Remapped: fsn$a$d
 */
namespace ChatSelectionScreen$SelectionListWidget$MessageEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fsn$a$d", "net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageEntry", "net/minecraft/class_7543$class_7544$class_7548", "net/minecraft/client/gui/screen/report/ChatSelectionScreen$SelectionListWidget$MessageEntry", "net/minecraft/src/C_238447_$C_238511_$C_238459_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#CHECKMARK_WIDTH
    [[maybe_unused]] static jint get_field_CHECKMARK_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CHECKMARK_WIDTH", "field_39751", "CHECKMARK_WIDTH", "f_240229_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#CHECKMARK_WIDTH
    [[maybe_unused]] static void set_field_CHECKMARK_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CHECKMARK_WIDTH", "field_39751", "CHECKMARK_WIDTH", "f_240229_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#CHECKMARK_HEIGHT
    [[maybe_unused]] static jint get_field_CHECKMARK_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CHECKMARK_HEIGHT", "field_39752", "CHECKMARK_HEIGHT", "f_240224_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#CHECKMARK_HEIGHT
    [[maybe_unused]] static void set_field_CHECKMARK_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CHECKMARK_HEIGHT", "field_39752", "CHECKMARK_HEIGHT", "f_240224_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#CHAT_MESSAGE_LEFT_MARGIN
    [[maybe_unused]] static jint get_field_CHAT_MESSAGE_LEFT_MARGIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "INDENT_AMOUNT", "field_39599", "CHAT_MESSAGE_LEFT_MARGIN", "f_238672_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#CHAT_MESSAGE_LEFT_MARGIN
    [[maybe_unused]] static void set_field_CHAT_MESSAGE_LEFT_MARGIN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "INDENT_AMOUNT", "field_39599", "CHAT_MESSAGE_LEFT_MARGIN", "f_238672_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#INDICATOR_LEFT_MARGIN
    [[maybe_unused]] static jint get_field_INDICATOR_LEFT_MARGIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TAG_MARGIN_LEFT", "field_39775", "INDICATOR_LEFT_MARGIN", "f_240345_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#INDICATOR_LEFT_MARGIN
    [[maybe_unused]] static void set_field_INDICATOR_LEFT_MARGIN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TAG_MARGIN_LEFT", "field_39775", "INDICATOR_LEFT_MARGIN", "f_240345_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#index
    static jint get_field_index(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "chatId", "field_39600", "index", "f_238546_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#index
    static void set_field_index(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "chatId", "field_39600", "index", "f_238546_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#truncatedContent
    static jobject get_field_truncatedContent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "text", "field_39601", "truncatedContent", "f_238660_"), "Lxe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#truncatedContent
    static void set_field_truncatedContent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "text", "field_39601", "truncatedContent", "f_238660_"), "Lxe;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#narration
    static jobject get_field_narration(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "narration", "field_39602", "narration", "f_238609_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#narration
    static void set_field_narration(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "narration", "field_39602", "narration", "f_238609_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#fullContent
    static jobject get_field_fullContent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "hoverText", "field_39603", "fullContent", "f_238726_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#fullContent
    static void set_field_fullContent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "hoverText", "field_39603", "fullContent", "f_238726_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#indicatorIcon
    static jobject get_field_indicatorIcon(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "tagIcon", "field_39776", "indicatorIcon", "f_240368_"), "Lfgj$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#indicatorIcon
    static void set_field_indicatorIcon(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "tagIcon", "field_39776", "indicatorIcon", "f_240368_"), "Lfgj$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#originalContent
    static jobject get_field_originalContent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "tagHoverText", "field_39777", "originalContent", "f_240376_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#originalContent
    static void set_field_originalContent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "tagHoverText", "field_39777", "originalContent", "f_240376_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#fromReportedPlayer
    static jboolean get_field_fromReportedPlayer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "canReport", "field_39604", "fromReportedPlayer", "f_238811_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#fromReportedPlayer
    static void set_field_fromReportedPlayer(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "canReport", "field_39604", "fromReportedPlayer", "f_238811_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#isChatMessage
    static jboolean get_field_isChatMessage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "playerMessage", "field_39605", "isChatMessage", "f_238593_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.report.ChatSelectionScreen$SelectionListWidget$MessageEntry#isChatMessage
    static void set_field_isChatMessage(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "playerMessage", "field_39605", "isChatMessage", "f_238593_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25343", "render", "m_6311_"), "(Lfhz;IIIIIIIZF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jboolean& arg8, const jfloat& arg9) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_renderIndicator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderTag", "method_44729", "renderIndicator", "m_240479_"), "(Lfhz;IIIII)V");
    }

    static void renderIndicator(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5) {
                
       const auto methodID = methodID_renderIndicator();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_drawCheckmark() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSelectedCheckmark", "method_44695", "drawCheckmark", "m_280452_"), "(Lfhz;III)V");
    }

    static void drawCheckmark(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_drawCheckmark();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getTextWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getMaximumTextWidth", "method_44666", "getTextWidth", "m_239870_"), "()I");
    }

    static jint getTextWidth(const jobject& obj) {
                
       const auto methodID = methodID_getTextWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getIndent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getTextIndent", "method_44667", "getIndent", "m_239492_"), "()I");
    }

    static jint getIndent(const jobject& obj) {
                
       const auto methodID = methodID_getIndent();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNarration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getNarration", "method_37006", "getNarration", "m_142172_"), "()Lwz;");
    }

    static jobject getNarration(const jobject& obj) {
                
       const auto methodID = methodID_getNarration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_keyPressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "keyPressed", "method_25404", "keyPressed", "m_7933_"), "(III)Z");
    }

    static jboolean keyPressed(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_keyPressed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isSelected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isSelected", "method_44514", "isSelected", "m_239825_"), "()Z");
    }

    static jboolean isSelected(const jobject& obj) {
                
       const auto methodID = methodID_isSelected();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canSelect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "canSelect", "method_44515", "canSelect", "m_238989_"), "()Z");
    }

    static jboolean canSelect(const jobject& obj) {
                
       const auto methodID = methodID_canSelect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isHighlightedOnHover() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "canReport", "method_44694", "isHighlightedOnHover", "m_240270_"), "()Z");
    }

    static jboolean isHighlightedOnHover(const jobject& obj) {
                
       const auto methodID = methodID_isHighlightedOnHover();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_toggle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "toggleReport", "method_44517", "toggle", "m_240066_"), "()Z");
    }

    static jboolean toggle(const jobject& obj) {
                
       const auto methodID = methodID_toggle();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_REPORT_CHATSELECTIONSCREEN$SELECTIONLISTWIDGET$MESSAGEENTRY_HPP