// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_WORLD_CREATEWORLDSCREEN$GAMETAB_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_WORLD_CREATEWORLDSCREEN$GAMETAB_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.world.CreateWorldScreen$GameTab
 * Remapped: ftc$b
 */
namespace CreateWorldScreen$GameTab {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ftc$b", "net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$GameTab", "net/minecraft/class_525$class_8093", "net/minecraft/client/gui/screen/world/CreateWorldScreen$GameTab", "net/minecraft/src/C_3737_$C_267333_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$GameTab#GAME_TAB_TITLE_TEXT
    [[maybe_unused]] static jobject get_field_GAME_TAB_TITLE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TITLE", "field_42175", "GAME_TAB_TITLE_TEXT", "f_267405_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$GameTab#GAME_TAB_TITLE_TEXT
    [[maybe_unused]] static void set_field_GAME_TAB_TITLE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TITLE", "field_42175", "GAME_TAB_TITLE_TEXT", "f_267405_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$GameTab#ALLOW_COMMANDS_TEXT
    [[maybe_unused]] static jobject get_field_ALLOW_COMMANDS_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ALLOW_COMMANDS", "field_42176", "ALLOW_COMMANDS_TEXT", "f_315008_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$GameTab#ALLOW_COMMANDS_TEXT
    [[maybe_unused]] static void set_field_ALLOW_COMMANDS_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ALLOW_COMMANDS", "field_42176", "ALLOW_COMMANDS_TEXT", "f_315008_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.CreateWorldScreen$GameTab#worldNameField
    static jobject get_field_worldNameField(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "nameEdit", "field_42177", "worldNameField", "f_267368_"), "Lfiv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$GameTab#worldNameField
    static void set_field_worldNameField(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "nameEdit", "field_42177", "worldNameField", "f_267368_"), "Lfiv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_WORLD_CREATEWORLDSCREEN$GAMETAB_HPP