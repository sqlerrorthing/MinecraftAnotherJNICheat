// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_WORLD_WORLDSCREENOPTIONGRID$BUILDER_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_WORLD_WORLDSCREENOPTIONGRID$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder
 * Remapped: ftj$a
 */
namespace WorldScreenOptionGrid$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ftj$a", "net/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder", "net/minecraft/class_8096$class_8097", "net/minecraft/client/gui/screen/world/WorldScreenOptionGrid$Builder", "net/minecraft/src/C_267350_$C_267338_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "width", "field_42198", "width", "f_267465_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "width", "field_42198", "width", "f_267465_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder#options
    static jobject get_field_options(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "switchBuilders", "field_42199", "options", "f_267393_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder#options
    static void set_field_options(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "switchBuilders", "field_42199", "options", "f_267393_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder#marginLeft
    static jint get_field_marginLeft(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "paddingLeft", "field_42200", "marginLeft", "f_267428_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder#marginLeft
    static void set_field_marginLeft(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "paddingLeft", "field_42200", "marginLeft", "f_267428_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder#rowSpacing
    static jint get_field_rowSpacing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "rowSpacing", "field_42509", "rowSpacing", "f_268625_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder#rowSpacing
    static void set_field_rowSpacing(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "rowSpacing", "field_42509", "rowSpacing", "f_268625_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder#rows
    static jint get_field_rows(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "rowCount", "field_42510", "rows", "f_268635_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder#rows
    static void set_field_rows(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "rowCount", "field_42510", "rows", "f_268635_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder#tooltipBoxDisplay
    static jobject get_field_tooltipBoxDisplay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "infoUnderneath", "field_42511", "tooltipBoxDisplay", "f_268462_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.world.WorldScreenOptionGrid$Builder#tooltipBoxDisplay
    static void set_field_tooltipBoxDisplay(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "infoUnderneath", "field_42511", "tooltipBoxDisplay", "f_268462_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_incrementRows() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "increaseRow", "method_49025", "incrementRows", "m_269089_"), "()V");
    }

    static void incrementRows(const jobject& obj) {
                
       const auto methodID = methodID_incrementRows();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addSwitch", "method_48687", "add", "m_267583_"), "(Lwz;Ljava/util/function/BooleanSupplier;Ljava/util/function/Consumer;)Lftj$d;");
    }

    static jobject add(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__marginLeft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withPaddingLeft", "method_48685", "marginLeft", "m_267620_"), "(I)Lftj$a;");
    }

    static jobject _marginLeft(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__marginLeft();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setRowSpacing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "withRowSpacing", "method_49027", "setRowSpacing", "m_269119_"), "(I)Lftj$a;");
    }

    static jobject setRowSpacing(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setRowSpacing();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "build", "method_48686", "build", "m_267588_"), "(Ljava/util/function/Consumer;)Lftj;");
    }

    static jobject build(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withTooltipBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withInfoUnderneath", "method_49026", "withTooltipBox", "m_269141_"), "(IZ)Lftj$a;");
    }

    static jobject withTooltipBox(const jobject& obj, const jint& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_withTooltipBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_WORLD_WORLDSCREENOPTIONGRID$BUILDER_HPP