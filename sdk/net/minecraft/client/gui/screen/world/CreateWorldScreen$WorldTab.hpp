// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_WORLD_CREATEWORLDSCREEN$WORLDTAB_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_WORLD_CREATEWORLDSCREEN$WORLDTAB_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab
 * Remapped: ftc$d
 */
namespace CreateWorldScreen$WorldTab {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ftc$d", "net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$WorldTab", "net/minecraft/class_525$class_8095", "net/minecraft/client/gui/screen/world/CreateWorldScreen$WorldTab", "net/minecraft/src/C_3737_$C_267332_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#WORLD_TAB_TITLE_TEXT
    [[maybe_unused]] static jobject get_field_WORLD_TAB_TITLE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TITLE", "field_42183", "WORLD_TAB_TITLE_TEXT", "f_267449_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#WORLD_TAB_TITLE_TEXT
    [[maybe_unused]] static void set_field_WORLD_TAB_TITLE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TITLE", "field_42183", "WORLD_TAB_TITLE_TEXT", "f_267449_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#AMPLIFIED_GENERATOR_INFO_TEXT
    [[maybe_unused]] static jobject get_field_AMPLIFIED_GENERATOR_INFO_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "AMPLIFIED_HELP_TEXT", "field_42184", "AMPLIFIED_GENERATOR_INFO_TEXT", "f_267381_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#AMPLIFIED_GENERATOR_INFO_TEXT
    [[maybe_unused]] static void set_field_AMPLIFIED_GENERATOR_INFO_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "AMPLIFIED_HELP_TEXT", "field_42184", "AMPLIFIED_GENERATOR_INFO_TEXT", "f_267381_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#MAP_FEATURES_TEXT
    [[maybe_unused]] static jobject get_field_MAP_FEATURES_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "GENERATE_STRUCTURES", "field_42185", "MAP_FEATURES_TEXT", "f_267413_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#MAP_FEATURES_TEXT
    [[maybe_unused]] static void set_field_MAP_FEATURES_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "GENERATE_STRUCTURES", "field_42185", "MAP_FEATURES_TEXT", "f_267413_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#MAP_FEATURES_INFO_TEXT
    [[maybe_unused]] static jobject get_field_MAP_FEATURES_INFO_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "GENERATE_STRUCTURES_INFO", "field_42186", "MAP_FEATURES_INFO_TEXT", "f_267384_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#MAP_FEATURES_INFO_TEXT
    [[maybe_unused]] static void set_field_MAP_FEATURES_INFO_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "GENERATE_STRUCTURES_INFO", "field_42186", "MAP_FEATURES_INFO_TEXT", "f_267384_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#BONUS_ITEMS_TEXT
    [[maybe_unused]] static jobject get_field_BONUS_ITEMS_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "BONUS_CHEST", "field_42187", "BONUS_ITEMS_TEXT", "f_267474_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#BONUS_ITEMS_TEXT
    [[maybe_unused]] static void set_field_BONUS_ITEMS_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "BONUS_CHEST", "field_42187", "BONUS_ITEMS_TEXT", "f_267474_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#ENTER_SEED_TEXT
    [[maybe_unused]] static jobject get_field_ENTER_SEED_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SEED_LABEL", "field_42188", "ENTER_SEED_TEXT", "f_267471_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#ENTER_SEED_TEXT
    [[maybe_unused]] static void set_field_ENTER_SEED_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SEED_LABEL", "field_42188", "ENTER_SEED_TEXT", "f_267471_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#SEED_INFO_TEXT
    [[maybe_unused]] static jobject get_field_SEED_INFO_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SEED_EMPTY_HINT", "field_42189", "SEED_INFO_TEXT", "f_267459_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#SEED_INFO_TEXT
    [[maybe_unused]] static void set_field_SEED_INFO_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SEED_EMPTY_HINT", "field_42189", "SEED_INFO_TEXT", "f_267459_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#field_42190
    [[maybe_unused]] static jint get_field_field_42190() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "WORLD_TAB_WIDTH", "field_42190", "field_42190", "f_267437_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#field_42190
    [[maybe_unused]] static void set_field_field_42190(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "WORLD_TAB_WIDTH", "field_42190", "field_42190", "f_267437_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#seedField
    static jobject get_field_seedField(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "seedEdit", "field_42191", "seedField", "f_267412_"), "Lfiv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#seedField
    static void set_field_seedField(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "seedEdit", "field_42191", "seedField", "f_267412_"), "Lfiv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#customizeButton
    static jobject get_field_customizeButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "customizeTypeButton", "field_42192", "customizeButton", "f_267365_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.CreateWorldScreen$WorldTab#customizeButton
    static void set_field_customizeButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "customizeTypeButton", "field_42192", "customizeButton", "f_267365_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_openCustomizeScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "openPresetEditor", "method_48678", "openCustomizeScreen", "m_267652_"), "()V");
    }

    static void openCustomizeScreen(const jobject& obj) {
                
       const auto methodID = methodID_openCustomizeScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWorldTypes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "createWorldTypeValueSupplier", "method_48679", "getWorldTypes", "m_267806_"), "()Lfit$c;");
    }

    static jobject getWorldTypes(const jobject& obj) {
                
       const auto methodID = methodID_getWorldTypes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWorldTypeNarrationMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createTypeButtonNarration", "method_48671", "getWorldTypeNarrationMessage", "m_267591_"), "(Lfit;)Lxn;");
    }

    static jobject getWorldTypeNarrationMessage(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getWorldTypeNarrationMessage();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_WORLD_CREATEWORLDSCREEN$WORLDTAB_HPP