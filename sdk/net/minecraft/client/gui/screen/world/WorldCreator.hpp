// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_WORLD_WORLDCREATOR_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_WORLD_WORLDCREATOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.world.WorldCreator
 * Remapped: ftl
 */
namespace WorldCreator {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ftl", "net/minecraft/client/gui/screens/worldselection/WorldCreationUiState", "net/minecraft/class_8100", "net/minecraft/client/gui/screen/world/WorldCreator", "net/minecraft/src/C_267339_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.world.WorldCreator#NEW_WORLD_NAME
    [[maybe_unused]] static jobject get_field_NEW_WORLD_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_WORLD_NAME", "field_43104", "NEW_WORLD_NAME", "f_275748_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#NEW_WORLD_NAME
    [[maybe_unused]] static void set_field_NEW_WORLD_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_WORLD_NAME", "field_43104", "NEW_WORLD_NAME", "f_275748_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#listeners
    static jobject get_field_listeners(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "listeners", "field_42210", "listeners", "f_267497_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#listeners
    static void set_field_listeners(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "listeners", "field_42210", "listeners", "f_267497_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#worldName
    static jobject get_field_worldName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "name", "field_42211", "worldName", "f_267359_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#worldName
    static void set_field_worldName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "name", "field_42211", "worldName", "f_267359_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#gameMode
    static jobject get_field_gameMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "gameMode", "field_42213", "gameMode", "f_267395_"), "Lftl$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#gameMode
    static void set_field_gameMode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "gameMode", "field_42213", "gameMode", "f_267395_"), "Lftl$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#difficulty
    static jobject get_field_difficulty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "difficulty", "field_42214", "difficulty", "f_267425_"), "Lbqo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#difficulty
    static void set_field_difficulty(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "difficulty", "field_42214", "difficulty", "f_267425_"), "Lbqo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#cheatsEnabled
    static jobject get_field_cheatsEnabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "allowCommands", "field_42215", "cheatsEnabled", "f_317011_"), "Ljava/lang/Boolean;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#cheatsEnabled
    static void set_field_cheatsEnabled(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "allowCommands", "field_42215", "cheatsEnabled", "f_317011_"), "Ljava/lang/Boolean;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#seed
    static jobject get_field_seed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "seed", "field_42216", "seed", "f_267382_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#seed
    static void set_field_seed(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "seed", "field_42216", "seed", "f_267382_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#generateStructures
    static jboolean get_field_generateStructures(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "generateStructures", "field_42217", "generateStructures", "f_267386_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#generateStructures
    static void set_field_generateStructures(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "generateStructures", "field_42217", "generateStructures", "f_267386_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#bonusChestEnabled
    static jboolean get_field_bonusChestEnabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "bonusChest", "field_42218", "bonusChestEnabled", "f_267455_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#bonusChestEnabled
    static void set_field_bonusChestEnabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "bonusChest", "field_42218", "bonusChestEnabled", "f_267455_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#savesDirectory
    static jobject get_field_savesDirectory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "savesFolder", "field_43105", "savesDirectory", "f_275760_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#savesDirectory
    static void set_field_savesDirectory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "savesFolder", "field_43105", "savesDirectory", "f_275760_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#worldDirectoryName
    static jobject get_field_worldDirectoryName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "targetFolder", "field_43106", "worldDirectoryName", "f_275749_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#worldDirectoryName
    static void set_field_worldDirectoryName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "targetFolder", "field_43106", "worldDirectoryName", "f_275749_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#generatorOptionsHolder
    static jobject get_field_generatorOptionsHolder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "settings", "field_42219", "generatorOptionsHolder", "f_267426_"), "Lftk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#generatorOptionsHolder
    static void set_field_generatorOptionsHolder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "settings", "field_42219", "generatorOptionsHolder", "f_267426_"), "Lftk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#worldType
    static jobject get_field_worldType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "worldType", "field_42220", "worldType", "f_267491_"), "Lftl$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#worldType
    static void set_field_worldType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "worldType", "field_42220", "worldType", "f_267491_"), "Lftl$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#normalWorldTypes
    static jobject get_field_normalWorldTypes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "normalPresetList", "field_42221", "normalWorldTypes", "f_267439_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#normalWorldTypes
    static void set_field_normalWorldTypes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "normalPresetList", "field_42221", "normalWorldTypes", "f_267439_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#extendedWorldTypes
    static jobject get_field_extendedWorldTypes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "altPresetList", "field_42222", "extendedWorldTypes", "f_267369_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#extendedWorldTypes
    static void set_field_extendedWorldTypes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "altPresetList", "field_42222", "extendedWorldTypes", "f_267369_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.world.WorldCreator#gameRules
    static jobject get_field_gameRules(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "gameRules", "field_42223", "gameRules", "f_267407_"), "Ldcs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.world.WorldCreator#gameRules
    static void set_field_gameRules(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "gameRules", "field_42223", "gameRules", "f_267407_"), "Ldcs;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addListener", "method_48712", "addListener", "m_267755_"), "(Ljava/util/function/Consumer;)V");
    }

    static void addListener(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onChanged", "method_48695", "update", "m_267758_"), "()V");
    }

    static void update(const jobject& obj) {
                
       const auto methodID = methodID_update();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWorldName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setName", "method_48710", "setWorldName", "m_267649_"), "(Ljava/lang/String;)V");
    }

    static void setWorldName(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setWorldName();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toDirectoryName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "findResultFolder", "method_49704", "toDirectoryName", "m_275848_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject toDirectoryName(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toDirectoryName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWorldName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getName", "method_48715", "getWorldName", "m_267597_"), "()Ljava/lang/String;");
    }

    static jobject getWorldName(const jobject& obj) {
                
       const auto methodID = methodID_getWorldName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWorldDirectoryName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getTargetFolder", "method_49703", "getWorldDirectoryName", "m_275837_"), "()Ljava/lang/String;");
    }

    static jobject getWorldDirectoryName(const jobject& obj) {
                
       const auto methodID = methodID_getWorldDirectoryName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setGameMode", "method_48704", "setGameMode", "m_267616_"), "(Lftl$a;)V");
    }

    static void setGameMode(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setGameMode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getGameMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getGameMode", "method_48721", "getGameMode", "m_267761_"), "()Lftl$a;");
    }

    static jobject getGameMode(const jobject& obj) {
                
       const auto methodID = methodID_getGameMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDifficulty", "method_48696", "setDifficulty", "m_267754_"), "(Lbqo;)V");
    }

    static void setDifficulty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDifficulty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDifficulty", "method_48722", "getDifficulty", "m_267816_"), "()Lbqo;");
    }

    static jobject getDifficulty(const jobject& obj) {
                
       const auto methodID = methodID_getDifficulty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isHardcore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isHardcore", "method_48723", "isHardcore", "m_267790_"), "()Z");
    }

    static jboolean isHardcore(const jobject& obj) {
                
       const auto methodID = methodID_isHardcore();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCheatsEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setAllowCommands", "method_48713", "setCheatsEnabled", "m_321753_"), "(Z)V");
    }

    static void setCheatsEnabled(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setCheatsEnabled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_areCheatsEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "isAllowCommands", "method_48724", "areCheatsEnabled", "m_324109_"), "()Z");
    }

    static jboolean areCheatsEnabled(const jobject& obj) {
                
       const auto methodID = methodID_areCheatsEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setSeed", "method_48716", "setSeed", "m_267759_"), "(Ljava/lang/String;)V");
    }

    static void setSeed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setSeed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getSeed", "method_48725", "getSeed", "m_267707_"), "()Ljava/lang/String;");
    }

    static jobject getSeed(const jobject& obj) {
                
       const auto methodID = methodID_getSeed();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setGenerateStructures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setGenerateStructures", "method_48717", "setGenerateStructures", "m_267770_"), "(Z)V");
    }

    static void setGenerateStructures(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setGenerateStructures();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldGenerateStructures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isGenerateStructures", "method_48726", "shouldGenerateStructures", "m_267615_"), "()Z");
    }

    static jboolean shouldGenerateStructures(const jobject& obj) {
                
       const auto methodID = methodID_shouldGenerateStructures();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setBonusChestEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setBonusChest", "method_48720", "setBonusChestEnabled", "m_267666_"), "(Z)V");
    }

    static void setBonusChestEnabled(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setBonusChestEnabled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isBonusChestEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "isBonusChest", "method_48727", "isBonusChestEnabled", "m_267593_"), "()Z");
    }

    static jboolean isBonusChestEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isBonusChestEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setGeneratorOptionsHolder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSettings", "method_48701", "setGeneratorOptionsHolder", "m_267692_"), "(Lftk;)V");
    }

    static void setGeneratorOptionsHolder(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setGeneratorOptionsHolder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getGeneratorOptionsHolder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getSettings", "method_48728", "getGeneratorOptionsHolder", "m_267573_"), "()Lftk;");
    }

    static jobject getGeneratorOptionsHolder(const jobject& obj) {
                
       const auto methodID = methodID_getGeneratorOptionsHolder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_applyModifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateDimensions", "method_48700", "applyModifier", "m_267717_"), "(Lftk$a;)V");
    }

    static void applyModifier(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_applyModifier();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateDataConfiguration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryUpdateDataConfiguration", "method_48698", "updateDataConfiguration", "m_267710_"), "(Lddr;)Z");
    }

    static jboolean updateDataConfiguration(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateDataConfiguration();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isDebug() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "isDebug", "method_48729", "isDebug", "m_267735_"), "()Z");
    }

    static jboolean isDebug(const jobject& obj) {
                
       const auto methodID = methodID_isDebug();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWorldType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWorldType", "method_48705", "setWorldType", "m_267576_"), "(Lftl$b;)V");
    }

    static void setWorldType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setWorldType();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWorldType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getWorldType", "method_48730", "getWorldType", "m_267828_"), "()Lftl$b;");
    }

    static jobject getWorldType(const jobject& obj) {
                
       const auto methodID = methodID_getWorldType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLevelScreenProvider() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getPresetEditor", "method_48731", "getLevelScreenProvider", "m_267744_"), "()Lfth;");
    }

    static jobject getLevelScreenProvider(const jobject& obj) {
                
       const auto methodID = methodID_getLevelScreenProvider();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNormalWorldTypes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getNormalPresetList", "method_48732", "getNormalWorldTypes", "m_267815_"), "()Ljava/util/List;");
    }

    static jobject getNormalWorldTypes(const jobject& obj) {
                
       const auto methodID = methodID_getNormalWorldTypes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getExtendedWorldTypes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getAltPresetList", "method_48733", "getExtendedWorldTypes", "m_267674_"), "()Ljava/util/List;");
    }

    static jobject getExtendedWorldTypes(const jobject& obj) {
                
       const auto methodID = methodID_getExtendedWorldTypes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateWorldTypeLists() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "updatePresetLists", "method_48735", "updateWorldTypeLists", "m_267608_"), "()V");
    }

    static void updateWorldTypeLists(const jobject& obj) {
                
       const auto methodID = methodID_updateWorldTypeLists();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWorldPreset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findPreset", "method_48703", "getWorldPreset", "m_267777_"), "(Lftk;Ljava/util/Optional;)Ljava/util/Optional;");
    }

    static jobject getWorldPreset(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getWorldPreset();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getWorldPresetList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getNonEmptyList", "method_48709", "getWorldPresetList", "m_267811_"), "(Ljz;Lawu;)Ljava/util/Optional;");
    }

    static jobject getWorldPresetList(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getWorldPresetList();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setGameRules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setGameRules", "method_48697", "setGameRules", "m_267656_"), "(Ldcs;)V");
    }

    static void setGameRules(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setGameRules();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getGameRules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getGameRules", "method_48734", "getGameRules", "m_267721_"), "()Ldcs;");
    }

    static jobject getGameRules(const jobject& obj) {
                
       const auto methodID = methodID_getGameRules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_WORLD_WORLDCREATOR_HPP