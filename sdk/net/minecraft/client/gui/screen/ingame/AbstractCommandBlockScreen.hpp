// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_ABSTRACTCOMMANDBLOCKSCREEN_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_ABSTRACTCOMMANDBLOCKSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen
 * Remapped: fos
 */
namespace AbstractCommandBlockScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fos", "net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen", "net/minecraft/class_463", "net/minecraft/client/gui/screen/ingame/AbstractCommandBlockScreen", "net/minecraft/src/C_3622_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#SET_COMMAND_TEXT
    [[maybe_unused]] static jobject get_field_SET_COMMAND_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SET_COMMAND_LABEL", "field_26556", "SET_COMMAND_TEXT", "f_97652_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#SET_COMMAND_TEXT
    [[maybe_unused]] static void set_field_SET_COMMAND_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SET_COMMAND_LABEL", "field_26556", "SET_COMMAND_TEXT", "f_97652_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#COMMAND_TEXT
    [[maybe_unused]] static jobject get_field_COMMAND_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "COMMAND_LABEL", "field_26557", "COMMAND_TEXT", "f_97653_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#COMMAND_TEXT
    [[maybe_unused]] static void set_field_COMMAND_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "COMMAND_LABEL", "field_26557", "COMMAND_TEXT", "f_97653_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#PREVIOUS_OUTPUT_TEXT
    [[maybe_unused]] static jobject get_field_PREVIOUS_OUTPUT_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "PREVIOUS_OUTPUT_LABEL", "field_26558", "PREVIOUS_OUTPUT_TEXT", "f_97654_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#PREVIOUS_OUTPUT_TEXT
    [[maybe_unused]] static void set_field_PREVIOUS_OUTPUT_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "PREVIOUS_OUTPUT_LABEL", "field_26558", "PREVIOUS_OUTPUT_TEXT", "f_97654_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#consoleCommandTextField
    static jobject get_field_consoleCommandTextField(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "commandEdit", "field_2751", "consoleCommandTextField", "f_97646_"), "Lfiv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#consoleCommandTextField
    static void set_field_consoleCommandTextField(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "commandEdit", "field_2751", "consoleCommandTextField", "f_97646_"), "Lfiv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#previousOutputTextField
    static jobject get_field_previousOutputTextField(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "previousEdit", "field_2755", "previousOutputTextField", "f_97647_"), "Lfiv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#previousOutputTextField
    static void set_field_previousOutputTextField(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "previousEdit", "field_2755", "previousOutputTextField", "f_97647_"), "Lfiv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#doneButton
    static jobject get_field_doneButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "doneButton", "field_2762", "doneButton", "f_97648_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#doneButton
    static void set_field_doneButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "doneButton", "field_2762", "doneButton", "f_97648_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#cancelButton
    static jobject get_field_cancelButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "cancelButton", "field_2753", "cancelButton", "f_97649_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#cancelButton
    static void set_field_cancelButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "cancelButton", "field_2753", "cancelButton", "f_97649_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#toggleTrackingOutputButton
    static jobject get_field_toggleTrackingOutputButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "outputButton", "field_2760", "toggleTrackingOutputButton", "f_97650_"), "Lfit;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#toggleTrackingOutputButton
    static void set_field_toggleTrackingOutputButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "outputButton", "field_2760", "toggleTrackingOutputButton", "f_97650_"), "Lfit;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#commandSuggestor
    static jobject get_field_commandSuggestor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "commandSuggestions", "field_21617", "commandSuggestor", "f_97655_"), "Lfip;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.ingame.AbstractCommandBlockScreen#commandSuggestor
    static void set_field_commandSuggestor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "commandSuggestions", "field_21617", "commandSuggestor", "f_97655_"), "Lfip;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "tick", "method_25393", "tick", "m_86600_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCommandExecutor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getCommandBlock", "method_2351", "getCommandExecutor", "m_6556_"), "()Ldbx;");
    }

    static jobject getCommandExecutor(const jobject& obj) {
                
       const auto methodID = methodID_getCommandExecutor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTrackOutputButtonHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "getPreviousY", "method_2364", "getTrackOutputButtonHeight", "m_7821_"), "()I");
    }

    static jint getTrackOutputButtonHeight(const jobject& obj) {
                
       const auto methodID = methodID_getTrackOutputButtonHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT_", "init", "method_25426", "init", "m_7856_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setInitialFocus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aI_", "setInitialFocus", "method_56131", "setInitialFocus", "m_318615_"), "()V");
    }

    static void setInitialFocus(const jobject& obj) {
                
       const auto methodID = methodID_setInitialFocus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getUsageNarrationText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "getUsageNarration", "method_53870", "getUsageNarrationText", "m_301494_"), "()Lwz;");
    }

    static jobject getUsageNarrationText(const jobject& obj) {
                
       const auto methodID = methodID_getUsageNarrationText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_resize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resize", "method_25410", "resize", "m_6574_"), "(Lfgo;II)V");
    }

    static void resize(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_resize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setPreviousOutputText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "updatePreviousOutput", "method_32642", "setPreviousOutputText", "m_169598_"), "(Z)V");
    }

    static void setPreviousOutputText(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setPreviousOutputText();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_commitAndClose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "onDone", "method_2359", "commitAndClose", "m_97695_"), "()V");
    }

    static void commitAndClose(const jobject& obj) {
                
       const auto methodID = methodID_commitAndClose();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_syncSettingsToServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "populateAndSendPacket", "method_2352", "syncSettingsToServer", "m_6372_"), "(Ldbx;)V");
    }

    static void syncSettingsToServer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_syncSettingsToServer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onCommandChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEdited", "method_2360", "onCommandChanged", "m_97688_"), "(Ljava/lang/String;)V");
    }

    static void onCommandChanged(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onCommandChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_keyPressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "keyPressed", "method_25404", "keyPressed", "m_7933_"), "(III)Z");
    }

    static jboolean keyPressed(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_keyPressed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_mouseScrolled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseScrolled", "method_25401", "mouseScrolled", "m_6050_"), "(DDDD)Z");
    }

    static jboolean mouseScrolled(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
                
       const auto methodID = methodID_mouseScrolled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_renderBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderBackground", "method_25420", "renderBackground", "m_280273_"), "(Lfhz;IIF)V");
    }

    static void renderBackground(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_renderBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_ABSTRACTCOMMANDBLOCKSCREEN_HPP