// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_CREATIVEINVENTORYSCREEN_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_CREATIVEINVENTORYSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen
 * Remapped: fpi
 */
namespace CreativeInventoryScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fpi", "net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen", "net/minecraft/class_481", "net/minecraft/client/gui/screen/ingame/CreativeInventoryScreen", "net/minecraft/src/C_3652_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#SCROLLER_TEXTURE
    [[maybe_unused]] static jobject get_field_SCROLLER_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "SCROLLER_SPRITE", "field_45459", "SCROLLER_TEXTURE", "f_290431_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#SCROLLER_TEXTURE
    [[maybe_unused]] static void set_field_SCROLLER_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "SCROLLER_SPRITE", "field_45459", "SCROLLER_TEXTURE", "f_290431_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#SCROLLER_DISABLED_TEXTURE
    [[maybe_unused]] static jobject get_field_SCROLLER_DISABLED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SCROLLER_DISABLED_SPRITE", "field_45460", "SCROLLER_DISABLED_TEXTURE", "f_291763_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#SCROLLER_DISABLED_TEXTURE
    [[maybe_unused]] static void set_field_SCROLLER_DISABLED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SCROLLER_DISABLED_SPRITE", "field_45460", "SCROLLER_DISABLED_TEXTURE", "f_291763_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#TAB_TOP_UNSELECTED_TEXTURES
    [[maybe_unused]] static jobject get_field_TAB_TOP_UNSELECTED_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "UNSELECTED_TOP_TABS", "field_45461", "TAB_TOP_UNSELECTED_TEXTURES", "f_291234_"), "[Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#TAB_TOP_UNSELECTED_TEXTURES
    [[maybe_unused]] static void set_field_TAB_TOP_UNSELECTED_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "UNSELECTED_TOP_TABS", "field_45461", "TAB_TOP_UNSELECTED_TEXTURES", "f_291234_"), "[Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#TAB_TOP_SELECTED_TEXTURES
    [[maybe_unused]] static jobject get_field_TAB_TOP_SELECTED_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SELECTED_TOP_TABS", "field_45456", "TAB_TOP_SELECTED_TEXTURES", "f_291158_"), "[Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#TAB_TOP_SELECTED_TEXTURES
    [[maybe_unused]] static void set_field_TAB_TOP_SELECTED_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SELECTED_TOP_TABS", "field_45456", "TAB_TOP_SELECTED_TEXTURES", "f_291158_"), "[Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#TAB_BOTTOM_UNSELECTED_TEXTURES
    [[maybe_unused]] static jobject get_field_TAB_BOTTOM_UNSELECTED_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "UNSELECTED_BOTTOM_TABS", "field_45457", "TAB_BOTTOM_UNSELECTED_TEXTURES", "f_291303_"), "[Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#TAB_BOTTOM_UNSELECTED_TEXTURES
    [[maybe_unused]] static void set_field_TAB_BOTTOM_UNSELECTED_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "UNSELECTED_BOTTOM_TABS", "field_45457", "TAB_BOTTOM_UNSELECTED_TEXTURES", "f_291303_"), "[Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#TAB_BOTTOM_SELECTED_TEXTURES
    [[maybe_unused]] static jobject get_field_TAB_BOTTOM_SELECTED_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SELECTED_BOTTOM_TABS", "field_45458", "TAB_BOTTOM_SELECTED_TEXTURES", "f_291557_"), "[Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#TAB_BOTTOM_SELECTED_TEXTURES
    [[maybe_unused]] static void set_field_TAB_BOTTOM_SELECTED_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SELECTED_BOTTOM_TABS", "field_45458", "TAB_BOTTOM_SELECTED_TEXTURES", "f_291557_"), "[Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#ROWS_COUNT
    [[maybe_unused]] static jint get_field_ROWS_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "NUM_ROWS", "field_32337", "ROWS_COUNT", "f_169737_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#ROWS_COUNT
    [[maybe_unused]] static void set_field_ROWS_COUNT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "NUM_ROWS", "field_32337", "ROWS_COUNT", "f_169737_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#COLUMNS_COUNT
    [[maybe_unused]] static jint get_field_COLUMNS_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "NUM_COLS", "field_32338", "COLUMNS_COUNT", "f_169738_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#COLUMNS_COUNT
    [[maybe_unused]] static void set_field_COLUMNS_COUNT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "NUM_COLS", "field_32338", "COLUMNS_COUNT", "f_169738_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#TAB_WIDTH
    [[maybe_unused]] static jint get_field_TAB_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "TAB_WIDTH", "field_32339", "TAB_WIDTH", "f_169739_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#TAB_WIDTH
    [[maybe_unused]] static void set_field_TAB_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "TAB_WIDTH", "field_32339", "TAB_WIDTH", "f_169739_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#TAB_HEIGHT
    [[maybe_unused]] static jint get_field_TAB_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "TAB_HEIGHT", "field_32340", "TAB_HEIGHT", "f_169740_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#TAB_HEIGHT
    [[maybe_unused]] static void set_field_TAB_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "TAB_HEIGHT", "field_32340", "TAB_HEIGHT", "f_169740_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#SCROLLBAR_WIDTH
    [[maybe_unused]] static jint get_field_SCROLLBAR_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "SCROLLER_WIDTH", "field_32341", "SCROLLBAR_WIDTH", "f_169741_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#SCROLLBAR_WIDTH
    [[maybe_unused]] static void set_field_SCROLLBAR_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "SCROLLER_WIDTH", "field_32341", "SCROLLBAR_WIDTH", "f_169741_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#SCROLLBAR_HEIGHT
    [[maybe_unused]] static jint get_field_SCROLLBAR_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "SCROLLER_HEIGHT", "field_32342", "SCROLLBAR_HEIGHT", "f_169742_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#SCROLLBAR_HEIGHT
    [[maybe_unused]] static void set_field_SCROLLBAR_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "SCROLLER_HEIGHT", "field_32342", "SCROLLBAR_HEIGHT", "f_169742_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#INVENTORY
    [[maybe_unused]] static jobject get_field_INVENTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "CONTAINER", "field_2895", "INVENTORY", "f_98505_"), "Lbra;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#INVENTORY
    [[maybe_unused]] static void set_field_INVENTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "CONTAINER", "field_2895", "INVENTORY", "f_98505_"), "Lbra;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#DELETE_ITEM_SLOT_TEXT
    [[maybe_unused]] static jobject get_field_DELETE_ITEM_SLOT_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "TRASH_SLOT_TOOLTIP", "field_26563", "DELETE_ITEM_SLOT_TEXT", "f_98506_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#DELETE_ITEM_SLOT_TEXT
    [[maybe_unused]] static void set_field_DELETE_ITEM_SLOT_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "TRASH_SLOT_TOOLTIP", "field_26563", "DELETE_ITEM_SLOT_TEXT", "f_98506_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#WHITE
    [[maybe_unused]] static jint get_field_WHITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "TEXT_COLOR", "field_32343", "WHITE", "f_169743_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#WHITE
    [[maybe_unused]] static void set_field_WHITE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "TEXT_COLOR", "field_32343", "WHITE", "f_169743_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#selectedTab
    [[maybe_unused]] static jobject get_field_selectedTab() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "selectedTab", "field_2896", "selectedTab", "f_98507_"), "Lcta;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#selectedTab
    [[maybe_unused]] static void set_field_selectedTab(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "selectedTab", "field_2896", "selectedTab", "f_98507_"), "Lcta;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#scrollPosition
    static jfloat get_field_scrollPosition(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "scrollOffs", "field_2890", "scrollPosition", "f_98508_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#scrollPosition
    static void set_field_scrollPosition(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "scrollOffs", "field_2890", "scrollPosition", "f_98508_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#scrolling
    static jboolean get_field_scrolling(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "scrolling", "field_2892", "scrolling", "f_98509_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#scrolling
    static void set_field_scrolling(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "scrolling", "field_2892", "scrolling", "f_98509_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#searchBox
    static jobject get_field_searchBox(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "searchBox", "field_2894", "searchBox", "f_98510_"), "Lfiv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#searchBox
    static void set_field_searchBox(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "searchBox", "field_2894", "searchBox", "f_98510_"), "Lfiv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#slots
    static jobject get_field_slots(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "originalSlots", "field_2886", "slots", "f_98511_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#slots
    static void set_field_slots(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "originalSlots", "field_2886", "slots", "f_98511_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#deleteItemSlot
    static jobject get_field_deleteItemSlot(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "destroyItemSlot", "field_2889", "deleteItemSlot", "f_98512_"), "Lcrq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#deleteItemSlot
    static void set_field_deleteItemSlot(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "destroyItemSlot", "field_2889", "deleteItemSlot", "f_98512_"), "Lcrq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#listener
    static jobject get_field_listener(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "listener", "field_2891", "listener", "f_98513_"), "Lfph;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#listener
    static void set_field_listener(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "listener", "field_2891", "listener", "f_98513_"), "Lfph;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#ignoreTypedCharacter
    static jboolean get_field_ignoreTypedCharacter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "ignoreTextInput", "field_2888", "ignoreTypedCharacter", "f_98514_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#ignoreTypedCharacter
    static void set_field_ignoreTypedCharacter(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "ignoreTextInput", "field_2888", "ignoreTypedCharacter", "f_98514_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#lastClickOutsideBounds
    static jboolean get_field_lastClickOutsideBounds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "hasClickedOutside", "field_2887", "lastClickOutsideBounds", "f_98515_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#lastClickOutsideBounds
    static void set_field_lastClickOutsideBounds(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "hasClickedOutside", "field_2887", "lastClickOutsideBounds", "f_98515_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#searchResultTags
    static jobject get_field_searchResultTags(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "visibleTags", "field_16201", "searchResultTags", "f_98516_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#searchResultTags
    static void set_field_searchResultTags(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "visibleTags", "field_16201", "searchResultTags", "f_98516_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#operatorTabEnabled
    static jboolean get_field_operatorTabEnabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "displayOperatorCreativeTab", "field_41112", "operatorTabEnabled", "f_256872_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CreativeInventoryScreen#operatorTabEnabled
    static void set_field_operatorTabEnabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "displayOperatorCreativeTab", "field_41112", "operatorTabEnabled", "f_256872_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_shouldShowOperatorTab() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasPermissions", "method_47419", "shouldShowOperatorTab", "m_257869_"), "(Lcmx;)Z");
    }

    static jboolean shouldShowOperatorTab(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldShowOperatorTab();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateDisplayParameters() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryRefreshInvalidatedTabs", "method_47420", "updateDisplayParameters", "m_257967_"), "(Lcpl;ZLjo$a;)V");
    }

    static void updateDisplayParameters(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateDisplayParameters();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_populateDisplay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryRebuildTabContents", "method_60324", "populateDisplay", "m_340577_"), "(Lfzw;Lcpl;ZLjo$a;)Z");
    }

    static jboolean populateDisplay(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_populateDisplay();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_refreshSelectedTab() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "refreshCurrentTabContents", "method_47421", "refreshSelectedTab", "m_257687_"), "(Ljava/util/Collection;)V");
    }

    static void refreshSelectedTab(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_refreshSelectedTab();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_handledScreenTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "containerTick", "method_37432", "handledScreenTick", "m_181908_"), "()V");
    }

    static void handledScreenTick(const jobject& obj) {
                
       const auto methodID = methodID_handledScreenTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onMouseClick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "slotClicked", "method_2383", "onMouseClick", "m_6597_"), "(Lcrq;IILcqe;)V");
    }

    static void onMouseClick(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_onMouseClick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isCreativeInventorySlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isCreativeSlot", "method_2470", "isCreativeInventorySlot", "m_98553_"), "(Lcrq;)Z");
    }

    static jboolean isCreativeInventorySlot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isCreativeInventorySlot();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT_", "init", "method_25426", "init", "m_7856_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_resize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resize", "method_25410", "resize", "m_6574_"), "(Lfgo;II)V");
    }

    static void resize(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_resize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_removed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "removed", "method_25432", "removed", "m_7861_"), "()V");
    }

    static void removed(const jobject& obj) {
                
       const auto methodID = methodID_removed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_charTyped() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "charTyped", "method_25400", "charTyped", "m_5534_"), "(CI)Z");
    }

    static jboolean charTyped(const jobject& obj, const jchar& arg0, const jint& arg1) {
                
       const auto methodID = methodID_charTyped();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_keyPressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "keyPressed", "method_25404", "keyPressed", "m_7933_"), "(III)Z");
    }

    static jboolean keyPressed(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_keyPressed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_keyReleased() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "keyReleased", "method_16803", "keyReleased", "m_7920_"), "(III)Z");
    }

    static jboolean keyReleased(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_keyReleased();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_search() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "refreshSearchResults", "method_2464", "search", "m_98630_"), "()V");
    }

    static void search(const jobject& obj) {
                
       const auto methodID = methodID_search();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_searchForTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateVisibleTags", "method_15871", "searchForTags", "m_98619_"), "(Ljava/lang/String;)V");
    }

    static void searchForTags(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_searchForTags();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drawForeground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderLabels", "method_2388", "drawForeground", "m_280003_"), "(Lfhz;II)V");
    }

    static void drawForeground(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_drawForeground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_mouseReleased() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "mouseReleased", "method_25406", "mouseReleased", "m_6348_"), "(DDI)Z");
    }

    static jboolean mouseReleased(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseReleased();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_hasScrollbar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "canScroll", "method_2465", "hasScrollbar", "m_98631_"), "()Z");
    }

    static jboolean hasScrollbar(const jobject& obj) {
                
       const auto methodID = methodID_hasScrollbar();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSelectedTab() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "selectTab", "method_2466", "setSelectedTab", "m_98560_"), "(Lcta;)V");
    }

    static void setSelectedTab(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setSelectedTab();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_mouseScrolled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseScrolled", "method_25401", "mouseScrolled", "m_6050_"), "(DDDD)Z");
    }

    static jboolean mouseScrolled(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
                
       const auto methodID = methodID_mouseScrolled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isClickOutsideBounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasClickedOutside", "method_2381", "isClickOutsideBounds", "m_7467_"), "(DDIII)Z");
    }

    static jboolean isClickOutsideBounds(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_isClickOutsideBounds();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_isClickInScrollbar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "insideScrollbar", "method_2467", "isClickInScrollbar", "m_98523_"), "(DD)Z");
    }

    static jboolean isClickInScrollbar(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_isClickInScrollbar();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_mouseDragged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseDragged", "method_25403", "mouseDragged", "m_7979_"), "(DDIDD)Z");
    }

    static jboolean mouseDragged(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_mouseDragged();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getTooltipFromItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getTooltipFromContainerItem", "method_51454", "getTooltipFromItem", "m_280553_"), "(Lcuq;)Ljava/util/List;");
    }

    static jobject getTooltipFromItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTooltipFromItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drawBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderBg", "method_2389", "drawBackground", "m_7286_"), "(Lfhz;FII)V");
    }

    static void drawBackground(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_drawBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getTabX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTabX", "method_47422", "getTabX", "m_258094_"), "(Lcta;)I");
    }

    static jint getTabX(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTabX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTabY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getTabY", "method_47423", "getTabY", "m_257995_"), "(Lcta;)I");
    }

    static jint getTabY(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTabY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isClickInTab() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkTabClicked", "method_2463", "isClickInTab", "m_98562_"), "(Lcta;DD)Z");
    }

    static jboolean isClickInTab(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_isClickInTab();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_renderTabTooltipIfHovered() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkTabHovering", "method_2471", "renderTabTooltipIfHovered", "m_280537_"), "(Lfhz;Lcta;II)Z");
    }

    static jboolean renderTabTooltipIfHovered(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_renderTabTooltipIfHovered();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_renderTabIcon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderTabButton", "method_2468", "renderTabIcon", "m_280560_"), "(Lfhz;Lcta;)V");
    }

    static void renderTabIcon(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderTabIcon();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isInventoryTabSelected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "isInventoryOpen", "method_47424", "isInventoryTabSelected", "m_258017_"), "()Z");
    }

    static jboolean isInventoryTabSelected(const jobject& obj) {
                
       const auto methodID = methodID_isInventoryTabSelected();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_onHotbarKeyPress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "handleHotbarLoadOrSave", "method_2462", "onHotbarKeyPress", "m_98598_"), "(Lfgo;IZZ)V");
    }

    static void onHotbarKeyPress(const jobject& arg0, const jint& arg1, const jboolean& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_onHotbarKeyPress();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_CREATIVEINVENTORYSCREEN_HPP