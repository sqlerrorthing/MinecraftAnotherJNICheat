// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_BEACONSCREEN$BASEBUTTONWIDGET_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_BEACONSCREEN$BASEBUTTONWIDGET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.ingame.BeaconScreen$BaseButtonWidget
 * Remapped: fox$e
 */
namespace BeaconScreen$BaseButtonWidget {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fox$e", "net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton", "net/minecraft/class_466$class_470", "net/minecraft/client/gui/screen/ingame/BeaconScreen$BaseButtonWidget", "net/minecraft/src/C_3627_$C_3632_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BeaconScreen$BaseButtonWidget#disabled
    static jboolean get_field_disabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "selected", "field_2815", "disabled", "f_98020_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BeaconScreen$BaseButtonWidget#disabled
    static void set_field_disabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "selected", "field_2815", "disabled", "f_98020_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_renderWidget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderWidget", "method_48579", "renderWidget", "m_87963_"), "(Lfhz;IIF)V");
    }

    static void renderWidget(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_renderWidget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_renderExtra() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderIcon", "method_18641", "renderExtra", "m_6805_"), "(Lfhz;)V");
    }

    static void renderExtra(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_renderExtra();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isDisabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isSelected", "method_2402", "isDisabled", "m_98024_"), "()Z");
    }

    static jboolean isDisabled(const jobject& obj) {
                
       const auto methodID = methodID_isDisabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDisabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setSelected", "method_2401", "setDisabled", "m_98031_"), "(Z)V");
    }

    static void setDisabled(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setDisabled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_appendClickableNarrations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateWidgetNarration", "method_47399", "appendClickableNarrations", "m_168797_"), "(Lfmi;)V");
    }

    static void appendClickableNarrations(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_appendClickableNarrations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_BEACONSCREEN$BASEBUTTONWIDGET_HPP