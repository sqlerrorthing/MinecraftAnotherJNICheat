// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_CRAFTERSCREEN_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_CRAFTERSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.ingame.CrafterScreen
 * Remapped: fpf
 */
namespace CrafterScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fpf", "net/minecraft/client/gui/screens/inventory/CrafterScreen", "net/minecraft/class_8898", "net/minecraft/client/gui/screen/ingame/CrafterScreen", "net/minecraft/src/C_302151_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CrafterScreen#DISABLED_SLOT_TEXTURE
    [[maybe_unused]] static jobject get_field_DISABLED_SLOT_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "DISABLED_SLOT_LOCATION_SPRITE", "field_46882", "DISABLED_SLOT_TEXTURE", "f_303203_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CrafterScreen#DISABLED_SLOT_TEXTURE
    [[maybe_unused]] static void set_field_DISABLED_SLOT_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "DISABLED_SLOT_LOCATION_SPRITE", "field_46882", "DISABLED_SLOT_TEXTURE", "f_303203_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CrafterScreen#POWERED_REDSTONE_TEXTURE
    [[maybe_unused]] static jobject get_field_POWERED_REDSTONE_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "POWERED_REDSTONE_LOCATION_SPRITE", "field_46883", "POWERED_REDSTONE_TEXTURE", "f_303403_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CrafterScreen#POWERED_REDSTONE_TEXTURE
    [[maybe_unused]] static void set_field_POWERED_REDSTONE_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "POWERED_REDSTONE_LOCATION_SPRITE", "field_46883", "POWERED_REDSTONE_TEXTURE", "f_303403_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CrafterScreen#UNPOWERED_REDSTONE_TEXTURE
    [[maybe_unused]] static jobject get_field_UNPOWERED_REDSTONE_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "UNPOWERED_REDSTONE_LOCATION_SPRITE", "field_46884", "UNPOWERED_REDSTONE_TEXTURE", "f_302677_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CrafterScreen#UNPOWERED_REDSTONE_TEXTURE
    [[maybe_unused]] static void set_field_UNPOWERED_REDSTONE_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "UNPOWERED_REDSTONE_LOCATION_SPRITE", "field_46884", "UNPOWERED_REDSTONE_TEXTURE", "f_302677_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CrafterScreen#TEXTURE
    [[maybe_unused]] static jobject get_field_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "CONTAINER_LOCATION", "field_46879", "TEXTURE", "f_302889_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CrafterScreen#TEXTURE
    [[maybe_unused]] static void set_field_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "CONTAINER_LOCATION", "field_46879", "TEXTURE", "f_302889_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.CrafterScreen#TOGGLEABLE_SLOT_TEXT
    [[maybe_unused]] static jobject get_field_TOGGLEABLE_SLOT_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "DISABLED_SLOT_TOOLTIP", "field_46880", "TOGGLEABLE_SLOT_TEXT", "f_303407_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CrafterScreen#TOGGLEABLE_SLOT_TEXT
    [[maybe_unused]] static void set_field_TOGGLEABLE_SLOT_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "DISABLED_SLOT_TOOLTIP", "field_46880", "TOGGLEABLE_SLOT_TEXT", "f_303407_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CrafterScreen#player
    static jobject get_field_player(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "player", "field_46881", "player", "f_303763_"), "Lcmx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CrafterScreen#player
    static void set_field_player(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "player", "field_46881", "player", "f_303763_"), "Lcmx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT_", "init", "method_25426", "init", "m_7856_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onMouseClick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "slotClicked", "method_2383", "onMouseClick", "m_6597_"), "(Lcrq;IILcqe;)V");
    }

    static void onMouseClick(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_onMouseClick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_enableSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "enableSlot", "method_54797", "enableSlot", "m_307561_"), "(I)V");
    }

    static void enableSlot(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_enableSlot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_disableSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "disableSlot", "method_54799", "disableSlot", "m_307046_"), "(I)V");
    }

    static void disableSlot(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_disableSlot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setSlotEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateSlotState", "method_54798", "setSlotEnabled", "m_306960_"), "(IZ)V");
    }

    static void setSlotEnabled(const jobject& obj, const jint& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setSlotEnabled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_drawSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSlot", "method_2385", "drawSlot", "m_280092_"), "(Lfhz;Lcrq;)V");
    }

    static void drawSlot(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_drawSlot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_drawDisabledSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderDisabledSlot", "method_54591", "drawDisabledSlot", "m_307778_"), "(Lfhz;Lcqk;)V");
    }

    static void drawDisabledSlot(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_drawDisabledSlot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawArrowTexture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "renderRedstone", "method_54592", "drawArrowTexture", "m_306510_"), "(Lfhz;)V");
    }

    static void drawArrowTexture(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_drawArrowTexture();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drawBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderBg", "method_2389", "drawBackground", "m_7286_"), "(Lfhz;FII)V");
    }

    static void drawBackground(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_drawBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_CRAFTERSCREEN_HPP