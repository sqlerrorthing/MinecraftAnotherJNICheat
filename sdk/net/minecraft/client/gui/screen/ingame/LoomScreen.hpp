// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_LOOMSCREEN_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_LOOMSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.ingame.LoomScreen
 * Remapped: fpx
 */
namespace LoomScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fpx", "net/minecraft/client/gui/screens/inventory/LoomScreen", "net/minecraft/class_494", "net/minecraft/client/gui/screen/ingame/LoomScreen", "net/minecraft/src/C_3671_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#BANNER_SLOT_TEXTURE
    [[maybe_unused]] static jobject get_field_BANNER_SLOT_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "BANNER_SLOT_SPRITE", "field_45481", "BANNER_SLOT_TEXTURE", "f_290693_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#BANNER_SLOT_TEXTURE
    [[maybe_unused]] static void set_field_BANNER_SLOT_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "BANNER_SLOT_SPRITE", "field_45481", "BANNER_SLOT_TEXTURE", "f_290693_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#DYE_SLOT_TEXTURE
    [[maybe_unused]] static jobject get_field_DYE_SLOT_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "DYE_SLOT_SPRITE", "field_45482", "DYE_SLOT_TEXTURE", "f_291189_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#DYE_SLOT_TEXTURE
    [[maybe_unused]] static void set_field_DYE_SLOT_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "DYE_SLOT_SPRITE", "field_45482", "DYE_SLOT_TEXTURE", "f_291189_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_SLOT_TEXTURE
    [[maybe_unused]] static jobject get_field_PATTERN_SLOT_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "PATTERN_SLOT_SPRITE", "field_45483", "PATTERN_SLOT_TEXTURE", "f_291231_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_SLOT_TEXTURE
    [[maybe_unused]] static void set_field_PATTERN_SLOT_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "PATTERN_SLOT_SPRITE", "field_45483", "PATTERN_SLOT_TEXTURE", "f_291231_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#SCROLLER_TEXTURE
    [[maybe_unused]] static jobject get_field_SCROLLER_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SCROLLER_SPRITE", "field_45476", "SCROLLER_TEXTURE", "f_291186_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#SCROLLER_TEXTURE
    [[maybe_unused]] static void set_field_SCROLLER_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SCROLLER_SPRITE", "field_45476", "SCROLLER_TEXTURE", "f_291186_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#SCROLLER_DISABLED_TEXTURE
    [[maybe_unused]] static jobject get_field_SCROLLER_DISABLED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SCROLLER_DISABLED_SPRITE", "field_45477", "SCROLLER_DISABLED_TEXTURE", "f_290563_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#SCROLLER_DISABLED_TEXTURE
    [[maybe_unused]] static void set_field_SCROLLER_DISABLED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SCROLLER_DISABLED_SPRITE", "field_45477", "SCROLLER_DISABLED_TEXTURE", "f_290563_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_SELECTED_TEXTURE
    [[maybe_unused]] static jobject get_field_PATTERN_SELECTED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "PATTERN_SELECTED_SPRITE", "field_45478", "PATTERN_SELECTED_TEXTURE", "f_290690_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_SELECTED_TEXTURE
    [[maybe_unused]] static void set_field_PATTERN_SELECTED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "PATTERN_SELECTED_SPRITE", "field_45478", "PATTERN_SELECTED_TEXTURE", "f_290690_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_HIGHLIGHTED_TEXTURE
    [[maybe_unused]] static jobject get_field_PATTERN_HIGHLIGHTED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "PATTERN_HIGHLIGHTED_SPRITE", "field_45479", "PATTERN_HIGHLIGHTED_TEXTURE", "f_291547_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_HIGHLIGHTED_TEXTURE
    [[maybe_unused]] static void set_field_PATTERN_HIGHLIGHTED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "PATTERN_HIGHLIGHTED_SPRITE", "field_45479", "PATTERN_HIGHLIGHTED_TEXTURE", "f_291547_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_TEXTURE
    [[maybe_unused]] static jobject get_field_PATTERN_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "PATTERN_SPRITE", "field_45480", "PATTERN_TEXTURE", "f_290990_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_TEXTURE
    [[maybe_unused]] static void set_field_PATTERN_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "PATTERN_SPRITE", "field_45480", "PATTERN_TEXTURE", "f_290990_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#ERROR_TEXTURE
    [[maybe_unused]] static jobject get_field_ERROR_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "ERROR_SPRITE", "field_46186", "ERROR_TEXTURE", "f_291145_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#ERROR_TEXTURE
    [[maybe_unused]] static void set_field_ERROR_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "ERROR_SPRITE", "field_46186", "ERROR_TEXTURE", "f_291145_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#TEXTURE
    [[maybe_unused]] static jobject get_field_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "BG_LOCATION", "field_2966", "TEXTURE", "f_99060_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#TEXTURE
    [[maybe_unused]] static void set_field_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "BG_LOCATION", "field_2966", "TEXTURE", "f_99060_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_LIST_COLUMNS
    [[maybe_unused]] static jint get_field_PATTERN_LIST_COLUMNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "PATTERN_COLUMNS", "field_32346", "PATTERN_LIST_COLUMNS", "f_169776_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_LIST_COLUMNS
    [[maybe_unused]] static void set_field_PATTERN_LIST_COLUMNS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "PATTERN_COLUMNS", "field_32346", "PATTERN_LIST_COLUMNS", "f_169776_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_LIST_ROWS
    [[maybe_unused]] static jint get_field_PATTERN_LIST_ROWS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "PATTERN_ROWS", "field_32347", "PATTERN_LIST_ROWS", "f_169777_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_LIST_ROWS
    [[maybe_unused]] static void set_field_PATTERN_LIST_ROWS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "PATTERN_ROWS", "field_32347", "PATTERN_LIST_ROWS", "f_169777_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#SCROLLBAR_WIDTH
    [[maybe_unused]] static jint get_field_SCROLLBAR_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "SCROLLER_WIDTH", "field_32348", "SCROLLBAR_WIDTH", "f_169778_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#SCROLLBAR_WIDTH
    [[maybe_unused]] static void set_field_SCROLLBAR_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "SCROLLER_WIDTH", "field_32348", "SCROLLBAR_WIDTH", "f_169778_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#SCROLLBAR_HEIGHT
    [[maybe_unused]] static jint get_field_SCROLLBAR_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "SCROLLER_HEIGHT", "field_32349", "SCROLLBAR_HEIGHT", "f_169779_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#SCROLLBAR_HEIGHT
    [[maybe_unused]] static void set_field_SCROLLBAR_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "SCROLLER_HEIGHT", "field_32349", "SCROLLBAR_HEIGHT", "f_169779_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_ENTRY_SIZE
    [[maybe_unused]] static jint get_field_PATTERN_ENTRY_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "PATTERN_IMAGE_SIZE", "field_32350", "PATTERN_ENTRY_SIZE", "f_169780_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_ENTRY_SIZE
    [[maybe_unused]] static void set_field_PATTERN_ENTRY_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "PATTERN_IMAGE_SIZE", "field_32350", "PATTERN_ENTRY_SIZE", "f_169780_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#SCROLLBAR_AREA_HEIGHT
    [[maybe_unused]] static jint get_field_SCROLLBAR_AREA_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "SCROLLER_FULL_HEIGHT", "field_32351", "SCROLLBAR_AREA_HEIGHT", "f_169781_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#SCROLLBAR_AREA_HEIGHT
    [[maybe_unused]] static void set_field_SCROLLBAR_AREA_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "SCROLLER_FULL_HEIGHT", "field_32351", "SCROLLBAR_AREA_HEIGHT", "f_169781_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_LIST_OFFSET_X
    [[maybe_unused]] static jint get_field_PATTERN_LIST_OFFSET_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "PATTERNS_X", "field_32352", "PATTERN_LIST_OFFSET_X", "f_169782_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_LIST_OFFSET_X
    [[maybe_unused]] static void set_field_PATTERN_LIST_OFFSET_X(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "PATTERNS_X", "field_32352", "PATTERN_LIST_OFFSET_X", "f_169782_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_LIST_OFFSET_Y
    [[maybe_unused]] static jint get_field_PATTERN_LIST_OFFSET_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "PATTERNS_Y", "field_32353", "PATTERN_LIST_OFFSET_Y", "f_169783_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#PATTERN_LIST_OFFSET_Y
    [[maybe_unused]] static void set_field_PATTERN_LIST_OFFSET_Y(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "PATTERNS_Y", "field_32353", "PATTERN_LIST_OFFSET_Y", "f_169783_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.LoomScreen#bannerField
    static jobject get_field_bannerField(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "flag", "field_21694", "bannerField", "f_99062_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#bannerField
    static void set_field_bannerField(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "flag", "field_21694", "bannerField", "f_99062_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.LoomScreen#bannerPatterns
    static jobject get_field_bannerPatterns(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "resultBannerPatterns", "field_21841", "bannerPatterns", "f_99063_"), "Ldpy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#bannerPatterns
    static void set_field_bannerPatterns(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "resultBannerPatterns", "field_21841", "bannerPatterns", "f_99063_"), "Ldpy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.LoomScreen#banner
    static jobject get_field_banner(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "bannerStack", "field_2955", "banner", "f_99064_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#banner
    static void set_field_banner(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "bannerStack", "field_2955", "banner", "f_99064_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.LoomScreen#dye
    static jobject get_field_dye(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "dyeStack", "field_2954", "dye", "f_99065_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#dye
    static void set_field_dye(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "dyeStack", "field_2954", "dye", "f_99065_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.LoomScreen#pattern
    static jobject get_field_pattern(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "patternStack", "field_2967", "pattern", "f_99066_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#pattern
    static void set_field_pattern(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "patternStack", "field_2967", "pattern", "f_99066_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.LoomScreen#canApplyDyePattern
    static jboolean get_field_canApplyDyePattern(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "displayPatterns", "field_2965", "canApplyDyePattern", "f_99067_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#canApplyDyePattern
    static void set_field_canApplyDyePattern(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "displayPatterns", "field_2965", "canApplyDyePattern", "f_99067_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.LoomScreen#hasTooManyPatterns
    static jboolean get_field_hasTooManyPatterns(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "hasMaxPatterns", "field_2961", "hasTooManyPatterns", "f_99069_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#hasTooManyPatterns
    static void set_field_hasTooManyPatterns(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "hasMaxPatterns", "field_2961", "hasTooManyPatterns", "f_99069_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.LoomScreen#scrollPosition
    static jfloat get_field_scrollPosition(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "scrollOffs", "field_2968", "scrollPosition", "f_99070_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#scrollPosition
    static void set_field_scrollPosition(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "scrollOffs", "field_2968", "scrollPosition", "f_99070_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.LoomScreen#scrollbarClicked
    static jboolean get_field_scrollbarClicked(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "scrolling", "field_2958", "scrollbarClicked", "f_99071_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#scrollbarClicked
    static void set_field_scrollbarClicked(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "scrolling", "field_2958", "scrollbarClicked", "f_99071_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.LoomScreen#visibleTopRow
    static jint get_field_visibleTopRow(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "startRow", "field_39190", "visibleTopRow", "f_232823_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.LoomScreen#visibleTopRow
    static void set_field_visibleTopRow(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "startRow", "field_39190", "visibleTopRow", "f_232823_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT_", "init", "method_25426", "init", "m_7856_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getRows() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "totalRowCount", "method_43774", "getRows", "m_232828_"), "()I");
    }

    static jint getRows(const jobject& obj) {
                
       const auto methodID = methodID_getRows();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_drawBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderBg", "method_2389", "drawBackground", "m_7286_"), "(Lfhz;FII)V");
    }

    static void drawBackground(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_drawBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawBanner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderPattern", "method_22692", "drawBanner", "m_280599_"), "(Lfhz;Ljm;II)V");
    }

    static void drawBanner(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_drawBanner();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_mouseDragged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseDragged", "method_25403", "mouseDragged", "m_7979_"), "(DDIDD)Z");
    }

    static jboolean mouseDragged(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_mouseDragged();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_mouseScrolled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseScrolled", "method_25401", "mouseScrolled", "m_6050_"), "(DDDD)Z");
    }

    static jboolean mouseScrolled(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
                
       const auto methodID = methodID_mouseScrolled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isClickOutsideBounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasClickedOutside", "method_2381", "isClickOutsideBounds", "m_7467_"), "(DDIII)Z");
    }

    static jboolean isClickOutsideBounds(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_isClickOutsideBounds();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_onInventoryChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "containerChanged", "method_17576", "onInventoryChanged", "m_99112_"), "()V");
    }

    static void onInventoryChanged(const jobject& obj) {
                
       const auto methodID = methodID_onInventoryChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_LOOMSCREEN_HPP