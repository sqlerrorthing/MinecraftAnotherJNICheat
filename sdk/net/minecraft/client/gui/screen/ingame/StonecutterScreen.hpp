// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_STONECUTTERSCREEN_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_STONECUTTERSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.ingame.StonecutterScreen
 * Remapped: fqg
 */
namespace StonecutterScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fqg", "net/minecraft/client/gui/screens/inventory/StonecutterScreen", "net/minecraft/class_3979", "net/minecraft/client/gui/screen/ingame/StonecutterScreen", "net/minecraft/src/C_3681_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#SCROLLER_TEXTURE
    [[maybe_unused]] static jobject get_field_SCROLLER_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "SCROLLER_SPRITE", "field_45503", "SCROLLER_TEXTURE", "f_291816_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#SCROLLER_TEXTURE
    [[maybe_unused]] static void set_field_SCROLLER_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "SCROLLER_SPRITE", "field_45503", "SCROLLER_TEXTURE", "f_291816_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#SCROLLER_DISABLED_TEXTURE
    [[maybe_unused]] static jobject get_field_SCROLLER_DISABLED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SCROLLER_DISABLED_SPRITE", "field_45504", "SCROLLER_DISABLED_TEXTURE", "f_290386_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#SCROLLER_DISABLED_TEXTURE
    [[maybe_unused]] static void set_field_SCROLLER_DISABLED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SCROLLER_DISABLED_SPRITE", "field_45504", "SCROLLER_DISABLED_TEXTURE", "f_290386_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_SELECTED_TEXTURE
    [[maybe_unused]] static jobject get_field_RECIPE_SELECTED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "RECIPE_SELECTED_SPRITE", "field_45505", "RECIPE_SELECTED_TEXTURE", "f_291801_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_SELECTED_TEXTURE
    [[maybe_unused]] static void set_field_RECIPE_SELECTED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "RECIPE_SELECTED_SPRITE", "field_45505", "RECIPE_SELECTED_TEXTURE", "f_291801_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_HIGHLIGHTED_TEXTURE
    [[maybe_unused]] static jobject get_field_RECIPE_HIGHLIGHTED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "RECIPE_HIGHLIGHTED_SPRITE", "field_45501", "RECIPE_HIGHLIGHTED_TEXTURE", "f_291712_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_HIGHLIGHTED_TEXTURE
    [[maybe_unused]] static void set_field_RECIPE_HIGHLIGHTED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "RECIPE_HIGHLIGHTED_SPRITE", "field_45501", "RECIPE_HIGHLIGHTED_TEXTURE", "f_291712_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_TEXTURE
    [[maybe_unused]] static jobject get_field_RECIPE_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "RECIPE_SPRITE", "field_45502", "RECIPE_TEXTURE", "f_291694_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_TEXTURE
    [[maybe_unused]] static void set_field_RECIPE_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "RECIPE_SPRITE", "field_45502", "RECIPE_TEXTURE", "f_291694_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#TEXTURE
    [[maybe_unused]] static jobject get_field_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "BG_LOCATION", "field_17673", "TEXTURE", "f_99303_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#TEXTURE
    [[maybe_unused]] static void set_field_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "BG_LOCATION", "field_17673", "TEXTURE", "f_99303_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#SCROLLBAR_WIDTH
    [[maybe_unused]] static jint get_field_SCROLLBAR_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SCROLLER_WIDTH", "field_32372", "SCROLLBAR_WIDTH", "f_169826_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#SCROLLBAR_WIDTH
    [[maybe_unused]] static void set_field_SCROLLBAR_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SCROLLER_WIDTH", "field_32372", "SCROLLBAR_WIDTH", "f_169826_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#SCROLLBAR_HEIGHT
    [[maybe_unused]] static jint get_field_SCROLLBAR_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SCROLLER_HEIGHT", "field_32373", "SCROLLBAR_HEIGHT", "f_169827_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#SCROLLBAR_HEIGHT
    [[maybe_unused]] static void set_field_SCROLLBAR_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SCROLLER_HEIGHT", "field_32373", "SCROLLBAR_HEIGHT", "f_169827_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_LIST_COLUMNS
    [[maybe_unused]] static jint get_field_RECIPE_LIST_COLUMNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "RECIPES_COLUMNS", "field_32374", "RECIPE_LIST_COLUMNS", "f_169828_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_LIST_COLUMNS
    [[maybe_unused]] static void set_field_RECIPE_LIST_COLUMNS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "RECIPES_COLUMNS", "field_32374", "RECIPE_LIST_COLUMNS", "f_169828_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_LIST_ROWS
    [[maybe_unused]] static jint get_field_RECIPE_LIST_ROWS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "RECIPES_ROWS", "field_32375", "RECIPE_LIST_ROWS", "f_169829_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_LIST_ROWS
    [[maybe_unused]] static void set_field_RECIPE_LIST_ROWS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "RECIPES_ROWS", "field_32375", "RECIPE_LIST_ROWS", "f_169829_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_ENTRY_WIDTH
    [[maybe_unused]] static jint get_field_RECIPE_ENTRY_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "RECIPES_IMAGE_SIZE_WIDTH", "field_32376", "RECIPE_ENTRY_WIDTH", "f_169830_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_ENTRY_WIDTH
    [[maybe_unused]] static void set_field_RECIPE_ENTRY_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "RECIPES_IMAGE_SIZE_WIDTH", "field_32376", "RECIPE_ENTRY_WIDTH", "f_169830_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_ENTRY_HEIGHT
    [[maybe_unused]] static jint get_field_RECIPE_ENTRY_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "RECIPES_IMAGE_SIZE_HEIGHT", "field_32377", "RECIPE_ENTRY_HEIGHT", "f_169831_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_ENTRY_HEIGHT
    [[maybe_unused]] static void set_field_RECIPE_ENTRY_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "RECIPES_IMAGE_SIZE_HEIGHT", "field_32377", "RECIPE_ENTRY_HEIGHT", "f_169831_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#SCROLLBAR_AREA_HEIGHT
    [[maybe_unused]] static jint get_field_SCROLLBAR_AREA_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "SCROLLER_FULL_HEIGHT", "field_32378", "SCROLLBAR_AREA_HEIGHT", "f_169832_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#SCROLLBAR_AREA_HEIGHT
    [[maybe_unused]] static void set_field_SCROLLBAR_AREA_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "SCROLLER_FULL_HEIGHT", "field_32378", "SCROLLBAR_AREA_HEIGHT", "f_169832_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_LIST_OFFSET_X
    [[maybe_unused]] static jint get_field_RECIPE_LIST_OFFSET_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "RECIPES_X", "field_32379", "RECIPE_LIST_OFFSET_X", "f_169833_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_LIST_OFFSET_X
    [[maybe_unused]] static void set_field_RECIPE_LIST_OFFSET_X(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "RECIPES_X", "field_32379", "RECIPE_LIST_OFFSET_X", "f_169833_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_LIST_OFFSET_Y
    [[maybe_unused]] static jint get_field_RECIPE_LIST_OFFSET_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "RECIPES_Y", "field_32380", "RECIPE_LIST_OFFSET_Y", "f_169834_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#RECIPE_LIST_OFFSET_Y
    [[maybe_unused]] static void set_field_RECIPE_LIST_OFFSET_Y(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "RECIPES_Y", "field_32380", "RECIPE_LIST_OFFSET_Y", "f_169834_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#scrollAmount
    static jfloat get_field_scrollAmount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "scrollOffs", "field_17674", "scrollAmount", "f_99304_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#scrollAmount
    static void set_field_scrollAmount(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "scrollOffs", "field_17674", "scrollAmount", "f_99304_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#mouseClicked
    static jboolean get_field_mouseClicked(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "scrolling", "field_17670", "mouseClicked", "f_99305_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#mouseClicked
    static void set_field_mouseClicked(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "scrolling", "field_17670", "mouseClicked", "f_99305_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#scrollOffset
    static jint get_field_scrollOffset(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "startIndex", "field_17671", "scrollOffset", "f_99306_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#scrollOffset
    static void set_field_scrollOffset(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "startIndex", "field_17671", "scrollOffset", "f_99306_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#canCraft
    static jboolean get_field_canCraft(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "displayRecipes", "field_17672", "canCraft", "f_99307_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.StonecutterScreen#canCraft
    static void set_field_canCraft(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "displayRecipes", "field_17672", "canCraft", "f_99307_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderBg", "method_2389", "drawBackground", "m_7286_"), "(Lfhz;FII)V");
    }

    static void drawBackground(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_drawBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawMouseoverTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderTooltip", "method_2380", "drawMouseoverTooltip", "m_280072_"), "(Lfhz;II)V");
    }

    static void drawMouseoverTooltip(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_drawMouseoverTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_renderRecipeBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderButtons", "method_17952", "renderRecipeBackground", "m_280299_"), "(Lfhz;IIIII)V");
    }

    static void renderRecipeBackground(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5) {
                
       const auto methodID = methodID_renderRecipeBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_renderRecipeIcons() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderRecipes", "method_17951", "renderRecipeIcons", "m_280605_"), "(Lfhz;III)V");
    }

    static void renderRecipeIcons(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_renderRecipeIcons();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean _mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID__mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_mouseDragged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseDragged", "method_25403", "mouseDragged", "m_7979_"), "(DDIDD)Z");
    }

    static jboolean mouseDragged(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_mouseDragged();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_mouseScrolled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseScrolled", "method_25401", "mouseScrolled", "m_6050_"), "(DDDD)Z");
    }

    static jboolean mouseScrolled(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
                
       const auto methodID = methodID_mouseScrolled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_shouldScroll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "isScrollBarActive", "method_17954", "shouldScroll", "m_99353_"), "()Z");
    }

    static jboolean shouldScroll(const jobject& obj) {
                
       const auto methodID = methodID_shouldScroll();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxScroll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "getOffscreenRows", "method_17953", "getMaxScroll", "m_99352_"), "()I");
    }

    static jint getMaxScroll(const jobject& obj) {
                
       const auto methodID = methodID_getMaxScroll();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_onInventoryChange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "containerChanged", "method_17955", "onInventoryChange", "m_99354_"), "()V");
    }

    static void onInventoryChange(const jobject& obj) {
                
       const auto methodID = methodID_onInventoryChange();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_STONECUTTERSCREEN_HPP