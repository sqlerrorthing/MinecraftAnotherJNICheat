// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_COMMANDBLOCKSCREEN_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_COMMANDBLOCKSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.ingame.CommandBlockScreen
 * Remapped: fpd
 */
namespace CommandBlockScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fpd", "net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen", "net/minecraft/class_477", "net/minecraft/client/gui/screen/ingame/CommandBlockScreen", "net/minecraft/src/C_3646_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#blockEntity
    static jobject get_field_blockEntity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "autoCommandBlock", "field_2865", "blockEntity", "f_98374_"), "Ldqr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#blockEntity
    static void set_field_blockEntity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "autoCommandBlock", "field_2865", "blockEntity", "f_98374_"), "Ldqr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#modeButton
    static jobject get_field_modeButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "modeButton", "field_2869", "modeButton", "f_98375_"), "Lfit;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#modeButton
    static void set_field_modeButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "modeButton", "field_2869", "modeButton", "f_98375_"), "Lfit;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#conditionalModeButton
    static jobject get_field_conditionalModeButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "conditionalButton", "field_2871", "conditionalModeButton", "f_98376_"), "Lfit;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#conditionalModeButton
    static void set_field_conditionalModeButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "conditionalButton", "field_2871", "conditionalModeButton", "f_98376_"), "Lfit;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#redstoneTriggerButton
    static jobject get_field_redstoneTriggerButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "autoexecButton", "field_2866", "redstoneTriggerButton", "f_98377_"), "Lfit;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#redstoneTriggerButton
    static void set_field_redstoneTriggerButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "autoexecButton", "field_2866", "redstoneTriggerButton", "f_98377_"), "Lfit;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#mode
    static jobject get_field_mode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "mode", "field_2870", "mode", "f_98378_"), "Ldqr$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#mode
    static void set_field_mode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "mode", "field_2870", "mode", "f_98378_"), "Ldqr$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#conditional
    static jboolean get_field_conditional(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "conditional", "field_2868", "conditional", "f_98379_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#conditional
    static void set_field_conditional(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "conditional", "field_2868", "conditional", "f_98379_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#autoActivate
    static jboolean get_field_autoActivate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "autoexec", "field_2867", "autoActivate", "f_98380_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.CommandBlockScreen#autoActivate
    static void set_field_autoActivate(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "autoexec", "field_2867", "autoActivate", "f_98380_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getCommandExecutor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getCommandBlock", "method_2351", "getCommandExecutor", "m_6556_"), "()Ldbx;");
    }

    static jobject getCommandExecutor(const jobject& obj) {
                
       const auto methodID = methodID_getCommandExecutor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTrackOutputButtonHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "getPreviousY", "method_2364", "getTrackOutputButtonHeight", "m_7821_"), "()I");
    }

    static jint getTrackOutputButtonHeight(const jobject& obj) {
                
       const auto methodID = methodID_getTrackOutputButtonHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT_", "init", "method_25426", "init", "m_7856_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setButtonsActive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "enableControls", "method_32647", "setButtonsActive", "m_169729_"), "(Z)V");
    }

    static void setButtonsActive(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setButtonsActive();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateCommandBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "updateGui", "method_2457", "updateCommandBlock", "m_98398_"), "()V");
    }

    static void updateCommandBlock(const jobject& obj) {
                
       const auto methodID = methodID_updateCommandBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_resize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resize", "method_25410", "resize", "m_6574_"), "(Lfgo;II)V");
    }

    static void resize(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_resize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_syncSettingsToServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "populateAndSendPacket", "method_2352", "syncSettingsToServer", "m_6372_"), "(Ldbx;)V");
    }

    static void syncSettingsToServer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_syncSettingsToServer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_COMMANDBLOCKSCREEN_HPP