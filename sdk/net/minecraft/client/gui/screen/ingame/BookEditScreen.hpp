// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_BOOKEDITSCREEN_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_BOOKEDITSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.ingame.BookEditScreen
 * Remapped: foz
 */
namespace BookEditScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("foz", "net/minecraft/client/gui/screens/inventory/BookEditScreen", "net/minecraft/class_473", "net/minecraft/client/gui/screen/ingame/BookEditScreen", "net/minecraft/src/C_3635_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#MAX_TEXT_WIDTH
    [[maybe_unused]] static jint get_field_MAX_TEXT_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TEXT_WIDTH", "field_32323", "MAX_TEXT_WIDTH", "f_169682_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#MAX_TEXT_WIDTH
    [[maybe_unused]] static void set_field_MAX_TEXT_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TEXT_WIDTH", "field_32323", "MAX_TEXT_WIDTH", "f_169682_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#MAX_TEXT_HEIGHT
    [[maybe_unused]] static jint get_field_MAX_TEXT_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TEXT_HEIGHT", "field_32324", "MAX_TEXT_HEIGHT", "f_169683_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#MAX_TEXT_HEIGHT
    [[maybe_unused]] static void set_field_MAX_TEXT_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TEXT_HEIGHT", "field_32324", "MAX_TEXT_HEIGHT", "f_169683_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#WIDTH
    [[maybe_unused]] static jint get_field_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "IMAGE_WIDTH", "field_32326", "WIDTH", "f_169685_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#WIDTH
    [[maybe_unused]] static void set_field_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "IMAGE_WIDTH", "field_32326", "WIDTH", "f_169685_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#HEIGHT
    [[maybe_unused]] static jint get_field_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "IMAGE_HEIGHT", "field_32327", "HEIGHT", "f_169686_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#HEIGHT
    [[maybe_unused]] static void set_field_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "IMAGE_HEIGHT", "field_32327", "HEIGHT", "f_169686_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#EDIT_TITLE_TEXT
    [[maybe_unused]] static jobject get_field_EDIT_TITLE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "EDIT_TITLE_LABEL", "field_25893", "EDIT_TITLE_TEXT", "f_98060_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#EDIT_TITLE_TEXT
    [[maybe_unused]] static void set_field_EDIT_TITLE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "EDIT_TITLE_LABEL", "field_25893", "EDIT_TITLE_TEXT", "f_98060_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#FINALIZE_WARNING_TEXT
    [[maybe_unused]] static jobject get_field_FINALIZE_WARNING_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "FINALIZE_WARNING_LABEL", "field_25894", "FINALIZE_WARNING_TEXT", "f_98061_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#FINALIZE_WARNING_TEXT
    [[maybe_unused]] static void set_field_FINALIZE_WARNING_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "FINALIZE_WARNING_LABEL", "field_25894", "FINALIZE_WARNING_TEXT", "f_98061_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#BLACK_CURSOR_TEXT
    [[maybe_unused]] static jobject get_field_BLACK_CURSOR_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "BLACK_CURSOR", "field_25895", "BLACK_CURSOR_TEXT", "f_98062_"), "Laya;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#BLACK_CURSOR_TEXT
    [[maybe_unused]] static void set_field_BLACK_CURSOR_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "BLACK_CURSOR", "field_25895", "BLACK_CURSOR_TEXT", "f_98062_"), "Laya;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#GRAY_CURSOR_TEXT
    [[maybe_unused]] static jobject get_field_GRAY_CURSOR_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "GRAY_CURSOR", "field_25896", "GRAY_CURSOR_TEXT", "f_98063_"), "Laya;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#GRAY_CURSOR_TEXT
    [[maybe_unused]] static void set_field_GRAY_CURSOR_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "GRAY_CURSOR", "field_25896", "GRAY_CURSOR_TEXT", "f_98063_"), "Laya;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#player
    static jobject get_field_player(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "owner", "field_2826", "player", "f_98064_"), "Lcmx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#player
    static void set_field_player(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "owner", "field_2826", "player", "f_98064_"), "Lcmx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#itemStack
    static jobject get_field_itemStack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "book", "field_2835", "itemStack", "f_98065_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#itemStack
    static void set_field_itemStack(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "book", "field_2835", "itemStack", "f_98065_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#dirty
    static jboolean get_field_dirty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "isModified", "field_2837", "dirty", "f_98066_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#dirty
    static void set_field_dirty(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "isModified", "field_2837", "dirty", "f_98066_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#signing
    static jboolean get_field_signing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "isSigning", "field_2828", "signing", "f_98067_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#signing
    static void set_field_signing(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "isSigning", "field_2828", "signing", "f_98067_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#tickCounter
    static jint get_field_tickCounter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "frameTick", "field_2844", "tickCounter", "f_98068_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#tickCounter
    static void set_field_tickCounter(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "frameTick", "field_2844", "tickCounter", "f_98068_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#currentPage
    static jint get_field_currentPage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "currentPage", "field_2840", "currentPage", "f_98069_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#currentPage
    static void set_field_currentPage(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "currentPage", "field_2840", "currentPage", "f_98069_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#pages
    static jobject get_field_pages(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "pages", "field_17116", "pages", "f_98070_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#pages
    static void set_field_pages(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "pages", "field_17116", "pages", "f_98070_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#title
    static jobject get_field_title(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "title", "field_2847", "title", "f_98071_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#title
    static void set_field_title(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "title", "field_2847", "title", "f_98071_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#currentPageSelectionManager
    static jobject get_field_currentPageSelectionManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "pageEdit", "field_24269", "currentPageSelectionManager", "f_98072_"), "Lflg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#currentPageSelectionManager
    static void set_field_currentPageSelectionManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "pageEdit", "field_24269", "currentPageSelectionManager", "f_98072_"), "Lflg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#bookTitleSelectionManager
    static jobject get_field_bookTitleSelectionManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "titleEdit", "field_24270", "bookTitleSelectionManager", "f_98073_"), "Lflg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#bookTitleSelectionManager
    static void set_field_bookTitleSelectionManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "titleEdit", "field_24270", "bookTitleSelectionManager", "f_98073_"), "Lflg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#lastClickTime
    static jlong get_field_lastClickTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "lastClickTime", "field_2830", "lastClickTime", "f_98048_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#lastClickTime
    static void set_field_lastClickTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "lastClickTime", "field_2830", "lastClickTime", "f_98048_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#lastClickIndex
    static jint get_field_lastClickIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "lastIndex", "field_2827", "lastClickIndex", "f_98049_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#lastClickIndex
    static void set_field_lastClickIndex(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "lastIndex", "field_2827", "lastClickIndex", "f_98049_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#nextPageButton
    static jobject get_field_nextPageButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "forwardButton", "field_2843", "nextPageButton", "f_98050_"), "Lfqb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#nextPageButton
    static void set_field_nextPageButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "forwardButton", "field_2843", "nextPageButton", "f_98050_"), "Lfqb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#previousPageButton
    static jobject get_field_previousPageButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "backButton", "field_2839", "previousPageButton", "f_98051_"), "Lfqb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#previousPageButton
    static void set_field_previousPageButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "backButton", "field_2839", "previousPageButton", "f_98051_"), "Lfqb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#doneButton
    static jobject get_field_doneButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "doneButton", "field_2848", "doneButton", "f_98052_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#doneButton
    static void set_field_doneButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "doneButton", "field_2848", "doneButton", "f_98052_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#signButton
    static jobject get_field_signButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "signButton", "field_2831", "signButton", "f_98053_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#signButton
    static void set_field_signButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "signButton", "field_2831", "signButton", "f_98053_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#finalizeButton
    static jobject get_field_finalizeButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "finalizeButton", "field_2841", "finalizeButton", "f_98054_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#finalizeButton
    static void set_field_finalizeButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "finalizeButton", "field_2841", "finalizeButton", "f_98054_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#cancelButton
    static jobject get_field_cancelButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "cancelButton", "field_2849", "cancelButton", "f_98055_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#cancelButton
    static void set_field_cancelButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "cancelButton", "field_2849", "cancelButton", "f_98055_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#hand
    static jobject get_field_hand(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "hand", "field_2832", "hand", "f_98056_"), "Lbqq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#hand
    static void set_field_hand(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "hand", "field_2832", "hand", "f_98056_"), "Lbqq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#pageContent
    static jobject get_field_pageContent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "displayCache", "field_24268", "pageContent", "f_98057_"), "Lfoz$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#pageContent
    static void set_field_pageContent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "displayCache", "field_24268", "pageContent", "f_98057_"), "Lfoz$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#pageIndicatorText
    static jobject get_field_pageIndicatorText(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "pageMsg", "field_25891", "pageIndicatorText", "f_98058_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#pageIndicatorText
    static void set_field_pageIndicatorText(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "pageMsg", "field_25891", "pageIndicatorText", "f_98058_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BookEditScreen#signedByText
    static jobject get_field_signedByText(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "ownerText", "field_25892", "signedByText", "f_98059_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BookEditScreen#signedByText
    static void set_field_signedByText(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "ownerText", "field_25892", "signedByText", "f_98059_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_setClipboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setClipboard", "method_27584", "setClipboard", "m_98147_"), "(Ljava/lang/String;)V");
    }

    static void setClipboard(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setClipboard();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getClipboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getClipboard", "method_27595", "getClipboard", "m_98180_"), "()Ljava/lang/String;");
    }

    static jobject getClipboard(const jobject& obj) {
                
       const auto methodID = methodID_getClipboard();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_countPages() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "getNumPages", "method_17046", "countPages", "m_98181_"), "()I");
    }

    static jint countPages(const jobject& obj) {
                
       const auto methodID = methodID_countPages();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "tick", "method_25393", "tick", "m_86600_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT_", "init", "method_25426", "init", "m_7856_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_openPreviousPage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "pageBack", "method_2437", "openPreviousPage", "m_98182_"), "()V");
    }

    static void openPreviousPage(const jobject& obj) {
                
       const auto methodID = methodID_openPreviousPage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_openNextPage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "pageForward", "method_2444", "openNextPage", "m_98183_"), "()V");
    }

    static void openNextPage(const jobject& obj) {
                
       const auto methodID = methodID_openNextPage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateButtons() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "updateButtonVisibility", "method_2413", "updateButtons", "m_98184_"), "()V");
    }

    static void updateButtons(const jobject& obj) {
                
       const auto methodID = methodID_updateButtons();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeEmptyPages() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "eraseEmptyTrailingPages", "method_17047", "removeEmptyPages", "m_98185_"), "()V");
    }

    static void removeEmptyPages(const jobject& obj) {
                
       const auto methodID = methodID_removeEmptyPages();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_finalizeBook() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "saveChanges", "method_2407", "finalizeBook", "m_98160_"), "(Z)V");
    }

    static void finalizeBook(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_finalizeBook();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeNbtData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "updateLocalCopy", "method_37433", "writeNbtData", "m_182574_"), "()V");
    }

    static void writeNbtData(const jobject& obj) {
                
       const auto methodID = methodID_writeNbtData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_appendNewPage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "appendPageToBook", "method_2436", "appendNewPage", "m_98186_"), "()V");
    }

    static void appendNewPage(const jobject& obj) {
                
       const auto methodID = methodID_appendNewPage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_keyPressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "keyPressed", "method_25404", "keyPressed", "m_7933_"), "(III)Z");
    }

    static jboolean keyPressed(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_keyPressed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_charTyped() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "charTyped", "method_25400", "charTyped", "m_5534_"), "(CI)Z");
    }

    static jboolean charTyped(const jobject& obj, const jchar& arg0, const jint& arg1) {
                
       const auto methodID = methodID_charTyped();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_keyPressedEditMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "bookKeyPressed", "method_27592", "keyPressedEditMode", "m_98152_"), "(III)Z");
    }

    static jboolean keyPressedEditMode(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_keyPressedEditMode();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_moveUpLine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L", "keyUp", "method_27597", "moveUpLine", "m_98187_"), "()V");
    }

    static void moveUpLine(const jobject& obj) {
                
       const auto methodID = methodID_moveUpLine();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_moveDownLine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("M", "keyDown", "method_27598", "moveDownLine", "m_98188_"), "()V");
    }

    static void moveDownLine(const jobject& obj) {
                
       const auto methodID = methodID_moveDownLine();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_moveVertically() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "changeLine", "method_27580", "moveVertically", "m_98097_"), "(I)V");
    }

    static void moveVertically(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_moveVertically();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_moveToLineStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("N", "keyHome", "method_2421", "moveToLineStart", "m_98189_"), "()V");
    }

    static void moveToLineStart(const jobject& obj) {
                
       const auto methodID = methodID_moveToLineStart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_moveToLineEnd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("O", "keyEnd", "method_2414", "moveToLineEnd", "m_98190_"), "()V");
    }

    static void moveToLineEnd(const jobject& obj) {
                
       const auto methodID = methodID_moveToLineEnd();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_keyPressedSignMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "titleKeyPressed", "method_2446", "keyPressedSignMode", "m_98163_"), "(III)Z");
    }

    static jboolean keyPressedSignMode(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_keyPressedSignMode();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getCurrentPageContent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("P", "getCurrentPageText", "method_2427", "getCurrentPageContent", "m_98191_"), "()Ljava/lang/String;");
    }

    static jobject getCurrentPageContent(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentPageContent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPageContent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setCurrentPageText", "method_2439", "setPageContent", "m_98158_"), "(Ljava/lang/String;)V");
    }

    static void setPageContent(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPageContent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_renderBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderBackground", "method_25420", "renderBackground", "m_280273_"), "(Lfhz;IIF)V");
    }

    static void renderBackground(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_renderBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderCursor", "method_27581", "drawCursor", "m_280220_"), "(Lfhz;Lfoz$c;Z)V");
    }

    static void drawCursor(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_drawCursor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_drawSelection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderHighlight", "method_27588", "drawSelection", "m_264248_"), "(Lfhz;[Lgfe;)V");
    }

    static void drawSelection(const jobject& obj, const jobject& arg0, const jarray& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_drawSelection();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_screenPositionToAbsolutePosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "convertScreenToLocal", "method_27582", "screenPositionToAbsolutePosition", "m_98114_"), "(Lfoz$c;)Lfoz$c;");
    }

    static jobject screenPositionToAbsolutePosition(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_screenPositionToAbsolutePosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_absolutePositionToScreenPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "convertLocalToScreen", "method_27590", "absolutePositionToScreenPosition", "m_98145_"), "(Lfoz$c;)Lfoz$c;");
    }

    static jobject absolutePositionToScreenPosition(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_absolutePositionToScreenPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_selectCurrentWord() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "selectWord", "method_27589", "selectCurrentWord", "m_98141_"), "(I)V");
    }

    static void selectCurrentWord(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_selectCurrentWord();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_mouseDragged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseDragged", "method_25403", "mouseDragged", "m_7979_"), "(DDIDD)Z");
    }

    static jboolean mouseDragged(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_mouseDragged();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getPageContent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Q", "getDisplayCache", "method_27576", "getPageContent", "m_98079_"), "()Lfoz$a;");
    }

    static jobject getPageContent(const jobject& obj) {
                
       const auto methodID = methodID_getPageContent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_invalidatePageContent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R", "clearDisplayCache", "method_27577", "invalidatePageContent", "m_98080_"), "()V");
    }

    static void invalidatePageContent(const jobject& obj) {
                
       const auto methodID = methodID_invalidatePageContent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_changePage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("S", "clearDisplayCacheAfterPageChange", "method_27872", "changePage", "m_98081_"), "()V");
    }

    static void changePage(const jobject& obj) {
                
       const auto methodID = methodID_changePage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createPageContent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("T", "rebuildDisplayCache", "method_27578", "createPageContent", "m_98082_"), "()Lfoz$a;");
    }

    static jobject createPageContent(const jobject& obj) {
                
       const auto methodID = methodID_createPageContent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLineFromOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findLineFromPos", "method_27591", "getLineFromOffset", "m_98149_"), "([II)I");
    }

    static jint getLineFromOffset(const jarray& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getLineFromOffset();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getLineSelectionRectangle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPartialLineSelection", "method_27585", "getLineSelectionRectangle", "m_98119_"), "(Ljava/lang/String;Lfgz;IIII)Lgfe;");
    }

    static jobject getLineSelectionRectangle(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5) {
                
       const auto methodID = methodID_getLineSelectionRectangle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getRectFromCorners() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createSelection", "method_27583", "getRectFromCorners", "m_98116_"), "(Lfoz$c;Lfoz$c;)Lgfe;");
    }

    static jobject getRectFromCorners(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getRectFromCorners();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_BOOKEDITSCREEN_HPP