// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_ENCHANTMENTSCREEN_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_ENCHANTMENTSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.ingame.EnchantmentScreen
 * Remapped: fpn
 */
namespace EnchantmentScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fpn", "net/minecraft/client/gui/screens/inventory/EnchantmentScreen", "net/minecraft/class_486", "net/minecraft/client/gui/screen/ingame/EnchantmentScreen", "net/minecraft/src/C_3659_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#LEVEL_TEXTURES
    [[maybe_unused]] static jobject get_field_LEVEL_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "ENABLED_LEVEL_SPRITES", "field_45464", "LEVEL_TEXTURES", "f_290980_"), "[Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#LEVEL_TEXTURES
    [[maybe_unused]] static void set_field_LEVEL_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "ENABLED_LEVEL_SPRITES", "field_45464", "LEVEL_TEXTURES", "f_290980_"), "[Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#LEVEL_DISABLED_TEXTURES
    [[maybe_unused]] static jobject get_field_LEVEL_DISABLED_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "DISABLED_LEVEL_SPRITES", "field_45465", "LEVEL_DISABLED_TEXTURES", "f_291094_"), "[Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#LEVEL_DISABLED_TEXTURES
    [[maybe_unused]] static void set_field_LEVEL_DISABLED_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "DISABLED_LEVEL_SPRITES", "field_45465", "LEVEL_DISABLED_TEXTURES", "f_291094_"), "[Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#ENCHANTMENT_SLOT_DISABLED_TEXTURE
    [[maybe_unused]] static jobject get_field_ENCHANTMENT_SLOT_DISABLED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "ENCHANTMENT_SLOT_DISABLED_SPRITE", "field_45466", "ENCHANTMENT_SLOT_DISABLED_TEXTURE", "f_291504_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#ENCHANTMENT_SLOT_DISABLED_TEXTURE
    [[maybe_unused]] static void set_field_ENCHANTMENT_SLOT_DISABLED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "ENCHANTMENT_SLOT_DISABLED_SPRITE", "field_45466", "ENCHANTMENT_SLOT_DISABLED_TEXTURE", "f_291504_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#ENCHANTMENT_SLOT_HIGHLIGHTED_TEXTURE
    [[maybe_unused]] static jobject get_field_ENCHANTMENT_SLOT_HIGHLIGHTED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "ENCHANTMENT_SLOT_HIGHLIGHTED_SPRITE", "field_45467", "ENCHANTMENT_SLOT_HIGHLIGHTED_TEXTURE", "f_291541_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#ENCHANTMENT_SLOT_HIGHLIGHTED_TEXTURE
    [[maybe_unused]] static void set_field_ENCHANTMENT_SLOT_HIGHLIGHTED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "ENCHANTMENT_SLOT_HIGHLIGHTED_SPRITE", "field_45467", "ENCHANTMENT_SLOT_HIGHLIGHTED_TEXTURE", "f_291541_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#ENCHANTMENT_SLOT_TEXTURE
    [[maybe_unused]] static jobject get_field_ENCHANTMENT_SLOT_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "ENCHANTMENT_SLOT_SPRITE", "field_45468", "ENCHANTMENT_SLOT_TEXTURE", "f_290760_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#ENCHANTMENT_SLOT_TEXTURE
    [[maybe_unused]] static void set_field_ENCHANTMENT_SLOT_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "ENCHANTMENT_SLOT_SPRITE", "field_45468", "ENCHANTMENT_SLOT_TEXTURE", "f_290760_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#TEXTURE
    [[maybe_unused]] static jobject get_field_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "ENCHANTING_TABLE_LOCATION", "field_2910", "TEXTURE", "f_98747_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#TEXTURE
    [[maybe_unused]] static void set_field_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "ENCHANTING_TABLE_LOCATION", "field_2910", "TEXTURE", "f_98747_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#BOOK_TEXTURE
    [[maybe_unused]] static jobject get_field_BOOK_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "ENCHANTING_BOOK_LOCATION", "field_2901", "BOOK_TEXTURE", "f_98748_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#BOOK_TEXTURE
    [[maybe_unused]] static void set_field_BOOK_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "ENCHANTING_BOOK_LOCATION", "field_2901", "BOOK_TEXTURE", "f_98748_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#random
    static jobject get_field_random(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "random", "field_2911", "random", "f_98750_"), "Layw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#random
    static void set_field_random(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "random", "field_2911", "random", "f_98750_"), "Layw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#BOOK_MODEL
    static jobject get_field_BOOK_MODEL(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "bookModel", "field_2908", "BOOK_MODEL", "f_169756_"), "Lfus;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#BOOK_MODEL
    static void set_field_BOOK_MODEL(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "bookModel", "field_2908", "BOOK_MODEL", "f_169756_"), "Lfus;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#ticks
    static jint get_field_ticks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "time", "field_2915", "ticks", "f_98740_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#ticks
    static void set_field_ticks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "time", "field_2915", "ticks", "f_98740_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#nextPageAngle
    static jfloat get_field_nextPageAngle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "flip", "field_2912", "nextPageAngle", "f_98741_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#nextPageAngle
    static void set_field_nextPageAngle(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "flip", "field_2912", "nextPageAngle", "f_98741_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#pageAngle
    static jfloat get_field_pageAngle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "oFlip", "field_2914", "pageAngle", "f_98742_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#pageAngle
    static void set_field_pageAngle(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "oFlip", "field_2914", "pageAngle", "f_98742_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#approximatePageAngle
    static jfloat get_field_approximatePageAngle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "flipT", "field_2909", "approximatePageAngle", "f_98743_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#approximatePageAngle
    static void set_field_approximatePageAngle(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "flipT", "field_2909", "approximatePageAngle", "f_98743_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#pageRotationSpeed
    static jfloat get_field_pageRotationSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "flipA", "field_2906", "pageRotationSpeed", "f_98744_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#pageRotationSpeed
    static void set_field_pageRotationSpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "flipA", "field_2906", "pageRotationSpeed", "f_98744_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#nextPageTurningSpeed
    static jfloat get_field_nextPageTurningSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "open", "field_2905", "nextPageTurningSpeed", "f_98745_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#nextPageTurningSpeed
    static void set_field_nextPageTurningSpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "open", "field_2905", "nextPageTurningSpeed", "f_98745_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#pageTurningSpeed
    static jfloat get_field_pageTurningSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "oOpen", "field_2904", "pageTurningSpeed", "f_98746_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#pageTurningSpeed
    static void set_field_pageTurningSpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "oOpen", "field_2904", "pageTurningSpeed", "f_98746_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#stack
    static jobject get_field_stack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "last", "field_2913", "stack", "f_98751_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.EnchantmentScreen#stack
    static void set_field_stack(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "last", "field_2913", "stack", "f_98751_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT_", "init", "method_25426", "init", "m_7856_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_handledScreenTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "containerTick", "method_37432", "handledScreenTick", "m_181908_"), "()V");
    }

    static void handledScreenTick(const jobject& obj) {
                
       const auto methodID = methodID_handledScreenTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_drawBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderBg", "method_2389", "drawBackground", "m_7286_"), "(Lfhz;FII)V");
    }

    static void drawBackground(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_drawBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawBook() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "renderBook", "method_52223", "drawBook", "m_289602_"), "(Lfhz;IIF)V");
    }

    static void drawBook(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_drawBook();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_doTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "tickBook", "method_2478", "doTick", "m_98772_"), "()V");
    }

    static void doTick(const jobject& obj) {
                
       const auto methodID = methodID_doTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_ENCHANTMENTSCREEN_HPP