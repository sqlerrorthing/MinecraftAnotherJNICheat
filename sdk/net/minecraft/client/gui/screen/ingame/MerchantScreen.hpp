// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_MERCHANTSCREEN_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_MERCHANTSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.ingame.MerchantScreen
 * Remapped: fpz
 */
namespace MerchantScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fpz", "net/minecraft/client/gui/screens/inventory/MerchantScreen", "net/minecraft/class_492", "net/minecraft/client/gui/screen/ingame/MerchantScreen", "net/minecraft/src/C_3673_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#OUT_OF_STOCK_TEXTURE
    [[maybe_unused]] static jobject get_field_OUT_OF_STOCK_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "OUT_OF_STOCK_SPRITE", "field_45490", "OUT_OF_STOCK_TEXTURE", "f_290390_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#OUT_OF_STOCK_TEXTURE
    [[maybe_unused]] static void set_field_OUT_OF_STOCK_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "OUT_OF_STOCK_SPRITE", "field_45490", "OUT_OF_STOCK_TEXTURE", "f_290390_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#EXPERIENCE_BAR_BACKGROUND_TEXTURE
    [[maybe_unused]] static jobject get_field_EXPERIENCE_BAR_BACKGROUND_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "EXPERIENCE_BAR_BACKGROUND_SPRITE", "field_45491", "EXPERIENCE_BAR_BACKGROUND_TEXTURE", "f_290659_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#EXPERIENCE_BAR_BACKGROUND_TEXTURE
    [[maybe_unused]] static void set_field_EXPERIENCE_BAR_BACKGROUND_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "EXPERIENCE_BAR_BACKGROUND_SPRITE", "field_45491", "EXPERIENCE_BAR_BACKGROUND_TEXTURE", "f_290659_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#EXPERIENCE_BAR_CURRENT_TEXTURE
    [[maybe_unused]] static jobject get_field_EXPERIENCE_BAR_CURRENT_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "EXPERIENCE_BAR_CURRENT_SPRITE", "field_45492", "EXPERIENCE_BAR_CURRENT_TEXTURE", "f_290973_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#EXPERIENCE_BAR_CURRENT_TEXTURE
    [[maybe_unused]] static void set_field_EXPERIENCE_BAR_CURRENT_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "EXPERIENCE_BAR_CURRENT_SPRITE", "field_45492", "EXPERIENCE_BAR_CURRENT_TEXTURE", "f_290973_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#EXPERIENCE_BAR_RESULT_TEXTURE
    [[maybe_unused]] static jobject get_field_EXPERIENCE_BAR_RESULT_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "EXPERIENCE_BAR_RESULT_SPRITE", "field_45484", "EXPERIENCE_BAR_RESULT_TEXTURE", "f_291488_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#EXPERIENCE_BAR_RESULT_TEXTURE
    [[maybe_unused]] static void set_field_EXPERIENCE_BAR_RESULT_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "EXPERIENCE_BAR_RESULT_SPRITE", "field_45484", "EXPERIENCE_BAR_RESULT_TEXTURE", "f_291488_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLER_TEXTURE
    [[maybe_unused]] static jobject get_field_SCROLLER_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SCROLLER_SPRITE", "field_45485", "SCROLLER_TEXTURE", "f_291797_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLER_TEXTURE
    [[maybe_unused]] static void set_field_SCROLLER_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SCROLLER_SPRITE", "field_45485", "SCROLLER_TEXTURE", "f_291797_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLER_DISABLED_TEXTURE
    [[maybe_unused]] static jobject get_field_SCROLLER_DISABLED_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SCROLLER_DISABLED_SPRITE", "field_45486", "SCROLLER_DISABLED_TEXTURE", "f_290527_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLER_DISABLED_TEXTURE
    [[maybe_unused]] static void set_field_SCROLLER_DISABLED_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SCROLLER_DISABLED_SPRITE", "field_45486", "SCROLLER_DISABLED_TEXTURE", "f_290527_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TRADE_ARROW_OUT_OF_STOCK_TEXTURE
    [[maybe_unused]] static jobject get_field_TRADE_ARROW_OUT_OF_STOCK_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "TRADE_ARROW_OUT_OF_STOCK_SPRITE", "field_45487", "TRADE_ARROW_OUT_OF_STOCK_TEXTURE", "f_291439_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TRADE_ARROW_OUT_OF_STOCK_TEXTURE
    [[maybe_unused]] static void set_field_TRADE_ARROW_OUT_OF_STOCK_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "TRADE_ARROW_OUT_OF_STOCK_SPRITE", "field_45487", "TRADE_ARROW_OUT_OF_STOCK_TEXTURE", "f_291439_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TRADE_ARROW_TEXTURE
    [[maybe_unused]] static jobject get_field_TRADE_ARROW_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "TRADE_ARROW_SPRITE", "field_45488", "TRADE_ARROW_TEXTURE", "f_291764_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TRADE_ARROW_TEXTURE
    [[maybe_unused]] static void set_field_TRADE_ARROW_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "TRADE_ARROW_SPRITE", "field_45488", "TRADE_ARROW_TEXTURE", "f_291764_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#DISCOUNT_STRIKETHROUGH_TEXTURE
    [[maybe_unused]] static jobject get_field_DISCOUNT_STRIKETHROUGH_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "DISCOUNT_STRIKETHRUOGH_SPRITE", "field_45489", "DISCOUNT_STRIKETHROUGH_TEXTURE", "f_291695_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#DISCOUNT_STRIKETHROUGH_TEXTURE
    [[maybe_unused]] static void set_field_DISCOUNT_STRIKETHROUGH_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "DISCOUNT_STRIKETHRUOGH_SPRITE", "field_45489", "DISCOUNT_STRIKETHROUGH_TEXTURE", "f_291695_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TEXTURE
    [[maybe_unused]] static jobject get_field_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "VILLAGER_LOCATION", "field_2950", "TEXTURE", "f_99113_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TEXTURE
    [[maybe_unused]] static void set_field_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "VILLAGER_LOCATION", "field_2950", "TEXTURE", "f_99113_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TEXTURE_WIDTH
    [[maybe_unused]] static jint get_field_TEXTURE_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "TEXTURE_WIDTH", "field_32354", "TEXTURE_WIDTH", "f_169785_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TEXTURE_WIDTH
    [[maybe_unused]] static void set_field_TEXTURE_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "TEXTURE_WIDTH", "field_32354", "TEXTURE_WIDTH", "f_169785_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TEXTURE_HEIGHT
    [[maybe_unused]] static jint get_field_TEXTURE_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "TEXTURE_HEIGHT", "field_32355", "TEXTURE_HEIGHT", "f_169786_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TEXTURE_HEIGHT
    [[maybe_unused]] static void set_field_TEXTURE_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "TEXTURE_HEIGHT", "field_32355", "TEXTURE_HEIGHT", "f_169786_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#field_32356
    [[maybe_unused]] static jint get_field_field_32356() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "MERCHANT_MENU_PART_X", "field_32356", "field_32356", "f_169787_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#field_32356
    [[maybe_unused]] static void set_field_field_32356(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "MERCHANT_MENU_PART_X", "field_32356", "field_32356", "f_169787_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#XP_BAR_X_OFFSET
    [[maybe_unused]] static jint get_field_XP_BAR_X_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "PROGRESS_BAR_X", "field_32357", "XP_BAR_X_OFFSET", "f_169788_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#XP_BAR_X_OFFSET
    [[maybe_unused]] static void set_field_XP_BAR_X_OFFSET(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "PROGRESS_BAR_X", "field_32357", "XP_BAR_X_OFFSET", "f_169788_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TRADE_LIST_AREA_Y_OFFSET
    [[maybe_unused]] static jint get_field_TRADE_LIST_AREA_Y_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "PROGRESS_BAR_Y", "field_32358", "TRADE_LIST_AREA_Y_OFFSET", "f_169789_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TRADE_LIST_AREA_Y_OFFSET
    [[maybe_unused]] static void set_field_TRADE_LIST_AREA_Y_OFFSET(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "PROGRESS_BAR_Y", "field_32358", "TRADE_LIST_AREA_Y_OFFSET", "f_169789_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#FIRST_BUY_ITEM_X_OFFSET
    [[maybe_unused]] static jint get_field_FIRST_BUY_ITEM_X_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "SELL_ITEM_1_X", "field_32359", "FIRST_BUY_ITEM_X_OFFSET", "f_169790_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#FIRST_BUY_ITEM_X_OFFSET
    [[maybe_unused]] static void set_field_FIRST_BUY_ITEM_X_OFFSET(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "SELL_ITEM_1_X", "field_32359", "FIRST_BUY_ITEM_X_OFFSET", "f_169790_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SECOND_BUY_ITEM_X_OFFSET
    [[maybe_unused]] static jint get_field_SECOND_BUY_ITEM_X_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "SELL_ITEM_2_X", "field_32360", "SECOND_BUY_ITEM_X_OFFSET", "f_169791_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SECOND_BUY_ITEM_X_OFFSET
    [[maybe_unused]] static void set_field_SECOND_BUY_ITEM_X_OFFSET(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "SELL_ITEM_2_X", "field_32360", "SECOND_BUY_ITEM_X_OFFSET", "f_169791_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SOLD_ITEM_X_OFFSET
    [[maybe_unused]] static jint get_field_SOLD_ITEM_X_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "BUY_ITEM_X", "field_32361", "SOLD_ITEM_X_OFFSET", "f_169792_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SOLD_ITEM_X_OFFSET
    [[maybe_unused]] static void set_field_SOLD_ITEM_X_OFFSET(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "BUY_ITEM_X", "field_32361", "SOLD_ITEM_X_OFFSET", "f_169792_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#field_32362
    [[maybe_unused]] static jint get_field_field_32362() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "LABEL_Y", "field_32362", "field_32362", "f_169793_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#field_32362
    [[maybe_unused]] static void set_field_field_32362(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "LABEL_Y", "field_32362", "field_32362", "f_169793_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#MAX_TRADE_OFFERS
    [[maybe_unused]] static jint get_field_MAX_TRADE_OFFERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "NUMBER_OF_OFFER_BUTTONS", "field_32363", "MAX_TRADE_OFFERS", "f_169794_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#MAX_TRADE_OFFERS
    [[maybe_unused]] static void set_field_MAX_TRADE_OFFERS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "NUMBER_OF_OFFER_BUTTONS", "field_32363", "MAX_TRADE_OFFERS", "f_169794_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#field_32364
    [[maybe_unused]] static jint get_field_field_32364() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "TRADE_BUTTON_X", "field_32364", "field_32364", "f_169795_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#field_32364
    [[maybe_unused]] static void set_field_field_32364(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "TRADE_BUTTON_X", "field_32364", "field_32364", "f_169795_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TRADE_OFFER_BUTTON_HEIGHT
    [[maybe_unused]] static jint get_field_TRADE_OFFER_BUTTON_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "TRADE_BUTTON_HEIGHT", "field_32365", "TRADE_OFFER_BUTTON_HEIGHT", "f_169796_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TRADE_OFFER_BUTTON_HEIGHT
    [[maybe_unused]] static void set_field_TRADE_OFFER_BUTTON_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "TRADE_BUTTON_HEIGHT", "field_32365", "TRADE_OFFER_BUTTON_HEIGHT", "f_169796_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TRADE_OFFER_BUTTON_WIDTH
    [[maybe_unused]] static jint get_field_TRADE_OFFER_BUTTON_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "TRADE_BUTTON_WIDTH", "field_32366", "TRADE_OFFER_BUTTON_WIDTH", "f_169797_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TRADE_OFFER_BUTTON_WIDTH
    [[maybe_unused]] static void set_field_TRADE_OFFER_BUTTON_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "TRADE_BUTTON_WIDTH", "field_32366", "TRADE_OFFER_BUTTON_WIDTH", "f_169797_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLBAR_HEIGHT
    [[maybe_unused]] static jint get_field_SCROLLBAR_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "SCROLLER_HEIGHT", "field_32367", "SCROLLBAR_HEIGHT", "f_169798_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLBAR_HEIGHT
    [[maybe_unused]] static void set_field_SCROLLBAR_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "SCROLLER_HEIGHT", "field_32367", "SCROLLBAR_HEIGHT", "f_169798_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLBAR_WIDTH
    [[maybe_unused]] static jint get_field_SCROLLBAR_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "SCROLLER_WIDTH", "field_32368", "SCROLLBAR_WIDTH", "f_169799_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLBAR_WIDTH
    [[maybe_unused]] static void set_field_SCROLLBAR_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "SCROLLER_WIDTH", "field_32368", "SCROLLBAR_WIDTH", "f_169799_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLBAR_AREA_HEIGHT
    [[maybe_unused]] static jint get_field_SCROLLBAR_AREA_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "SCROLL_BAR_HEIGHT", "field_32369", "SCROLLBAR_AREA_HEIGHT", "f_169800_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLBAR_AREA_HEIGHT
    [[maybe_unused]] static void set_field_SCROLLBAR_AREA_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "SCROLL_BAR_HEIGHT", "field_32369", "SCROLLBAR_AREA_HEIGHT", "f_169800_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLBAR_OFFSET_Y
    [[maybe_unused]] static jint get_field_SCROLLBAR_OFFSET_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "SCROLL_BAR_TOP_POS_Y", "field_32370", "SCROLLBAR_OFFSET_Y", "f_169801_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLBAR_OFFSET_Y
    [[maybe_unused]] static void set_field_SCROLLBAR_OFFSET_Y(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "SCROLL_BAR_TOP_POS_Y", "field_32370", "SCROLLBAR_OFFSET_Y", "f_169801_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLBAR_OFFSET_X
    [[maybe_unused]] static jint get_field_SCROLLBAR_OFFSET_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "SCROLL_BAR_START_X", "field_32371", "SCROLLBAR_OFFSET_X", "f_169802_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#SCROLLBAR_OFFSET_X
    [[maybe_unused]] static void set_field_SCROLLBAR_OFFSET_X(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "SCROLL_BAR_START_X", "field_32371", "SCROLLBAR_OFFSET_X", "f_169802_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TRADES_TEXT
    [[maybe_unused]] static jobject get_field_TRADES_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "TRADES_LABEL", "field_26569", "TRADES_TEXT", "f_99114_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#TRADES_TEXT
    [[maybe_unused]] static void set_field_TRADES_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "TRADES_LABEL", "field_26569", "TRADES_TEXT", "f_99114_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#DEPRECATED_TEXT
    [[maybe_unused]] static jobject get_field_DEPRECATED_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "DEPRECATED_TOOLTIP", "field_26571", "DEPRECATED_TEXT", "f_99116_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#DEPRECATED_TEXT
    [[maybe_unused]] static void set_field_DEPRECATED_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "DEPRECATED_TOOLTIP", "field_26571", "DEPRECATED_TEXT", "f_99116_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.MerchantScreen#selectedIndex
    static jint get_field_selectedIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ai", "shopItem", "field_19161", "selectedIndex", "f_99117_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#selectedIndex
    static void set_field_selectedIndex(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ai", "shopItem", "field_19161", "selectedIndex", "f_99117_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.MerchantScreen#offers
    static jobject get_field_offers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aj", "tradeOfferButtons", "field_19162", "offers", "f_99118_"), "[Lfpz$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#offers
    static void set_field_offers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aj", "tradeOfferButtons", "field_19162", "offers", "f_99118_"), "[Lfpz$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.screen.ingame.MerchantScreen#indexStartOffset
    static jint get_field_indexStartOffset(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "scrollOff", "field_19163", "indexStartOffset", "f_99119_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.ingame.MerchantScreen#indexStartOffset
    static void set_field_indexStartOffset(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "scrollOff", "field_19163", "indexStartOffset", "f_99119_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.MerchantScreen#scrolling
    static jboolean get_field_scrolling(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("al", "isDragging", "field_19164", "scrolling", "f_99120_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.MerchantScreen#scrolling
    static void set_field_scrolling(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("al", "isDragging", "field_19164", "scrolling", "f_99120_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_syncRecipeIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "postButtonClick", "method_2496", "syncRecipeIndex", "m_99200_"), "()V");
    }

    static void syncRecipeIndex(const jobject& obj) {
                
       const auto methodID = methodID_syncRecipeIndex();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT_", "init", "method_25426", "init", "m_7856_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_drawForeground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderLabels", "method_2388", "drawForeground", "m_280003_"), "(Lfhz;II)V");
    }

    static void drawForeground(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_drawForeground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_drawBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderBg", "method_2389", "drawBackground", "m_7286_"), "(Lfhz;FII)V");
    }

    static void drawBackground(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_drawBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawLevelInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderProgressBar", "method_19413", "drawLevelInfo", "m_280298_"), "(Lfhz;IILdbu;)V");
    }

    static void drawLevelInfo(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_drawLevelInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_renderScrollbar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderScroller", "method_20221", "renderScrollbar", "m_280219_"), "(Lfhz;IILdbv;)V");
    }

    static void renderScrollbar(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_renderScrollbar();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_renderArrow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderButtonArrows", "method_20223", "renderArrow", "m_280526_"), "(Lfhz;Ldbu;II)V");
    }

    static void renderArrow(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_renderArrow();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_renderFirstBuyItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderAndDecorateCostA", "method_20222", "renderFirstBuyItem", "m_280127_"), "(Lfhz;Lcuq;Lcuq;II)V");
    }

    static void renderFirstBuyItem(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_renderFirstBuyItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_canScroll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canScroll", "method_20220", "canScroll", "m_99140_"), "(I)Z");
    }

    static jboolean canScroll(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_canScroll();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_mouseScrolled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseScrolled", "method_25401", "mouseScrolled", "m_6050_"), "(DDDD)Z");
    }

    static jboolean mouseScrolled(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
                
       const auto methodID = methodID_mouseScrolled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_mouseDragged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseDragged", "method_25403", "mouseDragged", "m_7979_"), "(DDIDD)Z");
    }

    static jboolean mouseDragged(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_mouseDragged();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_MERCHANTSCREEN_HPP