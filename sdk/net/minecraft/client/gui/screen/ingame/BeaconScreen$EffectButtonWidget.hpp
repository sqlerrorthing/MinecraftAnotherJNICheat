// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_BEACONSCREEN$EFFECTBUTTONWIDGET_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_BEACONSCREEN$EFFECTBUTTONWIDGET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.ingame.BeaconScreen$EffectButtonWidget
 * Remapped: fox$d
 */
namespace BeaconScreen$EffectButtonWidget {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fox$d", "net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton", "net/minecraft/class_466$class_469", "net/minecraft/client/gui/screen/ingame/BeaconScreen$EffectButtonWidget", "net/minecraft/src/C_3627_$C_3631_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BeaconScreen$EffectButtonWidget#primary
    static jboolean get_field_primary(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "isPrimary", "field_17416", "primary", "f_98002_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BeaconScreen$EffectButtonWidget#primary
    static void set_field_primary(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "isPrimary", "field_17416", "primary", "f_98002_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.screen.ingame.BeaconScreen$EffectButtonWidget#level
    static jint get_field_level(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "tier", "field_33833", "level", "f_169639_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.screen.ingame.BeaconScreen$EffectButtonWidget#level
    static void set_field_level(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "tier", "field_33833", "level", "f_169639_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BeaconScreen$EffectButtonWidget#effect
    static jobject get_field_effect(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "effect", "field_2813", "effect", "f_98000_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BeaconScreen$EffectButtonWidget#effect
    static void set_field_effect(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "effect", "field_2813", "effect", "f_98000_"), "Ljm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.ingame.BeaconScreen$EffectButtonWidget#sprite
    static jobject get_field_sprite(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "sprite", "field_18223", "sprite", "f_98001_"), "Lgql;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.ingame.BeaconScreen$EffectButtonWidget#sprite
    static void set_field_sprite(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "sprite", "field_18223", "sprite", "f_98001_"), "Lgql;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setEffect", "method_37081", "init", "m_169649_"), "(Ljm;)V");
    }

    static void init(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEffectName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createEffectDescription", "method_37082", "getEffectName", "m_141934_"), "(Ljm;)Lxn;");
    }

    static jobject getEffectName(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEffectName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onPress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onPress", "method_25306", "onPress", "m_5691_"), "()V");
    }

    static void onPress(const jobject& obj) {
                
       const auto methodID = methodID_onPress();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_renderExtra() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderIcon", "method_18641", "renderExtra", "m_6805_"), "(Lfhz;)V");
    }

    static void renderExtra(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_renderExtra();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateStatus", "method_37080", "tick", "m_142400_"), "(I)V");
    }

    static void tick(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNarrationMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aQ_", "createNarrationMessage", "method_25360", "getNarrationMessage", "m_5646_"), "()Lxn;");
    }

    static jobject getNarrationMessage(const jobject& obj) {
                
       const auto methodID = methodID_getNarrationMessage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_INGAME_BEACONSCREEN$EFFECTBUTTONWIDGET_HPP