// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_ADVANCEMENT_ADVANCEMENTSSCREEN_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_ADVANCEMENT_ADVANCEMENTSSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.advancement.AdvancementsScreen
 * Remapped: fon
 */
namespace AdvancementsScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fon", "net/minecraft/client/gui/screens/advancements/AdvancementsScreen", "net/minecraft/class_457", "net/minecraft/client/gui/screen/advancement/AdvancementsScreen", "net/minecraft/src/C_3609_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#WINDOW_TEXTURE
    [[maybe_unused]] static jobject get_field_WINDOW_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "WINDOW_LOCATION", "field_2717", "WINDOW_TEXTURE", "f_97329_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#WINDOW_TEXTURE
    [[maybe_unused]] static void set_field_WINDOW_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "WINDOW_LOCATION", "field_2717", "WINDOW_TEXTURE", "f_97329_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#WINDOW_WIDTH
    [[maybe_unused]] static jint get_field_WINDOW_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WINDOW_WIDTH", "field_32298", "WINDOW_WIDTH", "f_169556_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#WINDOW_WIDTH
    [[maybe_unused]] static void set_field_WINDOW_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WINDOW_WIDTH", "field_32298", "WINDOW_WIDTH", "f_169556_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#WINDOW_HEIGHT
    [[maybe_unused]] static jint get_field_WINDOW_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WINDOW_HEIGHT", "field_32299", "WINDOW_HEIGHT", "f_169557_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#WINDOW_HEIGHT
    [[maybe_unused]] static void set_field_WINDOW_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WINDOW_HEIGHT", "field_32299", "WINDOW_HEIGHT", "f_169557_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#PAGE_OFFSET_X
    [[maybe_unused]] static jint get_field_PAGE_OFFSET_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "WINDOW_INSIDE_X", "field_32306", "PAGE_OFFSET_X", "f_169564_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#PAGE_OFFSET_X
    [[maybe_unused]] static void set_field_PAGE_OFFSET_X(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "WINDOW_INSIDE_X", "field_32306", "PAGE_OFFSET_X", "f_169564_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#PAGE_OFFSET_Y
    [[maybe_unused]] static jint get_field_PAGE_OFFSET_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "WINDOW_INSIDE_Y", "field_32307", "PAGE_OFFSET_Y", "f_169565_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#PAGE_OFFSET_Y
    [[maybe_unused]] static void set_field_PAGE_OFFSET_Y(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "WINDOW_INSIDE_Y", "field_32307", "PAGE_OFFSET_Y", "f_169565_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#PAGE_WIDTH
    [[maybe_unused]] static jint get_field_PAGE_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WINDOW_INSIDE_WIDTH", "field_32300", "PAGE_WIDTH", "f_169558_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#PAGE_WIDTH
    [[maybe_unused]] static void set_field_PAGE_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WINDOW_INSIDE_WIDTH", "field_32300", "PAGE_WIDTH", "f_169558_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#PAGE_HEIGHT
    [[maybe_unused]] static jint get_field_PAGE_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "WINDOW_INSIDE_HEIGHT", "field_32301", "PAGE_HEIGHT", "f_169559_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#PAGE_HEIGHT
    [[maybe_unused]] static void set_field_PAGE_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "WINDOW_INSIDE_HEIGHT", "field_32301", "PAGE_HEIGHT", "f_169559_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#TITLE_OFFSET_X
    [[maybe_unused]] static jint get_field_TITLE_OFFSET_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "WINDOW_TITLE_X", "field_32308", "TITLE_OFFSET_X", "f_169566_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#TITLE_OFFSET_X
    [[maybe_unused]] static void set_field_TITLE_OFFSET_X(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "WINDOW_TITLE_X", "field_32308", "TITLE_OFFSET_X", "f_169566_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#TITLE_OFFSET_Y
    [[maybe_unused]] static jint get_field_TITLE_OFFSET_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "WINDOW_TITLE_Y", "field_32309", "TITLE_OFFSET_Y", "f_169567_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#TITLE_OFFSET_Y
    [[maybe_unused]] static void set_field_TITLE_OFFSET_Y(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "WINDOW_TITLE_Y", "field_32309", "TITLE_OFFSET_Y", "f_169567_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#field_32302
    [[maybe_unused]] static jint get_field_field_32302() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BACKGROUND_TILE_WIDTH", "field_32302", "field_32302", "f_169560_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#field_32302
    [[maybe_unused]] static void set_field_field_32302(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BACKGROUND_TILE_WIDTH", "field_32302", "field_32302", "f_169560_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#field_32303
    [[maybe_unused]] static jint get_field_field_32303() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BACKGROUND_TILE_HEIGHT", "field_32303", "field_32303", "f_169561_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#field_32303
    [[maybe_unused]] static void set_field_field_32303(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BACKGROUND_TILE_HEIGHT", "field_32303", "field_32303", "f_169561_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#field_32304
    [[maybe_unused]] static jint get_field_field_32304() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "BACKGROUND_TILE_COUNT_X", "field_32304", "field_32304", "f_169562_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#field_32304
    [[maybe_unused]] static void set_field_field_32304(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "BACKGROUND_TILE_COUNT_X", "field_32304", "field_32304", "f_169562_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#field_32305
    [[maybe_unused]] static jint get_field_field_32305() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "BACKGROUND_TILE_COUNT_Y", "field_32305", "field_32305", "f_169563_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#field_32305
    [[maybe_unused]] static void set_field_field_32305(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "BACKGROUND_TILE_COUNT_Y", "field_32305", "field_32305", "f_169563_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#field_45431
    [[maybe_unused]] static jdouble get_field_field_45431() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "SCROLL_SPEED", "field_45431", "field_45431", "f_291493_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#field_45431
    [[maybe_unused]] static void set_field_field_45431(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "SCROLL_SPEED", "field_45431", "field_45431", "f_291493_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#SAD_LABEL_TEXT
    [[maybe_unused]] static jobject get_field_SAD_LABEL_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "VERY_SAD_LABEL", "field_26553", "SAD_LABEL_TEXT", "f_97331_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#SAD_LABEL_TEXT
    [[maybe_unused]] static void set_field_SAD_LABEL_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "VERY_SAD_LABEL", "field_26553", "SAD_LABEL_TEXT", "f_97331_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#EMPTY_TEXT
    [[maybe_unused]] static jobject get_field_EMPTY_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "NO_ADVANCEMENTS_LABEL", "field_26554", "EMPTY_TEXT", "f_97332_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#EMPTY_TEXT
    [[maybe_unused]] static void set_field_EMPTY_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "NO_ADVANCEMENTS_LABEL", "field_26554", "EMPTY_TEXT", "f_97332_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#ADVANCEMENTS_TEXT
    [[maybe_unused]] static jobject get_field_ADVANCEMENTS_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "TITLE", "field_26555", "ADVANCEMENTS_TEXT", "f_97333_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#ADVANCEMENTS_TEXT
    [[maybe_unused]] static void set_field_ADVANCEMENTS_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "TITLE", "field_26555", "ADVANCEMENTS_TEXT", "f_97333_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#layout
    static jobject get_field_layout(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "layout", "field_49530", "layout", "f_314567_"), "Lflz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#layout
    static void set_field_layout(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "layout", "field_49530", "layout", "f_314567_"), "Lflz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#parent
    static jobject get_field_parent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "lastScreen", "field_49531", "parent", "f_314594_"), "Lfod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#parent
    static void set_field_parent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "lastScreen", "field_49531", "parent", "f_314594_"), "Lfod;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#advancementHandler
    static jobject get_field_advancementHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "advancements", "field_2721", "advancementHandler", "f_97334_"), "Lfza;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#advancementHandler
    static void set_field_advancementHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "advancements", "field_2721", "advancementHandler", "f_97334_"), "Lfza;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#tabs
    static jobject get_field_tabs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "tabs", "field_2719", "tabs", "f_97335_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#tabs
    static void set_field_tabs(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "tabs", "field_2719", "tabs", "f_97335_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#selectedTab
    static jobject get_field_selectedTab(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "selectedTab", "field_2720", "selectedTab", "f_97336_"), "Lfoj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#selectedTab
    static void set_field_selectedTab(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "selectedTab", "field_2720", "selectedTab", "f_97336_"), "Lfoj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#movingTab
    static jboolean get_field_movingTab(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "isScrolling", "field_2718", "movingTab", "f_97337_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementsScreen#movingTab
    static void set_field_movingTab(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "isScrolling", "field_2718", "movingTab", "f_97337_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT_", "init", "method_25426", "init", "m_7856_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_initTabNavigation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "repositionElements", "method_48640", "initTabNavigation", "m_267719_"), "()V");
    }

    static void initTabNavigation(const jobject& obj) {
                
       const auto methodID = methodID_initTabNavigation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "onClose", "method_25419", "close", "m_7379_"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_removed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "removed", "method_25432", "removed", "m_7861_"), "()V");
    }

    static void removed(const jobject& obj) {
                
       const auto methodID = methodID_removed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_keyPressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "keyPressed", "method_25404", "keyPressed", "m_7933_"), "(III)Z");
    }

    static jboolean keyPressed(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_keyPressed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_mouseDragged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseDragged", "method_25403", "mouseDragged", "m_7979_"), "(DDIDD)Z");
    }

    static jboolean mouseDragged(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_mouseDragged();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_mouseScrolled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseScrolled", "method_25401", "mouseScrolled", "m_6050_"), "(DDDD)Z");
    }

    static jboolean mouseScrolled(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
                
       const auto methodID = methodID_mouseScrolled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawAdvancementTree() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderInside", "method_2337", "drawAdvancementTree", "m_97373_"), "(Lfhz;IIII)V");
    }

    static void drawAdvancementTree(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_drawAdvancementTree();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_drawWindow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderWindow", "method_2334", "drawWindow", "m_280088_"), "(Lfhz;II)V");
    }

    static void drawWindow(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_drawWindow();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_drawWidgetTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "renderTooltips", "method_2338", "drawWidgetTooltip", "m_280355_"), "(Lfhz;IIII)V");
    }

    static void drawWidgetTooltip(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_drawWidgetTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_onRootAdded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onAddAdvancementRoot", "method_723", "onRootAdded", "m_97365_"), "(Lah;)V");
    }

    static void onRootAdded(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onRootAdded();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onRootRemoved() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onRemoveAdvancementRoot", "method_720", "onRootRemoved", "m_97371_"), "(Lah;)V");
    }

    static void onRootRemoved(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onRootRemoved();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onDependentAdded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "onAddAdvancementTask", "method_721", "onDependentAdded", "m_97379_"), "(Lah;)V");
    }

    static void onDependentAdded(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDependentAdded();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onDependentRemoved() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "onRemoveAdvancementTask", "method_719", "onDependentRemoved", "m_97387_"), "(Lah;)V");
    }

    static void onDependentRemoved(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDependentRemoved();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onUpdateAdvancementProgress", "method_2865", "setProgress", "m_7922_"), "(Lah;Lai;)V");
    }

    static void setProgress(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setProgress();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_selectTab() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onSelectedTabChanged", "method_2866", "selectTab", "m_6896_"), "(Lag;)V");
    }

    static void selectTab(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_selectTab();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onClear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onAdvancementsCleared", "method_722", "onClear", "m_97341_"), "()V");
    }

    static void onClear(const jobject& obj) {
                
       const auto methodID = methodID_onClear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAdvancementWidget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getAdvancementWidget", "method_2335", "getAdvancementWidget", "m_97392_"), "(Lah;)Lfol;");
    }

    static jobject getAdvancementWidget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAdvancementWidget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTab() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getTab", "method_2336", "getTab", "m_97394_"), "(Lah;)Lfoj;");
    }

    static jobject getTab(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTab();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_ADVANCEMENT_ADVANCEMENTSSCREEN_HPP