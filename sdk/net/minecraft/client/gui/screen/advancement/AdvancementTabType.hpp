// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_ADVANCEMENT_ADVANCEMENTTABTYPE_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_ADVANCEMENT_ADVANCEMENTTABTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.advancement.AdvancementTabType
 * Remapped: fok
 */
namespace AdvancementTabType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fok", "net/minecraft/client/gui/screens/advancements/AdvancementTabType", "net/minecraft/class_453", "net/minecraft/client/gui/screen/advancement/AdvancementTabType", "net/minecraft/src/C_3605_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.gui.screen.advancement.AdvancementTabType#ABOVE
    [[maybe_unused]] static jobject get_field_ABOVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ABOVE", "field_2678", "ABOVE", "ABOVE"), "Lfok;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.advancement.AdvancementTabType#ABOVE
    [[maybe_unused]] static void set_field_ABOVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ABOVE", "field_2678", "ABOVE", "ABOVE"), "Lfok;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.advancement.AdvancementTabType#BELOW
    [[maybe_unused]] static jobject get_field_BELOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BELOW", "field_2673", "BELOW", "BELOW"), "Lfok;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.advancement.AdvancementTabType#BELOW
    [[maybe_unused]] static void set_field_BELOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BELOW", "field_2673", "BELOW", "BELOW"), "Lfok;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.advancement.AdvancementTabType#LEFT
    [[maybe_unused]] static jobject get_field_LEFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LEFT", "field_2675", "LEFT", "LEFT"), "Lfok;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.advancement.AdvancementTabType#LEFT
    [[maybe_unused]] static void set_field_LEFT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LEFT", "field_2675", "LEFT", "LEFT"), "Lfok;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.advancement.AdvancementTabType#RIGHT
    [[maybe_unused]] static jobject get_field_RIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RIGHT", "field_2677", "RIGHT", "RIGHT"), "Lfok;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.advancement.AdvancementTabType#RIGHT
    [[maybe_unused]] static void set_field_RIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RIGHT", "field_2677", "RIGHT", "RIGHT"), "Lfok;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.advancement.AdvancementTabType#selectedTextures
    static jobject get_field_selectedTextures(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "selectedSprites", "field_45423", "selectedTextures", "f_291110_"), "Lfok$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementTabType#selectedTextures
    static void set_field_selectedTextures(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "selectedSprites", "field_45423", "selectedTextures", "f_291110_"), "Lfok$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.advancement.AdvancementTabType#unselectedTextures
    static jobject get_field_unselectedTextures(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "unselectedSprites", "field_45424", "unselectedTextures", "f_291777_"), "Lfok$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementTabType#unselectedTextures
    static void set_field_unselectedTextures(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "unselectedSprites", "field_45424", "unselectedTextures", "f_291777_"), "Lfok$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.advancement.AdvancementTabType#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "width", "field_2671", "width", "f_97197_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementTabType#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "width", "field_2671", "width", "f_97197_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.advancement.AdvancementTabType#height
    static jint get_field_height(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "height", "field_2670", "height", "f_97198_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementTabType#height
    static void set_field_height(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "height", "field_2670", "height", "f_97198_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.advancement.AdvancementTabType#tabCount
    static jint get_field_tabCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "max", "field_2669", "tabCount", "f_97199_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.advancement.AdvancementTabType#tabCount
    static void set_field_tabCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "max", "field_2669", "tabCount", "f_97199_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lfok;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lfok;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTabCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMax", "method_2304", "getTabCount", "m_97210_"), "()I");
    }

    static jint getTabCount(const jobject& obj) {
                
       const auto methodID = methodID_getTabCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_drawBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "draw", "method_2301", "drawBackground", "m_280111_"), "(Lfhz;IIZI)V");
    }

    static void drawBackground(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jboolean& arg3, const jint& arg4) {
                
       const auto methodID = methodID_drawBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_drawIcon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "drawIcon", "method_2306", "drawIcon", "m_280639_"), "(Lfhz;IIILcuq;)V");
    }

    static void drawIcon(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_drawIcon();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getTabX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getX", "method_2302", "getTabX", "m_97211_"), "(I)I");
    }

    static jint getTabX(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getTabX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTabY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getY", "method_2305", "getTabY", "m_97232_"), "(I)I");
    }

    static jint getTabY(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getTabY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isClickOnTab() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isMouseOver", "method_2303", "isClickOnTab", "m_97213_"), "(IIIDD)Z");
    }

    static jboolean isClickOnTab(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_isClickOnTab();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_ADVANCEMENT_ADVANCEMENTTABTYPE_HPP