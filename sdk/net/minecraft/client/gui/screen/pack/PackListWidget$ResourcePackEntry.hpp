// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_PACK_PACKLISTWIDGET$RESOURCEPACKENTRY_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_PACK_PACKLISTWIDGET$RESOURCEPACKENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry
 * Remapped: fru$a
 */
namespace PackListWidget$ResourcePackEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fru$a", "net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry", "net/minecraft/class_521$class_4271", "net/minecraft/client/gui/screen/pack/PackListWidget$ResourcePackEntry", "net/minecraft/src/C_3708_$C_3709_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#field_32403
    [[maybe_unused]] static jint get_field_field_32403() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_DESCRIPTION_WIDTH_PIXELS", "field_32403", "field_32403", "f_170032_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#field_32403
    [[maybe_unused]] static void set_field_field_32403(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_DESCRIPTION_WIDTH_PIXELS", "field_32403", "field_32403", "f_170032_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#field_32404
    [[maybe_unused]] static jint get_field_field_32404() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_NAME_WIDTH_PIXELS", "field_32404", "field_32404", "f_170033_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#field_32404
    [[maybe_unused]] static void set_field_field_32404(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_NAME_WIDTH_PIXELS", "field_32404", "field_32404", "f_170033_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#ELLIPSIS
    [[maybe_unused]] static jobject get_field_ELLIPSIS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TOO_LONG_NAME_SUFFIX", "field_32405", "ELLIPSIS", "f_170034_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#ELLIPSIS
    [[maybe_unused]] static void set_field_ELLIPSIS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TOO_LONG_NAME_SUFFIX", "field_32405", "ELLIPSIS", "f_170034_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#widget
    static jobject get_field_widget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "parent", "field_19130", "widget", "f_100077_"), "Lfru;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#widget
    static void set_field_widget(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "parent", "field_19130", "widget", "f_100077_"), "Lfru;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "minecraft", "field_19128", "client", "f_100075_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "minecraft", "field_19128", "client", "f_100075_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#pack
    static jobject get_field_pack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "pack", "field_19129", "pack", "f_100078_"), "Lfrs$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#pack
    static void set_field_pack(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "pack", "field_19129", "pack", "f_100078_"), "Lfrs$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#displayName
    static jobject get_field_displayName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "nameDisplayCache", "field_26590", "displayName", "f_100079_"), "Laya;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#displayName
    static void set_field_displayName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "nameDisplayCache", "field_26590", "displayName", "f_100079_"), "Laya;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#description
    static jobject get_field_description(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "descriptionDisplayCache", "field_26591", "description", "f_100080_"), "Lfjf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#description
    static void set_field_description(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "descriptionDisplayCache", "field_26591", "description", "f_100080_"), "Lfjf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#incompatibleText
    static jobject get_field_incompatibleText(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "incompatibleNameDisplayCache", "field_26784", "incompatibleText", "f_100081_"), "Laya;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#incompatibleText
    static void set_field_incompatibleText(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "incompatibleNameDisplayCache", "field_26784", "incompatibleText", "f_100081_"), "Laya;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#compatibilityNotificationText
    static jobject get_field_compatibilityNotificationText(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "incompatibleDescriptionDisplayCache", "field_26785", "compatibilityNotificationText", "f_100082_"), "Lfjf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.pack.PackListWidget$ResourcePackEntry#compatibilityNotificationText
    static void set_field_compatibilityNotificationText(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "incompatibleDescriptionDisplayCache", "field_26785", "compatibilityNotificationText", "f_100082_"), "Lfjf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_trimTextToWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "cacheName", "method_31229", "trimTextToWidth", "m_100104_"), "(Lfgo;Lwz;)Laya;");
    }

    static jobject trimTextToWidth(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_trimTextToWidth();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createMultilineText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "cacheDescription", "method_31230", "createMultilineText", "m_100109_"), "(Lfgo;Lwz;)Lfjf;");
    }

    static jobject createMultilineText(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createMultilineText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getNarration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getNarration", "method_37006", "getNarration", "m_142172_"), "()Lwz;");
    }

    static jobject getNarration(const jobject& obj) {
                
       const auto methodID = methodID_getNarration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25343", "render", "m_6311_"), "(Lfhz;IIIIIIIZF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jboolean& arg8, const jfloat& arg9) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getPackId", "method_48279", "getName", "m_264411_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSelectable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "showHoverOverlay", "method_20152", "isSelectable", "m_100088_"), "()Z");
    }

    static jboolean isSelectable(const jobject& obj) {
                
       const auto methodID = methodID_isSelectable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_toggle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "keyboardSelection", "method_48280", "toggle", "m_264233_"), "()V");
    }

    static void toggle(const jobject& obj) {
                
       const auto methodID = methodID_toggle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_moveTowardStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "keyboardMoveUp", "method_48281", "moveTowardStart", "m_264048_"), "()V");
    }

    static void moveTowardStart(const jobject& obj) {
                
       const auto methodID = methodID_moveTowardStart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_moveTowardEnd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "keyboardMoveDown", "method_48282", "moveTowardEnd", "m_264565_"), "()V");
    }

    static void moveTowardEnd(const jobject& obj) {
                
       const auto methodID = methodID_moveTowardEnd();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_enable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "handlePackSelection", "method_48478", "enable", "m_266298_"), "()Z");
    }

    static jboolean enable(const jobject& obj) {
                
       const auto methodID = methodID_enable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_PACK_PACKLISTWIDGET$RESOURCEPACKENTRY_HPP