// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_PACK_RESOURCEPACKORGANIZER$ABSTRACTPACK_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_PACK_RESOURCEPACKORGANIZER$ABSTRACTPACK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.pack.ResourcePackOrganizer$AbstractPack
 * Remapped: frs$b
 */
namespace ResourcePackOrganizer$AbstractPack {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("frs$b", "net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase", "net/minecraft/class_5369$class_5372", "net/minecraft/client/gui/screen/pack/ResourcePackOrganizer$AbstractPack", "net/minecraft/src/C_3701_$C_3703_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.gui.screen.pack.ResourcePackOrganizer$AbstractPack#profile
    static jobject get_field_profile(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "pack", "field_25461", "profile", "f_99933_"), "Latm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.pack.ResourcePackOrganizer$AbstractPack#profile
    static void set_field_profile(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "pack", "field_25461", "profile", "f_99933_"), "Latm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getCurrentList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getSelfList", "method_29666", "getCurrentList", "m_6956_"), "()Ljava/util/List;");
    }

    static jobject getCurrentList(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOppositeList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getOtherList", "method_29667", "getOppositeList", "m_6958_"), "()Ljava/util/List;");
    }

    static jobject getOppositeList(const jobject& obj) {
                
       const auto methodID = methodID_getOppositeList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getIconId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getIconTexture", "method_30286", "getIconId", "m_6876_"), "()Lakr;");
    }

    static jobject getIconId(const jobject& obj) {
                
       const auto methodID = methodID_getIconId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCompatibility() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getCompatibility", "method_29648", "getCompatibility", "m_7709_"), "()Latn;");
    }

    static jobject getCompatibility(const jobject& obj) {
                
       const auto methodID = methodID_getCompatibility();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getId", "method_48276", "getName", "m_264249_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDisplayName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getTitle", "method_29650", "getDisplayName", "m_7356_"), "()Lwz;");
    }

    static jobject getDisplayName(const jobject& obj) {
                
       const auto methodID = methodID_getDisplayName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDescription() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDescription", "method_29651", "getDescription", "m_7359_"), "()Lwz;");
    }

    static jobject getDescription(const jobject& obj) {
                
       const auto methodID = methodID_getDescription();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getPackSource", "method_29652", "getSource", "m_7485_"), "()Latq;");
    }

    static jobject getSource(const jobject& obj) {
                
       const auto methodID = methodID_getSource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPinned() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "isFixedPosition", "method_29654", "isPinned", "m_7867_"), "()Z");
    }

    static jboolean isPinned(const jobject& obj) {
                
       const auto methodID = methodID_isPinned();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAlwaysEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isRequired", "method_29655", "isAlwaysEnabled", "m_7844_"), "()Z");
    }

    static jboolean isAlwaysEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isAlwaysEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_toggle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "toggleSelection", "method_29668", "toggle", "m_99950_"), "()V");
    }

    static void toggle(const jobject& obj) {
                
       const auto methodID = methodID_toggle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_toggleHighContrastOption() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "updateHighContrastOptionInstance", "method_49628", "toggleHighContrastOption", "m_274458_"), "()V");
    }

    static void toggleHighContrastOption(const jobject& obj) {
                
       const auto methodID = methodID_toggleHighContrastOption();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_move() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "move", "method_29665", "move", "m_99938_"), "(I)V");
    }

    static void move(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_move();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canMoveTowardStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "canMoveUp", "method_29663", "canMoveTowardStart", "m_7802_"), "()Z");
    }

    static jboolean canMoveTowardStart(const jobject& obj) {
                
       const auto methodID = methodID_canMoveTowardStart();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_moveTowardStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "moveUp", "method_29658", "moveTowardStart", "m_7852_"), "()V");
    }

    static void moveTowardStart(const jobject& obj) {
                
       const auto methodID = methodID_moveTowardStart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canMoveTowardEnd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "canMoveDown", "method_29664", "canMoveTowardEnd", "m_7803_"), "()Z");
    }

    static jboolean canMoveTowardEnd(const jobject& obj) {
                
       const auto methodID = methodID_canMoveTowardEnd();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_moveTowardEnd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "moveDown", "method_29659", "moveTowardEnd", "m_7845_"), "()V");
    }

    static void moveTowardEnd(const jobject& obj) {
                
       const auto methodID = methodID_moveTowardEnd();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_PACK_RESOURCEPACKORGANIZER$ABSTRACTPACK_HPP