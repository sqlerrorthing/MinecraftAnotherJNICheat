// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_SPLASHOVERLAY_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_SPLASHOVERLAY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.SplashOverlay
 * Remapped: fnt
 */
namespace SplashOverlay {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fnt", "net/minecraft/client/gui/screens/LoadingOverlay", "net/minecraft/class_425", "net/minecraft/client/gui/screen/SplashOverlay", "net/minecraft/src/C_3565_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.client.gui.screen.SplashOverlay#LOGO
    [[maybe_unused]] static jobject get_field_LOGO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MOJANG_STUDIOS_LOGO_LOCATION", "field_2483", "LOGO", "f_96160_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.screen.SplashOverlay#LOGO
    [[maybe_unused]] static void set_field_LOGO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MOJANG_STUDIOS_LOGO_LOCATION", "field_2483", "LOGO", "f_96160_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.SplashOverlay#MOJANG_RED
    [[maybe_unused]] static jint get_field_MOJANG_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LOGO_BACKGROUND_COLOR", "field_32249", "MOJANG_RED", "f_169316_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#MOJANG_RED
    [[maybe_unused]] static void set_field_MOJANG_RED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LOGO_BACKGROUND_COLOR", "field_32249", "MOJANG_RED", "f_169316_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.SplashOverlay#MONOCHROME_BLACK
    [[maybe_unused]] static jint get_field_MONOCHROME_BLACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LOGO_BACKGROUND_COLOR_DARK", "field_32250", "MONOCHROME_BLACK", "f_169317_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#MONOCHROME_BLACK
    [[maybe_unused]] static void set_field_MONOCHROME_BLACK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LOGO_BACKGROUND_COLOR_DARK", "field_32250", "MONOCHROME_BLACK", "f_169317_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.SplashOverlay#BRAND_ARGB
    [[maybe_unused]] static jobject get_field_BRAND_ARGB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "BRAND_BACKGROUND", "field_25041", "BRAND_ARGB", "f_96161_"), "Ljava/util/function/IntSupplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#BRAND_ARGB
    [[maybe_unused]] static void set_field_BRAND_ARGB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "BRAND_BACKGROUND", "field_25041", "BRAND_ARGB", "f_96161_"), "Ljava/util/function/IntSupplier;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.SplashOverlay#field_32251
    [[maybe_unused]] static jint get_field_field_32251() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "LOGO_SCALE", "field_32251", "field_32251", "f_169318_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#field_32251
    [[maybe_unused]] static void set_field_field_32251(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "LOGO_SCALE", "field_32251", "field_32251", "f_169318_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.SplashOverlay#LOGO_RIGHT_HALF_V
    [[maybe_unused]] static jfloat get_field_LOGO_RIGHT_HALF_V() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "LOGO_QUARTER_FLOAT", "field_32252", "LOGO_RIGHT_HALF_V", "f_169319_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#LOGO_RIGHT_HALF_V
    [[maybe_unused]] static void set_field_LOGO_RIGHT_HALF_V(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "LOGO_QUARTER_FLOAT", "field_32252", "LOGO_RIGHT_HALF_V", "f_169319_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.SplashOverlay#field_32253
    [[maybe_unused]] static jint get_field_field_32253() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "LOGO_QUARTER", "field_32253", "field_32253", "f_169320_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#field_32253
    [[maybe_unused]] static void set_field_field_32253(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "LOGO_QUARTER", "field_32253", "field_32253", "f_169320_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.SplashOverlay#field_32254
    [[maybe_unused]] static jint get_field_field_32254() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "LOGO_HALF", "field_32254", "field_32254", "f_169321_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#field_32254
    [[maybe_unused]] static void set_field_field_32254(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "LOGO_HALF", "field_32254", "field_32254", "f_169321_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.SplashOverlay#LOGO_OVERLAP
    [[maybe_unused]] static jfloat get_field_LOGO_OVERLAP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LOGO_OVERLAP", "field_32255", "LOGO_OVERLAP", "f_169322_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#LOGO_OVERLAP
    [[maybe_unused]] static void set_field_LOGO_OVERLAP(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LOGO_OVERLAP", "field_32255", "LOGO_OVERLAP", "f_169322_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.SplashOverlay#PROGRESS_LERP_DELTA
    [[maybe_unused]] static jfloat get_field_PROGRESS_LERP_DELTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SMOOTHING", "field_32256", "PROGRESS_LERP_DELTA", "f_169323_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#PROGRESS_LERP_DELTA
    [[maybe_unused]] static void set_field_PROGRESS_LERP_DELTA(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SMOOTHING", "field_32256", "PROGRESS_LERP_DELTA", "f_169323_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.SplashOverlay#RELOAD_COMPLETE_FADE_DURATION
    [[maybe_unused]] static jlong get_field_RELOAD_COMPLETE_FADE_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FADE_OUT_TIME", "field_32247", "RELOAD_COMPLETE_FADE_DURATION", "f_169314_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.SplashOverlay#RELOAD_COMPLETE_FADE_DURATION
    [[maybe_unused]] static void set_field_RELOAD_COMPLETE_FADE_DURATION(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FADE_OUT_TIME", "field_32247", "RELOAD_COMPLETE_FADE_DURATION", "f_169314_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.SplashOverlay#RELOAD_START_FADE_DURATION
    [[maybe_unused]] static jlong get_field_RELOAD_START_FADE_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FADE_IN_TIME", "field_32248", "RELOAD_START_FADE_DURATION", "f_169315_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.SplashOverlay#RELOAD_START_FADE_DURATION
    [[maybe_unused]] static void set_field_RELOAD_START_FADE_DURATION(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FADE_IN_TIME", "field_32248", "RELOAD_START_FADE_DURATION", "f_169315_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.SplashOverlay#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "minecraft", "field_18217", "client", "f_96163_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "minecraft", "field_18217", "client", "f_96163_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.SplashOverlay#reload
    static jobject get_field_reload(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "reload", "field_17767", "reload", "f_96164_"), "Laua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#reload
    static void set_field_reload(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "reload", "field_17767", "reload", "f_96164_"), "Laua;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.SplashOverlay#exceptionHandler
    static jobject get_field_exceptionHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "onFinish", "field_18218", "exceptionHandler", "f_96165_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#exceptionHandler
    static void set_field_exceptionHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "onFinish", "field_18218", "exceptionHandler", "f_96165_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.SplashOverlay#reloading
    static jboolean get_field_reloading(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "fadeIn", "field_18219", "reloading", "f_96166_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#reloading
    static void set_field_reloading(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "fadeIn", "field_18219", "reloading", "f_96166_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.SplashOverlay#progress
    static jfloat get_field_progress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "currentProgress", "field_17770", "progress", "f_96167_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#progress
    static void set_field_progress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "currentProgress", "field_17770", "progress", "f_96167_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.SplashOverlay#reloadCompleteTime
    static jlong get_field_reloadCompleteTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "fadeOutStart", "field_17771", "reloadCompleteTime", "f_96168_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#reloadCompleteTime
    static void set_field_reloadCompleteTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "fadeOutStart", "field_17771", "reloadCompleteTime", "f_96168_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.SplashOverlay#reloadStartTime
    static jlong get_field_reloadStartTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "fadeInStart", "field_18220", "reloadStartTime", "f_96169_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.SplashOverlay#reloadStartTime
    static void set_field_reloadStartTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "fadeInStart", "field_18220", "reloadStartTime", "f_96169_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "registerTextures", "method_18819", "init", "m_96189_"), "(Lfgo;)V");
    }

    static void init(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_withAlpha() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "replaceAlpha", "method_35732", "withAlpha", "m_169324_"), "(II)I");
    }

    static jint withAlpha(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_withAlpha();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_renderProgressBar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "drawProgressBar", "method_18103", "renderProgressBar", "m_96182_"), "(Lfhz;IIIIF)V");
    }

    static void renderProgressBar(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID_renderProgressBar();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_pausesGame() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isPauseScreen", "method_18640", "pausesGame", "m_7859_"), "()Z");
    }

    static jboolean pausesGame(const jobject& obj) {
                
       const auto methodID = methodID_pausesGame();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_SPLASHOVERLAY_HPP