// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_MULTIPLAYER_SOCIALINTERACTIONSPLAYERLISTENTRY_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_MULTIPLAYER_SOCIALINTERACTIONSPLAYERLISTENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry
 * Remapped: fst
 */
namespace SocialInteractionsPlayerListEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fst", "net/minecraft/client/gui/screens/social/PlayerEntry", "net/minecraft/class_5519", "net/minecraft/client/gui/screen/multiplayer/SocialInteractionsPlayerListEntry", "net/minecraft/src/C_3727_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#DRAFT_REPORT_ICON_TEXTURE
    [[maybe_unused]] static jobject get_field_DRAFT_REPORT_ICON_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DRAFT_REPORT_SPRITE", "field_45560", "DRAFT_REPORT_ICON_TEXTURE", "f_290813_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#DRAFT_REPORT_ICON_TEXTURE
    [[maybe_unused]] static void set_field_DRAFT_REPORT_ICON_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DRAFT_REPORT_SPRITE", "field_45560", "DRAFT_REPORT_ICON_TEXTURE", "f_290813_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#TOOLTIP_DELAY
    [[maybe_unused]] static jobject get_field_TOOLTIP_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "TOOLTIP_DELAY", "field_32418", "TOOLTIP_DELAY", "f_170065_"), "Ljava/time/Duration;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#TOOLTIP_DELAY
    [[maybe_unused]] static void set_field_TOOLTIP_DELAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "TOOLTIP_DELAY", "field_32418", "TOOLTIP_DELAY", "f_170065_"), "Ljava/time/Duration;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#REPORT_BUTTON_TEXTURES
    [[maybe_unused]] static jobject get_field_REPORT_BUTTON_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "REPORT_BUTTON_SPRITES", "field_45561", "REPORT_BUTTON_TEXTURES", "f_291144_"), "Lfjz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#REPORT_BUTTON_TEXTURES
    [[maybe_unused]] static void set_field_REPORT_BUTTON_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "REPORT_BUTTON_SPRITES", "field_45561", "REPORT_BUTTON_TEXTURES", "f_291144_"), "Lfjz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#MUTE_BUTTON_TEXTURES
    [[maybe_unused]] static jobject get_field_MUTE_BUTTON_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MUTE_BUTTON_SPRITES", "field_45562", "MUTE_BUTTON_TEXTURES", "f_290914_"), "Lfjz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#MUTE_BUTTON_TEXTURES
    [[maybe_unused]] static void set_field_MUTE_BUTTON_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MUTE_BUTTON_SPRITES", "field_45562", "MUTE_BUTTON_TEXTURES", "f_290914_"), "Lfjz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#UNMUTE_BUTTON_TEXTURES
    [[maybe_unused]] static jobject get_field_UNMUTE_BUTTON_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "UNMUTE_BUTTON_SPRITES", "field_45563", "UNMUTE_BUTTON_TEXTURES", "f_290432_"), "Lfjz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#UNMUTE_BUTTON_TEXTURES
    [[maybe_unused]] static void set_field_UNMUTE_BUTTON_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "UNMUTE_BUTTON_SPRITES", "field_45563", "UNMUTE_BUTTON_TEXTURES", "f_290432_"), "Lfjz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "minecraft", "field_26854", "client", "f_100534_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "minecraft", "field_26854", "client", "f_100534_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#buttons
    static jobject get_field_buttons(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "children", "field_26855", "buttons", "f_100535_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#buttons
    static void set_field_buttons(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "children", "field_26855", "buttons", "f_100535_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#uuid
    static jobject get_field_uuid(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "id", "field_26856", "uuid", "f_100536_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#uuid
    static void set_field_uuid(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "id", "field_26856", "uuid", "f_100536_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "playerName", "field_26857", "name", "f_100537_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "playerName", "field_26857", "name", "f_100537_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#skinSupplier
    static jobject get_field_skinSupplier(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "skinGetter", "field_26904", "skinSupplier", "f_100538_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#skinSupplier
    static void set_field_skinSupplier(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "skinGetter", "field_26904", "skinSupplier", "f_100538_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#offline
    static jboolean get_field_offline(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "isRemoved", "field_26859", "offline", "f_100539_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#offline
    static void set_field_offline(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "isRemoved", "field_26859", "offline", "f_100539_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#sentMessage
    static jboolean get_field_sentMessage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "hasRecentMessages", "field_39790", "sentMessage", "f_240676_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#sentMessage
    static void set_field_sentMessage(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "hasRecentMessages", "field_39790", "sentMessage", "f_240676_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#canSendReports
    static jboolean get_field_canSendReports(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "reportingEnabled", "field_39791", "canSendReports", "f_240670_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#canSendReports
    static void set_field_canSendReports(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "reportingEnabled", "field_39791", "canSendReports", "f_240670_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#hasDraftReport
    static jboolean get_field_hasDraftReport(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "hasDraftReport", "field_40796", "hasDraftReport", "f_252399_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#hasDraftReport
    static void set_field_hasDraftReport(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "hasDraftReport", "field_40796", "hasDraftReport", "f_252399_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#reportable
    static jboolean get_field_reportable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "chatReportable", "field_39937", "reportable", "f_290377_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#reportable
    static void set_field_reportable(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "chatReportable", "field_39937", "reportable", "f_290377_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#hideButton
    static jobject get_field_hideButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "hideButton", "field_26860", "hideButton", "f_100540_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#hideButton
    static void set_field_hideButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "hideButton", "field_26860", "hideButton", "f_100540_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#showButton
    static jobject get_field_showButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "showButton", "field_26861", "showButton", "f_100541_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#showButton
    static void set_field_showButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "showButton", "field_26861", "showButton", "f_100541_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#reportButton
    static jobject get_field_reportButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "reportButton", "field_39622", "reportButton", "f_238614_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#reportButton
    static void set_field_reportButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "reportButton", "field_39622", "reportButton", "f_238614_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#timeCounter
    static jfloat get_field_timeCounter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "tooltipHoverTime", "field_26864", "timeCounter", "f_100544_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#timeCounter
    static void set_field_timeCounter(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "tooltipHoverTime", "field_26864", "timeCounter", "f_100544_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#HIDDEN_TEXT
    [[maybe_unused]] static jobject get_field_HIDDEN_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "HIDDEN", "field_26905", "HIDDEN_TEXT", "f_100545_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#HIDDEN_TEXT
    [[maybe_unused]] static void set_field_HIDDEN_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "HIDDEN", "field_26905", "HIDDEN_TEXT", "f_100545_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#BLOCKED_TEXT
    [[maybe_unused]] static jobject get_field_BLOCKED_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "BLOCKED", "field_26906", "BLOCKED_TEXT", "f_100546_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#BLOCKED_TEXT
    [[maybe_unused]] static void set_field_BLOCKED_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "BLOCKED", "field_26906", "BLOCKED_TEXT", "f_100546_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#OFFLINE_TEXT
    [[maybe_unused]] static jobject get_field_OFFLINE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "OFFLINE", "field_26907", "OFFLINE_TEXT", "f_100547_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#OFFLINE_TEXT
    [[maybe_unused]] static void set_field_OFFLINE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "OFFLINE", "field_26907", "OFFLINE_TEXT", "f_100547_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#HIDDEN_OFFLINE_TEXT
    [[maybe_unused]] static jobject get_field_HIDDEN_OFFLINE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "HIDDEN_OFFLINE", "field_26908", "HIDDEN_OFFLINE_TEXT", "f_100548_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#HIDDEN_OFFLINE_TEXT
    [[maybe_unused]] static void set_field_HIDDEN_OFFLINE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "HIDDEN_OFFLINE", "field_26908", "HIDDEN_OFFLINE_TEXT", "f_100548_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#BLOCKED_OFFLINE_TEXT
    [[maybe_unused]] static jobject get_field_BLOCKED_OFFLINE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "BLOCKED_OFFLINE", "field_26909", "BLOCKED_OFFLINE_TEXT", "f_100549_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#BLOCKED_OFFLINE_TEXT
    [[maybe_unused]] static void set_field_BLOCKED_OFFLINE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "BLOCKED_OFFLINE", "field_26909", "BLOCKED_OFFLINE_TEXT", "f_100549_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#REPORT_DISABLED_TEXT
    [[maybe_unused]] static jobject get_field_REPORT_DISABLED_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "REPORT_DISABLED_TOOLTIP", "field_39736", "REPORT_DISABLED_TEXT", "f_238715_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#REPORT_DISABLED_TEXT
    [[maybe_unused]] static void set_field_REPORT_DISABLED_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "REPORT_DISABLED_TOOLTIP", "field_39736", "REPORT_DISABLED_TEXT", "f_238715_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#hideText
    [[maybe_unused]] static jobject get_field_hideText() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "HIDE_TEXT_TOOLTIP", "field_33837", "hideText", "f_240656_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#hideText
    [[maybe_unused]] static void set_field_hideText(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "HIDE_TEXT_TOOLTIP", "field_33837", "hideText", "f_240656_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#showText
    [[maybe_unused]] static jobject get_field_showText() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "SHOW_TEXT_TOOLTIP", "field_33838", "showText", "f_240657_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#showText
    [[maybe_unused]] static void set_field_showText(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "SHOW_TEXT_TOOLTIP", "field_33838", "showText", "f_240657_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#reportText
    [[maybe_unused]] static jobject get_field_reportText() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "REPORT_PLAYER_TOOLTIP", "field_39623", "reportText", "f_240655_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#reportText
    [[maybe_unused]] static void set_field_reportText(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "REPORT_PLAYER_TOOLTIP", "field_39623", "reportText", "f_240655_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#field_32420
    [[maybe_unused]] static jint get_field_field_32420() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SKIN_SIZE", "field_32420", "field_32420", "f_170069_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#field_32420
    [[maybe_unused]] static void set_field_field_32420(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SKIN_SIZE", "field_32420", "field_32420", "f_170069_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#field_32421
    [[maybe_unused]] static jint get_field_field_32421() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "PADDING", "field_32421", "field_32421", "f_170061_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#field_32421
    [[maybe_unused]] static void set_field_field_32421(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "PADDING", "field_32421", "field_32421", "f_170061_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#BLACK_COLOR
    [[maybe_unused]] static jint get_field_BLACK_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SKIN_SHADE", "field_26850", "BLACK_COLOR", "f_100529_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#BLACK_COLOR
    [[maybe_unused]] static void set_field_BLACK_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SKIN_SHADE", "field_26850", "BLACK_COLOR", "f_100529_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#field_32422
    [[maybe_unused]] static jint get_field_field_32422() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "CHAT_TOGGLE_ICON_SIZE", "field_32422", "field_32422", "f_170062_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#field_32422
    [[maybe_unused]] static void set_field_field_32422(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "CHAT_TOGGLE_ICON_SIZE", "field_32422", "field_32422", "f_170062_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#GRAY_COLOR
    [[maybe_unused]] static jint get_field_GRAY_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BG_FILL", "field_26851", "GRAY_COLOR", "f_100530_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#GRAY_COLOR
    [[maybe_unused]] static void set_field_GRAY_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BG_FILL", "field_26851", "GRAY_COLOR", "f_100530_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#DARK_GRAY_COLOR
    [[maybe_unused]] static jint get_field_DARK_GRAY_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BG_FILL_REMOVED", "field_26852", "DARK_GRAY_COLOR", "f_100531_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#DARK_GRAY_COLOR
    [[maybe_unused]] static void set_field_DARK_GRAY_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BG_FILL_REMOVED", "field_26852", "DARK_GRAY_COLOR", "f_100531_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#WHITE_COLOR
    [[maybe_unused]] static jint get_field_WHITE_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PLAYERNAME_COLOR", "field_26853", "WHITE_COLOR", "f_100532_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#WHITE_COLOR
    [[maybe_unused]] static void set_field_WHITE_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PLAYERNAME_COLOR", "field_26853", "WHITE_COLOR", "f_100532_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#LIGHT_GRAY_COLOR
    [[maybe_unused]] static jint get_field_LIGHT_GRAY_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PLAYER_STATUS_COLOR", "field_26903", "LIGHT_GRAY_COLOR", "f_100533_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.screen.multiplayer.SocialInteractionsPlayerListEntry#LIGHT_GRAY_COLOR
    [[maybe_unused]] static void set_field_LIGHT_GRAY_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PLAYER_STATUS_COLOR", "field_26903", "LIGHT_GRAY_COLOR", "f_100533_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_getReportButtonTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "createReportButtonTooltip", "method_47634", "getReportButtonTooltip", "m_260909_"), "()Lfjx;");
    }

    static jobject getReportButtonTooltip(const jobject& obj) {
                
       const auto methodID = methodID_getReportButtonTooltip();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25343", "render", "m_6311_"), "(Lfhz;IIIIIIIZF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jboolean& arg8, const jfloat& arg9) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_children() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aK_", "children", "method_25396", "children", "m_6702_"), "()Ljava/util/List;");
    }

    static jobject children(const jobject& obj) {
                
       const auto methodID = methodID_children();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_selectableChildren() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "narratables", "method_37025", "selectableChildren", "m_142437_"), "()Ljava/util/List;");
    }

    static jobject selectableChildren(const jobject& obj) {
                
       const auto methodID = methodID_selectableChildren();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getPlayerName", "method_31330", "getName", "m_100600_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getPlayerId", "method_31334", "getUuid", "m_100618_"), "()Ljava/util/UUID;");
    }

    static jobject getUuid(const jobject& obj) {
                
       const auto methodID = methodID_getUuid();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSkinSupplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getSkinGetter", "method_53594", "getSkinSupplier", "m_293311_"), "()Ljava/util/function/Supplier;");
    }

    static jobject getSkinSupplier(const jobject& obj) {
                
       const auto methodID = methodID_getSkinSupplier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setOffline() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setRemoved", "method_31335", "setOffline", "m_100619_"), "(Z)V");
    }

    static void setOffline(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setOffline();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isOffline() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isRemoved", "method_44754", "isOffline", "m_240725_"), "()Z");
    }

    static jboolean isOffline(const jobject& obj) {
                
       const auto methodID = methodID_isOffline();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSentMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setHasRecentMessages", "method_44753", "setSentMessage", "m_240730_"), "(Z)V");
    }

    static void setSentMessage(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSentMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasSentMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "hasRecentMessages", "method_44756", "hasSentMessage", "m_240694_"), "()Z");
    }

    static jboolean hasSentMessage(const jobject& obj) {
                
       const auto methodID = methodID_hasSentMessage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isReportable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "isChatReportable", "method_53595", "isReportable", "m_295583_"), "()Z");
    }

    static jboolean isReportable(const jobject& obj) {
                
       const auto methodID = methodID_isReportable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_onButtonClick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onHiddenOrShown", "method_31329", "onButtonClick", "m_100596_"), "(ZLwz;)V");
    }

    static void onButtonClick(const jobject& obj, const jboolean& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onButtonClick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setShowButtonVisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "updateHideAndShowButton", "method_47905", "setShowButtonVisible", "m_262454_"), "(Z)V");
    }

    static void setShowButtonVisible(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setShowButtonVisible();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNarrationMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntryNarationMessage", "method_31389", "getNarrationMessage", "m_100594_"), "(Lxn;)Lxn;");
    }

    static jobject getNarrationMessage(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getNarrationMessage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getStatusText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getStatusComponent", "method_31390", "getStatusText", "m_100621_"), "()Lwz;");
    }

    static jobject getStatusText(const jobject& obj) {
                
       const auto methodID = methodID_getStatusText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_MULTIPLAYER_SOCIALINTERACTIONSPLAYERLISTENTRY_HPP