// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_SCREEN_MULTIPLAYER_MULTIPLAYERSERVERLISTWIDGET$SERVERENTRY_HPP
#define NET_MINECRAFT_CLIENT_GUI_SCREEN_MULTIPLAYER_MULTIPLAYERSERVERLISTWIDGET$SERVERENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry
 * Remapped: fqx$d
 */
namespace MultiplayerServerListWidget$ServerEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fqx$d", "net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry", "net/minecraft/class_4267$class_4270", "net/minecraft/client/gui/screen/multiplayer/MultiplayerServerListWidget$ServerEntry", "net/minecraft/src/C_3696_$C_3700_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#field_32387
    [[maybe_unused]] static jint get_field_field_32387() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ICON_WIDTH", "field_32387", "field_32387", "f_169983_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#field_32387
    [[maybe_unused]] static void set_field_field_32387(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ICON_WIDTH", "field_32387", "field_32387", "f_169983_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#field_32388
    [[maybe_unused]] static jint get_field_field_32388() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ICON_HEIGHT", "field_32388", "field_32388", "f_169984_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#field_32388
    [[maybe_unused]] static void set_field_field_32388(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ICON_HEIGHT", "field_32388", "field_32388", "f_169984_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#field_47852
    [[maybe_unused]] static jint get_field_field_47852() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SPACING", "field_47852", "field_47852", "f_315691_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#field_47852
    [[maybe_unused]] static void set_field_field_47852(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SPACING", "field_47852", "field_47852", "f_315691_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#field_47853
    [[maybe_unused]] static jint get_field_field_47853() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "STATUS_ICON_WIDTH", "field_47853", "field_47853", "f_316961_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#field_47853
    [[maybe_unused]] static void set_field_field_47853(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "STATUS_ICON_WIDTH", "field_47853", "field_47853", "f_316961_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#field_47854
    [[maybe_unused]] static jint get_field_field_47854() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "STATUS_ICON_HEIGHT", "field_47854", "field_47854", "f_314117_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#field_47854
    [[maybe_unused]] static void set_field_field_47854(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "STATUS_ICON_HEIGHT", "field_47854", "field_47854", "f_314117_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#screen
    static jobject get_field_screen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "screen", "field_19118", "screen", "f_99855_"), "Lfqt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#screen
    static void set_field_screen(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "screen", "field_19118", "screen", "f_99855_"), "Lfqt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "minecraft", "field_19119", "client", "f_99856_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "minecraft", "field_19119", "client", "f_99856_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#server
    static jobject get_field_server(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "serverData", "field_19120", "server", "f_99857_"), "Lfzt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#server
    static void set_field_server(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "serverData", "field_19120", "server", "f_99857_"), "Lfzt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#icon
    static jobject get_field_icon(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "icon", "field_19123", "icon", "f_99860_"), "Lfnn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#icon
    static void set_field_icon(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "icon", "field_19123", "icon", "f_99860_"), "Lfnn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#favicon
    static jbyte get_field_favicon(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "lastIconBytes", "field_42874", "favicon", "f_271423_"), "[B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#favicon
    static void set_field_favicon(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "lastIconBytes", "field_42874", "favicon", "f_271423_"), "[B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#time
    static jlong get_field_time(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "lastClickTime", "field_19124", "time", "f_99861_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#time
    static void set_field_time(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "lastClickTime", "field_19124", "time", "f_99861_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#playerListSummary
    static jobject get_field_playerListSummary(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "onlinePlayersTooltip", "field_47855", "playerListSummary", "f_314918_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#playerListSummary
    static void set_field_playerListSummary(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "onlinePlayersTooltip", "field_47855", "playerListSummary", "f_314918_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#statusIconTexture
    static jobject get_field_statusIconTexture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "statusIcon", "field_47856", "statusIconTexture", "f_313992_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#statusIconTexture
    static void set_field_statusIconTexture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "statusIcon", "field_47856", "statusIconTexture", "f_313992_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#statusTooltipText
    static jobject get_field_statusTooltipText(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "statusIconTooltip", "field_47857", "statusTooltipText", "f_317096_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.screen.multiplayer.MultiplayerServerListWidget$ServerEntry#statusTooltipText
    static void set_field_statusTooltipText(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "statusIconTooltip", "field_47857", "statusTooltipText", "f_317096_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25343", "render", "m_6311_"), "(Lfhz;IIIIIIIZF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jboolean& arg8, const jfloat& arg9) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "refreshStatus", "method_55815", "update", "m_321999_"), "()V");
    }

    static void update(const jobject& obj) {
                
       const auto methodID = methodID_update();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_saveFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updateServerList", "method_29978", "saveFile", "m_99866_"), "()V");
    }

    static void saveFile(const jobject& obj) {
                
       const auto methodID = methodID_saveFile();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_draw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "drawIcon", "method_20134", "draw", "m_280396_"), "(Lfhz;IILakr;)V");
    }

    static void draw(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_draw();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canConnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "canJoin", "method_20136", "canConnect", "m_99899_"), "()Z");
    }

    static jboolean canConnect(const jobject& obj) {
                
       const auto methodID = methodID_canConnect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_uploadFavicon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "uploadServerIcon", "method_49300", "uploadFavicon", "m_99896_"), "([B)Z");
    }

    static jboolean uploadFavicon(const jobject& obj, const jarray& arg0, const jbyte& arg1) {
                
       const auto methodID = methodID_uploadFavicon();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_keyPressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "keyPressed", "method_25404", "keyPressed", "m_7933_"), "(III)Z");
    }

    static jboolean keyPressed(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_keyPressed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_swapEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "swap", "method_22110", "swapEntries", "m_99871_"), "(II)V");
    }

    static void swapEntries(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_swapEntries();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getServerData", "method_20133", "getServer", "m_99898_"), "()Lfzt;");
    }

    static jobject getServer(const jobject& obj) {
                
       const auto methodID = methodID_getServer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNarration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getNarration", "method_37006", "getNarration", "m_142172_"), "()Lwz;");
    }

    static jobject getNarration(const jobject& obj) {
                
       const auto methodID = methodID_getNarration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_SCREEN_MULTIPLAYER_MULTIPLAYERSERVERLISTWIDGET$SERVERENTRY_HPP