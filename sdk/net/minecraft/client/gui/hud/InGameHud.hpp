// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_HUD_INGAMEHUD_HPP
#define NET_MINECRAFT_CLIENT_GUI_HUD_INGAMEHUD_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.hud.InGameHud
 * Remapped: fhy
 */
namespace InGameHud {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fhy", "net/minecraft/client/gui/Gui", "net/minecraft/class_329", "net/minecraft/client/gui/hud/InGameHud", "net/minecraft/src/C_3431_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#CROSSHAIR_TEXTURE
    [[maybe_unused]] static jobject get_field_CROSSHAIR_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CROSSHAIR_SPRITE", "field_45304", "CROSSHAIR_TEXTURE", "f_291829_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#CROSSHAIR_TEXTURE
    [[maybe_unused]] static void set_field_CROSSHAIR_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CROSSHAIR_SPRITE", "field_45304", "CROSSHAIR_TEXTURE", "f_291829_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#CROSSHAIR_ATTACK_INDICATOR_FULL_TEXTURE
    [[maybe_unused]] static jobject get_field_CROSSHAIR_ATTACK_INDICATOR_FULL_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CROSSHAIR_ATTACK_INDICATOR_FULL_SPRITE", "field_45305", "CROSSHAIR_ATTACK_INDICATOR_FULL_TEXTURE", "f_291363_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#CROSSHAIR_ATTACK_INDICATOR_FULL_TEXTURE
    [[maybe_unused]] static void set_field_CROSSHAIR_ATTACK_INDICATOR_FULL_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CROSSHAIR_ATTACK_INDICATOR_FULL_SPRITE", "field_45305", "CROSSHAIR_ATTACK_INDICATOR_FULL_TEXTURE", "f_291363_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#CROSSHAIR_ATTACK_INDICATOR_BACKGROUND_TEXTURE
    [[maybe_unused]] static jobject get_field_CROSSHAIR_ATTACK_INDICATOR_BACKGROUND_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CROSSHAIR_ATTACK_INDICATOR_BACKGROUND_SPRITE", "field_45306", "CROSSHAIR_ATTACK_INDICATOR_BACKGROUND_TEXTURE", "f_291360_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#CROSSHAIR_ATTACK_INDICATOR_BACKGROUND_TEXTURE
    [[maybe_unused]] static void set_field_CROSSHAIR_ATTACK_INDICATOR_BACKGROUND_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CROSSHAIR_ATTACK_INDICATOR_BACKGROUND_SPRITE", "field_45306", "CROSSHAIR_ATTACK_INDICATOR_BACKGROUND_TEXTURE", "f_291360_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#CROSSHAIR_ATTACK_INDICATOR_PROGRESS_TEXTURE
    [[maybe_unused]] static jobject get_field_CROSSHAIR_ATTACK_INDICATOR_PROGRESS_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CROSSHAIR_ATTACK_INDICATOR_PROGRESS_SPRITE", "field_45307", "CROSSHAIR_ATTACK_INDICATOR_PROGRESS_TEXTURE", "f_290711_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#CROSSHAIR_ATTACK_INDICATOR_PROGRESS_TEXTURE
    [[maybe_unused]] static void set_field_CROSSHAIR_ATTACK_INDICATOR_PROGRESS_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CROSSHAIR_ATTACK_INDICATOR_PROGRESS_SPRITE", "field_45307", "CROSSHAIR_ATTACK_INDICATOR_PROGRESS_TEXTURE", "f_290711_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#EFFECT_BACKGROUND_AMBIENT_TEXTURE
    [[maybe_unused]] static jobject get_field_EFFECT_BACKGROUND_AMBIENT_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "EFFECT_BACKGROUND_AMBIENT_SPRITE", "field_45308", "EFFECT_BACKGROUND_AMBIENT_TEXTURE", "f_291473_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#EFFECT_BACKGROUND_AMBIENT_TEXTURE
    [[maybe_unused]] static void set_field_EFFECT_BACKGROUND_AMBIENT_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "EFFECT_BACKGROUND_AMBIENT_SPRITE", "field_45308", "EFFECT_BACKGROUND_AMBIENT_TEXTURE", "f_291473_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#EFFECT_BACKGROUND_TEXTURE
    [[maybe_unused]] static jobject get_field_EFFECT_BACKGROUND_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "EFFECT_BACKGROUND_SPRITE", "field_45309", "EFFECT_BACKGROUND_TEXTURE", "f_290513_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#EFFECT_BACKGROUND_TEXTURE
    [[maybe_unused]] static void set_field_EFFECT_BACKGROUND_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "EFFECT_BACKGROUND_SPRITE", "field_45309", "EFFECT_BACKGROUND_TEXTURE", "f_290513_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#HOTBAR_TEXTURE
    [[maybe_unused]] static jobject get_field_HOTBAR_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "HOTBAR_SPRITE", "field_45310", "HOTBAR_TEXTURE", "f_291149_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#HOTBAR_TEXTURE
    [[maybe_unused]] static void set_field_HOTBAR_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "HOTBAR_SPRITE", "field_45310", "HOTBAR_TEXTURE", "f_291149_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#HOTBAR_SELECTION_TEXTURE
    [[maybe_unused]] static jobject get_field_HOTBAR_SELECTION_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "HOTBAR_SELECTION_SPRITE", "field_45311", "HOTBAR_SELECTION_TEXTURE", "f_290368_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#HOTBAR_SELECTION_TEXTURE
    [[maybe_unused]] static void set_field_HOTBAR_SELECTION_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "HOTBAR_SELECTION_SPRITE", "field_45311", "HOTBAR_SELECTION_TEXTURE", "f_290368_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#HOTBAR_OFFHAND_LEFT_TEXTURE
    [[maybe_unused]] static jobject get_field_HOTBAR_OFFHAND_LEFT_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "HOTBAR_OFFHAND_LEFT_SPRITE", "field_45312", "HOTBAR_OFFHAND_LEFT_TEXTURE", "f_291322_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#HOTBAR_OFFHAND_LEFT_TEXTURE
    [[maybe_unused]] static void set_field_HOTBAR_OFFHAND_LEFT_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "HOTBAR_OFFHAND_LEFT_SPRITE", "field_45312", "HOTBAR_OFFHAND_LEFT_TEXTURE", "f_291322_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#HOTBAR_OFFHAND_RIGHT_TEXTURE
    [[maybe_unused]] static jobject get_field_HOTBAR_OFFHAND_RIGHT_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "HOTBAR_OFFHAND_RIGHT_SPRITE", "field_45313", "HOTBAR_OFFHAND_RIGHT_TEXTURE", "f_291864_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#HOTBAR_OFFHAND_RIGHT_TEXTURE
    [[maybe_unused]] static void set_field_HOTBAR_OFFHAND_RIGHT_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "HOTBAR_OFFHAND_RIGHT_SPRITE", "field_45313", "HOTBAR_OFFHAND_RIGHT_TEXTURE", "f_291864_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#HOTBAR_ATTACK_INDICATOR_BACKGROUND_TEXTURE
    [[maybe_unused]] static jobject get_field_HOTBAR_ATTACK_INDICATOR_BACKGROUND_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "HOTBAR_ATTACK_INDICATOR_BACKGROUND_SPRITE", "field_45314", "HOTBAR_ATTACK_INDICATOR_BACKGROUND_TEXTURE", "f_290833_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#HOTBAR_ATTACK_INDICATOR_BACKGROUND_TEXTURE
    [[maybe_unused]] static void set_field_HOTBAR_ATTACK_INDICATOR_BACKGROUND_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "HOTBAR_ATTACK_INDICATOR_BACKGROUND_SPRITE", "field_45314", "HOTBAR_ATTACK_INDICATOR_BACKGROUND_TEXTURE", "f_290833_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#HOTBAR_ATTACK_INDICATOR_PROGRESS_TEXTURE
    [[maybe_unused]] static jobject get_field_HOTBAR_ATTACK_INDICATOR_PROGRESS_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "HOTBAR_ATTACK_INDICATOR_PROGRESS_SPRITE", "field_45315", "HOTBAR_ATTACK_INDICATOR_PROGRESS_TEXTURE", "f_291301_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#HOTBAR_ATTACK_INDICATOR_PROGRESS_TEXTURE
    [[maybe_unused]] static void set_field_HOTBAR_ATTACK_INDICATOR_PROGRESS_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "HOTBAR_ATTACK_INDICATOR_PROGRESS_SPRITE", "field_45315", "HOTBAR_ATTACK_INDICATOR_PROGRESS_TEXTURE", "f_291301_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#JUMP_BAR_BACKGROUND_TEXTURE
    [[maybe_unused]] static jobject get_field_JUMP_BAR_BACKGROUND_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "JUMP_BAR_BACKGROUND_SPRITE", "field_45316", "JUMP_BAR_BACKGROUND_TEXTURE", "f_291483_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#JUMP_BAR_BACKGROUND_TEXTURE
    [[maybe_unused]] static void set_field_JUMP_BAR_BACKGROUND_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "JUMP_BAR_BACKGROUND_SPRITE", "field_45316", "JUMP_BAR_BACKGROUND_TEXTURE", "f_291483_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#JUMP_BAR_COOLDOWN_TEXTURE
    [[maybe_unused]] static jobject get_field_JUMP_BAR_COOLDOWN_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "JUMP_BAR_COOLDOWN_SPRITE", "field_45317", "JUMP_BAR_COOLDOWN_TEXTURE", "f_291104_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#JUMP_BAR_COOLDOWN_TEXTURE
    [[maybe_unused]] static void set_field_JUMP_BAR_COOLDOWN_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "JUMP_BAR_COOLDOWN_SPRITE", "field_45317", "JUMP_BAR_COOLDOWN_TEXTURE", "f_291104_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#JUMP_BAR_PROGRESS_TEXTURE
    [[maybe_unused]] static jobject get_field_JUMP_BAR_PROGRESS_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "JUMP_BAR_PROGRESS_SPRITE", "field_45318", "JUMP_BAR_PROGRESS_TEXTURE", "f_291820_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#JUMP_BAR_PROGRESS_TEXTURE
    [[maybe_unused]] static void set_field_JUMP_BAR_PROGRESS_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "JUMP_BAR_PROGRESS_SPRITE", "field_45318", "JUMP_BAR_PROGRESS_TEXTURE", "f_291820_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#EXPERIENCE_BAR_BACKGROUND_TEXTURE
    [[maybe_unused]] static jobject get_field_EXPERIENCE_BAR_BACKGROUND_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "EXPERIENCE_BAR_BACKGROUND_SPRITE", "field_45319", "EXPERIENCE_BAR_BACKGROUND_TEXTURE", "f_291741_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#EXPERIENCE_BAR_BACKGROUND_TEXTURE
    [[maybe_unused]] static void set_field_EXPERIENCE_BAR_BACKGROUND_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "EXPERIENCE_BAR_BACKGROUND_SPRITE", "field_45319", "EXPERIENCE_BAR_BACKGROUND_TEXTURE", "f_291741_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#EXPERIENCE_BAR_PROGRESS_TEXTURE
    [[maybe_unused]] static jobject get_field_EXPERIENCE_BAR_PROGRESS_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "EXPERIENCE_BAR_PROGRESS_SPRITE", "field_45320", "EXPERIENCE_BAR_PROGRESS_TEXTURE", "f_291491_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#EXPERIENCE_BAR_PROGRESS_TEXTURE
    [[maybe_unused]] static void set_field_EXPERIENCE_BAR_PROGRESS_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "EXPERIENCE_BAR_PROGRESS_SPRITE", "field_45320", "EXPERIENCE_BAR_PROGRESS_TEXTURE", "f_291491_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#ARMOR_EMPTY_TEXTURE
    [[maybe_unused]] static jobject get_field_ARMOR_EMPTY_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "ARMOR_EMPTY_SPRITE", "field_45321", "ARMOR_EMPTY_TEXTURE", "f_291879_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#ARMOR_EMPTY_TEXTURE
    [[maybe_unused]] static void set_field_ARMOR_EMPTY_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "ARMOR_EMPTY_SPRITE", "field_45321", "ARMOR_EMPTY_TEXTURE", "f_291879_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#ARMOR_HALF_TEXTURE
    [[maybe_unused]] static jobject get_field_ARMOR_HALF_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "ARMOR_HALF_SPRITE", "field_45322", "ARMOR_HALF_TEXTURE", "f_291785_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#ARMOR_HALF_TEXTURE
    [[maybe_unused]] static void set_field_ARMOR_HALF_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "ARMOR_HALF_SPRITE", "field_45322", "ARMOR_HALF_TEXTURE", "f_291785_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#ARMOR_FULL_TEXTURE
    [[maybe_unused]] static jobject get_field_ARMOR_FULL_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ARMOR_FULL_SPRITE", "field_45323", "ARMOR_FULL_TEXTURE", "f_290436_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#ARMOR_FULL_TEXTURE
    [[maybe_unused]] static void set_field_ARMOR_FULL_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ARMOR_FULL_SPRITE", "field_45323", "ARMOR_FULL_TEXTURE", "f_290436_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#FOOD_EMPTY_HUNGER_TEXTURE
    [[maybe_unused]] static jobject get_field_FOOD_EMPTY_HUNGER_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FOOD_EMPTY_HUNGER_SPRITE", "field_45324", "FOOD_EMPTY_HUNGER_TEXTURE", "f_291486_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#FOOD_EMPTY_HUNGER_TEXTURE
    [[maybe_unused]] static void set_field_FOOD_EMPTY_HUNGER_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FOOD_EMPTY_HUNGER_SPRITE", "field_45324", "FOOD_EMPTY_HUNGER_TEXTURE", "f_291486_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#FOOD_HALF_HUNGER_TEXTURE
    [[maybe_unused]] static jobject get_field_FOOD_HALF_HUNGER_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "FOOD_HALF_HUNGER_SPRITE", "field_45325", "FOOD_HALF_HUNGER_TEXTURE", "f_291577_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#FOOD_HALF_HUNGER_TEXTURE
    [[maybe_unused]] static void set_field_FOOD_HALF_HUNGER_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "FOOD_HALF_HUNGER_SPRITE", "field_45325", "FOOD_HALF_HUNGER_TEXTURE", "f_291577_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#FOOD_FULL_HUNGER_TEXTURE
    [[maybe_unused]] static jobject get_field_FOOD_FULL_HUNGER_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "FOOD_FULL_HUNGER_SPRITE", "field_45326", "FOOD_FULL_HUNGER_TEXTURE", "f_290366_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#FOOD_FULL_HUNGER_TEXTURE
    [[maybe_unused]] static void set_field_FOOD_FULL_HUNGER_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "FOOD_FULL_HUNGER_SPRITE", "field_45326", "FOOD_FULL_HUNGER_TEXTURE", "f_290366_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#FOOD_EMPTY_TEXTURE
    [[maybe_unused]] static jobject get_field_FOOD_EMPTY_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "FOOD_EMPTY_SPRITE", "field_45327", "FOOD_EMPTY_TEXTURE", "f_290694_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#FOOD_EMPTY_TEXTURE
    [[maybe_unused]] static void set_field_FOOD_EMPTY_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "FOOD_EMPTY_SPRITE", "field_45327", "FOOD_EMPTY_TEXTURE", "f_290694_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#FOOD_HALF_TEXTURE
    [[maybe_unused]] static jobject get_field_FOOD_HALF_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "FOOD_HALF_SPRITE", "field_45328", "FOOD_HALF_TEXTURE", "f_291002_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#FOOD_HALF_TEXTURE
    [[maybe_unused]] static void set_field_FOOD_HALF_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "FOOD_HALF_SPRITE", "field_45328", "FOOD_HALF_TEXTURE", "f_291002_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#FOOD_FULL_TEXTURE
    [[maybe_unused]] static jobject get_field_FOOD_FULL_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "FOOD_FULL_SPRITE", "field_45298", "FOOD_FULL_TEXTURE", "f_291650_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#FOOD_FULL_TEXTURE
    [[maybe_unused]] static void set_field_FOOD_FULL_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "FOOD_FULL_SPRITE", "field_45298", "FOOD_FULL_TEXTURE", "f_291650_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#AIR_TEXTURE
    [[maybe_unused]] static jobject get_field_AIR_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "AIR_SPRITE", "field_45299", "AIR_TEXTURE", "f_291833_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#AIR_TEXTURE
    [[maybe_unused]] static void set_field_AIR_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "AIR_SPRITE", "field_45299", "AIR_TEXTURE", "f_291833_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#AIR_BURSTING_TEXTURE
    [[maybe_unused]] static jobject get_field_AIR_BURSTING_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "AIR_BURSTING_SPRITE", "field_45300", "AIR_BURSTING_TEXTURE", "f_291609_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#AIR_BURSTING_TEXTURE
    [[maybe_unused]] static void set_field_AIR_BURSTING_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "AIR_BURSTING_SPRITE", "field_45300", "AIR_BURSTING_TEXTURE", "f_291609_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#VEHICLE_CONTAINER_HEART_TEXTURE
    [[maybe_unused]] static jobject get_field_VEHICLE_CONTAINER_HEART_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "HEART_VEHICLE_CONTAINER_SPRITE", "field_45301", "VEHICLE_CONTAINER_HEART_TEXTURE", "f_290939_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#VEHICLE_CONTAINER_HEART_TEXTURE
    [[maybe_unused]] static void set_field_VEHICLE_CONTAINER_HEART_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "HEART_VEHICLE_CONTAINER_SPRITE", "field_45301", "VEHICLE_CONTAINER_HEART_TEXTURE", "f_290939_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#VEHICLE_FULL_HEART_TEXTURE
    [[maybe_unused]] static jobject get_field_VEHICLE_FULL_HEART_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "HEART_VEHICLE_FULL_SPRITE", "field_45302", "VEHICLE_FULL_HEART_TEXTURE", "f_291256_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#VEHICLE_FULL_HEART_TEXTURE
    [[maybe_unused]] static void set_field_VEHICLE_FULL_HEART_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "HEART_VEHICLE_FULL_SPRITE", "field_45302", "VEHICLE_FULL_HEART_TEXTURE", "f_291256_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#VEHICLE_HALF_HEART_TEXTURE
    [[maybe_unused]] static jobject get_field_VEHICLE_HALF_HEART_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "HEART_VEHICLE_HALF_SPRITE", "field_45303", "VEHICLE_HALF_HEART_TEXTURE", "f_290334_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#VEHICLE_HALF_HEART_TEXTURE
    [[maybe_unused]] static void set_field_VEHICLE_HALF_HEART_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "HEART_VEHICLE_HALF_SPRITE", "field_45303", "VEHICLE_HALF_HEART_TEXTURE", "f_290334_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#VIGNETTE_TEXTURE
    [[maybe_unused]] static jobject get_field_VIGNETTE_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "VIGNETTE_LOCATION", "field_2020", "VIGNETTE_TEXTURE", "f_92981_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#VIGNETTE_TEXTURE
    [[maybe_unused]] static void set_field_VIGNETTE_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "VIGNETTE_LOCATION", "field_2020", "VIGNETTE_TEXTURE", "f_92981_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#PUMPKIN_BLUR
    [[maybe_unused]] static jobject get_field_PUMPKIN_BLUR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "PUMPKIN_BLUR_LOCATION", "field_2019", "PUMPKIN_BLUR", "f_92983_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#PUMPKIN_BLUR
    [[maybe_unused]] static void set_field_PUMPKIN_BLUR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "PUMPKIN_BLUR_LOCATION", "field_2019", "PUMPKIN_BLUR", "f_92983_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#SPYGLASS_SCOPE
    [[maybe_unused]] static jobject get_field_SPYGLASS_SCOPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SPYGLASS_SCOPE_LOCATION", "field_27389", "SPYGLASS_SCOPE", "f_168665_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#SPYGLASS_SCOPE
    [[maybe_unused]] static void set_field_SPYGLASS_SCOPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SPYGLASS_SCOPE_LOCATION", "field_27389", "SPYGLASS_SCOPE", "f_168665_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#POWDER_SNOW_OUTLINE
    [[maybe_unused]] static jobject get_field_POWDER_SNOW_OUTLINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "POWDER_SNOW_OUTLINE_LOCATION", "field_27960", "POWDER_SNOW_OUTLINE", "f_168666_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#POWDER_SNOW_OUTLINE
    [[maybe_unused]] static void set_field_POWDER_SNOW_OUTLINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "POWDER_SNOW_OUTLINE_LOCATION", "field_27960", "POWDER_SNOW_OUTLINE", "f_168666_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#SCOREBOARD_ENTRY_COMPARATOR
    [[maybe_unused]] static jobject get_field_SCOREBOARD_ENTRY_COMPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SCORE_DISPLAY_ORDER", "field_47550", "SCOREBOARD_ENTRY_COMPARATOR", "f_302813_"), "Ljava/util/Comparator;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#SCOREBOARD_ENTRY_COMPARATOR
    [[maybe_unused]] static void set_field_SCOREBOARD_ENTRY_COMPARATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SCORE_DISPLAY_ORDER", "field_47550", "SCOREBOARD_ENTRY_COMPARATOR", "f_302813_"), "Ljava/util/Comparator;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#DEMO_EXPIRED_MESSAGE
    [[maybe_unused]] static jobject get_field_DEMO_EXPIRED_MESSAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "DEMO_EXPIRED_TEXT", "field_26527", "DEMO_EXPIRED_MESSAGE", "f_92984_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#DEMO_EXPIRED_MESSAGE
    [[maybe_unused]] static void set_field_DEMO_EXPIRED_MESSAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "DEMO_EXPIRED_TEXT", "field_26527", "DEMO_EXPIRED_MESSAGE", "f_92984_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#SAVING_LEVEL_TEXT
    [[maybe_unused]] static jobject get_field_SAVING_LEVEL_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SAVING_TEXT", "field_35430", "SAVING_LEVEL_TEXT", "f_193830_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#SAVING_LEVEL_TEXT
    [[maybe_unused]] static void set_field_SAVING_LEVEL_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SAVING_TEXT", "field_35430", "SAVING_LEVEL_TEXT", "f_193830_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#field_32168
    [[maybe_unused]] static jfloat get_field_field_32168() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "MIN_CROSSHAIR_ATTACK_SPEED", "field_32168", "field_32168", "f_168668_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#field_32168
    [[maybe_unused]] static void set_field_field_32168(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "MIN_CROSSHAIR_ATTACK_SPEED", "field_32168", "field_32168", "f_168668_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#field_32169
    [[maybe_unused]] static jint get_field_field_32169() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "NUM_HEARTS_PER_ROW", "field_32169", "field_32169", "f_168669_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#field_32169
    [[maybe_unused]] static void set_field_field_32169(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "NUM_HEARTS_PER_ROW", "field_32169", "field_32169", "f_168669_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#field_32170
    [[maybe_unused]] static jint get_field_field_32170() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "LINE_HEIGHT", "field_32170", "field_32170", "f_168670_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#field_32170
    [[maybe_unused]] static void set_field_field_32170(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "LINE_HEIGHT", "field_32170", "field_32170", "f_168670_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#SCOREBOARD_JOINER
    [[maybe_unused]] static jobject get_field_SCOREBOARD_JOINER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "SPACER", "field_32171", "SCOREBOARD_JOINER", "f_168671_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#SCOREBOARD_JOINER
    [[maybe_unused]] static void set_field_SCOREBOARD_JOINER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "SPACER", "field_32171", "SCOREBOARD_JOINER", "f_168671_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#field_32172
    [[maybe_unused]] static jfloat get_field_field_32172() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "PORTAL_OVERLAY_ALPHA_MIN", "field_32172", "field_32172", "f_168672_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#field_32172
    [[maybe_unused]] static void set_field_field_32172(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "PORTAL_OVERLAY_ALPHA_MIN", "field_32172", "field_32172", "f_168672_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#field_33942
    [[maybe_unused]] static jint get_field_field_33942() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "HEART_SIZE", "field_33942", "field_33942", "f_168673_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#field_33942
    [[maybe_unused]] static void set_field_field_33942(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "HEART_SIZE", "field_33942", "field_33942", "f_168673_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#field_33943
    [[maybe_unused]] static jint get_field_field_33943() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "HEART_SEPARATION", "field_33943", "field_33943", "f_168674_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#field_33943
    [[maybe_unused]] static void set_field_field_33943(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "HEART_SEPARATION", "field_33943", "field_33943", "f_168674_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.InGameHud#field_35431
    [[maybe_unused]] static jfloat get_field_field_35431() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "AUTOSAVE_FADE_SPEED_FACTOR", "field_35431", "field_35431", "f_193831_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#field_35431
    [[maybe_unused]] static void set_field_field_35431(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "AUTOSAVE_FADE_SPEED_FACTOR", "field_35431", "field_35431", "f_193831_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#random
    static jobject get_field_random(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "random", "field_2034", "random", "f_92985_"), "Layw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#random
    static void set_field_random(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "random", "field_2034", "random", "f_92985_"), "Layw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "minecraft", "field_2035", "client", "f_92986_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "minecraft", "field_2035", "client", "f_92986_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#chatHud
    static jobject get_field_chatHud(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "chat", "field_2021", "chatHud", "f_92988_"), "Lfin;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#chatHud
    static void set_field_chatHud(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "chat", "field_2021", "chatHud", "f_92988_"), "Lfin;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#ticks
    static jint get_field_ticks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "tickCount", "field_2042", "ticks", "f_92989_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#ticks
    static void set_field_ticks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "tickCount", "field_2042", "ticks", "f_92989_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#overlayMessage
    static jobject get_field_overlayMessage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "overlayMessageString", "field_2018", "overlayMessage", "f_92990_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#overlayMessage
    static void set_field_overlayMessage(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "overlayMessageString", "field_2018", "overlayMessage", "f_92990_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#overlayRemaining
    static jint get_field_overlayRemaining(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "overlayMessageTime", "field_2041", "overlayRemaining", "f_92991_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#overlayRemaining
    static void set_field_overlayRemaining(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "overlayMessageTime", "field_2041", "overlayRemaining", "f_92991_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#overlayTinted
    static jboolean get_field_overlayTinted(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "animateOverlayMessageColor", "field_2038", "overlayTinted", "f_92992_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#overlayTinted
    static void set_field_overlayTinted(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "animateOverlayMessageColor", "field_2038", "overlayTinted", "f_92992_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#canShowChatDisabledScreen
    static jboolean get_field_canShowChatDisabledScreen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "chatDisabledByPlayerShown", "field_39458", "canShowChatDisabledScreen", "f_238167_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#canShowChatDisabledScreen
    static void set_field_canShowChatDisabledScreen(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "chatDisabledByPlayerShown", "field_39458", "canShowChatDisabledScreen", "f_238167_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gui.hud.InGameHud#vignetteDarkness
    static jfloat get_field_vignetteDarkness(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "vignetteBrightness", "field_2013", "vignetteDarkness", "f_92980_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.hud.InGameHud#vignetteDarkness
    static void set_field_vignetteDarkness(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "vignetteBrightness", "field_2013", "vignetteDarkness", "f_92980_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#heldItemTooltipFade
    static jint get_field_heldItemTooltipFade(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "toolHighlightTimer", "field_2040", "heldItemTooltipFade", "f_92993_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#heldItemTooltipFade
    static void set_field_heldItemTooltipFade(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "toolHighlightTimer", "field_2040", "heldItemTooltipFade", "f_92993_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#currentStack
    static jobject get_field_currentStack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "lastToolHighlight", "field_2031", "currentStack", "f_92994_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#currentStack
    static void set_field_currentStack(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "lastToolHighlight", "field_2031", "currentStack", "f_92994_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#debugHud
    static jobject get_field_debugHud(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "debugOverlay", "field_2026", "debugHud", "f_291320_"), "Lfiu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#debugHud
    static void set_field_debugHud(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "debugOverlay", "field_2026", "debugHud", "f_291320_"), "Lfiu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#subtitlesHud
    static jobject get_field_subtitlesHud(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ag", "subtitleOverlay", "field_2027", "subtitlesHud", "f_92996_"), "Lfju;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#subtitlesHud
    static void set_field_subtitlesHud(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ag", "subtitleOverlay", "field_2027", "subtitlesHud", "f_92996_"), "Lfju;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#spectatorHud
    static jobject get_field_spectatorHud(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ah", "spectatorGui", "field_2025", "spectatorHud", "f_92997_"), "Lfkl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#spectatorHud
    static void set_field_spectatorHud(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ah", "spectatorGui", "field_2025", "spectatorHud", "f_92997_"), "Lfkl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#playerListHud
    static jobject get_field_playerListHud(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ai", "tabList", "field_2015", "playerListHud", "f_92998_"), "Lfjn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#playerListHud
    static void set_field_playerListHud(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ai", "tabList", "field_2015", "playerListHud", "f_92998_"), "Lfjn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#bossBarHud
    static jobject get_field_bossBarHud(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aj", "bossOverlay", "field_2030", "bossBarHud", "f_92999_"), "Lfil;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#bossBarHud
    static void set_field_bossBarHud(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aj", "bossOverlay", "field_2030", "bossBarHud", "f_92999_"), "Lfil;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#titleRemainTicks
    static jint get_field_titleRemainTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "titleTime", "field_2023", "titleRemainTicks", "f_93000_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#titleRemainTicks
    static void set_field_titleRemainTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "titleTime", "field_2023", "titleRemainTicks", "f_93000_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#title
    static jobject get_field_title(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("al", "title", "field_2016", "title", "f_93001_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#title
    static void set_field_title(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("al", "title", "field_2016", "title", "f_93001_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#subtitle
    static jobject get_field_subtitle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("am", "subtitle", "field_2039", "subtitle", "f_93002_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#subtitle
    static void set_field_subtitle(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("am", "subtitle", "field_2039", "subtitle", "f_93002_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#titleFadeInTicks
    static jint get_field_titleFadeInTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("an", "titleFadeInTime", "field_2037", "titleFadeInTicks", "f_92970_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#titleFadeInTicks
    static void set_field_titleFadeInTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("an", "titleFadeInTime", "field_2037", "titleFadeInTicks", "f_92970_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#titleStayTicks
    static jint get_field_titleStayTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ao", "titleStayTime", "field_2017", "titleStayTicks", "f_92971_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#titleStayTicks
    static void set_field_titleStayTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ao", "titleStayTime", "field_2017", "titleStayTicks", "f_92971_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#titleFadeOutTicks
    static jint get_field_titleFadeOutTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ap", "titleFadeOutTime", "field_2036", "titleFadeOutTicks", "f_92972_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#titleFadeOutTicks
    static void set_field_titleFadeOutTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ap", "titleFadeOutTime", "field_2036", "titleFadeOutTicks", "f_92972_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#lastHealthValue
    static jint get_field_lastHealthValue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aq", "lastHealth", "field_2014", "lastHealthValue", "f_92973_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#lastHealthValue
    static void set_field_lastHealthValue(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aq", "lastHealth", "field_2014", "lastHealthValue", "f_92973_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#renderHealthValue
    static jint get_field_renderHealthValue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ar", "displayHealth", "field_2033", "renderHealthValue", "f_92974_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#renderHealthValue
    static void set_field_renderHealthValue(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ar", "displayHealth", "field_2033", "renderHealthValue", "f_92974_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#lastHealthCheckTime
    static jlong get_field_lastHealthCheckTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("as", "lastHealthTime", "field_2012", "lastHealthCheckTime", "f_92975_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#lastHealthCheckTime
    static void set_field_lastHealthCheckTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("as", "lastHealthTime", "field_2012", "lastHealthCheckTime", "f_92975_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#heartJumpEndTick
    static jlong get_field_heartJumpEndTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("at", "healthBlinkTime", "field_2032", "heartJumpEndTick", "f_92976_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#heartJumpEndTick
    static void set_field_heartJumpEndTick(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("at", "healthBlinkTime", "field_2032", "heartJumpEndTick", "f_92976_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#autosaveIndicatorAlpha
    static jfloat get_field_autosaveIndicatorAlpha(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("au", "autosaveIndicatorValue", "field_35428", "autosaveIndicatorAlpha", "f_193828_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#autosaveIndicatorAlpha
    static void set_field_autosaveIndicatorAlpha(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("au", "autosaveIndicatorValue", "field_35428", "autosaveIndicatorAlpha", "f_193828_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#lastAutosaveIndicatorAlpha
    static jfloat get_field_lastAutosaveIndicatorAlpha(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("av", "lastAutosaveIndicatorValue", "field_35429", "lastAutosaveIndicatorAlpha", "f_193829_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#lastAutosaveIndicatorAlpha
    static void set_field_lastAutosaveIndicatorAlpha(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("av", "lastAutosaveIndicatorValue", "field_35429", "lastAutosaveIndicatorAlpha", "f_193829_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#layeredDrawer
    static jobject get_field_layeredDrawer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aw", "layers", "field_47847", "layeredDrawer", "f_316662_"), "Lfib;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#layeredDrawer
    static void set_field_layeredDrawer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aw", "layers", "field_47847", "layeredDrawer", "f_316662_"), "Lfib;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.InGameHud#spyglassScale
    static jfloat get_field_spyglassScale(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ax", "scopeScale", "field_27959", "spyglassScale", "f_168664_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.InGameHud#spyglassScale
    static void set_field_spyglassScale(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ax", "scopeScale", "field_27959", "spyglassScale", "f_168664_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_setDefaultTitleFade() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resetTitleTimes", "method_1742", "setDefaultTitleFade", "m_93006_"), "()V");
    }

    static void setDefaultTitleFade(const jobject& obj) {
                
       const auto methodID = methodID_setDefaultTitleFade();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_1753", "render", "m_280421_"), "(Lfhz;Lfgf;)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderMiscOverlays() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "renderCameraOverlays", "method_55798", "renderMiscOverlays", "m_318727_"), "(Lfhz;Lfgf;)V");
    }

    static void renderMiscOverlays(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderMiscOverlays();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderSleepOverlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "renderSleepOverlay", "method_55799", "renderSleepOverlay", "m_322680_"), "(Lfhz;Lfgf;)V");
    }

    static void renderSleepOverlay(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderSleepOverlay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderOverlayMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "renderOverlayMessage", "method_55800", "renderOverlayMessage", "m_324281_"), "(Lfhz;Lfgf;)V");
    }

    static void renderOverlayMessage(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderOverlayMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderTitleAndSubtitle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "renderTitle", "method_55801", "renderTitleAndSubtitle", "m_320668_"), "(Lfhz;Lfgf;)V");
    }

    static void renderTitleAndSubtitle(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderTitleAndSubtitle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderChat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "renderChat", "method_55802", "renderChat", "m_322096_"), "(Lfhz;Lfgf;)V");
    }

    static void renderChat(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderChat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderScoreboardSidebar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "renderScoreboardSidebar", "method_55803", "renderScoreboardSidebar", "m_323286_"), "(Lfhz;Lfgf;)V");
    }

    static void renderScoreboardSidebar(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderScoreboardSidebar();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderPlayerList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "renderTabList", "method_55804", "renderPlayerList", "m_320053_"), "(Lfhz;Lfgf;)V");
    }

    static void renderPlayerList(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderPlayerList();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderCrosshair() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "renderCrosshair", "method_1736", "renderCrosshair", "m_280130_"), "(Lfhz;Lfgf;)V");
    }

    static void renderCrosshair(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderCrosshair();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldRenderSpectatorCrosshair() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canRenderCrosshairForSpectator", "method_17534", "shouldRenderSpectatorCrosshair", "m_93024_"), "(Lexa;)Z");
    }

    static jboolean shouldRenderSpectatorCrosshair(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldRenderSpectatorCrosshair();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_renderStatusEffectOverlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "renderEffects", "method_1765", "renderStatusEffectOverlay", "m_280523_"), "(Lfhz;Lfgf;)V");
    }

    static void renderStatusEffectOverlay(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderStatusEffectOverlay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderMainHud() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "renderHotbarAndDecorations", "method_55805", "renderMainHud", "m_319215_"), "(Lfhz;Lfgf;)V");
    }

    static void renderMainHud(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderMainHud();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderHotbar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "renderItemHotbar", "method_1759", "renderHotbar", "m_324469_"), "(Lfhz;Lfgf;)V");
    }

    static void renderHotbar(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderHotbar();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderMountJumpBar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderJumpMeter", "method_1752", "renderMountJumpBar", "m_280069_"), "(Lbty;Lfhz;I)V");
    }

    static void renderMountJumpBar(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_renderMountJumpBar();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_renderExperienceBar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderExperienceBar", "method_1754", "renderExperienceBar", "m_280276_"), "(Lfhz;I)V");
    }

    static void renderExperienceBar(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_renderExperienceBar();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderExperienceLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "renderExperienceLevel", "method_56136", "renderExperienceLevel", "m_324707_"), "(Lfhz;Lfgf;)V");
    }

    static void renderExperienceLevel(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderExperienceLevel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldRenderExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "isExperienceBarVisible", "method_56135", "shouldRenderExperience", "m_322177_"), "()Z");
    }

    static jboolean shouldRenderExperience(const jobject& obj) {
                
       const auto methodID = methodID_shouldRenderExperience();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_renderHeldItemTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSelectedItemName", "method_1749", "renderHeldItemTooltip", "m_280295_"), "(Lfhz;)V");
    }

    static void renderHeldItemTooltip(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_renderHeldItemTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_renderDemoTimer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "renderDemoOverlay", "method_1766", "renderDemoTimer", "m_280339_"), "(Lfhz;Lfgf;)V");
    }

    static void renderDemoTimer(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderDemoTimer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__renderScoreboardSidebar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "displayScoreboardSidebar", "method_1757", "renderScoreboardSidebar", "m_280030_"), "(Lfhz;Lexy;)V");
    }

    static void _renderScoreboardSidebar(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__renderScoreboardSidebar();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getCameraPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getCameraPlayer", "method_1737", "getCameraPlayer", "m_93092_"), "()Lcmx;");
    }

    static jobject getCameraPlayer(const jobject& obj) {
                
       const auto methodID = methodID_getCameraPlayer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRiddenEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getPlayerVehicleWithHealth", "method_1734", "getRiddenEntity", "m_93093_"), "()Lbtn;");
    }

    static jobject getRiddenEntity(const jobject& obj) {
                
       const auto methodID = methodID_getRiddenEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeartCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getVehicleMaxHearts", "method_1744", "getHeartCount", "m_93022_"), "(Lbtn;)I");
    }

    static jint getHeartCount(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHeartCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHeartRows() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getVisibleVehicleHeartRows", "method_1733", "getHeartRows", "m_93012_"), "(I)I");
    }

    static jint getHeartRows(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getHeartRows();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_renderStatusBars() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderPlayerHealth", "method_1760", "renderStatusBars", "m_280173_"), "(Lfhz;)V");
    }

    static void renderStatusBars(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_renderStatusBars();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_renderArmor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderArmor", "method_58478", "renderArmor", "m_232354_"), "(Lfhz;Lcmx;IIII)V");
    }

    static void renderArmor(const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_renderArmor();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_renderHealthBar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderHearts", "method_37298", "renderHealthBar", "m_168688_"), "(Lfhz;Lcmx;IIIIFIIIZ)V");
    }

    static void renderHealthBar(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jfloat& arg6, const jint& arg7, const jint& arg8, const jint& arg9, const jboolean& arg10) {
                
       const auto methodID = methodID_renderHealthBar();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    };
    
    static jmethodID methodID_drawHeart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderHeart", "method_37299", "drawHeart", "m_280593_"), "(Lfhz;Lfhy$b;IIZZZ)V");
    }

    static void drawHeart(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jboolean& arg4, const jboolean& arg5, const jboolean& arg6) {
                
       const auto methodID = methodID_drawHeart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_renderFood() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderFood", "method_58477", "renderFood", "m_320133_"), "(Lfhz;Lcmx;II)V");
    }

    static void renderFood(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_renderFood();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_renderMountHealth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "renderVehicleHealth", "method_1741", "renderMountHealth", "m_280250_"), "(Lfhz;)V");
    }

    static void renderMountHealth(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_renderMountHealth();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_renderOverlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderTextureOverlay", "method_31977", "renderOverlay", "m_280155_"), "(Lfhz;Lakr;F)V");
    }

    static void renderOverlay(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_renderOverlay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_renderSpyglassOverlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSpyglassOverlay", "method_32598", "renderSpyglassOverlay", "m_280278_"), "(Lfhz;F)V");
    }

    static void renderSpyglassOverlay(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_renderSpyglassOverlay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateVignetteDarkness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateVignetteBrightness", "method_1731", "updateVignetteDarkness", "m_93020_"), "(Lbsr;)V");
    }

    static void updateVignetteDarkness(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateVignetteDarkness();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_renderVignetteOverlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderVignette", "method_1735", "renderVignetteOverlay", "m_280154_"), "(Lfhz;Lbsr;)V");
    }

    static void renderVignetteOverlay(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderVignetteOverlay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderPortalOverlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderPortalOverlay", "method_1746", "renderPortalOverlay", "m_280379_"), "(Lfhz;F)V");
    }

    static void renderPortalOverlay(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_renderPortalOverlay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderHotbarItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSlot", "method_1762", "renderHotbarItem", "m_280585_"), "(Lfhz;IILfgf;Lcmx;Lcuq;I)V");
    }

    static void renderHotbarItem(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jint& arg6) {
                
       const auto methodID = methodID_renderHotbarItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_39191", "tick", "m_193832_"), "(Z)V");
    }

    static void tick(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "tick", "method_1748", "tick", "m_93066_"), "()V");
    }

    static void _tick(const jobject& obj) {
                
       const auto methodID = methodID__tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickAutosaveIndicator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "tickAutosaveIndicator", "method_39193", "tickAutosaveIndicator", "m_193836_"), "()V");
    }

    static void tickAutosaveIndicator(const jobject& obj) {
                
       const auto methodID = methodID_tickAutosaveIndicator();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setRecordPlayingOverlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setNowPlaying", "method_1732", "setRecordPlayingOverlay", "m_93055_"), "(Lwz;)V");
    }

    static void setRecordPlayingOverlay(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setRecordPlayingOverlay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setOverlayMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOverlayMessage", "method_1758", "setOverlayMessage", "m_93063_"), "(Lwz;Z)V");
    }

    static void setOverlayMessage(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setOverlayMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setCanShowChatDisabledScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setChatDisabledByPlayerShown", "method_44354", "setCanShowChatDisabledScreen", "m_238397_"), "(Z)V");
    }

    static void setCanShowChatDisabledScreen(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setCanShowChatDisabledScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldShowChatDisabledScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isShowingChatDisabledByPlayer", "method_44353", "shouldShowChatDisabledScreen", "m_238351_"), "()Z");
    }

    static jboolean shouldShowChatDisabledScreen(const jobject& obj) {
                
       const auto methodID = methodID_shouldShowChatDisabledScreen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setTitleTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setTimes", "method_34001", "setTitleTicks", "m_168684_"), "(III)V");
    }

    static void setTitleTicks(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_setTitleTicks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setSubtitle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setSubtitle", "method_34002", "setSubtitle", "m_168711_"), "(Lwz;)V");
    }

    static void setSubtitle(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setSubtitle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setTitle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setTitle", "method_34004", "setTitle", "m_168714_"), "(Lwz;)V");
    }

    static void setTitle(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setTitle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clearTitle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "clear", "method_34003", "clearTitle", "m_168713_"), "()V");
    }

    static void clearTitle(const jobject& obj) {
                
       const auto methodID = methodID_clearTitle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChatHud() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getChat", "method_1743", "getChatHud", "m_93076_"), "()Lfin;");
    }

    static jobject getChatHud(const jobject& obj) {
                
       const auto methodID = methodID_getChatHud();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getGuiTicks", "method_1738", "getTicks", "m_93079_"), "()I");
    }

    static jint getTicks(const jobject& obj) {
                
       const auto methodID = methodID_getTicks();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTextRenderer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getFont", "method_1756", "getTextRenderer", "m_93082_"), "()Lfhx;");
    }

    static jobject getTextRenderer(const jobject& obj) {
                
       const auto methodID = methodID_getTextRenderer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpectatorHud() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getSpectatorGui", "method_1739", "getSpectatorHud", "m_93085_"), "()Lfkl;");
    }

    static jobject getSpectatorHud(const jobject& obj) {
                
       const auto methodID = methodID_getSpectatorHud();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayerListHud() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getTabList", "method_1750", "getPlayerListHud", "m_93088_"), "()Lfjn;");
    }

    static jobject getPlayerListHud(const jobject& obj) {
                
       const auto methodID = methodID_getPlayerListHud();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "onDisconnected", "method_1747", "clear", "m_93089_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBossBarHud() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getBossOverlay", "method_1740", "getBossBarHud", "m_93090_"), "()Lfil;");
    }

    static jobject getBossBarHud(const jobject& obj) {
                
       const auto methodID = methodID_getBossBarHud();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDebugHud() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getDebugOverlay", "method_53531", "getDebugHud", "m_295051_"), "()Lfiu;");
    }

    static jobject getDebugHud(const jobject& obj) {
                
       const auto methodID = methodID_getDebugHud();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_resetDebugHudChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "clearCache", "method_1745", "resetDebugHudChunk", "m_93091_"), "()V");
    }

    static void resetDebugHudChunk(const jobject& obj) {
                
       const auto methodID = methodID_resetDebugHudChunk();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_renderAutosaveIndicator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderSavingIndicator", "method_39192", "renderAutosaveIndicator", "m_280266_"), "(Lfhz;Lfgf;)V");
    }

    static void renderAutosaveIndicator(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_renderAutosaveIndicator();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_HUD_INGAMEHUD_HPP