// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_HUD_SPECTATOR_TEAMTELEPORTSPECTATORMENU_HPP
#define NET_MINECRAFT_CLIENT_GUI_HUD_SPECTATOR_TEAMTELEPORTSPECTATORMENU_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.hud.spectator.TeamTeleportSpectatorMenu
 * Remapped: ftx
 */
namespace TeamTeleportSpectatorMenu {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ftx", "net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory", "net/minecraft/class_540", "net/minecraft/client/gui/hud/spectator/TeamTeleportSpectatorMenu", "net/minecraft/src/C_3785_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.hud.spectator.TeamTeleportSpectatorMenu#TEXTURE
    [[maybe_unused]] static jobject get_field_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TELEPORT_TO_TEAM_SPRITE", "field_45583", "TEXTURE", "f_291215_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.spectator.TeamTeleportSpectatorMenu#TEXTURE
    [[maybe_unused]] static void set_field_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TELEPORT_TO_TEAM_SPRITE", "field_45583", "TEXTURE", "f_291215_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.spectator.TeamTeleportSpectatorMenu#TEAM_TELEPORT_TEXT
    [[maybe_unused]] static jobject get_field_TEAM_TELEPORT_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TELEPORT_TEXT", "field_26618", "TEAM_TELEPORT_TEXT", "f_101875_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.spectator.TeamTeleportSpectatorMenu#TEAM_TELEPORT_TEXT
    [[maybe_unused]] static void set_field_TEAM_TELEPORT_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TELEPORT_TEXT", "field_26618", "TEAM_TELEPORT_TEXT", "f_101875_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.spectator.TeamTeleportSpectatorMenu#PROMPT_TEXT
    [[maybe_unused]] static jobject get_field_PROMPT_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TELEPORT_PROMPT", "field_26619", "PROMPT_TEXT", "f_101876_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.spectator.TeamTeleportSpectatorMenu#PROMPT_TEXT
    [[maybe_unused]] static void set_field_PROMPT_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TELEPORT_PROMPT", "field_26619", "PROMPT_TEXT", "f_101876_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.spectator.TeamTeleportSpectatorMenu#commands
    static jobject get_field_commands(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "items", "field_3272", "commands", "f_101877_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.spectator.TeamTeleportSpectatorMenu#commands
    static void set_field_commands(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "items", "field_3272", "commands", "f_101877_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getCommands() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createTeamEntries", "method_47432", "getCommands", "m_257833_"), "(Lfgo;Leyg;)Ljava/util/List;");
    }

    static jobject getCommands(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getCommands();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getCommands() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getItems", "method_2780", "getCommands", "m_5919_"), "()Ljava/util/List;");
    }

    static jobject _getCommands(const jobject& obj) {
                
       const auto methodID = methodID__getCommands();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPrompt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getPrompt", "method_2781", "getPrompt", "m_5878_"), "()Lwz;");
    }

    static jobject getPrompt(const jobject& obj) {
                
       const auto methodID = methodID_getPrompt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_use() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "selectItem", "method_2783", "use", "m_7608_"), "(Lftr;)V");
    }

    static void use(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_use();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aU_", "getName", "method_16892", "getName", "m_7869_"), "()Lwz;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_renderIcon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderIcon", "method_2784", "renderIcon", "m_6252_"), "(Lfhz;FI)V");
    }

    static void renderIcon(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jint& arg2) {
                
       const auto methodID = methodID_renderIcon();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aV_", "isEnabled", "method_16893", "isEnabled", "m_7304_"), "()Z");
    }

    static jboolean isEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_HUD_SPECTATOR_TEAMTELEPORTSPECTATORMENU_HPP