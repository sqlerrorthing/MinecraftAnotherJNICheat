// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_HUD_SPECTATOR_SPECTATORMENU_HPP
#define NET_MINECRAFT_CLIENT_GUI_HUD_SPECTATOR_SPECTATORMENU_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.hud.spectator.SpectatorMenu
 * Remapped: ftr
 */
namespace SpectatorMenu {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ftr", "net/minecraft/client/gui/spectator/SpectatorMenu", "net/minecraft/class_531", "net/minecraft/client/gui/hud/spectator/SpectatorMenu", "net/minecraft/src/C_3776_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#CLOSE_TEXTURE
    [[maybe_unused]] static jobject get_field_CLOSE_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CLOSE_SPRITE", "field_45579", "CLOSE_TEXTURE", "f_290308_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#CLOSE_TEXTURE
    [[maybe_unused]] static void set_field_CLOSE_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CLOSE_SPRITE", "field_45579", "CLOSE_TEXTURE", "f_290308_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#SCROLL_LEFT_TEXTURE
    [[maybe_unused]] static jobject get_field_SCROLL_LEFT_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SCROLL_LEFT_SPRITE", "field_45580", "SCROLL_LEFT_TEXTURE", "f_291392_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#SCROLL_LEFT_TEXTURE
    [[maybe_unused]] static void set_field_SCROLL_LEFT_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SCROLL_LEFT_SPRITE", "field_45580", "SCROLL_LEFT_TEXTURE", "f_291392_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#SCROLL_RIGHT_TEXTURE
    [[maybe_unused]] static jobject get_field_SCROLL_RIGHT_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SCROLL_RIGHT_SPRITE", "field_45581", "SCROLL_RIGHT_TEXTURE", "f_290642_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#SCROLL_RIGHT_TEXTURE
    [[maybe_unused]] static void set_field_SCROLL_RIGHT_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SCROLL_RIGHT_SPRITE", "field_45581", "SCROLL_RIGHT_TEXTURE", "f_290642_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#CLOSE_COMMAND
    [[maybe_unused]] static jobject get_field_CLOSE_COMMAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CLOSE_ITEM", "field_3261", "CLOSE_COMMAND", "f_101772_"), "Lftt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#CLOSE_COMMAND
    [[maybe_unused]] static void set_field_CLOSE_COMMAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CLOSE_ITEM", "field_3261", "CLOSE_COMMAND", "f_101772_"), "Lftt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#PREVIOUS_PAGE_COMMAND
    [[maybe_unused]] static jobject get_field_PREVIOUS_PAGE_COMMAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SCROLL_LEFT", "field_3262", "PREVIOUS_PAGE_COMMAND", "f_101773_"), "Lftt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#PREVIOUS_PAGE_COMMAND
    [[maybe_unused]] static void set_field_PREVIOUS_PAGE_COMMAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SCROLL_LEFT", "field_3262", "PREVIOUS_PAGE_COMMAND", "f_101773_"), "Lftt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#NEXT_PAGE_COMMAND
    [[maybe_unused]] static jobject get_field_NEXT_PAGE_COMMAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SCROLL_RIGHT_ENABLED", "field_3256", "NEXT_PAGE_COMMAND", "f_101774_"), "Lftt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#NEXT_PAGE_COMMAND
    [[maybe_unused]] static void set_field_NEXT_PAGE_COMMAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SCROLL_RIGHT_ENABLED", "field_3256", "NEXT_PAGE_COMMAND", "f_101774_"), "Lftt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#DISABLED_NEXT_PAGE_COMMAND
    [[maybe_unused]] static jobject get_field_DISABLED_NEXT_PAGE_COMMAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SCROLL_RIGHT_DISABLED", "field_3259", "DISABLED_NEXT_PAGE_COMMAND", "f_101775_"), "Lftt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#DISABLED_NEXT_PAGE_COMMAND
    [[maybe_unused]] static void set_field_DISABLED_NEXT_PAGE_COMMAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SCROLL_RIGHT_DISABLED", "field_3259", "DISABLED_NEXT_PAGE_COMMAND", "f_101775_"), "Lftt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#CLOSE_SLOT
    [[maybe_unused]] static jint get_field_CLOSE_SLOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MAX_PER_PAGE", "field_32443", "CLOSE_SLOT", "f_170328_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#CLOSE_SLOT
    [[maybe_unused]] static void set_field_CLOSE_SLOT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MAX_PER_PAGE", "field_32443", "CLOSE_SLOT", "f_170328_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#CLOSE_TEXT
    [[maybe_unused]] static jobject get_field_CLOSE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "CLOSE_MENU_TEXT", "field_26613", "CLOSE_TEXT", "f_101776_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#CLOSE_TEXT
    [[maybe_unused]] static void set_field_CLOSE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "CLOSE_MENU_TEXT", "field_26613", "CLOSE_TEXT", "f_101776_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#PREVIOUS_PAGE_TEXT
    [[maybe_unused]] static jobject get_field_PREVIOUS_PAGE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PREVIOUS_PAGE_TEXT", "field_26614", "PREVIOUS_PAGE_TEXT", "f_101777_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#PREVIOUS_PAGE_TEXT
    [[maybe_unused]] static void set_field_PREVIOUS_PAGE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PREVIOUS_PAGE_TEXT", "field_26614", "PREVIOUS_PAGE_TEXT", "f_101777_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#NEXT_PAGE_TEXT
    [[maybe_unused]] static jobject get_field_NEXT_PAGE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "NEXT_PAGE_TEXT", "field_26615", "NEXT_PAGE_TEXT", "f_101778_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#NEXT_PAGE_TEXT
    [[maybe_unused]] static void set_field_NEXT_PAGE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "NEXT_PAGE_TEXT", "field_26615", "NEXT_PAGE_TEXT", "f_101778_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.hud.spectator.SpectatorMenu#BLANK_COMMAND
    [[maybe_unused]] static jobject get_field_BLANK_COMMAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY_SLOT", "field_3260", "BLANK_COMMAND", "f_101771_"), "Lftt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.hud.spectator.SpectatorMenu#BLANK_COMMAND
    [[maybe_unused]] static void set_field_BLANK_COMMAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY_SLOT", "field_3260", "BLANK_COMMAND", "f_101771_"), "Lftt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#closeCallback
    static jobject get_field_closeCallback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "listener", "field_3255", "closeCallback", "f_101779_"), "Lftu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#closeCallback
    static void set_field_closeCallback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "listener", "field_3255", "closeCallback", "f_101779_"), "Lftu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#currentGroup
    static jobject get_field_currentGroup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "category", "field_3258", "currentGroup", "f_101780_"), "Lfts;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#currentGroup
    static void set_field_currentGroup(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "category", "field_3258", "currentGroup", "f_101780_"), "Lfts;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#selectedSlot
    static jint get_field_selectedSlot(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "selectedSlot", "field_3254", "selectedSlot", "f_101781_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.spectator.SpectatorMenu#selectedSlot
    static void set_field_selectedSlot(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "selectedSlot", "field_3254", "selectedSlot", "f_101781_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#page
    static jint get_field_page(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "page", "field_3263", "page", "f_101782_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.gui.hud.spectator.SpectatorMenu#page
    static void set_field_page(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "page", "field_3263", "page", "f_101782_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getCommand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getItem", "method_2777", "getCommand", "m_101787_"), "(I)Lftt;");
    }

    static jobject getCommand(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getCommand();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCommands() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getItems", "method_2770", "getCommands", "m_101786_"), "()Ljava/util/List;");
    }

    static jobject getCommands(const jobject& obj) {
                
       const auto methodID = methodID_getCommands();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSelectedCommand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSelectedItem", "method_2774", "getSelectedCommand", "m_101796_"), "()Lftt;");
    }

    static jobject getSelectedCommand(const jobject& obj) {
                
       const auto methodID = methodID_getSelectedCommand();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCurrentGroup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getSelectedCategory", "method_2776", "getCurrentGroup", "m_101799_"), "()Lfts;");
    }

    static jobject getCurrentGroup(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentGroup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_useCommand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "selectSlot", "method_2771", "useCommand", "m_101797_"), "(I)V");
    }

    static void useCommand(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_useCommand();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "exit", "method_2779", "close", "m_101800_"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSelectedSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getSelectedSlot", "method_2773", "getSelectedSlot", "m_101801_"), "()I");
    }

    static jint getSelectedSlot(const jobject& obj) {
                
       const auto methodID = methodID_getSelectedSlot();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_selectElement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "selectCategory", "method_2778", "selectElement", "m_101794_"), "(Lfts;)V");
    }

    static void selectElement(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_selectElement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCurrentState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getCurrentPage", "method_2772", "getCurrentState", "m_101802_"), "()Lftv;");
    }

    static jobject getCurrentState(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_HUD_SPECTATOR_SPECTATORMENU_HPP