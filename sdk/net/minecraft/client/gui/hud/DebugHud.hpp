// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_HUD_DEBUGHUD_HPP
#define NET_MINECRAFT_CLIENT_GUI_HUD_DEBUGHUD_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.hud.DebugHud
 * Remapped: fiu
 */
namespace DebugHud {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fiu", "net/minecraft/client/gui/components/DebugScreenOverlay", "net/minecraft/class_340", "net/minecraft/client/gui/hud/DebugHud", "net/minecraft/src/C_3462_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.hud.DebugHud#TEXT_COLOR
    [[maybe_unused]] static jint get_field_TEXT_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "COLOR_GREY", "field_32187", "TEXT_COLOR", "f_168988_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#TEXT_COLOR
    [[maybe_unused]] static void set_field_TEXT_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "COLOR_GREY", "field_32187", "TEXT_COLOR", "f_168988_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.DebugHud#field_32188
    [[maybe_unused]] static jint get_field_field_32188() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MARGIN_RIGHT", "field_32188", "field_32188", "f_168989_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#field_32188
    [[maybe_unused]] static void set_field_field_32188(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MARGIN_RIGHT", "field_32188", "field_32188", "f_168989_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.DebugHud#field_32189
    [[maybe_unused]] static jint get_field_field_32189() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MARGIN_LEFT", "field_32189", "field_32189", "f_168990_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#field_32189
    [[maybe_unused]] static void set_field_field_32189(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MARGIN_LEFT", "field_32189", "field_32189", "f_168990_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.DebugHud#field_32190
    [[maybe_unused]] static jint get_field_field_32190() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MARGIN_TOP", "field_32190", "field_32190", "f_168991_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#field_32190
    [[maybe_unused]] static void set_field_field_32190(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MARGIN_TOP", "field_32190", "field_32190", "f_168991_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.DebugHud#HEIGHT_MAP_TYPES
    [[maybe_unused]] static jobject get_field_HEIGHT_MAP_TYPES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "HEIGHTMAP_NAMES", "field_19274", "HEIGHT_MAP_TYPES", "f_94029_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#HEIGHT_MAP_TYPES
    [[maybe_unused]] static void set_field_HEIGHT_MAP_TYPES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "HEIGHTMAP_NAMES", "field_19274", "HEIGHT_MAP_TYPES", "f_94029_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "minecraft", "field_2079", "client", "f_94030_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "minecraft", "field_2079", "client", "f_94030_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#allocationRateCalculator
    static jobject get_field_allocationRateCalculator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "allocationRateCalculator", "field_38985", "allocationRateCalculator", "f_232506_"), "Lfiu$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#allocationRateCalculator
    static void set_field_allocationRateCalculator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "allocationRateCalculator", "field_38985", "allocationRateCalculator", "f_232506_"), "Lfiu$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#textRenderer
    static jobject get_field_textRenderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "font", "field_2081", "textRenderer", "f_94031_"), "Lfhx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#textRenderer
    static void set_field_textRenderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "font", "field_2081", "textRenderer", "f_94031_"), "Lfhx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#blockHit
    static jobject get_field_blockHit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "block", "field_2082", "blockHit", "f_94032_"), "Lexa;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#blockHit
    static void set_field_blockHit(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "block", "field_2082", "blockHit", "f_94032_"), "Lexa;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#fluidHit
    static jobject get_field_fluidHit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "liquid", "field_2083", "fluidHit", "f_94033_"), "Lexa;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#fluidHit
    static void set_field_fluidHit(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "liquid", "field_2083", "fluidHit", "f_94033_"), "Lexa;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "lastPos", "field_2085", "pos", "f_94034_"), "Ldcd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "lastPos", "field_2085", "pos", "f_94034_"), "Ldcd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#chunk
    static jobject get_field_chunk(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "clientChunk", "field_2084", "chunk", "f_94035_"), "Ldvi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#chunk
    static void set_field_chunk(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "clientChunk", "field_2084", "chunk", "f_94035_"), "Ldvi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#chunkFuture
    static jobject get_field_chunkFuture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "serverChunk", "field_2080", "chunkFuture", "f_94036_"), "Ljava/util/concurrent/CompletableFuture;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#chunkFuture
    static void set_field_chunkFuture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "serverChunk", "field_2080", "chunkFuture", "f_94036_"), "Ljava/util/concurrent/CompletableFuture;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#showDebugHud
    static jboolean get_field_showDebugHud(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "renderDebug", "field_45988", "showDebugHud", "f_291101_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#showDebugHud
    static void set_field_showDebugHud(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "renderDebug", "field_45988", "showDebugHud", "f_291101_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#renderingChartVisible
    static jboolean get_field_renderingChartVisible(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "renderProfilerChart", "field_45989", "renderingChartVisible", "f_291871_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#renderingChartVisible
    static void set_field_renderingChartVisible(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "renderProfilerChart", "field_45989", "renderingChartVisible", "f_291871_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#renderingAndTickChartsVisible
    static jboolean get_field_renderingAndTickChartsVisible(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "renderFpsCharts", "field_45990", "renderingAndTickChartsVisible", "f_290551_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#renderingAndTickChartsVisible
    static void set_field_renderingAndTickChartsVisible(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "renderFpsCharts", "field_45990", "renderingAndTickChartsVisible", "f_290551_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#packetSizeAndPingChartsVisible
    static jboolean get_field_packetSizeAndPingChartsVisible(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "renderNetworkCharts", "field_45991", "packetSizeAndPingChartsVisible", "f_291005_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#packetSizeAndPingChartsVisible
    static void set_field_packetSizeAndPingChartsVisible(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "renderNetworkCharts", "field_45991", "packetSizeAndPingChartsVisible", "f_291005_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#frameNanosLog
    static jobject get_field_frameNanosLog(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "frameTimeLogger", "field_45992", "frameNanosLog", "f_291039_"), "Lblr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#frameNanosLog
    static void set_field_frameNanosLog(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "frameTimeLogger", "field_45992", "frameNanosLog", "f_291039_"), "Lblr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#tickNanosLog
    static jobject get_field_tickNanosLog(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "tickTimeLogger", "field_45993", "tickNanosLog", "f_291524_"), "Lblr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#tickNanosLog
    static void set_field_tickNanosLog(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "tickTimeLogger", "field_45993", "tickNanosLog", "f_291524_"), "Lblr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#pingLog
    static jobject get_field_pingLog(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "pingLogger", "field_45994", "pingLog", "f_290653_"), "Lblr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#pingLog
    static void set_field_pingLog(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "pingLogger", "field_45994", "pingLog", "f_290653_"), "Lblr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#packetSizeLog
    static jobject get_field_packetSizeLog(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "bandwidthLogger", "field_45995", "packetSizeLog", "f_290862_"), "Lblr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#packetSizeLog
    static void set_field_packetSizeLog(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "bandwidthLogger", "field_45995", "packetSizeLog", "f_290862_"), "Lblr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#receivedDebugSamples
    static jobject get_field_receivedDebugSamples(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "remoteSupportingLoggers", "field_48931", "receivedDebugSamples", "f_314774_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#receivedDebugSamples
    static void set_field_receivedDebugSamples(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "remoteSupportingLoggers", "field_48931", "receivedDebugSamples", "f_314774_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#renderingChart
    static jobject get_field_renderingChart(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "fpsChart", "field_45910", "renderingChart", "f_291857_"), "Lfkd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#renderingChart
    static void set_field_renderingChart(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "fpsChart", "field_45910", "renderingChart", "f_291857_"), "Lfkd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#tickChart
    static jobject get_field_tickChart(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "tpsChart", "field_45913", "tickChart", "f_291179_"), "Lfkf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#tickChart
    static void set_field_tickChart(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "tpsChart", "field_45913", "tickChart", "f_291179_"), "Lfkf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#pingChart
    static jobject get_field_pingChart(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "pingChart", "field_45911", "pingChart", "f_291349_"), "Lfke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#pingChart
    static void set_field_pingChart(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "pingChart", "field_45911", "pingChart", "f_291349_"), "Lfke;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud#packetSizeChart
    static jobject get_field_packetSizeChart(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "bandwidthChart", "field_45912", "packetSizeChart", "f_291508_"), "Lfkc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud#packetSizeChart
    static void set_field_packetSizeChart(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "bandwidthChart", "field_45912", "packetSizeChart", "f_291508_"), "Lfkc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_resetChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clearChunkCache", "method_1842", "resetChunk", "m_94040_"), "()V");
    }

    static void resetChunk(const jobject& obj) {
                
       const auto methodID = methodID_resetChunk();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_1846", "render", "m_94056_"), "(Lfhz;)V");
    }

    static void render(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drawLeftText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "drawGameInformation", "method_1847", "drawLeftText", "m_280186_"), "(Lfhz;)V");
    }

    static void drawLeftText(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_drawLeftText();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drawRightText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "drawSystemInformation", "method_1848", "drawRightText", "m_280532_"), "(Lfhz;)V");
    }

    static void drawRightText(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_drawRightText();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drawText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderLines", "method_51745", "drawText", "m_286013_"), "(Lfhz;Ljava/util/List;Z)V");
    }

    static void drawText(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_drawText();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getLeftText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getGameInformation", "method_1835", "getLeftText", "m_94075_"), "()Ljava/util/List;");
    }

    static jobject getLeftText(const jobject& obj) {
                
       const auto methodID = methodID_getLeftText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBiomeString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "printBiome", "method_40205", "getBiomeString", "m_205374_"), "(Ljm;)Ljava/lang/String;");
    }

    static jobject getBiomeString(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getBiomeString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getServerWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getServerLevel", "method_20603", "getServerWorld", "m_94081_"), "()Laqu;");
    }

    static jobject getServerWorld(const jobject& obj) {
                
       const auto methodID = methodID_getServerWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServerWorldDebugString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getServerChunkStats", "method_27871", "getServerWorldDebugString", "m_94082_"), "()Ljava/lang/String;");
    }

    static jobject getServerWorldDebugString(const jobject& obj) {
                
       const auto methodID = methodID_getServerWorldDebugString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "getLevel", "method_1840", "getWorld", "m_94083_"), "()Ldcw;");
    }

    static jobject getWorld(const jobject& obj) {
                
       const auto methodID = methodID_getWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getServerChunk", "method_1834", "getChunk", "m_94084_"), "()Ldvi;");
    }

    static jobject getChunk(const jobject& obj) {
                
       const auto methodID = methodID_getChunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getClientChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getClientChunk", "method_1836", "getClientChunk", "m_94085_"), "()Ldvi;");
    }

    static jobject getClientChunk(const jobject& obj) {
                
       const auto methodID = methodID_getClientChunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRightText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getSystemInformation", "method_1839", "getRightText", "m_94078_"), "()Ljava/util/List;");
    }

    static jobject getRightText(const jobject& obj) {
                
       const auto methodID = methodID_getRightText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_propertyToString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPropertyValueString", "method_1845", "propertyToString", "m_94071_"), "(Ljava/util/Map$Entry;)Ljava/lang/String;");
    }

    static jobject propertyToString(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_propertyToString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toMiB() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "bytesToMegabytes", "method_1838", "toMiB", "m_94050_"), "(J)J");
    }

    static jlong toMiB(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toMiB();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_shouldShowDebugHud() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "showDebugScreen", "method_53536", "shouldShowDebugHud", "m_294516_"), "()Z");
    }

    static jboolean shouldShowDebugHud(const jobject& obj) {
                
       const auto methodID = methodID_shouldShowDebugHud();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldShowRenderingChart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "showProfilerChart", "method_53537", "shouldShowRenderingChart", "m_295669_"), "()Z");
    }

    static jboolean shouldShowRenderingChart(const jobject& obj) {
                
       const auto methodID = methodID_shouldShowRenderingChart();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldShowPacketSizeAndPingCharts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "showNetworkCharts", "method_53538", "shouldShowPacketSizeAndPingCharts", "m_295643_"), "()Z");
    }

    static jboolean shouldShowPacketSizeAndPingCharts(const jobject& obj) {
                
       const auto methodID = methodID_shouldShowPacketSizeAndPingCharts();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldRenderTickCharts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "showFpsCharts", "method_56829", "shouldRenderTickCharts", "m_321865_"), "()Z");
    }

    static jboolean shouldRenderTickCharts(const jobject& obj) {
                
       const auto methodID = methodID_shouldRenderTickCharts();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_toggleDebugHud() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "toggleOverlay", "method_53539", "toggleDebugHud", "m_293034_"), "()V");
    }

    static void toggleDebugHud(const jobject& obj) {
                
       const auto methodID = methodID_toggleDebugHud();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_togglePacketSizeAndPingCharts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "toggleNetworkCharts", "method_53540", "togglePacketSizeAndPingCharts", "m_295292_"), "()V");
    }

    static void togglePacketSizeAndPingCharts(const jobject& obj) {
                
       const auto methodID = methodID_togglePacketSizeAndPingCharts();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_toggleRenderingAndTickCharts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "toggleFpsCharts", "method_53541", "toggleRenderingAndTickCharts", "m_294611_"), "()V");
    }

    static void toggleRenderingAndTickCharts(const jobject& obj) {
                
       const auto methodID = methodID_toggleRenderingAndTickCharts();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_toggleRenderingChart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "toggleProfilerChart", "method_53542", "toggleRenderingChart", "m_293481_"), "()V");
    }

    static void toggleRenderingChart(const jobject& obj) {
                
       const auto methodID = methodID_toggleRenderingChart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_pushToFrameLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "logFrameDuration", "method_53534", "pushToFrameLog", "m_294107_"), "(J)V");
    }

    static void pushToFrameLog(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_pushToFrameLog();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTickNanosLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getTickTimeLogger", "method_56577", "getTickNanosLog", "m_324537_"), "()Lblr;");
    }

    static jobject getTickNanosLog(const jobject& obj) {
                
       const auto methodID = methodID_getTickNanosLog();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPingLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getPingLogger", "method_53543", "getPingLog", "m_294664_"), "()Lblr;");
    }

    static jobject getPingLog(const jobject& obj) {
                
       const auto methodID = methodID_getPingLog();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPacketSizeLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getBandwidthLogger", "method_53544", "getPacketSizeLog", "m_293273_"), "()Lblr;");
    }

    static jobject getPacketSizeLog(const jobject& obj) {
                
       const auto methodID = methodID_getPacketSizeLog();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "logRemoteSample", "method_56828", "set", "m_323707_"), "([JLbls;)V");
    }

    static void set(const jobject& obj, const jarray& arg0, const jlong& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_set();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "reset", "method_53545", "clear", "m_294940_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_HUD_DEBUGHUD_HPP