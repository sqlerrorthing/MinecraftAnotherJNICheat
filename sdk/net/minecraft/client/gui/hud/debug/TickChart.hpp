// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_HUD_DEBUG_TICKCHART_HPP
#define NET_MINECRAFT_CLIENT_GUI_HUD_DEBUG_TICKCHART_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.hud.debug.TickChart
 * Remapped: fkf
 */
namespace TickChart {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fkf", "net/minecraft/client/gui/components/debugchart/TpsDebugChart", "net/minecraft/class_8759", "net/minecraft/client/gui/hud/debug/TickChart", "net/minecraft/src/C_290133_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.hud.debug.TickChart#field_45935
    [[maybe_unused]] static jint get_field_field_45935() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RED", "field_45935", "field_45935", "f_290520_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.TickChart#field_45935
    [[maybe_unused]] static void set_field_field_45935(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RED", "field_45935", "field_45935", "f_290520_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.debug.TickChart#field_45936
    [[maybe_unused]] static jint get_field_field_45936() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "YELLOW", "field_45936", "field_45936", "f_290623_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.TickChart#field_45936
    [[maybe_unused]] static void set_field_field_45936(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "YELLOW", "field_45936", "field_45936", "f_290623_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.debug.TickChart#field_45937
    [[maybe_unused]] static jint get_field_field_45937() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "GREEN", "field_45937", "field_45937", "f_290394_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.TickChart#field_45937
    [[maybe_unused]] static void set_field_field_45937(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "GREEN", "field_45937", "field_45937", "f_290394_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.debug.TickChart#field_48763
    [[maybe_unused]] static jint get_field_field_48763() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "TICK_METHOD_COLOR", "field_48763", "field_48763", "f_316482_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.TickChart#field_48763
    [[maybe_unused]] static void set_field_field_48763(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "TICK_METHOD_COLOR", "field_48763", "field_48763", "f_316482_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.debug.TickChart#field_48764
    [[maybe_unused]] static jint get_field_field_48764() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TASK_COLOR", "field_48764", "field_48764", "f_315584_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.TickChart#field_48764
    [[maybe_unused]] static void set_field_field_48764(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TASK_COLOR", "field_48764", "field_48764", "f_315584_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.debug.TickChart#field_48765
    [[maybe_unused]] static jint get_field_field_48765() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "OTHER_COLOR", "field_48765", "field_48765", "f_316843_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.TickChart#field_48765
    [[maybe_unused]] static void set_field_field_48765(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "OTHER_COLOR", "field_48765", "field_48765", "f_316843_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.debug.TickChart#millisPerTickSupplier
    static jobject get_field_millisPerTickSupplier(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "msptSupplier", "field_47117", "millisPerTickSupplier", "f_303738_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.TickChart#millisPerTickSupplier
    static void set_field_millisPerTickSupplier(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "msptSupplier", "field_47117", "millisPerTickSupplier", "f_303738_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_renderThresholds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "renderAdditionalLinesAndLabels", "method_53473", "renderThresholds", "m_293086_"), "(Lfhz;III)V");
    }

    static void renderThresholds(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_renderThresholds();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawOverlayBar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "drawAdditionalDimensions", "method_56581", "drawOverlayBar", "m_321123_"), "(Lfhz;III)V");
    }

    static void drawOverlayBar(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_drawOverlayBar();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getValueForAggregation", "method_56579", "get", "m_320595_"), "(I)J");
    }

    static jlong get(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_format() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "toDisplayString", "method_53468", "format", "m_293688_"), "(D)Ljava/lang/String;");
    }

    static jobject format(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_format();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSampleHeight", "method_53475", "getHeight", "m_292631_"), "(D)I");
    }

    static jint getHeight(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_getHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSampleColor", "method_53471", "getColor", "m_292871_"), "(J)I");
    }

    static jint getColor(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_getColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toMillisecondsPerTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "toMilliseconds", "method_53482", "toMillisecondsPerTick", "m_295771_"), "(D)D");
    }

    static jdouble toMillisecondsPerTick(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toMillisecondsPerTick();
       return MinecraftSDK::env->CallStaticDoubleMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_HUD_DEBUG_TICKCHART_HPP