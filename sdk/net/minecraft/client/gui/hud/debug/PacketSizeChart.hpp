// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_HUD_DEBUG_PACKETSIZECHART_HPP
#define NET_MINECRAFT_CLIENT_GUI_HUD_DEBUG_PACKETSIZECHART_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.hud.debug.PacketSizeChart
 * Remapped: fkc
 */
namespace PacketSizeChart {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fkc", "net/minecraft/client/gui/components/debugchart/BandwidthDebugChart", "net/minecraft/class_8756", "net/minecraft/client/gui/hud/debug/PacketSizeChart", "net/minecraft/src/C_290070_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.hud.debug.PacketSizeChart#field_45920
    [[maybe_unused]] static jint get_field_field_45920() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "MIN_COLOR", "field_45920", "field_45920", "f_291018_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.PacketSizeChart#field_45920
    [[maybe_unused]] static void set_field_field_45920(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "MIN_COLOR", "field_45920", "field_45920", "f_291018_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.debug.PacketSizeChart#field_45921
    [[maybe_unused]] static jint get_field_field_45921() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MID_COLOR", "field_45921", "field_45921", "f_291625_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.PacketSizeChart#field_45921
    [[maybe_unused]] static void set_field_field_45921(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MID_COLOR", "field_45921", "field_45921", "f_291625_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.debug.PacketSizeChart#field_45922
    [[maybe_unused]] static jint get_field_field_45922() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MAX_COLOR", "field_45922", "field_45922", "f_291544_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.PacketSizeChart#field_45922
    [[maybe_unused]] static void set_field_field_45922(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MAX_COLOR", "field_45922", "field_45922", "f_291544_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.debug.PacketSizeChart#field_45923
    [[maybe_unused]] static jint get_field_field_45923() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "KILOBYTE", "field_45923", "field_45923", "f_291267_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.PacketSizeChart#field_45923
    [[maybe_unused]] static void set_field_field_45923(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "KILOBYTE", "field_45923", "field_45923", "f_291267_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.debug.PacketSizeChart#field_45924
    [[maybe_unused]] static jint get_field_field_45924() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MEGABYTE", "field_45924", "field_45924", "f_291653_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.PacketSizeChart#field_45924
    [[maybe_unused]] static void set_field_field_45924(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MEGABYTE", "field_45924", "field_45924", "f_291653_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.debug.PacketSizeChart#field_45925
    [[maybe_unused]] static jint get_field_field_45925() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "CHART_TOP_VALUE", "field_45925", "field_45925", "f_291311_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.debug.PacketSizeChart#field_45925
    [[maybe_unused]] static void set_field_field_45925(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "CHART_TOP_VALUE", "field_45925", "field_45925", "f_291311_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_renderThresholds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "renderAdditionalLinesAndLabels", "method_53473", "renderThresholds", "m_293086_"), "(Lfhz;III)V");
    }

    static void renderThresholds(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_renderThresholds();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawSizeBar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "drawLabeledLineAtValue", "method_53476", "drawSizeBar", "m_292803_"), "(Lfhz;IIII)V");
    }

    static void drawSizeBar(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_drawSizeBar();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID__drawSizeBar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "drawLineWithLabel", "method_53477", "drawSizeBar", "m_295221_"), "(Lfhz;IIILjava/lang/String;)V");
    }

    static void _drawSizeBar(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jobject& arg4) {
                
       const auto methodID = methodID__drawSizeBar();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_format() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "toDisplayString", "method_53468", "format", "m_293688_"), "(D)Ljava/lang/String;");
    }

    static jobject format(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_format();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_formatBytesPerSecond() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "toDisplayStringInternal", "method_53478", "formatBytesPerSecond", "m_292882_"), "(D)Ljava/lang/String;");
    }

    static jobject formatBytesPerSecond(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_formatBytesPerSecond();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSampleHeight", "method_53475", "getHeight", "m_292631_"), "(D)I");
    }

    static jint getHeight(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_getHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_calculateHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getSampleHeightInternal", "method_53479", "calculateHeight", "m_293471_"), "(D)I");
    }

    static jint calculateHeight(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_calculateHeight();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSampleColor", "method_53471", "getColor", "m_292871_"), "(J)I");
    }

    static jint getColor(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_getColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toBytesPerSecond() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "toBytesPerSecond", "method_53480", "toBytesPerSecond", "m_294915_"), "(D)D");
    }

    static jdouble toBytesPerSecond(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toBytesPerSecond();
       return MinecraftSDK::env->CallStaticDoubleMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_HUD_DEBUG_PACKETSIZECHART_HPP