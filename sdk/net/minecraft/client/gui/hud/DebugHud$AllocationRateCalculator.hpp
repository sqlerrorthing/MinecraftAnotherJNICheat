// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_HUD_DEBUGHUD$ALLOCATIONRATECALCULATOR_HPP
#define NET_MINECRAFT_CLIENT_GUI_HUD_DEBUGHUD$ALLOCATIONRATECALCULATOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator
 * Remapped: fiu$a
 */
namespace DebugHud$AllocationRateCalculator {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fiu$a", "net/minecraft/client/gui/components/DebugScreenOverlay$AllocationRateCalculator", "net/minecraft/class_340$class_7412", "net/minecraft/client/gui/hud/DebugHud$AllocationRateCalculator", "net/minecraft/src/C_3462_$C_213373_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator#INTERVAL
    [[maybe_unused]] static jint get_field_INTERVAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UPDATE_INTERVAL_MS", "field_38986", "INTERVAL", "f_232507_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator#INTERVAL
    [[maybe_unused]] static void set_field_INTERVAL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UPDATE_INTERVAL_MS", "field_38986", "INTERVAL", "f_232507_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator#GARBAGE_COLLECTORS
    [[maybe_unused]] static jobject get_field_GARBAGE_COLLECTORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GC_MBEANS", "field_38987", "GARBAGE_COLLECTORS", "f_232508_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator#GARBAGE_COLLECTORS
    [[maybe_unused]] static void set_field_GARBAGE_COLLECTORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GC_MBEANS", "field_38987", "GARBAGE_COLLECTORS", "f_232508_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator#lastCalculated
    static jlong get_field_lastCalculated(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "lastTime", "field_38988", "lastCalculated", "f_232509_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator#lastCalculated
    static void set_field_lastCalculated(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "lastTime", "field_38988", "lastCalculated", "f_232509_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator#allocatedBytes
    static jlong get_field_allocatedBytes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "lastHeapUsage", "field_38989", "allocatedBytes", "f_232510_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator#allocatedBytes
    static void set_field_allocatedBytes(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "lastHeapUsage", "field_38989", "allocatedBytes", "f_232510_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator#collectionCount
    static jlong get_field_collectionCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "lastGcCounts", "field_38990", "collectionCount", "f_232511_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator#collectionCount
    static void set_field_collectionCount(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "lastGcCounts", "field_38990", "collectionCount", "f_232511_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator#allocationRate
    static jlong get_field_allocationRate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lastRate", "field_38991", "allocationRate", "f_232512_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.hud.DebugHud$AllocationRateCalculator#allocationRate
    static void set_field_allocationRate(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lastRate", "field_38991", "allocationRate", "f_232512_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "bytesAllocatedPerSecond", "method_43448", "get", "m_232516_"), "(J)J");
    }

    static jlong get(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCollectionCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "gcCounts", "method_43447", "getCollectionCount", "m_232515_"), "()J");
    }

    static jlong getCollectionCount() {
       const auto clazz = self();
       const auto methodID = methodID_getCollectionCount();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_HUD_DEBUGHUD$ALLOCATIONRATECALCULATOR_HPP