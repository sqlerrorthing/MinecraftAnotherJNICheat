// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_DRAWCONTEXT$SCISSORSTACK_HPP
#define NET_MINECRAFT_CLIENT_GUI_DRAWCONTEXT$SCISSORSTACK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.DrawContext$ScissorStack
 * Remapped: fhz$a
 */
namespace DrawContext$ScissorStack {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fhz$a", "net/minecraft/client/gui/GuiGraphics$ScissorStack", "net/minecraft/class_332$class_8214", "net/minecraft/client/gui/DrawContext$ScissorStack", "net/minecraft/src/C_279497_$C_279504_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.gui.DrawContext$ScissorStack#stack
    static jobject get_field_stack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "stack", "field_43099", "stack", "f_279656_"), "Ljava/util/Deque;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.DrawContext$ScissorStack#stack
    static void set_field_stack(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "stack", "field_43099", "stack", "f_279656_"), "Ljava/util/Deque;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_push() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "push", "method_49700", "push", "m_280318_"), "(Lfms;)Lfms;");
    }

    static jobject push(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_push();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_pop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pop", "method_49699", "pop", "m_280462_"), "()Lfms;");
    }

    static jobject pop(const jobject& obj) {
                
       const auto methodID = methodID_pop();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "containsPoint", "method_58136", "contains", "m_319411_"), "(II)Z");
    }

    static jboolean contains(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_DRAWCONTEXT$SCISSORSTACK_HPP