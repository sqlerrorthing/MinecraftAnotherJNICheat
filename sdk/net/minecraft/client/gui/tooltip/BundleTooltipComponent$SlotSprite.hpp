// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_TOOLTIP_BUNDLETOOLTIPCOMPONENT$SLOTSPRITE_HPP
#define NET_MINECRAFT_CLIENT_GUI_TOOLTIP_BUNDLETOOLTIPCOMPONENT$SLOTSPRITE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.tooltip.BundleTooltipComponent$SlotSprite
 * Remapped: fql$a
 */
namespace BundleTooltipComponent$SlotSprite {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fql$a", "net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture", "net/minecraft/class_5682$class_5771", "net/minecraft/client/gui/tooltip/BundleTooltipComponent$SlotSprite", "net/minecraft/src/C_141630_$C_141631_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.gui.tooltip.BundleTooltipComponent$SlotSprite#BLOCKED_SLOT
    [[maybe_unused]] static jobject get_field_BLOCKED_SLOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLOCKED_SLOT", "field_28362", "BLOCKED_SLOT", "BLOCKED_SLOT"), "Lfql$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.tooltip.BundleTooltipComponent$SlotSprite#BLOCKED_SLOT
    [[maybe_unused]] static void set_field_BLOCKED_SLOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLOCKED_SLOT", "field_28362", "BLOCKED_SLOT", "BLOCKED_SLOT"), "Lfql$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gui.tooltip.BundleTooltipComponent$SlotSprite#SLOT
    [[maybe_unused]] static jobject get_field_SLOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SLOT", "field_28361", "SLOT", "SLOT"), "Lfql$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.tooltip.BundleTooltipComponent$SlotSprite#SLOT
    [[maybe_unused]] static void set_field_SLOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SLOT", "field_28361", "SLOT", "SLOT"), "Lfql$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.client.gui.tooltip.BundleTooltipComponent$SlotSprite#texture
    static jobject get_field_texture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "sprite", "field_45507", "texture", "f_290765_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.tooltip.BundleTooltipComponent$SlotSprite#texture
    static void set_field_texture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "sprite", "field_45507", "texture", "f_290765_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gui.tooltip.BundleTooltipComponent$SlotSprite#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "w", "field_28370", "width", "f_169921_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.tooltip.BundleTooltipComponent$SlotSprite#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "w", "field_28370", "width", "f_169921_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gui.tooltip.BundleTooltipComponent$SlotSprite#height
    static jint get_field_height(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "h", "field_28371", "height", "f_169922_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.tooltip.BundleTooltipComponent$SlotSprite#height
    static void set_field_height(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "h", "field_28371", "height", "f_169922_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lfql$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lfql$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_TOOLTIP_BUNDLETOOLTIPCOMPONENT$SLOTSPRITE_HPP