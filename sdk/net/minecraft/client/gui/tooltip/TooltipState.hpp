// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_TOOLTIP_TOOLTIPSTATE_HPP
#define NET_MINECRAFT_CLIENT_GUI_TOOLTIP_TOOLTIPSTATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.tooltip.TooltipState
 * Remapped: fka
 */
namespace TooltipState {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fka", "net/minecraft/client/gui/components/WidgetTooltipHolder", "net/minecraft/class_9110", "net/minecraft/client/gui/tooltip/TooltipState", "net/minecraft/src/C_313571_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.gui.tooltip.TooltipState#tooltip
    static jobject get_field_tooltip(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "tooltip", "field_48390", "tooltip", "f_314197_"), "Lfjx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.tooltip.TooltipState#tooltip
    static void set_field_tooltip(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "tooltip", "field_48390", "tooltip", "f_314197_"), "Lfjx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.tooltip.TooltipState#delay
    static jobject get_field_delay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "delay", "field_48391", "delay", "f_316434_"), "Ljava/time/Duration;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.tooltip.TooltipState#delay
    static void set_field_delay(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "delay", "field_48391", "delay", "f_316434_"), "Ljava/time/Duration;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.tooltip.TooltipState#renderCheckTime
    static jlong get_field_renderCheckTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "displayStartTime", "field_48392", "renderCheckTime", "f_316664_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.tooltip.TooltipState#renderCheckTime
    static void set_field_renderCheckTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "displayStartTime", "field_48392", "renderCheckTime", "f_316664_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.tooltip.TooltipState#prevShouldRender
    static jboolean get_field_prevShouldRender(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "wasDisplayed", "field_48393", "prevShouldRender", "f_316484_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.tooltip.TooltipState#prevShouldRender
    static void set_field_prevShouldRender(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "wasDisplayed", "field_48393", "prevShouldRender", "f_316484_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_setDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDelay", "method_56141", "setDelay", "m_320201_"), "(Ljava/time/Duration;)V");
    }

    static void setDelay(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDelay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "set", "method_56138", "setTooltip", "m_321872_"), "(Lfjx;)V");
    }

    static void setTooltip(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setTooltip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_56137", "getTooltip", "m_323637_"), "()Lfjx;");
    }

    static jobject getTooltip(const jobject& obj) {
                
       const auto methodID = methodID_getTooltip();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "refreshTooltipForNextRenderPass", "method_56142", "render", "m_323585_"), "(ZZLfms;)V");
    }

    static void render(const jobject& obj, const jboolean& arg0, const jboolean& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createPositioner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTooltipPositioner", "method_56140", "createPositioner", "m_323619_"), "(Lfms;ZZ)Lfqo;");
    }

    static jobject createPositioner(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_createPositioner();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_appendNarrations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateNarration", "method_56139", "appendNarrations", "m_322101_"), "(Lfmi;)V");
    }

    static void appendNarrations(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_appendNarrations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_TOOLTIP_TOOLTIPSTATE_HPP