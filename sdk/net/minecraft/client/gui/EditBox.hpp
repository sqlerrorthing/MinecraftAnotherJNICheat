// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GUI_EDITBOX_HPP
#define NET_MINECRAFT_CLIENT_GUI_EDITBOX_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gui.EditBox
 * Remapped: fjh
 */
namespace EditBox {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fjh", "net/minecraft/client/gui/components/MultilineTextField", "net/minecraft/class_7530", "net/minecraft/client/gui/EditBox", "net/minecraft/src/C_238452_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.gui.EditBox#UNLIMITED_LENGTH
    [[maybe_unused]] static jint get_field_UNLIMITED_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_CHARACTER_LIMIT", "field_39511", "UNLIMITED_LENGTH", "f_238667_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gui.EditBox#UNLIMITED_LENGTH
    [[maybe_unused]] static void set_field_UNLIMITED_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_CHARACTER_LIMIT", "field_39511", "UNLIMITED_LENGTH", "f_238667_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gui.EditBox#CURSOR_WIDTH
    [[maybe_unused]] static jint get_field_CURSOR_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LINE_SEEK_PIXEL_BIAS", "field_39512", "CURSOR_WIDTH", "f_238620_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.EditBox#CURSOR_WIDTH
    [[maybe_unused]] static void set_field_CURSOR_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LINE_SEEK_PIXEL_BIAS", "field_39512", "CURSOR_WIDTH", "f_238620_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.EditBox#textRenderer
    static jobject get_field_textRenderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "font", "field_39513", "textRenderer", "f_238538_"), "Lfhx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.EditBox#textRenderer
    static void set_field_textRenderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "font", "field_39513", "textRenderer", "f_238538_"), "Lfhx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.EditBox#lines
    static jobject get_field_lines(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "displayLines", "field_39514", "lines", "f_238722_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.EditBox#lines
    static void set_field_lines(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "displayLines", "field_39514", "lines", "f_238722_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.EditBox#text
    static jobject get_field_text(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "value", "field_39515", "text", "f_238645_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.EditBox#text
    static void set_field_text(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "value", "field_39515", "text", "f_238645_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.EditBox#cursor
    static jint get_field_cursor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "cursor", "field_39516", "cursor", "f_238566_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.EditBox#cursor
    static void set_field_cursor(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "cursor", "field_39516", "cursor", "f_238566_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.EditBox#selectionEnd
    static jint get_field_selectionEnd(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "selectCursor", "field_39517", "selectionEnd", "f_238550_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.EditBox#selectionEnd
    static void set_field_selectionEnd(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "selectCursor", "field_39517", "selectionEnd", "f_238550_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.EditBox#selecting
    static jboolean get_field_selecting(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "selecting", "field_39518", "selecting", "f_238557_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.EditBox#selecting
    static void set_field_selecting(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "selecting", "field_39518", "selecting", "f_238557_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.EditBox#maxLength
    static jint get_field_maxLength(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "characterLimit", "field_39519", "maxLength", "f_238569_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.EditBox#maxLength
    static void set_field_maxLength(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "characterLimit", "field_39519", "maxLength", "f_238569_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.EditBox#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "width", "field_39520", "width", "f_238603_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.EditBox#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "width", "field_39520", "width", "f_238603_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.EditBox#changeListener
    static jobject get_field_changeListener(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "valueListener", "field_39521", "changeListener", "f_238527_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.EditBox#changeListener
    static void set_field_changeListener(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "valueListener", "field_39521", "changeListener", "f_238527_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gui.EditBox#cursorChangeListener
    static jobject get_field_cursorChangeListener(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "cursorListener", "field_39522", "cursorChangeListener", "f_238625_"), "Ljava/lang/Runnable;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gui.EditBox#cursorChangeListener
    static void set_field_cursorChangeListener(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "cursorListener", "field_39522", "cursorChangeListener", "f_238625_"), "Ljava/lang/Runnable;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getMaxLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "characterLimit", "method_44409", "getMaxLength", "m_239390_"), "()I");
    }

    static jint getMaxLength(const jobject& obj) {
                
       const auto methodID = methodID_getMaxLength();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setMaxLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCharacterLimit", "method_44411", "setMaxLength", "m_240162_"), "(I)V");
    }

    static void setMaxLength(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setMaxLength();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasMaxLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasCharacterLimit", "method_44418", "hasMaxLength", "m_239629_"), "()Z");
    }

    static jboolean hasMaxLength(const jobject& obj) {
                
       const auto methodID = methodID_hasMaxLength();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setChangeListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setValueListener", "method_44415", "setChangeListener", "m_239919_"), "(Ljava/util/function/Consumer;)V");
    }

    static void setChangeListener(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setChangeListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setCursorChangeListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCursorListener", "method_44413", "setCursorChangeListener", "m_239257_"), "(Ljava/lang/Runnable;)V");
    }

    static void setCursorChangeListener(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCursorChangeListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setValue", "method_44414", "setText", "m_239677_"), "(Ljava/lang/String;)V");
    }

    static void setText(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setText();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "value", "method_44421", "getText", "m_239618_"), "()Ljava/lang/String;");
    }

    static jobject getText(const jobject& obj) {
                
       const auto methodID = methodID_getText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_replaceSelection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "insertText", "method_44420", "replaceSelection", "m_240015_"), "(Ljava/lang/String;)V");
    }

    static void replaceSelection(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_replaceSelection();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_delete() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "deleteText", "method_44419", "delete", "m_239474_"), "(I)V");
    }

    static void delete(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_delete();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "cursor", "method_44424", "getCursor", "m_239456_"), "()I");
    }

    static jint getCursor(const jobject& obj) {
                
       const auto methodID = methodID_getCursor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSelecting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSelecting", "method_44417", "setSelecting", "m_239950_"), "(Z)V");
    }

    static void setSelecting(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSelecting();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSelection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getSelected", "method_44427", "getSelection", "m_239982_"), "()Lfjh$a;");
    }

    static jobject getSelection(const jobject& obj) {
                
       const auto methodID = methodID_getSelection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLineCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getLineCount", "method_44430", "getLineCount", "m_239340_"), "()I");
    }

    static jint getLineCount(const jobject& obj) {
                
       const auto methodID = methodID_getLineCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCurrentLineIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getLineAtCursor", "method_44432", "getCurrentLineIndex", "m_239268_"), "()I");
    }

    static jint getCurrentLineIndex(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentLineIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getLineView", "method_44422", "getLine", "m_239144_"), "(I)Lfjh$a;");
    }

    static jobject getLine(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getLine();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_moveCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "seekCursor", "method_44412", "moveCursor", "m_239797_"), "(Lfjy;I)V");
    }

    static void moveCursor(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_moveCursor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_moveCursorLine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "seekCursorLine", "method_44425", "moveCursorLine", "m_239393_"), "(I)V");
    }

    static void moveCursorLine(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_moveCursorLine();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__moveCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "seekCursorToPoint", "method_44410", "moveCursor", "m_239578_"), "(DD)V");
    }

    static void _moveCursor(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID__moveCursor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_handleSpecialKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "keyPressed", "method_44428", "handleSpecialKey", "m_239711_"), "(I)Z");
    }

    static jboolean handleSpecialKey(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_handleSpecialKey();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLines() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "iterateLines", "method_44434", "getLines", "m_239290_"), "()Ljava/lang/Iterable;");
    }

    static jobject getLines(const jobject& obj) {
                
       const auto methodID = methodID_getLines();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasSelection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "hasSelection", "method_44435", "hasSelection", "m_239344_"), "()Z");
    }

    static jboolean hasSelection(const jobject& obj) {
                
       const auto methodID = methodID_hasSelection();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSelectedText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getSelectedText", "method_44436", "getSelectedText", "m_240059_"), "()Ljava/lang/String;");
    }

    static jobject getSelectedText(const jobject& obj) {
                
       const auto methodID = methodID_getSelectedText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCurrentLine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getCursorLineView", "method_44439", "getCurrentLine", "m_240043_"), "()Lfjh$a;");
    }

    static jobject getCurrentLine(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentLine();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOffsetLine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getCursorLineView", "method_44431", "getOffsetLine", "m_239854_"), "(I)Lfjh$a;");
    }

    static jobject getOffsetLine(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getOffsetLine();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPreviousWordAtCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getPreviousWord", "method_44437", "getPreviousWordAtCursor", "m_239637_"), "()Lfjh$a;");
    }

    static jobject getPreviousWordAtCursor(const jobject& obj) {
                
       const auto methodID = methodID_getPreviousWordAtCursor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNextWordAtCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getNextWord", "method_44438", "getNextWordAtCursor", "m_239361_"), "()Lfjh$a;");
    }

    static jobject getNextWordAtCursor(const jobject& obj) {
                
       const auto methodID = methodID_getNextWordAtCursor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWordEndIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getWordEndPosition", "method_44433", "getWordEndIndex", "m_240092_"), "(I)I");
    }

    static jint getWordEndIndex(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getWordEndIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onChange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "onValueChange", "method_44440", "onChange", "m_239743_"), "()V");
    }

    static void onChange(const jobject& obj) {
                
       const auto methodID = methodID_onChange();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_rewrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "reflowDisplayLines", "method_44441", "rewrap", "m_239915_"), "()V");
    }

    static void rewrap(const jobject& obj) {
                
       const auto methodID = methodID_rewrap();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_truncateForReplacement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "truncateFullText", "method_44423", "truncateForReplacement", "m_239842_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject truncateForReplacement(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_truncateForReplacement();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_truncate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "truncateInsertionText", "method_44426", "truncate", "m_239417_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject truncate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_truncate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GUI_EDITBOX_HPP