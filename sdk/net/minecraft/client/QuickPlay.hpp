// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_QUICKPLAY_HPP
#define NET_MINECRAFT_CLIENT_QUICKPLAY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.QuickPlay
 * Remapped: gei
 */
namespace QuickPlay {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gei", "net/minecraft/client/quickplay/QuickPlay", "net/minecraft/class_8496", "net/minecraft/client/QuickPlay", "net/minecraft/src/C_278348_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.QuickPlay#ERROR_TITLE
    [[maybe_unused]] static jobject get_field_ERROR_TITLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_TITLE", "field_44554", "ERROR_TITLE", "f_278484_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.QuickPlay#ERROR_TITLE
    [[maybe_unused]] static void set_field_ERROR_TITLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ERROR_TITLE", "field_44554", "ERROR_TITLE", "f_278484_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.QuickPlay#ERROR_INVALID_IDENTIFIER
    [[maybe_unused]] static jobject get_field_ERROR_INVALID_IDENTIFIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "INVALID_IDENTIFIER", "field_44555", "ERROR_INVALID_IDENTIFIER", "f_278439_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.QuickPlay#ERROR_INVALID_IDENTIFIER
    [[maybe_unused]] static void set_field_ERROR_INVALID_IDENTIFIER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "INVALID_IDENTIFIER", "field_44555", "ERROR_INVALID_IDENTIFIER", "f_278439_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.QuickPlay#ERROR_REALM_CONNECT
    [[maybe_unused]] static jobject get_field_ERROR_REALM_CONNECT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "REALM_CONNECT", "field_44556", "ERROR_REALM_CONNECT", "f_278412_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.QuickPlay#ERROR_REALM_CONNECT
    [[maybe_unused]] static void set_field_ERROR_REALM_CONNECT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "REALM_CONNECT", "field_44556", "ERROR_REALM_CONNECT", "f_278412_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.QuickPlay#ERROR_REALM_PERMISSION
    [[maybe_unused]] static jobject get_field_ERROR_REALM_PERMISSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "REALM_PERMISSION", "field_44557", "ERROR_REALM_PERMISSION", "f_278373_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.QuickPlay#ERROR_REALM_PERMISSION
    [[maybe_unused]] static void set_field_ERROR_REALM_PERMISSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "REALM_PERMISSION", "field_44557", "ERROR_REALM_PERMISSION", "f_278373_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.QuickPlay#TO_TITLE
    [[maybe_unused]] static jobject get_field_TO_TITLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TO_TITLE", "field_44558", "TO_TITLE", "f_278381_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.QuickPlay#TO_TITLE
    [[maybe_unused]] static void set_field_TO_TITLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TO_TITLE", "field_44558", "TO_TITLE", "f_278381_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.QuickPlay#TO_WORLD
    [[maybe_unused]] static jobject get_field_TO_WORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TO_WORLD_LIST", "field_44559", "TO_WORLD", "f_278468_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.QuickPlay#TO_WORLD
    [[maybe_unused]] static void set_field_TO_WORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TO_WORLD_LIST", "field_44559", "TO_WORLD", "f_278468_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.QuickPlay#TO_REALMS
    [[maybe_unused]] static jobject get_field_TO_REALMS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "TO_REALMS_LIST", "field_44560", "TO_REALMS", "f_278499_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.QuickPlay#TO_REALMS
    [[maybe_unused]] static void set_field_TO_REALMS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "TO_REALMS_LIST", "field_44560", "TO_REALMS", "f_278499_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_startQuickPlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "connect", "method_51260", "startQuickPlay", "m_278613_"), "(Lfgo;Lfua$c;Lfby;)V");
    }

    static void startQuickPlay(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_startQuickPlay();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_startSingleplayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "joinSingleplayerWorld", "method_51261", "startSingleplayer", "m_278782_"), "(Lfgo;Ljava/lang/String;)V");
    }

    static void startSingleplayer(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_startSingleplayer();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_startMultiplayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "joinMultiplayerWorld", "method_51263", "startMultiplayer", "m_278767_"), "(Lfgo;Ljava/lang/String;)V");
    }

    static void startMultiplayer(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_startMultiplayer();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_startRealms() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "joinRealmsWorld", "method_51259", "startRealms", "m_278851_"), "(Lfgo;Lfby;Ljava/lang/String;)V");
    }

    static void startRealms(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_startRealms();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_QUICKPLAY_HPP