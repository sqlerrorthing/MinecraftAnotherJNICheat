// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RUNARGS$QUICKPLAY_HPP
#define NET_MINECRAFT_CLIENT_RUNARGS$QUICKPLAY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.RunArgs$QuickPlay
 * Remapped: fua$c
 */
namespace RunArgs$QuickPlay {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fua$c", "net/minecraft/client/main/GameConfig$QuickPlayData", "net/minecraft/class_542$class_8495", "net/minecraft/client/RunArgs$QuickPlay", "net/minecraft/src/C_3787_$C_278369_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.RunArgs$QuickPlay#path
    static jobject get_field_path(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "path", "comp_1476", "path", "f_278493_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.RunArgs$QuickPlay#path
    static void set_field_path(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "path", "comp_1476", "path", "f_278493_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.RunArgs$QuickPlay#singleplayer
    static jobject get_field_singleplayer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "singleplayer", "comp_1477", "singleplayer", "f_278449_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.RunArgs$QuickPlay#singleplayer
    static void set_field_singleplayer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "singleplayer", "comp_1477", "singleplayer", "f_278449_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.RunArgs$QuickPlay#multiplayer
    static jobject get_field_multiplayer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "multiplayer", "comp_1478", "multiplayer", "f_278424_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.RunArgs$QuickPlay#multiplayer
    static void set_field_multiplayer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "multiplayer", "comp_1478", "multiplayer", "f_278424_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.RunArgs$QuickPlay#realms
    static jobject get_field_realms(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "realms", "comp_1479", "realms", "f_278402_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.RunArgs$QuickPlay#realms
    static void set_field_realms(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "realms", "comp_1479", "realms", "f_278402_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_isEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isEnabled", "method_51257", "isEnabled", "m_278736_"), "()Z");
    }

    static jboolean isEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__path() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "path", "comp_1476", "path", "f_278493_"), "()Ljava/lang/String;");
    }

    static jobject _path(const jobject& obj) {
                
       const auto methodID = methodID__path();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__singleplayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "singleplayer", "comp_1477", "singleplayer", "f_278449_"), "()Ljava/lang/String;");
    }

    static jobject _singleplayer(const jobject& obj) {
                
       const auto methodID = methodID__singleplayer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__multiplayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "multiplayer", "comp_1478", "multiplayer", "f_278424_"), "()Ljava/lang/String;");
    }

    static jobject _multiplayer(const jobject& obj) {
                
       const auto methodID = methodID__multiplayer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__realms() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "realms", "comp_1479", "realms", "f_278402_"), "()Ljava/lang/String;");
    }

    static jobject _realms(const jobject& obj) {
                
       const auto methodID = methodID__realms();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RUNARGS$QUICKPLAY_HPP