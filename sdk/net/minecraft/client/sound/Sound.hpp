// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SOUND_SOUND_HPP
#define NET_MINECRAFT_CLIENT_SOUND_SOUND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.sound.Sound
 * Remapped: gtx
 */
namespace Sound {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gtx", "net/minecraft/client/resources/sounds/Sound", "net/minecraft/class_1111", "net/minecraft/client/sound/Sound", "net/minecraft/src/C_4562_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.sound.Sound#FINDER
    [[maybe_unused]] static jobject get_field_FINDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SOUND_LISTER", "field_40575", "FINDER", "f_244492_"), "Lakk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.sound.Sound#FINDER
    [[maybe_unused]] static void set_field_FINDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SOUND_LISTER", "field_40575", "FINDER", "f_244492_"), "Lakk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.Sound#id
    static jobject get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "location", "field_5469", "id", "f_119770_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Sound#id
    static void set_field_id(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "location", "field_5469", "id", "f_119770_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.Sound#volume
    static jobject get_field_volume(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "volume", "field_5466", "volume", "f_119771_"), "Lbpz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Sound#volume
    static void set_field_volume(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "volume", "field_5466", "volume", "f_119771_"), "Lbpz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.Sound#pitch
    static jobject get_field_pitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "pitch", "field_5464", "pitch", "f_119772_"), "Lbpz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Sound#pitch
    static void set_field_pitch(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "pitch", "field_5464", "pitch", "f_119772_"), "Lbpz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.Sound#weight
    static jint get_field_weight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "weight", "field_5468", "weight", "f_119773_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Sound#weight
    static void set_field_weight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "weight", "field_5468", "weight", "f_119773_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.Sound#registrationType
    static jobject get_field_registrationType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "type", "field_5470", "registrationType", "f_119774_"), "Lgtx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Sound#registrationType
    static void set_field_registrationType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "type", "field_5470", "registrationType", "f_119774_"), "Lgtx$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.Sound#stream
    static jboolean get_field_stream(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "stream", "field_5467", "stream", "f_119775_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Sound#stream
    static void set_field_stream(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "stream", "field_5467", "stream", "f_119775_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.Sound#preload
    static jboolean get_field_preload(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "preload", "field_5465", "preload", "f_119776_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Sound#preload
    static void set_field_preload(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "preload", "field_5465", "preload", "f_119776_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.Sound#attenuation
    static jint get_field_attenuation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "attenuationDistance", "field_5463", "attenuation", "f_119777_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Sound#attenuation
    static void set_field_attenuation(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "attenuationDistance", "field_5463", "attenuation", "f_119777_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getIdentifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getLocation", "method_4767", "getIdentifier", "m_119787_"), "()Lakr;");
    }

    static jobject getIdentifier(const jobject& obj) {
                
       const auto methodID = methodID_getIdentifier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLocation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getPath", "method_4766", "getLocation", "m_119790_"), "()Lakr;");
    }

    static jobject getLocation(const jobject& obj) {
                
       const auto methodID = methodID_getLocation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVolume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getVolume", "method_4771", "getVolume", "m_235146_"), "()Lbpz;");
    }

    static jobject getVolume(const jobject& obj) {
                
       const auto methodID = methodID_getVolume();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getPitch", "method_4772", "getPitch", "m_235147_"), "()Lbpz;");
    }

    static jobject getPitch(const jobject& obj) {
                
       const auto methodID = methodID_getPitch();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getWeight", "method_4894", "getWeight", "m_7789_"), "()I");
    }

    static jint getWeight(const jobject& obj) {
                
       const auto methodID = methodID_getWeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSound", "method_4765", "getSound", "m_213718_"), "(Layw;)Lgtx;");
    }

    static jobject getSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__preload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "preloadIfRequired", "method_18188", "preload", "m_8054_"), "(Lgvc;)V");
    }

    static void _preload(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__preload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRegistrationType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getType", "method_4768", "getRegistrationType", "m_119795_"), "()Lgtx$a;");
    }

    static jobject getRegistrationType(const jobject& obj) {
                
       const auto methodID = methodID_getRegistrationType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isStreamed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "shouldStream", "method_4769", "isStreamed", "m_119796_"), "()Z");
    }

    static jboolean isStreamed(const jobject& obj) {
                
       const auto methodID = methodID_isStreamed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPreloaded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "shouldPreload", "method_4764", "isPreloaded", "m_119797_"), "()Z");
    }

    static jboolean isPreloaded(const jobject& obj) {
                
       const auto methodID = methodID_isPreloaded();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttenuation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getAttenuationDistance", "method_4770", "getAttenuation", "m_119798_"), "()I");
    }

    static jint getAttenuation(const jobject& obj) {
                
       const auto methodID = methodID_getAttenuation();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SOUND_SOUND_HPP