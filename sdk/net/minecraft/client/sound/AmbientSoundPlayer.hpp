// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SOUND_AMBIENTSOUNDPLAYER_HPP
#define NET_MINECRAFT_CLIENT_SOUND_AMBIENTSOUNDPLAYER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.sound.AmbientSoundPlayer
 * Remapped: guc
 */
namespace AmbientSoundPlayer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("guc", "net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler", "net/minecraft/class_1116", "net/minecraft/client/sound/AmbientSoundPlayer", "net/minecraft/src/C_4569_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.sound.AmbientSoundPlayer#MAX_TICKS_FOR_BASE_SOUND_LOOP
    [[maybe_unused]] static jfloat get_field_MAX_TICKS_FOR_BASE_SOUND_LOOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CHANCE_PER_TICK", "field_33008", "MAX_TICKS_FOR_BASE_SOUND_LOOP", "f_174957_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.sound.AmbientSoundPlayer#MAX_TICKS_FOR_BASE_SOUND_LOOP
    [[maybe_unused]] static void set_field_MAX_TICKS_FOR_BASE_SOUND_LOOP(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CHANCE_PER_TICK", "field_33008", "MAX_TICKS_FOR_BASE_SOUND_LOOP", "f_174957_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.sound.AmbientSoundPlayer#MAX_TICKS_FOR_RARE_SOUND_LOOP
    [[maybe_unused]] static jfloat get_field_MAX_TICKS_FOR_RARE_SOUND_LOOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RARE_CHANCE_PER_TICK", "field_33009", "MAX_TICKS_FOR_RARE_SOUND_LOOP", "f_174958_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.sound.AmbientSoundPlayer#MAX_TICKS_FOR_RARE_SOUND_LOOP
    [[maybe_unused]] static void set_field_MAX_TICKS_FOR_RARE_SOUND_LOOP(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RARE_CHANCE_PER_TICK", "field_33009", "MAX_TICKS_FOR_RARE_SOUND_LOOP", "f_174958_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.sound.AmbientSoundPlayer#MAX_TICKS_FOR_ULTRA_RARE_SOUND_LOOP
    [[maybe_unused]] static jfloat get_field_MAX_TICKS_FOR_ULTRA_RARE_SOUND_LOOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ULTRA_RARE_CHANCE_PER_TICK", "field_33010", "MAX_TICKS_FOR_ULTRA_RARE_SOUND_LOOP", "f_174959_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.sound.AmbientSoundPlayer#MAX_TICKS_FOR_ULTRA_RARE_SOUND_LOOP
    [[maybe_unused]] static void set_field_MAX_TICKS_FOR_ULTRA_RARE_SOUND_LOOP(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ULTRA_RARE_CHANCE_PER_TICK", "field_33010", "MAX_TICKS_FOR_ULTRA_RARE_SOUND_LOOP", "f_174959_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.sound.AmbientSoundPlayer#DEFAULT_TICKS_UNTIL_PLAY
    [[maybe_unused]] static jint get_field_DEFAULT_TICKS_UNTIL_PLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MINIMUM_TICK_DELAY", "field_33011", "DEFAULT_TICKS_UNTIL_PLAY", "f_174960_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.AmbientSoundPlayer#DEFAULT_TICKS_UNTIL_PLAY
    [[maybe_unused]] static void set_field_DEFAULT_TICKS_UNTIL_PLAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MINIMUM_TICK_DELAY", "field_33011", "DEFAULT_TICKS_UNTIL_PLAY", "f_174960_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.AmbientSoundPlayer#player
    static jobject get_field_player(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "player", "field_5481", "player", "f_119852_"), "Lgeb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.AmbientSoundPlayer#player
    static void set_field_player(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "player", "field_5481", "player", "f_119852_"), "Lgeb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.AmbientSoundPlayer#soundManager
    static jobject get_field_soundManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "soundManager", "field_5479", "soundManager", "f_119853_"), "Lgvf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.AmbientSoundPlayer#soundManager
    static void set_field_soundManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "soundManager", "field_5479", "soundManager", "f_119853_"), "Lgvf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.AmbientSoundPlayer#ticksUntilPlay
    static jint get_field_ticksUntilPlay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "tickDelay", "field_5480", "ticksUntilPlay", "f_119854_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.AmbientSoundPlayer#ticksUntilPlay
    static void set_field_ticksUntilPlay(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "tickDelay", "field_5480", "ticksUntilPlay", "f_119854_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_4756", "tick", "m_7551_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SOUND_AMBIENTSOUNDPLAYER_HPP