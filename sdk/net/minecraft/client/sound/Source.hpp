// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SOUND_SOURCE_HPP
#define NET_MINECRAFT_CLIENT_SOUND_SOURCE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.sound.Source
 * Remapped: eze
 */
namespace Source {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eze", "com/mojang/blaze3d/audio/Channel", "net/minecraft/class_4224", "net/minecraft/client/sound/Source", "net/minecraft/src/C_3084_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.sound.Source#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_18892", "LOGGER", "f_83641_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Source#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_18892", "LOGGER", "f_83641_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.sound.Source#field_31895
    [[maybe_unused]] static jint get_field_field_31895() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "QUEUED_BUFFER_COUNT", "field_31895", "field_31895", "f_166125_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Source#field_31895
    [[maybe_unused]] static void set_field_field_31895(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "QUEUED_BUFFER_COUNT", "field_31895", "field_31895", "f_166125_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.sound.Source#field_31894
    [[maybe_unused]] static jint get_field_field_31894() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BUFFER_DURATION_SECONDS", "field_31894", "field_31894", "f_166124_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.sound.Source#field_31894
    [[maybe_unused]] static void set_field_field_31894(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BUFFER_DURATION_SECONDS", "field_31894", "field_31894", "f_166124_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.Source#pointer
    static jint get_field_pointer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "source", "field_18893", "pointer", "f_83642_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Source#pointer
    static void set_field_pointer(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "source", "field_18893", "pointer", "f_83642_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.Source#playing
    static jobject get_field_playing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "initialized", "field_18894", "playing", "f_83643_"), "Ljava/util/concurrent/atomic/AtomicBoolean;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Source#playing
    static void set_field_playing(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "initialized", "field_18894", "playing", "f_83643_"), "Ljava/util/concurrent/atomic/AtomicBoolean;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.Source#bufferSize
    static jint get_field_bufferSize(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "streamingBufferSize", "field_18895", "bufferSize", "f_83644_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Source#bufferSize
    static void set_field_bufferSize(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "streamingBufferSize", "field_18895", "bufferSize", "f_83644_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.Source#stream
    static jobject get_field_stream(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "stream", "field_18896", "stream", "f_83645_"), "Lgut;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.Source#stream
    static void set_field_stream(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "stream", "field_18896", "stream", "f_83645_"), "Lgut;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_19638", "create", "m_83649_"), "()Leze;");
    }

    static jobject create() {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "destroy", "method_19646", "close", "m_83665_"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_play() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "play", "method_19650", "play", "m_83672_"), "()V");
    }

    static void play(const jobject& obj) {
                
       const auto methodID = methodID_play();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSourceState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getState", "method_19659", "getSourceState", "m_83683_"), "()I");
    }

    static jint getSourceState(const jobject& obj) {
                
       const auto methodID = methodID_getSourceState();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_pause() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "pause", "method_19653", "pause", "m_83677_"), "()V");
    }

    static void pause(const jobject& obj) {
                
       const auto methodID = methodID_pause();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_resume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "unpause", "method_19654", "resume", "m_83678_"), "()V");
    }

    static void resume(const jobject& obj) {
                
       const auto methodID = methodID_resume();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_stop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "stop", "method_19655", "stop", "m_83679_"), "()V");
    }

    static void stop(const jobject& obj) {
                
       const auto methodID = methodID_stop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPlaying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "playing", "method_35598", "isPlaying", "m_166126_"), "()Z");
    }

    static jboolean isPlaying(const jobject& obj) {
                
       const auto methodID = methodID_isPlaying();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isStopped() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "stopped", "method_19656", "isStopped", "m_83680_"), "()Z");
    }

    static jboolean isStopped(const jobject& obj) {
                
       const auto methodID = methodID_isStopped();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSelfPosition", "method_19641", "setPosition", "m_83654_"), "(Lexc;)V");
    }

    static void setPosition(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPosition();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPitch", "method_19639", "setPitch", "m_83650_"), "(F)V");
    }

    static void setPitch(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setPitch();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setLooping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLooping", "method_19645", "setLooping", "m_83663_"), "(Z)V");
    }

    static void setLooping(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setLooping();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setVolume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setVolume", "method_19647", "setVolume", "m_83666_"), "(F)V");
    }

    static void setVolume(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setVolume();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_disableAttenuation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "disableAttenuation", "method_19657", "disableAttenuation", "m_83681_"), "()V");
    }

    static void disableAttenuation(const jobject& obj) {
                
       const auto methodID = methodID_disableAttenuation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setAttenuation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "linearAttenuation", "method_19651", "setAttenuation", "m_83673_"), "(F)V");
    }

    static void setAttenuation(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setAttenuation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setRelative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setRelative", "method_19649", "setRelative", "m_83670_"), "(Z)V");
    }

    static void setRelative(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setRelative();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "attachStaticBuffer", "method_19642", "setBuffer", "m_83656_"), "(Lezj;)V");
    }

    static void setBuffer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setBuffer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setStream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "attachBufferStream", "method_19643", "setStream", "m_83658_"), "(Lgut;)V");
    }

    static void setStream(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setStream();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBufferSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateBufferSize", "method_19644", "getBufferSize", "m_83660_"), "(Ljavax/sound/sampled/AudioFormat;I)I");
    }

    static jint getBufferSize(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getBufferSize();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_read() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pumpBuffers", "method_19640", "read", "m_83652_"), "(I)V");
    }

    static void read(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_read();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "updateStream", "method_19658", "tick", "m_83682_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeProcessedBuffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "removeProcessedBuffers", "method_19660", "removeProcessedBuffers", "m_83684_"), "()I");
    }

    static jint removeProcessedBuffers(const jobject& obj) {
                
       const auto methodID = methodID_removeProcessedBuffers();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SOUND_SOURCE_HPP