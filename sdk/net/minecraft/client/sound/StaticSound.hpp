// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SOUND_STATICSOUND_HPP
#define NET_MINECRAFT_CLIENT_SOUND_STATICSOUND_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.sound.StaticSound
 * Remapped: ezj
 */
namespace StaticSound {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ezj", "com/mojang/blaze3d/audio/SoundBuffer", "net/minecraft/class_4231", "net/minecraft/client/sound/StaticSound", "net/minecraft/src/C_3094_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.sound.StaticSound#sample
    static jobject get_field_sample(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "data", "field_18916", "sample", "f_83793_"), "Ljava/nio/ByteBuffer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.StaticSound#sample
    static void set_field_sample(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "data", "field_18916", "sample", "f_83793_"), "Ljava/nio/ByteBuffer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.StaticSound#format
    static jobject get_field_format(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "format", "field_18917", "format", "f_83794_"), "Ljavax/sound/sampled/AudioFormat;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.StaticSound#format
    static void set_field_format(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "format", "field_18917", "format", "f_83794_"), "Ljavax/sound/sampled/AudioFormat;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.StaticSound#hasBuffer
    static jboolean get_field_hasBuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "hasAlBuffer", "field_18918", "hasBuffer", "f_83795_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.StaticSound#hasBuffer
    static void set_field_hasBuffer(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "hasAlBuffer", "field_18918", "hasBuffer", "f_83795_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.StaticSound#streamBufferPointer
    static jint get_field_streamBufferPointer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "alBuffer", "field_18919", "streamBufferPointer", "f_83796_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.StaticSound#streamBufferPointer
    static void set_field_streamBufferPointer(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "alBuffer", "field_18919", "streamBufferPointer", "f_83796_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getStreamBufferPointer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAlBuffer", "method_19686", "getStreamBufferPointer", "m_83800_"), "()Ljava/util/OptionalInt;");
    }

    static jobject getStreamBufferPointer(const jobject& obj) {
                
       const auto methodID = methodID_getStreamBufferPointer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "discardAlBuffer", "method_19687", "close", "m_83801_"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_takeStreamBufferPointer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "releaseAlBuffer", "method_19688", "takeStreamBufferPointer", "m_83802_"), "()Ljava/util/OptionalInt;");
    }

    static jobject takeStreamBufferPointer(const jobject& obj) {
                
       const auto methodID = methodID_takeStreamBufferPointer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SOUND_STATICSOUND_HPP