// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SOUND_AMBIENTSOUNDLOOPS$UNDERWATER_HPP
#define NET_MINECRAFT_CLIENT_SOUND_AMBIENTSOUNDLOOPS$UNDERWATER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.sound.AmbientSoundLoops$Underwater
 * Remapped: gud$b
 */
namespace AmbientSoundLoops$Underwater {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gud$b", "net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance", "net/minecraft/class_1118$class_1120", "net/minecraft/client/sound/AmbientSoundLoops$Underwater", "net/minecraft/src/C_4570_$C_4572_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.sound.AmbientSoundLoops$Underwater#MAX_TRANSITION_TIMER
    [[maybe_unused]] static jint get_field_MAX_TRANSITION_TIMER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "FADE_DURATION", "field_33012", "MAX_TRANSITION_TIMER", "f_174962_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.sound.AmbientSoundLoops$Underwater#MAX_TRANSITION_TIMER
    [[maybe_unused]] static void set_field_MAX_TRANSITION_TIMER(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "FADE_DURATION", "field_33012", "MAX_TRANSITION_TIMER", "f_174962_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.AmbientSoundLoops$Underwater#player
    static jobject get_field_player(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "player", "field_5483", "player", "f_119864_"), "Lgeb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.AmbientSoundLoops$Underwater#player
    static void set_field_player(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "player", "field_5483", "player", "f_119864_"), "Lgeb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.AmbientSoundLoops$Underwater#transitionTimer
    static jint get_field_transitionTimer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "fade", "field_5484", "transitionTimer", "f_119865_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.AmbientSoundLoops$Underwater#transitionTimer
    static void set_field_transitionTimer(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "fade", "field_5484", "transitionTimer", "f_119865_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "tick", "method_16896", "tick", "m_7788_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SOUND_AMBIENTSOUNDLOOPS$UNDERWATER_HPP