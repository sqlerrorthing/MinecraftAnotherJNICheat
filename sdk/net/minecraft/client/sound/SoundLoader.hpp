// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SOUND_SOUNDLOADER_HPP
#define NET_MINECRAFT_CLIENT_SOUND_SOUNDLOADER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.sound.SoundLoader
 * Remapped: gvb
 */
namespace SoundLoader {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gvb", "net/minecraft/client/sounds/SoundBufferLibrary", "net/minecraft/class_4237", "net/minecraft/client/sound/SoundLoader", "net/minecraft/src/C_4599_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.sound.SoundLoader#resourceFactory
    static jobject get_field_resourceFactory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "resourceManager", "field_18943", "resourceFactory", "f_120189_"), "Lauh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundLoader#resourceFactory
    static void set_field_resourceFactory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "resourceManager", "field_18943", "resourceFactory", "f_120189_"), "Lauh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundLoader#loadedSounds
    static jobject get_field_loadedSounds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "cache", "field_18944", "loadedSounds", "f_120190_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundLoader#loadedSounds
    static void set_field_loadedSounds(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "cache", "field_18944", "loadedSounds", "f_120190_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_loadStatic() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getCompleteBuffer", "method_19743", "loadStatic", "m_120202_"), "(Lakr;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject loadStatic(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadStatic();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_loadStreamed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getStream", "method_19744", "loadStreamed", "m_120204_"), "(Lakr;Z)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject loadStreamed(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_loadStreamed();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clear", "method_19738", "close", "m_120193_"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__loadStatic() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "preload", "method_19741", "loadStatic", "m_120198_"), "(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject _loadStatic(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__loadStatic();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SOUND_SOUNDLOADER_HPP