// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SOUND_BIOMEEFFECTSOUNDPLAYER_HPP
#define NET_MINECRAFT_CLIENT_SOUND_BIOMEEFFECTSOUNDPLAYER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.sound.BiomeEffectSoundPlayer
 * Remapped: gto
 */
namespace BiomeEffectSoundPlayer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gto", "net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler", "net/minecraft/class_4897", "net/minecraft/client/sound/BiomeEffectSoundPlayer", "net/minecraft/src/C_4553_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#MAX_STRENGTH
    [[maybe_unused]] static jint get_field_MAX_STRENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOOP_SOUND_CROSS_FADE_TIME", "field_32994", "MAX_STRENGTH", "f_174920_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#MAX_STRENGTH
    [[maybe_unused]] static void set_field_MAX_STRENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOOP_SOUND_CROSS_FADE_TIME", "field_32994", "MAX_STRENGTH", "f_174920_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#field_32995
    [[maybe_unused]] static jfloat get_field_field_32995() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SKY_MOOD_RECOVERY_RATE", "field_32995", "field_32995", "f_174921_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#field_32995
    [[maybe_unused]] static void set_field_field_32995(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SKY_MOOD_RECOVERY_RATE", "field_32995", "field_32995", "f_174921_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.BiomeEffectSoundPlayer#player
    static jobject get_field_player(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "player", "field_22796", "player", "f_119629_"), "Lgeb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#player
    static void set_field_player(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "player", "field_22796", "player", "f_119629_"), "Lgeb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.BiomeEffectSoundPlayer#soundManager
    static jobject get_field_soundManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "soundManager", "field_22797", "soundManager", "f_119630_"), "Lgvf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#soundManager
    static void set_field_soundManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "soundManager", "field_22797", "soundManager", "f_119630_"), "Lgvf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.BiomeEffectSoundPlayer#biomeAccess
    static jobject get_field_biomeAccess(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "biomeManager", "field_22798", "biomeAccess", "f_119631_"), "Lddy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#biomeAccess
    static void set_field_biomeAccess(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "biomeManager", "field_22798", "biomeAccess", "f_119631_"), "Lddy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.BiomeEffectSoundPlayer#random
    static jobject get_field_random(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "random", "field_22799", "random", "f_119632_"), "Layw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#random
    static void set_field_random(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "random", "field_22799", "random", "f_119632_"), "Layw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.BiomeEffectSoundPlayer#soundLoops
    static jobject get_field_soundLoops(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "loopSounds", "field_22800", "soundLoops", "f_119633_"), "Lit/unimi/dsi/fastutil/objects/Object2ObjectArrayMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#soundLoops
    static void set_field_soundLoops(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "loopSounds", "field_22800", "soundLoops", "f_119633_"), "Lit/unimi/dsi/fastutil/objects/Object2ObjectArrayMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.BiomeEffectSoundPlayer#moodSound
    static jobject get_field_moodSound(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "moodSettings", "field_22801", "moodSound", "f_119634_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#moodSound
    static void set_field_moodSound(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "moodSettings", "field_22801", "moodSound", "f_119634_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.BiomeEffectSoundPlayer#additionsSound
    static jobject get_field_additionsSound(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "additionsSettings", "field_22802", "additionsSound", "f_119635_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#additionsSound
    static void set_field_additionsSound(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "additionsSettings", "field_22802", "additionsSound", "f_119635_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.BiomeEffectSoundPlayer#moodPercentage
    static jfloat get_field_moodPercentage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "moodiness", "field_23189", "moodPercentage", "f_119636_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#moodPercentage
    static void set_field_moodPercentage(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "moodiness", "field_23189", "moodPercentage", "f_119636_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.BiomeEffectSoundPlayer#activeBiome
    static jobject get_field_activeBiome(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "previousBiome", "field_22804", "activeBiome", "f_119637_"), "Lddw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.BiomeEffectSoundPlayer#activeBiome
    static void set_field_activeBiome(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "previousBiome", "field_22804", "activeBiome", "f_119637_"), "Lddw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getMoodPercentage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getMoodiness", "method_26272", "getMoodPercentage", "m_119654_"), "()F");
    }

    static jfloat getMoodPercentage(const jobject& obj) {
                
       const auto methodID = methodID_getMoodPercentage();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_4756", "tick", "m_7551_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SOUND_BIOMEEFFECTSOUNDPLAYER_HPP