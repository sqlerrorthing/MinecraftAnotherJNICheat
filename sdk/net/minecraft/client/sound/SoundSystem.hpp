// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SOUND_SOUNDSYSTEM_HPP
#define NET_MINECRAFT_CLIENT_SOUND_SOUNDSYSTEM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.sound.SoundSystem
 * Remapped: gvc
 */
namespace SoundSystem {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gvc", "net/minecraft/client/sounds/SoundEngine", "net/minecraft/class_1140", "net/minecraft/client/sound/SoundSystem", "net/minecraft/src/C_4600_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.sound.SoundSystem#MARKER
    [[maybe_unused]] static jobject get_field_MARKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MARKER", "field_5553", "MARKER", "f_120214_"), "Lorg/slf4j/Marker;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#MARKER
    [[maybe_unused]] static void set_field_MARKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MARKER", "field_5553", "MARKER", "f_120214_"), "Lorg/slf4j/Marker;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.sound.SoundSystem#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LOGGER", "field_5559", "LOGGER", "f_120215_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LOGGER", "field_5559", "LOGGER", "f_120215_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.sound.SoundSystem#MIN_PITCH
    [[maybe_unused]] static jfloat get_field_MIN_PITCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "PITCH_MIN", "field_33021", "MIN_PITCH", "f_174983_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#MIN_PITCH
    [[maybe_unused]] static void set_field_MIN_PITCH(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "PITCH_MIN", "field_33021", "MIN_PITCH", "f_174983_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.sound.SoundSystem#MAX_PITCH
    [[maybe_unused]] static jfloat get_field_MAX_PITCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PITCH_MAX", "field_33022", "MAX_PITCH", "f_174984_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#MAX_PITCH
    [[maybe_unused]] static void set_field_MAX_PITCH(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PITCH_MAX", "field_33022", "MAX_PITCH", "f_174984_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.sound.SoundSystem#MIN_VOLUME
    [[maybe_unused]] static jfloat get_field_MIN_VOLUME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "VOLUME_MIN", "field_33023", "MIN_VOLUME", "f_174985_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#MIN_VOLUME
    [[maybe_unused]] static void set_field_MIN_VOLUME(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "VOLUME_MIN", "field_33023", "MIN_VOLUME", "f_174985_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.sound.SoundSystem#MAX_VOLUME
    [[maybe_unused]] static jfloat get_field_MAX_VOLUME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "VOLUME_MAX", "field_33024", "MAX_VOLUME", "f_174986_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#MAX_VOLUME
    [[maybe_unused]] static void set_field_MAX_VOLUME(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "VOLUME_MAX", "field_33024", "MAX_VOLUME", "f_174986_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.sound.SoundSystem#field_33025
    [[maybe_unused]] static jint get_field_field_33025() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MIN_SOURCE_LIFETIME", "field_33025", "field_33025", "f_174987_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#field_33025
    [[maybe_unused]] static void set_field_field_33025(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MIN_SOURCE_LIFETIME", "field_33025", "field_33025", "f_174987_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.sound.SoundSystem#UNKNOWN_SOUNDS
    [[maybe_unused]] static jobject get_field_UNKNOWN_SOUNDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ONLY_WARN_ONCE", "field_5561", "UNKNOWN_SOUNDS", "f_120216_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#UNKNOWN_SOUNDS
    [[maybe_unused]] static void set_field_UNKNOWN_SOUNDS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ONLY_WARN_ONCE", "field_5561", "UNKNOWN_SOUNDS", "f_120216_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.sound.SoundSystem#MIN_TIME_INTERVAL_TO_RELOAD_SOUNDS
    [[maybe_unused]] static jlong get_field_MIN_TIME_INTERVAL_TO_RELOAD_SOUNDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "DEFAULT_DEVICE_CHECK_INTERVAL_MS", "field_34966", "MIN_TIME_INTERVAL_TO_RELOAD_SOUNDS", "f_194471_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#MIN_TIME_INTERVAL_TO_RELOAD_SOUNDS
    [[maybe_unused]] static void set_field_MIN_TIME_INTERVAL_TO_RELOAD_SOUNDS(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "DEFAULT_DEVICE_CHECK_INTERVAL_MS", "field_34966", "MIN_TIME_INTERVAL_TO_RELOAD_SOUNDS", "f_194471_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.sound.SoundSystem#FOR_THE_DEBUG
    [[maybe_unused]] static jobject get_field_FOR_THE_DEBUG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MISSING_SOUND", "field_33020", "FOR_THE_DEBUG", "f_174982_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.sound.SoundSystem#FOR_THE_DEBUG
    [[maybe_unused]] static void set_field_FOR_THE_DEBUG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MISSING_SOUND", "field_33020", "FOR_THE_DEBUG", "f_174982_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.sound.SoundSystem#OPENAL_SOFT_ON
    [[maybe_unused]] static jobject get_field_OPENAL_SOFT_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "OPEN_AL_SOFT_PREFIX", "field_34827", "OPENAL_SOFT_ON", "f_194469_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.sound.SoundSystem#OPENAL_SOFT_ON
    [[maybe_unused]] static void set_field_OPENAL_SOFT_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "OPEN_AL_SOFT_PREFIX", "field_34827", "OPENAL_SOFT_ON", "f_194469_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.sound.SoundSystem#OPENAL_SOFT_ON_LENGTH
    [[maybe_unused]] static jint get_field_OPENAL_SOFT_ON_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "OPEN_AL_SOFT_PREFIX_LENGTH", "field_34828", "OPENAL_SOFT_ON_LENGTH", "f_194470_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.sound.SoundSystem#OPENAL_SOFT_ON_LENGTH
    [[maybe_unused]] static void set_field_OPENAL_SOFT_ON_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "OPEN_AL_SOFT_PREFIX_LENGTH", "field_34828", "OPENAL_SOFT_ON_LENGTH", "f_194470_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#loader
    static jobject get_field_loader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "soundManager", "field_5552", "loader", "f_120217_"), "Lgvf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#loader
    static void set_field_loader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "soundManager", "field_5552", "loader", "f_120217_"), "Lgvf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#settings
    static jobject get_field_settings(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "options", "field_5555", "settings", "f_120218_"), "Lfgs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#settings
    static void set_field_settings(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "options", "field_5555", "settings", "f_120218_"), "Lfgs;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#started
    static jboolean get_field_started(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "loaded", "field_5563", "started", "f_120219_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#started
    static void set_field_started(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "loaded", "field_5563", "started", "f_120219_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#soundEngine
    static jobject get_field_soundEngine(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "library", "field_18945", "soundEngine", "f_120220_"), "Lezf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#soundEngine
    static void set_field_soundEngine(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "library", "field_18945", "soundEngine", "f_120220_"), "Lezf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#listener
    static jobject get_field_listener(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "listener", "field_18946", "listener", "f_120221_"), "Lezg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#listener
    static void set_field_listener(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "listener", "field_18946", "listener", "f_120221_"), "Lezg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#soundLoader
    static jobject get_field_soundLoader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "soundBuffers", "field_18947", "soundLoader", "f_120222_"), "Lgvb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#soundLoader
    static void set_field_soundLoader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "soundBuffers", "field_18947", "soundLoader", "f_120222_"), "Lgvb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#taskQueue
    static jobject get_field_taskQueue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "executor", "field_18948", "taskQueue", "f_120223_"), "Lgvd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#taskQueue
    static void set_field_taskQueue(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "executor", "field_18948", "taskQueue", "f_120223_"), "Lgvd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#channel
    static jobject get_field_channel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "channelAccess", "field_18949", "channel", "f_120224_"), "Lguu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#channel
    static void set_field_channel(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "channelAccess", "field_18949", "channel", "f_120224_"), "Lguu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#ticks
    static jint get_field_ticks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "tickCount", "field_5550", "ticks", "f_120225_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#ticks
    static void set_field_ticks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "tickCount", "field_5550", "ticks", "f_120225_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#lastSoundDeviceCheckTime
    static jlong get_field_lastSoundDeviceCheckTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "lastDeviceCheckTime", "field_34967", "lastSoundDeviceCheckTime", "f_194472_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#lastSoundDeviceCheckTime
    static void set_field_lastSoundDeviceCheckTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "lastDeviceCheckTime", "field_34967", "lastSoundDeviceCheckTime", "f_194472_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#deviceChangeStatus
    static jobject get_field_deviceChangeStatus(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "devicePoolState", "field_35083", "deviceChangeStatus", "f_194473_"), "Ljava/util/concurrent/atomic/AtomicReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#deviceChangeStatus
    static void set_field_deviceChangeStatus(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "devicePoolState", "field_35083", "deviceChangeStatus", "f_194473_"), "Ljava/util/concurrent/atomic/AtomicReference;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#sources
    static jobject get_field_sources(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "instanceToChannel", "field_18950", "sources", "f_120226_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#sources
    static void set_field_sources(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "instanceToChannel", "field_18950", "sources", "f_120226_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#sounds
    static jobject get_field_sounds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "instanceBySource", "field_18951", "sounds", "f_120227_"), "Lcom/google/common/collect/Multimap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#sounds
    static void set_field_sounds(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "instanceBySource", "field_18951", "sounds", "f_120227_"), "Lcom/google/common/collect/Multimap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#tickingSounds
    static jobject get_field_tickingSounds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "tickingSounds", "field_5557", "tickingSounds", "f_120228_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#tickingSounds
    static void set_field_tickingSounds(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "tickingSounds", "field_5557", "tickingSounds", "f_120228_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#startTicks
    static jobject get_field_startTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "queuedSounds", "field_5566", "startTicks", "f_120229_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#startTicks
    static void set_field_startTicks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "queuedSounds", "field_5566", "startTicks", "f_120229_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#soundEndTicks
    static jobject get_field_soundEndTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "soundDeleteTime", "field_18952", "soundEndTicks", "f_120230_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#soundEndTicks
    static void set_field_soundEndTicks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "soundDeleteTime", "field_18952", "soundEndTicks", "f_120230_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#listeners
    static jobject get_field_listeners(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "listeners", "field_5558", "listeners", "f_120231_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#listeners
    static void set_field_listeners(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "listeners", "field_5558", "listeners", "f_120231_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#soundsToPlayNextTick
    static jobject get_field_soundsToPlayNextTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "queuedTickableSounds", "field_20532", "soundsToPlayNextTick", "f_120232_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#soundsToPlayNextTick
    static void set_field_soundsToPlayNextTick(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "queuedTickableSounds", "field_20532", "soundsToPlayNextTick", "f_120232_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundSystem#preloadedSounds
    static jobject get_field_preloadedSounds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "preloadQueue", "field_5551", "preloadedSounds", "f_120233_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundSystem#preloadedSounds
    static void set_field_preloadedSounds(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "preloadQueue", "field_5551", "preloadedSounds", "f_120233_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_reloadSounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "reload", "method_4837", "reloadSounds", "m_120239_"), "()V");
    }

    static void reloadSounds(const jobject& obj) {
                
       const auto methodID = methodID_reloadSounds();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "loadLibrary", "method_4846", "start", "m_120323_"), "()V");
    }

    static void start(const jobject& obj) {
                
       const auto methodID = methodID_start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSoundVolume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getVolume", "method_4850", "getSoundVolume", "m_120258_"), "(Lavq;)F");
    }

    static jfloat getSoundVolume(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSoundVolume();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateSoundVolume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateCategoryVolume", "method_4844", "updateSoundVolume", "m_120260_"), "(Lavq;F)V");
    }

    static void updateSoundVolume(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_updateSoundVolume();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_stop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "destroy", "method_4856", "stop", "m_120304_"), "()V");
    }

    static void stop(const jobject& obj) {
                
       const auto methodID = methodID_stop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_stopAbruptly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "emergencyShutdown", "method_54648", "stopAbruptly", "m_306729_"), "()V");
    }

    static void stopAbruptly(const jobject& obj) {
                
       const auto methodID = methodID_stopAbruptly();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__stop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stop", "method_19753", "stop", "m_120274_"), "(Lgua;)V");
    }

    static void _stop(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__stop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "stopAll", "method_4843", "stopAll", "m_120311_"), "()V");
    }

    static void stopAll(const jobject& obj) {
                
       const auto methodID = methodID_stopAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addEventListener", "method_4855", "registerListener", "m_120295_"), "(Lgve;)V");
    }

    static void registerListener(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_unregisterListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "removeEventListener", "method_4847", "unregisterListener", "m_120307_"), "(Lgve;)V");
    }

    static void unregisterListener(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_unregisterListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldReloadSounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "shouldChangeDevice", "method_38744", "shouldReloadSounds", "m_194512_"), "()Z");
    }

    static jboolean shouldReloadSounds(const jobject& obj) {
                
       const auto methodID = methodID_shouldReloadSounds();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_20185", "tick", "m_120302_"), "(Z)V");
    }

    static void tick(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tickNonPaused", "method_4857", "tick", "m_120326_"), "()V");
    }

    static void _tick(const jobject& obj) {
                
       const auto methodID = methodID__tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canRepeatInstantly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "requiresManualLooping", "method_24878", "canRepeatInstantly", "m_120315_"), "(Lgua;)Z");
    }

    static jboolean canRepeatInstantly(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_canRepeatInstantly();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isRepeatDelayed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "shouldLoopManually", "method_24879", "isRepeatDelayed", "m_120318_"), "(Lgua;)Z");
    }

    static jboolean isRepeatDelayed(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isRepeatDelayed();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_shouldRepeatInstantly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "shouldLoopAutomatically", "method_24880", "shouldRepeatInstantly", "m_120321_"), "(Lgua;)Z");
    }

    static jboolean shouldRepeatInstantly(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_shouldRepeatInstantly();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isPlaying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isActive", "method_4835", "isPlaying", "m_120305_"), "(Lgua;)Z");
    }

    static jboolean isPlaying(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isPlaying();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_play() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "play", "method_4854", "play", "m_120312_"), "(Lgua;)V");
    }

    static void play(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_play();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_playNextTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "queueTickingSound", "method_22139", "playNextTick", "m_120282_"), "(Lgub;)V");
    }

    static void playNextTick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_playNextTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addPreloadedSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "requestPreload", "method_4851", "addPreloadedSound", "m_120272_"), "(Lgtx;)V");
    }

    static void addPreloadedSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addPreloadedSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAdjustedPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "calculatePitch", "method_4849", "getAdjustedPitch", "m_120324_"), "(Lgua;)F");
    }

    static jfloat getAdjustedPitch(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAdjustedPitch();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAdjustedVolume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "calculateVolume", "method_4853", "getAdjustedVolume", "m_120327_"), "(Lgua;)F");
    }

    static jfloat getAdjustedVolume(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAdjustedVolume();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getAdjustedVolume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateVolume", "method_43222", "getAdjustedVolume", "m_235257_"), "(FLavq;)F");
    }

    static jfloat _getAdjustedVolume(const jobject& obj, const jfloat& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__getAdjustedVolume();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_pauseAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "pause", "method_19761", "pauseAll", "m_120314_"), "()V");
    }

    static void pauseAll(const jobject& obj) {
                
       const auto methodID = methodID_pauseAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_resumeAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "resume", "method_19762", "resumeAll", "m_120317_"), "()V");
    }

    static void resumeAll(const jobject& obj) {
                
       const auto methodID = methodID_resumeAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__play() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playDelayed", "method_4852", "play", "m_120276_"), "(Lgua;I)V");
    }

    static void _play(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__play();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateListenerPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateSource", "method_4840", "updateListenerPosition", "m_120270_"), "(Lffy;)V");
    }

    static void updateListenerPosition(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateListenerPosition();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopSounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stop", "method_4838", "stopSounds", "m_120299_"), "(Lakr;Lavq;)V");
    }

    static void stopSounds(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_stopSounds();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getDebugString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getDebugString", "method_20304", "getDebugString", "m_120320_"), "()Ljava/lang/String;");
    }

    static jobject getDebugString(const jobject& obj) {
                
       const auto methodID = methodID_getDebugString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSoundDevices() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getAvailableSoundDevices", "method_38564", "getSoundDevices", "m_194511_"), "()Ljava/util/List;");
    }

    static jobject getSoundDevices(const jobject& obj) {
                
       const auto methodID = methodID_getSoundDevices();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getListenerTransform() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getListenerTransform", "method_55592", "getListenerTransform", "m_306753_"), "()Lezh;");
    }

    static jobject getListenerTransform(const jobject& obj) {
                
       const auto methodID = methodID_getListenerTransform();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SOUND_SOUNDSYSTEM_HPP