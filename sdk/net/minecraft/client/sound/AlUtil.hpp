// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SOUND_ALUTIL_HPP
#define NET_MINECRAFT_CLIENT_SOUND_ALUTIL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.sound.AlUtil
 * Remapped: ezi
 */
namespace AlUtil {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ezi", "com/mojang/blaze3d/audio/OpenAlUtil", "net/minecraft/class_4230", "net/minecraft/client/sound/AlUtil", "net/minecraft/src/C_3093_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.sound.AlUtil#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_18915", "LOGGER", "f_83780_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.AlUtil#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_18915", "LOGGER", "f_83780_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getErrorMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "alErrorToString", "method_19683", "getErrorMessage", "m_83782_"), "(I)Ljava/lang/String;");
    }

    static jobject getErrorMessage(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getErrorMessage();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_checkErrors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "checkALError", "method_19684", "checkErrors", "m_83787_"), "(Ljava/lang/String;)Z");
    }

    static jboolean checkErrors(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_checkErrors();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getAlcErrorMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "alcErrorToString", "method_20052", "getAlcErrorMessage", "m_83791_"), "(I)Ljava/lang/String;");
    }

    static jobject getAlcErrorMessage(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getAlcErrorMessage();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_checkAlcErrors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "checkALCError", "method_20051", "checkAlcErrors", "m_83784_"), "(JLjava/lang/String;)Z");
    }

    static jboolean checkAlcErrors(const jlong& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_checkAlcErrors();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getFormatId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "audioFormatToOpenAl", "method_19685", "getFormatId", "m_83789_"), "(Ljavax/sound/sampled/AudioFormat;)I");
    }

    static jint getFormatId(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getFormatId();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SOUND_ALUTIL_HPP