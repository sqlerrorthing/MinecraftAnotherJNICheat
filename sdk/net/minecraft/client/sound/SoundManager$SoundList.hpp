// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SOUND_SOUNDMANAGER$SOUNDLIST_HPP
#define NET_MINECRAFT_CLIENT_SOUND_SOUNDMANAGER$SOUNDLIST_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.sound.SoundManager$SoundList
 * Remapped: gvf$a
 */
namespace SoundManager$SoundList {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gvf$a", "net/minecraft/client/sounds/SoundManager$Preparations", "net/minecraft/class_1144$class_4009", "net/minecraft/client/sound/SoundManager$SoundList", "net/minecraft/src/C_4603_$C_4606_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.client.sound.SoundManager$SoundList#loadedSounds
    static jobject get_field_loadedSounds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "registry", "field_17908", "loadedSounds", "f_120413_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.sound.SoundManager$SoundList#loadedSounds
    static void set_field_loadedSounds(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "registry", "field_17908", "loadedSounds", "f_120413_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.sound.SoundManager$SoundList#foundSounds
    static jobject get_field_foundSounds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "soundCache", "field_40577", "foundSounds", "f_244128_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.sound.SoundManager$SoundList#foundSounds
    static void set_field_foundSounds(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "soundCache", "field_40577", "foundSounds", "f_244128_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_findSounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "listResources", "method_45913", "findSounds", "m_245281_"), "(Laue;)V");
    }

    static void findSounds(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_findSounds();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleRegistration", "method_18187", "register", "m_246105_"), "(Lakr;Lgty;)V");
    }

    static void register(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_reload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_18186", "reload", "m_245937_"), "(Ljava/util/Map;Ljava/util/Map;Lgvc;)V");
    }

    static void reload(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_reload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SOUND_SOUNDMANAGER$SOUNDLIST_HPP