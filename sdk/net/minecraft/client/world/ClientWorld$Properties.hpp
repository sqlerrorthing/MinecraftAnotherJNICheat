// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_WORLD_CLIENTWORLD$PROPERTIES_HPP
#define NET_MINECRAFT_CLIENT_WORLD_CLIENTWORLD$PROPERTIES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.world.ClientWorld$Properties
 * Remapped: fzf$a
 */
namespace ClientWorld$Properties {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fzf$a", "net/minecraft/client/multiplayer/ClientLevel$ClientLevelData", "net/minecraft/class_638$class_5271", "net/minecraft/client/world/ClientWorld$Properties", "net/minecraft/src/C_3899_$C_3901_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.world.ClientWorld$Properties#hardcore
    static jboolean get_field_hardcore(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "hardcore", "field_24433", "hardcore", "f_104830_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.world.ClientWorld$Properties#hardcore
    static void set_field_hardcore(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "hardcore", "field_24433", "hardcore", "f_104830_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.world.ClientWorld$Properties#gameRules
    static jobject get_field_gameRules(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "gameRules", "field_24434", "gameRules", "f_104831_"), "Ldcs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.world.ClientWorld$Properties#gameRules
    static void set_field_gameRules(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "gameRules", "field_24434", "gameRules", "f_104831_"), "Ldcs;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.world.ClientWorld$Properties#flatWorld
    static jboolean get_field_flatWorld(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "isFlat", "field_24607", "flatWorld", "f_104832_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.world.ClientWorld$Properties#flatWorld
    static void set_field_flatWorld(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "isFlat", "field_24607", "flatWorld", "f_104832_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.world.ClientWorld$Properties#spawnPos
    static jobject get_field_spawnPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "spawnPos", "field_48402", "spawnPos", "f_316685_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.world.ClientWorld$Properties#spawnPos
    static void set_field_spawnPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "spawnPos", "field_48402", "spawnPos", "f_316685_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.world.ClientWorld$Properties#spawnAngle
    static jfloat get_field_spawnAngle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "spawnAngle", "field_26372", "spawnAngle", "f_104836_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.world.ClientWorld$Properties#spawnAngle
    static void set_field_spawnAngle(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "spawnAngle", "field_26372", "spawnAngle", "f_104836_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.world.ClientWorld$Properties#time
    static jlong get_field_time(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "gameTime", "field_24438", "time", "f_104837_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.world.ClientWorld$Properties#time
    static void set_field_time(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "gameTime", "field_24438", "time", "f_104837_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.world.ClientWorld$Properties#timeOfDay
    static jlong get_field_timeOfDay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "dayTime", "field_24439", "timeOfDay", "f_104838_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.world.ClientWorld$Properties#timeOfDay
    static void set_field_timeOfDay(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "dayTime", "field_24439", "timeOfDay", "f_104838_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.world.ClientWorld$Properties#raining
    static jboolean get_field_raining(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "raining", "field_24440", "raining", "f_104839_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.world.ClientWorld$Properties#raining
    static void set_field_raining(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "raining", "field_24440", "raining", "f_104839_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.world.ClientWorld$Properties#difficulty
    static jobject get_field_difficulty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "difficulty", "field_24441", "difficulty", "f_104840_"), "Lbqo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.world.ClientWorld$Properties#difficulty
    static void set_field_difficulty(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "difficulty", "field_24441", "difficulty", "f_104840_"), "Lbqo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.world.ClientWorld$Properties#difficultyLocked
    static jboolean get_field_difficultyLocked(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "difficultyLocked", "field_24442", "difficultyLocked", "f_104841_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.world.ClientWorld$Properties#difficultyLocked
    static void set_field_difficultyLocked(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "difficultyLocked", "field_24442", "difficultyLocked", "f_104841_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getSpawnPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpawnPos", "method_56126", "getSpawnPos", "m_318766_"), "()Ljd;");
    }

    static jobject getSpawnPos(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpawnAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSpawnAngle", "method_30656", "getSpawnAngle", "m_6790_"), "()F");
    }

    static jfloat getSpawnAngle(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnAngle();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getGameTime", "method_188", "getTime", "m_6793_"), "()J");
    }

    static jlong getTime(const jobject& obj) {
                
       const auto methodID = methodID_getTime();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTimeOfDay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getDayTime", "method_217", "getTimeOfDay", "m_6792_"), "()J");
    }

    static jlong getTimeOfDay(const jobject& obj) {
                
       const auto methodID = methodID_getTimeOfDay();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_setTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setGameTime", "method_177", "setTime", "m_104849_"), "(J)V");
    }

    static void setTime(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_setTime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setTimeOfDay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setDayTime", "method_165", "setTimeOfDay", "m_104863_"), "(J)V");
    }

    static void setTimeOfDay(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_setTimeOfDay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setSpawnPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSpawn", "method_187", "setSpawnPos", "m_7250_"), "(Ljd;F)V");
    }

    static void setSpawnPos(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_setSpawnPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isThundering() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "isThundering", "method_203", "isThundering", "m_6534_"), "()Z");
    }

    static jboolean isThundering(const jobject& obj) {
                
       const auto methodID = methodID_isThundering();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isRaining() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isRaining", "method_156", "isRaining", "m_6533_"), "()Z");
    }

    static jboolean isRaining(const jobject& obj) {
                
       const auto methodID = methodID_isRaining();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setRaining() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setRaining", "method_157", "setRaining", "m_5565_"), "(Z)V");
    }

    static void setRaining(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setRaining();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isHardcore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "isHardcore", "method_152", "isHardcore", "m_5466_"), "()Z");
    }

    static jboolean isHardcore(const jobject& obj) {
                
       const auto methodID = methodID_isHardcore();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGameRules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getGameRules", "method_146", "getGameRules", "m_5470_"), "()Ldcs;");
    }

    static jobject getGameRules(const jobject& obj) {
                
       const auto methodID = methodID_getGameRules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getDifficulty", "method_207", "getDifficulty", "m_5472_"), "()Lbqo;");
    }

    static jobject getDifficulty(const jobject& obj) {
                
       const auto methodID = methodID_getDifficulty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDifficultyLocked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "isDifficultyLocked", "method_197", "isDifficultyLocked", "m_5474_"), "()Z");
    }

    static jboolean isDifficultyLocked(const jobject& obj) {
                
       const auto methodID = methodID_isDifficultyLocked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_populateCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillCrashReportCategory", "method_151", "populateCrashReport", "m_142471_"), "(Lp;Ldcy;)V");
    }

    static void populateCrashReport(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_populateCrashReport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setDifficulty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDifficulty", "method_27875", "setDifficulty", "m_104851_"), "(Lbqo;)V");
    }

    static void setDifficulty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setDifficulty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setDifficultyLocked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDifficultyLocked", "method_27876", "setDifficultyLocked", "m_104858_"), "(Z)V");
    }

    static void setDifficultyLocked(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setDifficultyLocked();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSkyDarknessHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getHorizonHeight", "method_28105", "getSkyDarknessHeight", "m_171687_"), "(Ldcy;)D");
    }

    static jdouble getSkyDarknessHeight(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSkyDarknessHeight();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHorizonShadingRatio() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getClearColorScale", "method_28106", "getHorizonShadingRatio", "m_205519_"), "()F");
    }

    static jfloat getHorizonShadingRatio(const jobject& obj) {
                
       const auto methodID = methodID_getHorizonShadingRatio();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_WORLD_CLIENTWORLD$PROPERTIES_HPP