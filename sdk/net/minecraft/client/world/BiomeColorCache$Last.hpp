// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_WORLD_BIOMECOLORCACHE$LAST_HPP
#define NET_MINECRAFT_CLIENT_WORLD_BIOMECOLORCACHE$LAST_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.world.BiomeColorCache$Last
 * Remapped: fhr$b
 */
namespace BiomeColorCache$Last {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fhr$b", "net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo", "net/minecraft/class_4700$class_4701", "net/minecraft/client/world/BiomeColorCache$Last", "net/minecraft/src/C_3424_$C_3426_"));
        }
        return cachedClass;
    };

    // getter for public field net.minecraft.client.world.BiomeColorCache$Last#x
    static jint get_field_x(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "x", "field_21522", "x", "f_92665_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.world.BiomeColorCache$Last#x
    static void set_field_x(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "x", "field_21522", "x", "f_92665_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.world.BiomeColorCache$Last#z
    static jint get_field_z(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "z", "field_21523", "z", "f_92666_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.world.BiomeColorCache$Last#z
    static void set_field_z(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "z", "field_21523", "z", "f_92666_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.world.BiomeColorCache$Last#colors
    static jobject get_field_colors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "cache", "field_21524", "colors", "f_92667_"), "Lfhr$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.world.BiomeColorCache$Last#colors
    static void set_field_colors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "cache", "field_21524", "colors", "f_92667_"), "Lfhr$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

};

#endif // NET_MINECRAFT_CLIENT_WORLD_BIOMECOLORCACHE$LAST_HPP