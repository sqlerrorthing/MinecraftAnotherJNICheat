// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_WORLD_CLIENTWORLD$CLIENTENTITYHANDLER_HPP
#define NET_MINECRAFT_CLIENT_WORLD_CLIENTWORLD$CLIENTENTITYHANDLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.world.ClientWorld$ClientEntityHandler
 * Remapped: fzf$b
 */
namespace ClientWorld$ClientEntityHandler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fzf$b", "net/minecraft/client/multiplayer/ClientLevel$EntityCallbacks", "net/minecraft/class_638$class_5612", "net/minecraft/client/world/ClientWorld$ClientEntityHandler", "net/minecraft/src/C_3899_$C_141671_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onCreated", "method_32125", "create", "m_141989_"), "(Lbsr;)V");
    }

    static void create(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_create();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_destroy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onDestroyed", "method_32126", "destroy", "m_141986_"), "(Lbsr;)V");
    }

    static void destroy(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_destroy();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_startTicking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "onTickingStart", "method_32127", "startTicking", "m_141987_"), "(Lbsr;)V");
    }

    static void startTicking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_startTicking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopTicking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "onTickingEnd", "method_32128", "stopTicking", "m_141983_"), "(Lbsr;)V");
    }

    static void stopTicking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_stopTicking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_startTracking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "onTrackingStart", "method_32129", "startTracking", "m_141985_"), "(Lbsr;)V");
    }

    static void startTracking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_startTracking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopTracking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "onTrackingEnd", "method_32130", "stopTracking", "m_141981_"), "(Lbsr;)V");
    }

    static void stopTracking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_stopTracking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateLoadStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "onSectionChange", "method_43208", "updateLoadStatus", "m_214006_"), "(Lbsr;)V");
    }

    static void updateLoadStatus(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateLoadStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_WORLD_CLIENTWORLD$CLIENTENTITYHANDLER_HPP