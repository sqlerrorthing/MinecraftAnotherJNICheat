// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GL_WINDOWFRAMEBUFFER_HPP
#define NET_MINECRAFT_CLIENT_GL_WINDOWFRAMEBUFFER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gl.WindowFramebuffer
 * Remapped: ezs
 */
namespace WindowFramebuffer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ezs", "com/mojang/blaze3d/pipeline/MainTarget", "net/minecraft/class_6364", "net/minecraft/client/gl/WindowFramebuffer", "net/minecraft/src/C_141530_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.gl.WindowFramebuffer#DEFAULT_WIDTH
    [[maybe_unused]] static jint get_field_DEFAULT_WIDTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_WIDTH", "field_33724", "DEFAULT_WIDTH", "f_166132_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.WindowFramebuffer#DEFAULT_WIDTH
    [[maybe_unused]] static void set_field_DEFAULT_WIDTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_WIDTH", "field_33724", "DEFAULT_WIDTH", "f_166132_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gl.WindowFramebuffer#DEFAULT_HEIGHT
    [[maybe_unused]] static jint get_field_DEFAULT_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_HEIGHT", "field_33725", "DEFAULT_HEIGHT", "f_166133_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.WindowFramebuffer#DEFAULT_HEIGHT
    [[maybe_unused]] static void set_field_DEFAULT_HEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_HEIGHT", "field_33725", "DEFAULT_HEIGHT", "f_166133_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.gl.WindowFramebuffer#DEFAULT
    [[maybe_unused]] static jobject get_field_DEFAULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "DEFAULT_DIMENSIONS", "field_33726", "DEFAULT", "f_166134_"), "Lezs$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.gl.WindowFramebuffer#DEFAULT
    [[maybe_unused]] static void set_field_DEFAULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "DEFAULT_DIMENSIONS", "field_33726", "DEFAULT", "f_166134_"), "Lezs$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createFrameBuffer", "method_36802", "init", "m_166141_"), "(II)V");
    }

    static void init(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_findSuitableSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "allocateAttachments", "method_36804", "findSuitableSize", "m_166146_"), "(II)Lezs$b;");
    }

    static jobject findSuitableSize(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_findSuitableSize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_supportsColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "allocateColorAttachment", "method_36801", "supportsColor", "m_166139_"), "(Lezs$b;)Z");
    }

    static jboolean supportsColor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_supportsColor();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_supportsDepth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "allocateDepthAttachment", "method_36803", "supportsDepth", "m_166144_"), "(Lezs$b;)Z");
    }

    static jboolean supportsDepth(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_supportsDepth();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GL_WINDOWFRAMEBUFFER_HPP