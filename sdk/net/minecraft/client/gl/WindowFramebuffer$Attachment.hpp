// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GL_WINDOWFRAMEBUFFER$ATTACHMENT_HPP
#define NET_MINECRAFT_CLIENT_GL_WINDOWFRAMEBUFFER$ATTACHMENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gl.WindowFramebuffer$Attachment
 * Remapped: ezs$a
 */
namespace WindowFramebuffer$Attachment {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ezs$a", "com/mojang/blaze3d/pipeline/MainTarget$AttachmentState", "net/minecraft/class_6364$class_6365", "net/minecraft/client/gl/WindowFramebuffer$Attachment", "net/minecraft/src/C_141530_$C_141531_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.gl.WindowFramebuffer$Attachment#NONE
    [[maybe_unused]] static jobject get_field_NONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NONE", "field_33727", "NONE", "NONE"), "Lezs$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.WindowFramebuffer$Attachment#NONE
    [[maybe_unused]] static void set_field_NONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NONE", "field_33727", "NONE", "NONE"), "Lezs$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gl.WindowFramebuffer$Attachment#COLOR
    [[maybe_unused]] static jobject get_field_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "COLOR", "field_33728", "COLOR", "COLOR"), "Lezs$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.WindowFramebuffer$Attachment#COLOR
    [[maybe_unused]] static void set_field_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "COLOR", "field_33728", "COLOR", "COLOR"), "Lezs$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gl.WindowFramebuffer$Attachment#DEPTH
    [[maybe_unused]] static jobject get_field_DEPTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEPTH", "field_33729", "DEPTH", "DEPTH"), "Lezs$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.WindowFramebuffer$Attachment#DEPTH
    [[maybe_unused]] static void set_field_DEPTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEPTH", "field_33729", "DEPTH", "DEPTH"), "Lezs$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.gl.WindowFramebuffer$Attachment#COLOR_DEPTH
    [[maybe_unused]] static jobject get_field_COLOR_DEPTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "COLOR_DEPTH", "field_33730", "COLOR_DEPTH", "COLOR_DEPTH"), "Lezs$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.WindowFramebuffer$Attachment#COLOR_DEPTH
    [[maybe_unused]] static void set_field_COLOR_DEPTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "COLOR_DEPTH", "field_33730", "COLOR_DEPTH", "COLOR_DEPTH"), "Lezs$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gl.WindowFramebuffer$Attachment#VALUES
    [[maybe_unused]] static jobject get_field_VALUES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "VALUES", "field_33731", "VALUES", "f_166156_"), "[Lezs$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.WindowFramebuffer$Attachment#VALUES
    [[maybe_unused]] static void set_field_VALUES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "VALUES", "field_33731", "VALUES", "f_166156_"), "[Lezs$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lezs$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lezs$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_with() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "with", "method_36807", "with", "m_166163_"), "(Lezs$a;)Lezs$a;");
    }

    static jobject with(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_with();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GL_WINDOWFRAMEBUFFER$ATTACHMENT_HPP