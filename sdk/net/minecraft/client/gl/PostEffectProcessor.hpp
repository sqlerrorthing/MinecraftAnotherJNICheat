// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GL_POSTEFFECTPROCESSOR_HPP
#define NET_MINECRAFT_CLIENT_GL_POSTEFFECTPROCESSOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gl.PostEffectProcessor
 * Remapped: gfc
 */
namespace PostEffectProcessor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gfc", "net/minecraft/client/renderer/PostChain", "net/minecraft/class_279", "net/minecraft/client/gl/PostEffectProcessor", "net/minecraft/src/C_4145_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gl.PostEffectProcessor#MAIN_TARGET_NAME
    [[maybe_unused]] static jobject get_field_MAIN_TARGET_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAIN_RENDER_TARGET", "field_32770", "MAIN_TARGET_NAME", "f_173045_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.PostEffectProcessor#MAIN_TARGET_NAME
    [[maybe_unused]] static void set_field_MAIN_TARGET_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAIN_RENDER_TARGET", "field_32770", "MAIN_TARGET_NAME", "f_173045_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.PostEffectProcessor#mainTarget
    static jobject get_field_mainTarget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "screenTarget", "field_1499", "mainTarget", "f_110006_"), "Lezv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.PostEffectProcessor#mainTarget
    static void set_field_mainTarget(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "screenTarget", "field_1499", "mainTarget", "f_110006_"), "Lezv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.PostEffectProcessor#resourceFactory
    static jobject get_field_resourceFactory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "resourceProvider", "field_49569", "resourceFactory", "f_316879_"), "Lauh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.PostEffectProcessor#resourceFactory
    static void set_field_resourceFactory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "resourceProvider", "field_49569", "resourceFactory", "f_316879_"), "Lauh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.PostEffectProcessor#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "name", "field_1494", "name", "f_110008_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.PostEffectProcessor#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "name", "field_1494", "name", "f_110008_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.PostEffectProcessor#passes
    static jobject get_field_passes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "passes", "field_1497", "passes", "f_110009_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.PostEffectProcessor#passes
    static void set_field_passes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "passes", "field_1497", "passes", "f_110009_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.PostEffectProcessor#targetsByName
    static jobject get_field_targetsByName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "customRenderTargets", "field_1495", "targetsByName", "f_110010_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.PostEffectProcessor#targetsByName
    static void set_field_targetsByName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "customRenderTargets", "field_1495", "targetsByName", "f_110010_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.PostEffectProcessor#defaultSizedTargets
    static jobject get_field_defaultSizedTargets(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "fullSizedTargets", "field_1496", "defaultSizedTargets", "f_110011_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.PostEffectProcessor#defaultSizedTargets
    static void set_field_defaultSizedTargets(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "fullSizedTargets", "field_1496", "defaultSizedTargets", "f_110011_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.PostEffectProcessor#projectionMatrix
    static jobject get_field_projectionMatrix(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "shaderOrthoMatrix", "field_1498", "projectionMatrix", "f_110012_"), "Lorg/joml/Matrix4f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.PostEffectProcessor#projectionMatrix
    static void set_field_projectionMatrix(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "shaderOrthoMatrix", "field_1498", "projectionMatrix", "f_110012_"), "Lorg/joml/Matrix4f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.PostEffectProcessor#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "screenWidth", "field_1493", "width", "f_110013_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.PostEffectProcessor#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "screenWidth", "field_1493", "width", "f_110013_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.PostEffectProcessor#height
    static jint get_field_height(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "screenHeight", "field_1492", "height", "f_110014_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.PostEffectProcessor#height
    static void set_field_height(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "screenHeight", "field_1492", "height", "f_110014_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.PostEffectProcessor#time
    static jfloat get_field_time(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "time", "field_1501", "time", "f_110015_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.PostEffectProcessor#time
    static void set_field_time(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "time", "field_1501", "time", "f_110015_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.PostEffectProcessor#lastTickDelta
    static jfloat get_field_lastTickDelta(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "lastStamp", "field_1500", "lastTickDelta", "f_110016_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.PostEffectProcessor#lastTickDelta
    static void set_field_lastTickDelta(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "lastStamp", "field_1500", "lastTickDelta", "f_110016_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_parseEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_1256", "parseEffect", "m_110033_"), "(Lgqm;Lakr;)V");
    }

    static void parseEffect(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_parseEffect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_parseTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "parseTargetNode", "method_1265", "parseTarget", "m_110028_"), "(Lcom/google/gson/JsonElement;)V");
    }

    static void parseTarget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_parseTarget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_parsePass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "parsePassNode", "method_1257", "parsePass", "m_110030_"), "(Lgqm;Lcom/google/gson/JsonElement;)V");
    }

    static void parsePass(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_parsePass();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_parseUniform() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "parseUniformNode", "method_1263", "parseUniform", "m_110047_"), "(Lcom/google/gson/JsonElement;)V");
    }

    static void parseUniform(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_parseUniform();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSecondaryTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getTempTarget", "method_1264", "getSecondaryTarget", "m_110036_"), "(Ljava/lang/String;)Lezv;");
    }

    static jobject getSecondaryTarget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSecondaryTarget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addTempTarget", "method_1261", "addTarget", "m_110038_"), "(Ljava/lang/String;II)V");
    }

    static void addTarget(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_addTarget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_addPass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPass", "method_1262", "addPass", "m_110042_"), "(Ljava/lang/String;Lezv;Lezv;Z)Lgfd;");
    }

    static jobject addPass(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_addPass();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_setupProjectionMatrix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updateOrthoMatrix", "method_1267", "setupProjectionMatrix", "m_110046_"), "()V");
    }

    static void setupProjectionMatrix(const jobject& obj) {
                
       const auto methodID = methodID_setupProjectionMatrix();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setupDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resize", "method_1259", "setupDimensions", "m_110025_"), "(II)V");
    }

    static void setupDimensions(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setupDimensions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setTexFilter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setFilterMode", "method_58233", "setTexFilter", "m_321584_"), "(I)V");
    }

    static void setTexFilter(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setTexFilter();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "process", "method_1258", "render", "m_110023_"), "(F)V");
    }

    static void render(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setUniforms() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setUniform", "method_57799", "setUniforms", "m_321643_"), "(Ljava/lang/String;F)V");
    }

    static void setUniforms(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_setUniforms();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getName", "method_1260", "getName", "m_110022_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRenderTarget", "method_1266", "getTarget", "m_110049_"), "(Ljava/lang/String;)Lezv;");
    }

    static jobject getTarget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTarget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GL_POSTEFFECTPROCESSOR_HPP