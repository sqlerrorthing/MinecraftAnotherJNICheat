// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GL_SHADERPROGRAM_HPP
#define NET_MINECRAFT_CLIENT_GL_SHADERPROGRAM_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gl.ShaderProgram
 * Remapped: gfn
 */
namespace ShaderProgram {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gfn", "net/minecraft/client/renderer/ShaderInstance", "net/minecraft/class_5944", "net/minecraft/client/gl/ShaderProgram", "net/minecraft/src/C_141721_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.gl.ShaderProgram#SHADERS_DIRECTORY
    [[maybe_unused]] static jobject get_field_SHADERS_DIRECTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SHADER_PATH", "field_32778", "SHADERS_DIRECTORY", "f_173321_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#SHADERS_DIRECTORY
    [[maybe_unused]] static void set_field_SHADERS_DIRECTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SHADER_PATH", "field_32778", "SHADERS_DIRECTORY", "f_173321_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gl.ShaderProgram#CORE_DIRECTORY
    [[maybe_unused]] static jobject get_field_CORE_DIRECTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SHADER_CORE_PATH", "field_40512", "CORE_DIRECTORY", "f_244364_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#CORE_DIRECTORY
    [[maybe_unused]] static void set_field_CORE_DIRECTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SHADER_CORE_PATH", "field_40512", "CORE_DIRECTORY", "f_244364_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gl.ShaderProgram#INCLUDE_DIRECTORY
    [[maybe_unused]] static jobject get_field_INCLUDE_DIRECTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SHADER_INCLUDE_PATH", "field_32779", "INCLUDE_DIRECTORY", "f_173322_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#INCLUDE_DIRECTORY
    [[maybe_unused]] static void set_field_INCLUDE_DIRECTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SHADER_INCLUDE_PATH", "field_32779", "INCLUDE_DIRECTORY", "f_173322_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.gl.ShaderProgram#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LOGGER", "field_29483", "LOGGER", "f_173323_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.gl.ShaderProgram#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LOGGER", "field_29483", "LOGGER", "f_173323_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gl.ShaderProgram#DEFAULT_UNIFORM
    [[maybe_unused]] static jobject get_field_DEFAULT_UNIFORM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "DUMMY_UNIFORM", "field_29484", "DEFAULT_UNIFORM", "f_173324_"), "Lfar;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#DEFAULT_UNIFORM
    [[maybe_unused]] static void set_field_DEFAULT_UNIFORM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "DUMMY_UNIFORM", "field_29484", "DEFAULT_UNIFORM", "f_173324_"), "Lfar;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gl.ShaderProgram#field_32780
    [[maybe_unused]] static jboolean get_field_field_32780() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ALWAYS_REAPPLY", "field_32780", "field_32780", "f_173325_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#field_32780
    [[maybe_unused]] static void set_field_field_32780(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ALWAYS_REAPPLY", "field_32780", "field_32780", "f_173325_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gl.ShaderProgram#activeProgram
    [[maybe_unused]] static jobject get_field_activeProgram() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "lastAppliedShader", "field_29485", "activeProgram", "f_173326_"), "Lgfn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#activeProgram
    [[maybe_unused]] static void set_field_activeProgram(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "lastAppliedShader", "field_29485", "activeProgram", "f_173326_"), "Lgfn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gl.ShaderProgram#activeProgramGlRef
    [[maybe_unused]] static jint get_field_activeProgramGlRef() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "lastProgramId", "field_29486", "activeProgramGlRef", "f_173327_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#activeProgramGlRef
    [[maybe_unused]] static void set_field_activeProgramGlRef(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "lastProgramId", "field_29486", "activeProgramGlRef", "f_173327_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.ShaderProgram#samplers
    static jobject get_field_samplers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "samplerMap", "field_29487", "samplers", "f_173328_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#samplers
    static void set_field_samplers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "samplerMap", "field_29487", "samplers", "f_173328_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.ShaderProgram#samplerNames
    static jobject get_field_samplerNames(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "samplerNames", "field_29488", "samplerNames", "f_173329_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#samplerNames
    static void set_field_samplerNames(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "samplerNames", "field_29488", "samplerNames", "f_173329_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.ShaderProgram#loadedSamplerIds
    static jobject get_field_loadedSamplerIds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "samplerLocations", "field_29489", "loadedSamplerIds", "f_173330_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#loadedSamplerIds
    static void set_field_loadedSamplerIds(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "samplerLocations", "field_29489", "loadedSamplerIds", "f_173330_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.ShaderProgram#uniforms
    static jobject get_field_uniforms(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "uniforms", "field_29490", "uniforms", "f_173331_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#uniforms
    static void set_field_uniforms(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "uniforms", "field_29490", "uniforms", "f_173331_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.ShaderProgram#loadedUniformIds
    static jobject get_field_loadedUniformIds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "uniformLocations", "field_29491", "loadedUniformIds", "f_173332_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#loadedUniformIds
    static void set_field_loadedUniformIds(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "uniformLocations", "field_29491", "loadedUniformIds", "f_173332_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.ShaderProgram#loadedUniforms
    static jobject get_field_loadedUniforms(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "uniformMap", "field_29492", "loadedUniforms", "f_173333_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#loadedUniforms
    static void set_field_loadedUniforms(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "uniformMap", "field_29492", "loadedUniforms", "f_173333_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.ShaderProgram#glRef
    static jint get_field_glRef(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "programId", "field_29493", "glRef", "f_173299_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#glRef
    static void set_field_glRef(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "programId", "field_29493", "glRef", "f_173299_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.ShaderProgram#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "name", "field_29494", "name", "f_173300_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "name", "field_29494", "name", "f_173300_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.ShaderProgram#dirty
    static jboolean get_field_dirty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "dirty", "field_29495", "dirty", "f_173301_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#dirty
    static void set_field_dirty(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "dirty", "field_29495", "dirty", "f_173301_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.ShaderProgram#vertexShader
    static jobject get_field_vertexShader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "vertexProgram", "field_29467", "vertexShader", "f_173305_"), "Lfaw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#vertexShader
    static void set_field_vertexShader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "vertexProgram", "field_29467", "vertexShader", "f_173305_"), "Lfaw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.ShaderProgram#fragmentShader
    static jobject get_field_fragmentShader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "fragmentProgram", "field_29468", "fragmentShader", "f_173306_"), "Lfaw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#fragmentShader
    static void set_field_fragmentShader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "fragmentProgram", "field_29468", "fragmentShader", "f_173306_"), "Lfaw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.ShaderProgram#format
    static jobject get_field_format(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "vertexFormat", "field_29469", "format", "f_173307_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.ShaderProgram#format
    static void set_field_format(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "vertexFormat", "field_29469", "format", "f_173307_"), "Lfbn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#modelViewMat
    static jobject get_field_modelViewMat(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "MODEL_VIEW_MATRIX", "field_29470", "modelViewMat", "f_173308_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#modelViewMat
    static void set_field_modelViewMat(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "MODEL_VIEW_MATRIX", "field_29470", "modelViewMat", "f_173308_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#projectionMat
    static jobject get_field_projectionMat(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "PROJECTION_MATRIX", "field_29471", "projectionMat", "f_173309_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#projectionMat
    static void set_field_projectionMat(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "PROJECTION_MATRIX", "field_29471", "projectionMat", "f_173309_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#textureMat
    static jobject get_field_textureMat(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "TEXTURE_MATRIX", "field_29472", "textureMat", "f_173310_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#textureMat
    static void set_field_textureMat(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "TEXTURE_MATRIX", "field_29472", "textureMat", "f_173310_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#screenSize
    static jobject get_field_screenSize(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "SCREEN_SIZE", "field_29473", "screenSize", "f_173311_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#screenSize
    static void set_field_screenSize(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "SCREEN_SIZE", "field_29473", "screenSize", "f_173311_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#colorModulator
    static jobject get_field_colorModulator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "COLOR_MODULATOR", "field_29474", "colorModulator", "f_173312_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#colorModulator
    static void set_field_colorModulator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "COLOR_MODULATOR", "field_29474", "colorModulator", "f_173312_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#light0Direction
    static jobject get_field_light0Direction(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "LIGHT0_DIRECTION", "field_29475", "light0Direction", "f_173313_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#light0Direction
    static void set_field_light0Direction(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "LIGHT0_DIRECTION", "field_29475", "light0Direction", "f_173313_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#light1Direction
    static jobject get_field_light1Direction(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "LIGHT1_DIRECTION", "field_29476", "light1Direction", "f_173314_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#light1Direction
    static void set_field_light1Direction(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "LIGHT1_DIRECTION", "field_29476", "light1Direction", "f_173314_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#glintAlpha
    static jobject get_field_glintAlpha(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "GLINT_ALPHA", "field_42231", "glintAlpha", "f_267422_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#glintAlpha
    static void set_field_glintAlpha(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "GLINT_ALPHA", "field_42231", "glintAlpha", "f_267422_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#fogStart
    static jobject get_field_fogStart(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "FOG_START", "field_29477", "fogStart", "f_173315_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#fogStart
    static void set_field_fogStart(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "FOG_START", "field_29477", "fogStart", "f_173315_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#fogEnd
    static jobject get_field_fogEnd(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "FOG_END", "field_29478", "fogEnd", "f_173316_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#fogEnd
    static void set_field_fogEnd(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "FOG_END", "field_29478", "fogEnd", "f_173316_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#fogColor
    static jobject get_field_fogColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "FOG_COLOR", "field_29479", "fogColor", "f_173317_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#fogColor
    static void set_field_fogColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "FOG_COLOR", "field_29479", "fogColor", "f_173317_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#fogShape
    static jobject get_field_fogShape(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "FOG_SHAPE", "field_36373", "fogShape", "f_202432_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#fogShape
    static void set_field_fogShape(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "FOG_SHAPE", "field_36373", "fogShape", "f_202432_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#lineWidth
    static jobject get_field_lineWidth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "LINE_WIDTH", "field_29480", "lineWidth", "f_173318_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#lineWidth
    static void set_field_lineWidth(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "LINE_WIDTH", "field_29480", "lineWidth", "f_173318_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#gameTime
    static jobject get_field_gameTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "GAME_TIME", "field_29481", "gameTime", "f_173319_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#gameTime
    static void set_field_gameTime(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "GAME_TIME", "field_29481", "gameTime", "f_173319_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.gl.ShaderProgram#chunkOffset
    static jobject get_field_chunkOffset(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "CHUNK_OFFSET", "field_29482", "chunkOffset", "f_173320_"), "Lfaz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.gl.ShaderProgram#chunkOffset
    static void set_field_chunkOffset(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "CHUNK_OFFSET", "field_29482", "chunkOffset", "f_173320_"), "Lfaz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_loadShader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getOrCreate", "method_34579", "loadShader", "m_173340_"), "(Lauh;Lfaw$a;Ljava/lang/String;)Lfaw;");
    }

    static jobject loadShader(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_loadShader();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_unbind() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "clear", "method_34585", "unbind", "m_173362_"), "()V");
    }

    static void unbind(const jobject& obj) {
                
       const auto methodID = methodID_unbind();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_bind() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "apply", "method_34586", "bind", "m_173363_"), "()V");
    }

    static void bind(const jobject& obj) {
                
       const auto methodID = methodID_bind();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_markUniformsDirty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "markDirty", "method_1279", "markUniformsDirty", "m_108957_"), "()V");
    }

    static void markUniformsDirty(const jobject& obj) {
                
       const auto methodID = methodID_markUniformsDirty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getUniform() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getUniform", "method_34582", "getUniform", "m_173348_"), "(Ljava/lang/String;)Lfaz;");
    }

    static jobject getUniform(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getUniform();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getUniformOrDefault() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "safeGetUniform", "method_35785", "getUniformOrDefault", "m_173356_"), "(Ljava/lang/String;)Lfar;");
    }

    static jobject getUniformOrDefault(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getUniformOrDefault();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_loadReferences() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "updateLocations", "method_34588", "loadReferences", "m_173366_"), "()V");
    }

    static void loadReferences(const jobject& obj) {
                
       const auto methodID = methodID_loadReferences();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_readSampler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "parseSamplerNode", "method_34580", "readSampler", "m_173344_"), "(Lcom/google/gson/JsonElement;)V");
    }

    static void readSampler(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readSampler();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addSampler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSampler", "method_34583", "addSampler", "m_173350_"), "(Ljava/lang/String;Ljava/lang/Object;)V");
    }

    static void addSampler(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addSampler();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addUniform() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "parseUniformNode", "method_34584", "addUniform", "m_173354_"), "(Lcom/google/gson/JsonElement;)V");
    }

    static void addUniform(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addUniform();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getVertexShader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getVertexProgram", "method_1274", "getVertexShader", "m_108962_"), "()Lfaw;");
    }

    static jobject getVertexShader(const jobject& obj) {
                
       const auto methodID = methodID_getVertexShader();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFragmentShader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getFragmentProgram", "method_1278", "getFragmentShader", "m_108964_"), "()Lfaw;");
    }

    static jobject getFragmentShader(const jobject& obj) {
                
       const auto methodID = methodID_getFragmentShader();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_attachReferencedShaders() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "attachToProgram", "method_34418", "attachReferencedShaders", "m_142662_"), "()V");
    }

    static void attachReferencedShaders(const jobject& obj) {
                
       const auto methodID = methodID_attachReferencedShaders();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFormat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getVertexFormat", "method_35786", "getFormat", "m_173364_"), "()Lfbn;");
    }

    static jobject getFormat(const jobject& obj) {
                
       const auto methodID = methodID_getFormat();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getName", "method_35787", "getName", "m_173365_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGlRef() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getId", "method_1270", "getGlRef", "m_108943_"), "()I");
    }

    static jint getGlRef(const jobject& obj) {
                
       const auto methodID = methodID_getGlRef();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_initializeUniforms() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDefaultUniforms", "method_60897", "initializeUniforms", "m_340471_"), "(Lfbn$c;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lfam;)V");
    }

    static void initializeUniforms(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initializeUniforms();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GL_SHADERPROGRAM_HPP