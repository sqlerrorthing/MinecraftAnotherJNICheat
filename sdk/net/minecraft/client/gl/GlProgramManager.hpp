// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GL_GLPROGRAMMANAGER_HPP
#define NET_MINECRAFT_CLIENT_GL_GLPROGRAMMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gl.GlProgramManager
 * Remapped: fax
 */
namespace GlProgramManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fax", "com/mojang/blaze3d/shaders/ProgramManager", "net/minecraft/class_285", "net/minecraft/client/gl/GlProgramManager", "net/minecraft/src/C_3171_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gl.GlProgramManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_1551", "LOGGER", "f_85575_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.GlProgramManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_1551", "LOGGER", "f_85575_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_useProgram() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "glUseProgram", "method_22094", "useProgram", "m_85578_"), "(I)V");
    }

    static void useProgram(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_useProgram();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_deleteProgram() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "releaseProgram", "method_1304", "deleteProgram", "m_166621_"), "(Lfay;)V");
    }

    static void deleteProgram(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_deleteProgram();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createProgram() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createProgram", "method_1306", "createProgram", "m_85577_"), "()I");
    }

    static jint createProgram() {
       const auto clazz = self();
       const auto methodID = methodID_createProgram();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID_linkProgram() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "linkShader", "method_1307", "linkProgram", "m_166623_"), "(Lfay;)V");
    }

    static void linkProgram(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_linkProgram();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GL_GLPROGRAMMANAGER_HPP