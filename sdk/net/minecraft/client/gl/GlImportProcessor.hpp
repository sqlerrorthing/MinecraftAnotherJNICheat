// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GL_GLIMPORTPROCESSOR_HPP
#define NET_MINECRAFT_CLIENT_GL_GLIMPORTPROCESSOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gl.GlImportProcessor
 * Remapped: fap
 */
namespace GlImportProcessor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fap", "com/mojang/blaze3d/preprocessor/GlslPreprocessor", "net/minecraft/class_5913", "net/minecraft/client/gl/GlImportProcessor", "net/minecraft/src/C_141538_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gl.GlImportProcessor#MULTI_LINE_COMMENT_PATTERN
    [[maybe_unused]] static jobject get_field_MULTI_LINE_COMMENT_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "C_COMMENT", "field_32036", "MULTI_LINE_COMMENT_PATTERN", "f_166454_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.GlImportProcessor#MULTI_LINE_COMMENT_PATTERN
    [[maybe_unused]] static void set_field_MULTI_LINE_COMMENT_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "C_COMMENT", "field_32036", "MULTI_LINE_COMMENT_PATTERN", "f_166454_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gl.GlImportProcessor#SINGLE_LINE_COMMENT_PATTERN
    [[maybe_unused]] static jobject get_field_SINGLE_LINE_COMMENT_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LINE_COMMENT", "field_33620", "SINGLE_LINE_COMMENT_PATTERN", "f_166455_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.GlImportProcessor#SINGLE_LINE_COMMENT_PATTERN
    [[maybe_unused]] static void set_field_SINGLE_LINE_COMMENT_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LINE_COMMENT", "field_33620", "SINGLE_LINE_COMMENT_PATTERN", "f_166455_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gl.GlImportProcessor#MOJ_IMPORT_PATTERN
    [[maybe_unused]] static jobject get_field_MOJ_IMPORT_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "REGEX_MOJ_IMPORT", "field_29200", "MOJ_IMPORT_PATTERN", "f_166456_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.GlImportProcessor#MOJ_IMPORT_PATTERN
    [[maybe_unused]] static void set_field_MOJ_IMPORT_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "REGEX_MOJ_IMPORT", "field_29200", "MOJ_IMPORT_PATTERN", "f_166456_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gl.GlImportProcessor#IMPORT_VERSION_PATTERN
    [[maybe_unused]] static jobject get_field_IMPORT_VERSION_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "REGEX_VERSION", "field_29201", "IMPORT_VERSION_PATTERN", "f_166457_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.GlImportProcessor#IMPORT_VERSION_PATTERN
    [[maybe_unused]] static void set_field_IMPORT_VERSION_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "REGEX_VERSION", "field_29201", "IMPORT_VERSION_PATTERN", "f_166457_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gl.GlImportProcessor#TRAILING_WHITESPACE_PATTERN
    [[maybe_unused]] static jobject get_field_TRAILING_WHITESPACE_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "REGEX_ENDS_WITH_WHITESPACE", "field_33621", "TRAILING_WHITESPACE_PATTERN", "f_166458_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.GlImportProcessor#TRAILING_WHITESPACE_PATTERN
    [[maybe_unused]] static void set_field_TRAILING_WHITESPACE_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "REGEX_ENDS_WITH_WHITESPACE", "field_33621", "TRAILING_WHITESPACE_PATTERN", "f_166458_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_readSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "process", "method_34229", "readSource", "m_166461_"), "(Ljava/lang/String;)Ljava/util/List;");
    }

    static jobject readSource(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readSource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_parseImports() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "processImports", "method_34232", "parseImports", "m_166469_"), "(Ljava/lang/String;Lfap$a;Ljava/lang/String;)Ljava/util/List;");
    }

    static jobject parseImports(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_parseImports();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_extractVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "processVersions", "method_34231", "extractVersion", "m_166466_"), "(Ljava/lang/String;Lfap$a;)Ljava/lang/String;");
    }

    static jobject extractVersion(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_extractVersion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readImport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setVersion", "method_34230", "readImport", "m_166463_"), "(Ljava/lang/String;I)Ljava/lang/String;");
    }

    static jobject readImport(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_readImport();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isLineValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isDirectiveEnabled", "method_36423", "isLineValid", "m_166473_"), "(Ljava/lang/String;Ljava/util/regex/Matcher;)Z");
    }

    static jboolean isLineValid(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isLineValid();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_hasBogusString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isDirectiveDisabled", "method_36424", "hasBogusString", "m_166476_"), "(Ljava/lang/String;Ljava/util/regex/Matcher;I)Z");
    }

    static jboolean hasBogusString(const jobject& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_hasBogusString();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_loadImport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyImport", "method_34233", "loadImport", "m_142138_"), "(ZLjava/lang/String;)Ljava/lang/String;");
    }

    static jobject loadImport(const jobject& obj, const jboolean& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_loadImport();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GL_GLIMPORTPROCESSOR_HPP