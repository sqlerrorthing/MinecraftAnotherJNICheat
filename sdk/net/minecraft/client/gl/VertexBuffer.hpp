// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GL_VERTEXBUFFER_HPP
#define NET_MINECRAFT_CLIENT_GL_VERTEXBUFFER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gl.VertexBuffer
 * Remapped: fbl
 */
namespace VertexBuffer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fbl", "com/mojang/blaze3d/vertex/VertexBuffer", "net/minecraft/class_291", "net/minecraft/client/gl/VertexBuffer", "net/minecraft/src/C_3186_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.gl.VertexBuffer#usage
    static jobject get_field_usage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "usage", "field_44792", "usage", "f_285574_"), "Lfbl$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.VertexBuffer#usage
    static void set_field_usage(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "usage", "field_44792", "usage", "f_285574_"), "Lfbl$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.VertexBuffer#vertexBufferId
    static jint get_field_vertexBufferId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "vertexBufferId", "field_1594", "vertexBufferId", "f_231217_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.VertexBuffer#vertexBufferId
    static void set_field_vertexBufferId(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "vertexBufferId", "field_1594", "vertexBufferId", "f_231217_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.VertexBuffer#indexBufferId
    static jint get_field_indexBufferId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "indexBufferId", "field_27366", "indexBufferId", "f_166860_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.VertexBuffer#indexBufferId
    static void set_field_indexBufferId(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "indexBufferId", "field_27366", "indexBufferId", "f_166860_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.VertexBuffer#vertexArrayId
    static jint get_field_vertexArrayId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "arrayObjectId", "field_29338", "vertexArrayId", "f_166862_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.VertexBuffer#vertexArrayId
    static void set_field_vertexArrayId(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "arrayObjectId", "field_29338", "vertexArrayId", "f_166862_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.VertexBuffer#vertexFormat
    static jobject get_field_vertexFormat(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "format", "field_29339", "vertexFormat", "f_85917_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.VertexBuffer#vertexFormat
    static void set_field_vertexFormat(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "format", "field_29339", "vertexFormat", "f_85917_"), "Lfbn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.VertexBuffer#sharedSequentialIndexBuffer
    static jobject get_field_sharedSequentialIndexBuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "sequentialIndices", "field_38983", "sharedSequentialIndexBuffer", "f_166865_"), "Lcom/mojang/blaze3d/systems/RenderSystem$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.VertexBuffer#sharedSequentialIndexBuffer
    static void set_field_sharedSequentialIndexBuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "sequentialIndices", "field_38983", "sharedSequentialIndexBuffer", "f_166865_"), "Lcom/mojang/blaze3d/systems/RenderSystem$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.VertexBuffer#indexType
    static jobject get_field_indexType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "indexType", "field_27367", "indexType", "f_166861_"), "Lfbn$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.VertexBuffer#indexType
    static void set_field_indexType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "indexType", "field_27367", "indexType", "f_166861_"), "Lfbn$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.VertexBuffer#indexCount
    static jint get_field_indexCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "indexCount", "field_1593", "indexCount", "f_166863_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.VertexBuffer#indexCount
    static void set_field_indexCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "indexCount", "field_1593", "indexCount", "f_166863_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.VertexBuffer#drawMode
    static jobject get_field_drawMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "mode", "field_27368", "drawMode", "f_166864_"), "Lfbn$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.VertexBuffer#drawMode
    static void set_field_drawMode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "mode", "field_27368", "drawMode", "f_166864_"), "Lfbn$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_upload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "upload", "method_1352", "upload", "m_231221_"), "(Lfbh;)V");
    }

    static void upload(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_upload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_uploadIndexBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "uploadIndexBuffer", "method_60829", "uploadIndexBuffer", "m_338802_"), "(Lfbf$a;)V");
    }

    static void uploadIndexBuffer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_uploadIndexBuffer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_uploadVertexBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "uploadVertexBuffer", "method_43442", "uploadVertexBuffer", "m_231218_"), "(Lfbh$a;Ljava/nio/ByteBuffer;)Lfbn;");
    }

    static jobject uploadVertexBuffer(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_uploadVertexBuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__uploadIndexBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "uploadIndexBuffer", "method_43443", "uploadIndexBuffer", "m_231223_"), "(Lfbh$a;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/systems/RenderSystem$a;");
    }

    static jobject _uploadIndexBuffer(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__uploadIndexBuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_bind() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "bind", "method_1353", "bind", "m_85921_"), "()V");
    }

    static void bind(const jobject& obj) {
                
       const auto methodID = methodID_bind();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_unbind() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "unbind", "method_1354", "unbind", "m_85931_"), "()V");
    }

    static void unbind() {
       const auto clazz = self();
       const auto methodID = methodID_unbind();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_draw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "draw", "method_35665", "draw", "m_166882_"), "()V");
    }

    static void draw(const jobject& obj) {
                
       const auto methodID = methodID_draw();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getIndexType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getIndexType", "method_43445", "getIndexType", "m_231231_"), "()Lfbn$b;");
    }

    static jobject getIndexType(const jobject& obj) {
                
       const auto methodID = methodID_getIndexType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__draw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "drawWithShader", "method_34427", "draw", "m_253207_"), "(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lgfn;)V");
    }

    static void _draw(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__draw();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_drawInternal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "_drawWithShader", "method_34431", "drawInternal", "m_166876_"), "(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lgfn;)V");
    }

    static void drawInternal(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_drawInternal();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVertexFormat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getFormat", "method_34435", "getVertexFormat", "m_166892_"), "()Lfbn;");
    }

    static jobject getVertexFormat(const jobject& obj) {
                
       const auto methodID = methodID_getVertexFormat();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isClosed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isInvalid", "method_43444", "isClosed", "m_231230_"), "()Z");
    }

    static jboolean isClosed(const jobject& obj) {
                
       const auto methodID = methodID_isClosed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GL_VERTEXBUFFER_HPP