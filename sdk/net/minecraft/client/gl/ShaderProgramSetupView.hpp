// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GL_SHADERPROGRAMSETUPVIEW_HPP
#define NET_MINECRAFT_CLIENT_GL_SHADERPROGRAMSETUPVIEW_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gl.ShaderProgramSetupView
 * Remapped: fay
 */
namespace ShaderProgramSetupView {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fay", "com/mojang/blaze3d/shaders/Shader", "net/minecraft/class_3679", "net/minecraft/client/gl/ShaderProgramSetupView", "net/minecraft/src/C_141543_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getGlRef() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getId", "method_1270", "getGlRef", "m_108943_"), "()I");
    }

    static jint getGlRef(const jobject& obj) {
                
       const auto methodID = methodID_getGlRef();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_markUniformsDirty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "markDirty", "method_1279", "markUniformsDirty", "m_108957_"), "()V");
    }

    static void markUniformsDirty(const jobject& obj) {
                
       const auto methodID = methodID_markUniformsDirty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVertexShader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getVertexProgram", "method_1274", "getVertexShader", "m_108962_"), "()Lfaw;");
    }

    static jobject getVertexShader(const jobject& obj) {
                
       const auto methodID = methodID_getVertexShader();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFragmentShader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getFragmentProgram", "method_1278", "getFragmentShader", "m_108964_"), "()Lfaw;");
    }

    static jobject getFragmentShader(const jobject& obj) {
                
       const auto methodID = methodID_getFragmentShader();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_attachReferencedShaders() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "attachToProgram", "method_34418", "attachReferencedShaders", "m_142662_"), "()V");
    }

    static void attachReferencedShaders(const jobject& obj) {
                
       const auto methodID = methodID_attachReferencedShaders();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GL_SHADERPROGRAMSETUPVIEW_HPP