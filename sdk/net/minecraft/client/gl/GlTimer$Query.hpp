// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_GL_GLTIMER$QUERY_HPP
#define NET_MINECRAFT_CLIENT_GL_GLTIMER$QUERY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.gl.GlTimer$Query
 * Remapped: fbb$a
 */
namespace GlTimer$Query {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fbb$a", "com/mojang/blaze3d/systems/TimerQuery$FrameProfile", "net/minecraft/class_7168$class_7169", "net/minecraft/client/gl/GlTimer$Query", "net/minecraft/src/C_213327_$C_213328_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.gl.GlTimer$Query#MISSING
    [[maybe_unused]] static jlong get_field_MISSING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_RESULT", "field_37845", "MISSING", "f_231143_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.GlTimer$Query#MISSING
    [[maybe_unused]] static void set_field_MISSING(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_RESULT", "field_37845", "MISSING", "f_231143_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.gl.GlTimer$Query#CLOSED
    [[maybe_unused]] static jlong get_field_CLOSED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CANCELLED_RESULT", "field_37846", "CLOSED", "f_231144_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.GlTimer$Query#CLOSED
    [[maybe_unused]] static void set_field_CLOSED(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CANCELLED_RESULT", "field_37846", "CLOSED", "f_231144_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.GlTimer$Query#queryId
    static jint get_field_queryId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "queryName", "field_37847", "queryId", "f_231145_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.GlTimer$Query#queryId
    static void set_field_queryId(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "queryName", "field_37847", "queryId", "f_231145_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.gl.GlTimer$Query#result
    static jlong get_field_result(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "result", "field_37848", "result", "f_231146_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.gl.GlTimer$Query#result
    static void set_field_result(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "result", "field_37848", "result", "f_231146_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "cancel", "method_41722", "close", "m_231149_"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isResultAvailable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isDone", "method_41723", "isResultAvailable", "m_231150_"), "()Z");
    }

    static jboolean isResultAvailable(const jobject& obj) {
                
       const auto methodID = methodID_isResultAvailable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_queryResult() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "get", "method_41724", "queryResult", "m_231151_"), "()J");
    }

    static jlong queryResult(const jobject& obj) {
                
       const auto methodID = methodID_queryResult();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_GL_GLTIMER$QUERY_HPP