// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_MOUSE_HPP
#define NET_MINECRAFT_CLIENT_MOUSE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.Mouse
 * Remapped: fgp
 */
namespace Mouse {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fgp", "net/minecraft/client/MouseHandler", "net/minecraft/class_312", "net/minecraft/client/Mouse", "net/minecraft/src/C_3397_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.Mouse#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_52126", "LOGGER", "f_336811_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_52126", "LOGGER", "f_336811_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "minecraft", "field_1779", "client", "f_91503_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "minecraft", "field_1779", "client", "f_91503_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#leftButtonClicked
    static jboolean get_field_leftButtonClicked(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "isLeftPressed", "field_1791", "leftButtonClicked", "f_91504_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#leftButtonClicked
    static void set_field_leftButtonClicked(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "isLeftPressed", "field_1791", "leftButtonClicked", "f_91504_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#middleButtonClicked
    static jboolean get_field_middleButtonClicked(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "isMiddlePressed", "field_1790", "middleButtonClicked", "f_91505_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#middleButtonClicked
    static void set_field_middleButtonClicked(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "isMiddlePressed", "field_1790", "middleButtonClicked", "f_91505_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#rightButtonClicked
    static jboolean get_field_rightButtonClicked(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "isRightPressed", "field_1788", "rightButtonClicked", "f_91506_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#rightButtonClicked
    static void set_field_rightButtonClicked(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "isRightPressed", "field_1788", "rightButtonClicked", "f_91506_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#x
    static jdouble get_field_x(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "xpos", "field_1795", "x", "f_91507_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#x
    static void set_field_x(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "xpos", "field_1795", "x", "f_91507_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#y
    static jdouble get_field_y(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "ypos", "field_1794", "y", "f_91508_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#y
    static void set_field_y(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "ypos", "field_1794", "y", "f_91508_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#controlLeftClicks
    static jint get_field_controlLeftClicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "fakeRightMouse", "field_1781", "controlLeftClicks", "f_91509_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#controlLeftClicks
    static void set_field_controlLeftClicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "fakeRightMouse", "field_1781", "controlLeftClicks", "f_91509_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#activeButton
    static jint get_field_activeButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "activeButton", "field_1780", "activeButton", "f_91510_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#activeButton
    static void set_field_activeButton(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "activeButton", "field_1780", "activeButton", "f_91510_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#hasResolutionChanged
    static jboolean get_field_hasResolutionChanged(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "ignoreFirstMove", "field_1784", "hasResolutionChanged", "f_91511_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#hasResolutionChanged
    static void set_field_hasResolutionChanged(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "ignoreFirstMove", "field_1784", "hasResolutionChanged", "f_91511_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#field_1796
    static jint get_field_field_1796(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "clickDepth", "field_1796", "field_1796", "f_91512_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#field_1796
    static void set_field_field_1796(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "clickDepth", "field_1796", "field_1796", "f_91512_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#glfwTime
    static jdouble get_field_glfwTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "mousePressedTime", "field_1792", "glfwTime", "f_91513_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#glfwTime
    static void set_field_glfwTime(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "mousePressedTime", "field_1792", "glfwTime", "f_91513_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#cursorXSmoother
    static jobject get_field_cursorXSmoother(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "smoothTurnX", "field_1793", "cursorXSmoother", "f_91514_"), "Lazf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#cursorXSmoother
    static void set_field_cursorXSmoother(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "smoothTurnX", "field_1793", "cursorXSmoother", "f_91514_"), "Lazf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#cursorYSmoother
    static jobject get_field_cursorYSmoother(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "smoothTurnY", "field_1782", "cursorYSmoother", "f_91515_"), "Lazf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#cursorYSmoother
    static void set_field_cursorYSmoother(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "smoothTurnY", "field_1782", "cursorYSmoother", "f_91515_"), "Lazf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#cursorDeltaX
    static jdouble get_field_cursorDeltaX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "accumulatedDX", "field_1789", "cursorDeltaX", "f_91516_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#cursorDeltaX
    static void set_field_cursorDeltaX(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "accumulatedDX", "field_1789", "cursorDeltaX", "f_91516_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#cursorDeltaY
    static jdouble get_field_cursorDeltaY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "accumulatedDY", "field_1787", "cursorDeltaY", "f_91517_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#cursorDeltaY
    static void set_field_cursorDeltaY(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "accumulatedDY", "field_1787", "cursorDeltaY", "f_91517_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#eventDeltaHorizontalWheel
    static jdouble get_field_eventDeltaHorizontalWheel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "accumulatedScrollX", "field_45296", "eventDeltaHorizontalWheel", "f_291070_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#eventDeltaHorizontalWheel
    static void set_field_eventDeltaHorizontalWheel(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "accumulatedScrollX", "field_45296", "eventDeltaHorizontalWheel", "f_291070_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#eventDeltaVerticalWheel
    static jdouble get_field_eventDeltaVerticalWheel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "accumulatedScrollY", "field_45297", "eventDeltaVerticalWheel", "f_291867_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#eventDeltaVerticalWheel
    static void set_field_eventDeltaVerticalWheel(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "accumulatedScrollY", "field_45297", "eventDeltaVerticalWheel", "f_291867_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#lastTickTime
    static jdouble get_field_lastTickTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "lastHandleMovementTime", "field_47842", "lastTickTime", "f_317039_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#lastTickTime
    static void set_field_lastTickTime(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "lastHandleMovementTime", "field_47842", "lastTickTime", "f_317039_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.Mouse#cursorLocked
    static jboolean get_field_cursorLocked(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "mouseGrabbed", "field_1783", "cursorLocked", "f_91520_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.Mouse#cursorLocked
    static void set_field_cursorLocked(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "mouseGrabbed", "field_1783", "cursorLocked", "f_91520_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_onMouseButton() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onPress", "method_1601", "onMouseButton", "m_91530_"), "(JIII)V");
    }

    static void onMouseButton(const jobject& obj, const jlong& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_onMouseButton();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onMouseScroll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onScroll", "method_1598", "onMouseScroll", "m_91526_"), "(JDD)V");
    }

    static void onMouseScroll(const jobject& obj, const jlong& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_onMouseScroll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onFilesDropped() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onDrop", "method_29616", "onFilesDropped", "m_91539_"), "(JLjava/util/List;I)V");
    }

    static void onFilesDropped(const jobject& obj, const jlong& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_onFilesDropped();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setup", "method_1607", "setup", "m_91524_"), "(J)V");
    }

    static void setup(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_setup();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onCursorPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onMove", "method_1600", "onCursorPos", "m_91561_"), "(JDD)V");
    }

    static void onCursorPos(const jobject& obj, const jlong& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_onCursorPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleAccumulatedMovement", "method_55793", "tick", "m_319197_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateMouse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "turnPlayer", "method_1606", "updateMouse", "m_91523_"), "(D)V");
    }

    static void updateMouse(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_updateMouse();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_wasLeftButtonClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isLeftPressed", "method_1608", "wasLeftButtonClicked", "m_91560_"), "()Z");
    }

    static jboolean wasLeftButtonClicked(const jobject& obj) {
                
       const auto methodID = methodID_wasLeftButtonClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_wasMiddleButtonClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isMiddlePressed", "method_35707", "wasMiddleButtonClicked", "m_168090_"), "()Z");
    }

    static jboolean wasMiddleButtonClicked(const jobject& obj) {
                
       const auto methodID = methodID_wasMiddleButtonClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_wasRightButtonClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isRightPressed", "method_1609", "wasRightButtonClicked", "m_91584_"), "()Z");
    }

    static jboolean wasRightButtonClicked(const jobject& obj) {
                
       const auto methodID = methodID_wasRightButtonClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "xpos", "method_1603", "getX", "m_91589_"), "()D");
    }

    static jdouble getX(const jobject& obj) {
                
       const auto methodID = methodID_getX();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "ypos", "method_1604", "getY", "m_91594_"), "()D");
    }

    static jdouble getY(const jobject& obj) {
                
       const auto methodID = methodID_getY();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_onResolutionChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "setIgnoreFirstMove", "method_1599", "onResolutionChanged", "m_91599_"), "()V");
    }

    static void onResolutionChanged(const jobject& obj) {
                
       const auto methodID = methodID_onResolutionChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isCursorLocked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "isMouseGrabbed", "method_1613", "isCursorLocked", "m_91600_"), "()Z");
    }

    static jboolean isCursorLocked(const jobject& obj) {
                
       const auto methodID = methodID_isCursorLocked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_lockCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "grabMouse", "method_1612", "lockCursor", "m_91601_"), "()V");
    }

    static void lockCursor(const jobject& obj) {
                
       const auto methodID = methodID_lockCursor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_unlockCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "releaseMouse", "method_1610", "unlockCursor", "m_91602_"), "()V");
    }

    static void unlockCursor(const jobject& obj) {
                
       const auto methodID = methodID_unlockCursor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setResolutionChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "cursorEntered", "method_30134", "setResolutionChanged", "m_91603_"), "()V");
    }

    static void setResolutionChanged(const jobject& obj) {
                
       const auto methodID = methodID_setResolutionChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_MOUSE_HPP