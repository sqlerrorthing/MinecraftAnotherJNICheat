// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_INPUT_INPUT_HPP
#define NET_MINECRAFT_CLIENT_INPUT_INPUT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.input.Input
 * Remapped: gdz
 */
namespace Input {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gdz", "net/minecraft/client/player/Input", "net/minecraft/class_744", "net/minecraft/client/input/Input", "net/minecraft/src/C_4103_"));
        }
        return cachedClass;
    };

    // getter for public field net.minecraft.client.input.Input#movementSideways
    static jfloat get_field_movementSideways(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "leftImpulse", "field_3907", "movementSideways", "f_108566_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.input.Input#movementSideways
    static void set_field_movementSideways(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "leftImpulse", "field_3907", "movementSideways", "f_108566_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.input.Input#movementForward
    static jfloat get_field_movementForward(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "forwardImpulse", "field_3905", "movementForward", "f_108567_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.input.Input#movementForward
    static void set_field_movementForward(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "forwardImpulse", "field_3905", "movementForward", "f_108567_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.input.Input#pressingForward
    static jboolean get_field_pressingForward(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "up", "field_3910", "pressingForward", "f_108568_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.input.Input#pressingForward
    static void set_field_pressingForward(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "up", "field_3910", "pressingForward", "f_108568_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.input.Input#pressingBack
    static jboolean get_field_pressingBack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "down", "field_3909", "pressingBack", "f_108569_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.input.Input#pressingBack
    static void set_field_pressingBack(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "down", "field_3909", "pressingBack", "f_108569_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.input.Input#pressingLeft
    static jboolean get_field_pressingLeft(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "left", "field_3908", "pressingLeft", "f_108570_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.input.Input#pressingLeft
    static void set_field_pressingLeft(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "left", "field_3908", "pressingLeft", "f_108570_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.input.Input#pressingRight
    static jboolean get_field_pressingRight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "right", "field_3906", "pressingRight", "f_108571_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.input.Input#pressingRight
    static void set_field_pressingRight(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "right", "field_3906", "pressingRight", "f_108571_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.input.Input#jumping
    static jboolean get_field_jumping(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "jumping", "field_3904", "jumping", "f_108572_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.input.Input#jumping
    static void set_field_jumping(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "jumping", "field_3904", "jumping", "f_108572_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.input.Input#sneaking
    static jboolean get_field_sneaking(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "shiftKeyDown", "field_3903", "sneaking", "f_108573_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.input.Input#sneaking
    static void set_field_sneaking(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "shiftKeyDown", "field_3903", "sneaking", "f_108573_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_3129", "tick", "m_214106_"), "(ZF)V");
    }

    static void tick(const jobject& obj, const jboolean& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getMovementInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMoveVector", "method_3128", "getMovementInput", "m_108575_"), "()Lexb;");
    }

    static jobject getMovementInput(const jobject& obj) {
                
       const auto methodID = methodID_getMovementInput();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasForwardMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasForwardImpulse", "method_20622", "hasForwardMovement", "m_108577_"), "()Z");
    }

    static jboolean hasForwardMovement(const jobject& obj) {
                
       const auto methodID = methodID_hasForwardMovement();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_INPUT_INPUT_HPP