// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_NETWORK_DATAQUERYHANDLER_HPP
#define NET_MINECRAFT_CLIENT_NETWORK_DATAQUERYHANDLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.network.DataQueryHandler
 * Remapped: fge
 */
namespace DataQueryHandler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fge", "net/minecraft/client/DebugQueryHandler", "net/minecraft/class_300", "net/minecraft/client/network/DataQueryHandler", "net/minecraft/src/C_3379_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.network.DataQueryHandler#networkHandler
    static jobject get_field_networkHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "connection", "field_1640", "networkHandler", "f_90697_"), "Lfzg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.DataQueryHandler#networkHandler
    static void set_field_networkHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "connection", "field_1640", "networkHandler", "f_90697_"), "Lfzg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.DataQueryHandler#expectedTransactionId
    static jint get_field_expectedTransactionId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "transactionId", "field_1641", "expectedTransactionId", "f_90698_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.DataQueryHandler#expectedTransactionId
    static void set_field_expectedTransactionId(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "transactionId", "field_1641", "expectedTransactionId", "f_90698_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.DataQueryHandler#callback
    static jobject get_field_callback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "callback", "field_1642", "callback", "f_90699_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.DataQueryHandler#callback
    static void set_field_callback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "callback", "field_1642", "callback", "f_90699_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_handleQueryResponse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleResponse", "method_1404", "handleQueryResponse", "m_90705_"), "(ILub;)Z");
    }

    static jboolean handleQueryResponse(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_handleQueryResponse();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_nextQuery() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startTransaction", "method_1402", "nextQuery", "m_90711_"), "(Ljava/util/function/Consumer;)I");
    }

    static jint nextQuery(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_nextQuery();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_queryEntityNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "queryEntityTag", "method_1405", "queryEntityNbt", "m_90702_"), "(ILjava/util/function/Consumer;)V");
    }

    static void queryEntityNbt(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_queryEntityNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_queryBlockNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "queryBlockEntityTag", "method_1403", "queryBlockNbt", "m_90708_"), "(Ljd;Ljava/util/function/Consumer;)V");
    }

    static void queryBlockNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_queryBlockNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_NETWORK_DATAQUERYHANDLER_HPP