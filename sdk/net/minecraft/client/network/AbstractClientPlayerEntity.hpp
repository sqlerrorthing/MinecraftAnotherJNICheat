// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_NETWORK_ABSTRACTCLIENTPLAYERENTITY_HPP
#define NET_MINECRAFT_CLIENT_NETWORK_ABSTRACTCLIENTPLAYERENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.network.AbstractClientPlayerEntity
 * Remapped: gdy
 */
namespace AbstractClientPlayerEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gdy", "net/minecraft/client/player/AbstractClientPlayer", "net/minecraft/class_742", "net/minecraft/client/network/AbstractClientPlayerEntity", "net/minecraft/src/C_4102_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.network.AbstractClientPlayerEntity#playerListEntry
    static jobject get_field_playerListEntry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "playerInfo", "field_3901", "playerListEntry", "f_108546_"), "Lfzq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.AbstractClientPlayerEntity#playerListEntry
    static void set_field_playerListEntry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "playerInfo", "field_3901", "playerListEntry", "f_108546_"), "Lfzq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.network.AbstractClientPlayerEntity#lastVelocity
    static jobject get_field_lastVelocity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "deltaMovementOnPreviousTick", "field_42906", "lastVelocity", "f_271420_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.network.AbstractClientPlayerEntity#lastVelocity
    static void set_field_lastVelocity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "deltaMovementOnPreviousTick", "field_42906", "lastVelocity", "f_271420_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.network.AbstractClientPlayerEntity#elytraPitch
    static jfloat get_field_elytraPitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "elytraRotX", "field_3900", "elytraPitch", "f_108542_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.network.AbstractClientPlayerEntity#elytraPitch
    static void set_field_elytraPitch(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "elytraRotX", "field_3900", "elytraPitch", "f_108542_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.network.AbstractClientPlayerEntity#elytraYaw
    static jfloat get_field_elytraYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "elytraRotY", "field_3899", "elytraYaw", "f_108543_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.network.AbstractClientPlayerEntity#elytraYaw
    static void set_field_elytraYaw(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "elytraRotY", "field_3899", "elytraYaw", "f_108543_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.network.AbstractClientPlayerEntity#elytraRoll
    static jfloat get_field_elytraRoll(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "elytraRotZ", "field_3898", "elytraRoll", "f_108544_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.network.AbstractClientPlayerEntity#elytraRoll
    static void set_field_elytraRoll(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "elytraRotZ", "field_3898", "elytraRoll", "f_108544_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.network.AbstractClientPlayerEntity#clientWorld
    static jobject get_field_clientWorld(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "clientLevel", "field_17892", "clientWorld", "f_108545_"), "Lfzf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.network.AbstractClientPlayerEntity#clientWorld
    static void set_field_clientWorld(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "clientLevel", "field_17892", "clientWorld", "f_108545_"), "Lfzf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_isSpectator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R_", "isSpectator", "method_7325", "isSpectator", "m_5833_"), "()Z");
    }

    static jboolean isSpectator(const jobject& obj) {
                
       const auto methodID = methodID_isSpectator();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isCreative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isCreative", "method_7337", "isCreative", "m_7500_"), "()Z");
    }

    static jboolean isCreative(const jobject& obj) {
                
       const auto methodID = methodID_isCreative();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayerListEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPlayerInfo", "method_3123", "getPlayerListEntry", "m_108558_"), "()Lfzq;");
    }

    static jobject getPlayerListEntry(const jobject& obj) {
                
       const auto methodID = methodID_getPlayerListEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_lerpVelocity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "getDeltaMovementLerped", "method_49339", "lerpVelocity", "m_272267_"), "(F)Lexc;");
    }

    static jobject lerpVelocity(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_lerpVelocity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSkinTextures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSkin", "method_52814", "getSkinTextures", "m_294544_"), "()Lgrl;");
    }

    static jobject getSkinTextures(const jobject& obj) {
                
       const auto methodID = methodID_getSkinTextures();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFovMultiplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getFieldOfViewModifier", "method_3118", "getFovMultiplier", "m_108565_"), "()F");
    }

    static jfloat getFovMultiplier(const jobject& obj) {
                
       const auto methodID = methodID_getFovMultiplier();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_NETWORK_ABSTRACTCLIENTPLAYERENTITY_HPP