// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_NETWORK_DEBUGSAMPLESUBSCRIBER_HPP
#define NET_MINECRAFT_CLIENT_NETWORK_DEBUGSAMPLESUBSCRIBER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.network.DebugSampleSubscriber
 * Remapped: fzk
 */
namespace DebugSampleSubscriber {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fzk", "net/minecraft/client/multiplayer/DebugSampleSubscriber", "net/minecraft/class_9211", "net/minecraft/client/network/DebugSampleSubscriber", "net/minecraft/src/C_313683_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.network.DebugSampleSubscriber#TIMEOUT
    [[maybe_unused]] static jint get_field_TIMEOUT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "REQUEST_INTERVAL_MS", "field_48934", "TIMEOUT", "f_314359_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.network.DebugSampleSubscriber#TIMEOUT
    [[maybe_unused]] static void set_field_TIMEOUT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "REQUEST_INTERVAL_MS", "field_48934", "TIMEOUT", "f_314359_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.DebugSampleSubscriber#networkHandler
    static jobject get_field_networkHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "connection", "field_48935", "networkHandler", "f_315675_"), "Lfzg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.DebugSampleSubscriber#networkHandler
    static void set_field_networkHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "connection", "field_48935", "networkHandler", "f_315675_"), "Lfzg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.DebugSampleSubscriber#debugHud
    static jobject get_field_debugHud(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "debugScreenOverlay", "field_48936", "debugHud", "f_316341_"), "Lfiu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.DebugSampleSubscriber#debugHud
    static void set_field_debugHud(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "debugScreenOverlay", "field_48936", "debugHud", "f_316341_"), "Lfiu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.DebugSampleSubscriber#lastTime
    static jobject get_field_lastTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "lastRequested", "field_48937", "lastTime", "f_316120_"), "Ljava/util/EnumMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.DebugSampleSubscriber#lastTime
    static void set_field_lastTime(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "lastRequested", "field_48937", "lastTime", "f_316120_"), "Ljava/util/EnumMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_56830", "tick", "m_322605_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_subscribe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendSubscriptionRequestIfNeeded", "method_56831", "subscribe", "m_322957_"), "(Lbls;)V");
    }

    static void subscribe(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_subscribe();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_NETWORK_DEBUGSAMPLESUBSCRIBER_HPP