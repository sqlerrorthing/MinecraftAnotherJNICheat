// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_NETWORK_LEGACYSERVERPINGER_HPP
#define NET_MINECRAFT_CLIENT_NETWORK_LEGACYSERVERPINGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.network.LegacyServerPinger
 * Remapped: fzm
 */
namespace LegacyServerPinger {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fzm", "net/minecraft/client/multiplayer/LegacyServerPinger", "net/minecraft/class_8676", "net/minecraft/client/network/LegacyServerPinger", "net/minecraft/src/C_290183_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.network.LegacyServerPinger#SPLITTER
    [[maybe_unused]] static jobject get_field_SPLITTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPLITTER", "field_45604", "SPLITTER", "f_291029_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.network.LegacyServerPinger#SPLITTER
    [[maybe_unused]] static void set_field_SPLITTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPLITTER", "field_45604", "SPLITTER", "f_291029_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.LegacyServerPinger#serverAddress
    static jobject get_field_serverAddress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "address", "field_45605", "serverAddress", "f_291698_"), "Lgax;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.LegacyServerPinger#serverAddress
    static void set_field_serverAddress(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "address", "field_45605", "serverAddress", "f_291698_"), "Lgax;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.LegacyServerPinger#handler
    static jobject get_field_handler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "output", "field_45606", "handler", "f_290869_"), "Lfzm$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.LegacyServerPinger#handler
    static void set_field_handler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "output", "field_45606", "handler", "f_290869_"), "Lfzm$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_channelActive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("channelActive", "channelActive", "channelActive", "channelActive", "channelActive"), "(Lio/netty/channel/ChannelHandlerContext;)V");
    }

    static void channelActive(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_channelActive();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_channelRead0() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "channelRead0", "method_3005", "channelRead0", "channelRead0"), "(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V");
    }

    static void channelRead0(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_channelRead0();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_exceptionCaught() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("exceptionCaught", "exceptionCaught", "exceptionCaught", "exceptionCaught", "exceptionCaught"), "(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V");
    }

    static void exceptionCaught(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_exceptionCaught();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_NETWORK_LEGACYSERVERPINGER_HPP