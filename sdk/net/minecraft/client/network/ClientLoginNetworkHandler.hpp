// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_NETWORK_CLIENTLOGINNETWORKHANDLER_HPP
#define NET_MINECRAFT_CLIENT_NETWORK_CLIENTLOGINNETWORKHANDLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.network.ClientLoginNetworkHandler
 * Remapped: fze
 */
namespace ClientLoginNetworkHandler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fze", "net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl", "net/minecraft/class_635", "net/minecraft/client/network/ClientLoginNetworkHandler", "net/minecraft/src/C_3898_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_3710", "LOGGER", "f_104518_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_3710", "LOGGER", "f_104518_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientLoginNetworkHandler#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "minecraft", "field_3708", "client", "f_104519_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "minecraft", "field_3708", "client", "f_104519_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientLoginNetworkHandler#serverInfo
    static jobject get_field_serverInfo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "serverData", "field_40481", "serverInfo", "f_243717_"), "Lfzt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#serverInfo
    static void set_field_serverInfo(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "serverData", "field_40481", "serverInfo", "f_243717_"), "Lfzt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientLoginNetworkHandler#parentScreen
    static jobject get_field_parentScreen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "parent", "field_3706", "parentScreen", "f_104520_"), "Lfod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#parentScreen
    static void set_field_parentScreen(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "parent", "field_3706", "parentScreen", "f_104520_"), "Lfod;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientLoginNetworkHandler#statusConsumer
    static jobject get_field_statusConsumer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "updateStatus", "field_3711", "statusConsumer", "f_104521_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#statusConsumer
    static void set_field_statusConsumer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "updateStatus", "field_3711", "statusConsumer", "f_104521_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientLoginNetworkHandler#connection
    static jobject get_field_connection(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "connection", "field_3707", "connection", "f_104522_"), "Lvt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#connection
    static void set_field_connection(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "connection", "field_3707", "connection", "f_104522_"), "Lvt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientLoginNetworkHandler#newWorld
    static jboolean get_field_newWorld(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "newWorld", "field_41383", "newWorld", "f_260722_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#newWorld
    static void set_field_newWorld(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "newWorld", "field_41383", "newWorld", "f_260722_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientLoginNetworkHandler#worldLoadTime
    static jobject get_field_worldLoadTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "worldLoadDuration", "field_41384", "worldLoadTime", "f_260612_"), "Ljava/time/Duration;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#worldLoadTime
    static void set_field_worldLoadTime(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "worldLoadDuration", "field_41384", "worldLoadTime", "f_260612_"), "Ljava/time/Duration;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientLoginNetworkHandler#minigameName
    static jobject get_field_minigameName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "minigameName", "field_44809", "minigameName", "f_285614_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#minigameName
    static void set_field_minigameName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "minigameName", "field_44809", "minigameName", "f_285614_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientLoginNetworkHandler#serverCookies
    static jobject get_field_serverCookies(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "cookies", "field_48400", "serverCookies", "f_314651_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#serverCookies
    static void set_field_serverCookies(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "cookies", "field_48400", "serverCookies", "f_314651_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientLoginNetworkHandler#hasCookies
    static jboolean get_field_hasCookies(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "wasTransferredTo", "field_48401", "hasCookies", "f_315773_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#hasCookies
    static void set_field_hasCookies(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "wasTransferredTo", "field_48401", "hasCookies", "f_315773_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientLoginNetworkHandler#state
    static jobject get_field_state(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "state", "field_46192", "state", "f_301427_"), "Ljava/util/concurrent/atomic/AtomicReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientLoginNetworkHandler#state
    static void set_field_state(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "state", "field_46192", "state", "f_301427_"), "Ljava/util/concurrent/atomic/AtomicReference;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_switchTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "switchState", "method_53872", "switchTo", "m_301503_"), "(Lfze$a;)V");
    }

    static void switchTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_switchTo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onHello() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleHello", "method_12587", "onHello", "m_7318_"), "(Lair;)V");
    }

    static void onHello(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onHello();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setupEncryption() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setEncryption", "method_56151", "setupEncryption", "m_324301_"), "(Laiz;Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V");
    }

    static void setupEncryption(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_setupEncryption();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_joinServerSession() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "authenticateServer", "method_2892", "joinServerSession", "m_104531_"), "(Ljava/lang/String;)Lwz;");
    }

    static jobject joinServerSession(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_joinServerSession();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSessionService() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getMinecraftSessionService", "method_2891", "getSessionService", "m_104554_"), "()Lcom/mojang/authlib/minecraft/MinecraftSessionService;");
    }

    static jobject getSessionService(const jobject& obj) {
                
       const auto methodID = methodID_getSessionService();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onSuccess() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleGameProfile", "method_12588", "onSuccess", "m_7056_"), "(Laiq;)V");
    }

    static void onSuccess(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onSuccess();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onDisconnected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onDisconnect", "method_10839", "onDisconnected", "m_7026_"), "(Lvv;)V");
    }

    static void onDisconnected(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDisconnected();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isConnectionOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isAcceptingMessages", "method_48106", "isConnectionOpen", "m_6198_"), "()Z");
    }

    static jboolean isConnectionOpen(const jobject& obj) {
                
       const auto methodID = methodID_isConnectionOpen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_onDisconnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleDisconnect", "method_12584", "onDisconnect", "m_5800_"), "(Lait;)V");
    }

    static void onDisconnect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDisconnect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onCompression() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleCompression", "method_12585", "onCompression", "m_5693_"), "(Lais;)V");
    }

    static void onCompression(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onCompression();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onQueryRequest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleCustomQuery", "method_12586", "onQueryRequest", "m_7254_"), "(Laip;)V");
    }

    static void onQueryRequest(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onQueryRequest();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setMinigameName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setMinigameName", "method_51768", "setMinigameName", "m_285854_"), "(Ljava/lang/String;)V");
    }

    static void setMinigameName(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setMinigameName();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onCookieRequest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleRequestCookie", "method_55845", "onCookieRequest", "m_320309_"), "(Labp;)V");
    }

    static void onCookieRequest(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onCookieRequest();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addCustomCrashReportInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillListenerSpecificCrashDetails", "method_55597", "addCustomCrashReportInfo", "m_306579_"), "(Lo;Lp;)V");
    }

    static void addCustomCrashReportInfo(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addCustomCrashReportInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_NETWORK_CLIENTLOGINNETWORKHANDLER_HPP