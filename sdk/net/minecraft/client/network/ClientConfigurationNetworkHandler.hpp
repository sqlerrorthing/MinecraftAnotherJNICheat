// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_NETWORK_CLIENTCONFIGURATIONNETWORKHANDLER_HPP
#define NET_MINECRAFT_CLIENT_NETWORK_CLIENTCONFIGURATIONNETWORKHANDLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.network.ClientConfigurationNetworkHandler
 * Remapped: fzd
 */
namespace ClientConfigurationNetworkHandler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fzd", "net/minecraft/client/multiplayer/ClientConfigurationPacketListenerImpl", "net/minecraft/class_8674", "net/minecraft/client/network/ClientConfigurationNetworkHandler", "net/minecraft/src/C_290131_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.network.ClientConfigurationNetworkHandler#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "LOGGER", "field_45596", "LOGGER", "f_290948_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientConfigurationNetworkHandler#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "LOGGER", "field_45596", "LOGGER", "f_290948_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientConfigurationNetworkHandler#profile
    static jobject get_field_profile(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "localGameProfile", "field_45597", "profile", "f_290697_"), "Lcom/mojang/authlib/GameProfile;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientConfigurationNetworkHandler#profile
    static void set_field_profile(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "localGameProfile", "field_45597", "profile", "f_290697_"), "Lcom/mojang/authlib/GameProfile;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientConfigurationNetworkHandler#enabledFeatures
    static jobject get_field_enabledFeatures(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "enabledFeatures", "field_45599", "enabledFeatures", "f_291167_"), "Lcpl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientConfigurationNetworkHandler#enabledFeatures
    static void set_field_enabledFeatures(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "enabledFeatures", "field_45599", "enabledFeatures", "f_291167_"), "Lcpl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientConfigurationNetworkHandler#registryManager
    static jobject get_field_registryManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "receivedRegistries", "field_45598", "registryManager", "f_291454_"), "Lka$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientConfigurationNetworkHandler#registryManager
    static void set_field_registryManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "receivedRegistries", "field_45598", "registryManager", "f_291454_"), "Lka$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientConfigurationNetworkHandler#clientRegistries
    static jobject get_field_clientRegistries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "registryDataCollector", "field_48766", "clientRegistries", "f_314792_"), "Lfzs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientConfigurationNetworkHandler#clientRegistries
    static void set_field_clientRegistries(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "registryDataCollector", "field_48766", "clientRegistries", "f_314792_"), "Lfzs;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientConfigurationNetworkHandler#dataPackManager
    static jobject get_field_dataPackManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "knownPacks", "field_49123", "dataPackManager", "f_315686_"), "Lfzl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientConfigurationNetworkHandler#dataPackManager
    static void set_field_dataPackManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "knownPacks", "field_49123", "dataPackManager", "f_315686_"), "Lfzl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.network.ClientConfigurationNetworkHandler#chatState
    static jobject get_field_chatState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "chatState", "field_50223", "chatState", "f_316283_"), "Lfin$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.network.ClientConfigurationNetworkHandler#chatState
    static void set_field_chatState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "chatState", "field_50223", "chatState", "f_316283_"), "Lfin$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_isConnectionOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isAcceptingMessages", "method_48106", "isConnectionOpen", "m_6198_"), "()Z");
    }

    static jboolean isConnectionOpen(const jobject& obj) {
                
       const auto methodID = methodID_isConnectionOpen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_onCustomPayload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleCustomPayload", "method_11152", "onCustomPayload", "m_105003_"), "(Laaj;)V");
    }

    static void onCustomPayload(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onCustomPayload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_handleCustomPayload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleUnknownCustomPayload", "method_52797", "handleCustomPayload", "m_294207_"), "(Laaj;)V");
    }

    static void handleCustomPayload(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_handleCustomPayload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onDynamicRegistries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleRegistryData", "method_52795", "onDynamicRegistries", "m_293753_"), "(Labe;)V");
    }

    static void onDynamicRegistries(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDynamicRegistries();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onSynchronizeTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleUpdateTags", "method_11126", "onSynchronizeTags", "m_105133_"), "(Lzx;)V");
    }

    static void onSynchronizeTags(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onSynchronizeTags();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleEnabledFeatures", "method_52796", "onFeatures", "m_293561_"), "(Labh;)V");
    }

    static void onFeatures(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onFeatures();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onSelectKnownPacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleSelectKnownPacks", "method_57045", "onSelectKnownPacks", "m_319752_"), "(Labg;)V");
    }

    static void onSelectKnownPacks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onSelectKnownPacks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onResetChat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleResetChat", "method_58577", "onResetChat", "m_318905_"), "(Labf;)V");
    }

    static void onResetChat(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onResetChat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_openClientDataPack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "runWithResources", "method_57044", "openClientDataPack", "m_324928_"), "(Ljava/util/function/Function;)Ljava/lang/Object;");
    }

    static jobject openClientDataPack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openClientDataPack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onReady() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleConfigurationFinished", "method_52794", "onReady", "m_293477_"), "(Labd;)V");
    }

    static void onReady(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onReady();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "tick", "method_18784", "tick", "m_9933_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onDisconnected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onDisconnect", "method_10839", "onDisconnected", "m_7026_"), "(Lvv;)V");
    }

    static void onDisconnected(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDisconnected();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_NETWORK_CLIENTCONFIGURATIONNETWORKHANDLER_HPP