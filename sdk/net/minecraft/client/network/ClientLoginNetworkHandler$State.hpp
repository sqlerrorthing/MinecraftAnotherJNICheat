// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_NETWORK_CLIENTLOGINNETWORKHANDLER$STATE_HPP
#define NET_MINECRAFT_CLIENT_NETWORK_CLIENTLOGINNETWORKHANDLER$STATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.network.ClientLoginNetworkHandler$State
 * Remapped: fze$a
 */
namespace ClientLoginNetworkHandler$State {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fze$a", "net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl$State", "net/minecraft/class_635$class_8798", "net/minecraft/client/network/ClientLoginNetworkHandler$State", "net/minecraft/src/C_3898_$C_301417_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.network.ClientLoginNetworkHandler$State#CONNECTING
    [[maybe_unused]] static jobject get_field_CONNECTING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CONNECTING", "field_46193", "CONNECTING", "CONNECTING"), "Lfze$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.network.ClientLoginNetworkHandler$State#CONNECTING
    [[maybe_unused]] static void set_field_CONNECTING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CONNECTING", "field_46193", "CONNECTING", "CONNECTING"), "Lfze$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.network.ClientLoginNetworkHandler$State#AUTHORIZING
    [[maybe_unused]] static jobject get_field_AUTHORIZING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "AUTHORIZING", "field_46194", "AUTHORIZING", "AUTHORIZING"), "Lfze$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.network.ClientLoginNetworkHandler$State#AUTHORIZING
    [[maybe_unused]] static void set_field_AUTHORIZING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "AUTHORIZING", "field_46194", "AUTHORIZING", "AUTHORIZING"), "Lfze$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.network.ClientLoginNetworkHandler$State#ENCRYPTING
    [[maybe_unused]] static jobject get_field_ENCRYPTING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ENCRYPTING", "field_46195", "ENCRYPTING", "ENCRYPTING"), "Lfze$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.network.ClientLoginNetworkHandler$State#ENCRYPTING
    [[maybe_unused]] static void set_field_ENCRYPTING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ENCRYPTING", "field_46195", "ENCRYPTING", "ENCRYPTING"), "Lfze$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.network.ClientLoginNetworkHandler$State#JOINING
    [[maybe_unused]] static jobject get_field_JOINING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "JOINING", "field_46196", "JOINING", "JOINING"), "Lfze$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.network.ClientLoginNetworkHandler$State#JOINING
    [[maybe_unused]] static void set_field_JOINING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "JOINING", "field_46196", "JOINING", "JOINING"), "Lfze$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.client.network.ClientLoginNetworkHandler$State#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "message", "field_46197", "name", "f_301424_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.network.ClientLoginNetworkHandler$State#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "message", "field_46197", "name", "f_301424_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.network.ClientLoginNetworkHandler$State#prevStates
    static jobject get_field_prevStates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "fromStates", "field_46198", "prevStates", "f_301420_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.network.ClientLoginNetworkHandler$State#prevStates
    static void set_field_prevStates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "fromStates", "field_46198", "prevStates", "f_301420_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lfze$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lfze$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_NETWORK_CLIENTLOGINNETWORKHANDLER$STATE_HPP