// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_NETWORK_CLIENTREGISTRIES_HPP
#define NET_MINECRAFT_CLIENT_NETWORK_CLIENTREGISTRIES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.network.ClientRegistries
 * Remapped: fzs
 */
namespace ClientRegistries {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fzs", "net/minecraft/client/multiplayer/RegistryDataCollector", "net/minecraft/class_9173", "net/minecraft/client/network/ClientRegistries", "net/minecraft/src/C_313315_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.network.ClientRegistries#dynamicRegistries
    static jobject get_field_dynamicRegistries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "contentsCollector", "field_48767", "dynamicRegistries", "f_315664_"), "Lfzs$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientRegistries#dynamicRegistries
    static void set_field_dynamicRegistries(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "contentsCollector", "field_48767", "dynamicRegistries", "f_315664_"), "Lfzs$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.network.ClientRegistries#tagLoader
    static jobject get_field_tagLoader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "tagCollector", "field_48768", "tagLoader", "f_315374_"), "Lfzx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientRegistries#tagLoader
    static void set_field_tagLoader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "tagCollector", "field_48768", "tagLoader", "f_315374_"), "Lfzx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_putDynamicRegistry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "appendContents", "method_56583", "putDynamicRegistry", "m_320164_"), "(Lakq;Ljava/util/List;)V");
    }

    static void putDynamicRegistry(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_putDynamicRegistry();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "appendTags", "method_56586", "putTags", "m_319875_"), "(Ljava/util/Map;)V");
    }

    static void putTags(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_putTags();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createRegistryManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "collectGameRegistries", "method_56585", "createRegistryManager", "m_323733_"), "(Lauh;Lka;Z)Lka$b;");
    }

    static jobject createRegistryManager(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_createRegistryManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_NETWORK_CLIENTREGISTRIES_HPP