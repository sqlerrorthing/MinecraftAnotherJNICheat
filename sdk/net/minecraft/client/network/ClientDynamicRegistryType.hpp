// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_NETWORK_CLIENTDYNAMICREGISTRYTYPE_HPP
#define NET_MINECRAFT_CLIENT_NETWORK_CLIENTDYNAMICREGISTRYTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.network.ClientDynamicRegistryType
 * Remapped: fzh
 */
namespace ClientDynamicRegistryType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fzh", "net/minecraft/client/multiplayer/ClientRegistryLayer", "net/minecraft/class_7756", "net/minecraft/client/network/ClientDynamicRegistryType", "net/minecraft/src/C_243548_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.network.ClientDynamicRegistryType#STATIC
    [[maybe_unused]] static jobject get_field_STATIC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STATIC", "field_40490", "STATIC", "STATIC"), "Lfzh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.network.ClientDynamicRegistryType#STATIC
    [[maybe_unused]] static void set_field_STATIC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STATIC", "field_40490", "STATIC", "STATIC"), "Lfzh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.network.ClientDynamicRegistryType#REMOTE
    [[maybe_unused]] static jobject get_field_REMOTE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "REMOTE", "field_40491", "REMOTE", "REMOTE"), "Lfzh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.network.ClientDynamicRegistryType#REMOTE
    [[maybe_unused]] static void set_field_REMOTE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "REMOTE", "field_40491", "REMOTE", "REMOTE"), "Lfzh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.network.ClientDynamicRegistryType#VALUES
    [[maybe_unused]] static jobject get_field_VALUES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "VALUES", "field_40492", "VALUES", "f_243766_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientDynamicRegistryType#VALUES
    [[maybe_unused]] static void set_field_VALUES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "VALUES", "field_40492", "VALUES", "f_243766_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.network.ClientDynamicRegistryType#STATIC_REGISTRY_MANAGER
    [[maybe_unused]] static jobject get_field_STATIC_REGISTRY_MANAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STATIC_ACCESS", "field_40493", "STATIC_REGISTRY_MANAGER", "f_243969_"), "Lka$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.network.ClientDynamicRegistryType#STATIC_REGISTRY_MANAGER
    [[maybe_unused]] static void set_field_STATIC_REGISTRY_MANAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STATIC_ACCESS", "field_40493", "STATIC_REGISTRY_MANAGER", "f_243969_"), "Lka$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lfzh;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lfzh;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createCombinedDynamicRegistries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createRegistryAccess", "method_45738", "createCombinedDynamicRegistries", "m_245874_"), "()Ljt;");
    }

    static jobject createCombinedDynamicRegistries() {
       const auto clazz = self();
       const auto methodID = methodID_createCombinedDynamicRegistries();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_NETWORK_CLIENTDYNAMICREGISTRYTYPE_HPP