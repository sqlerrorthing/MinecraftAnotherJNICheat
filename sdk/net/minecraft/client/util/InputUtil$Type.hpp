// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_UTIL_INPUTUTIL$TYPE_HPP
#define NET_MINECRAFT_CLIENT_UTIL_INPUTUTIL$TYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.util.InputUtil$Type
 * Remapped: fae$b
 */
namespace InputUtil$Type {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fae$b", "com/mojang/blaze3d/platform/InputConstants$Type", "net/minecraft/class_3675$class_307", "net/minecraft/client/util/InputUtil$Type", "net/minecraft/src/C_3140_$C_3143_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.util.InputUtil$Type#KEYSYM
    [[maybe_unused]] static jobject get_field_KEYSYM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "KEYSYM", "field_1668", "KEYSYM", "KEYSYM"), "Lfae$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil$Type#KEYSYM
    [[maybe_unused]] static void set_field_KEYSYM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "KEYSYM", "field_1668", "KEYSYM", "KEYSYM"), "Lfae$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil$Type#SCANCODE
    [[maybe_unused]] static jobject get_field_SCANCODE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SCANCODE", "field_1671", "SCANCODE", "SCANCODE"), "Lfae$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil$Type#SCANCODE
    [[maybe_unused]] static void set_field_SCANCODE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SCANCODE", "field_1671", "SCANCODE", "SCANCODE"), "Lfae$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil$Type#MOUSE
    [[maybe_unused]] static jobject get_field_MOUSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MOUSE", "field_1672", "MOUSE", "MOUSE"), "Lfae$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil$Type#MOUSE
    [[maybe_unused]] static void set_field_MOUSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MOUSE", "field_1672", "MOUSE", "MOUSE"), "Lfae$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.util.InputUtil$Type#UNKNOWN_TRANSLATION_KEY
    [[maybe_unused]] static jobject get_field_UNKNOWN_TRANSLATION_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "KEY_KEYBOARD_UNKNOWN", "field_44919", "UNKNOWN_TRANSLATION_KEY", "f_287790_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.util.InputUtil$Type#UNKNOWN_TRANSLATION_KEY
    [[maybe_unused]] static void set_field_UNKNOWN_TRANSLATION_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "KEY_KEYBOARD_UNKNOWN", "field_44919", "UNKNOWN_TRANSLATION_KEY", "f_287790_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.InputUtil$Type#map
    static jobject get_field_map(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "map", "field_1674", "map", "f_84885_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.InputUtil$Type#map
    static void set_field_map(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "map", "field_1674", "map", "f_84885_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.util.InputUtil$Type#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "defaultPrefix", "field_1673", "name", "f_84886_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.util.InputUtil$Type#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "defaultPrefix", "field_1673", "name", "f_84886_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.util.InputUtil$Type#textTranslator
    static jobject get_field_textTranslator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "displayTextSupplier", "field_24197", "textTranslator", "f_84887_"), "Ljava/util/function/BiFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.util.InputUtil$Type#textTranslator
    static void set_field_textTranslator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "displayTextSupplier", "field_24197", "textTranslator", "f_84887_"), "Ljava/util/function/BiFunction;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lfae$b;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lfae$b;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_mapKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addKey", "method_1446", "mapKey", "m_84899_"), "(Lfae$b;Ljava/lang/String;I)V");
    }

    static void mapKey(const jobject& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_mapKey();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createFromCode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOrCreate", "method_1447", "createFromCode", "m_84895_"), "(I)Lfae$a;");
    }

    static jobject createFromCode(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_createFromCode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_UTIL_INPUTUTIL$TYPE_HPP