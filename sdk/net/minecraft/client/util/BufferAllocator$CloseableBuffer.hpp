// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_UTIL_BUFFERALLOCATOR$CLOSEABLEBUFFER_HPP
#define NET_MINECRAFT_CLIENT_UTIL_BUFFERALLOCATOR$CLOSEABLEBUFFER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.util.BufferAllocator$CloseableBuffer
 * Remapped: fbf$a
 */
namespace BufferAllocator$CloseableBuffer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fbf$a", "com/mojang/blaze3d/vertex/ByteBufferBuilder$Result", "net/minecraft/class_9799$class_9800", "net/minecraft/client/util/BufferAllocator$CloseableBuffer", "net/minecraft/src/C_336589_$C_336543_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.util.BufferAllocator$CloseableBuffer#offset
    static jint get_field_offset(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "offset", "field_52089", "offset", "f_337012_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.BufferAllocator$CloseableBuffer#offset
    static void set_field_offset(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "offset", "field_52089", "offset", "f_337012_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.BufferAllocator$CloseableBuffer#size
    static jint get_field_size(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "capacity", "field_52090", "size", "f_337459_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.BufferAllocator$CloseableBuffer#size
    static void set_field_size(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "capacity", "field_52090", "size", "f_337459_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.BufferAllocator$CloseableBuffer#clearCount
    static jint get_field_clearCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "generation", "field_52091", "clearCount", "f_337017_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.BufferAllocator$CloseableBuffer#clearCount
    static void set_field_clearCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "generation", "field_52091", "clearCount", "f_337017_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.BufferAllocator$CloseableBuffer#closed
    static jboolean get_field_closed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "closed", "field_52092", "closed", "f_337698_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.BufferAllocator$CloseableBuffer#closed
    static void set_field_closed(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "closed", "field_52092", "closed", "f_337698_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "byteBuffer", "method_60817", "getBuffer", "m_338393_"), "()Ljava/nio/ByteBuffer;");
    }

    static jobject getBuffer(const jobject& obj) {
                
       const auto methodID = methodID_getBuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_UTIL_BUFFERALLOCATOR$CLOSEABLEBUFFER_HPP