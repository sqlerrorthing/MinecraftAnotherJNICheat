// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_UTIL_NARRATORMANAGER_HPP
#define NET_MINECRAFT_CLIENT_UTIL_NARRATORMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.util.NarratorManager
 * Remapped: fgg
 */
namespace NarratorManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fgg", "net/minecraft/client/GameNarrator", "net/minecraft/class_333", "net/minecraft/client/util/NarratorManager", "net/minecraft/src/C_3437_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.util.NarratorManager#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_TITLE", "field_18967", "EMPTY", "f_93310_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.NarratorManager#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_TITLE", "field_18967", "EMPTY", "f_93310_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.util.NarratorManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_18210", "LOGGER", "f_93311_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.util.NarratorManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_18210", "LOGGER", "f_93311_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.NarratorManager#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minecraft", "field_39755", "client", "f_240371_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.NarratorManager#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minecraft", "field_39755", "client", "f_240371_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.NarratorManager#narrator
    static jobject get_field_narrator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "narrator", "field_2055", "narrator", "f_93313_"), "Lcom/mojang/text2speech/Narrator;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.NarratorManager#narrator
    static void set_field_narrator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "narrator", "field_2055", "narrator", "f_93313_"), "Lcom/mojang/text2speech/Narrator;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_narrateChatMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sayChat", "method_44708", "narrateChatMessage", "m_263194_"), "(Lwz;)V");
    }

    static void narrateChatMessage(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_narrateChatMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_narrateSystemMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "say", "method_47976", "narrateSystemMessage", "m_263195_"), "(Lwz;)V");
    }

    static void narrateSystemMessage(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_narrateSystemMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_narrate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "sayNow", "method_37015", "narrate", "m_168785_"), "(Lwz;)V");
    }

    static void narrate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_narrate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__narrate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sayNow", "method_19788", "narrate", "m_93319_"), "(Ljava/lang/String;)V");
    }

    static void _narrate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__narrate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNarratorMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getStatus", "method_20602", "getNarratorMode", "m_93330_"), "()Lfgq;");
    }

    static jobject getNarratorMode(const jobject& obj) {
                
       const auto methodID = methodID_getNarratorMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_debugPrintMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "logNarratedMessage", "method_37016", "debugPrintMessage", "m_168787_"), "(Ljava/lang/String;)V");
    }

    static void debugPrintMessage(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_debugPrintMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onModeChange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateNarratorStatus", "method_1792", "onModeChange", "m_93317_"), "(Lfgq;)V");
    }

    static void onModeChange(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onModeChange();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isActive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isActive", "method_1791", "isActive", "m_93316_"), "()Z");
    }

    static jboolean isActive(const jobject& obj) {
                
       const auto methodID = methodID_isActive();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "clear", "method_1793", "clear", "m_93328_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_destroy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "destroy", "method_20371", "destroy", "m_93329_"), "()V");
    }

    static void destroy(const jobject& obj) {
                
       const auto methodID = methodID_destroy();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_checkNarratorLibrary() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkStatus", "method_52183", "checkNarratorLibrary", "m_288189_"), "(Z)V");
    }

    static void checkNarratorLibrary(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_checkNarratorLibrary();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_UTIL_NARRATORMANAGER_HPP