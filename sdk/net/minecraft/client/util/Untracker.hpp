// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_UTIL_UNTRACKER_HPP
#define NET_MINECRAFT_CLIENT_UTIL_UNTRACKER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.util.Untracker
 * Remapped: ezz
 */
namespace Untracker {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ezz", "com/mojang/blaze3d/platform/DebugMemoryUntracker", "net/minecraft/class_301", "net/minecraft/client/util/Untracker", "net/minecraft/src/C_3108_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.util.Untracker#ALLOCATOR_UNTRACK
    [[maybe_unused]] static jobject get_field_ALLOCATOR_UNTRACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UNTRACK", "field_1643", "ALLOCATOR_UNTRACK", "f_83998_"), "Ljava/lang/invoke/MethodHandle;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Untracker#ALLOCATOR_UNTRACK
    [[maybe_unused]] static void set_field_ALLOCATOR_UNTRACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UNTRACK", "field_1643", "ALLOCATOR_UNTRACK", "f_83998_"), "Ljava/lang/invoke/MethodHandle;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_untrack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "untrack", "method_1407", "untrack", "m_84001_"), "(J)V");
    }

    static void untrack(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_untrack();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__untrack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "untrack", "method_1406", "untrack", "m_84003_"), "(Lorg/lwjgl/system/Pointer;)V");
    }

    static void _untrack(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__untrack();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_UTIL_UNTRACKER_HPP