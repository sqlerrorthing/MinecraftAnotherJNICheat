// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_UTIL_CLIPBOARD_HPP
#define NET_MINECRAFT_CLIENT_UTIL_CLIPBOARD_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.util.Clipboard
 * Remapped: ezy
 */
namespace Clipboard {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ezy", "com/mojang/blaze3d/platform/ClipboardManager", "net/minecraft/class_3674", "net/minecraft/client/util/Clipboard", "net/minecraft/src/C_3107_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.util.Clipboard#GLFW_FORMAT_UNAVAILABLE
    [[maybe_unused]] static jint get_field_GLFW_FORMAT_UNAVAILABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FORMAT_UNAVAILABLE", "field_31905", "GLFW_FORMAT_UNAVAILABLE", "f_166218_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.Clipboard#GLFW_FORMAT_UNAVAILABLE
    [[maybe_unused]] static void set_field_GLFW_FORMAT_UNAVAILABLE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FORMAT_UNAVAILABLE", "field_31905", "GLFW_FORMAT_UNAVAILABLE", "f_166218_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Clipboard#clipboardBuffer
    static jobject get_field_clipboardBuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "clipboardScratchBuffer", "field_16236", "clipboardBuffer", "f_83986_"), "Ljava/nio/ByteBuffer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Clipboard#clipboardBuffer
    static void set_field_clipboardBuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "clipboardScratchBuffer", "field_16236", "clipboardBuffer", "f_83986_"), "Ljava/nio/ByteBuffer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getClipboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getClipboard", "method_15977", "getClipboard", "m_83995_"), "(JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String;");
    }

    static jobject getClipboard(const jobject& obj, const jlong& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getClipboard();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setClipboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "pushClipboard", "method_15978", "setClipboard", "m_83991_"), "(JLjava/nio/ByteBuffer;[B)V");
    }

    static void setClipboard(const jlong& arg0, const jobject& arg1, const jarray& arg2, const jbyte& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_setClipboard();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__setClipboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setClipboard", "method_15979", "setClipboard", "m_83988_"), "(JLjava/lang/String;)V");
    }

    static void _setClipboard(const jobject& obj, const jlong& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__setClipboard();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_UTIL_CLIPBOARD_HPP