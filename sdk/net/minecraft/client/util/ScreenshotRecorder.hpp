// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_UTIL_SCREENSHOTRECORDER_HPP
#define NET_MINECRAFT_CLIENT_UTIL_SCREENSHOTRECORDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.util.ScreenshotRecorder
 * Remapped: fgy
 */
namespace ScreenshotRecorder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fgy", "net/minecraft/client/Screenshot", "net/minecraft/class_318", "net/minecraft/client/util/ScreenshotRecorder", "net/minecraft/src/C_3408_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.util.ScreenshotRecorder#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_1974", "LOGGER", "f_92276_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.util.ScreenshotRecorder#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_1974", "LOGGER", "f_92276_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.ScreenshotRecorder#SCREENSHOTS_DIRECTORY
    [[maybe_unused]] static jobject get_field_SCREENSHOTS_DIRECTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SCREENSHOT_DIR", "field_41337", "SCREENSHOTS_DIRECTORY", "f_260508_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.ScreenshotRecorder#SCREENSHOTS_DIRECTORY
    [[maybe_unused]] static void set_field_SCREENSHOTS_DIRECTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SCREENSHOT_DIR", "field_41337", "SCREENSHOTS_DIRECTORY", "f_260508_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.ScreenshotRecorder#unitHeight
    static jint get_field_unitHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "rowHeight", "field_32157", "unitHeight", "f_168594_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.ScreenshotRecorder#unitHeight
    static void set_field_unitHeight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "rowHeight", "field_32157", "unitHeight", "f_168594_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.ScreenshotRecorder#stream
    static jobject get_field_stream(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "outputStream", "field_32158", "stream", "f_168595_"), "Ljava/io/DataOutputStream;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.ScreenshotRecorder#stream
    static void set_field_stream(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "outputStream", "field_32158", "stream", "f_168595_"), "Ljava/io/DataOutputStream;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.ScreenshotRecorder#buffer
    static jbyte get_field_buffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "bytes", "field_32159", "buffer", "f_168596_"), "[B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.ScreenshotRecorder#buffer
    static void set_field_buffer(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "bytes", "field_32159", "buffer", "f_168596_"), "[B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.ScreenshotRecorder#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "width", "field_32160", "width", "f_168597_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.ScreenshotRecorder#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "width", "field_32160", "width", "f_168597_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.ScreenshotRecorder#height
    static jint get_field_height(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "height", "field_32161", "height", "f_168598_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.ScreenshotRecorder#height
    static void set_field_height(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "height", "field_32161", "height", "f_168598_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.ScreenshotRecorder#file
    static jobject get_field_file(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "file", "field_32162", "file", "f_168599_"), "Ljava/io/File;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.ScreenshotRecorder#file
    static void set_field_file(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "file", "field_32162", "file", "f_168599_"), "Ljava/io/File;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_saveScreenshot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "grab", "method_1659", "saveScreenshot", "m_92289_"), "(Ljava/io/File;Lezv;Ljava/util/function/Consumer;)V");
    }

    static void saveScreenshot(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_saveScreenshot();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__saveScreenshot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "grab", "method_22690", "saveScreenshot", "m_92295_"), "(Ljava/io/File;Ljava/lang/String;Lezv;Ljava/util/function/Consumer;)V");
    }

    static void _saveScreenshot(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__saveScreenshot();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_saveScreenshotInner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "_grab", "method_1662", "saveScreenshotInner", "m_92305_"), "(Ljava/io/File;Ljava/lang/String;Lezv;Ljava/util/function/Consumer;)V");
    }

    static void saveScreenshotInner(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_saveScreenshotInner();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_takeScreenshot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "takeScreenshot", "method_1663", "takeScreenshot", "m_92279_"), "(Lezv;)Lfaj;");
    }

    static jobject takeScreenshot(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_takeScreenshot();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getScreenshotFilename() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getFile", "method_1660", "getScreenshotFilename", "m_92287_"), "(Ljava/io/File;)Ljava/io/File;");
    }

    static jobject getScreenshotFilename(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getScreenshotFilename();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getIntoBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addRegion", "method_35711", "getIntoBuffer", "m_168609_"), "(Ljava/nio/ByteBuffer;IIII)V");
    }

    static void getIntoBuffer(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_getIntoBuffer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_writeToStream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "saveRow", "method_35710", "writeToStream", "m_168605_"), "()V");
    }

    static void writeToStream(const jobject& obj) {
                
       const auto methodID = methodID_writeToStream();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_finish() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "close", "method_35712", "finish", "m_168615_"), "()Ljava/io/File;");
    }

    static jobject finish(const jobject& obj) {
                
       const auto methodID = methodID_finish();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_UTIL_SCREENSHOTRECORDER_HPP