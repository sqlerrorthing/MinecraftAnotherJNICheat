// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_UTIL_MATH_MATRIXSTACK_HPP
#define NET_MINECRAFT_CLIENT_UTIL_MATH_MATRIXSTACK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.util.math.MatrixStack
 * Remapped: fbi
 */
namespace MatrixStack {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fbi", "com/mojang/blaze3d/vertex/PoseStack", "net/minecraft/class_4587", "net/minecraft/client/util/math/MatrixStack", "net/minecraft/src/C_3181_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.util.math.MatrixStack#stack
    static jobject get_field_stack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "poseStack", "field_20898", "stack", "f_85834_"), "Ljava/util/Deque;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.math.MatrixStack#stack
    static void set_field_stack(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "poseStack", "field_20898", "stack", "f_85834_"), "Ljava/util/Deque;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_translate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "translate", "method_22904", "translate", "m_85837_"), "(DDD)V");
    }

    static void translate(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_translate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__translate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "translate", "method_46416", "translate", "m_252880_"), "(FFF)V");
    }

    static void _translate(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID__translate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_scale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "scale", "method_22905", "scale", "m_85841_"), "(FFF)V");
    }

    static void scale(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_scale();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_multiply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mulPose", "method_22907", "multiply", "m_252781_"), "(Lorg/joml/Quaternionf;)V");
    }

    static void multiply(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_multiply();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__multiply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "rotateAround", "method_49278", "multiply", "m_272245_"), "(Lorg/joml/Quaternionf;FFF)V");
    }

    static void _multiply(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jfloat& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID__multiply();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_push() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pushPose", "method_22903", "push", "m_85836_"), "()V");
    }

    static void push(const jobject& obj) {
                
       const auto methodID = methodID_push();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_pop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "popPose", "method_22909", "pop", "m_85849_"), "()V");
    }

    static void pop(const jobject& obj) {
                
       const auto methodID = methodID_pop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_peek() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "last", "method_23760", "peek", "m_85850_"), "()Lfbi$a;");
    }

    static jobject peek(const jobject& obj) {
                
       const auto methodID = methodID_peek();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "clear", "method_22911", "isEmpty", "m_85851_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadIdentity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setIdentity", "method_34426", "loadIdentity", "m_166856_"), "()V");
    }

    static void loadIdentity(const jobject& obj) {
                
       const auto methodID = methodID_loadIdentity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_multiplyPositionMatrix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mulPose", "method_34425", "multiplyPositionMatrix", "m_318714_"), "(Lorg/joml/Matrix4f;)V");
    }

    static void multiplyPositionMatrix(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_multiplyPositionMatrix();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_UTIL_MATH_MATRIXSTACK_HPP