// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_UTIL_MATH_MATRIXSTACK$ENTRY_HPP
#define NET_MINECRAFT_CLIENT_UTIL_MATH_MATRIXSTACK$ENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.util.math.MatrixStack$Entry
 * Remapped: fbi$a
 */
namespace MatrixStack$Entry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fbi$a", "com/mojang/blaze3d/vertex/PoseStack$Pose", "net/minecraft/class_4587$class_4665", "net/minecraft/client/util/math/MatrixStack$Entry", "net/minecraft/src/C_3181_$C_3183_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.client.util.math.MatrixStack$Entry#positionMatrix
    static jobject get_field_positionMatrix(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pose", "field_21327", "positionMatrix", "f_85852_"), "Lorg/joml/Matrix4f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.util.math.MatrixStack$Entry#positionMatrix
    static void set_field_positionMatrix(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pose", "field_21327", "positionMatrix", "f_85852_"), "Lorg/joml/Matrix4f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.util.math.MatrixStack$Entry#normalMatrix
    static jobject get_field_normalMatrix(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "normal", "field_21328", "normalMatrix", "f_85853_"), "Lorg/joml/Matrix3f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.util.math.MatrixStack$Entry#normalMatrix
    static void set_field_normalMatrix(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "normal", "field_21328", "normalMatrix", "f_85853_"), "Lorg/joml/Matrix3f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.util.math.MatrixStack$Entry#canSkipNormalization
    static jboolean get_field_canSkipNormalization(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "trustedNormals", "field_48930", "canSkipNormalization", "f_317074_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.util.math.MatrixStack$Entry#canSkipNormalization
    static void set_field_canSkipNormalization(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "trustedNormals", "field_48930", "canSkipNormalization", "f_317074_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_computeNormal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "computeNormalMatrix", "method_56823", "computeNormal", "m_319145_"), "()V");
    }

    static void computeNormal(const jobject& obj) {
                
       const auto methodID = methodID_computeNormal();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPositionMatrix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pose", "method_23761", "getPositionMatrix", "m_252922_"), "()Lorg/joml/Matrix4f;");
    }

    static jobject getPositionMatrix(const jobject& obj) {
                
       const auto methodID = methodID_getPositionMatrix();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNormalMatrix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "normal", "method_23762", "getNormalMatrix", "m_252943_"), "()Lorg/joml/Matrix3f;");
    }

    static jobject getNormalMatrix(const jobject& obj) {
                
       const auto methodID = methodID_getNormalMatrix();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_transformNormal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "transformNormal", "method_56821", "transformNormal", "m_322076_"), "(Lorg/joml/Vector3f;Lorg/joml/Vector3f;)Lorg/joml/Vector3f;");
    }

    static jobject transformNormal(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_transformNormal();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__transformNormal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "transformNormal", "method_56820", "transformNormal", "m_323822_"), "(FFFLorg/joml/Vector3f;)Lorg/joml/Vector3f;");
    }

    static jobject _transformNormal(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2, const jobject& arg3) {
                
       const auto methodID = methodID__transformNormal();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "copy", "method_56822", "copy", "m_323639_"), "()Lfbi$a;");
    }

    static jobject copy(const jobject& obj) {
                
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_UTIL_MATH_MATRIXSTACK$ENTRY_HPP