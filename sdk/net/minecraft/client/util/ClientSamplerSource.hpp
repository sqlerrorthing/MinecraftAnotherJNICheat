// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_UTIL_CLIENTSAMPLERSOURCE_HPP
#define NET_MINECRAFT_CLIENT_UTIL_CLIENTSAMPLERSOURCE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.util.ClientSamplerSource
 * Remapped: geg
 */
namespace ClientSamplerSource {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("geg", "net/minecraft/client/profiling/ClientMetricsSamplersProvider", "net/minecraft/class_6412", "net/minecraft/client/util/ClientSamplerSource", "net/minecraft/src/C_141713_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.util.ClientSamplerSource#renderer
    static jobject get_field_renderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "levelRenderer", "field_33959", "renderer", "f_172536_"), "Lgex;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.ClientSamplerSource#renderer
    static void set_field_renderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "levelRenderer", "field_33959", "renderer", "f_172536_"), "Lgex;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.ClientSamplerSource#samplers
    static jobject get_field_samplers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "samplers", "field_33960", "samplers", "f_172537_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.ClientSamplerSource#samplers
    static void set_field_samplers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "samplers", "field_33960", "samplers", "f_172537_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.ClientSamplerSource#factory
    static jobject get_field_factory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "samplerFactory", "field_33961", "factory", "f_172538_"), "Lbou;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.ClientSamplerSource#factory
    static void set_field_factory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "samplerFactory", "field_33961", "factory", "f_172538_"), "Lbou;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addInfoSamplers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "registerStaticSamplers", "method_37309", "addInfoSamplers", "m_172542_"), "()V");
    }

    static void addInfoSamplers(const jobject& obj) {
                
       const auto methodID = methodID_addInfoSamplers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSamplers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "samplers", "method_37189", "getSamplers", "m_142531_"), "(Ljava/util/function/Supplier;)Ljava/util/Set;");
    }

    static jobject getSamplers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSamplers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_UTIL_CLIENTSAMPLERSOURCE_HPP