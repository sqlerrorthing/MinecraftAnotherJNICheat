// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_UTIL_INPUTUTIL_HPP
#define NET_MINECRAFT_CLIENT_UTIL_INPUTUTIL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.util.InputUtil
 * Remapped: fae
 */
namespace InputUtil {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fae", "com/mojang/blaze3d/platform/InputConstants", "net/minecraft/class_3675", "net/minecraft/client/util/InputUtil", "net/minecraft/src/C_3140_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.util.InputUtil#GLFW_RAW_MOUSE_MOTION_SUPPORTED_HANDLE
    [[maybe_unused]] static jobject get_field_GLFW_RAW_MOUSE_MOTION_SUPPORTED_HANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bw", "GLFW_RAW_MOUSE_MOTION_SUPPORTED", "field_20333", "GLFW_RAW_MOUSE_MOTION_SUPPORTED_HANDLE", "f_166354_"), "Ljava/lang/invoke/MethodHandle;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.util.InputUtil#GLFW_RAW_MOUSE_MOTION_SUPPORTED_HANDLE
    [[maybe_unused]] static void set_field_GLFW_RAW_MOUSE_MOTION_SUPPORTED_HANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bw", "GLFW_RAW_MOUSE_MOTION_SUPPORTED", "field_20333", "GLFW_RAW_MOUSE_MOTION_SUPPORTED_HANDLE", "f_166354_"), "Ljava/lang/invoke/MethodHandle;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.util.InputUtil#GLFW_RAW_MOUSE_MOTION
    [[maybe_unused]] static jint get_field_GLFW_RAW_MOUSE_MOTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "GLFW_RAW_MOUSE_MOTION", "field_20334", "GLFW_RAW_MOUSE_MOTION", "f_84824_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.util.InputUtil#GLFW_RAW_MOUSE_MOTION
    [[maybe_unused]] static void set_field_GLFW_RAW_MOUSE_MOTION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "GLFW_RAW_MOUSE_MOTION", "field_20334", "GLFW_RAW_MOUSE_MOTION", "f_84824_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_0
    [[maybe_unused]] static jint get_field_GLFW_KEY_0() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "KEY_0", "field_31940", "GLFW_KEY_0", "f_166279_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_0
    [[maybe_unused]] static void set_field_GLFW_KEY_0(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "KEY_0", "field_31940", "GLFW_KEY_0", "f_166279_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_1
    [[maybe_unused]] static jint get_field_GLFW_KEY_1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "KEY_1", "field_31985", "GLFW_KEY_1", "f_166332_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_1
    [[maybe_unused]] static void set_field_GLFW_KEY_1(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "KEY_1", "field_31985", "GLFW_KEY_1", "f_166332_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_2
    [[maybe_unused]] static jint get_field_GLFW_KEY_2() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "KEY_2", "field_32007", "GLFW_KEY_2", "f_166355_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_2
    [[maybe_unused]] static void set_field_GLFW_KEY_2(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "KEY_2", "field_32007", "GLFW_KEY_2", "f_166355_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_3
    [[maybe_unused]] static jint get_field_GLFW_KEY_3() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "KEY_3", "field_32008", "GLFW_KEY_3", "f_166356_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_3
    [[maybe_unused]] static void set_field_GLFW_KEY_3(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "KEY_3", "field_32008", "GLFW_KEY_3", "f_166356_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_4
    [[maybe_unused]] static jint get_field_GLFW_KEY_4() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "KEY_4", "field_32009", "GLFW_KEY_4", "f_166357_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_4
    [[maybe_unused]] static void set_field_GLFW_KEY_4(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "KEY_4", "field_32009", "GLFW_KEY_4", "f_166357_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_5
    [[maybe_unused]] static jint get_field_GLFW_KEY_5() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "KEY_5", "field_32010", "GLFW_KEY_5", "f_166358_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_5
    [[maybe_unused]] static void set_field_GLFW_KEY_5(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "KEY_5", "field_32010", "GLFW_KEY_5", "f_166358_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_6
    [[maybe_unused]] static jint get_field_GLFW_KEY_6() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "KEY_6", "field_32011", "GLFW_KEY_6", "f_166359_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_6
    [[maybe_unused]] static void set_field_GLFW_KEY_6(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "KEY_6", "field_32011", "GLFW_KEY_6", "f_166359_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_7
    [[maybe_unused]] static jint get_field_GLFW_KEY_7() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "KEY_7", "field_32012", "GLFW_KEY_7", "f_166360_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_7
    [[maybe_unused]] static void set_field_GLFW_KEY_7(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "KEY_7", "field_32012", "GLFW_KEY_7", "f_166360_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_8
    [[maybe_unused]] static jint get_field_GLFW_KEY_8() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "KEY_8", "field_32013", "GLFW_KEY_8", "f_166361_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_8
    [[maybe_unused]] static void set_field_GLFW_KEY_8(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "KEY_8", "field_32013", "GLFW_KEY_8", "f_166361_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_9
    [[maybe_unused]] static jint get_field_GLFW_KEY_9() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "KEY_9", "field_32014", "GLFW_KEY_9", "f_166362_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_9
    [[maybe_unused]] static void set_field_GLFW_KEY_9(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "KEY_9", "field_32014", "GLFW_KEY_9", "f_166362_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_A
    [[maybe_unused]] static jint get_field_GLFW_KEY_A() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "KEY_A", "field_32015", "GLFW_KEY_A", "f_166363_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_A
    [[maybe_unused]] static void set_field_GLFW_KEY_A(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "KEY_A", "field_32015", "GLFW_KEY_A", "f_166363_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_B
    [[maybe_unused]] static jint get_field_GLFW_KEY_B() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "KEY_B", "field_32016", "GLFW_KEY_B", "f_166364_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_B
    [[maybe_unused]] static void set_field_GLFW_KEY_B(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "KEY_B", "field_32016", "GLFW_KEY_B", "f_166364_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_C
    [[maybe_unused]] static jint get_field_GLFW_KEY_C() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "KEY_C", "field_32017", "GLFW_KEY_C", "f_166365_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_C
    [[maybe_unused]] static void set_field_GLFW_KEY_C(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "KEY_C", "field_32017", "GLFW_KEY_C", "f_166365_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_D
    [[maybe_unused]] static jint get_field_GLFW_KEY_D() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "KEY_D", "field_32018", "GLFW_KEY_D", "f_166366_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_D
    [[maybe_unused]] static void set_field_GLFW_KEY_D(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "KEY_D", "field_32018", "GLFW_KEY_D", "f_166366_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_E
    [[maybe_unused]] static jint get_field_GLFW_KEY_E() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "KEY_E", "field_32019", "GLFW_KEY_E", "f_166367_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_E
    [[maybe_unused]] static void set_field_GLFW_KEY_E(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "KEY_E", "field_32019", "GLFW_KEY_E", "f_166367_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F
    [[maybe_unused]] static jint get_field_GLFW_KEY_F() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "KEY_F", "field_32020", "GLFW_KEY_F", "f_166368_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F
    [[maybe_unused]] static void set_field_GLFW_KEY_F(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "KEY_F", "field_32020", "GLFW_KEY_F", "f_166368_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_G
    [[maybe_unused]] static jint get_field_GLFW_KEY_G() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "KEY_G", "field_32021", "GLFW_KEY_G", "f_166369_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_G
    [[maybe_unused]] static void set_field_GLFW_KEY_G(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "KEY_G", "field_32021", "GLFW_KEY_G", "f_166369_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_H
    [[maybe_unused]] static jint get_field_GLFW_KEY_H() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "KEY_H", "field_32022", "GLFW_KEY_H", "f_166370_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_H
    [[maybe_unused]] static void set_field_GLFW_KEY_H(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "KEY_H", "field_32022", "GLFW_KEY_H", "f_166370_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_I
    [[maybe_unused]] static jint get_field_GLFW_KEY_I() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "KEY_I", "field_32023", "GLFW_KEY_I", "f_166371_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_I
    [[maybe_unused]] static void set_field_GLFW_KEY_I(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "KEY_I", "field_32023", "GLFW_KEY_I", "f_166371_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_J
    [[maybe_unused]] static jint get_field_GLFW_KEY_J() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "KEY_J", "field_32024", "GLFW_KEY_J", "f_166372_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_J
    [[maybe_unused]] static void set_field_GLFW_KEY_J(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "KEY_J", "field_32024", "GLFW_KEY_J", "f_166372_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_K
    [[maybe_unused]] static jint get_field_GLFW_KEY_K() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "KEY_K", "field_32025", "GLFW_KEY_K", "f_166373_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_K
    [[maybe_unused]] static void set_field_GLFW_KEY_K(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "KEY_K", "field_32025", "GLFW_KEY_K", "f_166373_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_L
    [[maybe_unused]] static jint get_field_GLFW_KEY_L() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "KEY_L", "field_32026", "GLFW_KEY_L", "f_166374_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_L
    [[maybe_unused]] static void set_field_GLFW_KEY_L(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "KEY_L", "field_32026", "GLFW_KEY_L", "f_166374_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_M
    [[maybe_unused]] static jint get_field_GLFW_KEY_M() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "KEY_M", "field_32027", "GLFW_KEY_M", "f_166375_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_M
    [[maybe_unused]] static void set_field_GLFW_KEY_M(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "KEY_M", "field_32027", "GLFW_KEY_M", "f_166375_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_N
    [[maybe_unused]] static jint get_field_GLFW_KEY_N() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "KEY_N", "field_32028", "GLFW_KEY_N", "f_166376_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_N
    [[maybe_unused]] static void set_field_GLFW_KEY_N(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "KEY_N", "field_32028", "GLFW_KEY_N", "f_166376_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_O
    [[maybe_unused]] static jint get_field_GLFW_KEY_O() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "KEY_O", "field_32029", "GLFW_KEY_O", "f_166377_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_O
    [[maybe_unused]] static void set_field_GLFW_KEY_O(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "KEY_O", "field_32029", "GLFW_KEY_O", "f_166377_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_P
    [[maybe_unused]] static jint get_field_GLFW_KEY_P() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "KEY_P", "field_32030", "GLFW_KEY_P", "f_166378_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_P
    [[maybe_unused]] static void set_field_GLFW_KEY_P(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "KEY_P", "field_32030", "GLFW_KEY_P", "f_166378_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_Q
    [[maybe_unused]] static jint get_field_GLFW_KEY_Q() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "KEY_Q", "field_31906", "GLFW_KEY_Q", "f_166253_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_Q
    [[maybe_unused]] static void set_field_GLFW_KEY_Q(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "KEY_Q", "field_31906", "GLFW_KEY_Q", "f_166253_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_R
    [[maybe_unused]] static jint get_field_GLFW_KEY_R() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "KEY_R", "field_31907", "GLFW_KEY_R", "f_166254_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_R
    [[maybe_unused]] static void set_field_GLFW_KEY_R(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "KEY_R", "field_31907", "GLFW_KEY_R", "f_166254_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_S
    [[maybe_unused]] static jint get_field_GLFW_KEY_S() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "KEY_S", "field_31908", "GLFW_KEY_S", "f_166255_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_S
    [[maybe_unused]] static void set_field_GLFW_KEY_S(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "KEY_S", "field_31908", "GLFW_KEY_S", "f_166255_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_T
    [[maybe_unused]] static jint get_field_GLFW_KEY_T() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "KEY_T", "field_31909", "GLFW_KEY_T", "f_166256_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_T
    [[maybe_unused]] static void set_field_GLFW_KEY_T(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "KEY_T", "field_31909", "GLFW_KEY_T", "f_166256_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_U
    [[maybe_unused]] static jint get_field_GLFW_KEY_U() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "KEY_U", "field_31910", "GLFW_KEY_U", "f_166257_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_U
    [[maybe_unused]] static void set_field_GLFW_KEY_U(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "KEY_U", "field_31910", "GLFW_KEY_U", "f_166257_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_V
    [[maybe_unused]] static jint get_field_GLFW_KEY_V() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "KEY_V", "field_31911", "GLFW_KEY_V", "f_166258_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_V
    [[maybe_unused]] static void set_field_GLFW_KEY_V(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "KEY_V", "field_31911", "GLFW_KEY_V", "f_166258_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_W
    [[maybe_unused]] static jint get_field_GLFW_KEY_W() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "KEY_W", "field_31912", "GLFW_KEY_W", "f_166259_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_W
    [[maybe_unused]] static void set_field_GLFW_KEY_W(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "KEY_W", "field_31912", "GLFW_KEY_W", "f_166259_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_X
    [[maybe_unused]] static jint get_field_GLFW_KEY_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "KEY_X", "field_31913", "GLFW_KEY_X", "f_166260_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_X
    [[maybe_unused]] static void set_field_GLFW_KEY_X(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "KEY_X", "field_31913", "GLFW_KEY_X", "f_166260_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_Y
    [[maybe_unused]] static jint get_field_GLFW_KEY_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "KEY_Y", "field_31914", "GLFW_KEY_Y", "f_166261_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_Y
    [[maybe_unused]] static void set_field_GLFW_KEY_Y(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "KEY_Y", "field_31914", "GLFW_KEY_Y", "f_166261_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_Z
    [[maybe_unused]] static jint get_field_GLFW_KEY_Z() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "KEY_Z", "field_31915", "GLFW_KEY_Z", "f_166262_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_Z
    [[maybe_unused]] static void set_field_GLFW_KEY_Z(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "KEY_Z", "field_31915", "GLFW_KEY_Z", "f_166262_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F1
    [[maybe_unused]] static jint get_field_GLFW_KEY_F1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "KEY_F1", "field_31916", "GLFW_KEY_F1", "f_166263_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F1
    [[maybe_unused]] static void set_field_GLFW_KEY_F1(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "KEY_F1", "field_31916", "GLFW_KEY_F1", "f_166263_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F2
    [[maybe_unused]] static jint get_field_GLFW_KEY_F2() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "KEY_F2", "field_31917", "GLFW_KEY_F2", "f_166264_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F2
    [[maybe_unused]] static void set_field_GLFW_KEY_F2(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "KEY_F2", "field_31917", "GLFW_KEY_F2", "f_166264_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F3
    [[maybe_unused]] static jint get_field_GLFW_KEY_F3() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "KEY_F3", "field_31918", "GLFW_KEY_F3", "f_166265_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F3
    [[maybe_unused]] static void set_field_GLFW_KEY_F3(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "KEY_F3", "field_31918", "GLFW_KEY_F3", "f_166265_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F4
    [[maybe_unused]] static jint get_field_GLFW_KEY_F4() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "KEY_F4", "field_31919", "GLFW_KEY_F4", "f_166266_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F4
    [[maybe_unused]] static void set_field_GLFW_KEY_F4(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "KEY_F4", "field_31919", "GLFW_KEY_F4", "f_166266_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F5
    [[maybe_unused]] static jint get_field_GLFW_KEY_F5() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "KEY_F5", "field_31920", "GLFW_KEY_F5", "f_166267_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F5
    [[maybe_unused]] static void set_field_GLFW_KEY_F5(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "KEY_F5", "field_31920", "GLFW_KEY_F5", "f_166267_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F6
    [[maybe_unused]] static jint get_field_GLFW_KEY_F6() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "KEY_F6", "field_31921", "GLFW_KEY_F6", "f_166268_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F6
    [[maybe_unused]] static void set_field_GLFW_KEY_F6(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "KEY_F6", "field_31921", "GLFW_KEY_F6", "f_166268_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F7
    [[maybe_unused]] static jint get_field_GLFW_KEY_F7() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "KEY_F7", "field_31922", "GLFW_KEY_F7", "f_166269_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F7
    [[maybe_unused]] static void set_field_GLFW_KEY_F7(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "KEY_F7", "field_31922", "GLFW_KEY_F7", "f_166269_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F8
    [[maybe_unused]] static jint get_field_GLFW_KEY_F8() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "KEY_F8", "field_31923", "GLFW_KEY_F8", "f_166270_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F8
    [[maybe_unused]] static void set_field_GLFW_KEY_F8(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "KEY_F8", "field_31923", "GLFW_KEY_F8", "f_166270_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F9
    [[maybe_unused]] static jint get_field_GLFW_KEY_F9() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "KEY_F9", "field_31924", "GLFW_KEY_F9", "f_166271_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F9
    [[maybe_unused]] static void set_field_GLFW_KEY_F9(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "KEY_F9", "field_31924", "GLFW_KEY_F9", "f_166271_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F10
    [[maybe_unused]] static jint get_field_GLFW_KEY_F10() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "KEY_F10", "field_31925", "GLFW_KEY_F10", "f_166272_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F10
    [[maybe_unused]] static void set_field_GLFW_KEY_F10(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "KEY_F10", "field_31925", "GLFW_KEY_F10", "f_166272_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F11
    [[maybe_unused]] static jint get_field_GLFW_KEY_F11() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "KEY_F11", "field_31926", "GLFW_KEY_F11", "f_166273_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F11
    [[maybe_unused]] static void set_field_GLFW_KEY_F11(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "KEY_F11", "field_31926", "GLFW_KEY_F11", "f_166273_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F12
    [[maybe_unused]] static jint get_field_GLFW_KEY_F12() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "KEY_F12", "field_31927", "GLFW_KEY_F12", "f_166274_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F12
    [[maybe_unused]] static void set_field_GLFW_KEY_F12(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "KEY_F12", "field_31927", "GLFW_KEY_F12", "f_166274_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F13
    [[maybe_unused]] static jint get_field_GLFW_KEY_F13() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "KEY_F13", "field_31928", "GLFW_KEY_F13", "f_166275_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F13
    [[maybe_unused]] static void set_field_GLFW_KEY_F13(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "KEY_F13", "field_31928", "GLFW_KEY_F13", "f_166275_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F14
    [[maybe_unused]] static jint get_field_GLFW_KEY_F14() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "KEY_F14", "field_31929", "GLFW_KEY_F14", "f_166276_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F14
    [[maybe_unused]] static void set_field_GLFW_KEY_F14(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "KEY_F14", "field_31929", "GLFW_KEY_F14", "f_166276_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F15
    [[maybe_unused]] static jint get_field_GLFW_KEY_F15() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "KEY_F15", "field_31930", "GLFW_KEY_F15", "f_166277_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F15
    [[maybe_unused]] static void set_field_GLFW_KEY_F15(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "KEY_F15", "field_31930", "GLFW_KEY_F15", "f_166277_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F16
    [[maybe_unused]] static jint get_field_GLFW_KEY_F16() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "KEY_F16", "field_31931", "GLFW_KEY_F16", "f_166278_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F16
    [[maybe_unused]] static void set_field_GLFW_KEY_F16(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "KEY_F16", "field_31931", "GLFW_KEY_F16", "f_166278_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F17
    [[maybe_unused]] static jint get_field_GLFW_KEY_F17() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "KEY_F17", "field_31959", "GLFW_KEY_F17", "f_166306_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F17
    [[maybe_unused]] static void set_field_GLFW_KEY_F17(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "KEY_F17", "field_31959", "GLFW_KEY_F17", "f_166306_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F18
    [[maybe_unused]] static jint get_field_GLFW_KEY_F18() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "KEY_F18", "field_31960", "GLFW_KEY_F18", "f_166307_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F18
    [[maybe_unused]] static void set_field_GLFW_KEY_F18(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "KEY_F18", "field_31960", "GLFW_KEY_F18", "f_166307_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F19
    [[maybe_unused]] static jint get_field_GLFW_KEY_F19() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "KEY_F19", "field_31961", "GLFW_KEY_F19", "f_166308_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F19
    [[maybe_unused]] static void set_field_GLFW_KEY_F19(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "KEY_F19", "field_31961", "GLFW_KEY_F19", "f_166308_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F20
    [[maybe_unused]] static jint get_field_GLFW_KEY_F20() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "KEY_F20", "field_31962", "GLFW_KEY_F20", "f_166309_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F20
    [[maybe_unused]] static void set_field_GLFW_KEY_F20(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "KEY_F20", "field_31962", "GLFW_KEY_F20", "f_166309_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F21
    [[maybe_unused]] static jint get_field_GLFW_KEY_F21() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "KEY_F21", "field_31963", "GLFW_KEY_F21", "f_166310_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F21
    [[maybe_unused]] static void set_field_GLFW_KEY_F21(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "KEY_F21", "field_31963", "GLFW_KEY_F21", "f_166310_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F22
    [[maybe_unused]] static jint get_field_GLFW_KEY_F22() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "KEY_F22", "field_31964", "GLFW_KEY_F22", "f_166311_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F22
    [[maybe_unused]] static void set_field_GLFW_KEY_F22(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "KEY_F22", "field_31964", "GLFW_KEY_F22", "f_166311_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F23
    [[maybe_unused]] static jint get_field_GLFW_KEY_F23() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "KEY_F23", "field_31965", "GLFW_KEY_F23", "f_166312_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F23
    [[maybe_unused]] static void set_field_GLFW_KEY_F23(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "KEY_F23", "field_31965", "GLFW_KEY_F23", "f_166312_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F24
    [[maybe_unused]] static jint get_field_GLFW_KEY_F24() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "KEY_F24", "field_31966", "GLFW_KEY_F24", "f_166313_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F24
    [[maybe_unused]] static void set_field_GLFW_KEY_F24(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "KEY_F24", "field_31966", "GLFW_KEY_F24", "f_166313_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F25
    [[maybe_unused]] static jint get_field_GLFW_KEY_F25() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "KEY_F25", "field_31967", "GLFW_KEY_F25", "f_166314_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_F25
    [[maybe_unused]] static void set_field_GLFW_KEY_F25(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "KEY_F25", "field_31967", "GLFW_KEY_F25", "f_166314_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_NUM_LOCK
    [[maybe_unused]] static jint get_field_GLFW_KEY_NUM_LOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "KEY_NUMLOCK", "field_31968", "GLFW_KEY_NUM_LOCK", "f_166315_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_NUM_LOCK
    [[maybe_unused]] static void set_field_GLFW_KEY_NUM_LOCK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "KEY_NUMLOCK", "field_31968", "GLFW_KEY_NUM_LOCK", "f_166315_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_0
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_0() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "KEY_NUMPAD0", "field_31969", "GLFW_KEY_KP_0", "f_166316_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_0
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_0(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "KEY_NUMPAD0", "field_31969", "GLFW_KEY_KP_0", "f_166316_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_1
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "KEY_NUMPAD1", "field_31970", "GLFW_KEY_KP_1", "f_166317_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_1
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_1(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "KEY_NUMPAD1", "field_31970", "GLFW_KEY_KP_1", "f_166317_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_2
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_2() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "KEY_NUMPAD2", "field_31971", "GLFW_KEY_KP_2", "f_166318_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_2
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_2(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "KEY_NUMPAD2", "field_31971", "GLFW_KEY_KP_2", "f_166318_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_3
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_3() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "KEY_NUMPAD3", "field_31972", "GLFW_KEY_KP_3", "f_166319_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_3
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_3(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "KEY_NUMPAD3", "field_31972", "GLFW_KEY_KP_3", "f_166319_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_4
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_4() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "KEY_NUMPAD4", "field_31973", "GLFW_KEY_KP_4", "f_166320_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_4
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_4(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "KEY_NUMPAD4", "field_31973", "GLFW_KEY_KP_4", "f_166320_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_5
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_5() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "KEY_NUMPAD5", "field_31974", "GLFW_KEY_KP_5", "f_166321_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_5
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_5(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "KEY_NUMPAD5", "field_31974", "GLFW_KEY_KP_5", "f_166321_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_6
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_6() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "KEY_NUMPAD6", "field_31975", "GLFW_KEY_KP_6", "f_166322_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_6
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_6(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "KEY_NUMPAD6", "field_31975", "GLFW_KEY_KP_6", "f_166322_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_7
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_7() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "KEY_NUMPAD7", "field_31976", "GLFW_KEY_KP_7", "f_166323_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_7
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_7(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "KEY_NUMPAD7", "field_31976", "GLFW_KEY_KP_7", "f_166323_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_8
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_8() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "KEY_NUMPAD8", "field_31977", "GLFW_KEY_KP_8", "f_166324_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_8
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_8(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "KEY_NUMPAD8", "field_31977", "GLFW_KEY_KP_8", "f_166324_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_9
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_9() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "KEY_NUMPAD9", "field_31978", "GLFW_KEY_KP_9", "f_166325_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_9
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_9(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "KEY_NUMPAD9", "field_31978", "GLFW_KEY_KP_9", "f_166325_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_DECIMAL
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_DECIMAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "KEY_NUMPADCOMMA", "field_31979", "GLFW_KEY_KP_DECIMAL", "f_166326_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_DECIMAL
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_DECIMAL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "KEY_NUMPADCOMMA", "field_31979", "GLFW_KEY_KP_DECIMAL", "f_166326_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_ENTER
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_ENTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "KEY_NUMPADENTER", "field_31980", "GLFW_KEY_KP_ENTER", "f_166327_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_ENTER
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_ENTER(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "KEY_NUMPADENTER", "field_31980", "GLFW_KEY_KP_ENTER", "f_166327_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_EQUAL
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_EQUAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "KEY_NUMPADEQUALS", "field_31981", "GLFW_KEY_KP_EQUAL", "f_166328_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_EQUAL
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_EQUAL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "KEY_NUMPADEQUALS", "field_31981", "GLFW_KEY_KP_EQUAL", "f_166328_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_DOWN
    [[maybe_unused]] static jint get_field_GLFW_KEY_DOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "KEY_DOWN", "field_31982", "GLFW_KEY_DOWN", "f_166329_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_DOWN
    [[maybe_unused]] static void set_field_GLFW_KEY_DOWN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "KEY_DOWN", "field_31982", "GLFW_KEY_DOWN", "f_166329_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_LEFT
    [[maybe_unused]] static jint get_field_GLFW_KEY_LEFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "KEY_LEFT", "field_31983", "GLFW_KEY_LEFT", "f_166330_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_LEFT
    [[maybe_unused]] static void set_field_GLFW_KEY_LEFT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "KEY_LEFT", "field_31983", "GLFW_KEY_LEFT", "f_166330_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_RIGHT
    [[maybe_unused]] static jint get_field_GLFW_KEY_RIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "KEY_RIGHT", "field_31984", "GLFW_KEY_RIGHT", "f_166331_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_RIGHT
    [[maybe_unused]] static void set_field_GLFW_KEY_RIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "KEY_RIGHT", "field_31984", "GLFW_KEY_RIGHT", "f_166331_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_UP
    [[maybe_unused]] static jint get_field_GLFW_KEY_UP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "KEY_UP", "field_31932", "GLFW_KEY_UP", "f_166280_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_UP
    [[maybe_unused]] static void set_field_GLFW_KEY_UP(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "KEY_UP", "field_31932", "GLFW_KEY_UP", "f_166280_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_ADD
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_ADD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "KEY_ADD", "field_31933", "GLFW_KEY_KP_ADD", "f_166281_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_ADD
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_ADD(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "KEY_ADD", "field_31933", "GLFW_KEY_KP_ADD", "f_166281_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_APOSTROPHE
    [[maybe_unused]] static jint get_field_GLFW_KEY_APOSTROPHE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "KEY_APOSTROPHE", "field_31934", "GLFW_KEY_APOSTROPHE", "f_166282_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_APOSTROPHE
    [[maybe_unused]] static void set_field_GLFW_KEY_APOSTROPHE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "KEY_APOSTROPHE", "field_31934", "GLFW_KEY_APOSTROPHE", "f_166282_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_BACKSLASH
    [[maybe_unused]] static jint get_field_GLFW_KEY_BACKSLASH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "KEY_BACKSLASH", "field_31935", "GLFW_KEY_BACKSLASH", "f_166283_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_BACKSLASH
    [[maybe_unused]] static void set_field_GLFW_KEY_BACKSLASH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "KEY_BACKSLASH", "field_31935", "GLFW_KEY_BACKSLASH", "f_166283_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_COMMA
    [[maybe_unused]] static jint get_field_GLFW_KEY_COMMA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "KEY_COMMA", "field_31936", "GLFW_KEY_COMMA", "f_166284_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_COMMA
    [[maybe_unused]] static void set_field_GLFW_KEY_COMMA(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "KEY_COMMA", "field_31936", "GLFW_KEY_COMMA", "f_166284_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_EQUAL
    [[maybe_unused]] static jint get_field_GLFW_KEY_EQUAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "KEY_EQUALS", "field_31937", "GLFW_KEY_EQUAL", "f_166285_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_EQUAL
    [[maybe_unused]] static void set_field_GLFW_KEY_EQUAL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "KEY_EQUALS", "field_31937", "GLFW_KEY_EQUAL", "f_166285_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_GRAVE_ACCENT
    [[maybe_unused]] static jint get_field_GLFW_KEY_GRAVE_ACCENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "KEY_GRAVE", "field_31938", "GLFW_KEY_GRAVE_ACCENT", "f_166286_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_GRAVE_ACCENT
    [[maybe_unused]] static void set_field_GLFW_KEY_GRAVE_ACCENT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "KEY_GRAVE", "field_31938", "GLFW_KEY_GRAVE_ACCENT", "f_166286_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_LEFT_BRACKET
    [[maybe_unused]] static jint get_field_GLFW_KEY_LEFT_BRACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "KEY_LBRACKET", "field_31939", "GLFW_KEY_LEFT_BRACKET", "f_166287_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_LEFT_BRACKET
    [[maybe_unused]] static void set_field_GLFW_KEY_LEFT_BRACKET(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "KEY_LBRACKET", "field_31939", "GLFW_KEY_LEFT_BRACKET", "f_166287_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_MINUS
    [[maybe_unused]] static jint get_field_GLFW_KEY_MINUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "KEY_MINUS", "field_31941", "GLFW_KEY_MINUS", "f_166288_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_MINUS
    [[maybe_unused]] static void set_field_GLFW_KEY_MINUS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "KEY_MINUS", "field_31941", "GLFW_KEY_MINUS", "f_166288_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_MULTIPLY
    [[maybe_unused]] static jint get_field_GLFW_KEY_KP_MULTIPLY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "KEY_MULTIPLY", "field_31942", "GLFW_KEY_KP_MULTIPLY", "f_166289_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_KP_MULTIPLY
    [[maybe_unused]] static void set_field_GLFW_KEY_KP_MULTIPLY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "KEY_MULTIPLY", "field_31942", "GLFW_KEY_KP_MULTIPLY", "f_166289_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_PERIOD
    [[maybe_unused]] static jint get_field_GLFW_KEY_PERIOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "KEY_PERIOD", "field_31943", "GLFW_KEY_PERIOD", "f_166290_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_PERIOD
    [[maybe_unused]] static void set_field_GLFW_KEY_PERIOD(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "KEY_PERIOD", "field_31943", "GLFW_KEY_PERIOD", "f_166290_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_RIGHT_BRACKET
    [[maybe_unused]] static jint get_field_GLFW_KEY_RIGHT_BRACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "KEY_RBRACKET", "field_31944", "GLFW_KEY_RIGHT_BRACKET", "f_166291_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_RIGHT_BRACKET
    [[maybe_unused]] static void set_field_GLFW_KEY_RIGHT_BRACKET(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "KEY_RBRACKET", "field_31944", "GLFW_KEY_RIGHT_BRACKET", "f_166291_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_SEMICOLON
    [[maybe_unused]] static jint get_field_GLFW_KEY_SEMICOLON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "KEY_SEMICOLON", "field_31945", "GLFW_KEY_SEMICOLON", "f_166292_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_SEMICOLON
    [[maybe_unused]] static void set_field_GLFW_KEY_SEMICOLON(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "KEY_SEMICOLON", "field_31945", "GLFW_KEY_SEMICOLON", "f_166292_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_SLASH
    [[maybe_unused]] static jint get_field_GLFW_KEY_SLASH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "KEY_SLASH", "field_31946", "GLFW_KEY_SLASH", "f_166293_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_SLASH
    [[maybe_unused]] static void set_field_GLFW_KEY_SLASH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "KEY_SLASH", "field_31946", "GLFW_KEY_SLASH", "f_166293_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_SPACE
    [[maybe_unused]] static jint get_field_GLFW_KEY_SPACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "KEY_SPACE", "field_31947", "GLFW_KEY_SPACE", "f_166294_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_SPACE
    [[maybe_unused]] static void set_field_GLFW_KEY_SPACE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "KEY_SPACE", "field_31947", "GLFW_KEY_SPACE", "f_166294_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_TAB
    [[maybe_unused]] static jint get_field_GLFW_KEY_TAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "KEY_TAB", "field_31948", "GLFW_KEY_TAB", "f_166295_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_TAB
    [[maybe_unused]] static void set_field_GLFW_KEY_TAB(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "KEY_TAB", "field_31948", "GLFW_KEY_TAB", "f_166295_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_LEFT_ALT
    [[maybe_unused]] static jint get_field_GLFW_KEY_LEFT_ALT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "KEY_LALT", "field_31949", "GLFW_KEY_LEFT_ALT", "f_166296_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_LEFT_ALT
    [[maybe_unused]] static void set_field_GLFW_KEY_LEFT_ALT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "KEY_LALT", "field_31949", "GLFW_KEY_LEFT_ALT", "f_166296_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_LEFT_CONTROL
    [[maybe_unused]] static jint get_field_GLFW_KEY_LEFT_CONTROL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "KEY_LCONTROL", "field_31950", "GLFW_KEY_LEFT_CONTROL", "f_166297_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_LEFT_CONTROL
    [[maybe_unused]] static void set_field_GLFW_KEY_LEFT_CONTROL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "KEY_LCONTROL", "field_31950", "GLFW_KEY_LEFT_CONTROL", "f_166297_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_LEFT_SHIFT
    [[maybe_unused]] static jint get_field_GLFW_KEY_LEFT_SHIFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "KEY_LSHIFT", "field_31951", "GLFW_KEY_LEFT_SHIFT", "f_166298_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_LEFT_SHIFT
    [[maybe_unused]] static void set_field_GLFW_KEY_LEFT_SHIFT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "KEY_LSHIFT", "field_31951", "GLFW_KEY_LEFT_SHIFT", "f_166298_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_LEFT_SUPER
    [[maybe_unused]] static jint get_field_GLFW_KEY_LEFT_SUPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "KEY_LWIN", "field_31952", "GLFW_KEY_LEFT_SUPER", "f_166299_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_LEFT_SUPER
    [[maybe_unused]] static void set_field_GLFW_KEY_LEFT_SUPER(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "KEY_LWIN", "field_31952", "GLFW_KEY_LEFT_SUPER", "f_166299_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_RIGHT_ALT
    [[maybe_unused]] static jint get_field_GLFW_KEY_RIGHT_ALT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "KEY_RALT", "field_31953", "GLFW_KEY_RIGHT_ALT", "f_166300_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_RIGHT_ALT
    [[maybe_unused]] static void set_field_GLFW_KEY_RIGHT_ALT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "KEY_RALT", "field_31953", "GLFW_KEY_RIGHT_ALT", "f_166300_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_RIGHT_CONTROL
    [[maybe_unused]] static jint get_field_GLFW_KEY_RIGHT_CONTROL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "KEY_RCONTROL", "field_31954", "GLFW_KEY_RIGHT_CONTROL", "f_166301_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_RIGHT_CONTROL
    [[maybe_unused]] static void set_field_GLFW_KEY_RIGHT_CONTROL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "KEY_RCONTROL", "field_31954", "GLFW_KEY_RIGHT_CONTROL", "f_166301_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_RIGHT_SHIFT
    [[maybe_unused]] static jint get_field_GLFW_KEY_RIGHT_SHIFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "KEY_RSHIFT", "field_31955", "GLFW_KEY_RIGHT_SHIFT", "f_166302_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_RIGHT_SHIFT
    [[maybe_unused]] static void set_field_GLFW_KEY_RIGHT_SHIFT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "KEY_RSHIFT", "field_31955", "GLFW_KEY_RIGHT_SHIFT", "f_166302_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_RIGHT_SUPER
    [[maybe_unused]] static jint get_field_GLFW_KEY_RIGHT_SUPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "KEY_RWIN", "field_31956", "GLFW_KEY_RIGHT_SUPER", "f_166303_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_RIGHT_SUPER
    [[maybe_unused]] static void set_field_GLFW_KEY_RIGHT_SUPER(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "KEY_RWIN", "field_31956", "GLFW_KEY_RIGHT_SUPER", "f_166303_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_ENTER
    [[maybe_unused]] static jint get_field_GLFW_KEY_ENTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "KEY_RETURN", "field_31957", "GLFW_KEY_ENTER", "f_166304_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_ENTER
    [[maybe_unused]] static void set_field_GLFW_KEY_ENTER(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "KEY_RETURN", "field_31957", "GLFW_KEY_ENTER", "f_166304_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_ESCAPE
    [[maybe_unused]] static jint get_field_GLFW_KEY_ESCAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "KEY_ESCAPE", "field_31958", "GLFW_KEY_ESCAPE", "f_166305_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_ESCAPE
    [[maybe_unused]] static void set_field_GLFW_KEY_ESCAPE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "KEY_ESCAPE", "field_31958", "GLFW_KEY_ESCAPE", "f_166305_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_BACKSPACE
    [[maybe_unused]] static jint get_field_GLFW_KEY_BACKSPACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "KEY_BACKSPACE", "field_31986", "GLFW_KEY_BACKSPACE", "f_166333_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_BACKSPACE
    [[maybe_unused]] static void set_field_GLFW_KEY_BACKSPACE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "KEY_BACKSPACE", "field_31986", "GLFW_KEY_BACKSPACE", "f_166333_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_DELETE
    [[maybe_unused]] static jint get_field_GLFW_KEY_DELETE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "KEY_DELETE", "field_31987", "GLFW_KEY_DELETE", "f_166334_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_DELETE
    [[maybe_unused]] static void set_field_GLFW_KEY_DELETE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "KEY_DELETE", "field_31987", "GLFW_KEY_DELETE", "f_166334_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_END
    [[maybe_unused]] static jint get_field_GLFW_KEY_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "KEY_END", "field_31988", "GLFW_KEY_END", "f_166335_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_END
    [[maybe_unused]] static void set_field_GLFW_KEY_END(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "KEY_END", "field_31988", "GLFW_KEY_END", "f_166335_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_HOME
    [[maybe_unused]] static jint get_field_GLFW_KEY_HOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "KEY_HOME", "field_31989", "GLFW_KEY_HOME", "f_166336_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_HOME
    [[maybe_unused]] static void set_field_GLFW_KEY_HOME(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "KEY_HOME", "field_31989", "GLFW_KEY_HOME", "f_166336_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_INSERT
    [[maybe_unused]] static jint get_field_GLFW_KEY_INSERT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "KEY_INSERT", "field_31990", "GLFW_KEY_INSERT", "f_166337_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_INSERT
    [[maybe_unused]] static void set_field_GLFW_KEY_INSERT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "KEY_INSERT", "field_31990", "GLFW_KEY_INSERT", "f_166337_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_PAGE_DOWN
    [[maybe_unused]] static jint get_field_GLFW_KEY_PAGE_DOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "KEY_PAGEDOWN", "field_31991", "GLFW_KEY_PAGE_DOWN", "f_166338_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_PAGE_DOWN
    [[maybe_unused]] static void set_field_GLFW_KEY_PAGE_DOWN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "KEY_PAGEDOWN", "field_31991", "GLFW_KEY_PAGE_DOWN", "f_166338_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_PAGE_UP
    [[maybe_unused]] static jint get_field_GLFW_KEY_PAGE_UP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "KEY_PAGEUP", "field_31992", "GLFW_KEY_PAGE_UP", "f_166339_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_PAGE_UP
    [[maybe_unused]] static void set_field_GLFW_KEY_PAGE_UP(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "KEY_PAGEUP", "field_31992", "GLFW_KEY_PAGE_UP", "f_166339_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_CAPS_LOCK
    [[maybe_unused]] static jint get_field_GLFW_KEY_CAPS_LOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "KEY_CAPSLOCK", "field_31993", "GLFW_KEY_CAPS_LOCK", "f_166340_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_CAPS_LOCK
    [[maybe_unused]] static void set_field_GLFW_KEY_CAPS_LOCK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "KEY_CAPSLOCK", "field_31993", "GLFW_KEY_CAPS_LOCK", "f_166340_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_PAUSE
    [[maybe_unused]] static jint get_field_GLFW_KEY_PAUSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "KEY_PAUSE", "field_31994", "GLFW_KEY_PAUSE", "f_166341_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_PAUSE
    [[maybe_unused]] static void set_field_GLFW_KEY_PAUSE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "KEY_PAUSE", "field_31994", "GLFW_KEY_PAUSE", "f_166341_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_SCROLL_LOCK
    [[maybe_unused]] static jint get_field_GLFW_KEY_SCROLL_LOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "KEY_SCROLLLOCK", "field_31995", "GLFW_KEY_SCROLL_LOCK", "f_166342_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_SCROLL_LOCK
    [[maybe_unused]] static void set_field_GLFW_KEY_SCROLL_LOCK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "KEY_SCROLLLOCK", "field_31995", "GLFW_KEY_SCROLL_LOCK", "f_166342_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_PRINT_SCREEN
    [[maybe_unused]] static jint get_field_GLFW_KEY_PRINT_SCREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "KEY_PRINTSCREEN", "field_31996", "GLFW_KEY_PRINT_SCREEN", "f_166343_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_KEY_PRINT_SCREEN
    [[maybe_unused]] static void set_field_GLFW_KEY_PRINT_SCREEN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "KEY_PRINTSCREEN", "field_31996", "GLFW_KEY_PRINT_SCREEN", "f_166343_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#field_31997
    [[maybe_unused]] static jint get_field_field_31997() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "PRESS", "field_31997", "field_31997", "f_166344_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#field_31997
    [[maybe_unused]] static void set_field_field_31997(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "PRESS", "field_31997", "field_31997", "f_166344_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#field_31998
    [[maybe_unused]] static jint get_field_field_31998() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "RELEASE", "field_31998", "field_31998", "f_166345_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#field_31998
    [[maybe_unused]] static void set_field_field_31998(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "RELEASE", "field_31998", "field_31998", "f_166345_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#field_31999
    [[maybe_unused]] static jint get_field_field_31999() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "REPEAT", "field_31999", "field_31999", "f_166346_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#field_31999
    [[maybe_unused]] static void set_field_field_31999(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "REPEAT", "field_31999", "field_31999", "f_166346_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#field_32000
    [[maybe_unused]] static jint get_field_field_32000() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bo", "MOUSE_BUTTON_LEFT", "field_32000", "field_32000", "f_166347_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#field_32000
    [[maybe_unused]] static void set_field_field_32000(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bo", "MOUSE_BUTTON_LEFT", "field_32000", "field_32000", "f_166347_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#field_32001
    [[maybe_unused]] static jint get_field_field_32001() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bp", "MOUSE_BUTTON_MIDDLE", "field_32001", "field_32001", "f_166348_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#field_32001
    [[maybe_unused]] static void set_field_field_32001(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bp", "MOUSE_BUTTON_MIDDLE", "field_32001", "field_32001", "f_166348_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#field_32002
    [[maybe_unused]] static jint get_field_field_32002() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "MOUSE_BUTTON_RIGHT", "field_32002", "field_32002", "f_166349_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#field_32002
    [[maybe_unused]] static void set_field_field_32002(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "MOUSE_BUTTON_RIGHT", "field_32002", "field_32002", "f_166349_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#field_32003
    [[maybe_unused]] static jint get_field_field_32003() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("br", "MOD_CONTROL", "field_32003", "field_32003", "f_166350_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#field_32003
    [[maybe_unused]] static void set_field_field_32003(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("br", "MOD_CONTROL", "field_32003", "field_32003", "f_166350_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_CURSOR
    [[maybe_unused]] static jint get_field_GLFW_CURSOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "CURSOR", "field_32004", "GLFW_CURSOR", "f_166351_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_CURSOR
    [[maybe_unused]] static void set_field_GLFW_CURSOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "CURSOR", "field_32004", "GLFW_CURSOR", "f_166351_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_CURSOR_DISABLED
    [[maybe_unused]] static jint get_field_GLFW_CURSOR_DISABLED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bt", "CURSOR_DISABLED", "field_32005", "GLFW_CURSOR_DISABLED", "f_166352_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_CURSOR_DISABLED
    [[maybe_unused]] static void set_field_GLFW_CURSOR_DISABLED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bt", "CURSOR_DISABLED", "field_32005", "GLFW_CURSOR_DISABLED", "f_166352_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#GLFW_CURSOR_NORMAL
    [[maybe_unused]] static jint get_field_GLFW_CURSOR_NORMAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bu", "CURSOR_NORMAL", "field_32006", "GLFW_CURSOR_NORMAL", "f_166353_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#GLFW_CURSOR_NORMAL
    [[maybe_unused]] static void set_field_GLFW_CURSOR_NORMAL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bu", "CURSOR_NORMAL", "field_32006", "GLFW_CURSOR_NORMAL", "f_166353_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.InputUtil#UNKNOWN_KEY
    [[maybe_unused]] static jobject get_field_UNKNOWN_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bv", "UNKNOWN", "field_16237", "UNKNOWN_KEY", "f_84822_"), "Lfae$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.InputUtil#UNKNOWN_KEY
    [[maybe_unused]] static void set_field_UNKNOWN_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bv", "UNKNOWN", "field_16237", "UNKNOWN_KEY", "f_84822_"), "Lfae$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_fromKeyCode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getKey", "method_15985", "fromKeyCode", "m_84827_"), "(II)Lfae$a;");
    }

    static jobject fromKeyCode(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_fromKeyCode();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_fromTranslationKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getKey", "method_15981", "fromTranslationKey", "m_84851_"), "(Ljava/lang/String;)Lfae$a;");
    }

    static jobject fromTranslationKey(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromTranslationKey();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isKeyPressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isKeyDown", "method_15987", "isKeyPressed", "m_84830_"), "(JI)Z");
    }

    static jboolean isKeyPressed(const jlong& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isKeyPressed();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setKeyboardCallbacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setupKeyboardCallbacks", "method_15986", "setKeyboardCallbacks", "m_84844_"), "(JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V");
    }

    static void setKeyboardCallbacks(const jlong& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_setKeyboardCallbacks();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setMouseCallbacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setupMouseCallbacks", "method_15983", "setMouseCallbacks", "m_84838_"), "(JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V");
    }

    static void setMouseCallbacks(const jlong& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_setMouseCallbacks();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_setCursorParameters() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "grabOrReleaseMouse", "method_15984", "setCursorParameters", "m_84833_"), "(JIDD)V");
    }

    static void setCursorParameters(const jlong& arg0, const jint& arg1, const jdouble& arg2, const jdouble& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_setCursorParameters();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isRawMouseMotionSupported() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isRawMouseInputSupported", "method_21735", "isRawMouseMotionSupported", "m_84826_"), "()Z");
    }

    static jboolean isRawMouseMotionSupported() {
       const auto clazz = self();
       const auto methodID = methodID_isRawMouseMotionSupported();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID);
    };
    
    static jmethodID methodID_setRawMouseMotionMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "updateRawMouseInput", "method_21736", "setRawMouseMotionMode", "m_84848_"), "(JZ)V");
    }

    static void setRawMouseMotionMode(const jlong& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_setRawMouseMotionMode();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_UTIL_INPUTUTIL_HPP