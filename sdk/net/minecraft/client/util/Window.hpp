// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_UTIL_WINDOW_HPP
#define NET_MINECRAFT_CLIENT_UTIL_WINDOW_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.util.Window
 * Remapped: fam
 */
namespace Window {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fam", "com/mojang/blaze3d/platform/Window", "net/minecraft/class_1041", "net/minecraft/client/util/Window", "net/minecraft/src/C_3161_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.util.Window#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOGGER", "field_5178", "LOGGER", "f_85345_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOGGER", "field_5178", "LOGGER", "f_85345_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.Window#field_52250
    [[maybe_unused]] static jint get_field_field_52250() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BASE_WIDTH", "field_52250", "field_52250", "f_337695_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.Window#field_52250
    [[maybe_unused]] static void set_field_field_52250(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BASE_WIDTH", "field_52250", "field_52250", "f_337695_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.util.Window#field_52251
    [[maybe_unused]] static jint get_field_field_52251() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BASE_HEIGHT", "field_52251", "field_52251", "f_336756_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.util.Window#field_52251
    [[maybe_unused]] static void set_field_field_52251(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BASE_HEIGHT", "field_52251", "field_52251", "f_336756_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#errorCallback
    static jobject get_field_errorCallback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "defaultErrorCallback", "field_5190", "errorCallback", "f_85346_"), "Lorg/lwjgl/glfw/GLFWErrorCallback;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#errorCallback
    static void set_field_errorCallback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "defaultErrorCallback", "field_5190", "errorCallback", "f_85346_"), "Lorg/lwjgl/glfw/GLFWErrorCallback;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#eventHandler
    static jobject get_field_eventHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "eventHandler", "field_5176", "eventHandler", "f_85347_"), "Lfan;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#eventHandler
    static void set_field_eventHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "eventHandler", "field_5176", "eventHandler", "f_85347_"), "Lfan;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#monitorTracker
    static jobject get_field_monitorTracker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "screenManager", "field_5195", "monitorTracker", "f_85348_"), "Lfak;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#monitorTracker
    static void set_field_monitorTracker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "screenManager", "field_5195", "monitorTracker", "f_85348_"), "Lfak;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#handle
    static jlong get_field_handle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "window", "field_5187", "handle", "f_85349_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#handle
    static void set_field_handle(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "window", "field_5187", "handle", "f_85349_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#windowedX
    static jint get_field_windowedX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "windowedX", "field_5175", "windowedX", "f_85350_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#windowedX
    static void set_field_windowedX(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "windowedX", "field_5175", "windowedX", "f_85350_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#windowedY
    static jint get_field_windowedY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "windowedY", "field_5185", "windowedY", "f_85351_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#windowedY
    static void set_field_windowedY(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "windowedY", "field_5185", "windowedY", "f_85351_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#windowedWidth
    static jint get_field_windowedWidth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "windowedWidth", "field_5174", "windowedWidth", "f_85352_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#windowedWidth
    static void set_field_windowedWidth(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "windowedWidth", "field_5174", "windowedWidth", "f_85352_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#windowedHeight
    static jint get_field_windowedHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "windowedHeight", "field_5184", "windowedHeight", "f_85353_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#windowedHeight
    static void set_field_windowedHeight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "windowedHeight", "field_5184", "windowedHeight", "f_85353_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#videoMode
    static jobject get_field_videoMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "preferredFullscreenVideoMode", "field_5193", "videoMode", "f_85354_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#videoMode
    static void set_field_videoMode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "preferredFullscreenVideoMode", "field_5193", "videoMode", "f_85354_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#fullscreen
    static jboolean get_field_fullscreen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "fullscreen", "field_5191", "fullscreen", "f_85355_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#fullscreen
    static void set_field_fullscreen(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "fullscreen", "field_5191", "fullscreen", "f_85355_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#currentFullscreen
    static jboolean get_field_currentFullscreen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "actuallyFullscreen", "field_5177", "currentFullscreen", "f_85356_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#currentFullscreen
    static void set_field_currentFullscreen(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "actuallyFullscreen", "field_5177", "currentFullscreen", "f_85356_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#x
    static jint get_field_x(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "x", "field_5183", "x", "f_85357_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#x
    static void set_field_x(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "x", "field_5183", "x", "f_85357_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#y
    static jint get_field_y(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "y", "field_5198", "y", "f_85358_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#y
    static void set_field_y(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "y", "field_5198", "y", "f_85358_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "width", "field_5182", "width", "f_85359_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "width", "field_5182", "width", "f_85359_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#height
    static jint get_field_height(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "height", "field_5197", "height", "f_85360_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#height
    static void set_field_height(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "height", "field_5197", "height", "f_85360_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#framebufferWidth
    static jint get_field_framebufferWidth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "framebufferWidth", "field_5181", "framebufferWidth", "f_85361_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#framebufferWidth
    static void set_field_framebufferWidth(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "framebufferWidth", "field_5181", "framebufferWidth", "f_85361_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#framebufferHeight
    static jint get_field_framebufferHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "framebufferHeight", "field_5196", "framebufferHeight", "f_85362_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#framebufferHeight
    static void set_field_framebufferHeight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "framebufferHeight", "field_5196", "framebufferHeight", "f_85362_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#scaledWidth
    static jint get_field_scaledWidth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "guiScaledWidth", "field_5180", "scaledWidth", "f_85363_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#scaledWidth
    static void set_field_scaledWidth(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "guiScaledWidth", "field_5180", "scaledWidth", "f_85363_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#scaledHeight
    static jint get_field_scaledHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "guiScaledHeight", "field_5194", "scaledHeight", "f_85364_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#scaledHeight
    static void set_field_scaledHeight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "guiScaledHeight", "field_5194", "scaledHeight", "f_85364_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#scaleFactor
    static jdouble get_field_scaleFactor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "guiScale", "field_5179", "scaleFactor", "f_85365_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#scaleFactor
    static void set_field_scaleFactor(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "guiScale", "field_5179", "scaleFactor", "f_85365_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#phase
    static jobject get_field_phase(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "errorSection", "field_5192", "phase", "f_85366_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#phase
    static void set_field_phase(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "errorSection", "field_5192", "phase", "f_85366_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#videoModeDirty
    static jboolean get_field_videoModeDirty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "dirty", "field_5186", "videoModeDirty", "f_85367_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#videoModeDirty
    static void set_field_videoModeDirty(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "dirty", "field_5186", "videoModeDirty", "f_85367_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#framerateLimit
    static jint get_field_framerateLimit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "framerateLimit", "field_16238", "framerateLimit", "f_85368_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#framerateLimit
    static void set_field_framerateLimit(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "framerateLimit", "field_16238", "framerateLimit", "f_85368_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.util.Window#vsync
    static jboolean get_field_vsync(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "vsync", "field_16517", "vsync", "f_85369_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.util.Window#vsync
    static void set_field_vsync(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "vsync", "field_16517", "vsync", "f_85369_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getGlfwPlatform() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getPlatform", "method_60793", "getGlfwPlatform", "m_340634_"), "()Ljava/lang/String;");
    }

    static jobject getGlfwPlatform() {
       const auto clazz = self();
       const auto methodID = methodID_getGlfwPlatform();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getRefreshRate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRefreshRate", "method_22092", "getRefreshRate", "m_85377_"), "()I");
    }

    static jint getRefreshRate(const jobject& obj) {
                
       const auto methodID = methodID_getRefreshRate();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldClose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "shouldClose", "method_22093", "shouldClose", "m_85411_"), "()Z");
    }

    static jboolean shouldClose(const jobject& obj) {
                
       const auto methodID = methodID_shouldClose();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_acceptError() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "checkGlfwError", "method_4492", "acceptError", "m_85407_"), "(Ljava/util/function/BiConsumer;)V");
    }

    static void acceptError(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_acceptError();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_setIcon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setIcon", "method_4491", "setIcon", "m_280655_"), "(Lasq;Lfad;)V");
    }

    static void setIcon(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setIcon();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setPhase() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setErrorSection", "method_4474", "setPhase", "m_85403_"), "(Ljava/lang/String;)V");
    }

    static void setPhase(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPhase();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_throwOnGlError() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "setBootErrorCallback", "method_4481", "throwOnGlError", "m_85451_"), "()V");
    }

    static void throwOnGlError(const jobject& obj) {
                
       const auto methodID = methodID_throwOnGlError();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_throwGlError() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "bootCrash", "method_4501", "throwGlError", "m_85412_"), "(IJ)V");
    }

    static void throwGlError(const jint& arg0, const jlong& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_throwGlError();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_logGlError() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defaultErrorCallback", "method_4482", "logGlError", "m_85382_"), "(IJ)V");
    }

    static void logGlError(const jobject& obj, const jint& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_logGlError();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_logOnGlError() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setDefaultErrorCallback", "method_4513", "logOnGlError", "m_85426_"), "()V");
    }

    static void logOnGlError(const jobject& obj) {
                
       const auto methodID = methodID_logOnGlError();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setVsync() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateVsync", "method_4497", "setVsync", "m_85409_"), "(Z)V");
    }

    static void setVsync(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setVsync();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onWindowPosChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onMove", "method_4478", "onWindowPosChanged", "m_85388_"), "(JII)V");
    }

    static void onWindowPosChanged(const jobject& obj, const jlong& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_onWindowPosChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onFramebufferSizeChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onFramebufferResize", "method_4504", "onFramebufferSizeChanged", "m_85415_"), "(JII)V");
    }

    static void onFramebufferSizeChanged(const jobject& obj, const jlong& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_onFramebufferSizeChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_updateFramebufferSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "refreshFramebufferSize", "method_4483", "updateFramebufferSize", "m_85452_"), "()V");
    }

    static void updateFramebufferSize(const jobject& obj) {
                
       const auto methodID = methodID_updateFramebufferSize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onWindowSizeChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "onResize", "method_4488", "onWindowSizeChanged", "m_85427_"), "(JII)V");
    }

    static void onWindowSizeChanged(const jobject& obj, const jlong& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_onWindowSizeChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onWindowFocusChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onFocus", "method_4494", "onWindowFocusChanged", "m_85392_"), "(JZ)V");
    }

    static void onWindowFocusChanged(const jobject& obj, const jlong& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_onWindowFocusChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onCursorEnterChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onEnter", "method_30132", "onCursorEnterChanged", "m_85419_"), "(JZ)V");
    }

    static void onCursorEnterChanged(const jobject& obj, const jlong& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_onCursorEnterChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setFramerateLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setFramerateLimit", "method_15999", "setFramerateLimit", "m_85380_"), "(I)V");
    }

    static void setFramerateLimit(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setFramerateLimit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFramerateLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getFramerateLimit", "method_16000", "getFramerateLimit", "m_85434_"), "()I");
    }

    static jint getFramerateLimit(const jobject& obj) {
                
       const auto methodID = methodID_getFramerateLimit();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_swapBuffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "updateDisplay", "method_15998", "swapBuffers", "m_85435_"), "()V");
    }

    static void swapBuffers(const jobject& obj) {
                
       const auto methodID = methodID_swapBuffers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVideoMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getPreferredFullscreenVideoMode", "method_4511", "getVideoMode", "m_85436_"), "()Ljava/util/Optional;");
    }

    static jobject getVideoMode(const jobject& obj) {
                
       const auto methodID = methodID_getVideoMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setVideoMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPreferredFullscreenVideoMode", "method_4505", "setVideoMode", "m_85405_"), "(Ljava/util/Optional;)V");
    }

    static void setVideoMode(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setVideoMode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_applyVideoMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "changeFullscreenVideoMode", "method_4475", "applyVideoMode", "m_85437_"), "()V");
    }

    static void applyVideoMode(const jobject& obj) {
                
       const auto methodID = methodID_applyVideoMode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateWindowRegion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "setMode", "method_4479", "updateWindowRegion", "m_85453_"), "()V");
    }

    static void updateWindowRegion(const jobject& obj) {
                
       const auto methodID = methodID_updateWindowRegion();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_toggleFullscreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "toggleFullScreen", "method_4500", "toggleFullscreen", "m_85438_"), "()V");
    }

    static void toggleFullscreen(const jobject& obj) {
                
       const auto methodID = methodID_toggleFullscreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWindowedSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWindowed", "method_36813", "setWindowedSize", "m_166447_"), "(II)V");
    }

    static void setWindowedSize(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setWindowedSize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateFullscreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "updateFullscreen", "method_4485", "updateFullscreen", "m_85431_"), "(Z)V");
    }

    static void updateFullscreen(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_updateFullscreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_calculateScaleFactor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateScale", "method_4476", "calculateScaleFactor", "m_85385_"), "(IZ)I");
    }

    static jint calculateScaleFactor(const jobject& obj, const jint& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_calculateScaleFactor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setScaleFactor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setGuiScale", "method_15997", "setScaleFactor", "m_85378_"), "(D)V");
    }

    static void setScaleFactor(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setScaleFactor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setTitle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setTitle", "method_24286", "setTitle", "m_85422_"), "(Ljava/lang/String;)V");
    }

    static void setTitle(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setTitle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHandle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getWindow", "method_4490", "getHandle", "m_85439_"), "()J");
    }

    static jlong getHandle(const jobject& obj) {
                
       const auto methodID = methodID_getHandle();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFullscreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "isFullscreen", "method_4498", "isFullscreen", "m_85440_"), "()Z");
    }

    static jboolean isFullscreen(const jobject& obj) {
                
       const auto methodID = methodID_isFullscreen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFramebufferWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getWidth", "method_4489", "getFramebufferWidth", "m_85441_"), "()I");
    }

    static jint getFramebufferWidth(const jobject& obj) {
                
       const auto methodID = methodID_getFramebufferWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFramebufferHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getHeight", "method_4506", "getFramebufferHeight", "m_85442_"), "()I");
    }

    static jint getFramebufferHeight(const jobject& obj) {
                
       const auto methodID = methodID_getFramebufferHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setFramebufferWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setWidth", "method_35642", "setFramebufferWidth", "m_166450_"), "(I)V");
    }

    static void setFramebufferWidth(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setFramebufferWidth();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setFramebufferHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setHeight", "method_35643", "setFramebufferHeight", "m_166452_"), "(I)V");
    }

    static void setFramebufferHeight(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setFramebufferHeight();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getScreenWidth", "method_4480", "getWidth", "m_85443_"), "()I");
    }

    static jint getWidth(const jobject& obj) {
                
       const auto methodID = methodID_getWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getScreenHeight", "method_4507", "getHeight", "m_85444_"), "()I");
    }

    static jint getHeight(const jobject& obj) {
                
       const auto methodID = methodID_getHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getScaledWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getGuiScaledWidth", "method_4486", "getScaledWidth", "m_85445_"), "()I");
    }

    static jint getScaledWidth(const jobject& obj) {
                
       const auto methodID = methodID_getScaledWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getScaledHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getGuiScaledHeight", "method_4502", "getScaledHeight", "m_85446_"), "()I");
    }

    static jint getScaledHeight(const jobject& obj) {
                
       const auto methodID = methodID_getScaledHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "getX", "method_4499", "getX", "m_85447_"), "()I");
    }

    static jint getX(const jobject& obj) {
                
       const auto methodID = methodID_getX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getY", "method_4477", "getY", "m_85448_"), "()I");
    }

    static jint getY(const jobject& obj) {
                
       const auto methodID = methodID_getY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getScaleFactor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getGuiScale", "method_4495", "getScaleFactor", "m_85449_"), "()D");
    }

    static jdouble getScaleFactor(const jobject& obj) {
                
       const auto methodID = methodID_getScaleFactor();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMonitor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "findBestMonitor", "method_20831", "getMonitor", "m_85450_"), "()Lfah;");
    }

    static jobject getMonitor(const jobject& obj) {
                
       const auto methodID = methodID_getMonitor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setRawMouseMotion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updateRawMouseInput", "method_21668", "setRawMouseMotion", "m_85424_"), "(Z)V");
    }

    static void setRawMouseMotion(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setRawMouseMotion();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_UTIL_WINDOW_HPP