// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_UTIL_MACWINDOWUTIL_HPP
#define NET_MINECRAFT_CLIENT_UTIL_MACWINDOWUTIL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.util.MacWindowUtil
 * Remapped: fag
 */
namespace MacWindowUtil {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fag", "com/mojang/blaze3d/platform/MacosUtil", "net/minecraft/class_6417", "net/minecraft/client/util/MacWindowUtil", "net/minecraft/src/C_181894_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.util.MacWindowUtil#field_46537
    [[maybe_unused]] static jint get_field_field_46537() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NS_RESIZABLE_WINDOW_MASK", "field_46537", "field_46537", "f_303366_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.util.MacWindowUtil#field_46537
    [[maybe_unused]] static void set_field_field_46537(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NS_RESIZABLE_WINDOW_MASK", "field_46537", "field_46537", "f_303366_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.util.MacWindowUtil#FULLSCREEN_MASK
    [[maybe_unused]] static jint get_field_FULLSCREEN_MASK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NS_FULL_SCREEN_WINDOW_MASK", "field_34053", "FULLSCREEN_MASK", "f_182515_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.util.MacWindowUtil#FULLSCREEN_MASK
    [[maybe_unused]] static void set_field_FULLSCREEN_MASK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NS_FULL_SCREEN_WINDOW_MASK", "field_34053", "FULLSCREEN_MASK", "f_182515_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_toggleFullscreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "exitNativeFullscreen", "method_37461", "toggleFullscreen", "m_182517_"), "(J)V");
    }

    static void toggleFullscreen(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toggleFullscreen();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fixStyleMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "clearResizableBit", "method_54101", "fixStyleMask", "m_305469_"), "(J)V");
    }

    static void fixStyleMask(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fixStyleMask();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getCocoaWindow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getNsWindow", "method_37463", "getCocoaWindow", "m_182521_"), "(J)Ljava/util/Optional;");
    }

    static jobject getCocoaWindow(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getCocoaWindow();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isFullscreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isInNativeFullscreen", "method_37462", "isFullscreen", "m_304687_"), "(Lca/weblite/objc/NSObject;)Z");
    }

    static jboolean isFullscreen(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isFullscreen();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getStyleMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getStyleMask", "method_54102", "getStyleMask", "m_306498_"), "(Lca/weblite/objc/NSObject;)J");
    }

    static jlong getStyleMask(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getStyleMask();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__toggleFullscreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "toggleNativeFullscreen", "method_37464", "toggleFullscreen", "m_182523_"), "(Lca/weblite/objc/NSObject;)V");
    }

    static void _toggleFullscreen(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__toggleFullscreen();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_setApplicationIconImage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "loadIcon", "method_41718", "setApplicationIconImage", "m_247671_"), "(Latw;)V");
    }

    static void setApplicationIconImage(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_setApplicationIconImage();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_UTIL_MACWINDOWUTIL_HPP