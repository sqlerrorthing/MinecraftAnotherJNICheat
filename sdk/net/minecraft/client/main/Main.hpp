// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_MAIN_MAIN_HPP
#define NET_MINECRAFT_CLIENT_MAIN_MAIN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.main.Main
 * Remapped: net/minecraft/client/main/Main
 */
namespace Main {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("net/minecraft/client/main/Main", "net/minecraft/client/main/Main", "net/minecraft/client/main/Main", "net/minecraft/client/main/Main", "net/minecraft/client/main/Main"));
        }
        return cachedClass;
    };

    static jmethodID methodID_main() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("main", "main", "main", "main", "main"), "([Ljava/lang/String;)V");
    }

    static void main(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_main();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_unescape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "unescapeJavaArgument", "method_53858", "unescape", "m_294649_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject unescape(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_unescape();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toOptional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "emptyStringToEmptyOptional", "method_38752", "toOptional", "m_195486_"), "(Ljava/lang/String;)Ljava/util/Optional;");
    }

    static jobject toOptional(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toOptional();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__toOptional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "ofNullable", "method_21612", "toOptional", "m_129634_"), "(Ljava/lang/Integer;)Ljava/util/OptionalInt;");
    }

    static jobject _toOptional(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__toOptional();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getOption() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseArgument", "method_11428", "getOption", "m_129638_"), "(Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object;");
    }

    static jobject getOption(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getOption();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isNotNullOrEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "stringHasValue", "method_11429", "isNotNullOrEmpty", "m_129636_"), "(Ljava/lang/String;)Z");
    }

    static jboolean isNotNullOrEmpty(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isNotNullOrEmpty();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_MAIN_MAIN_HPP