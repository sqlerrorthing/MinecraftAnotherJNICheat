// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SESSION_BANS_HPP
#define NET_MINECRAFT_CLIENT_SESSION_BANS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.session.Bans
 * Remapped: fmy
 */
namespace Bans {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fmy", "net/minecraft/client/gui/screens/BanNoticeScreens", "net/minecraft/class_7588", "net/minecraft/client/session/Bans", "net/minecraft/src/C_290130_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.session.Bans#TEMPORARY_TITLE
    [[maybe_unused]] static jobject get_field_TEMPORARY_TITLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TEMPORARY_BAN_TITLE", "field_39720", "TEMPORARY_TITLE", "f_291385_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.session.Bans#TEMPORARY_TITLE
    [[maybe_unused]] static void set_field_TEMPORARY_TITLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TEMPORARY_BAN_TITLE", "field_39720", "TEMPORARY_TITLE", "f_291385_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.session.Bans#PERMANENT_TITLE
    [[maybe_unused]] static jobject get_field_PERMANENT_TITLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PERMANENT_BAN_TITLE", "field_39721", "PERMANENT_TITLE", "f_291774_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.session.Bans#PERMANENT_TITLE
    [[maybe_unused]] static void set_field_PERMANENT_TITLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PERMANENT_BAN_TITLE", "field_39721", "PERMANENT_TITLE", "f_291774_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.Bans#NAME_TITLE
    [[maybe_unused]] static jobject get_field_NAME_TITLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NAME_BAN_TITLE", "field_46009", "NAME_TITLE", "f_290759_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.Bans#NAME_TITLE
    [[maybe_unused]] static void set_field_NAME_TITLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NAME_BAN_TITLE", "field_46009", "NAME_TITLE", "f_290759_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.session.Bans#SKIN_TITLE
    [[maybe_unused]] static jobject get_field_SKIN_TITLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SKIN_BAN_TITLE", "field_46010", "SKIN_TITLE", "f_290747_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.session.Bans#SKIN_TITLE
    [[maybe_unused]] static void set_field_SKIN_TITLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SKIN_BAN_TITLE", "field_46010", "SKIN_TITLE", "f_290747_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.session.Bans#SKIN_DESCRIPTION
    [[maybe_unused]] static jobject get_field_SKIN_DESCRIPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SKIN_BAN_DESCRIPTION", "field_46011", "SKIN_DESCRIPTION", "f_290529_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.session.Bans#SKIN_DESCRIPTION
    [[maybe_unused]] static void set_field_SKIN_DESCRIPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SKIN_BAN_DESCRIPTION", "field_46011", "SKIN_DESCRIPTION", "f_290529_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createBanScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_44652", "createBanScreen", "m_295768_"), "(Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/authlib/minecraft/BanDetails;)Lfna;");
    }

    static jobject createBanScreen(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createBanScreen();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createSkinBanScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createSkinBan", "method_53554", "createSkinBanScreen", "m_295252_"), "(Ljava/lang/Runnable;)Lfna;");
    }

    static jobject createSkinBanScreen(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createSkinBanScreen();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createUsernameBanScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createNameBan", "method_53556", "createUsernameBanScreen", "m_295256_"), "(Ljava/lang/String;Ljava/lang/Runnable;)Lfna;");
    }

    static jobject createUsernameBanScreen(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createUsernameBanScreen();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getTitle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getBannedTitle", "method_44651", "getTitle", "m_293705_"), "(Lcom/mojang/authlib/minecraft/BanDetails;)Lwz;");
    }

    static jobject getTitle(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getTitle();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getDescriptionText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getBannedScreenText", "method_44653", "getDescriptionText", "m_292967_"), "(Lcom/mojang/authlib/minecraft/BanDetails;)Lwz;");
    }

    static jobject getDescriptionText(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getDescriptionText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getReasonText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getBanReasonText", "method_44654", "getReasonText", "m_294283_"), "(Lcom/mojang/authlib/minecraft/BanDetails;)Lwz;");
    }

    static jobject getReasonText(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getReasonText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getDurationText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getBanStatusText", "method_44655", "getDurationText", "m_294491_"), "(Lcom/mojang/authlib/minecraft/BanDetails;)Lwz;");
    }

    static jobject getDurationText(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getDurationText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTemporaryBanDurationText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "getBanDurationText", "method_44656", "getTemporaryBanDurationText", "m_295173_"), "(Lcom/mojang/authlib/minecraft/BanDetails;)Lwz;");
    }

    static jobject getTemporaryBanDurationText(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getTemporaryBanDurationText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isTemporary() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "isTemporaryBan", "method_44657", "isTemporary", "m_295851_"), "(Lcom/mojang/authlib/minecraft/BanDetails;)Z");
    }

    static jboolean isTemporary(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isTemporary();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SESSION_BANS_HPP