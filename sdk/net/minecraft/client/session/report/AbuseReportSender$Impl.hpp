// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SESSION_REPORT_ABUSEREPORTSENDER$IMPL_HPP
#define NET_MINECRAFT_CLIENT_SESSION_REPORT_ABUSEREPORTSENDER$IMPL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.session.report.AbuseReportSender$Impl
 * Remapped: gaf$b
 */
namespace AbuseReportSender$Impl {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gaf$b", "net/minecraft/client/multiplayer/chat/report/AbuseReportSender$Services", "net/minecraft/class_7563$class_7565", "net/minecraft/client/session/report/AbuseReportSender$Impl", "net/minecraft/src/C_238468_$C_238477_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.session.report.AbuseReportSender$Impl#environment
    static jobject get_field_environment(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "environment", "comp_875", "environment", "f_238713_"), "Lgal;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.AbuseReportSender$Impl#environment
    static void set_field_environment(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "environment", "comp_875", "environment", "f_238713_"), "Lgal;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.report.AbuseReportSender$Impl#userApiService
    static jobject get_field_userApiService(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "userApiService", "comp_876", "userApiService", "f_238677_"), "Lcom/mojang/authlib/minecraft/UserApiService;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.AbuseReportSender$Impl#userApiService
    static void set_field_userApiService(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "userApiService", "comp_876", "userApiService", "f_238677_"), "Lcom/mojang/authlib/minecraft/UserApiService;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.session.report.AbuseReportSender$Impl#SERVICE_UNAVAILABLE_ERROR_TEXT
    [[maybe_unused]] static jobject get_field_SERVICE_UNAVAILABLE_ERROR_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SERVICE_UNAVAILABLE_TEXT", "field_39642", "SERVICE_UNAVAILABLE_ERROR_TEXT", "f_238570_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.AbuseReportSender$Impl#SERVICE_UNAVAILABLE_ERROR_TEXT
    [[maybe_unused]] static void set_field_SERVICE_UNAVAILABLE_ERROR_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SERVICE_UNAVAILABLE_TEXT", "field_39642", "SERVICE_UNAVAILABLE_ERROR_TEXT", "f_238570_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.session.report.AbuseReportSender$Impl#HTTP_ERROR_TEXT
    [[maybe_unused]] static jobject get_field_HTTP_ERROR_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HTTP_ERROR_TEXT", "field_39643", "HTTP_ERROR_TEXT", "f_238579_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.AbuseReportSender$Impl#HTTP_ERROR_TEXT
    [[maybe_unused]] static void set_field_HTTP_ERROR_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HTTP_ERROR_TEXT", "field_39643", "HTTP_ERROR_TEXT", "f_238579_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.session.report.AbuseReportSender$Impl#JSON_ERROR_TEXT
    [[maybe_unused]] static jobject get_field_JSON_ERROR_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "JSON_ERROR_TEXT", "field_39644", "JSON_ERROR_TEXT", "f_238657_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.AbuseReportSender$Impl#JSON_ERROR_TEXT
    [[maybe_unused]] static void set_field_JSON_ERROR_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "JSON_ERROR_TEXT", "field_39644", "JSON_ERROR_TEXT", "f_238657_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_send() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "send", "method_44563", "send", "m_239469_"), "(Ljava/util/UUID;Lgan;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject send(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_send();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_canSendReports() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isEnabled", "method_44561", "canSendReports", "m_238990_"), "()Z");
    }

    static jboolean canSendReports(const jobject& obj) {
                
       const auto methodID = methodID_canSendReports();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getErrorText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getHttpErrorDescription", "method_44566", "getErrorText", "m_239704_"), "(Lcom/mojang/authlib/exceptions/MinecraftClientHttpException;)Lwz;");
    }

    static jobject getErrorText(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getErrorText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getErrorText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getErrorDescription", "method_44565", "getErrorText", "m_240067_"), "(Lcom/mojang/authlib/exceptions/MinecraftClientException;)Lwz;");
    }

    static jobject _getErrorText(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getErrorText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLimits() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "reportLimits", "method_44564", "getLimits", "m_239479_"), "()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits;");
    }

    static jobject getLimits(const jobject& obj) {
                
       const auto methodID = methodID_getLimits();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__environment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "environment", "comp_875", "environment", "f_238713_"), "()Lgal;");
    }

    static jobject _environment(const jobject& obj) {
                
       const auto methodID = methodID__environment();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__userApiService() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "userApiService", "comp_876", "userApiService", "f_238677_"), "()Lcom/mojang/authlib/minecraft/UserApiService;");
    }

    static jobject _userApiService(const jobject& obj) {
                
       const auto methodID = methodID__userApiService();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SESSION_REPORT_ABUSEREPORTSENDER$IMPL_HPP