// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SESSION_REPORT_ABUSEREPORT$VALIDATIONERROR_HPP
#define NET_MINECRAFT_CLIENT_SESSION_REPORT_ABUSEREPORT$VALIDATIONERROR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.session.report.AbuseReport$ValidationError
 * Remapped: gak$b
 */
namespace AbuseReport$ValidationError {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gak$b", "net/minecraft/client/multiplayer/chat/report/Report$CannotBuildReason", "net/minecraft/class_7855$class_7567", "net/minecraft/client/session/report/AbuseReport$ValidationError", "net/minecraft/src/C_290302_$C_290251_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.session.report.AbuseReport$ValidationError#message
    static jobject get_field_message(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "message", "comp_877", "message", "f_290450_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.AbuseReport$ValidationError#message
    static void set_field_message(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "message", "comp_877", "message", "f_290450_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.report.AbuseReport$ValidationError#NO_REASON
    [[maybe_unused]] static jobject get_field_NO_REASON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_REASON", "field_39655", "NO_REASON", "f_291031_"), "Lgak$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.report.AbuseReport$ValidationError#NO_REASON
    [[maybe_unused]] static void set_field_NO_REASON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_REASON", "field_39655", "NO_REASON", "f_291031_"), "Lgak$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.report.AbuseReport$ValidationError#NO_REPORTED_MESSAGES
    [[maybe_unused]] static jobject get_field_NO_REPORTED_MESSAGES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NO_REPORTED_MESSAGES", "field_39656", "NO_REPORTED_MESSAGES", "f_290816_"), "Lgak$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.report.AbuseReport$ValidationError#NO_REPORTED_MESSAGES
    [[maybe_unused]] static void set_field_NO_REPORTED_MESSAGES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NO_REPORTED_MESSAGES", "field_39656", "NO_REPORTED_MESSAGES", "f_290816_"), "Lgak$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.report.AbuseReport$ValidationError#TOO_MANY_MESSAGES
    [[maybe_unused]] static jobject get_field_TOO_MANY_MESSAGES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TOO_MANY_MESSAGES", "field_39657", "TOO_MANY_MESSAGES", "f_291579_"), "Lgak$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.report.AbuseReport$ValidationError#TOO_MANY_MESSAGES
    [[maybe_unused]] static void set_field_TOO_MANY_MESSAGES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TOO_MANY_MESSAGES", "field_39657", "TOO_MANY_MESSAGES", "f_291579_"), "Lgak$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.report.AbuseReport$ValidationError#COMMENTS_TOO_LONG
    [[maybe_unused]] static jobject get_field_COMMENTS_TOO_LONG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "COMMENT_TOO_LONG", "field_39658", "COMMENTS_TOO_LONG", "f_290848_"), "Lgak$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.report.AbuseReport$ValidationError#COMMENTS_TOO_LONG
    [[maybe_unused]] static void set_field_COMMENTS_TOO_LONG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "COMMENT_TOO_LONG", "field_39658", "COMMENTS_TOO_LONG", "f_290848_"), "Lgak$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.report.AbuseReport$ValidationError#NOT_ATTESTED
    [[maybe_unused]] static jobject get_field_NOT_ATTESTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NOT_ATTESTED", "field_52306", "NOT_ATTESTED", "f_337560_"), "Lgak$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.report.AbuseReport$ValidationError#NOT_ATTESTED
    [[maybe_unused]] static void set_field_NOT_ATTESTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NOT_ATTESTED", "field_52306", "NOT_ATTESTED", "f_337560_"), "Lgak$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createTooltip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tooltip", "method_53615", "createTooltip", "m_293758_"), "()Lfjx;");
    }

    static jobject createTooltip(const jobject& obj) {
                
       const auto methodID = methodID_createTooltip();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__message() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "message", "comp_877", "message", "f_290450_"), "()Lwz;");
    }

    static jobject _message(const jobject& obj) {
                
       const auto methodID = methodID__message();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SESSION_REPORT_ABUSEREPORT$VALIDATIONERROR_HPP