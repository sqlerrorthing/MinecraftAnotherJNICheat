// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SESSION_REPORT_MESSAGESLISTADDER_HPP
#define NET_MINECRAFT_CLIENT_SESSION_REPORT_MESSAGESLISTADDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.session.report.MessagesListAdder
 * Remapped: fsm
 */
namespace MessagesListAdder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fsm", "net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller", "net/minecraft/class_7541", "net/minecraft/client/session/report/MessagesListAdder", "net/minecraft/src/C_238493_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.session.report.MessagesListAdder#log
    static jobject get_field_log(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "log", "field_39581", "log", "f_238669_"), "Lgaa;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.MessagesListAdder#log
    static void set_field_log(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "log", "field_39581", "log", "f_238669_"), "Lgaa;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.report.MessagesListAdder#contextMessageCollector
    static jobject get_field_contextMessageCollector(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "contextBuilder", "field_40439", "contextMessageCollector", "f_243871_"), "Lgai;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.MessagesListAdder#contextMessageCollector
    static void set_field_contextMessageCollector(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "contextBuilder", "field_40439", "contextMessageCollector", "f_243871_"), "Lgai;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.report.MessagesListAdder#reportablePredicate
    static jobject get_field_reportablePredicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "canReport", "field_39582", "reportablePredicate", "f_238535_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.MessagesListAdder#reportablePredicate
    static void set_field_reportablePredicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "canReport", "field_39582", "reportablePredicate", "f_238535_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.report.MessagesListAdder#link
    static jobject get_field_link(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "previousLink", "field_40795", "link", "f_252430_"), "Lxu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.MessagesListAdder#link
    static void set_field_link(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "previousLink", "field_40795", "link", "f_252430_"), "Lxu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.report.MessagesListAdder#maxLogIndex
    static jint get_field_maxLogIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "eventId", "field_40440", "maxLogIndex", "f_244035_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.MessagesListAdder#maxLogIndex
    static void set_field_maxLogIndex(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "eventId", "field_40440", "maxLogIndex", "f_244035_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.report.MessagesListAdder#foldedMessageCount
    static jint get_field_foldedMessageCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "missedCount", "field_40441", "foldedMessageCount", "f_244006_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.MessagesListAdder#foldedMessageCount
    static void set_field_foldedMessageCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "missedCount", "field_40441", "foldedMessageCount", "f_244006_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.report.MessagesListAdder#lastMessage
    static jobject get_field_lastMessage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "lastMessage", "field_40442", "lastMessage", "f_244367_"), "Lxp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.MessagesListAdder#lastMessage
    static void set_field_lastMessage(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "lastMessage", "field_40442", "lastMessage", "f_244367_"), "Lxp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillNextPage", "method_44486", "add", "m_239015_"), "(ILfsm$a;)V");
    }

    static void add(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tryAdd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "acceptMessage", "method_45664", "tryAdd", "m_253069_"), "(Lfsm$a;Lgad$a;)Z");
    }

    static jboolean tryAdd(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_tryAdd();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SESSION_REPORT_MESSAGESLISTADDER_HPP