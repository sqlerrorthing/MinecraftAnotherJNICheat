// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SESSION_REPORT_ABUSEREPORT$BUILDER_HPP
#define NET_MINECRAFT_CLIENT_SESSION_REPORT_ABUSEREPORT$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.session.report.AbuseReport$Builder
 * Remapped: gak$a
 */
namespace AbuseReport$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gak$a", "net/minecraft/client/multiplayer/chat/report/Report$Builder", "net/minecraft/class_7855$class_8775", "net/minecraft/client/session/report/AbuseReport$Builder", "net/minecraft/src/C_290302_$C_290068_"));
        }
        return cachedClass;
    };

    // getter for protected field net.minecraft.client.session.report.AbuseReport$Builder#report
    static jobject get_field_report(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "report", "field_46061", "report", "f_290323_"), "Lgak;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.session.report.AbuseReport$Builder#report
    static void set_field_report(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "report", "field_46061", "report", "f_290323_"), "Lgak;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.session.report.AbuseReport$Builder#limits
    static jobject get_field_limits(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "limits", "field_46062", "limits", "f_290729_"), "Lcom/mojang/authlib/minecraft/report/AbuseReportLimits;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.session.report.AbuseReport$Builder#limits
    static void set_field_limits(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "limits", "field_46062", "limits", "f_290729_"), "Lcom/mojang/authlib/minecraft/report/AbuseReportLimits;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "report", "method_53611", "getReport", "m_292899_"), "()Lgak;");
    }

    static jobject getReport(const jobject& obj) {
                
       const auto methodID = methodID_getReport();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getReportedPlayerUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "reportedProfileId", "method_53612", "getReportedPlayerUuid", "m_294500_"), "()Ljava/util/UUID;");
    }

    static jobject getReportedPlayerUuid(const jobject& obj) {
                
       const auto methodID = methodID_getReportedPlayerUuid();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOpinionComments() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "comments", "method_53613", "getOpinionComments", "m_295576_"), "()Ljava/lang/String;");
    }

    static jobject getOpinionComments(const jobject& obj) {
                
       const auto methodID = methodID_getOpinionComments();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAttested() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "attested", "method_61156", "isAttested", "m_340195_"), "()Z");
    }

    static jboolean isAttested(const jobject& obj) {
                
       const auto methodID = methodID_isAttested();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setOpinionComments() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setComments", "method_53610", "setOpinionComments", "m_293258_"), "(Ljava/lang/String;)V");
    }

    static void setOpinionComments(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOpinionComments();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getReason() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "reason", "method_53614", "getReason", "m_295535_"), "()Lgam;");
    }

    static jobject getReason(const jobject& obj) {
                
       const auto methodID = methodID_getReason();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setReason() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setReason", "method_53609", "setReason", "m_294795_"), "(Lgam;)V");
    }

    static void setReason(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setReason();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setAttested() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setAttested", "method_61155", "setAttested", "m_339078_"), "(Z)V");
    }

    static void setAttested(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setAttested();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasEnoughInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasContent", "method_53602", "hasEnoughInfo", "m_293281_"), "()Z");
    }

    static jboolean hasEnoughInfo(const jobject& obj) {
                
       const auto methodID = methodID_hasEnoughInfo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "checkBuildable", "method_53605", "validate", "m_293936_"), "()Lgak$b;");
    }

    static jobject validate(const jobject& obj) {
                
       const auto methodID = methodID_validate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "build", "method_53600", "build", "m_292692_"), "(Lgao;)Lcom/mojang/datafixers/util/Either;");
    }

    static jobject build(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SESSION_REPORT_ABUSEREPORT$BUILDER_HPP