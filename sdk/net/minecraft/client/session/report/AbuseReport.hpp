// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SESSION_REPORT_ABUSEREPORT_HPP
#define NET_MINECRAFT_CLIENT_SESSION_REPORT_ABUSEREPORT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.session.report.AbuseReport
 * Remapped: gak
 */
namespace AbuseReport {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gak", "net/minecraft/client/multiplayer/chat/report/Report", "net/minecraft/class_7855", "net/minecraft/client/session/report/AbuseReport", "net/minecraft/src/C_290302_"));
        }
        return cachedClass;
    };

    // getter for protected field net.minecraft.client.session.report.AbuseReport#reportId
    static jobject get_field_reportId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "reportId", "field_40813", "reportId", "f_291664_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.session.report.AbuseReport#reportId
    static void set_field_reportId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "reportId", "field_40813", "reportId", "f_291664_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.session.report.AbuseReport#currentTime
    static jobject get_field_currentTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "createdAt", "field_40814", "currentTime", "f_290309_"), "Ljava/time/Instant;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.session.report.AbuseReport#currentTime
    static void set_field_currentTime(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "createdAt", "field_40814", "currentTime", "f_290309_"), "Ljava/time/Instant;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.session.report.AbuseReport#reportedPlayerUuid
    static jobject get_field_reportedPlayerUuid(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "reportedProfileId", "field_40815", "reportedPlayerUuid", "f_291383_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.session.report.AbuseReport#reportedPlayerUuid
    static void set_field_reportedPlayerUuid(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "reportedProfileId", "field_40815", "reportedPlayerUuid", "f_291383_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.session.report.AbuseReport#opinionComments
    static jobject get_field_opinionComments(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "comments", "field_40817", "opinionComments", "f_291425_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.session.report.AbuseReport#opinionComments
    static void set_field_opinionComments(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "comments", "field_40817", "opinionComments", "f_291425_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.session.report.AbuseReport#reason
    static jobject get_field_reason(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "reason", "field_40818", "reason", "f_290886_"), "Lgam;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.session.report.AbuseReport#reason
    static void set_field_reason(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "reason", "field_40818", "reason", "f_290886_"), "Lgam;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.session.report.AbuseReport#attested
    static jboolean get_field_attested(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "attested", "field_52305", "attested", "f_337260_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.session.report.AbuseReport#attested
    static void set_field_attested(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "attested", "field_52305", "attested", "f_337260_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_playerUuidEquals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isReportedPlayer", "method_46549", "playerUuidEquals", "m_294363_"), "(Ljava/util/UUID;)Z");
    }

    static jboolean playerUuidEquals(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_playerUuidEquals();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "copy", "method_46547", "copy", "m_292702_"), "()Lgak;");
    }

    static jobject copy(const jobject& obj) {
                
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createReportScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createScreen", "method_53596", "createReportScreen", "m_293205_"), "(Lfod;Lgao;)Lfod;");
    }

    static jobject createReportScreen(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createReportScreen();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SESSION_REPORT_ABUSEREPORT_HPP