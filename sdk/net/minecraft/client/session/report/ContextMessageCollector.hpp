// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SESSION_REPORT_CONTEXTMESSAGECOLLECTOR_HPP
#define NET_MINECRAFT_CLIENT_SESSION_REPORT_CONTEXTMESSAGECOLLECTOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.session.report.ContextMessageCollector
 * Remapped: gai
 */
namespace ContextMessageCollector {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gai", "net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder", "net/minecraft/class_7757", "net/minecraft/client/session/report/ContextMessageCollector", "net/minecraft/src/C_243586_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.client.session.report.ContextMessageCollector#leadingContextMessageCount
    static jint get_field_leadingContextMessageCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "leadingCount", "field_40498", "leadingContextMessageCount", "f_244017_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.session.report.ContextMessageCollector#leadingContextMessageCount
    static void set_field_leadingContextMessageCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "leadingCount", "field_40498", "leadingContextMessageCount", "f_244017_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.report.ContextMessageCollector#contextMessages
    static jobject get_field_contextMessages(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "activeCollectors", "field_40499", "contextMessages", "f_244428_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.report.ContextMessageCollector#contextMessages
    static void set_field_contextMessages(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "activeCollectors", "field_40499", "contextMessages", "f_244428_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "collectAllContext", "method_45759", "add", "m_246644_"), "(Lgaa;Lit/unimi/dsi/fastutil/ints/IntCollection;Lgai$b;)V");
    }

    static void add(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "trackContext", "method_45760", "add", "m_246365_"), "(Lxp;)V");
    }

    static void _add(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tryLink() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "acceptContext", "method_45761", "tryLink", "m_246673_"), "(Lxp;)Z");
    }

    static jboolean tryLink(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryLink();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasContextMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isActive", "method_45758", "hasContextMessage", "m_247717_"), "()Z");
    }

    static jboolean hasContextMessage(const jobject& obj) {
                
       const auto methodID = methodID_hasContextMessage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SESSION_REPORT_CONTEXTMESSAGECOLLECTOR_HPP