// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SESSION_BANREASON_HPP
#define NET_MINECRAFT_CLIENT_SESSION_BANREASON_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.session.BanReason
 * Remapped: gag
 */
namespace BanReason {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gag", "net/minecraft/client/multiplayer/chat/report/BanReason", "net/minecraft/class_8186", "net/minecraft/client/session/BanReason", "net/minecraft/src/C_271062_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.session.BanReason#GENERIC_VIOLATION
    [[maybe_unused]] static jobject get_field_GENERIC_VIOLATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GENERIC_VIOLATION", "field_42891", "GENERIC_VIOLATION", "GENERIC_VIOLATION"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#GENERIC_VIOLATION
    [[maybe_unused]] static void set_field_GENERIC_VIOLATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GENERIC_VIOLATION", "field_42891", "GENERIC_VIOLATION", "GENERIC_VIOLATION"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.BanReason#FALSE_REPORTING
    [[maybe_unused]] static jobject get_field_FALSE_REPORTING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FALSE_REPORTING", "field_42892", "FALSE_REPORTING", "FALSE_REPORTING"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#FALSE_REPORTING
    [[maybe_unused]] static void set_field_FALSE_REPORTING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FALSE_REPORTING", "field_42892", "FALSE_REPORTING", "FALSE_REPORTING"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.BanReason#HATE_SPEECH
    [[maybe_unused]] static jobject get_field_HATE_SPEECH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "HATE_SPEECH", "field_42893", "HATE_SPEECH", "HATE_SPEECH"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#HATE_SPEECH
    [[maybe_unused]] static void set_field_HATE_SPEECH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "HATE_SPEECH", "field_42893", "HATE_SPEECH", "HATE_SPEECH"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.BanReason#HATE_TERRORISM_NOTORIOUS_FIGURE
    [[maybe_unused]] static jobject get_field_HATE_TERRORISM_NOTORIOUS_FIGURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HATE_TERRORISM_NOTORIOUS_FIGURE", "field_42894", "HATE_TERRORISM_NOTORIOUS_FIGURE", "HATE_TERRORISM_NOTORIOUS_FIGURE"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#HATE_TERRORISM_NOTORIOUS_FIGURE
    [[maybe_unused]] static void set_field_HATE_TERRORISM_NOTORIOUS_FIGURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HATE_TERRORISM_NOTORIOUS_FIGURE", "field_42894", "HATE_TERRORISM_NOTORIOUS_FIGURE", "HATE_TERRORISM_NOTORIOUS_FIGURE"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.BanReason#HARASSMENT_OR_BULLYING
    [[maybe_unused]] static jobject get_field_HARASSMENT_OR_BULLYING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "HARASSMENT_OR_BULLYING", "field_42895", "HARASSMENT_OR_BULLYING", "HARASSMENT_OR_BULLYING"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#HARASSMENT_OR_BULLYING
    [[maybe_unused]] static void set_field_HARASSMENT_OR_BULLYING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "HARASSMENT_OR_BULLYING", "field_42895", "HARASSMENT_OR_BULLYING", "HARASSMENT_OR_BULLYING"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.BanReason#DEFAMATION_IMPERSONATION_FALSE_INFORMATION
    [[maybe_unused]] static jobject get_field_DEFAMATION_IMPERSONATION_FALSE_INFORMATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DEFAMATION_IMPERSONATION_FALSE_INFORMATION", "field_42896", "DEFAMATION_IMPERSONATION_FALSE_INFORMATION", "DEFAMATION_IMPERSONATION_FALSE_INFORMATION"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#DEFAMATION_IMPERSONATION_FALSE_INFORMATION
    [[maybe_unused]] static void set_field_DEFAMATION_IMPERSONATION_FALSE_INFORMATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DEFAMATION_IMPERSONATION_FALSE_INFORMATION", "field_42896", "DEFAMATION_IMPERSONATION_FALSE_INFORMATION", "DEFAMATION_IMPERSONATION_FALSE_INFORMATION"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.BanReason#DRUGS
    [[maybe_unused]] static jobject get_field_DRUGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DRUGS", "field_42897", "DRUGS", "DRUGS"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#DRUGS
    [[maybe_unused]] static void set_field_DRUGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DRUGS", "field_42897", "DRUGS", "DRUGS"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.BanReason#FRAUD
    [[maybe_unused]] static jobject get_field_FRAUD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "FRAUD", "field_42898", "FRAUD", "FRAUD"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#FRAUD
    [[maybe_unused]] static void set_field_FRAUD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "FRAUD", "field_42898", "FRAUD", "FRAUD"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.BanReason#SPAM_OR_ADVERTISING
    [[maybe_unused]] static jobject get_field_SPAM_OR_ADVERTISING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SPAM_OR_ADVERTISING", "field_42899", "SPAM_OR_ADVERTISING", "SPAM_OR_ADVERTISING"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#SPAM_OR_ADVERTISING
    [[maybe_unused]] static void set_field_SPAM_OR_ADVERTISING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SPAM_OR_ADVERTISING", "field_42899", "SPAM_OR_ADVERTISING", "SPAM_OR_ADVERTISING"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.BanReason#NUDITY_OR_PORNOGRAPHY
    [[maybe_unused]] static jobject get_field_NUDITY_OR_PORNOGRAPHY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "NUDITY_OR_PORNOGRAPHY", "field_42900", "NUDITY_OR_PORNOGRAPHY", "NUDITY_OR_PORNOGRAPHY"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#NUDITY_OR_PORNOGRAPHY
    [[maybe_unused]] static void set_field_NUDITY_OR_PORNOGRAPHY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "NUDITY_OR_PORNOGRAPHY", "field_42900", "NUDITY_OR_PORNOGRAPHY", "NUDITY_OR_PORNOGRAPHY"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.BanReason#SEXUALLY_INAPPROPRIATE
    [[maybe_unused]] static jobject get_field_SEXUALLY_INAPPROPRIATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SEXUALLY_INAPPROPRIATE", "field_42901", "SEXUALLY_INAPPROPRIATE", "SEXUALLY_INAPPROPRIATE"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#SEXUALLY_INAPPROPRIATE
    [[maybe_unused]] static void set_field_SEXUALLY_INAPPROPRIATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SEXUALLY_INAPPROPRIATE", "field_42901", "SEXUALLY_INAPPROPRIATE", "SEXUALLY_INAPPROPRIATE"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.BanReason#EXTREME_VIOLENCE_OR_GORE
    [[maybe_unused]] static jobject get_field_EXTREME_VIOLENCE_OR_GORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "EXTREME_VIOLENCE_OR_GORE", "field_42902", "EXTREME_VIOLENCE_OR_GORE", "EXTREME_VIOLENCE_OR_GORE"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#EXTREME_VIOLENCE_OR_GORE
    [[maybe_unused]] static void set_field_EXTREME_VIOLENCE_OR_GORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "EXTREME_VIOLENCE_OR_GORE", "field_42902", "EXTREME_VIOLENCE_OR_GORE", "EXTREME_VIOLENCE_OR_GORE"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.BanReason#IMMINENT_HARM_TO_PERSON_OR_PROPERTY
    [[maybe_unused]] static jobject get_field_IMMINENT_HARM_TO_PERSON_OR_PROPERTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "IMMINENT_HARM_TO_PERSON_OR_PROPERTY", "field_42903", "IMMINENT_HARM_TO_PERSON_OR_PROPERTY", "IMMINENT_HARM_TO_PERSON_OR_PROPERTY"), "Lgag;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.BanReason#IMMINENT_HARM_TO_PERSON_OR_PROPERTY
    [[maybe_unused]] static void set_field_IMMINENT_HARM_TO_PERSON_OR_PROPERTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "IMMINENT_HARM_TO_PERSON_OR_PROPERTY", "field_42903", "IMMINENT_HARM_TO_PERSON_OR_PROPERTY", "IMMINENT_HARM_TO_PERSON_OR_PROPERTY"), "Lgag;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.BanReason#description
    static jobject get_field_description(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "title", "field_42904", "description", "f_271148_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.BanReason#description
    static void set_field_description(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "title", "field_42904", "description", "f_271148_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lgag;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lgag;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getDescription() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "title", "method_49312", "getDescription", "m_271811_"), "()Lwz;");
    }

    static jobject getDescription(const jobject& obj) {
                
       const auto methodID = methodID_getDescription();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_byId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "byId", "method_49313", "byId", "m_271684_"), "(I)Lgag;");
    }

    static jobject byId(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_byId();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SESSION_BANREASON_HPP