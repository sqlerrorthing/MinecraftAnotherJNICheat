// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SESSION_PROFILEKEYS_HPP
#define NET_MINECRAFT_CLIENT_SESSION_PROFILEKEYS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.session.ProfileKeys
 * Remapped: fzr
 */
namespace ProfileKeys {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fzr", "net/minecraft/client/multiplayer/ProfileKeyPairManager", "net/minecraft/class_7853", "net/minecraft/client/session/ProfileKeys", "net/minecraft/src/C_213402_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.session.ProfileKeys#MISSING
    [[maybe_unused]] static jobject get_field_MISSING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY_KEY_MANAGER", "field_40800", "MISSING", "f_252532_"), "Lfzr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.ProfileKeys#MISSING
    [[maybe_unused]] static void set_field_MISSING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY_KEY_MANAGER", "field_40800", "MISSING", "f_252532_"), "Lfzr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_46532", "create", "m_252915_"), "(Lcom/mojang/authlib/minecraft/UserApiService;Lfhb;Ljava/nio/file/Path;)Lfzr;");
    }

    static jobject create(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_fetchKeyPair() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "prepareKeyPair", "method_46522", "fetchKeyPair", "m_252904_"), "()Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject fetchKeyPair(const jobject& obj) {
                
       const auto methodID = methodID_fetchKeyPair();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isExpired() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "shouldRefreshKeyPair", "method_46523", "isExpired", "m_253130_"), "()Z");
    }

    static jboolean isExpired(const jobject& obj) {
                
       const auto methodID = methodID_isExpired();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SESSION_PROFILEKEYS_HPP