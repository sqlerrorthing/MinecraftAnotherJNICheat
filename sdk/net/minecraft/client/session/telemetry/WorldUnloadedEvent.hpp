// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SESSION_TELEMETRY_WORLDUNLOADEDEVENT_HPP
#define NET_MINECRAFT_CLIENT_SESSION_TELEMETRY_WORLDUNLOADEDEVENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.session.telemetry.WorldUnloadedEvent
 * Remapped: gvy
 */
namespace WorldUnloadedEvent {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gvy", "net/minecraft/client/telemetry/events/WorldUnloadEvent", "net/minecraft/class_7982", "net/minecraft/client/session/telemetry/WorldUnloadedEvent", "net/minecraft/src/C_260398_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.session.telemetry.WorldUnloadedEvent#ABSENT_LAST_TICK
    [[maybe_unused]] static jint get_field_ABSENT_LAST_TICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NOT_TRACKING_TIME", "field_41712", "ABSENT_LAST_TICK", "f_263131_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.WorldUnloadedEvent#ABSENT_LAST_TICK
    [[maybe_unused]] static void set_field_ABSENT_LAST_TICK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NOT_TRACKING_TIME", "field_41712", "ABSENT_LAST_TICK", "f_263131_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.telemetry.WorldUnloadedEvent#startTime
    static jobject get_field_startTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "worldLoadedTime", "field_41521", "startTime", "f_260539_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.WorldUnloadedEvent#startTime
    static void set_field_startTime(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "worldLoadedTime", "field_41521", "startTime", "f_260539_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.telemetry.WorldUnloadedEvent#ticksSinceLoad
    static jlong get_field_ticksSinceLoad(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "totalTicks", "field_41522", "ticksSinceLoad", "f_260639_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.WorldUnloadedEvent#ticksSinceLoad
    static void set_field_ticksSinceLoad(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "totalTicks", "field_41522", "ticksSinceLoad", "f_260639_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.telemetry.WorldUnloadedEvent#lastTick
    static jlong get_field_lastTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "lastGameTime", "field_41523", "lastTick", "f_260583_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.WorldUnloadedEvent#lastTick
    static void set_field_lastTick(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "lastGameTime", "field_41523", "lastTick", "f_260583_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onPlayerInfoReceived", "method_47982", "start", "m_263234_"), "()V");
    }

    static void start(const jobject& obj) {
                
       const auto methodID = methodID_start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setTime", "method_47798", "setTick", "m_260941_"), "(J)V");
    }

    static void setTick(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_setTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSecondsSinceLoad() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getTimeInSecondsSinceLoad", "method_47800", "getSecondsSinceLoad", "m_260990_"), "(Ljava/time/Instant;)I");
    }

    static jint getSecondsSinceLoad(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSecondsSinceLoad();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_send() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "send", "method_47786", "send", "m_261287_"), "(Lgvn;)V");
    }

    static void send(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_send();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SESSION_TELEMETRY_WORLDUNLOADEDEVENT_HPP