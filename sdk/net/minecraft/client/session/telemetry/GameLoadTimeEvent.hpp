// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SESSION_TELEMETRY_GAMELOADTIMEEVENT_HPP
#define NET_MINECRAFT_CLIENT_SESSION_TELEMETRY_GAMELOADTIMEEVENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.session.telemetry.GameLoadTimeEvent
 * Remapped: gvu
 */
namespace GameLoadTimeEvent {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gvu", "net/minecraft/client/telemetry/events/GameLoadTimesEvent", "net/minecraft/class_8561", "net/minecraft/client/session/telemetry/GameLoadTimeEvent", "net/minecraft/src/C_285545_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.session.telemetry.GameLoadTimeEvent#INSTANCE
    [[maybe_unused]] static jobject get_field_INSTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INSTANCE", "field_44842", "INSTANCE", "f_285635_"), "Lgvu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.GameLoadTimeEvent#INSTANCE
    [[maybe_unused]] static void set_field_INSTANCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INSTANCE", "field_44842", "INSTANCE", "f_285635_"), "Lgvu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.session.telemetry.GameLoadTimeEvent#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_44843", "LOGGER", "f_285561_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.GameLoadTimeEvent#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_44843", "LOGGER", "f_285561_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.telemetry.GameLoadTimeEvent#ticker
    static jobject get_field_ticker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "timeSource", "field_44844", "ticker", "f_285636_"), "Lcom/google/common/base/Ticker;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.GameLoadTimeEvent#ticker
    static void set_field_ticker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "timeSource", "field_44844", "ticker", "f_285636_"), "Lcom/google/common/base/Ticker;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.telemetry.GameLoadTimeEvent#stopwatches
    static jobject get_field_stopwatches(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "measurements", "field_44845", "stopwatches", "f_285659_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.GameLoadTimeEvent#stopwatches
    static void set_field_stopwatches(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "measurements", "field_44845", "stopwatches", "f_285659_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.telemetry.GameLoadTimeEvent#bootstrapTime
    static jobject get_field_bootstrapTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "bootstrapTime", "field_44846", "bootstrapTime", "f_285644_"), "Ljava/util/OptionalLong;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.GameLoadTimeEvent#bootstrapTime
    static void set_field_bootstrapTime(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "bootstrapTime", "field_44846", "bootstrapTime", "f_285644_"), "Ljava/util/OptionalLong;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_startTimer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "beginStep", "method_51806", "startTimer", "m_285833_"), "(Lgvq;)V");
    }

    static void startTimer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_startTimer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addTimer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "beginStep", "method_51807", "addTimer", "m_285977_"), "(Lgvq;Lcom/google/common/base/Stopwatch;)V");
    }

    static void addTimer(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addTimer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__addTimer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "beginStep", "method_51808", "addTimer", "m_285937_"), "(Lgvq;Ljava/util/function/Function;)V");
    }

    static void _addTimer(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__addTimer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_stopTimer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "endStep", "method_51812", "stopTimer", "m_285901_"), "(Lgvq;)V");
    }

    static void stopTimer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_stopTimer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_send() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "send", "method_51805", "send", "m_286019_"), "(Lgvn;)V");
    }

    static void send(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_send();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setBootstrapTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBootstrapTime", "method_51803", "setBootstrapTime", "m_286069_"), "(J)V");
    }

    static void setBootstrapTime(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_setBootstrapTime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SESSION_TELEMETRY_GAMELOADTIMEEVENT_HPP