// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_SESSION_TELEMETRY_TELEMETRYEVENTPROPERTY_HPP
#define NET_MINECRAFT_CLIENT_SESSION_TELEMETRY_TELEMETRYEVENTPROPERTY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.session.telemetry.TelemetryEventProperty
 * Remapped: gvq
 */
namespace TelemetryEventProperty {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gvq", "net/minecraft/client/telemetry/TelemetryProperty", "net/minecraft/class_7969", "net/minecraft/client/session/telemetry/TelemetryEventProperty", "net/minecraft/src/C_260411_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.session.telemetry.TelemetryEventProperty#id
    static jobject get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "id", "comp_1171", "id", "f_260687_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.TelemetryEventProperty#id
    static void set_field_id(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "id", "comp_1171", "id", "f_260687_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.telemetry.TelemetryEventProperty#exportKey
    static jobject get_field_exportKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "exportKey", "comp_1172", "exportKey", "f_260588_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.TelemetryEventProperty#exportKey
    static void set_field_exportKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "exportKey", "comp_1172", "exportKey", "f_260588_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.telemetry.TelemetryEventProperty#codec
    static jobject get_field_codec(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "codec", "comp_1173", "codec", "f_260706_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.TelemetryEventProperty#codec
    static void set_field_codec(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "codec", "comp_1173", "codec", "f_260706_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.session.telemetry.TelemetryEventProperty#exporter
    static jobject get_field_exporter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "exporter", "comp_1174", "exporter", "f_260625_"), "Lgvq$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.TelemetryEventProperty#exporter
    static void set_field_exporter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "exporter", "comp_1174", "exporter", "f_260625_"), "Lgvq$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.session.telemetry.TelemetryEventProperty#DATE_TIME_FORMATTER
    [[maybe_unused]] static jobject get_field_DATE_TIME_FORMATTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "TIMESTAMP_FORMATTER", "field_41457", "DATE_TIME_FORMATTER", "f_260684_"), "Ljava/time/format/DateTimeFormatter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.session.telemetry.TelemetryEventProperty#DATE_TIME_FORMATTER
    [[maybe_unused]] static void set_field_DATE_TIME_FORMATTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "TIMESTAMP_FORMATTER", "field_41457", "DATE_TIME_FORMATTER", "f_260684_"), "Ljava/time/format/DateTimeFormatter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#USER_ID
    [[maybe_unused]] static jobject get_field_USER_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "USER_ID", "field_41458", "USER_ID", "f_260659_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#USER_ID
    [[maybe_unused]] static void set_field_USER_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "USER_ID", "field_41458", "USER_ID", "f_260659_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#CLIENT_ID
    [[maybe_unused]] static jobject get_field_CLIENT_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CLIENT_ID", "field_41459", "CLIENT_ID", "f_260475_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#CLIENT_ID
    [[maybe_unused]] static void set_field_CLIENT_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CLIENT_ID", "field_41459", "CLIENT_ID", "f_260475_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#MINECRAFT_SESSION_ID
    [[maybe_unused]] static jobject get_field_MINECRAFT_SESSION_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MINECRAFT_SESSION_ID", "field_41460", "MINECRAFT_SESSION_ID", "f_260530_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#MINECRAFT_SESSION_ID
    [[maybe_unused]] static void set_field_MINECRAFT_SESSION_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MINECRAFT_SESSION_ID", "field_41460", "MINECRAFT_SESSION_ID", "f_260530_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#GAME_VERSION
    [[maybe_unused]] static jobject get_field_GAME_VERSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "GAME_VERSION", "field_41461", "GAME_VERSION", "f_260597_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#GAME_VERSION
    [[maybe_unused]] static void set_field_GAME_VERSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "GAME_VERSION", "field_41461", "GAME_VERSION", "f_260597_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#OPERATING_SYSTEM
    [[maybe_unused]] static jobject get_field_OPERATING_SYSTEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "OPERATING_SYSTEM", "field_41462", "OPERATING_SYSTEM", "f_260441_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#OPERATING_SYSTEM
    [[maybe_unused]] static void set_field_OPERATING_SYSTEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "OPERATING_SYSTEM", "field_41462", "OPERATING_SYSTEM", "f_260441_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#PLATFORM
    [[maybe_unused]] static jobject get_field_PLATFORM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "PLATFORM", "field_41463", "PLATFORM", "f_260586_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#PLATFORM
    [[maybe_unused]] static void set_field_PLATFORM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "PLATFORM", "field_41463", "PLATFORM", "f_260586_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#CLIENT_MODDED
    [[maybe_unused]] static jobject get_field_CLIENT_MODDED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CLIENT_MODDED", "field_41464", "CLIENT_MODDED", "f_260562_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#CLIENT_MODDED
    [[maybe_unused]] static void set_field_CLIENT_MODDED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CLIENT_MODDED", "field_41464", "CLIENT_MODDED", "f_260562_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#LAUNCHER_NAME
    [[maybe_unused]] static jobject get_field_LAUNCHER_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "LAUNCHER_NAME", "field_44839", "LAUNCHER_NAME", "f_285658_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#LAUNCHER_NAME
    [[maybe_unused]] static void set_field_LAUNCHER_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "LAUNCHER_NAME", "field_44839", "LAUNCHER_NAME", "f_285658_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#WORLD_SESSION_ID
    [[maybe_unused]] static jobject get_field_WORLD_SESSION_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "WORLD_SESSION_ID", "field_41465", "WORLD_SESSION_ID", "f_260511_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#WORLD_SESSION_ID
    [[maybe_unused]] static void set_field_WORLD_SESSION_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "WORLD_SESSION_ID", "field_41465", "WORLD_SESSION_ID", "f_260511_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#SERVER_MODDED
    [[maybe_unused]] static jobject get_field_SERVER_MODDED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SERVER_MODDED", "field_41466", "SERVER_MODDED", "f_260499_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#SERVER_MODDED
    [[maybe_unused]] static void set_field_SERVER_MODDED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SERVER_MODDED", "field_41466", "SERVER_MODDED", "f_260499_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#SERVER_TYPE
    [[maybe_unused]] static jobject get_field_SERVER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SERVER_TYPE", "field_41467", "SERVER_TYPE", "f_260635_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#SERVER_TYPE
    [[maybe_unused]] static void set_field_SERVER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SERVER_TYPE", "field_41467", "SERVER_TYPE", "f_260635_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#OPT_IN
    [[maybe_unused]] static jobject get_field_OPT_IN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "OPT_IN", "field_41468", "OPT_IN", "f_260453_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#OPT_IN
    [[maybe_unused]] static void set_field_OPT_IN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "OPT_IN", "field_41468", "OPT_IN", "f_260453_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#EVENT_TIMESTAMP_UTC
    [[maybe_unused]] static jobject get_field_EVENT_TIMESTAMP_UTC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "EVENT_TIMESTAMP_UTC", "field_41469", "EVENT_TIMESTAMP_UTC", "f_260726_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#EVENT_TIMESTAMP_UTC
    [[maybe_unused]] static void set_field_EVENT_TIMESTAMP_UTC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "EVENT_TIMESTAMP_UTC", "field_41469", "EVENT_TIMESTAMP_UTC", "f_260726_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#GAME_MODE
    [[maybe_unused]] static jobject get_field_GAME_MODE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "GAME_MODE", "field_41470", "GAME_MODE", "f_260704_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#GAME_MODE
    [[maybe_unused]] static void set_field_GAME_MODE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "GAME_MODE", "field_41470", "GAME_MODE", "f_260704_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#REALMS_MAP_CONTENT
    [[maybe_unused]] static jobject get_field_REALMS_MAP_CONTENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "REALMS_MAP_CONTENT", "field_44840", "REALMS_MAP_CONTENT", "f_285634_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#REALMS_MAP_CONTENT
    [[maybe_unused]] static void set_field_REALMS_MAP_CONTENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "REALMS_MAP_CONTENT", "field_44840", "REALMS_MAP_CONTENT", "f_285634_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#SECONDS_SINCE_LOAD
    [[maybe_unused]] static jobject get_field_SECONDS_SINCE_LOAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SECONDS_SINCE_LOAD", "field_41471", "SECONDS_SINCE_LOAD", "f_260452_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#SECONDS_SINCE_LOAD
    [[maybe_unused]] static void set_field_SECONDS_SINCE_LOAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SECONDS_SINCE_LOAD", "field_41471", "SECONDS_SINCE_LOAD", "f_260452_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#TICKS_SINCE_LOAD
    [[maybe_unused]] static jobject get_field_TICKS_SINCE_LOAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "TICKS_SINCE_LOAD", "field_41472", "TICKS_SINCE_LOAD", "f_260638_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#TICKS_SINCE_LOAD
    [[maybe_unused]] static void set_field_TICKS_SINCE_LOAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "TICKS_SINCE_LOAD", "field_41472", "TICKS_SINCE_LOAD", "f_260638_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#FRAME_RATE_SAMPLES
    [[maybe_unused]] static jobject get_field_FRAME_RATE_SAMPLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "FRAME_RATE_SAMPLES", "field_41473", "FRAME_RATE_SAMPLES", "f_260557_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#FRAME_RATE_SAMPLES
    [[maybe_unused]] static void set_field_FRAME_RATE_SAMPLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "FRAME_RATE_SAMPLES", "field_41473", "FRAME_RATE_SAMPLES", "f_260557_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#RENDER_TIME_SAMPLES
    [[maybe_unused]] static jobject get_field_RENDER_TIME_SAMPLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "RENDER_TIME_SAMPLES", "field_41474", "RENDER_TIME_SAMPLES", "f_260713_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#RENDER_TIME_SAMPLES
    [[maybe_unused]] static void set_field_RENDER_TIME_SAMPLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "RENDER_TIME_SAMPLES", "field_41474", "RENDER_TIME_SAMPLES", "f_260713_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#USED_MEMORY_SAMPLES
    [[maybe_unused]] static jobject get_field_USED_MEMORY_SAMPLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "USED_MEMORY_SAMPLES", "field_41475", "USED_MEMORY_SAMPLES", "f_260645_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#USED_MEMORY_SAMPLES
    [[maybe_unused]] static void set_field_USED_MEMORY_SAMPLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "USED_MEMORY_SAMPLES", "field_41475", "USED_MEMORY_SAMPLES", "f_260645_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#NUMBER_OF_SAMPLES
    [[maybe_unused]] static jobject get_field_NUMBER_OF_SAMPLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "NUMBER_OF_SAMPLES", "field_41476", "NUMBER_OF_SAMPLES", "f_260649_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#NUMBER_OF_SAMPLES
    [[maybe_unused]] static void set_field_NUMBER_OF_SAMPLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "NUMBER_OF_SAMPLES", "field_41476", "NUMBER_OF_SAMPLES", "f_260649_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#RENDER_DISTANCE
    [[maybe_unused]] static jobject get_field_RENDER_DISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "RENDER_DISTANCE", "field_41477", "RENDER_DISTANCE", "f_260683_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#RENDER_DISTANCE
    [[maybe_unused]] static void set_field_RENDER_DISTANCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "RENDER_DISTANCE", "field_41477", "RENDER_DISTANCE", "f_260683_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#DEDICATED_MEMORY_KB
    [[maybe_unused]] static jobject get_field_DEDICATED_MEMORY_KB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "DEDICATED_MEMORY_KB", "field_41478", "DEDICATED_MEMORY_KB", "f_260700_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#DEDICATED_MEMORY_KB
    [[maybe_unused]] static void set_field_DEDICATED_MEMORY_KB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "DEDICATED_MEMORY_KB", "field_41478", "DEDICATED_MEMORY_KB", "f_260700_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#WORLD_LOAD_TIME_MS
    [[maybe_unused]] static jobject get_field_WORLD_LOAD_TIME_MS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "WORLD_LOAD_TIME_MS", "field_41479", "WORLD_LOAD_TIME_MS", "f_260571_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#WORLD_LOAD_TIME_MS
    [[maybe_unused]] static void set_field_WORLD_LOAD_TIME_MS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "WORLD_LOAD_TIME_MS", "field_41479", "WORLD_LOAD_TIME_MS", "f_260571_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#NEW_WORLD
    [[maybe_unused]] static jobject get_field_NEW_WORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "NEW_WORLD", "field_41480", "NEW_WORLD", "f_260437_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#NEW_WORLD
    [[maybe_unused]] static void set_field_NEW_WORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "NEW_WORLD", "field_41480", "NEW_WORLD", "f_260437_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#LOAD_TIME_TOTAL_TIME_MS
    [[maybe_unused]] static jobject get_field_LOAD_TIME_TOTAL_TIME_MS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "LOAD_TIME_TOTAL_TIME_MS", "field_44841", "LOAD_TIME_TOTAL_TIME_MS", "f_285605_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#LOAD_TIME_TOTAL_TIME_MS
    [[maybe_unused]] static void set_field_LOAD_TIME_TOTAL_TIME_MS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "LOAD_TIME_TOTAL_TIME_MS", "field_44841", "LOAD_TIME_TOTAL_TIME_MS", "f_285605_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#LOAD_TIME_PRE_WINDOW_MS
    [[maybe_unused]] static jobject get_field_LOAD_TIME_PRE_WINDOW_MS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "LOAD_TIME_PRE_WINDOW_MS", "field_44834", "LOAD_TIME_PRE_WINDOW_MS", "f_285649_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#LOAD_TIME_PRE_WINDOW_MS
    [[maybe_unused]] static void set_field_LOAD_TIME_PRE_WINDOW_MS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "LOAD_TIME_PRE_WINDOW_MS", "field_44834", "LOAD_TIME_PRE_WINDOW_MS", "f_285649_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#LOAD_TIME_BOOTSTRAP_MS
    [[maybe_unused]] static jobject get_field_LOAD_TIME_BOOTSTRAP_MS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "LOAD_TIME_BOOTSTRAP_MS", "field_44835", "LOAD_TIME_BOOTSTRAP_MS", "f_285586_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#LOAD_TIME_BOOTSTRAP_MS
    [[maybe_unused]] static void set_field_LOAD_TIME_BOOTSTRAP_MS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "LOAD_TIME_BOOTSTRAP_MS", "field_44835", "LOAD_TIME_BOOTSTRAP_MS", "f_285586_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#LOAD_TIME_LOADING_OVERLAY_MS
    [[maybe_unused]] static jobject get_field_LOAD_TIME_LOADING_OVERLAY_MS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "LOAD_TIME_LOADING_OVERLAY_MS", "field_44836", "LOAD_TIME_LOADING_OVERLAY_MS", "f_285629_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#LOAD_TIME_LOADING_OVERLAY_MS
    [[maybe_unused]] static void set_field_LOAD_TIME_LOADING_OVERLAY_MS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "LOAD_TIME_LOADING_OVERLAY_MS", "field_44836", "LOAD_TIME_LOADING_OVERLAY_MS", "f_285629_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#ADVANCEMENT_ID
    [[maybe_unused]] static jobject get_field_ADVANCEMENT_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "ADVANCEMENT_ID", "field_44837", "ADVANCEMENT_ID", "f_285565_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#ADVANCEMENT_ID
    [[maybe_unused]] static void set_field_ADVANCEMENT_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "ADVANCEMENT_ID", "field_44837", "ADVANCEMENT_ID", "f_285565_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#ADVANCEMENT_GAME_TIME
    [[maybe_unused]] static jobject get_field_ADVANCEMENT_GAME_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "ADVANCEMENT_GAME_TIME", "field_44838", "ADVANCEMENT_GAME_TIME", "f_285625_"), "Lgvq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.session.telemetry.TelemetryEventProperty#ADVANCEMENT_GAME_TIME
    [[maybe_unused]] static void set_field_ADVANCEMENT_GAME_TIME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "ADVANCEMENT_GAME_TIME", "field_44838", "ADVANCEMENT_GAME_TIME", "f_285625_"), "Lgvq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_47751", "of", "m_261147_"), "(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Codec;Lgvq$a;)Lgvq;");
    }

    static jobject of(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_ofBoolean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bool", "method_47750", "ofBoolean", "m_261193_"), "(Ljava/lang/String;Ljava/lang/String;)Lgvq;");
    }

    static jobject ofBoolean(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_ofBoolean();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_ofString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "string", "method_47752", "ofString", "m_261074_"), "(Ljava/lang/String;Ljava/lang/String;)Lgvq;");
    }

    static jobject ofString(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_ofString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_ofInteger() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "integer", "method_47753", "ofInteger", "m_261234_"), "(Ljava/lang/String;Ljava/lang/String;)Lgvq;");
    }

    static jobject ofInteger(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_ofInteger();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_ofLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "makeLong", "method_51798", "ofLong", "m_286063_"), "(Ljava/lang/String;Ljava/lang/String;)Lgvq;");
    }

    static jobject ofLong(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_ofLong();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_ofUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "uuid", "method_47754", "ofUuid", "m_260851_"), "(Ljava/lang/String;Ljava/lang/String;)Lgvq;");
    }

    static jobject ofUuid(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_ofUuid();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_ofTimeMeasurement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "gameLoadMeasurement", "method_51799", "ofTimeMeasurement", "m_285885_"), "(Ljava/lang/String;Ljava/lang/String;)Lgvq;");
    }

    static jobject ofTimeMeasurement(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_ofTimeMeasurement();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_ofLongList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "longSamples", "method_47755", "ofLongList", "m_261255_"), "(Ljava/lang/String;Ljava/lang/String;)Lgvq;");
    }

    static jobject ofLongList(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_ofLongList();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "export", "method_47749", "addTo", "m_261124_"), "(Lgvr;Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;)V");
    }

    static void addTo(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addTo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getTitle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "title", "method_47743", "getTitle", "m_261229_"), "()Lxn;");
    }

    static jobject getTitle(const jobject& obj) {
                
       const auto methodID = methodID_getTitle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__id() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "id", "comp_1171", "id", "f_260687_"), "()Ljava/lang/String;");
    }

    static jobject _id(const jobject& obj) {
                
       const auto methodID = methodID__id();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__exportKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "exportKey", "comp_1172", "exportKey", "f_260588_"), "()Ljava/lang/String;");
    }

    static jobject _exportKey(const jobject& obj) {
                
       const auto methodID = methodID__exportKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__codec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "codec", "comp_1173", "codec", "f_260706_"), "()Lcom/mojang/serialization/Codec;");
    }

    static jobject _codec(const jobject& obj) {
                
       const auto methodID = methodID__codec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__exporter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "exporter", "comp_1174", "exporter", "f_260625_"), "()Lgvq$a;");
    }

    static jobject _exporter(const jobject& obj) {
                
       const auto methodID = methodID__exporter();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_SESSION_TELEMETRY_TELEMETRYEVENTPROPERTY_HPP