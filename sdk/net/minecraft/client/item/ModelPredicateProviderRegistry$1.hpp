// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_ITEM_MODELPREDICATEPROVIDERREGISTRY$1_HPP
#define NET_MINECRAFT_CLIENT_ITEM_MODELPREDICATEPROVIDERREGISTRY$1_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.item.ModelPredicateProviderRegistry$1
 * Remapped: gps$1
 */
namespace ModelPredicateProviderRegistry$1 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gps$1", "net/minecraft/client/renderer/item/ItemProperties$1", "net/minecraft/class_5272$1", "net/minecraft/client/item/ModelPredicateProviderRegistry$1", "net/minecraft/src/C_4463_$C_4464_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.item.ModelPredicateProviderRegistry$1#time
    static jdouble get_field_time(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "rotation", "field_7911", "time", "f_117899_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.item.ModelPredicateProviderRegistry$1#time
    static void set_field_time(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "rotation", "field_7911", "time", "f_117899_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.item.ModelPredicateProviderRegistry$1#step
    static jdouble get_field_step(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "rota", "field_7910", "step", "f_117900_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.item.ModelPredicateProviderRegistry$1#step
    static void set_field_step(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "rota", "field_7910", "step", "f_117900_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.item.ModelPredicateProviderRegistry$1#lastTick
    static jlong get_field_lastTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "lastUpdateTick", "field_7913", "lastTick", "f_117901_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.item.ModelPredicateProviderRegistry$1#lastTick
    static void set_field_lastTick(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "lastUpdateTick", "field_7913", "lastTick", "f_117901_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_unclampedCall() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("unclampedCall", "unclampedCall", "unclampedCall", "unclampedCall", "m_142187_"), "(Lcuq;Lfzf;Lbtn;I)F");
    }

    static jfloat unclampedCall(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_unclampedCall();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "wobble", "method_7736", "getTime", "m_117903_"), "(Ldcw;D)D");
    }

    static jdouble getTime(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_getTime();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_ITEM_MODELPREDICATEPROVIDERREGISTRY$1_HPP