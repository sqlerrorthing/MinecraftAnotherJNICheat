// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_ITEM_COMPASSANGLEPREDICATEPROVIDER_HPP
#define NET_MINECRAFT_CLIENT_ITEM_COMPASSANGLEPREDICATEPROVIDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.item.CompassAnglePredicateProvider
 * Remapped: gpr
 */
namespace CompassAnglePredicateProvider {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gpr", "net/minecraft/client/renderer/item/CompassItemPropertyFunction", "net/minecraft/class_7391", "net/minecraft/client/item/CompassAnglePredicateProvider", "net/minecraft/src/C_213435_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.item.CompassAnglePredicateProvider#field_38798
    [[maybe_unused]] static jint get_field_field_38798() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_ROTATION", "field_38798", "field_38798", "f_234928_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.item.CompassAnglePredicateProvider#field_38798
    [[maybe_unused]] static void set_field_field_38798(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_ROTATION", "field_38798", "field_38798", "f_234928_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.item.CompassAnglePredicateProvider#aimedInterpolator
    static jobject get_field_aimedInterpolator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "wobble", "field_24449", "aimedInterpolator", "f_234930_"), "Lgpr$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.item.CompassAnglePredicateProvider#aimedInterpolator
    static void set_field_aimedInterpolator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "wobble", "field_24449", "aimedInterpolator", "f_234930_"), "Lgpr$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.item.CompassAnglePredicateProvider#aimlessInterpolator
    static jobject get_field_aimlessInterpolator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "wobbleRandom", "field_24450", "aimlessInterpolator", "f_234931_"), "Lgpr$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.item.CompassAnglePredicateProvider#aimlessInterpolator
    static void set_field_aimlessInterpolator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "wobbleRandom", "field_24450", "aimlessInterpolator", "f_234931_"), "Lgpr$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.item.CompassAnglePredicateProvider#compassTarget
    static jobject get_field_compassTarget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "compassTarget", "field_38799", "compassTarget", "f_234929_"), "Lgpr$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.item.CompassAnglePredicateProvider#compassTarget
    static void set_field_compassTarget(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "compassTarget", "field_38799", "compassTarget", "f_234929_"), "Lgpr$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_unclampedCall() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("unclampedCall", "unclampedCall", "unclampedCall", "unclampedCall", "m_142187_"), "(Lcuq;Lfzf;Lbtn;I)F");
    }

    static jfloat unclampedCall(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_unclampedCall();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getCompassRotation", "method_43218", "getAngle", "m_234954_"), "(Lcuq;Lfzf;ILbsr;)F");
    }

    static jfloat getAngle(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_getAngle();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getAimlessAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomlySpinningRotation", "method_43212", "getAimlessAngle", "m_234936_"), "(IJ)F");
    }

    static jfloat getAimlessAngle(const jobject& obj, const jint& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_getAimlessAngle();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getAngleTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRotationTowardsCompassTarget", "method_43214", "getAngleTo", "m_234941_"), "(Lbsr;JLjd;)F");
    }

    static jfloat getAngleTo(const jobject& obj, const jobject& arg0, const jlong& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getAngleTo();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getClientWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryFetchLevelIfMissing", "method_43215", "getClientWorld", "m_234945_"), "(Lbsr;Lfzf;)Lfzf;");
    }

    static jobject getClientWorld(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getClientWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canPointTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isValidCompassTargetPos", "method_43217", "canPointTo", "m_234951_"), "(Lbsr;Ljl;)Z");
    }

    static jboolean canPointTo(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canPointTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getAngleTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAngleFromEntityToPos", "method_43216", "getAngleTo", "m_234948_"), "(Lbsr;Ljd;)D");
    }

    static jdouble _getAngleTo(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__getAngleTo();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBodyYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getWrappedVisualRotationY", "method_43213", "getBodyYaw", "m_234939_"), "(Lbsr;)D");
    }

    static jdouble getBodyYaw(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBodyYaw();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_scatter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hash", "method_32800", "scatter", "m_234934_"), "(I)I");
    }

    static jint scatter(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_scatter();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_ITEM_COMPASSANGLEPREDICATEPROVIDER_HPP