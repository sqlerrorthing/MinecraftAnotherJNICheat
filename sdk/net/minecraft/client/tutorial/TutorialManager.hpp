// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_TUTORIAL_TUTORIALMANAGER_HPP
#define NET_MINECRAFT_CLIENT_TUTORIAL_TUTORIALMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.tutorial.TutorialManager
 * Remapped: gwi
 */
namespace TutorialManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gwi", "net/minecraft/client/tutorial/Tutorial", "net/minecraft/class_1156", "net/minecraft/client/tutorial/TutorialManager", "net/minecraft/src/C_4617_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.tutorial.TutorialManager#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "minecraft", "field_5645", "client", "f_120559_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.tutorial.TutorialManager#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "minecraft", "field_5645", "client", "f_120559_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.tutorial.TutorialManager#currentHandler
    static jobject get_field_currentHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "instance", "field_5646", "currentHandler", "f_120560_"), "Lgwj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.tutorial.TutorialManager#currentHandler
    static void set_field_currentHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "instance", "field_5646", "currentHandler", "f_120560_"), "Lgwj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.tutorial.TutorialManager#entries
    static jobject get_field_entries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "timedToasts", "field_26893", "entries", "f_120561_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.tutorial.TutorialManager#entries
    static void set_field_entries(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "timedToasts", "field_26893", "entries", "f_120561_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.tutorial.TutorialManager#bundleTutorial
    static jobject get_field_bundleTutorial(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "bundleTutorial", "field_28801", "bundleTutorial", "f_175020_"), "Lgwb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.tutorial.TutorialManager#bundleTutorial
    static void set_field_bundleTutorial(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "bundleTutorial", "field_28801", "bundleTutorial", "f_175020_"), "Lgwb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_onMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onInput", "method_4909", "onMovement", "m_120586_"), "(Lgdz;)V");
    }

    static void onMovement(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onUpdateMouse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onMouse", "method_4908", "onUpdateMouse", "m_120565_"), "(DD)V");
    }

    static void onUpdateMouse(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_onUpdateMouse();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onLookAt", "method_4911", "tick", "m_120578_"), "(Lfzf;Lexa;)V");
    }

    static void tick(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onBlockBreaking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onDestroyBlock", "method_4907", "onBlockBreaking", "m_120581_"), "(Lfzf;Ljd;Ldtc;F)V");
    }

    static void onBlockBreaking(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_onBlockBreaking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onInventoryOpened() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onOpenInventory", "method_4912", "onInventoryOpened", "m_120564_"), "()V");
    }

    static void onInventoryOpened(const jobject& obj) {
                
       const auto methodID = methodID_onInventoryOpened();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onSlotUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onGetItem", "method_4906", "onSlotUpdate", "m_120568_"), "(Lcuq;)V");
    }

    static void onSlotUpdate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onSlotUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_destroyHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "stop", "method_4915", "destroyHandler", "m_120594_"), "()V");
    }

    static void destroyHandler(const jobject& obj) {
                
       const auto methodID = methodID_destroyHandler();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "start", "method_4916", "createHandler", "m_120595_"), "()V");
    }

    static void createHandler(const jobject& obj) {
                
       const auto methodID = methodID_createHandler();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addTimedToast", "method_31365", "add", "m_120572_"), "(Lfkx;I)V");
    }

    static void add(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeTimedToast", "method_31364", "remove", "m_120570_"), "(Lfkx;)V");
    }

    static void remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "tick", "method_4917", "tick", "m_120596_"), "()V");
    }

    static void _tick(const jobject& obj) {
                
       const auto methodID = methodID__tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setStep() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setStep", "method_4910", "setStep", "m_120588_"), "(Lgwk;)V");
    }

    static void setStep(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setStep();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getClient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getMinecraft", "method_4914", "getClient", "m_120597_"), "()Lfgo;");
    }

    static jobject getClient(const jobject& obj) {
                
       const auto methodID = methodID_getClient();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInSurvival() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isSurvival", "method_4905", "isInSurvival", "m_175028_"), "()Z");
    }

    static jboolean isInSurvival(const jobject& obj) {
                
       const auto methodID = methodID_isInSurvival();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_keyToText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "key", "method_4913", "keyToText", "m_120592_"), "(Ljava/lang/String;)Lwz;");
    }

    static jobject keyToText(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_keyToText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_onPickupSlotClick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onInventoryAction", "method_33704", "onPickupSlotClick", "m_175024_"), "(Lcuq;Lcuq;Lcqd;)V");
    }

    static void onPickupSlotClick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onPickupSlotClick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_TUTORIAL_TUTORIALMANAGER_HPP