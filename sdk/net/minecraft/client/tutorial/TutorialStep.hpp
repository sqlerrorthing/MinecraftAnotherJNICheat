// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_TUTORIAL_TUTORIALSTEP_HPP
#define NET_MINECRAFT_CLIENT_TUTORIAL_TUTORIALSTEP_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.tutorial.TutorialStep
 * Remapped: gwk
 */
namespace TutorialStep {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gwk", "net/minecraft/client/tutorial/TutorialSteps", "net/minecraft/class_1157", "net/minecraft/client/tutorial/TutorialStep", "net/minecraft/src/C_4621_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.tutorial.TutorialStep#MOVEMENT
    [[maybe_unused]] static jobject get_field_MOVEMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MOVEMENT", "field_5650", "MOVEMENT", "MOVEMENT"), "Lgwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.tutorial.TutorialStep#MOVEMENT
    [[maybe_unused]] static void set_field_MOVEMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MOVEMENT", "field_5650", "MOVEMENT", "MOVEMENT"), "Lgwk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.tutorial.TutorialStep#FIND_TREE
    [[maybe_unused]] static jobject get_field_FIND_TREE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FIND_TREE", "field_5648", "FIND_TREE", "FIND_TREE"), "Lgwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.tutorial.TutorialStep#FIND_TREE
    [[maybe_unused]] static void set_field_FIND_TREE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FIND_TREE", "field_5648", "FIND_TREE", "FIND_TREE"), "Lgwk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.tutorial.TutorialStep#PUNCH_TREE
    [[maybe_unused]] static jobject get_field_PUNCH_TREE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PUNCH_TREE", "field_5649", "PUNCH_TREE", "PUNCH_TREE"), "Lgwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.tutorial.TutorialStep#PUNCH_TREE
    [[maybe_unused]] static void set_field_PUNCH_TREE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PUNCH_TREE", "field_5649", "PUNCH_TREE", "PUNCH_TREE"), "Lgwk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.tutorial.TutorialStep#OPEN_INVENTORY
    [[maybe_unused]] static jobject get_field_OPEN_INVENTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "OPEN_INVENTORY", "field_5652", "OPEN_INVENTORY", "OPEN_INVENTORY"), "Lgwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.tutorial.TutorialStep#OPEN_INVENTORY
    [[maybe_unused]] static void set_field_OPEN_INVENTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "OPEN_INVENTORY", "field_5652", "OPEN_INVENTORY", "OPEN_INVENTORY"), "Lgwk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.tutorial.TutorialStep#CRAFT_PLANKS
    [[maybe_unused]] static jobject get_field_CRAFT_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CRAFT_PLANKS", "field_5655", "CRAFT_PLANKS", "CRAFT_PLANKS"), "Lgwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.tutorial.TutorialStep#CRAFT_PLANKS
    [[maybe_unused]] static void set_field_CRAFT_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CRAFT_PLANKS", "field_5655", "CRAFT_PLANKS", "CRAFT_PLANKS"), "Lgwk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.tutorial.TutorialStep#NONE
    [[maybe_unused]] static jobject get_field_NONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "NONE", "field_5653", "NONE", "NONE"), "Lgwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.tutorial.TutorialStep#NONE
    [[maybe_unused]] static void set_field_NONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "NONE", "field_5653", "NONE", "NONE"), "Lgwk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.tutorial.TutorialStep#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "name", "field_5651", "name", "f_120630_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.tutorial.TutorialStep#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "name", "field_5651", "name", "f_120630_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.tutorial.TutorialStep#handlerFactory
    static jobject get_field_handlerFactory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "constructor", "field_5647", "handlerFactory", "f_120631_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.tutorial.TutorialStep#handlerFactory
    static void set_field_handlerFactory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "constructor", "field_5647", "handlerFactory", "f_120631_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lgwk;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lgwk;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_4918", "createHandler", "m_120640_"), "(Lgwi;)Lgwj;");
    }

    static jobject createHandler(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createHandler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getName", "method_4920", "getName", "m_120639_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_byName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getByName", "method_4919", "byName", "m_120642_"), "(Ljava/lang/String;)Lgwk;");
    }

    static jobject byName(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_byName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_TUTORIAL_TUTORIALSTEP_HPP