// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_FONT_UNIHEXFONT$BITMAPGLYPH_HPP
#define NET_MINECRAFT_CLIENT_FONT_UNIHEXFONT$BITMAPGLYPH_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.font.UnihexFont$BitmapGlyph
 * Remapped: fls$f
 */
namespace UnihexFont$BitmapGlyph {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fls$f", "net/minecraft/client/gui/font/providers/UnihexProvider$LineData", "net/minecraft/class_391$class_8544", "net/minecraft/client/font/UnihexFont$BitmapGlyph", "net/minecraft/src/C_283731_$C_283708_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getPixels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "line", "method_51668", "getPixels", "m_284144_"), "(I)I");
    }

    static jint getPixels(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getPixels();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_bitWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "bitWidth", "comp_1512", "bitWidth", "m_284266_"), "()I");
    }

    static jint bitWidth(const jobject& obj) {
                
       const auto methodID = methodID_bitWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNonemptyColumnBitmask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "mask", "method_51678", "getNonemptyColumnBitmask", "m_284440_"), "()I");
    }

    static jint getNonemptyColumnBitmask(const jobject& obj) {
                
       const auto methodID = methodID_getNonemptyColumnBitmask();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPackedDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "calculateWidth", "method_51679", "getPackedDimensions", "m_284261_"), "()I");
    }

    static jint getPackedDimensions(const jobject& obj) {
                
       const auto methodID = methodID_getPackedDimensions();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_FONT_UNIHEXFONT$BITMAPGLYPH_HPP