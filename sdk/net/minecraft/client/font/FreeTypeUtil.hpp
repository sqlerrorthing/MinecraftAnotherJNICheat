// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_FONT_FREETYPEUTIL_HPP
#define NET_MINECRAFT_CLIENT_FONT_FREETYPEUTIL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.font.FreeTypeUtil
 * Remapped: fln
 */
namespace FreeTypeUtil {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fln", "net/minecraft/client/gui/font/providers/FreeTypeUtil", "net/minecraft/class_9111", "net/minecraft/client/font/FreeTypeUtil", "net/minecraft/src/C_313596_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.font.FreeTypeUtil#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_51484", "LOGGER", "f_317036_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.font.FreeTypeUtil#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_51484", "LOGGER", "f_317036_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.font.FreeTypeUtil#LOCK
    [[maybe_unused]] static jobject get_field_LOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LIBRARY_LOCK", "field_51483", "LOCK", "f_314736_"), "Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.font.FreeTypeUtil#LOCK
    [[maybe_unused]] static void set_field_LOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LIBRARY_LOCK", "field_51483", "LOCK", "f_314736_"), "Ljava/lang/Object;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.font.FreeTypeUtil#freeType
    [[maybe_unused]] static jlong get_field_freeType() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "library", "field_48394", "freeType", "f_316971_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.font.FreeTypeUtil#freeType
    [[maybe_unused]] static void set_field_freeType(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "library", "field_48394", "freeType", "f_316971_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getLibrary", "method_56143", "initialize", "m_319232_"), "()J");
    }

    static jlong initialize() {
       const auto clazz = self();
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID);
    };
    
    static jmethodID methodID_checkFatalError() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "assertError", "method_59837", "checkFatalError", "m_322856_"), "(ILjava/lang/String;)V");
    }

    static void checkFatalError(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_checkFatalError();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_checkError() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "checkError", "method_56145", "checkError", "m_321328_"), "(ILjava/lang/String;)Z");
    }

    static jboolean checkError(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_checkError();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getErrorMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "describeError", "method_56144", "getErrorMessage", "m_323623_"), "(I)Ljava/lang/String;");
    }

    static jobject getErrorMessage(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getErrorMessage();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setVector", "method_56147", "set", "m_320720_"), "(Lorg/lwjgl/util/freetype/FT_Vector;FF)Lorg/lwjgl/util/freetype/FT_Vector;");
    }

    static jobject set(const jobject& arg0, const jfloat& arg1, const jfloat& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_set();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "x", "method_56146", "getX", "m_320022_"), "(Lorg/lwjgl/util/freetype/FT_Vector;)F");
    }

    static jfloat getX(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getX();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_release() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "destroy", "method_56148", "release", "m_319347_"), "()V");
    }

    static void release() {
       const auto clazz = self();
       const auto methodID = methodID_release();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_FONT_FREETYPEUTIL_HPP