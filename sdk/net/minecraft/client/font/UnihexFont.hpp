// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_FONT_UNIHEXFONT_HPP
#define NET_MINECRAFT_CLIENT_FONT_UNIHEXFONT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.font.UnihexFont
 * Remapped: fls
 */
namespace UnihexFont {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fls", "net/minecraft/client/gui/font/providers/UnihexProvider", "net/minecraft/class_391", "net/minecraft/client/font/UnihexFont", "net/minecraft/src/C_283731_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.client.font.UnihexFont#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_2303", "LOGGER", "f_283764_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.font.UnihexFont#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_2303", "LOGGER", "f_283764_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.font.UnihexFont#field_44764
    [[maybe_unused]] static jint get_field_field_44764() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "GLYPH_HEIGHT", "field_44764", "field_44764", "f_283936_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.font.UnihexFont#field_44764
    [[maybe_unused]] static void set_field_field_44764(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "GLYPH_HEIGHT", "field_44764", "field_44764", "f_283936_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.font.UnihexFont#field_44765
    [[maybe_unused]] static jint get_field_field_44765() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DIGITS_PER_BYTE", "field_44765", "field_44765", "f_283802_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.font.UnihexFont#field_44765
    [[maybe_unused]] static void set_field_field_44765(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DIGITS_PER_BYTE", "field_44765", "field_44765", "f_283802_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.font.UnihexFont#field_44766
    [[maybe_unused]] static jint get_field_field_44766() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DIGITS_FOR_WIDTH_8", "field_44766", "field_44766", "f_283803_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.font.UnihexFont#field_44766
    [[maybe_unused]] static void set_field_field_44766(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DIGITS_FOR_WIDTH_8", "field_44766", "field_44766", "f_283803_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.font.UnihexFont#field_44767
    [[maybe_unused]] static jint get_field_field_44767() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DIGITS_FOR_WIDTH_16", "field_44767", "field_44767", "f_283929_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.font.UnihexFont#field_44767
    [[maybe_unused]] static void set_field_field_44767(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DIGITS_FOR_WIDTH_16", "field_44767", "field_44767", "f_283929_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.font.UnihexFont#field_44768
    [[maybe_unused]] static jint get_field_field_44768() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DIGITS_FOR_WIDTH_24", "field_44768", "field_44768", "f_283800_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.font.UnihexFont#field_44768
    [[maybe_unused]] static void set_field_field_44768(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DIGITS_FOR_WIDTH_24", "field_44768", "field_44768", "f_283800_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.font.UnihexFont#field_44769
    [[maybe_unused]] static jint get_field_field_44769() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DIGITS_FOR_WIDTH_32", "field_44769", "field_44769", "f_283867_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.font.UnihexFont#field_44769
    [[maybe_unused]] static void set_field_field_44769(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DIGITS_FOR_WIDTH_32", "field_44769", "field_44769", "f_283867_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.font.UnihexFont#glyphs
    static jobject get_field_glyphs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "glyphs", "field_44770", "glyphs", "f_283901_"), "Lfla;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.font.UnihexFont#glyphs
    static void set_field_glyphs(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "glyphs", "field_44770", "glyphs", "f_283901_"), "Lfla;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getGlyph() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getGlyph", "method_2040", "getGlyph", "m_214022_"), "(I)Lezl;");
    }

    static jobject getGlyph(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getGlyph();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getProvidedGlyphs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSupportedGlyphs", "method_27442", "getProvidedGlyphs", "m_6990_"), "()Lit/unimi/dsi/fastutil/ints/IntSet;");
    }

    static jobject getProvidedGlyphs(const jobject& obj) {
                
       const auto methodID = methodID_getProvidedGlyphs();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addRowPixels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "unpackBitsToBytes", "method_51655", "addRowPixels", "m_284420_"), "(Ljava/nio/IntBuffer;III)V");
    }

    static void addRowPixels(const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_addRowPixels();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_addGlyphPixels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "unpackBitsToBytes", "method_51656", "addGlyphPixels", "m_284448_"), "(Ljava/nio/IntBuffer;Lfls$f;II)V");
    }

    static void addGlyphPixels(const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_addGlyphPixels();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_readLines() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readFromStream", "method_51653", "readLines", "m_284537_"), "(Ljava/io/InputStream;Lfls$h;)V");
    }

    static void readLines(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_readLines();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getHexDigitValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "decodeHex", "method_51652", "getHexDigitValue", "m_284323_"), "(ILit/unimi/dsi/fastutil/bytes/ByteList;I)I");
    }

    static jint getHexDigitValue(const jint& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getHexDigitValue();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__getHexDigitValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "decodeHex", "method_51651", "getHexDigitValue", "m_284556_"), "(IB)I");
    }

    static jint _getHexDigitValue(const jint& arg0, const jbyte& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__getHexDigitValue();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readUntilDelimiter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "copyUntil", "method_51654", "readUntilDelimiter", "m_284179_"), "(Ljava/io/InputStream;Lit/unimi/dsi/fastutil/bytes/ByteList;I)Z");
    }

    static jboolean readUntilDelimiter(const jobject& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_readUntilDelimiter();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_FONT_UNIHEXFONT_HPP