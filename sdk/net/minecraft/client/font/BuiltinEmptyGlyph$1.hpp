// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_FONT_BUILTINEMPTYGLYPH$1_HPP
#define NET_MINECRAFT_CLIENT_FONT_BUILTINEMPTYGLYPH$1_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.font.BuiltinEmptyGlyph$1
 * Remapped: flj$1
 */
namespace BuiltinEmptyGlyph$1 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("flj$1", "net/minecraft/client/gui/font/glyphs/SpecialGlyphs$1", "net/minecraft/class_7191$1", "net/minecraft/client/font/BuiltinEmptyGlyph$1", "net/minecraft/src/C_213376_$C_213377_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPixelWidth", "method_2031", "getWidth", "m_213962_"), "()I");
    }

    static jint getWidth(const jobject& obj) {
                
       const auto methodID = methodID_getWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getPixelHeight", "method_2032", "getHeight", "m_213961_"), "()I");
    }

    static jint getHeight(const jobject& obj) {
                
       const auto methodID = methodID_getHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOversample() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getOversample", "method_2035", "getOversample", "m_213963_"), "()F");
    }

    static jfloat getOversample(const jobject& obj) {
                
       const auto methodID = methodID_getOversample();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_upload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "upload", "method_2030", "upload", "m_213958_"), "(II)V");
    }

    static void upload(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_upload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_hasColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isColored", "method_2033", "hasColor", "m_213965_"), "()Z");
    }

    static jboolean hasColor(const jobject& obj) {
                
       const auto methodID = methodID_hasColor();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_FONT_BUILTINEMPTYGLYPH$1_HPP