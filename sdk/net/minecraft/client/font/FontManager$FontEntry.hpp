// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_FONT_FONTMANAGER$FONTENTRY_HPP
#define NET_MINECRAFT_CLIENT_FONT_FONTMANAGER$FONTENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.font.FontManager$FontEntry
 * Remapped: flb$e
 */
namespace FontManager$FontEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("flb$e", "net/minecraft/client/gui/font/FontManager$UnresolvedBuilderBundle", "net/minecraft/class_378$class_8537", "net/minecraft/client/font/FontManager$FontEntry", "net/minecraft/src/C_3509_$C_283701_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.client.font.FontManager$FontEntry#fontId
    static jobject get_field_fontId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "fontId", "comp_1498", "fontId", "f_283760_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.font.FontManager$FontEntry#fontId
    static void set_field_fontId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "fontId", "comp_1498", "fontId", "f_283760_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.font.FontManager$FontEntry#builders
    static jobject get_field_builders(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "builders", "comp_1499", "builders", "f_283826_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.font.FontManager$FontEntry#builders
    static void set_field_builders(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "builders", "comp_1499", "builders", "f_283826_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.font.FontManager$FontEntry#dependencies
    static jobject get_field_dependencies(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "dependencies", "comp_1500", "dependencies", "f_283897_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.font.FontManager$FontEntry#dependencies
    static void set_field_dependencies(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "dependencies", "comp_1500", "dependencies", "f_283897_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addReferenceBuilder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_51631", "addReferenceBuilder", "m_284288_"), "(Lflb$a;Lflc$a;Lflo$c;)V");
    }

    static void addReferenceBuilder(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_addReferenceBuilder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addBuilder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_51632", "addBuilder", "m_286066_"), "(Lflb$a;Lflc$a;Ljava/util/concurrent/CompletableFuture;)V");
    }

    static void addBuilder(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_addBuilder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getImmediateProviders() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "listBuilders", "method_51635", "getImmediateProviders", "m_284148_"), "()Ljava/util/stream/Stream;");
    }

    static jobject getImmediateProviders(const jobject& obj) {
                
       const auto methodID = methodID_getImmediateProviders();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRequiredFontProviders() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resolve", "method_51634", "getRequiredFontProviders", "m_284241_"), "(Ljava/util/function/Function;)Ljava/util/Optional;");
    }

    static jobject getRequiredFontProviders(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getRequiredFontProviders();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_forDependencies() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitRequiredDependencies", "method_51478", "forDependencies", "m_284213_"), "(Ljava/util/function/Consumer;)V");
    }

    static void forDependencies(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forDependencies();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_forOptionalDependencies() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "visitOptionalDependencies", "method_51480", "forOptionalDependencies", "m_284346_"), "(Ljava/util/function/Consumer;)V");
    }

    static void forOptionalDependencies(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forOptionalDependencies();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__fontId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fontId", "comp_1498", "fontId", "f_283760_"), "()Lakr;");
    }

    static jobject _fontId(const jobject& obj) {
                
       const auto methodID = methodID__fontId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__builders() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "builders", "comp_1499", "builders", "f_283826_"), "()Ljava/util/List;");
    }

    static jobject _builders(const jobject& obj) {
                
       const auto methodID = methodID__builders();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__dependencies() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "dependencies", "comp_1500", "dependencies", "f_283897_"), "()Ljava/util/Set;");
    }

    static jobject _dependencies(const jobject& obj) {
                
       const auto methodID = methodID__dependencies();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_FONT_FONTMANAGER$FONTENTRY_HPP