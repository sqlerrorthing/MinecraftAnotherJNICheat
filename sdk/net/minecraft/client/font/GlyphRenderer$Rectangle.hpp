// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_FONT_GLYPHRENDERER$RECTANGLE_HPP
#define NET_MINECRAFT_CLIENT_FONT_GLYPHRENDERER$RECTANGLE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.font.GlyphRenderer$Rectangle
 * Remapped: flh$a
 */
namespace GlyphRenderer$Rectangle {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("flh$a", "net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect", "net/minecraft/class_382$class_328", "net/minecraft/client/font/GlyphRenderer$Rectangle", "net/minecraft/src/C_3516_$C_3517_"));
        }
        return cachedClass;
    };

    // getter for protected field net.minecraft.client.font.GlyphRenderer$Rectangle#minX
    static jfloat get_field_minX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "x0", "field_2008", "minX", "f_95237_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.font.GlyphRenderer$Rectangle#minX
    static void set_field_minX(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "x0", "field_2008", "minX", "f_95237_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.font.GlyphRenderer$Rectangle#minY
    static jfloat get_field_minY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "y0", "field_2007", "minY", "f_95238_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.font.GlyphRenderer$Rectangle#minY
    static void set_field_minY(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "y0", "field_2007", "minY", "f_95238_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.font.GlyphRenderer$Rectangle#maxX
    static jfloat get_field_maxX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "x1", "field_2006", "maxX", "f_95239_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.font.GlyphRenderer$Rectangle#maxX
    static void set_field_maxX(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "x1", "field_2006", "maxX", "f_95239_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.font.GlyphRenderer$Rectangle#maxY
    static jfloat get_field_maxY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "y1", "field_2005", "maxY", "f_95240_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.font.GlyphRenderer$Rectangle#maxY
    static void set_field_maxY(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "y1", "field_2005", "maxY", "f_95240_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.font.GlyphRenderer$Rectangle#zIndex
    static jfloat get_field_zIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "depth", "field_20911", "zIndex", "f_95241_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.font.GlyphRenderer$Rectangle#zIndex
    static void set_field_zIndex(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "depth", "field_20911", "zIndex", "f_95241_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.font.GlyphRenderer$Rectangle#red
    static jfloat get_field_red(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "r", "field_2004", "red", "f_95242_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.font.GlyphRenderer$Rectangle#red
    static void set_field_red(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "r", "field_2004", "red", "f_95242_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.font.GlyphRenderer$Rectangle#green
    static jfloat get_field_green(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "g", "field_2003", "green", "f_95243_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.font.GlyphRenderer$Rectangle#green
    static void set_field_green(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "g", "field_2003", "green", "f_95243_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.font.GlyphRenderer$Rectangle#blue
    static jfloat get_field_blue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "b", "field_2010", "blue", "f_95244_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.font.GlyphRenderer$Rectangle#blue
    static void set_field_blue(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "b", "field_2010", "blue", "f_95244_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.font.GlyphRenderer$Rectangle#alpha
    static jfloat get_field_alpha(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "a", "field_2009", "alpha", "f_95245_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.font.GlyphRenderer$Rectangle#alpha
    static void set_field_alpha(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "a", "field_2009", "alpha", "f_95245_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

};

#endif // NET_MINECRAFT_CLIENT_FONT_GLYPHRENDERER$RECTANGLE_HPP