// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_FONT_TRUETYPEFONT$TTFGLYPH_HPP
#define NET_MINECRAFT_CLIENT_FONT_TRUETYPEFONT$TTFGLYPH_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.font.TrueTypeFont$TtfGlyph
 * Remapped: ezp$a
 */
namespace TrueTypeFont$TtfGlyph {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ezp$a", "com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph", "net/minecraft/class_395$class_397", "net/minecraft/client/font/TrueTypeFont$TtfGlyph", "net/minecraft/src/C_3101_$C_3103_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.client.font.TrueTypeFont$TtfGlyph#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "width", "field_2338", "width", "f_83874_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.font.TrueTypeFont$TtfGlyph#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "width", "field_2338", "width", "f_83874_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.font.TrueTypeFont$TtfGlyph#height
    static jint get_field_height(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "height", "field_2337", "height", "f_83875_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.font.TrueTypeFont$TtfGlyph#height
    static void set_field_height(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "height", "field_2337", "height", "f_83875_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.font.TrueTypeFont$TtfGlyph#bearingX
    static jfloat get_field_bearingX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "bearingX", "field_2334", "bearingX", "f_83876_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.font.TrueTypeFont$TtfGlyph#bearingX
    static void set_field_bearingX(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "bearingX", "field_2334", "bearingX", "f_83876_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.font.TrueTypeFont$TtfGlyph#ascent
    static jfloat get_field_ascent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "bearingY", "field_2333", "ascent", "f_83877_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.font.TrueTypeFont$TtfGlyph#ascent
    static void set_field_ascent(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "bearingY", "field_2333", "ascent", "f_83877_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.font.TrueTypeFont$TtfGlyph#advance
    static jfloat get_field_advance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "advance", "field_2332", "advance", "f_83878_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.font.TrueTypeFont$TtfGlyph#advance
    static void set_field_advance(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "advance", "field_2332", "advance", "f_83878_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.font.TrueTypeFont$TtfGlyph#glyphIndex
    static jint get_field_glyphIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "index", "field_2335", "glyphIndex", "f_83879_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.font.TrueTypeFont$TtfGlyph#glyphIndex
    static void set_field_glyphIndex(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "index", "field_2335", "glyphIndex", "f_83879_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getAdvance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getAdvance", "getAdvance", "", "", "m_7403_"), "()F");
    }

    static jfloat getAdvance(const jobject& obj) {
                
       const auto methodID = methodID_getAdvance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_bake() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bake", "bake", "bake", "bake", "m_213604_"), "(Ljava/util/function/Function;)Lflh;");
    }

    static jobject bake(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_bake();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_FONT_TRUETYPEFONT$TTFGLYPH_HPP