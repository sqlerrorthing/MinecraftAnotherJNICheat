// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_TEXTURE_SPRITECONTENTS$ANIMATION_HPP
#define NET_MINECRAFT_CLIENT_TEXTURE_SPRITECONTENTS$ANIMATION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.texture.SpriteContents$Animation
 * Remapped: gqf$a
 */
namespace SpriteContents$Animation {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gqf$a", "net/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture", "net/minecraft/class_7764$class_5790", "net/minecraft/client/texture/SpriteContents$Animation", "net/minecraft/src/C_243582_$C_243458_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.client.texture.SpriteContents$Animation#frames
    static jobject get_field_frames(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "frames", "field_28472", "frames", "f_243714_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.texture.SpriteContents$Animation#frames
    static void set_field_frames(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "frames", "field_28472", "frames", "f_243714_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.texture.SpriteContents$Animation#frameCount
    static jint get_field_frameCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "frameRowSize", "field_28473", "frameCount", "f_244229_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.SpriteContents$Animation#frameCount
    static void set_field_frameCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "frameRowSize", "field_28473", "frameCount", "f_244229_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.texture.SpriteContents$Animation#interpolation
    static jboolean get_field_interpolation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "interpolateFrames", "field_40542", "interpolation", "f_244317_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.SpriteContents$Animation#interpolation
    static void set_field_interpolation(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "interpolateFrames", "field_40542", "interpolation", "f_244317_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getFrameX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getFrameX", "method_33446", "getFrameX", "m_245080_"), "(I)I");
    }

    static jint getFrameX(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getFrameX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFrameY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getFrameY", "method_33451", "getFrameY", "m_246436_"), "(I)I");
    }

    static jint getFrameY(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getFrameY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_upload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "uploadFrame", "method_33455", "upload", "m_245074_"), "(III)V");
    }

    static void upload(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_upload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createAnimator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTicker", "method_45823", "createAnimator", "m_246690_"), "()Lgqh;");
    }

    static jobject createAnimator(const jobject& obj) {
                
       const auto methodID = methodID_createAnimator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__upload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "uploadFirstFrame", "method_33445", "upload", "m_247129_"), "(II)V");
    }

    static void _upload(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID__upload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getDistinctFrameCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getUniqueFrames", "method_33450", "getDistinctFrameCount", "m_246130_"), "()Ljava/util/stream/IntStream;");
    }

    static jobject getDistinctFrameCount(const jobject& obj) {
                
       const auto methodID = methodID_getDistinctFrameCount();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_TEXTURE_SPRITECONTENTS$ANIMATION_HPP