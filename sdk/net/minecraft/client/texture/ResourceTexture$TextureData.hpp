// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_TEXTURE_RESOURCETEXTURE$TEXTUREDATA_HPP
#define NET_MINECRAFT_CLIENT_TEXTURE_RESOURCETEXTURE$TEXTUREDATA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.texture.ResourceTexture$TextureData
 * Remapped: gqe$a
 */
namespace ResourceTexture$TextureData {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gqe$a", "net/minecraft/client/renderer/texture/SimpleTexture$TextureImage", "net/minecraft/class_1049$class_4006", "net/minecraft/client/texture/ResourceTexture$TextureData", "net/minecraft/src/C_4476_$C_4477_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.texture.ResourceTexture$TextureData#metadata
    static jobject get_field_metadata(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "metadata", "field_17895", "metadata", "f_118146_"), "Lgsi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.ResourceTexture$TextureData#metadata
    static void set_field_metadata(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "metadata", "field_17895", "metadata", "f_118146_"), "Lgsi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.texture.ResourceTexture$TextureData#image
    static jobject get_field_image(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "image", "field_17896", "image", "f_118147_"), "Lfaj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.ResourceTexture$TextureData#image
    static void set_field_image(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "image", "field_17896", "image", "f_118147_"), "Lfaj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.texture.ResourceTexture$TextureData#exception
    static jobject get_field_exception(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "exception", "field_17897", "exception", "f_118148_"), "Ljava/io/IOException;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.ResourceTexture$TextureData#exception
    static void set_field_exception(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "exception", "field_17897", "exception", "f_118148_"), "Ljava/io/IOException;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_18156", "load", "m_118155_"), "(Laue;Lakr;)Lgqe$a;");
    }

    static jobject load(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_load();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getMetadata() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getTextureMetadata", "method_18155", "getMetadata", "m_118154_"), "()Lgsi;");
    }

    static jobject getMetadata(const jobject& obj) {
                
       const auto methodID = methodID_getMetadata();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getImage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getImage", "method_18157", "getImage", "m_118158_"), "()Lfaj;");
    }

    static jobject getImage(const jobject& obj) {
                
       const auto methodID = methodID_getImage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_checkException() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "throwIfError", "method_18158", "checkException", "m_118159_"), "()V");
    }

    static void checkException(const jobject& obj) {
                
       const auto methodID = methodID_checkException();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_TEXTURE_RESOURCETEXTURE$TEXTUREDATA_HPP