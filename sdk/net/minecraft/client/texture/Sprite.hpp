// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_TEXTURE_SPRITE_HPP
#define NET_MINECRAFT_CLIENT_TEXTURE_SPRITE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.texture.Sprite
 * Remapped: gql
 */
namespace Sprite {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gql", "net/minecraft/client/renderer/texture/TextureAtlasSprite", "net/minecraft/class_1058", "net/minecraft/client/texture/Sprite", "net/minecraft/src/C_4486_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.texture.Sprite#atlasId
    static jobject get_field_atlasId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "atlasLocation", "field_40552", "atlasId", "f_244141_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.Sprite#atlasId
    static void set_field_atlasId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "atlasLocation", "field_40552", "atlasId", "f_244141_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.texture.Sprite#contents
    static jobject get_field_contents(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "contents", "field_40553", "contents", "f_244165_"), "Lgqf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.Sprite#contents
    static void set_field_contents(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "contents", "field_40553", "contents", "f_244165_"), "Lgqf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.texture.Sprite#x
    static jint get_field_x(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "x", "field_5258", "x", "f_118349_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.texture.Sprite#x
    static void set_field_x(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "x", "field_5258", "x", "f_118349_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.texture.Sprite#y
    static jint get_field_y(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "y", "field_5256", "y", "f_118350_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.texture.Sprite#y
    static void set_field_y(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "y", "field_5256", "y", "f_118350_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.texture.Sprite#minU
    static jfloat get_field_minU(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "u0", "field_5270", "minU", "f_118351_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.Sprite#minU
    static void set_field_minU(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "u0", "field_5270", "minU", "f_118351_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.texture.Sprite#maxU
    static jfloat get_field_maxU(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "u1", "field_5269", "maxU", "f_118352_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.Sprite#maxU
    static void set_field_maxU(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "u1", "field_5269", "maxU", "f_118352_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.texture.Sprite#minV
    static jfloat get_field_minV(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "v0", "field_5268", "minV", "f_118353_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.Sprite#minV
    static void set_field_minV(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "v0", "field_5268", "minV", "f_118353_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.texture.Sprite#maxV
    static jfloat get_field_maxV(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "v1", "field_5267", "maxV", "f_118354_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.Sprite#maxV
    static void set_field_maxV(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "v1", "field_5267", "maxV", "f_118354_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_getX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getX", "method_35806", "getX", "m_174743_"), "()I");
    }

    static jint getX(const jobject& obj) {
                
       const auto methodID = methodID_getX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getY", "method_35807", "getY", "m_174744_"), "()I");
    }

    static jint getY(const jobject& obj) {
                
       const auto methodID = methodID_getY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMinU() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getU0", "method_4594", "getMinU", "m_118409_"), "()F");
    }

    static jfloat getMinU(const jobject& obj) {
                
       const auto methodID = methodID_getMinU();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxU() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getU1", "method_4577", "getMaxU", "m_118410_"), "()F");
    }

    static jfloat getMaxU(const jobject& obj) {
                
       const auto methodID = methodID_getMaxU();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getContents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "contents", "method_45851", "getContents", "m_245424_"), "()Lgqf;");
    }

    static jobject getContents(const jobject& obj) {
                
       const auto methodID = methodID_getContents();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createAnimation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "createTicker", "method_33437", "createAnimation", "m_247406_"), "()Lgql$a;");
    }

    static jobject createAnimation(const jobject& obj) {
                
       const auto methodID = methodID_createAnimation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFrameU() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getU", "method_4580", "getFrameU", "m_118367_"), "(F)F");
    }

    static jfloat getFrameU(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getFrameU();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFrameFromU() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getUOffset", "method_35804", "getFrameFromU", "m_174727_"), "(F)F");
    }

    static jfloat getFrameFromU(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getFrameFromU();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMinV() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getV0", "method_4593", "getMinV", "m_118411_"), "()F");
    }

    static jfloat getMinV(const jobject& obj) {
                
       const auto methodID = methodID_getMinV();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxV() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getV1", "method_4575", "getMaxV", "m_118412_"), "()F");
    }

    static jfloat getMaxV(const jobject& obj) {
                
       const auto methodID = methodID_getMaxV();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFrameV() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getV", "method_4570", "getFrameV", "m_118393_"), "(F)F");
    }

    static jfloat getFrameV(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getFrameV();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFrameFromV() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getVOffset", "method_35805", "getFrameFromV", "m_174741_"), "(F)F");
    }

    static jfloat getFrameFromV(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getFrameFromV();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAtlasId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "atlasLocation", "method_45852", "getAtlasId", "m_247685_"), "()Lakr;");
    }

    static jobject getAtlasId(const jobject& obj) {
                
       const auto methodID = methodID_getAtlasId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_upload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "uploadFirstFrame", "method_4584", "upload", "m_118416_"), "()V");
    }

    static void upload(const jobject& obj) {
                
       const auto methodID = methodID_upload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFrameDeltaFactor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "atlasSize", "method_23841", "getFrameDeltaFactor", "m_118366_"), "()F");
    }

    static jfloat getFrameDeltaFactor(const jobject& obj) {
                
       const auto methodID = methodID_getFrameDeltaFactor();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAnimationFrameDelta() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "uvShrinkRatio", "method_23842", "getAnimationFrameDelta", "m_118417_"), "()F");
    }

    static jfloat getAnimationFrameDelta(const jobject& obj) {
                
       const auto methodID = methodID_getAnimationFrameDelta();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTextureSpecificVertexConsumer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "wrap", "method_24108", "getTextureSpecificVertexConsumer", "m_118381_"), "(Lfbm;)Lfbm;");
    }

    static jobject getTextureSpecificVertexConsumer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTextureSpecificVertexConsumer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_TEXTURE_SPRITE_HPP