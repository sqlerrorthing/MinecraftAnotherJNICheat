// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_TEXTURE_ATLAS_UNSTITCHATLASSOURCE$SPRITEREGION_HPP
#define NET_MINECRAFT_CLIENT_TEXTURE_ATLAS_UNSTITCHATLASSOURCE$SPRITEREGION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.texture.atlas.UnstitchAtlasSource$SpriteRegion
 * Remapped: gqz$b
 */
namespace UnstitchAtlasSource$SpriteRegion {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gqz$b", "net/minecraft/client/renderer/texture/atlas/sources/Unstitcher$RegionInstance", "net/minecraft/class_7957$class_7960", "net/minecraft/client/texture/atlas/UnstitchAtlasSource$SpriteRegion", "net/minecraft/src/C_260415_$C_260430_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.texture.atlas.UnstitchAtlasSource$SpriteRegion#sprite
    static jobject get_field_sprite(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "image", "field_41421", "sprite", "f_260587_"), "Lgqv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.atlas.UnstitchAtlasSource$SpriteRegion#sprite
    static void set_field_sprite(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "image", "field_41421", "sprite", "f_260587_"), "Lgqv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.texture.atlas.UnstitchAtlasSource$SpriteRegion#region
    static jobject get_field_region(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "region", "field_41422", "region", "f_260703_"), "Lgqz$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.atlas.UnstitchAtlasSource$SpriteRegion#region
    static void set_field_region(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "region", "field_41422", "region", "f_260703_"), "Lgqz$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.texture.atlas.UnstitchAtlasSource$SpriteRegion#divisorX
    static jdouble get_field_divisorX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "xDivisor", "field_41423", "divisorX", "f_260604_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.atlas.UnstitchAtlasSource$SpriteRegion#divisorX
    static void set_field_divisorX(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "xDivisor", "field_41423", "divisorX", "f_260604_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.texture.atlas.UnstitchAtlasSource$SpriteRegion#divisorY
    static jdouble get_field_divisorY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "yDivisor", "field_41424", "divisorY", "f_260617_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.atlas.UnstitchAtlasSource$SpriteRegion#divisorY
    static void set_field_divisorY(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "yDivisor", "field_41424", "divisorY", "f_260617_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_47700", "apply", "apply"), "(Lgqo;)Lgqf;");
    }

    static jobject apply(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_apply();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "discard", "method_47676", "close", "m_260986_"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_TEXTURE_ATLAS_UNSTITCHATLASSOURCE$SPRITEREGION_HPP