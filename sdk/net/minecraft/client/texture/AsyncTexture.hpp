// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_TEXTURE_ASYNCTEXTURE_HPP
#define NET_MINECRAFT_CLIENT_TEXTURE_ASYNCTEXTURE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.texture.AsyncTexture
 * Remapped: gqd
 */
namespace AsyncTexture {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gqd", "net/minecraft/client/renderer/texture/PreloadedTexture", "net/minecraft/class_4005", "net/minecraft/client/texture/AsyncTexture", "net/minecraft/src/C_4475_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.texture.AsyncTexture#future
    static jobject get_field_future(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "future", "field_17894", "future", "f_118100_"), "Ljava/util/concurrent/CompletableFuture;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.texture.AsyncTexture#future
    static void set_field_future(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "future", "field_17894", "future", "f_118100_"), "Ljava/util/concurrent/CompletableFuture;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_loadTextureData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTextureImage", "method_18153", "loadTextureData", "m_6335_"), "(Laue;)Lgqe$a;");
    }

    static jobject loadTextureData(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadTextureData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLoadCompleteFuture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getFuture", "method_18148", "getLoadCompleteFuture", "m_118105_"), "()Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject getLoadCompleteFuture(const jobject& obj) {
                
       const auto methodID = methodID_getLoadCompleteFuture();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerTexture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "reset", "method_18169", "registerTexture", "m_6479_"), "(Lgqm;Laue;Lakr;Ljava/util/concurrent/Executor;)V");
    }

    static void registerTexture(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_registerTexture();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createRenderThreadExecutor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "executor", "method_22808", "createRenderThreadExecutor", "m_118120_"), "(Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor;");
    }

    static jobject createRenderThreadExecutor(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createRenderThreadExecutor();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_TEXTURE_ASYNCTEXTURE_HPP