// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_TOAST_TOASTMANAGER$ENTRY_HPP
#define NET_MINECRAFT_CLIENT_TOAST_TOASTMANAGER$ENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.toast.ToastManager$Entry
 * Remapped: fkw$a
 */
namespace ToastManager$Entry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fkw$a", "net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance", "net/minecraft/class_374$class_375", "net/minecraft/client/toast/ToastManager$Entry", "net/minecraft/src/C_3503_$C_3505_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.toast.ToastManager$Entry#DISAPPEAR_TIME
    [[maybe_unused]] static jlong get_field_DISAPPEAR_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ANIMATION_TIME", "field_32221", "DISAPPEAR_TIME", "f_169082_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.toast.ToastManager$Entry#DISAPPEAR_TIME
    [[maybe_unused]] static void set_field_DISAPPEAR_TIME(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ANIMATION_TIME", "field_32221", "DISAPPEAR_TIME", "f_169082_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.toast.ToastManager$Entry#instance
    static jobject get_field_instance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "toast", "field_2241", "instance", "f_94931_"), "Lfkv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.toast.ToastManager$Entry#instance
    static void set_field_instance(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "toast", "field_2241", "instance", "f_94931_"), "Lfkv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.toast.ToastManager$Entry#topIndex
    static jint get_field_topIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "index", "field_39932", "topIndex", "f_242993_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.toast.ToastManager$Entry#topIndex
    static void set_field_topIndex(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "index", "field_39932", "topIndex", "f_242993_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.toast.ToastManager$Entry#requiredSpaceCount
    static jint get_field_requiredSpaceCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "slotCount", "field_39933", "requiredSpaceCount", "f_243000_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.toast.ToastManager$Entry#requiredSpaceCount
    static void set_field_requiredSpaceCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "slotCount", "field_39933", "requiredSpaceCount", "f_243000_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.toast.ToastManager$Entry#startTime
    static jlong get_field_startTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "animationTime", "field_2243", "startTime", "f_94932_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.toast.ToastManager$Entry#startTime
    static void set_field_startTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "animationTime", "field_2243", "startTime", "f_94932_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.toast.ToastManager$Entry#showTime
    static jlong get_field_showTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "visibleTime", "field_2242", "showTime", "f_94933_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.toast.ToastManager$Entry#showTime
    static void set_field_showTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "visibleTime", "field_2242", "showTime", "f_94933_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.toast.ToastManager$Entry#visibility
    static jobject get_field_visibility(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "visibility", "field_2244", "visibility", "f_94934_"), "Lfkv$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.toast.ToastManager$Entry#visibility
    static void set_field_visibility(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "visibility", "field_2244", "visibility", "f_94934_"), "Lfkv$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getInstance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getToast", "method_2001", "getInstance", "m_94942_"), "()Lfkv;");
    }

    static jobject getInstance(const jobject& obj) {
                
       const auto methodID = methodID_getInstance();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDisappearProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getVisibility", "method_2003", "getDisappearProgress", "m_94947_"), "(J)F");
    }

    static jfloat getDisappearProgress(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_getDisappearProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_draw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_2002", "draw", "m_280442_"), "(ILfhz;)Z");
    }

    static jboolean draw(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_draw();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_TOAST_TOASTMANAGER$ENTRY_HPP