// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_TOAST_TUTORIALTOAST$TYPE_HPP
#define NET_MINECRAFT_CLIENT_TOAST_TUTORIALTOAST$TYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.toast.TutorialToast$Type
 * Remapped: fkx$a
 */
namespace TutorialToast$Type {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fkx$a", "net/minecraft/client/gui/components/toasts/TutorialToast$Icons", "net/minecraft/class_372$class_373", "net/minecraft/client/toast/TutorialToast$Type", "net/minecraft/src/C_3506_$C_3507_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.toast.TutorialToast$Type#MOVEMENT_KEYS
    [[maybe_unused]] static jobject get_field_MOVEMENT_KEYS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MOVEMENT_KEYS", "field_2230", "MOVEMENT_KEYS", "MOVEMENT_KEYS"), "Lfkx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.toast.TutorialToast$Type#MOVEMENT_KEYS
    [[maybe_unused]] static void set_field_MOVEMENT_KEYS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MOVEMENT_KEYS", "field_2230", "MOVEMENT_KEYS", "MOVEMENT_KEYS"), "Lfkx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.toast.TutorialToast$Type#MOUSE
    [[maybe_unused]] static jobject get_field_MOUSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MOUSE", "field_2237", "MOUSE", "MOUSE"), "Lfkx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.toast.TutorialToast$Type#MOUSE
    [[maybe_unused]] static void set_field_MOUSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MOUSE", "field_2237", "MOUSE", "MOUSE"), "Lfkx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.toast.TutorialToast$Type#TREE
    [[maybe_unused]] static jobject get_field_TREE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TREE", "field_2235", "TREE", "TREE"), "Lfkx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.toast.TutorialToast$Type#TREE
    [[maybe_unused]] static void set_field_TREE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TREE", "field_2235", "TREE", "TREE"), "Lfkx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.toast.TutorialToast$Type#RECIPE_BOOK
    [[maybe_unused]] static jobject get_field_RECIPE_BOOK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RECIPE_BOOK", "field_2233", "RECIPE_BOOK", "RECIPE_BOOK"), "Lfkx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.toast.TutorialToast$Type#RECIPE_BOOK
    [[maybe_unused]] static void set_field_RECIPE_BOOK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RECIPE_BOOK", "field_2233", "RECIPE_BOOK", "RECIPE_BOOK"), "Lfkx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.toast.TutorialToast$Type#WOODEN_PLANKS
    [[maybe_unused]] static jobject get_field_WOODEN_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "WOODEN_PLANKS", "field_2236", "WOODEN_PLANKS", "WOODEN_PLANKS"), "Lfkx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.toast.TutorialToast$Type#WOODEN_PLANKS
    [[maybe_unused]] static void set_field_WOODEN_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "WOODEN_PLANKS", "field_2236", "WOODEN_PLANKS", "WOODEN_PLANKS"), "Lfkx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.toast.TutorialToast$Type#SOCIAL_INTERACTIONS
    [[maybe_unused]] static jobject get_field_SOCIAL_INTERACTIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SOCIAL_INTERACTIONS", "field_26848", "SOCIAL_INTERACTIONS", "SOCIAL_INTERACTIONS"), "Lfkx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.toast.TutorialToast$Type#SOCIAL_INTERACTIONS
    [[maybe_unused]] static void set_field_SOCIAL_INTERACTIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SOCIAL_INTERACTIONS", "field_26848", "SOCIAL_INTERACTIONS", "SOCIAL_INTERACTIONS"), "Lfkx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.toast.TutorialToast$Type#RIGHT_CLICK
    [[maybe_unused]] static jobject get_field_RIGHT_CLICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RIGHT_CLICK", "field_28782", "RIGHT_CLICK", "RIGHT_CLICK"), "Lfkx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.toast.TutorialToast$Type#RIGHT_CLICK
    [[maybe_unused]] static void set_field_RIGHT_CLICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "RIGHT_CLICK", "field_28782", "RIGHT_CLICK", "RIGHT_CLICK"), "Lfkx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.toast.TutorialToast$Type#texture
    static jobject get_field_texture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "sprite", "field_45398", "texture", "f_291000_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.toast.TutorialToast$Type#texture
    static void set_field_texture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "sprite", "field_45398", "texture", "f_291000_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lfkx$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lfkx$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_drawIcon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_1994", "drawIcon", "m_280006_"), "(Lfhz;II)V");
    }

    static void drawIcon(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_drawIcon();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_TOAST_TUTORIALTOAST$TYPE_HPP