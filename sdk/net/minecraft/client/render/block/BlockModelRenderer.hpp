// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_BLOCK_BLOCKMODELRENDERER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_BLOCK_BLOCKMODELRENDERER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.block.BlockModelRenderer
 * Remapped: gfv
 */
namespace BlockModelRenderer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gfv", "net/minecraft/client/renderer/block/ModelBlockRenderer", "net/minecraft/class_778", "net/minecraft/client/render/block/BlockModelRenderer", "net/minecraft/src/C_4186_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.block.BlockModelRenderer#field_32782
    [[maybe_unused]] static jint get_field_field_32782() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FACE_CUBIC", "field_32782", "field_32782", "f_173403_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.BlockModelRenderer#field_32782
    [[maybe_unused]] static void set_field_field_32782(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FACE_CUBIC", "field_32782", "field_32782", "f_173403_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.block.BlockModelRenderer#field_32783
    [[maybe_unused]] static jint get_field_field_32783() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FACE_PARTIAL", "field_32783", "field_32783", "f_173404_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.BlockModelRenderer#field_32783
    [[maybe_unused]] static void set_field_field_32783(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FACE_PARTIAL", "field_32783", "field_32783", "f_173404_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.render.block.BlockModelRenderer#DIRECTIONS
    [[maybe_unused]] static jobject get_field_DIRECTIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DIRECTIONS", "field_27743", "DIRECTIONS", "f_173405_"), "[Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.render.block.BlockModelRenderer#DIRECTIONS
    [[maybe_unused]] static void set_field_DIRECTIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DIRECTIONS", "field_27743", "DIRECTIONS", "f_173405_"), "[Lji;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.block.BlockModelRenderer#colors
    static jobject get_field_colors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "blockColors", "field_4178", "colors", "f_110995_"), "Lfhq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.BlockModelRenderer#colors
    static void set_field_colors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "blockColors", "field_4178", "colors", "f_110995_"), "Lfhq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.block.BlockModelRenderer#BRIGHTNESS_CACHE_MAX_SIZE
    [[maybe_unused]] static jint get_field_BRIGHTNESS_CACHE_MAX_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CACHE_SIZE", "field_32784", "BRIGHTNESS_CACHE_MAX_SIZE", "f_173406_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.BlockModelRenderer#BRIGHTNESS_CACHE_MAX_SIZE
    [[maybe_unused]] static void set_field_BRIGHTNESS_CACHE_MAX_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CACHE_SIZE", "field_32784", "BRIGHTNESS_CACHE_MAX_SIZE", "f_173406_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.render.block.BlockModelRenderer#BRIGHTNESS_CACHE
    [[maybe_unused]] static jobject get_field_BRIGHTNESS_CACHE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CACHE", "field_4179", "BRIGHTNESS_CACHE", "f_110996_"), "Ljava/lang/ThreadLocal;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.render.block.BlockModelRenderer#BRIGHTNESS_CACHE
    [[maybe_unused]] static void set_field_BRIGHTNESS_CACHE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CACHE", "field_4179", "BRIGHTNESS_CACHE", "f_110996_"), "Ljava/lang/ThreadLocal;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tesselateBlock", "method_3374", "render", "m_234379_"), "(Ldbz;Lgsm;Ldtc;Ljd;Lfbi;Lfbm;ZLayw;JI)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jboolean& arg6, const jobject& arg7, const jlong& arg8, const jint& arg9) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_renderSmooth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "tesselateWithAO", "method_3361", "renderSmooth", "m_234390_"), "(Ldbz;Lgsm;Ldtc;Ljd;Lfbi;Lfbm;ZLayw;JI)V");
    }

    static void renderSmooth(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jboolean& arg6, const jobject& arg7, const jlong& arg8, const jint& arg9) {
                
       const auto methodID = methodID_renderSmooth();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_renderFlat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "tesselateWithoutAO", "method_3373", "renderFlat", "m_234401_"), "(Ldbz;Lgsm;Ldtc;Ljd;Lfbi;Lfbm;ZLayw;JI)V");
    }

    static void renderFlat(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jboolean& arg6, const jobject& arg7, const jlong& arg8, const jint& arg9) {
                
       const auto methodID = methodID_renderFlat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_renderQuadsSmooth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderModelFaceAO", "method_3363", "renderQuadsSmooth", "m_111012_"), "(Ldbz;Ldtc;Ljd;Lfbi;Lfbm;Ljava/util/List;[FLjava/util/BitSet;Lgfv$b;I)V");
    }

    static void renderQuadsSmooth(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jarray& arg6, const jfloat& arg7, const jobject& arg8, const jobject& arg9, const jint& arg10) {
                
       const auto methodID = methodID_renderQuadsSmooth();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    };
    
    static jmethodID methodID_renderQuad() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "putQuadData", "method_23073", "renderQuad", "m_111023_"), "(Ldbz;Ldtc;Ljd;Lfbm;Lfbi$a;Lgfw;FFFFIIIII)V");
    }

    static void renderQuad(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jfloat& arg6, const jfloat& arg7, const jfloat& arg8, const jfloat& arg9, const jint& arg10, const jint& arg11, const jint& arg12, const jint& arg13, const jint& arg14) {
                
       const auto methodID = methodID_renderQuad();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14);
    };
    
    static jmethodID methodID_getQuadDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateShape", "method_3364", "getQuadDimensions", "m_111039_"), "(Ldbz;Ldtc;Ljd;[ILji;[FLjava/util/BitSet;)V");
    }

    static void getQuadDimensions(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jarray& arg3, const jint& arg4, const jobject& arg5, const jarray& arg6, const jfloat& arg7, const jobject& arg8) {
                
       const auto methodID = methodID_getQuadDimensions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_renderQuadsFlat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderModelFaceFlat", "method_3370", "renderQuadsFlat", "m_111001_"), "(Ldbz;Ldtc;Ljd;IIZLfbi;Lfbm;Ljava/util/List;Ljava/util/BitSet;)V");
    }

    static void renderQuadsFlat(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4, const jboolean& arg5, const jobject& arg6, const jobject& arg7, const jobject& arg8, const jobject& arg9) {
                
       const auto methodID = methodID_renderQuadsFlat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID__render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderModel", "method_3367", "render", "m_111067_"), "(Lfbi$a;Lfbm;Ldtc;Lgsm;FFFII)V");
    }

    static void _render(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jfloat& arg4, const jfloat& arg5, const jfloat& arg6, const jint& arg7, const jint& arg8) {
                
       const auto methodID = methodID__render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_renderQuads() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderQuadList", "method_3365", "renderQuads", "m_111058_"), "(Lfbi$a;Lfbm;FFFLjava/util/List;II)V");
    }

    static void renderQuads(const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jfloat& arg3, const jfloat& arg4, const jobject& arg5, const jint& arg6, const jint& arg7) {
       const auto clazz = self();
       const auto methodID = methodID_renderQuads();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_enableBrightnessCache() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "enableCaching", "method_20544", "enableBrightnessCache", "m_111000_"), "()V");
    }

    static void enableBrightnessCache() {
       const auto clazz = self();
       const auto methodID = methodID_enableBrightnessCache();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_disableBrightnessCache() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "clearCache", "method_20545", "disableBrightnessCache", "m_111077_"), "()V");
    }

    static void disableBrightnessCache() {
       const auto clazz = self();
       const auto methodID = methodID_disableBrightnessCache();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_BLOCK_BLOCKMODELRENDERER_HPP