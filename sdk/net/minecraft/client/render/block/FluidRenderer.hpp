// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_BLOCK_FLUIDRENDERER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_BLOCK_FLUIDRENDERER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.block.FluidRenderer
 * Remapped: gfu
 */
namespace FluidRenderer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gfu", "net/minecraft/client/renderer/block/LiquidBlockRenderer", "net/minecraft/class_775", "net/minecraft/client/render/block/FluidRenderer", "net/minecraft/src/C_4185_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.block.FluidRenderer#field_32781
    [[maybe_unused]] static jfloat get_field_field_32781() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_FLUID_HEIGHT", "field_32781", "field_32781", "f_173402_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.FluidRenderer#field_32781
    [[maybe_unused]] static void set_field_field_32781(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_FLUID_HEIGHT", "field_32781", "field_32781", "f_173402_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.block.FluidRenderer#lavaSprites
    static jobject get_field_lavaSprites(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lavaIcons", "field_4165", "lavaSprites", "f_110940_"), "[Lgql;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.FluidRenderer#lavaSprites
    static void set_field_lavaSprites(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lavaIcons", "field_4165", "lavaSprites", "f_110940_"), "[Lgql;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.block.FluidRenderer#waterSprites
    static jobject get_field_waterSprites(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "waterIcons", "field_4166", "waterSprites", "f_110941_"), "[Lgql;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.FluidRenderer#waterSprites
    static void set_field_waterSprites(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "waterIcons", "field_4166", "waterSprites", "f_110941_"), "[Lgql;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.block.FluidRenderer#waterOverlaySprite
    static jobject get_field_waterOverlaySprite(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "waterOverlay", "field_4164", "waterOverlaySprite", "f_110942_"), "Lgql;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.FluidRenderer#waterOverlaySprite
    static void set_field_waterOverlaySprite(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "waterOverlay", "field_4164", "waterOverlaySprite", "f_110942_"), "Lgql;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_onResourceReload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupSprites", "method_3345", "onResourceReload", "m_110944_"), "()V");
    }

    static void onResourceReload(const jobject& obj) {
                
       const auto methodID = methodID_onResourceReload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSameFluid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isNeighborSameFluid", "method_3348", "isSameFluid", "m_203185_"), "(Lepe;Lepe;)Z");
    }

    static jboolean isSameFluid(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isSameFluid();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isSideCovered() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isFaceOccludedByState", "method_29710", "isSideCovered", "m_110978_"), "(Ldcc;Lji;FLjd;Ldtc;)Z");
    }

    static jboolean isSideCovered(const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_isSideCovered();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID__isSideCovered() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isFaceOccludedByNeighbor", "method_3344", "isSideCovered", "m_203179_"), "(Ldcc;Ljd;Lji;FLdtc;)Z");
    }

    static jboolean _isSideCovered(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID__isSideCovered();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_isOppositeSideCovered() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isFaceOccludedBySelf", "method_29709", "isOppositeSideCovered", "m_110959_"), "(Ldcc;Ljd;Ldtc;Lji;)Z");
    }

    static jboolean isOppositeSideCovered(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_isOppositeSideCovered();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_shouldRenderSide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldRenderFace", "method_29708", "shouldRenderSide", "m_203166_"), "(Ldbz;Ljd;Lepe;Ldtc;Lji;Lepe;)Z");
    }

    static jboolean shouldRenderSide(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_shouldRenderSide();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tesselate", "method_3347", "render", "m_234369_"), "(Ldbz;Ljd;Lfbm;Ldtc;Lepe;)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_calculateFluidHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateAverageHeight", "method_40077", "calculateFluidHeight", "m_203149_"), "(Ldbz;Lepd;FFFLjd;)F");
    }

    static jfloat calculateFluidHeight(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jfloat& arg3, const jfloat& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_calculateFluidHeight();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_addHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addWeightedHeight", "method_40080", "addHeight", "m_203188_"), "([FF)V");
    }

    static void addHeight(const jobject& obj, const jarray& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_addHeight();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getFluidHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getHeight", "method_40078", "getFluidHeight", "m_203156_"), "(Ldbz;Lepd;Ljd;)F");
    }

    static jfloat getFluidHeight(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getFluidHeight();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__getFluidHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getHeight", "method_40079", "getFluidHeight", "m_203160_"), "(Ldbz;Lepd;Ljd;Ldtc;Lepe;)F");
    }

    static jfloat _getFluidHeight(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID__getFluidHeight();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_vertex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "vertex", "method_23072", "vertex", "m_110984_"), "(Lfbm;FFFFFFFFI)V");
    }

    static void vertex(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jfloat& arg2, const jfloat& arg3, const jfloat& arg4, const jfloat& arg5, const jfloat& arg6, const jfloat& arg7, const jfloat& arg8, const jint& arg9) {
                
       const auto methodID = methodID_vertex();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_getLight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getLightColor", "method_3343", "getLight", "m_110945_"), "(Ldbz;Ljd;)I");
    }

    static jint getLight(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getLight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_BLOCK_FLUIDRENDERER_HPP