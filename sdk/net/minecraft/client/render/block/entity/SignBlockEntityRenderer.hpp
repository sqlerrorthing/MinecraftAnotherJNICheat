// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_BLOCK_ENTITY_SIGNBLOCKENTITYRENDERER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_BLOCK_ENTITY_SIGNBLOCKENTITYRENDERER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.block.entity.SignBlockEntityRenderer
 * Remapped: ghn
 */
namespace SignBlockEntityRenderer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ghn", "net/minecraft/client/renderer/blockentity/SignRenderer", "net/minecraft/class_837", "net/minecraft/client/render/block/entity/SignBlockEntityRenderer", "net/minecraft/src/C_4253_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#STICK
    [[maybe_unused]] static jobject get_field_STICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STICK", "field_32830", "STICK", "f_173629_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#STICK
    [[maybe_unused]] static void set_field_STICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STICK", "field_32830", "STICK", "f_173629_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#GLOWING_BLACK_COLOR
    [[maybe_unused]] static jint get_field_GLOWING_BLACK_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BLACK_TEXT_OUTLINE_COLOR", "field_33962", "GLOWING_BLACK_COLOR", "f_173630_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#GLOWING_BLACK_COLOR
    [[maybe_unused]] static void set_field_GLOWING_BLACK_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BLACK_TEXT_OUTLINE_COLOR", "field_33962", "GLOWING_BLACK_COLOR", "f_173630_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#RENDER_DISTANCE
    [[maybe_unused]] static jint get_field_RENDER_DISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "OUTLINE_RENDER_DISTANCE", "field_33963", "RENDER_DISTANCE", "f_173631_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#RENDER_DISTANCE
    [[maybe_unused]] static void set_field_RENDER_DISTANCE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "OUTLINE_RENDER_DISTANCE", "field_33963", "RENDER_DISTANCE", "f_173631_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#SCALE
    [[maybe_unused]] static jfloat get_field_SCALE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RENDER_SCALE", "field_44577", "SCALE", "f_278501_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#SCALE
    [[maybe_unused]] static void set_field_SCALE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RENDER_SCALE", "field_44577", "SCALE", "f_278501_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#TEXT_OFFSET
    [[maybe_unused]] static jobject get_field_TEXT_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TEXT_OFFSET", "field_44578", "TEXT_OFFSET", "f_278459_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#TEXT_OFFSET
    [[maybe_unused]] static void set_field_TEXT_OFFSET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TEXT_OFFSET", "field_44578", "TEXT_OFFSET", "f_278459_"), "Lexc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#typeToModel
    static jobject get_field_typeToModel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "signModels", "field_27754", "typeToModel", "f_173632_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#typeToModel
    static void set_field_typeToModel(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "signModels", "field_27754", "typeToModel", "f_173632_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#textRenderer
    static jobject get_field_textRenderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "font", "field_27755", "textRenderer", "f_173633_"), "Lfhx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.block.entity.SignBlockEntityRenderer#textRenderer
    static void set_field_textRenderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "font", "field_27755", "textRenderer", "f_173633_"), "Lfhx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_23083", "render", "m_6922_"), "(Ldrs;FLfbi;Lgez;II)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jobject& arg2, const jobject& arg3, const jint& arg4, const jint& arg5) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getSignScale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSignModelRenderScale", "method_51272", "getSignScale", "m_278770_"), "()F");
    }

    static jfloat getSignScale(const jobject& obj) {
                
       const auto methodID = methodID_getSignScale();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTextScale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getSignTextRenderScale", "method_51273", "getTextScale", "m_278631_"), "()F");
    }

    static jfloat getTextScale(const jobject& obj) {
                
       const auto methodID = methodID_getTextScale();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSignWithText", "method_49920", "render", "m_278756_"), "(Ldrs;Lfbi;Lgez;IILdtc;Ldmz;Ldup;Lfwg;)V");
    }

    static void _render(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4, const jobject& arg5, const jobject& arg6, const jobject& arg7, const jobject& arg8) {
                
       const auto methodID = methodID__render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_setAngles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "translateSign", "method_49918", "setAngles", "m_276777_"), "(Lfbi;FLdtc;)V");
    }

    static void setAngles(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_setAngles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_renderSign() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSign", "method_45800", "renderSign", "m_278784_"), "(Lfbi;Lgez;IILdup;Lfwg;)V");
    }

    static void renderSign(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_renderSign();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_renderSignModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSignModel", "method_45793", "renderSignModel", "m_245885_"), "(Lfbi;IILfwg;Lfbm;)V");
    }

    static void renderSignModel(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_renderSignModel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getTextureId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSignMaterial", "method_45792", "getTextureId", "m_245629_"), "(Ldup;)Lgsq;");
    }

    static jobject getTextureId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTextureId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_renderText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSignText", "method_45798", "renderText", "m_278841_"), "(Ljd;Ldrt;Lfbi;Lgez;IIIZ)V");
    }

    static void renderText(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jboolean& arg7) {
                
       const auto methodID = methodID_renderText();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_setTextAngles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "translateSignText", "method_49919", "setTextAngles", "m_278823_"), "(Lfbi;ZLexc;)V");
    }

    static void setTextAngles(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_setTextAngles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getTextOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getTextOffset", "method_45790", "getTextOffset", "m_278725_"), "()Lexc;");
    }

    static jobject getTextOffset(const jobject& obj) {
                
       const auto methodID = methodID_getTextOffset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldRender() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isOutlineVisible", "method_37312", "shouldRender", "m_277119_"), "(Ljd;I)Z");
    }

    static jboolean shouldRender(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_shouldRender();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getDarkColor", "method_37311", "getColor", "m_173639_"), "(Ldrt;)I");
    }

    static jint getColor(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getColor();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createSignModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createSignModel", "method_32157", "createSignModel", "m_173646_"), "(Lfyg;Ldup;)Lghn$a;");
    }

    static jobject createSignModel(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createSignModel();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getTexturedModelData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "createSignLayer", "method_32154", "getTexturedModelData", "m_173654_"), "()Lfyq;");
    }

    static jobject getTexturedModelData() {
       const auto clazz = self();
       const auto methodID = methodID_getTexturedModelData();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_BLOCK_ENTITY_SIGNBLOCKENTITYRENDERER_HPP