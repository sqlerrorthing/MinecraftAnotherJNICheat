// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_CHUNK_CHUNKBUILDER$BUILTCHUNK_HPP
#define NET_MINECRAFT_CLIENT_RENDER_CHUNK_CHUNKBUILDER$BUILTCHUNK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk
 * Remapped: gia$b
 */
namespace ChunkBuilder$BuiltChunk {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gia$b", "net/minecraft/client/renderer/chunk/SectionRenderDispatcher$RenderSection", "net/minecraft/class_846$class_851", "net/minecraft/client/render/chunk/ChunkBuilder$BuiltChunk", "net/minecraft/src/C_290152_$C_290138_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#field_32832
    [[maybe_unused]] static jint get_field_field_32832() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SIZE", "field_32832", "field_32832", "f_291071_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#field_32832
    [[maybe_unused]] static void set_field_field_32832(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SIZE", "field_32832", "field_32832", "f_291071_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#index
    static jint get_field_index(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "index", "field_29641", "index", "f_290488_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#index
    static void set_field_index(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "index", "field_29641", "index", "f_290488_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#data
    static jobject get_field_data(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "compiled", "field_4459", "data", "f_290312_"), "Ljava/util/concurrent/atomic/AtomicReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#data
    static void set_field_data(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "compiled", "field_4459", "data", "f_290312_"), "Ljava/util/concurrent/atomic/AtomicReference;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#numFailures
    static jobject get_field_numFailures(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "initialCompilationCancelCount", "field_36374", "numFailures", "f_291503_"), "Ljava/util/concurrent/atomic/AtomicInteger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#numFailures
    static void set_field_numFailures(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "initialCompilationCancelCount", "field_36374", "numFailures", "f_291503_"), "Ljava/util/concurrent/atomic/AtomicInteger;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#rebuildTask
    static jobject get_field_rebuildTask(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lastRebuildTask", "field_20834", "rebuildTask", "f_291315_"), "Lgia$b$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#rebuildTask
    static void set_field_rebuildTask(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lastRebuildTask", "field_20834", "rebuildTask", "f_291315_"), "Lgia$b$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#sortTask
    static jobject get_field_sortTask(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "lastResortTransparencyTask", "field_4461", "sortTask", "f_291330_"), "Lgia$b$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#sortTask
    static void set_field_sortTask(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "lastResortTransparencyTask", "field_4461", "sortTask", "f_291330_"), "Lgia$b$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#blockEntities
    static jobject get_field_blockEntities(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "globalBlockEntities", "field_4457", "blockEntities", "f_291787_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#blockEntities
    static void set_field_blockEntities(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "globalBlockEntities", "field_4457", "blockEntities", "f_291787_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#buffers
    static jobject get_field_buffers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "buffers", "field_4462", "buffers", "f_291754_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#buffers
    static void set_field_buffers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "buffers", "field_4462", "buffers", "f_291754_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#boundingBox
    static jobject get_field_boundingBox(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "bb", "field_4458", "boundingBox", "f_290371_"), "Lewx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#boundingBox
    static void set_field_boundingBox(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "bb", "field_4458", "boundingBox", "f_290371_"), "Lewx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#needsRebuild
    static jboolean get_field_needsRebuild(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "dirty", "field_4464", "needsRebuild", "f_291619_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#needsRebuild
    static void set_field_needsRebuild(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "dirty", "field_4464", "needsRebuild", "f_291619_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#origin
    static jobject get_field_origin(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "origin", "field_4467", "origin", "f_291850_"), "Ljd$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#origin
    static void set_field_origin(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "origin", "field_4467", "origin", "f_291850_"), "Ljd$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#neighborPositions
    static jobject get_field_neighborPositions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "relativeOrigins", "field_4472", "neighborPositions", "f_291827_"), "[Ljd$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#neighborPositions
    static void set_field_neighborPositions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "relativeOrigins", "field_4472", "neighborPositions", "f_291827_"), "[Ljd$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#needsImportantRebuild
    static jboolean get_field_needsImportantRebuild(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "playerChanged", "field_4463", "needsImportantRebuild", "f_291709_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.chunk.ChunkBuilder$BuiltChunk#needsImportantRebuild
    static void set_field_needsImportantRebuild(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "playerChanged", "field_4463", "needsImportantRebuild", "f_291709_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_isChunkNonEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doesChunkExistAt", "method_3651", "isChunkNonEmpty", "m_294104_"), "(Ljd;)Z");
    }

    static jboolean isChunkNonEmpty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isChunkNonEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldBuild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasAllNeighbors", "method_3673", "shouldBuild", "m_294718_"), "()Z");
    }

    static jboolean shouldBuild(const jobject& obj) {
                
       const auto methodID = methodID_shouldBuild();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getBoundingBox", "method_40051", "getBoundingBox", "m_293301_"), "()Lewx;");
    }

    static jobject getBoundingBox(const jobject& obj) {
                
       const auto methodID = methodID_getBoundingBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBuffer", "method_3656", "getBuffer", "m_294581_"), "(Lgfh;)Lfbl;");
    }

    static jobject getBuffer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setOrigin() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOrigin", "method_3653", "setOrigin", "m_292814_"), "(III)V");
    }

    static void setOrigin(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_setOrigin();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getSquaredCameraDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getDistToPlayerSqr", "method_3668", "getSquaredCameraDistance", "m_293828_"), "()D");
    }

    static jdouble getSquaredCameraDistance(const jobject& obj) {
                
       const auto methodID = methodID_getSquaredCameraDistance();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getCompiled", "method_3677", "getData", "m_293175_"), "()Lgia$a;");
    }

    static jobject getData(const jobject& obj) {
                
       const auto methodID = methodID_getData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "reset", "method_3675", "clear", "m_293096_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_delete() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "releaseBuffers", "method_3659", "delete", "m_294345_"), "()V");
    }

    static void delete(const jobject& obj) {
                
       const auto methodID = methodID_delete();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOrigin() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getOrigin", "method_3670", "getOrigin", "m_295500_"), "()Ljd;");
    }

    static jobject getOrigin(const jobject& obj) {
                
       const auto methodID = methodID_getOrigin();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_scheduleRebuild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDirty", "method_3654", "scheduleRebuild", "m_292780_"), "(Z)V");
    }

    static void scheduleRebuild(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_scheduleRebuild();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_cancelRebuild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "setNotDirty", "method_3662", "cancelRebuild", "m_294599_"), "()V");
    }

    static void cancelRebuild(const jobject& obj) {
                
       const auto methodID = methodID_cancelRebuild();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__needsRebuild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "isDirty", "method_3672", "needsRebuild", "m_295586_"), "()Z");
    }

    static jboolean _needsRebuild(const jobject& obj) {
                
       const auto methodID = methodID__needsRebuild();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__needsImportantRebuild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isDirtyFromPlayer", "method_3661", "needsImportantRebuild", "m_295878_"), "()Z");
    }

    static jboolean _needsImportantRebuild(const jobject& obj) {
                
       const auto methodID = methodID__needsImportantRebuild();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNeighborPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRelativeOrigin", "method_3676", "getNeighborPosition", "m_292593_"), "(Lji;)Ljd;");
    }

    static jobject getNeighborPosition(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getNeighborPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_scheduleSort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resortTransparency", "method_22773", "scheduleSort", "m_294021_"), "(Lgfh;Lgia;)Z");
    }

    static jboolean scheduleSort(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_scheduleSort();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_cancel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "cancelTasks", "method_3663", "cancel", "m_294642_"), "()Z");
    }

    static jboolean cancel(const jobject& obj) {
                
       const auto methodID = methodID_cancel();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_createRebuildTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createCompileTask", "method_3674", "createRebuildTask", "m_295128_"), "(Lghy;)Lgia$b$a;");
    }

    static jobject createRebuildTask(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createRebuildTask();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__scheduleRebuild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "rebuildSectionAsync", "method_22777", "scheduleRebuild", "m_294845_"), "(Lgia;Lghy;)V");
    }

    static void _scheduleRebuild(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__scheduleRebuild();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setNoCullingBlockEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateGlobalBlockEntities", "method_22778", "setNoCullingBlockEntities", "m_295492_"), "(Ljava/util/Collection;)V");
    }

    static void setNoCullingBlockEntities(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setNoCullingBlockEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_rebuild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "compileSync", "method_22781", "rebuild", "m_295370_"), "(Lghy;)V");
    }

    static void rebuild(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_rebuild();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_method_52841() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isAxisAlignedWith", "method_52841", "method_52841", "m_292850_"), "(III)Z");
    }

    static jboolean method_52841(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_method_52841();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_method_60908() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCompiled", "method_60908", "method_60908", "m_339503_"), "(Lgia$a;)V");
    }

    static void method_60908(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_method_60908();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_method_60909() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "createVertexSorting", "method_60909", "method_60909", "m_338425_"), "()Lfbq;");
    }

    static jobject method_60909(const jobject& obj) {
                
       const auto methodID = methodID_method_60909();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_CHUNK_CHUNKBUILDER$BUILTCHUNK_HPP