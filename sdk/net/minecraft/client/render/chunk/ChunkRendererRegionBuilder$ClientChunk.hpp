// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_CHUNK_CHUNKRENDERERREGIONBUILDER$CLIENTCHUNK_HPP
#define NET_MINECRAFT_CLIENT_RENDER_CHUNK_CHUNKRENDERERREGIONBUILDER$CLIENTCHUNK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.chunk.ChunkRendererRegionBuilder$ClientChunk
 * Remapped: ghy$a
 */
namespace ChunkRendererRegionBuilder$ClientChunk {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ghy$a", "net/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo", "net/minecraft/class_6850$class_6851", "net/minecraft/client/render/chunk/ChunkRendererRegionBuilder$ClientChunk", "net/minecraft/src/C_200009_$C_200010_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.render.chunk.ChunkRendererRegionBuilder$ClientChunk#chunk
    static jobject get_field_chunk(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "chunk", "field_36315", "chunk", "f_200476_"), "Ldvi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.chunk.ChunkRendererRegionBuilder$ClientChunk#chunk
    static void set_field_chunk(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "chunk", "field_36315", "chunk", "f_200476_"), "Ldvi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.chunk.ChunkRendererRegionBuilder$ClientChunk#renderedChunk
    static jobject get_field_renderedChunk(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "renderChunk", "field_36316", "renderedChunk", "f_200477_"), "Lghw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.chunk.ChunkRendererRegionBuilder$ClientChunk#renderedChunk
    static void set_field_renderedChunk(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "renderChunk", "field_36316", "renderedChunk", "f_200477_"), "Lghw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "chunk", "method_39971", "getChunk", "m_200480_"), "()Ldvi;");
    }

    static jobject getChunk(const jobject& obj) {
                
       const auto methodID = methodID_getChunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRenderedChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderChunk", "method_39972", "getRenderedChunk", "m_200481_"), "()Lghw;");
    }

    static jobject getRenderedChunk(const jobject& obj) {
                
       const auto methodID = methodID_getRenderedChunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_CHUNK_CHUNKRENDERERREGIONBUILDER$CLIENTCHUNK_HPP