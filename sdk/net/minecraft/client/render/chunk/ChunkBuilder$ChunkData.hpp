// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_CHUNK_CHUNKBUILDER$CHUNKDATA_HPP
#define NET_MINECRAFT_CLIENT_RENDER_CHUNK_CHUNKBUILDER$CHUNKDATA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.chunk.ChunkBuilder$ChunkData
 * Remapped: gia$a
 */
namespace ChunkBuilder$ChunkData {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gia$a", "net/minecraft/client/renderer/chunk/SectionRenderDispatcher$CompiledSection", "net/minecraft/class_846$class_849", "net/minecraft/client/render/chunk/ChunkBuilder$ChunkData", "net/minecraft/src/C_290152_$C_290185_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.render.chunk.ChunkBuilder$ChunkData#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UNCOMPILED", "field_4451", "EMPTY", "f_290410_"), "Lgia$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.chunk.ChunkBuilder$ChunkData#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UNCOMPILED", "field_4451", "EMPTY", "f_290410_"), "Lgia$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.chunk.ChunkBuilder$ChunkData#field_52172
    [[maybe_unused]] static jobject get_field_field_52172() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EMPTY", "field_52172", "field_52172", "f_336992_"), "Lgia$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.chunk.ChunkBuilder$ChunkData#field_52172
    [[maybe_unused]] static void set_field_field_52172(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EMPTY", "field_52172", "field_52172", "f_336992_"), "Lgia$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.client.render.chunk.ChunkBuilder$ChunkData#nonEmptyLayers
    static jobject get_field_nonEmptyLayers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "hasBlocks", "field_4450", "nonEmptyLayers", "f_290391_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.chunk.ChunkBuilder$ChunkData#nonEmptyLayers
    static void set_field_nonEmptyLayers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "hasBlocks", "field_4450", "nonEmptyLayers", "f_290391_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.render.chunk.ChunkBuilder$ChunkData#blockEntities
    static jobject get_field_blockEntities(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "renderableBlockEntities", "field_4456", "blockEntities", "f_290409_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.chunk.ChunkBuilder$ChunkData#blockEntities
    static void set_field_blockEntities(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "renderableBlockEntities", "field_4456", "blockEntities", "f_290409_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.render.chunk.ChunkBuilder$ChunkData#occlusionGraph
    static jobject get_field_occlusionGraph(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "visibilitySet", "field_4455", "occlusionGraph", "f_290920_"), "Lgic;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.chunk.ChunkBuilder$ChunkData#occlusionGraph
    static void set_field_occlusionGraph(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "visibilitySet", "field_4455", "occlusionGraph", "f_290920_"), "Lgic;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.render.chunk.ChunkBuilder$ChunkData#transparentSortingData
    static jobject get_field_transparentSortingData(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "transparencyState", "field_4453", "transparentSortingData", "f_291674_"), "Lfbh$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.chunk.ChunkBuilder$ChunkData#transparentSortingData
    static void set_field_transparentSortingData(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "transparencyState", "field_4453", "transparentSortingData", "f_291674_"), "Lfbh$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasNoRenderableLayers", "method_3645", "isEmpty", "m_295467_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isEmpty", "method_3641", "isEmpty", "m_294492_"), "(Lgfh;)Z");
    }

    static jboolean _isEmpty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBlockEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRenderableBlockEntities", "method_3642", "getBlockEntities", "m_293674_"), "()Ljava/util/List;");
    }

    static jobject getBlockEntities(const jobject& obj) {
                
       const auto methodID = methodID_getBlockEntities();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isVisibleThrough() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "facesCanSeeEachother", "method_3650", "isVisibleThrough", "m_293115_"), "(Lji;Lji;)Z");
    }

    static jboolean isVisibleThrough(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isVisibleThrough();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_CHUNK_CHUNKBUILDER$CHUNKDATA_HPP