// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_DIMENSIONEFFECTS_HPP
#define NET_MINECRAFT_CLIENT_RENDER_DIMENSIONEFFECTS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.DimensionEffects
 * Remapped: geo
 */
namespace DimensionEffects {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("geo", "net/minecraft/client/renderer/DimensionSpecialEffects", "net/minecraft/class_5294", "net/minecraft/client/render/DimensionEffects", "net/minecraft/src/C_4112_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.DimensionEffects#BY_IDENTIFIER
    [[maybe_unused]] static jobject get_field_BY_IDENTIFIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EFFECTS", "field_24609", "BY_IDENTIFIER", "f_108857_"), "Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.DimensionEffects#BY_IDENTIFIER
    [[maybe_unused]] static void set_field_BY_IDENTIFIER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EFFECTS", "field_24609", "BY_IDENTIFIER", "f_108857_"), "Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.DimensionEffects#rgba
    static jfloat get_field_rgba(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "sunriseCol", "field_24610", "rgba", "f_108858_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.DimensionEffects#rgba
    static void set_field_rgba(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "sunriseCol", "field_24610", "rgba", "f_108858_"), "[F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.DimensionEffects#cloudsHeight
    static jfloat get_field_cloudsHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "cloudLevel", "field_24611", "cloudsHeight", "f_108859_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.DimensionEffects#cloudsHeight
    static void set_field_cloudsHeight(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "cloudLevel", "field_24611", "cloudsHeight", "f_108859_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.DimensionEffects#alternateSkyColor
    static jboolean get_field_alternateSkyColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "hasGround", "field_24612", "alternateSkyColor", "f_108860_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.DimensionEffects#alternateSkyColor
    static void set_field_alternateSkyColor(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "hasGround", "field_24612", "alternateSkyColor", "f_108860_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.DimensionEffects#skyType
    static jobject get_field_skyType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "skyType", "field_25637", "skyType", "f_108861_"), "Lgeo$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.DimensionEffects#skyType
    static void set_field_skyType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "skyType", "field_25637", "skyType", "f_108861_"), "Lgeo$d;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.DimensionEffects#brightenLighting
    static jboolean get_field_brightenLighting(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "forceBrightLightmap", "field_24613", "brightenLighting", "f_108862_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.DimensionEffects#brightenLighting
    static void set_field_brightenLighting(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "forceBrightLightmap", "field_24613", "brightenLighting", "f_108862_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.DimensionEffects#darkened
    static jboolean get_field_darkened(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "constantAmbientLight", "field_25638", "darkened", "f_108863_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.DimensionEffects#darkened
    static void set_field_darkened(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "constantAmbientLight", "field_25638", "darkened", "f_108863_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_byDimensionType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forType", "method_28111", "byDimensionType", "m_108876_"), "(Ldwy;)Lgeo;");
    }

    static jobject byDimensionType(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_byDimensionType();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getFogColorOverride() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSunriseColor", "method_28109", "getFogColorOverride", "m_7518_"), "(FF)[F");
    }

    static jfloat getFogColorOverride(const jobject& obj, const jfloat& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_getFogColorOverride();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getCloudsHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getCloudHeight", "method_28108", "getCloudsHeight", "m_108871_"), "()F");
    }

    static jfloat getCloudsHeight(const jobject& obj) {
                
       const auto methodID = methodID_getCloudsHeight();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAlternateSkyColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasGround", "method_28113", "isAlternateSkyColor", "m_108882_"), "()Z");
    }

    static jboolean isAlternateSkyColor(const jobject& obj) {
                
       const auto methodID = methodID_isAlternateSkyColor();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_adjustFogColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBrightnessDependentFogColor", "method_28112", "adjustFogColor", "m_5927_"), "(Lexc;F)Lexc;");
    }

    static jobject adjustFogColor(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_adjustFogColor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_useThickFog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isFoggyAt", "method_28110", "useThickFog", "m_5781_"), "(II)Z");
    }

    static jboolean useThickFog(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_useThickFog();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSkyType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "skyType", "method_29992", "getSkyType", "m_108883_"), "()Lgeo$d;");
    }

    static jobject getSkyType(const jobject& obj) {
                
       const auto methodID = methodID_getSkyType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldBrightenLighting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "forceBrightLightmap", "method_28114", "shouldBrightenLighting", "m_108884_"), "()Z");
    }

    static jboolean shouldBrightenLighting(const jobject& obj) {
                
       const auto methodID = methodID_shouldBrightenLighting();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDarkened() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "constantAmbientLight", "method_29993", "isDarkened", "m_108885_"), "()Z");
    }

    static jboolean isDarkened(const jobject& obj) {
                
       const auto methodID = methodID_isDarkened();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_DIMENSIONEFFECTS_HPP