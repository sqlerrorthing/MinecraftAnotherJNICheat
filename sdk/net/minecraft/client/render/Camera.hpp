// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_CAMERA_HPP
#define NET_MINECRAFT_CLIENT_RENDER_CAMERA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.Camera
 * Remapped: ffy
 */
namespace Camera {
    static jclass findAlwaysSelf(JNIEnv* _env = MinecraftSDK::env) {
        return _env->FindClass(MinecraftSDK::getRemapped("ffy", "net/minecraft/client/Camera", "net/minecraft/class_4184", "net/minecraft/client/render/Camera", "net/minecraft/src/C_3373_"));
    };

    static jclass self(JNIEnv* _env = MinecraftSDK::env) {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = findAlwaysSelf(_env);
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.Camera#BASE_CAMERA_DISTANCE
    [[maybe_unused]] static jfloat get_field_BASE_CAMERA_DISTANCE(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        const auto fieldID = _env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_CAMERA_DISTANCE", "field_47841", "BASE_CAMERA_DISTANCE", "f_315635_"), "F");
        return _env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#BASE_CAMERA_DISTANCE
    [[maybe_unused]] static void set_field_BASE_CAMERA_DISTANCE(const jfloat &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        const auto fieldID = _env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_CAMERA_DISTANCE", "field_47841", "BASE_CAMERA_DISTANCE", "f_315635_"), "F");
        return _env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.Camera#HORIZONTAL
    [[maybe_unused]] static jobject get_field_HORIZONTAL(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        const auto fieldID = _env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FORWARDS", "field_52123", "HORIZONTAL", "f_337503_"), "Lorg/joml/Vector3f;");
        return _env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#HORIZONTAL
    [[maybe_unused]] static void set_field_HORIZONTAL(const jobject &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        const auto fieldID = _env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FORWARDS", "field_52123", "HORIZONTAL", "f_337503_"), "Lorg/joml/Vector3f;");
        return _env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.Camera#VERTICAL
    [[maybe_unused]] static jobject get_field_VERTICAL(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        const auto fieldID = _env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "UP", "field_52124", "VERTICAL", "f_336762_"), "Lorg/joml/Vector3f;");
        return _env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#VERTICAL
    [[maybe_unused]] static void set_field_VERTICAL(const jobject &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        const auto fieldID = _env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "UP", "field_52124", "VERTICAL", "f_336762_"), "Lorg/joml/Vector3f;");
        return _env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.Camera#DIAGONAL
    [[maybe_unused]] static jobject get_field_DIAGONAL(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        const auto fieldID = _env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LEFT", "field_52125", "DIAGONAL", "f_336682_"), "Lorg/joml/Vector3f;");
        return _env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#DIAGONAL
    [[maybe_unused]] static void set_field_DIAGONAL(const jobject &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        const auto fieldID = _env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LEFT", "field_52125", "DIAGONAL", "f_336682_"), "Lorg/joml/Vector3f;");
        return _env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#ready
    static jboolean get_field_ready(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "initialized", "field_18709", "ready", "f_90549_"), "Z");
        return _env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#ready
    static void set_field_ready(const jobject &obj, const jboolean &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "initialized", "field_18709", "ready", "f_90549_"), "Z");
        return _env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#area
    static jobject get_field_area(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "level", "field_18710", "area", "f_90550_"), "Ldcc;");
        return _env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#area
    static void set_field_area(const jobject &obj, const jobject &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "level", "field_18710", "area", "f_90550_"), "Ldcc;");
        return _env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#focusedEntity
    static jobject get_field_focusedEntity(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "entity", "field_18711", "focusedEntity", "f_90551_"), "Lbsr;");
        return _env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#focusedEntity
    static void set_field_focusedEntity(const jobject &obj, const jobject &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "entity", "field_18711", "focusedEntity", "f_90551_"), "Lbsr;");
        return _env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#pos
    static jobject get_field_pos(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "position", "field_18712", "pos", "f_90552_"), "Lexc;");
        return _env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#pos
    static void set_field_pos(const jobject &obj, const jobject &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "position", "field_18712", "pos", "f_90552_"), "Lexc;");
        return _env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#blockPos
    static jobject get_field_blockPos(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "blockPosition", "field_18713", "blockPos", "f_90553_"), "Ljd$a;");
        return _env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#blockPos
    static void set_field_blockPos(const jobject &obj, const jobject &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "blockPosition", "field_18713", "blockPos", "f_90553_"), "Ljd$a;");
        return _env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#horizontalPlane
    static jobject get_field_horizontalPlane(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "forwards", "field_18714", "horizontalPlane", "f_90554_"), "Lorg/joml/Vector3f;");
        return _env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#horizontalPlane
    static void set_field_horizontalPlane(const jobject &obj, const jobject &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "forwards", "field_18714", "horizontalPlane", "f_90554_"), "Lorg/joml/Vector3f;");
        return _env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#verticalPlane
    static jobject get_field_verticalPlane(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "up", "field_18715", "verticalPlane", "f_90555_"), "Lorg/joml/Vector3f;");
        return _env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#verticalPlane
    static void set_field_verticalPlane(const jobject &obj, const jobject &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "up", "field_18715", "verticalPlane", "f_90555_"), "Lorg/joml/Vector3f;");
        return _env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#diagonalPlane
    static jobject get_field_diagonalPlane(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "left", "field_18716", "diagonalPlane", "f_90556_"), "Lorg/joml/Vector3f;");
        return _env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#diagonalPlane
    static void set_field_diagonalPlane(const jobject &obj, const jobject &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "left", "field_18716", "diagonalPlane", "f_90556_"), "Lorg/joml/Vector3f;");
        return _env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#pitch
    static jfloat get_field_pitch(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "xRot", "field_18717", "pitch", "f_90557_"), "F");
        return _env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#pitch
    static void set_field_pitch(const jobject &obj, const jfloat &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "xRot", "field_18717", "pitch", "f_90557_"), "F");
        return _env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#yaw
    static jfloat get_field_yaw(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "yRot", "field_18718", "yaw", "f_90558_"), "F");
        return _env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#yaw
    static void set_field_yaw(const jobject &obj, const jfloat &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "yRot", "field_18718", "yaw", "f_90558_"), "F");
        return _env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#rotation
    static jobject get_field_rotation(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "rotation", "field_21518", "rotation", "f_90559_"), "Lorg/joml/Quaternionf;");
        return _env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#rotation
    static void set_field_rotation(const jobject &obj, const jobject &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "rotation", "field_21518", "rotation", "f_90559_"), "Lorg/joml/Quaternionf;");
        return _env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#thirdPerson
    static jboolean get_field_thirdPerson(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "detached", "field_18719", "thirdPerson", "f_90560_"), "Z");
        return _env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#thirdPerson
    static void set_field_thirdPerson(const jobject &obj, const jboolean &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "detached", "field_18719", "thirdPerson", "f_90560_"), "Z");
        return _env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#cameraY
    static jfloat get_field_cameraY(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "eyeHeight", "field_18721", "cameraY", "f_90562_"), "F");
        return _env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#cameraY
    static void set_field_cameraY(const jobject &obj, const jfloat &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "eyeHeight", "field_18721", "cameraY", "f_90562_"), "F");
        return _env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#lastCameraY
    static jfloat get_field_lastCameraY(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "eyeHeightOld", "field_18722", "lastCameraY", "f_90563_"), "F");
        return _env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#lastCameraY
    static void set_field_lastCameraY(const jobject &obj, const jfloat &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "eyeHeightOld", "field_18722", "lastCameraY", "f_90563_"), "F");
        return _env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Camera#lastTickDelta
    static jfloat get_field_lastTickDelta(const jobject &obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "partialTickTime", "field_47549", "lastTickDelta", "f_303114_"), "F");
        return _env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Camera#lastTickDelta
    static void set_field_lastTickDelta(const jobject &obj, const jfloat &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto fieldID = _env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "partialTickTime", "field_47549", "lastTickDelta", "f_303114_"), "F");
        return _env->SetFloatField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.Camera#field_32133
    [[maybe_unused]] static jfloat get_field_field_32133(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        const auto fieldID = _env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FOG_DISTANCE_SCALE", "field_32133", "field_32133", "f_167683_"), "F");
        return _env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.Camera#field_32133
    [[maybe_unused]] static void set_field_field_32133(const jfloat &value, JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        const auto fieldID = _env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FOG_DISTANCE_SCALE", "field_32133", "field_32133", "f_167683_"), "F");
        return _env->SetStaticFloatField(clazz, fieldID, value);
    };

    static jmethodID methodID_update(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setup", "method_19321", "update", "m_90575_"), "(Ldcc;Lbsr;ZZF)V");
    }

    static void update(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jboolean& arg3, const jfloat& arg4, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_update();
        _env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };

    static jmethodID methodID_updateEyeHeight(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_19317", "updateEyeHeight", "m_90565_"), "()V");
    }

    static void updateEyeHeight(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_updateEyeHeight();
        _env->CallVoidMethod(obj, methodID);
    };

    static jmethodID methodID_clipToSpace(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMaxZoom", "method_19318", "clipToSpace", "m_90566_"), "(F)F");
    }

    static jfloat clipToSpace(const jobject& obj, const jfloat& arg0, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_clipToSpace();
        return _env->CallFloatMethod(obj, methodID, arg0);
    };

    static jmethodID methodID_moveBy(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "move", "method_19324", "moveBy", "m_90568_"), "(FFF)V");
    }

    static void moveBy(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_moveBy();
        _env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };

    static jmethodID methodID_setRotation(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setRotation", "method_19325", "setRotation", "m_90572_"), "(FF)V");
    }

    static void setRotation(const jobject& obj, const jfloat& arg0, const jfloat& arg1, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_setRotation();
        _env->CallVoidMethod(obj, methodID, arg0, arg1);
    };

    static jmethodID methodID_setPos(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPosition", "method_19327", "setPos", "m_90584_"), "(DDD)V");
    }

    static void setPos(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_setPos();
        _env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };

    static jmethodID methodID__setPos(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPosition", "method_19322", "setPos", "m_90581_"), "(Lexc;)V");
    }

    static void _setPos(const jobject& obj, const jobject& arg0, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID__setPos();
        _env->CallVoidMethod(obj, methodID, arg0);
    };

    static jmethodID methodID_getPos(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getPosition", "method_19326", "getPos", "m_90583_"), "()Lexc;");
    }

    static jobject getPos(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_getPos();
        return _env->CallObjectMethod(obj, methodID);
    };

    static jmethodID methodID_getBlockPos(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getBlockPosition", "method_19328", "getBlockPos", "m_90588_"), "()Ljd;");
    }

    static jobject getBlockPos(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_getBlockPos();
        return _env->CallObjectMethod(obj, methodID);
    };

    static jmethodID methodID_getPitch(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getXRot", "method_19329", "getPitch", "m_90589_"), "()F");
    }

    static jfloat getPitch(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_getPitch();
        return _env->CallFloatMethod(obj, methodID);
    };

    static jmethodID methodID_getYaw(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getYRot", "method_19330", "getYaw", "m_90590_"), "()F");
    }

    static jfloat getYaw(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_getYaw();
        return _env->CallFloatMethod(obj, methodID);
    };

    static jmethodID methodID_getRotation(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "rotation", "method_23767", "getRotation", "m_253121_"), "()Lorg/joml/Quaternionf;");
    }

    static jobject getRotation(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_getRotation();
        return _env->CallObjectMethod(obj, methodID);
    };

    static jmethodID methodID_getFocusedEntity(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getEntity", "method_19331", "getFocusedEntity", "m_90592_"), "()Lbsr;");
    }

    static jobject getFocusedEntity(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_getFocusedEntity();
        return _env->CallObjectMethod(obj, methodID);
    };

    static jmethodID methodID_isReady(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "isInitialized", "method_19332", "isReady", "m_90593_"), "()Z");
    }

    static jboolean isReady(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_isReady();
        return _env->CallBooleanMethod(obj, methodID);
    };

    static jmethodID methodID_isThirdPerson(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isDetached", "method_19333", "isThirdPerson", "m_90594_"), "()Z");
    }

    static jboolean isThirdPerson(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_isThirdPerson();
        return _env->CallBooleanMethod(obj, methodID);
    };

    static jmethodID methodID_getProjection(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getNearPlane", "method_36425", "getProjection", "m_167684_"), "()Lffy$a;");
    }

    static jobject getProjection(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_getProjection();
        return _env->CallObjectMethod(obj, methodID);
    };

    static jmethodID methodID_getSubmersionType(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getFluidInCamera", "method_19334", "getSubmersionType", "m_167685_"), "()Lepg;");
    }

    static jobject getSubmersionType(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_getSubmersionType();
        return _env->CallObjectMethod(obj, methodID);
    };

    static jmethodID methodID_getHorizontalPlane(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getLookVector", "method_19335", "getHorizontalPlane", "m_253058_"), "()Lorg/joml/Vector3f;");
    }

    static jobject getHorizontalPlane(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_getHorizontalPlane();
        return _env->CallObjectMethod(obj, methodID);
    };

    static jmethodID methodID_getVerticalPlane(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getUpVector", "method_19336", "getVerticalPlane", "m_253028_"), "()Lorg/joml/Vector3f;");
    }

    static jobject getVerticalPlane(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_getVerticalPlane();
        return _env->CallObjectMethod(obj, methodID);
    };

    static jmethodID methodID_getDiagonalPlane(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getLeftVector", "method_35689", "getDiagonalPlane", "m_252775_"), "()Lorg/joml/Vector3f;");
    }

    static jobject getDiagonalPlane(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_getDiagonalPlane();
        return _env->CallObjectMethod(obj, methodID);
    };

    static jmethodID methodID_reset(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "reset", "method_19337", "reset", "m_90598_"), "()V");
    }

    static void reset(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_reset();
        _env->CallVoidMethod(obj, methodID);
    };

    static jmethodID methodID_getLastTickDelta(JNIEnv* _env = MinecraftSDK::env) {
        const auto clazz = self();
        return _env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getPartialTickTime", "method_55437", "getLastTickDelta", "m_306445_"), "()F");
    }

    static jfloat getLastTickDelta(const jobject& obj, JNIEnv* _env = MinecraftSDK::env) {
        const auto methodID = methodID_getLastTickDelta();
        return _env->CallFloatMethod(obj, methodID);
    };

};

#endif // NET_MINECRAFT_CLIENT_RENDER_CAMERA_HPP