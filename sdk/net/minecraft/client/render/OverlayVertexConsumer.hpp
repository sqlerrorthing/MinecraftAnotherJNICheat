// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_OVERLAYVERTEXCONSUMER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_OVERLAYVERTEXCONSUMER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.OverlayVertexConsumer
 * Remapped: fbj
 */
namespace OverlayVertexConsumer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fbj", "com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator", "net/minecraft/class_4583", "net/minecraft/client/render/OverlayVertexConsumer", "net/minecraft/src/C_3184_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.render.OverlayVertexConsumer#delegate
    static jobject get_field_delegate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "delegate", "field_20866", "delegate", "f_85867_"), "Lfbm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.OverlayVertexConsumer#delegate
    static void set_field_delegate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "delegate", "field_20866", "delegate", "f_85867_"), "Lfbm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.OverlayVertexConsumer#inverseTextureMatrix
    static jobject get_field_inverseTextureMatrix(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "cameraInversePose", "field_21053", "inverseTextureMatrix", "f_85868_"), "Lorg/joml/Matrix4f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.OverlayVertexConsumer#inverseTextureMatrix
    static void set_field_inverseTextureMatrix(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "cameraInversePose", "field_21053", "inverseTextureMatrix", "f_85868_"), "Lorg/joml/Matrix4f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.OverlayVertexConsumer#inverseNormalMatrix
    static jobject get_field_inverseNormalMatrix(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "normalInversePose", "field_21054", "inverseNormalMatrix", "f_85869_"), "Lorg/joml/Matrix3f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.OverlayVertexConsumer#inverseNormalMatrix
    static void set_field_inverseNormalMatrix(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "normalInversePose", "field_21054", "inverseNormalMatrix", "f_85869_"), "Lorg/joml/Matrix3f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.OverlayVertexConsumer#textureScale
    static jfloat get_field_textureScale(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "textureScale", "field_41091", "textureScale", "f_256811_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.OverlayVertexConsumer#textureScale
    static void set_field_textureScale(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "textureScale", "field_41091", "textureScale", "f_256811_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.OverlayVertexConsumer#normal
    static jobject get_field_normal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "worldPos", "field_52096", "normal", "f_336867_"), "Lorg/joml/Vector3f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.OverlayVertexConsumer#normal
    static void set_field_normal(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "worldPos", "field_52096", "normal", "f_336867_"), "Lorg/joml/Vector3f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.OverlayVertexConsumer#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "normal", "field_52097", "pos", "f_337657_"), "Lorg/joml/Vector3f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.OverlayVertexConsumer#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "normal", "field_52097", "pos", "f_337657_"), "Lorg/joml/Vector3f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.OverlayVertexConsumer#x
    static jfloat get_field_x(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "x", "field_20870", "x", "f_85870_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.OverlayVertexConsumer#x
    static void set_field_x(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "x", "field_20870", "x", "f_85870_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.OverlayVertexConsumer#y
    static jfloat get_field_y(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "y", "field_20871", "y", "f_85871_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.OverlayVertexConsumer#y
    static void set_field_y(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "y", "field_20871", "y", "f_85871_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.OverlayVertexConsumer#z
    static jfloat get_field_z(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "z", "field_20872", "z", "f_85872_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.OverlayVertexConsumer#z
    static void set_field_z(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "z", "field_20872", "z", "f_85872_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_vertex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addVertex", "method_22912", "vertex", "m_167146_"), "(FFF)Lfbm;");
    }

    static jobject vertex(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_vertex();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_color() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setColor", "method_1336", "color", "m_167129_"), "(IIII)Lfbm;");
    }

    static jobject color(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_color();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_texture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setUv", "method_22913", "texture", "m_167083_"), "(FF)Lfbm;");
    }

    static jobject texture(const jobject& obj, const jfloat& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_texture();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_overlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setUv1", "method_60796", "overlay", "m_338369_"), "(II)Lfbm;");
    }

    static jobject overlay(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_overlay();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_light() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setUv2", "method_22921", "light", "m_338813_"), "(II)Lfbm;");
    }

    static jobject light(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_light();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__normal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setNormal", "method_22914", "normal", "m_338525_"), "(FFF)Lfbm;");
    }

    static jobject _normal(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID__normal();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_OVERLAYVERTEXCONSUMER_HPP