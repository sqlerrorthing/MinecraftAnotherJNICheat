// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_RENDERLAYER$MULTIPHASEPARAMETERS$BUILDER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_RENDERLAYER$MULTIPHASEPARAMETERS$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder
 * Remapped: gfh$b$a
 */
namespace RenderLayer$MultiPhaseParameters$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gfh$b$a", "net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder", "net/minecraft/class_1921$class_4688$class_4689", "net/minecraft/client/render/RenderLayer$MultiPhaseParameters$Builder", "net/minecraft/src/C_4168_$C_4172_$C_4173_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#texture
    static jobject get_field_texture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "textureState", "field_29462", "texture", "f_110641_"), "Lgfg$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#texture
    static void set_field_texture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "textureState", "field_29462", "texture", "f_110641_"), "Lgfg$e;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#program
    static jobject get_field_program(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "shaderState", "field_29463", "program", "f_173289_"), "Lgfg$m;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#program
    static void set_field_program(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "shaderState", "field_29463", "program", "f_173289_"), "Lgfg$m;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#transparency
    static jobject get_field_transparency(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "transparencyState", "field_21424", "transparency", "f_110642_"), "Lgfg$p;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#transparency
    static void set_field_transparency(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "transparencyState", "field_21424", "transparency", "f_110642_"), "Lgfg$p;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#depthTest
    static jobject get_field_depthTest(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "depthTestState", "field_21428", "depthTest", "f_110646_"), "Lgfg$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#depthTest
    static void set_field_depthTest(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "depthTestState", "field_21428", "depthTest", "f_110646_"), "Lgfg$d;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#cull
    static jobject get_field_cull(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "cullState", "field_21429", "cull", "f_110647_"), "Lgfg$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#cull
    static void set_field_cull(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "cullState", "field_21429", "cull", "f_110647_"), "Lgfg$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#lightmap
    static jobject get_field_lightmap(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lightmapState", "field_21430", "lightmap", "f_110648_"), "Lgfg$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#lightmap
    static void set_field_lightmap(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lightmapState", "field_21430", "lightmap", "f_110648_"), "Lgfg$g;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#overlay
    static jobject get_field_overlay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "overlayState", "field_21431", "overlay", "f_110649_"), "Lgfg$l;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#overlay
    static void set_field_overlay(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "overlayState", "field_21431", "overlay", "f_110649_"), "Lgfg$l;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#layering
    static jobject get_field_layering(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "layeringState", "field_21433", "layering", "f_110651_"), "Lgfg$f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#layering
    static void set_field_layering(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "layeringState", "field_21433", "layering", "f_110651_"), "Lgfg$f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#target
    static jobject get_field_target(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "outputState", "field_21434", "target", "f_110652_"), "Lgfg$k;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#target
    static void set_field_target(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "outputState", "field_21434", "target", "f_110652_"), "Lgfg$k;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#texturing
    static jobject get_field_texturing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "texturingState", "field_21435", "texturing", "f_110653_"), "Lgfg$o;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#texturing
    static void set_field_texturing(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "texturingState", "field_21435", "texturing", "f_110653_"), "Lgfg$o;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#writeMaskState
    static jobject get_field_writeMaskState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "writeMaskState", "field_21436", "writeMaskState", "f_110654_"), "Lgfg$q;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#writeMaskState
    static void set_field_writeMaskState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "writeMaskState", "field_21436", "writeMaskState", "f_110654_"), "Lgfg$q;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#lineWidth
    static jobject get_field_lineWidth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "lineState", "field_21437", "lineWidth", "f_110655_"), "Lgfg$h;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#lineWidth
    static void set_field_lineWidth(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "lineState", "field_21437", "lineWidth", "f_110655_"), "Lgfg$h;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#colorLogic
    static jobject get_field_colorLogic(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "colorLogicState", "field_44826", "colorLogic", "f_285600_"), "Lgfg$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.RenderLayer$MultiPhaseParameters$Builder#colorLogic
    static void set_field_colorLogic(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "colorLogicState", "field_44826", "colorLogic", "f_285600_"), "Lgfg$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID__texture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setTextureState", "method_34577", "texture", "m_173290_"), "(Lgfg$e;)Lgfh$b$a;");
    }

    static jobject _texture(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__texture();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__program() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setShaderState", "method_34578", "program", "m_173292_"), "(Lgfg$m;)Lgfh$b$a;");
    }

    static jobject _program(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__program();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__transparency() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setTransparencyState", "method_23615", "transparency", "m_110685_"), "(Lgfg$p;)Lgfh$b$a;");
    }

    static jobject _transparency(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__transparency();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__depthTest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDepthTestState", "method_23604", "depthTest", "m_110663_"), "(Lgfg$d;)Lgfh$b$a;");
    }

    static jobject _depthTest(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__depthTest();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__cull() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCullState", "method_23603", "cull", "m_110661_"), "(Lgfg$c;)Lgfh$b$a;");
    }

    static jobject _cull(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__cull();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__lightmap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLightmapState", "method_23608", "lightmap", "m_110671_"), "(Lgfg$g;)Lgfh$b$a;");
    }

    static jobject _lightmap(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__lightmap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__overlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOverlayState", "method_23611", "overlay", "m_110677_"), "(Lgfg$l;)Lgfh$b$a;");
    }

    static jobject _overlay(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__overlay();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__layering() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLayeringState", "method_23607", "layering", "m_110669_"), "(Lgfg$f;)Lgfh$b$a;");
    }

    static jobject _layering(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__layering();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__target() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOutputState", "method_23610", "target", "m_110675_"), "(Lgfg$k;)Lgfh$b$a;");
    }

    static jobject _target(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__target();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__texturing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setTexturingState", "method_23614", "texturing", "m_110683_"), "(Lgfg$o;)Lgfh$b$a;");
    }

    static jobject _texturing(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__texturing();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__writeMaskState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWriteMaskState", "method_23616", "writeMaskState", "m_110687_"), "(Lgfg$q;)Lgfh$b$a;");
    }

    static jobject _writeMaskState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__writeMaskState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__lineWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLineState", "method_23609", "lineWidth", "m_110673_"), "(Lgfg$h;)Lgfh$b$a;");
    }

    static jobject _lineWidth(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__lineWidth();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__colorLogic() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setColorLogicState", "method_51788", "colorLogic", "m_286027_"), "(Lgfg$b;)Lgfh$b$a;");
    }

    static jobject _colorLogic(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__colorLogic();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createCompositeState", "method_23617", "build", "m_110691_"), "(Z)Lgfh$b;");
    }

    static jobject build(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createCompositeState", "method_24297", "build", "m_110689_"), "(Lgfh$c;)Lgfh$b;");
    }

    static jobject _build(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_RENDERLAYER$MULTIPHASEPARAMETERS$BUILDER_HPP