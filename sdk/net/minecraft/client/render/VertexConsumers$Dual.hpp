// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_VERTEXCONSUMERS$DUAL_HPP
#define NET_MINECRAFT_CLIENT_RENDER_VERTEXCONSUMERS$DUAL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.VertexConsumers$Dual
 * Remapped: fbp$a
 */
namespace VertexConsumers$Dual {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fbp$a", "com/mojang/blaze3d/vertex/VertexMultiConsumer$Double", "net/minecraft/class_4720$class_4589", "net/minecraft/client/render/VertexConsumers$Dual", "net/minecraft/src/C_3193_$C_3194_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.render.VertexConsumers$Dual#first
    static jobject get_field_first(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "first", "field_21685", "first", "f_86171_"), "Lfbm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.VertexConsumers$Dual#first
    static void set_field_first(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "first", "field_21685", "first", "f_86171_"), "Lfbm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.VertexConsumers$Dual#second
    static jobject get_field_second(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "second", "field_21686", "second", "f_86172_"), "Lfbm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.VertexConsumers$Dual#second
    static void set_field_second(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "second", "field_21686", "second", "f_86172_"), "Lfbm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_vertex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addVertex", "method_22912", "vertex", "m_167146_"), "(FFF)Lfbm;");
    }

    static jobject vertex(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_vertex();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_color() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setColor", "method_1336", "color", "m_167129_"), "(IIII)Lfbm;");
    }

    static jobject color(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_color();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_texture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setUv", "method_22913", "texture", "m_167083_"), "(FF)Lfbm;");
    }

    static jobject texture(const jobject& obj, const jfloat& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_texture();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_overlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setUv1", "method_60796", "overlay", "m_338369_"), "(II)Lfbm;");
    }

    static jobject overlay(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_overlay();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_light() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setUv2", "method_22921", "light", "m_338813_"), "(II)Lfbm;");
    }

    static jobject light(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_light();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_normal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setNormal", "method_22914", "normal", "m_338525_"), "(FFF)Lfbm;");
    }

    static jobject normal(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_normal();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__vertex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addVertex", "method_23919", "vertex", "m_338367_"), "(FFFIFFIIFFF)V");
    }

    static void _vertex(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2, const jint& arg3, const jfloat& arg4, const jfloat& arg5, const jint& arg6, const jint& arg7, const jfloat& arg8, const jfloat& arg9, const jfloat& arg10) {
                
       const auto methodID = methodID__vertex();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_VERTEXCONSUMERS$DUAL_HPP