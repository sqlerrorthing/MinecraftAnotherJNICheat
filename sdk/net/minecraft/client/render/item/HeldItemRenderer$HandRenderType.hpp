// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_ITEM_HELDITEMRENDERER$HANDRENDERTYPE_HPP
#define NET_MINECRAFT_CLIENT_RENDER_ITEM_HELDITEMRENDERER$HANDRENDERTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.item.HeldItemRenderer$HandRenderType
 * Remapped: gev$a
 */
namespace HeldItemRenderer$HandRenderType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gev$a", "net/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection", "net/minecraft/class_759$class_5773", "net/minecraft/client/render/item/HeldItemRenderer$HandRenderType", "net/minecraft/src/C_4131_$C_141715_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.render.item.HeldItemRenderer$HandRenderType#RENDER_BOTH_HANDS
    [[maybe_unused]] static jobject get_field_RENDER_BOTH_HANDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RENDER_BOTH_HANDS", "field_28384", "RENDER_BOTH_HANDS", "RENDER_BOTH_HANDS"), "Lgev$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.item.HeldItemRenderer$HandRenderType#RENDER_BOTH_HANDS
    [[maybe_unused]] static void set_field_RENDER_BOTH_HANDS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RENDER_BOTH_HANDS", "field_28384", "RENDER_BOTH_HANDS", "RENDER_BOTH_HANDS"), "Lgev$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.item.HeldItemRenderer$HandRenderType#RENDER_MAIN_HAND_ONLY
    [[maybe_unused]] static jobject get_field_RENDER_MAIN_HAND_ONLY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RENDER_MAIN_HAND_ONLY", "field_28385", "RENDER_MAIN_HAND_ONLY", "RENDER_MAIN_HAND_ONLY"), "Lgev$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.item.HeldItemRenderer$HandRenderType#RENDER_MAIN_HAND_ONLY
    [[maybe_unused]] static void set_field_RENDER_MAIN_HAND_ONLY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RENDER_MAIN_HAND_ONLY", "field_28385", "RENDER_MAIN_HAND_ONLY", "RENDER_MAIN_HAND_ONLY"), "Lgev$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.item.HeldItemRenderer$HandRenderType#RENDER_OFF_HAND_ONLY
    [[maybe_unused]] static jobject get_field_RENDER_OFF_HAND_ONLY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RENDER_OFF_HAND_ONLY", "field_28386", "RENDER_OFF_HAND_ONLY", "RENDER_OFF_HAND_ONLY"), "Lgev$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.item.HeldItemRenderer$HandRenderType#RENDER_OFF_HAND_ONLY
    [[maybe_unused]] static void set_field_RENDER_OFF_HAND_ONLY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RENDER_OFF_HAND_ONLY", "field_28386", "RENDER_OFF_HAND_ONLY", "RENDER_OFF_HAND_ONLY"), "Lgev$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.client.render.item.HeldItemRenderer$HandRenderType#renderMainHand
    static jboolean get_field_renderMainHand(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "renderMainHand", "field_28387", "renderMainHand", "f_172921_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.item.HeldItemRenderer$HandRenderType#renderMainHand
    static void set_field_renderMainHand(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "renderMainHand", "field_28387", "renderMainHand", "f_172921_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.render.item.HeldItemRenderer$HandRenderType#renderOffHand
    static jboolean get_field_renderOffHand(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "renderOffHand", "field_28388", "renderOffHand", "f_172922_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.item.HeldItemRenderer$HandRenderType#renderOffHand
    static void set_field_renderOffHand(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "renderOffHand", "field_28388", "renderOffHand", "f_172922_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lgev$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lgev$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_shouldOnlyRender() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "onlyForHand", "method_33305", "shouldOnlyRender", "m_172931_"), "(Lbqq;)Lgev$a;");
    }

    static jobject shouldOnlyRender(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_shouldOnlyRender();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_ITEM_HELDITEMRENDERER$HANDRENDERTYPE_HPP