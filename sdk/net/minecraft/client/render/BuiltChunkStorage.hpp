// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_BUILTCHUNKSTORAGE_HPP
#define NET_MINECRAFT_CLIENT_RENDER_BUILTCHUNKSTORAGE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.BuiltChunkStorage
 * Remapped: gfq
 */
namespace BuiltChunkStorage {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gfq", "net/minecraft/client/renderer/ViewArea", "net/minecraft/class_769", "net/minecraft/client/render/BuiltChunkStorage", "net/minecraft/src/C_4180_"));
        }
        return cachedClass;
    };

    // getter for protected field net.minecraft.client.render.BuiltChunkStorage#worldRenderer
    static jobject get_field_worldRenderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "levelRenderer", "field_4146", "worldRenderer", "f_110838_"), "Lgex;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.BuiltChunkStorage#worldRenderer
    static void set_field_worldRenderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "levelRenderer", "field_4146", "worldRenderer", "f_110838_"), "Lgex;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.BuiltChunkStorage#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "level", "field_4151", "world", "f_110839_"), "Ldcw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.BuiltChunkStorage#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "level", "field_4151", "world", "f_110839_"), "Ldcw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.BuiltChunkStorage#sizeY
    static jint get_field_sizeY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "sectionGridSizeY", "field_4149", "sizeY", "f_291207_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.BuiltChunkStorage#sizeY
    static void set_field_sizeY(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "sectionGridSizeY", "field_4149", "sizeY", "f_291207_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.BuiltChunkStorage#sizeX
    static jint get_field_sizeX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "sectionGridSizeX", "field_4148", "sizeX", "f_291809_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.BuiltChunkStorage#sizeX
    static void set_field_sizeX(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "sectionGridSizeX", "field_4148", "sizeX", "f_291809_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.BuiltChunkStorage#sizeZ
    static jint get_field_sizeZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "sectionGridSizeZ", "field_4147", "sizeZ", "f_290583_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.BuiltChunkStorage#sizeZ
    static void set_field_sizeZ(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "sectionGridSizeZ", "field_4147", "sizeZ", "f_290583_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BuiltChunkStorage#viewDistance
    static jint get_field_viewDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "viewDistance", "field_45629", "viewDistance", "f_291500_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BuiltChunkStorage#viewDistance
    static void set_field_viewDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "viewDistance", "field_45629", "viewDistance", "f_291500_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.BuiltChunkStorage#chunks
    static jobject get_field_chunks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "sections", "field_4150", "chunks", "f_291707_"), "[Lgia$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.BuiltChunkStorage#chunks
    static void set_field_chunks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "sections", "field_4150", "chunks", "f_291707_"), "[Lgia$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_createChunks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createSections", "method_3324", "createChunks", "m_294128_"), "(Lgia;)V");
    }

    static void createChunks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createChunks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "releaseAllBuffers", "method_3327", "clear", "m_110849_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChunkIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSectionIndex", "method_3326", "getChunkIndex", "m_293962_"), "(III)I");
    }

    static jint getChunkIndex(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_getChunkIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setViewDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setViewDistance", "method_3325", "setViewDistance", "m_110853_"), "(I)V");
    }

    static void setViewDistance(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setViewDistance();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getViewDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getViewDistance", "method_52839", "getViewDistance", "m_295654_"), "()I");
    }

    static jint getViewDistance(const jobject& obj) {
                
       const auto methodID = methodID_getViewDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getLevelHeightAccessor", "method_52840", "getWorld", "m_294982_"), "()Ldcy;");
    }

    static jobject getWorld(const jobject& obj) {
                
       const auto methodID = methodID_getWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateCameraPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "repositionCamera", "method_3330", "updateCameraPosition", "m_110850_"), "(DD)V");
    }

    static void updateCameraPosition(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_updateCameraPosition();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_scheduleRebuild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDirty", "method_16040", "scheduleRebuild", "m_110859_"), "(IIIZ)V");
    }

    static void scheduleRebuild(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_scheduleRebuild();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getRenderedChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRenderSectionAt", "method_3323", "getRenderedChunk", "m_292642_"), "(Ljd;)Lgia$b;");
    }

    static jobject getRenderedChunk(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getRenderedChunk();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_BUILTCHUNKSTORAGE_HPP