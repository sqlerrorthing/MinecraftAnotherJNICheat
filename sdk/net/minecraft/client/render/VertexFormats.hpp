// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_VERTEXFORMATS_HPP
#define NET_MINECRAFT_CLIENT_RENDER_VERTEXFORMATS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.VertexFormats
 * Remapped: fbg
 */
namespace VertexFormats {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fbg", "com/mojang/blaze3d/vertex/DefaultVertexFormat", "net/minecraft/class_290", "net/minecraft/client/render/VertexFormats", "net/minecraft/src/C_3179_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#BLIT_SCREEN
    [[maybe_unused]] static jobject get_field_BLIT_SCREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLIT_SCREEN", "field_29336", "BLIT_SCREEN", "f_166850_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#BLIT_SCREEN
    [[maybe_unused]] static void set_field_BLIT_SCREEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLIT_SCREEN", "field_29336", "BLIT_SCREEN", "f_166850_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#POSITION_COLOR_TEXTURE_LIGHT_NORMAL
    [[maybe_unused]] static jobject get_field_POSITION_COLOR_TEXTURE_LIGHT_NORMAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BLOCK", "field_1590", "POSITION_COLOR_TEXTURE_LIGHT_NORMAL", "f_85811_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#POSITION_COLOR_TEXTURE_LIGHT_NORMAL
    [[maybe_unused]] static void set_field_POSITION_COLOR_TEXTURE_LIGHT_NORMAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BLOCK", "field_1590", "POSITION_COLOR_TEXTURE_LIGHT_NORMAL", "f_85811_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#POSITION_COLOR_TEXTURE_OVERLAY_LIGHT_NORMAL
    [[maybe_unused]] static jobject get_field_POSITION_COLOR_TEXTURE_OVERLAY_LIGHT_NORMAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NEW_ENTITY", "field_1580", "POSITION_COLOR_TEXTURE_OVERLAY_LIGHT_NORMAL", "f_85812_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#POSITION_COLOR_TEXTURE_OVERLAY_LIGHT_NORMAL
    [[maybe_unused]] static void set_field_POSITION_COLOR_TEXTURE_OVERLAY_LIGHT_NORMAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NEW_ENTITY", "field_1580", "POSITION_COLOR_TEXTURE_OVERLAY_LIGHT_NORMAL", "f_85812_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#POSITION_TEXTURE_COLOR_LIGHT
    [[maybe_unused]] static jobject get_field_POSITION_TEXTURE_COLOR_LIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PARTICLE", "field_1584", "POSITION_TEXTURE_COLOR_LIGHT", "f_85813_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#POSITION_TEXTURE_COLOR_LIGHT
    [[maybe_unused]] static void set_field_POSITION_TEXTURE_COLOR_LIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PARTICLE", "field_1584", "POSITION_TEXTURE_COLOR_LIGHT", "f_85813_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#POSITION
    [[maybe_unused]] static jobject get_field_POSITION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "POSITION", "field_1592", "POSITION", "f_85814_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#POSITION
    [[maybe_unused]] static void set_field_POSITION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "POSITION", "field_1592", "POSITION", "f_85814_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#POSITION_COLOR
    [[maybe_unused]] static jobject get_field_POSITION_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "POSITION_COLOR", "field_1576", "POSITION_COLOR", "f_85815_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#POSITION_COLOR
    [[maybe_unused]] static void set_field_POSITION_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "POSITION_COLOR", "field_1576", "POSITION_COLOR", "f_85815_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#LINES
    [[maybe_unused]] static jobject get_field_LINES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "POSITION_COLOR_NORMAL", "field_29337", "LINES", "f_166851_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#LINES
    [[maybe_unused]] static void set_field_LINES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "POSITION_COLOR_NORMAL", "field_29337", "LINES", "f_166851_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#POSITION_COLOR_LIGHT
    [[maybe_unused]] static jobject get_field_POSITION_COLOR_LIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "POSITION_COLOR_LIGHTMAP", "field_21468", "POSITION_COLOR_LIGHT", "f_85816_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#POSITION_COLOR_LIGHT
    [[maybe_unused]] static void set_field_POSITION_COLOR_LIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "POSITION_COLOR_LIGHTMAP", "field_21468", "POSITION_COLOR_LIGHT", "f_85816_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#POSITION_TEXTURE
    [[maybe_unused]] static jobject get_field_POSITION_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "POSITION_TEX", "field_1585", "POSITION_TEXTURE", "f_85817_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#POSITION_TEXTURE
    [[maybe_unused]] static void set_field_POSITION_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "POSITION_TEX", "field_1585", "POSITION_TEXTURE", "f_85817_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#POSITION_TEXTURE_COLOR
    [[maybe_unused]] static jobject get_field_POSITION_TEXTURE_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "POSITION_TEX_COLOR", "field_1575", "POSITION_TEXTURE_COLOR", "f_85819_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#POSITION_TEXTURE_COLOR
    [[maybe_unused]] static void set_field_POSITION_TEXTURE_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "POSITION_TEX_COLOR", "field_1575", "POSITION_TEXTURE_COLOR", "f_85819_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#POSITION_COLOR_TEXTURE_LIGHT
    [[maybe_unused]] static jobject get_field_POSITION_COLOR_TEXTURE_LIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "POSITION_COLOR_TEX_LIGHTMAP", "field_20888", "POSITION_COLOR_TEXTURE_LIGHT", "f_85820_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#POSITION_COLOR_TEXTURE_LIGHT
    [[maybe_unused]] static void set_field_POSITION_COLOR_TEXTURE_LIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "POSITION_COLOR_TEX_LIGHTMAP", "field_20888", "POSITION_COLOR_TEXTURE_LIGHT", "f_85820_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#POSITION_TEXTURE_LIGHT_COLOR
    [[maybe_unused]] static jobject get_field_POSITION_TEXTURE_LIGHT_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "POSITION_TEX_LIGHTMAP_COLOR", "field_1586", "POSITION_TEXTURE_LIGHT_COLOR", "f_85821_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#POSITION_TEXTURE_LIGHT_COLOR
    [[maybe_unused]] static void set_field_POSITION_TEXTURE_LIGHT_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "POSITION_TEX_LIGHTMAP_COLOR", "field_1586", "POSITION_TEXTURE_LIGHT_COLOR", "f_85821_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.VertexFormats#POSITION_TEXTURE_COLOR_NORMAL
    [[maybe_unused]] static jobject get_field_POSITION_TEXTURE_COLOR_NORMAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "POSITION_TEX_COLOR_NORMAL", "field_1577", "POSITION_TEXTURE_COLOR_NORMAL", "f_85822_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormats#POSITION_TEXTURE_COLOR_NORMAL
    [[maybe_unused]] static void set_field_POSITION_TEXTURE_COLOR_NORMAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "POSITION_TEX_COLOR_NORMAL", "field_1577", "POSITION_TEXTURE_COLOR_NORMAL", "f_85822_"), "Lfbn;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

};

#endif // NET_MINECRAFT_CLIENT_RENDER_VERTEXFORMATS_HPP