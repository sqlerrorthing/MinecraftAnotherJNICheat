// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_ENTITY_ENTITYRENDERERS_HPP
#define NET_MINECRAFT_CLIENT_RENDER_ENTITY_ENTITYRENDERERS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.entity.EntityRenderers
 * Remapped: gkk
 */
namespace EntityRenderers {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gkk", "net/minecraft/client/renderer/entity/EntityRenderers", "net/minecraft/class_5619", "net/minecraft/client/render/entity/EntityRenderers", "net/minecraft/src/C_141744_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.entity.EntityRenderers#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_27767", "LOGGER", "f_174030_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.EntityRenderers#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_27767", "LOGGER", "f_174030_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.EntityRenderers#RENDERER_FACTORIES
    [[maybe_unused]] static jobject get_field_RENDERER_FACTORIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PROVIDERS", "field_27768", "RENDERER_FACTORIES", "f_174031_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.EntityRenderers#RENDERER_FACTORIES
    [[maybe_unused]] static void set_field_RENDERER_FACTORIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PROVIDERS", "field_27768", "RENDERER_FACTORIES", "f_174031_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.EntityRenderers#PLAYER_RENDERER_FACTORIES
    [[maybe_unused]] static jobject get_field_PLAYER_RENDERER_FACTORIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PLAYER_PROVIDERS", "field_27769", "PLAYER_RENDERER_FACTORIES", "f_174032_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.EntityRenderers#PLAYER_RENDERER_FACTORIES
    [[maybe_unused]] static void set_field_PLAYER_RENDERER_FACTORIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PLAYER_PROVIDERS", "field_27769", "PLAYER_RENDERER_FACTORIES", "f_174032_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_32173", "register", "m_174036_"), "(Lbsx;Lgkj;)V");
    }

    static void register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_reloadEntityRenderers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createEntityRenderers", "method_32176", "reloadEntityRenderers", "m_174049_"), "(Lgkj$a;)Ljava/util/Map;");
    }

    static jobject reloadEntityRenderers(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_reloadEntityRenderers();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_reloadPlayerRenderers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createPlayerRenderers", "method_32177", "reloadPlayerRenderers", "m_174051_"), "(Lgkj$a;)Ljava/util/Map;");
    }

    static jobject reloadPlayerRenderers(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_reloadPlayerRenderers();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isMissingRendererFactories() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validateRegistrations", "method_32172", "isMissingRendererFactories", "m_174035_"), "()Z");
    }

    static jboolean isMissingRendererFactories() {
       const auto clazz = self();
       const auto methodID = methodID_isMissingRendererFactories();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_ENTITY_ENTITYRENDERERS_HPP