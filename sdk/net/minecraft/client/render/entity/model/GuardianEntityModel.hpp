// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_ENTITY_MODEL_GUARDIANENTITYMODEL_HPP
#define NET_MINECRAFT_CLIENT_RENDER_ENTITY_MODEL_GUARDIANENTITYMODEL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.entity.model.GuardianEntityModel
 * Remapped: fvr
 */
namespace GuardianEntityModel {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fvr", "net/minecraft/client/model/GuardianModel", "net/minecraft/class_570", "net/minecraft/client/render/entity/model/GuardianEntityModel", "net/minecraft/src/C_3824_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#SPIKE_PITCHES
    [[maybe_unused]] static jfloat get_field_SPIKE_PITCHES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPIKE_X_ROT", "field_17131", "SPIKE_PITCHES", "f_102695_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#SPIKE_PITCHES
    [[maybe_unused]] static void set_field_SPIKE_PITCHES(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPIKE_X_ROT", "field_17131", "SPIKE_PITCHES", "f_102695_"), "[F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#SPIKE_YAWS
    [[maybe_unused]] static jfloat get_field_SPIKE_YAWS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPIKE_Y_ROT", "field_17132", "SPIKE_YAWS", "f_102696_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#SPIKE_YAWS
    [[maybe_unused]] static void set_field_SPIKE_YAWS(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPIKE_Y_ROT", "field_17132", "SPIKE_YAWS", "f_102696_"), "[F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#SPIKE_ROLLS
    [[maybe_unused]] static jfloat get_field_SPIKE_ROLLS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SPIKE_Z_ROT", "field_17133", "SPIKE_ROLLS", "f_102697_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#SPIKE_ROLLS
    [[maybe_unused]] static void set_field_SPIKE_ROLLS(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SPIKE_Z_ROT", "field_17133", "SPIKE_ROLLS", "f_102697_"), "[F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#SPIKE_PIVOTS_X
    [[maybe_unused]] static jfloat get_field_SPIKE_PIVOTS_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SPIKE_X", "field_17134", "SPIKE_PIVOTS_X", "f_102698_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#SPIKE_PIVOTS_X
    [[maybe_unused]] static void set_field_SPIKE_PIVOTS_X(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SPIKE_X", "field_17134", "SPIKE_PIVOTS_X", "f_102698_"), "[F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#SPIKE_PIVOTS_Y
    [[maybe_unused]] static jfloat get_field_SPIKE_PIVOTS_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SPIKE_Y", "field_17135", "SPIKE_PIVOTS_Y", "f_102699_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#SPIKE_PIVOTS_Y
    [[maybe_unused]] static void set_field_SPIKE_PIVOTS_Y(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SPIKE_Y", "field_17135", "SPIKE_PIVOTS_Y", "f_102699_"), "[F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#SPIKE_PIVOTS_Z
    [[maybe_unused]] static jfloat get_field_SPIKE_PIVOTS_Z() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SPIKE_Z", "field_17136", "SPIKE_PIVOTS_Z", "f_102700_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#SPIKE_PIVOTS_Z
    [[maybe_unused]] static void set_field_SPIKE_PIVOTS_Z(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SPIKE_Z", "field_17136", "SPIKE_PIVOTS_Z", "f_102700_"), "[F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#EYE
    [[maybe_unused]] static jobject get_field_EYE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "EYE", "field_32480", "EYE", "f_170594_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#EYE
    [[maybe_unused]] static void set_field_EYE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "EYE", "field_32480", "EYE", "f_170594_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#TAIL0
    [[maybe_unused]] static jobject get_field_TAIL0() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "TAIL_0", "field_32481", "TAIL0", "f_170595_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#TAIL0
    [[maybe_unused]] static void set_field_TAIL0(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "TAIL_0", "field_32481", "TAIL0", "f_170595_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#TAIL1
    [[maybe_unused]] static jobject get_field_TAIL1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "TAIL_1", "field_32482", "TAIL1", "f_170596_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#TAIL1
    [[maybe_unused]] static void set_field_TAIL1(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "TAIL_1", "field_32482", "TAIL1", "f_170596_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#TAIL2
    [[maybe_unused]] static jobject get_field_TAIL2() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "TAIL_2", "field_32483", "TAIL2", "f_170597_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#TAIL2
    [[maybe_unused]] static void set_field_TAIL2(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "TAIL_2", "field_32483", "TAIL2", "f_170597_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.entity.model.GuardianEntityModel#root
    static jobject get_field_root(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "root", "field_27420", "root", "f_170598_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#root
    static void set_field_root(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "root", "field_27420", "root", "f_170598_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.entity.model.GuardianEntityModel#head
    static jobject get_field_head(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "head", "field_3379", "head", "f_102701_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#head
    static void set_field_head(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "head", "field_3379", "head", "f_102701_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.entity.model.GuardianEntityModel#eye
    static jobject get_field_eye(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "eye", "field_3381", "eye", "f_102702_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#eye
    static void set_field_eye(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "eye", "field_3381", "eye", "f_102702_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.entity.model.GuardianEntityModel#spikes
    static jobject get_field_spikes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "spikeParts", "field_3380", "spikes", "f_102703_"), "[Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#spikes
    static void set_field_spikes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "spikeParts", "field_3380", "spikes", "f_102703_"), "[Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.entity.model.GuardianEntityModel#tail
    static jobject get_field_tail(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "tailParts", "field_3378", "tail", "f_102704_"), "[Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.GuardianEntityModel#tail
    static void set_field_tail(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "tailParts", "field_3378", "tail", "f_102704_"), "[Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getSpikeName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createSpikeName", "method_32003", "getSpikeName", "m_170602_"), "(I)Ljava/lang/String;");
    }

    static jobject getSpikeName(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getSpikeName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTexturedModelData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createBodyLayer", "method_32002", "getTexturedModelData", "m_170601_"), "()Lfyq;");
    }

    static jobject getTexturedModelData() {
       const auto clazz = self();
       const auto methodID = methodID_getTexturedModelData();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getPart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "root", "method_32008", "getPart", "m_142109_"), "()Lfyk;");
    }

    static jobject getPart(const jobject& obj) {
                
       const auto methodID = methodID_getPart();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setAngles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupAnim", "method_17083", "setAngles", "m_6973_"), "(Lcjz;FFFFF)V");
    }

    static void setAngles(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jfloat& arg2, const jfloat& arg3, const jfloat& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID_setAngles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_updateSpikeExtensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupSpikes", "method_24185", "updateSpikeExtensions", "m_102708_"), "(FF)V");
    }

    static void updateSpikeExtensions(const jobject& obj, const jfloat& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_updateSpikeExtensions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpikeOffset", "method_32004", "getAngle", "m_170604_"), "(IFF)F");
    }

    static jfloat getAngle(const jint& arg0, const jfloat& arg1, const jfloat& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getAngle();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getSpikePivotX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getSpikeX", "method_32005", "getSpikePivotX", "m_170609_"), "(IFF)F");
    }

    static jfloat getSpikePivotX(const jint& arg0, const jfloat& arg1, const jfloat& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getSpikePivotX();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getSpikePivotY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getSpikeY", "method_32006", "getSpikePivotY", "m_170613_"), "(IFF)F");
    }

    static jfloat getSpikePivotY(const jint& arg0, const jfloat& arg1, const jfloat& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getSpikePivotY();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getSpikePivotZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getSpikeZ", "method_32007", "getSpikePivotZ", "m_170617_"), "(IFF)F");
    }

    static jfloat getSpikePivotZ(const jint& arg0, const jfloat& arg1, const jfloat& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getSpikePivotZ();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_ENTITY_MODEL_GUARDIANENTITYMODEL_HPP