// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_ENTITY_MODEL_RAFTENTITYMODEL_HPP
#define NET_MINECRAFT_CLIENT_RENDER_ENTITY_MODEL_RAFTENTITYMODEL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.entity.model.RaftEntityModel
 * Remapped: fww
 */
namespace RaftEntityModel {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fww", "net/minecraft/client/model/RaftModel", "net/minecraft/class_7754", "net/minecraft/client/render/entity/model/RaftEntityModel", "net/minecraft/src/C_243524_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.entity.model.RaftEntityModel#LEFT_PADDLE
    [[maybe_unused]] static jobject get_field_LEFT_PADDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LEFT_PADDLE", "field_40473", "LEFT_PADDLE", "f_243712_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.RaftEntityModel#LEFT_PADDLE
    [[maybe_unused]] static void set_field_LEFT_PADDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LEFT_PADDLE", "field_40473", "LEFT_PADDLE", "f_243712_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.RaftEntityModel#RIGHT_PADDLE
    [[maybe_unused]] static jobject get_field_RIGHT_PADDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RIGHT_PADDLE", "field_40474", "RIGHT_PADDLE", "f_244253_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.RaftEntityModel#RIGHT_PADDLE
    [[maybe_unused]] static void set_field_RIGHT_PADDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RIGHT_PADDLE", "field_40474", "RIGHT_PADDLE", "f_244253_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.RaftEntityModel#BOTTOM
    [[maybe_unused]] static jobject get_field_BOTTOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "BOTTOM", "field_40475", "BOTTOM", "f_243674_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.RaftEntityModel#BOTTOM
    [[maybe_unused]] static void set_field_BOTTOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "BOTTOM", "field_40475", "BOTTOM", "f_243674_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.entity.model.RaftEntityModel#leftPaddle
    static jobject get_field_leftPaddle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "leftPaddle", "field_40476", "leftPaddle", "f_244618_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.RaftEntityModel#leftPaddle
    static void set_field_leftPaddle(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "leftPaddle", "field_40476", "leftPaddle", "f_244618_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.entity.model.RaftEntityModel#rightPaddle
    static jobject get_field_rightPaddle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "rightPaddle", "field_40477", "rightPaddle", "f_243747_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.RaftEntityModel#rightPaddle
    static void set_field_rightPaddle(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "rightPaddle", "field_40477", "rightPaddle", "f_243747_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.entity.model.RaftEntityModel#parts
    static jobject get_field_parts(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "parts", "field_40478", "parts", "f_244557_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.RaftEntityModel#parts
    static void set_field_parts(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "parts", "field_40478", "parts", "f_244557_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getParts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPartsBuilder", "method_45710", "getParts", "m_245164_"), "(Lfyk;)Lcom/google/common/collect/ImmutableList$Builder;");
    }

    static jobject getParts(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getParts();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addParts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createChildren", "method_45713", "addParts", "m_246042_"), "(Lfyt;)V");
    }

    static void addParts(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addParts();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTexturedModelData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createBodyModel", "method_45714", "getTexturedModelData", "m_247376_"), "()Lfyq;");
    }

    static jobject getTexturedModelData() {
       const auto clazz = self();
       const auto methodID = methodID_getTexturedModelData();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_setAngles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupAnim", "method_45711", "setAngles", "m_6973_"), "(Lcov;FFFFF)V");
    }

    static void setAngles(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jfloat& arg2, const jfloat& arg3, const jfloat& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID_setAngles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID__getParts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "parts", "method_45715", "getParts", "m_6195_"), "()Lcom/google/common/collect/ImmutableList;");
    }

    static jobject _getParts(const jobject& obj) {
                
       const auto methodID = methodID__getParts();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPaddleAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "animatePaddle", "method_45712", "setPaddleAngle", "m_247198_"), "(Lcov;ILfyk;F)V");
    }

    static void setPaddleAngle(const jobject& arg0, const jint& arg1, const jobject& arg2, const jfloat& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_setPaddleAngle();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_ENTITY_MODEL_RAFTENTITYMODEL_HPP