// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_ENTITY_MODEL_BIPEDENTITYMODEL$ARMPOSE_HPP
#define NET_MINECRAFT_CLIENT_RENDER_ENTITY_MODEL_BIPEDENTITYMODEL$ARMPOSE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose
 * Remapped: fvx$a
 */
namespace BipedEntityModel$ArmPose {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fvx$a", "net/minecraft/client/model/HumanoidModel$ArmPose", "net/minecraft/class_572$class_573", "net/minecraft/client/render/entity/model/BipedEntityModel$ArmPose", "net/minecraft/src/C_3829_$C_3831_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_3409", "EMPTY", "EMPTY"), "Lfvx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_3409", "EMPTY", "EMPTY"), "Lfvx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#ITEM
    [[maybe_unused]] static jobject get_field_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ITEM", "field_3410", "ITEM", "ITEM"), "Lfvx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#ITEM
    [[maybe_unused]] static void set_field_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ITEM", "field_3410", "ITEM", "ITEM"), "Lfvx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#BLOCK
    [[maybe_unused]] static jobject get_field_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BLOCK", "field_3406", "BLOCK", "BLOCK"), "Lfvx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#BLOCK
    [[maybe_unused]] static void set_field_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BLOCK", "field_3406", "BLOCK", "BLOCK"), "Lfvx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#BOW_AND_ARROW
    [[maybe_unused]] static jobject get_field_BOW_AND_ARROW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BOW_AND_ARROW", "field_3403", "BOW_AND_ARROW", "BOW_AND_ARROW"), "Lfvx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#BOW_AND_ARROW
    [[maybe_unused]] static void set_field_BOW_AND_ARROW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BOW_AND_ARROW", "field_3403", "BOW_AND_ARROW", "BOW_AND_ARROW"), "Lfvx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#THROW_SPEAR
    [[maybe_unused]] static jobject get_field_THROW_SPEAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "THROW_SPEAR", "field_3407", "THROW_SPEAR", "THROW_SPEAR"), "Lfvx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#THROW_SPEAR
    [[maybe_unused]] static void set_field_THROW_SPEAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "THROW_SPEAR", "field_3407", "THROW_SPEAR", "THROW_SPEAR"), "Lfvx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#CROSSBOW_CHARGE
    [[maybe_unused]] static jobject get_field_CROSSBOW_CHARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CROSSBOW_CHARGE", "field_3405", "CROSSBOW_CHARGE", "CROSSBOW_CHARGE"), "Lfvx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#CROSSBOW_CHARGE
    [[maybe_unused]] static void set_field_CROSSBOW_CHARGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CROSSBOW_CHARGE", "field_3405", "CROSSBOW_CHARGE", "CROSSBOW_CHARGE"), "Lfvx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#CROSSBOW_HOLD
    [[maybe_unused]] static jobject get_field_CROSSBOW_HOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CROSSBOW_HOLD", "field_3408", "CROSSBOW_HOLD", "CROSSBOW_HOLD"), "Lfvx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#CROSSBOW_HOLD
    [[maybe_unused]] static void set_field_CROSSBOW_HOLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CROSSBOW_HOLD", "field_3408", "CROSSBOW_HOLD", "CROSSBOW_HOLD"), "Lfvx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#SPYGLASS
    [[maybe_unused]] static jobject get_field_SPYGLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SPYGLASS", "field_27434", "SPYGLASS", "SPYGLASS"), "Lfvx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#SPYGLASS
    [[maybe_unused]] static void set_field_SPYGLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SPYGLASS", "field_27434", "SPYGLASS", "SPYGLASS"), "Lfvx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#TOOT_HORN
    [[maybe_unused]] static jobject get_field_TOOT_HORN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "TOOT_HORN", "field_39071", "TOOT_HORN", "TOOT_HORN"), "Lfvx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#TOOT_HORN
    [[maybe_unused]] static void set_field_TOOT_HORN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "TOOT_HORN", "field_39071", "TOOT_HORN", "TOOT_HORN"), "Lfvx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#BRUSH
    [[maybe_unused]] static jobject get_field_BRUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "BRUSH", "field_42877", "BRUSH", "BRUSH"), "Lfvx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#BRUSH
    [[maybe_unused]] static void set_field_BRUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "BRUSH", "field_42877", "BRUSH", "BRUSH"), "Lfvx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#twoHanded
    static jboolean get_field_twoHanded(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "twoHanded", "field_25722", "twoHanded", "f_102890_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.BipedEntityModel$ArmPose#twoHanded
    static void set_field_twoHanded(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "twoHanded", "field_25722", "twoHanded", "f_102890_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lfvx$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lfvx$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isTwoHanded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isTwoHanded", "method_30156", "isTwoHanded", "m_102897_"), "()Z");
    }

    static jboolean isTwoHanded(const jobject& obj) {
                
       const auto methodID = methodID_isTwoHanded();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_ENTITY_MODEL_BIPEDENTITYMODEL$ARMPOSE_HPP