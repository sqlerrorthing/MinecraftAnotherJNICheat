// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_ENTITY_MODEL_BIPEDENTITYMODEL_HPP
#define NET_MINECRAFT_CLIENT_RENDER_ENTITY_MODEL_BIPEDENTITYMODEL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.entity.model.BipedEntityModel
 * Remapped: fvx
 */
namespace BipedEntityModel {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fvx", "net/minecraft/client/model/HumanoidModel", "net/minecraft/class_572", "net/minecraft/client/render/entity/model/BipedEntityModel", "net/minecraft/src/C_3829_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#field_32505
    [[maybe_unused]] static jfloat get_field_field_32505() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "OVERLAY_SCALE", "field_32505", "field_32505", "f_170673_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#field_32505
    [[maybe_unused]] static void set_field_field_32505(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "OVERLAY_SCALE", "field_32505", "field_32505", "f_170673_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#field_32506
    [[maybe_unused]] static jfloat get_field_field_32506() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "HAT_OVERLAY_SCALE", "field_32506", "field_32506", "f_170674_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#field_32506
    [[maybe_unused]] static void set_field_field_32506(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "HAT_OVERLAY_SCALE", "field_32506", "field_32506", "f_170674_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#field_42513
    [[maybe_unused]] static jfloat get_field_field_42513() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "LEGGINGS_OVERLAY_SCALE", "field_42513", "field_42513", "f_268570_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#field_42513
    [[maybe_unused]] static void set_field_field_42513(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "LEGGINGS_OVERLAY_SCALE", "field_42513", "field_42513", "f_268570_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#field_42512
    [[maybe_unused]] static jfloat get_field_field_42512() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DUCK_WALK_ROTATION", "field_42512", "field_42512", "f_268560_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#field_42512
    [[maybe_unused]] static void set_field_field_42512(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DUCK_WALK_ROTATION", "field_42512", "field_42512", "f_268560_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#SPYGLASS_ARM_YAW_OFFSET
    [[maybe_unused]] static jfloat get_field_SPYGLASS_ARM_YAW_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPYGLASS_ARM_ROT_Y", "field_32503", "SPYGLASS_ARM_YAW_OFFSET", "f_170671_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#SPYGLASS_ARM_YAW_OFFSET
    [[maybe_unused]] static void set_field_SPYGLASS_ARM_YAW_OFFSET(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPYGLASS_ARM_ROT_Y", "field_32503", "SPYGLASS_ARM_YAW_OFFSET", "f_170671_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#SPYGLASS_ARM_PITCH_OFFSET
    [[maybe_unused]] static jfloat get_field_SPYGLASS_ARM_PITCH_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SPYGLASS_ARM_ROT_X", "field_32504", "SPYGLASS_ARM_PITCH_OFFSET", "f_170672_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#SPYGLASS_ARM_PITCH_OFFSET
    [[maybe_unused]] static void set_field_SPYGLASS_ARM_PITCH_OFFSET(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SPYGLASS_ARM_ROT_X", "field_32504", "SPYGLASS_ARM_PITCH_OFFSET", "f_170672_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#SPYGLASS_SNEAKING_ARM_PITCH_OFFSET
    [[maybe_unused]] static jfloat get_field_SPYGLASS_SNEAKING_ARM_PITCH_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SPYGLASS_ARM_CROUCH_ROT_X", "field_32507", "SPYGLASS_SNEAKING_ARM_PITCH_OFFSET", "f_170675_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#SPYGLASS_SNEAKING_ARM_PITCH_OFFSET
    [[maybe_unused]] static void set_field_SPYGLASS_SNEAKING_ARM_PITCH_OFFSET(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SPYGLASS_ARM_CROUCH_ROT_X", "field_32507", "SPYGLASS_SNEAKING_ARM_PITCH_OFFSET", "f_170675_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#field_46576
    [[maybe_unused]] static jfloat get_field_field_46576() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "HIGHEST_SHIELD_BLOCKING_ANGLE", "field_46576", "field_46576", "f_302316_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#field_46576
    [[maybe_unused]] static void set_field_field_46576(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "HIGHEST_SHIELD_BLOCKING_ANGLE", "field_46576", "field_46576", "f_302316_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#field_46577
    [[maybe_unused]] static jfloat get_field_field_46577() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "LOWEST_SHIELD_BLOCKING_ANGLE", "field_46577", "field_46577", "f_303337_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#field_46577
    [[maybe_unused]] static void set_field_field_46577(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "LOWEST_SHIELD_BLOCKING_ANGLE", "field_46577", "field_46577", "f_303337_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#field_46724
    [[maybe_unused]] static jfloat get_field_field_46724() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "HORIZONTAL_SHIELD_MOVEMENT_LIMIT", "field_46724", "field_46724", "f_302399_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.model.BipedEntityModel#field_46724
    [[maybe_unused]] static void set_field_field_46724(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "HORIZONTAL_SHIELD_MOVEMENT_LIMIT", "field_46724", "field_46724", "f_302399_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#field_39069
    [[maybe_unused]] static jfloat get_field_field_39069() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "TOOT_HORN_XROT_BASE", "field_39069", "field_39069", "f_233401_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#field_39069
    [[maybe_unused]] static void set_field_field_39069(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "TOOT_HORN_XROT_BASE", "field_39069", "field_39069", "f_233401_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#field_39070
    [[maybe_unused]] static jfloat get_field_field_39070() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TOOT_HORN_YROT_BASE", "field_39070", "field_39070", "f_233402_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#field_39070
    [[maybe_unused]] static void set_field_field_39070(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TOOT_HORN_YROT_BASE", "field_39070", "field_39070", "f_233402_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.entity.model.BipedEntityModel#head
    static jobject get_field_head(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "head", "field_3398", "head", "f_102808_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#head
    static void set_field_head(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "head", "field_3398", "head", "f_102808_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.entity.model.BipedEntityModel#hat
    static jobject get_field_hat(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "hat", "field_3394", "hat", "f_102809_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#hat
    static void set_field_hat(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "hat", "field_3394", "hat", "f_102809_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.entity.model.BipedEntityModel#body
    static jobject get_field_body(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "body", "field_3391", "body", "f_102810_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#body
    static void set_field_body(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "body", "field_3391", "body", "f_102810_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.entity.model.BipedEntityModel#rightArm
    static jobject get_field_rightArm(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "rightArm", "field_3401", "rightArm", "f_102811_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#rightArm
    static void set_field_rightArm(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "rightArm", "field_3401", "rightArm", "f_102811_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.entity.model.BipedEntityModel#leftArm
    static jobject get_field_leftArm(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "leftArm", "field_27433", "leftArm", "f_102812_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#leftArm
    static void set_field_leftArm(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "leftArm", "field_27433", "leftArm", "f_102812_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.entity.model.BipedEntityModel#rightLeg
    static jobject get_field_rightLeg(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "rightLeg", "field_3392", "rightLeg", "f_102813_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#rightLeg
    static void set_field_rightLeg(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "rightLeg", "field_3392", "rightLeg", "f_102813_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.entity.model.BipedEntityModel#leftLeg
    static jobject get_field_leftLeg(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "leftLeg", "field_3397", "leftLeg", "f_102814_"), "Lfyk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#leftLeg
    static void set_field_leftLeg(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "leftLeg", "field_3397", "leftLeg", "f_102814_"), "Lfyk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.entity.model.BipedEntityModel#leftArmPose
    static jobject get_field_leftArmPose(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "leftArmPose", "field_3399", "leftArmPose", "f_102815_"), "Lfvx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#leftArmPose
    static void set_field_leftArmPose(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "leftArmPose", "field_3399", "leftArmPose", "f_102815_"), "Lfvx$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.entity.model.BipedEntityModel#rightArmPose
    static jobject get_field_rightArmPose(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "rightArmPose", "field_3395", "rightArmPose", "f_102816_"), "Lfvx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#rightArmPose
    static void set_field_rightArmPose(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "rightArmPose", "field_3395", "rightArmPose", "f_102816_"), "Lfvx$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.entity.model.BipedEntityModel#sneaking
    static jboolean get_field_sneaking(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "crouching", "field_3400", "sneaking", "f_102817_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#sneaking
    static void set_field_sneaking(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "crouching", "field_3400", "sneaking", "f_102817_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.entity.model.BipedEntityModel#leaningPitch
    static jfloat get_field_leaningPitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "swimAmount", "field_3396", "leaningPitch", "f_102818_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.entity.model.BipedEntityModel#leaningPitch
    static void set_field_leaningPitch(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "swimAmount", "field_3396", "leaningPitch", "f_102818_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_getModelData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createMesh", "method_32011", "getModelData", "m_170681_"), "(Lfyo;F)Lfys;");
    }

    static jobject getModelData(const jobject& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getModelData();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getHeadParts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "headParts", "method_22946", "getHeadParts", "m_5607_"), "()Ljava/lang/Iterable;");
    }

    static jobject getHeadParts(const jobject& obj) {
                
       const auto methodID = methodID_getHeadParts();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBodyParts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "bodyParts", "method_22948", "getBodyParts", "m_5608_"), "()Ljava/lang/Iterable;");
    }

    static jobject getBodyParts(const jobject& obj) {
                
       const auto methodID = methodID_getBodyParts();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_animateModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "prepareMobModel", "method_17086", "animateModel", "m_6839_"), "(Lbtn;FFF)V");
    }

    static void animateModel(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jfloat& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_animateModel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_setAngles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupAnim", "method_17087", "setAngles", "m_6973_"), "(Lbtn;FFFFF)V");
    }

    static void setAngles(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jfloat& arg2, const jfloat& arg3, const jfloat& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID_setAngles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_positionRightArm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "poseRightArm", "method_30154", "positionRightArm", "m_102875_"), "(Lbtn;)V");
    }

    static void positionRightArm(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_positionRightArm();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_positionLeftArm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "poseLeftArm", "method_30155", "positionLeftArm", "m_102878_"), "(Lbtn;)V");
    }

    static void positionLeftArm(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_positionLeftArm();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_positionBlockingArm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "poseBlockingArm", "method_54131", "positionBlockingArm", "m_307799_"), "(Lfyk;Z)V");
    }

    static void positionBlockingArm(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_positionBlockingArm();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_animateArms() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupAttackAnimation", "method_29353", "animateArms", "m_7884_"), "(Lbtn;F)V");
    }

    static void animateArms(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_animateArms();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_lerpAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "rotlerpRad", "method_2804", "lerpAngle", "m_102835_"), "(FFF)F");
    }

    static jfloat lerpAngle(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_lerpAngle();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_method_2807() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "quadraticArmUpdate", "method_2807", "method_2807", "m_102833_"), "(F)F");
    }

    static jfloat method_2807(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_method_2807();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_copyBipedStateTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "copyPropertiesTo", "method_2818", "copyBipedStateTo", "m_102872_"), "(Lfvx;)V");
    }

    static void copyBipedStateTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_copyBipedStateTo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setVisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c_", "setAllVisible", "method_2805", "setVisible", "m_8009_"), "(Z)V");
    }

    static void setVisible(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setVisible();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setArmAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "translateToHand", "method_2803", "setArmAngle", "m_6002_"), "(Lbtg;Lfbi;)V");
    }

    static void setArmAngle(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setArmAngle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getArm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getArm", "method_2808", "getArm", "m_102851_"), "(Lbtg;)Lfyk;");
    }

    static jobject getArm(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getArm();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHead", "method_2838", "getHead", "m_5585_"), "()Lfyk;");
    }

    static jobject getHead(const jobject& obj) {
                
       const auto methodID = methodID_getHead();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPreferredArm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getAttackArm", "method_2806", "getPreferredArm", "m_102856_"), "(Lbtn;)Lbtg;");
    }

    static jobject getPreferredArm(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPreferredArm();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_ENTITY_MODEL_BIPEDENTITYMODEL_HPP