// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_ENTITY_LIVINGENTITYRENDERER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_ENTITY_LIVINGENTITYRENDERER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.entity.LivingEntityRenderer
 * Remapped: glk
 */
namespace LivingEntityRenderer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("glk", "net/minecraft/client/renderer/entity/LivingEntityRenderer", "net/minecraft/class_922", "net/minecraft/client/render/entity/LivingEntityRenderer", "net/minecraft/src/C_4357_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.entity.LivingEntityRenderer#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_21011", "LOGGER", "f_115289_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.LivingEntityRenderer#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_21011", "LOGGER", "f_115289_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.entity.LivingEntityRenderer#field_32939
    [[maybe_unused]] static jfloat get_field_field_32939() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "EYE_BED_OFFSET", "field_32939", "field_32939", "f_174287_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.entity.LivingEntityRenderer#field_32939
    [[maybe_unused]] static void set_field_field_32939(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "EYE_BED_OFFSET", "field_32939", "field_32939", "f_174287_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.entity.LivingEntityRenderer#model
    static jobject get_field_model(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "model", "field_4737", "model", "f_115290_"), "Lfvk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.entity.LivingEntityRenderer#model
    static void set_field_model(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "model", "field_4737", "model", "f_115290_"), "Lfvk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.entity.LivingEntityRenderer#features
    static jobject get_field_features(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "layers", "field_4738", "features", "f_115291_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.entity.LivingEntityRenderer#features
    static void set_field_features(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "layers", "field_4738", "features", "f_115291_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addFeature() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addLayer", "method_4046", "addFeature", "m_115326_"), "(Lgov;)Z");
    }

    static jboolean addFeature(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addFeature();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getModel", "method_4038", "getModel", "m_7200_"), "()Lfvk;");
    }

    static jobject getModel(const jobject& obj) {
                
       const auto methodID = methodID_getModel();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_4054", "render", "m_7392_"), "(Lbtn;FFLfbi;Lgez;I)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jfloat& arg2, const jobject& arg3, const jobject& arg4, const jint& arg5) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getRenderLayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRenderType", "method_24302", "getRenderLayer", "m_7225_"), "(Lbtn;ZZZ)Lgfh;");
    }

    static jobject getRenderLayer(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jboolean& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_getRenderLayer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getOverlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getOverlayCoords", "method_23622", "getOverlay", "m_115338_"), "(Lbtn;F)I");
    }

    static jint getOverlay(const jobject& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getOverlay();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isVisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isBodyVisible", "method_4056", "isVisible", "m_5933_"), "(Lbtn;)Z");
    }

    static jboolean isVisible(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isVisible();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "sleepDirectionToRotation", "method_18656", "getYaw", "m_115328_"), "(Lji;)F");
    }

    static jfloat getYaw(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getYaw();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isShaking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isShaking", "method_25450", "isShaking", "m_5936_"), "(Lbtn;)Z");
    }

    static jboolean isShaking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isShaking();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setupTransforms() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupRotations", "method_4058", "setupTransforms", "m_7523_"), "(Lbtn;Lfbi;FFFF)V");
    }

    static void setupTransforms(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jfloat& arg3, const jfloat& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID_setupTransforms();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getHandSwingProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getAttackAnim", "method_4044", "getHandSwingProgress", "m_115342_"), "(Lbtn;F)F");
    }

    static jfloat getHandSwingProgress(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_getHandSwingProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getAnimationProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBob", "method_4045", "getAnimationProgress", "m_6930_"), "(Lbtn;F)F");
    }

    static jfloat getAnimationProgress(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_getAnimationProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLyingAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getFlipDegrees", "method_4039", "getLyingAngle", "m_6441_"), "(Lbtn;)F");
    }

    static jfloat getLyingAngle(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getLyingAngle();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAnimationCounter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getWhiteOverlayProgress", "method_23185", "getAnimationCounter", "m_6931_"), "(Lbtn;F)F");
    }

    static jfloat getAnimationCounter(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_getAnimationCounter();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_scale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "scale", "method_4042", "scale", "m_7546_"), "(Lbtn;Lfbi;F)V");
    }

    static void scale(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_scale();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_hasLabel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "shouldShowName", "method_4055", "hasLabel", "m_6512_"), "(Lbtn;)Z");
    }

    static jboolean hasLabel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_hasLabel();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldFlipUpsideDown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "isEntityUpsideDown", "method_38563", "shouldFlipUpsideDown", "m_194453_"), "(Lbtn;)Z");
    }

    static jboolean shouldFlipUpsideDown(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_shouldFlipUpsideDown();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getShadowRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getShadowRadius", "method_55832", "getShadowRadius", "m_318622_"), "(Lbtn;)F");
    }

    static jfloat getShadowRadius(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getShadowRadius();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_ENTITY_LIVINGENTITYRENDERER_HPP