// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_TESSELLATOR_HPP
#define NET_MINECRAFT_CLIENT_RENDER_TESSELLATOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.Tessellator
 * Remapped: fbk
 */
namespace Tessellator {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fbk", "com/mojang/blaze3d/vertex/Tesselator", "net/minecraft/class_289", "net/minecraft/client/render/Tessellator", "net/minecraft/src/C_3185_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.Tessellator#field_46841
    [[maybe_unused]] static jint get_field_field_46841() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_BYTES", "field_46841", "field_46841", "f_302531_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Tessellator#field_46841
    [[maybe_unused]] static void set_field_field_46841(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_BYTES", "field_46841", "field_46841", "f_302531_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.Tessellator#allocator
    static jobject get_field_allocator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "buffer", "field_52098", "allocator", "f_337014_"), "Lfbf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Tessellator#allocator
    static void set_field_allocator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "buffer", "field_52098", "allocator", "f_337014_"), "Lfbf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.Tessellator#INSTANCE
    [[maybe_unused]] static jobject get_field_INSTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "instance", "field_1573", "INSTANCE", "f_302797_"), "Lfbk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.Tessellator#INSTANCE
    [[maybe_unused]] static void set_field_INSTANCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "instance", "field_1573", "INSTANCE", "f_302797_"), "Lfbk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "init", "method_54560", "initialize", "m_306948_"), "()V");
    }

    static void initialize() {
       const auto clazz = self();
       const auto methodID = methodID_initialize();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getInstance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getInstance", "method_1348", "getInstance", "m_85913_"), "()Lfbk;");
    }

    static jobject getInstance() {
       const auto clazz = self();
       const auto methodID = methodID_getInstance();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_begin() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "begin", "method_60827", "begin", "m_339075_"), "(Lfbn$c;Lfbn;)Lfbd;");
    }

    static jobject begin(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_begin();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "clear", "method_60828", "clear", "m_339098_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_TESSELLATOR_HPP