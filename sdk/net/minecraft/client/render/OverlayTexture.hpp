// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_OVERLAYTEXTURE_HPP
#define NET_MINECRAFT_CLIENT_RENDER_OVERLAYTEXTURE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.OverlayTexture
 * Remapped: gqc
 */
namespace OverlayTexture {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gqc", "net/minecraft/client/renderer/texture/OverlayTexture", "net/minecraft/class_4608", "net/minecraft/client/render/OverlayTexture", "net/minecraft/src/C_4474_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.OverlayTexture#field_32956
    [[maybe_unused]] static jint get_field_field_32956() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SIZE", "field_32956", "field_32956", "f_174694_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.OverlayTexture#field_32956
    [[maybe_unused]] static void set_field_field_32956(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SIZE", "field_32956", "field_32956", "f_174694_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.OverlayTexture#field_32953
    [[maybe_unused]] static jint get_field_field_32953() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_WHITE_U", "field_32953", "field_32953", "f_174691_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.OverlayTexture#field_32953
    [[maybe_unused]] static void set_field_field_32953(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_WHITE_U", "field_32953", "field_32953", "f_174691_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.OverlayTexture#field_32954
    [[maybe_unused]] static jint get_field_field_32954() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RED_OVERLAY_V", "field_32954", "field_32954", "f_174692_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.OverlayTexture#field_32954
    [[maybe_unused]] static void set_field_field_32954(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RED_OVERLAY_V", "field_32954", "field_32954", "f_174692_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.OverlayTexture#field_32955
    [[maybe_unused]] static jint get_field_field_32955() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WHITE_OVERLAY_V", "field_32955", "field_32955", "f_174693_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.OverlayTexture#field_32955
    [[maybe_unused]] static void set_field_field_32955(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WHITE_OVERLAY_V", "field_32955", "field_32955", "f_174693_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.OverlayTexture#DEFAULT_UV
    [[maybe_unused]] static jint get_field_DEFAULT_UV() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NO_OVERLAY", "field_21444", "DEFAULT_UV", "f_118083_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.OverlayTexture#DEFAULT_UV
    [[maybe_unused]] static void set_field_DEFAULT_UV(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NO_OVERLAY", "field_21444", "DEFAULT_UV", "f_118083_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.OverlayTexture#texture
    static jobject get_field_texture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "texture", "field_21013", "texture", "f_118084_"), "Lgpy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.OverlayTexture#texture
    static void set_field_texture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "texture", "field_21013", "texture", "f_118084_"), "Lgpy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setupOverlayColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupOverlayColor", "method_23209", "setupOverlayColor", "m_118087_"), "()V");
    }

    static void setupOverlayColor(const jobject& obj) {
                
       const auto methodID = methodID_setupOverlayColor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getU() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "u", "method_23210", "getU", "m_118088_"), "(F)I");
    }

    static jint getU(const jfloat& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getU();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getV() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "v", "method_23212", "getV", "m_118096_"), "(Z)I");
    }

    static jint getV(const jboolean& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getV();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_packUv() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "pack", "method_23625", "packUv", "m_118093_"), "(II)I");
    }

    static jint packUv(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_packUv();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getUv() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "pack", "method_23624", "getUv", "m_118090_"), "(FZ)I");
    }

    static jint getUv(const jfloat& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getUv();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_teardownOverlayColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "teardownOverlayColor", "method_23213", "teardownOverlayColor", "m_118098_"), "()V");
    }

    static void teardownOverlayColor(const jobject& obj) {
                
       const auto methodID = methodID_teardownOverlayColor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_OVERLAYTEXTURE_HPP