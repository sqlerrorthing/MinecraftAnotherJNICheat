// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_BUFFERBUILDER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_BUFFERBUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.BufferBuilder
 * Remapped: fbd
 */
namespace BufferBuilder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fbd", "com/mojang/blaze3d/vertex/BufferBuilder", "net/minecraft/class_287", "net/minecraft/client/render/BufferBuilder", "net/minecraft/src/C_3173_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.BufferBuilder#field_52068
    [[maybe_unused]] static jlong get_field_field_52068() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NOT_BUILDING", "field_52068", "field_52068", "f_337720_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#field_52068
    [[maybe_unused]] static void set_field_field_52068(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NOT_BUILDING", "field_52068", "field_52068", "f_337720_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.BufferBuilder#field_52069
    [[maybe_unused]] static jlong get_field_field_52069() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "UNKNOWN_ELEMENT", "field_52069", "field_52069", "f_337398_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#field_52069
    [[maybe_unused]] static void set_field_field_52069(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "UNKNOWN_ELEMENT", "field_52069", "field_52069", "f_337398_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.BufferBuilder#LITTLE_ENDIAN
    [[maybe_unused]] static jboolean get_field_LITTLE_ENDIAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "IS_LITTLE_ENDIAN", "field_52070", "LITTLE_ENDIAN", "f_337242_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#LITTLE_ENDIAN
    [[maybe_unused]] static void set_field_LITTLE_ENDIAN(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "IS_LITTLE_ENDIAN", "field_52070", "LITTLE_ENDIAN", "f_337242_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BufferBuilder#allocator
    static jobject get_field_allocator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "buffer", "field_52071", "allocator", "f_85648_"), "Lfbf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#allocator
    static void set_field_allocator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "buffer", "field_52071", "allocator", "f_85648_"), "Lfbf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BufferBuilder#vertexPointer
    static jlong get_field_vertexPointer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "vertexPointer", "field_52072", "vertexPointer", "f_337311_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#vertexPointer
    static void set_field_vertexPointer(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "vertexPointer", "field_52072", "vertexPointer", "f_337311_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BufferBuilder#vertexCount
    static jint get_field_vertexCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "vertices", "field_1554", "vertexCount", "f_85654_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#vertexCount
    static void set_field_vertexCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "vertices", "field_1554", "vertexCount", "f_85654_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BufferBuilder#format
    static jobject get_field_format(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "format", "field_1565", "format", "f_85658_"), "Lfbn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#format
    static void set_field_format(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "format", "field_1565", "format", "f_85658_"), "Lfbn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BufferBuilder#drawMode
    static jobject get_field_drawMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "mode", "field_52073", "drawMode", "f_85657_"), "Lfbn$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#drawMode
    static void set_field_drawMode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "mode", "field_52073", "drawMode", "f_85657_"), "Lfbn$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BufferBuilder#canSkipElementChecks
    static jboolean get_field_canSkipElementChecks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "fastFormat", "field_21594", "canSkipElementChecks", "f_85659_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#canSkipElementChecks
    static void set_field_canSkipElementChecks(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "fastFormat", "field_21594", "canSkipElementChecks", "f_85659_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BufferBuilder#hasOverlay
    static jboolean get_field_hasOverlay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "fullFormat", "field_21595", "hasOverlay", "f_85660_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#hasOverlay
    static void set_field_hasOverlay(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "fullFormat", "field_21595", "hasOverlay", "f_85660_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BufferBuilder#vertexSizeByte
    static jint get_field_vertexSizeByte(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "vertexSize", "field_52074", "vertexSizeByte", "f_337268_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#vertexSizeByte
    static void set_field_vertexSizeByte(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "vertexSize", "field_52074", "vertexSizeByte", "f_337268_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BufferBuilder#requiredMask
    static jint get_field_requiredMask(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "initialElementsToFill", "field_52075", "requiredMask", "f_336837_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#requiredMask
    static void set_field_requiredMask(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "initialElementsToFill", "field_52075", "requiredMask", "f_336837_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BufferBuilder#offsetsByElementId
    static jint get_field_offsetsByElementId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "offsetsByElement", "field_52076", "offsetsByElementId", "f_336980_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#offsetsByElementId
    static void set_field_offsetsByElementId(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "offsetsByElement", "field_52076", "offsetsByElementId", "f_336980_"), "[I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BufferBuilder#currentMask
    static jint get_field_currentMask(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "elementsToFill", "field_52077", "currentMask", "f_337476_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#currentMask
    static void set_field_currentMask(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "elementsToFill", "field_52077", "currentMask", "f_337476_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.BufferBuilder#building
    static jboolean get_field_building(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "building", "field_1556", "building", "f_85661_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.BufferBuilder#building
    static void set_field_building(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "building", "field_1556", "building", "f_85661_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_endNullable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "build", "method_60794", "endNullable", "m_339970_"), "()Lfbh;");
    }

    static jobject endNullable(const jobject& obj) {
                
       const auto methodID = methodID_endNullable();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_end() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "buildOrThrow", "method_60800", "end", "m_339905_"), "()Lfbh;");
    }

    static jobject end(const jobject& obj) {
                
       const auto methodID = methodID_end();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_ensureBuilding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "ensureBuilding", "method_60802", "ensureBuilding", "m_231176_"), "()V");
    }

    static void ensureBuilding(const jobject& obj) {
                
       const auto methodID = methodID_ensureBuilding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "storeMesh", "method_60804", "build", "m_339394_"), "()Lfbh;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_beginVertex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "beginVertex", "method_60805", "beginVertex", "m_340494_"), "()J");
    }

    static jlong beginVertex(const jobject& obj) {
                
       const auto methodID = methodID_beginVertex();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_beginElement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "beginElement", "method_60798", "beginElement", "m_339847_"), "(Lfbo;)J");
    }

    static jlong beginElement(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_beginElement();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_endVertex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "endLastVertex", "method_60806", "endVertex", "m_339377_"), "()V");
    }

    static void endVertex(const jobject& obj) {
                
       const auto methodID = methodID_endVertex();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_putColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "putRgba", "method_60797", "putColor", "m_340259_"), "(JI)V");
    }

    static void putColor(const jlong& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_putColor();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "putPackedUv", "method_60801", "putInt", "m_338383_"), "(JI)V");
    }

    static void putInt(const jlong& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_putInt();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_vertex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addVertex", "method_22912", "vertex", "m_167146_"), "(FFF)Lfbm;");
    }

    static jobject vertex(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_vertex();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_color() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setColor", "method_1336", "color", "m_167129_"), "(IIII)Lfbm;");
    }

    static jobject color(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_color();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__color() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setColor", "method_39415", "color", "m_338399_"), "(I)Lfbm;");
    }

    static jobject _color(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__color();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_texture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setUv", "method_22913", "texture", "m_167083_"), "(FF)Lfbm;");
    }

    static jobject texture(const jobject& obj, const jfloat& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_texture();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_overlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setUv1", "method_60796", "overlay", "m_338369_"), "(II)Lfbm;");
    }

    static jobject overlay(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_overlay();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__overlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setOverlay", "method_22922", "overlay", "m_338943_"), "(I)Lfbm;");
    }

    static jobject _overlay(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__overlay();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_light() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setUv2", "method_22921", "light", "m_338813_"), "(II)Lfbm;");
    }

    static jobject light(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_light();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__light() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setLight", "method_60803", "light", "m_338973_"), "(I)Lfbm;");
    }

    static jobject _light(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__light();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_putUv() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "uvShort", "method_60799", "putUv", "m_338494_"), "(SSLfbo;)Lfbm;");
    }

    static jobject putUv(const jobject& obj, const jshort& arg0, const jshort& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_putUv();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_normal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setNormal", "method_22914", "normal", "m_338525_"), "(FFF)Lfbm;");
    }

    static jobject normal(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_normal();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_floatToByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "normalIntValue", "method_60795", "floatToByte", "m_338914_"), "(F)B");
    }

    static jbyte floatToByte(const jfloat& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_floatToByte();
       return MinecraftSDK::env->CallStaticByteMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__vertex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addVertex", "method_23919", "vertex", "m_338367_"), "(FFFIFFIIFFF)V");
    }

    static void _vertex(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2, const jint& arg3, const jfloat& arg4, const jfloat& arg5, const jint& arg6, const jint& arg7, const jfloat& arg8, const jfloat& arg9, const jfloat& arg10) {
                
       const auto methodID = methodID__vertex();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_BUFFERBUILDER_HPP