// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_DEBUG_VILLAGEDEBUGRENDERER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_DEBUG_VILLAGEDEBUGRENDERER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.debug.VillageDebugRenderer
 * Remapped: gih
 */
namespace VillageDebugRenderer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gih", "net/minecraft/client/renderer/debug/BrainDebugRenderer", "net/minecraft/class_4207", "net/minecraft/client/render/debug/VillageDebugRenderer", "net/minecraft/src/C_4278_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_18920", "LOGGER", "f_113193_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_18920", "LOGGER", "f_113193_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32874
    [[maybe_unused]] static jboolean get_field_field_32874() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SHOW_NAME_FOR_ALL", "field_32874", "field_32874", "f_173785_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32874
    [[maybe_unused]] static void set_field_field_32874(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SHOW_NAME_FOR_ALL", "field_32874", "field_32874", "f_173785_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32875
    [[maybe_unused]] static jboolean get_field_field_32875() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SHOW_PROFESSION_FOR_ALL", "field_32875", "field_32875", "f_173786_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32875
    [[maybe_unused]] static void set_field_field_32875(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SHOW_PROFESSION_FOR_ALL", "field_32875", "field_32875", "f_173786_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32876
    [[maybe_unused]] static jboolean get_field_field_32876() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SHOW_BEHAVIORS_FOR_ALL", "field_32876", "field_32876", "f_173787_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32876
    [[maybe_unused]] static void set_field_field_32876(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SHOW_BEHAVIORS_FOR_ALL", "field_32876", "field_32876", "f_173787_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32877
    [[maybe_unused]] static jboolean get_field_field_32877() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SHOW_ACTIVITIES_FOR_ALL", "field_32877", "field_32877", "f_173788_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32877
    [[maybe_unused]] static void set_field_field_32877(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SHOW_ACTIVITIES_FOR_ALL", "field_32877", "field_32877", "f_173788_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32878
    [[maybe_unused]] static jboolean get_field_field_32878() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SHOW_INVENTORY_FOR_ALL", "field_32878", "field_32878", "f_173789_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32878
    [[maybe_unused]] static void set_field_field_32878(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SHOW_INVENTORY_FOR_ALL", "field_32878", "field_32878", "f_173789_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32879
    [[maybe_unused]] static jboolean get_field_field_32879() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SHOW_GOSSIPS_FOR_ALL", "field_32879", "field_32879", "f_173790_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32879
    [[maybe_unused]] static void set_field_field_32879(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SHOW_GOSSIPS_FOR_ALL", "field_32879", "field_32879", "f_173790_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32880
    [[maybe_unused]] static jboolean get_field_field_32880() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SHOW_PATH_FOR_ALL", "field_32880", "field_32880", "f_173791_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32880
    [[maybe_unused]] static void set_field_field_32880(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SHOW_PATH_FOR_ALL", "field_32880", "field_32880", "f_173791_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32881
    [[maybe_unused]] static jboolean get_field_field_32881() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SHOW_HEALTH_FOR_ALL", "field_32881", "field_32881", "f_173792_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32881
    [[maybe_unused]] static void set_field_field_32881(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SHOW_HEALTH_FOR_ALL", "field_32881", "field_32881", "f_173792_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32882
    [[maybe_unused]] static jboolean get_field_field_32882() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SHOW_WANTS_GOLEM_FOR_ALL", "field_32882", "field_32882", "f_173793_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32882
    [[maybe_unused]] static void set_field_field_32882(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SHOW_WANTS_GOLEM_FOR_ALL", "field_32882", "field_32882", "f_173793_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_38346
    [[maybe_unused]] static jboolean get_field_field_38346() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SHOW_ANGER_LEVEL_FOR_ALL", "field_38346", "field_38346", "f_234493_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_38346
    [[maybe_unused]] static void set_field_field_38346(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SHOW_ANGER_LEVEL_FOR_ALL", "field_38346", "field_38346", "f_234493_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32883
    [[maybe_unused]] static jboolean get_field_field_32883() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SHOW_NAME_FOR_SELECTED", "field_32883", "field_32883", "f_173794_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32883
    [[maybe_unused]] static void set_field_field_32883(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SHOW_NAME_FOR_SELECTED", "field_32883", "field_32883", "f_173794_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32884
    [[maybe_unused]] static jboolean get_field_field_32884() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SHOW_PROFESSION_FOR_SELECTED", "field_32884", "field_32884", "f_173795_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32884
    [[maybe_unused]] static void set_field_field_32884(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SHOW_PROFESSION_FOR_SELECTED", "field_32884", "field_32884", "f_173795_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32885
    [[maybe_unused]] static jboolean get_field_field_32885() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SHOW_BEHAVIORS_FOR_SELECTED", "field_32885", "field_32885", "f_173796_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32885
    [[maybe_unused]] static void set_field_field_32885(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SHOW_BEHAVIORS_FOR_SELECTED", "field_32885", "field_32885", "f_173796_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32886
    [[maybe_unused]] static jboolean get_field_field_32886() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SHOW_ACTIVITIES_FOR_SELECTED", "field_32886", "field_32886", "f_173797_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32886
    [[maybe_unused]] static void set_field_field_32886(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SHOW_ACTIVITIES_FOR_SELECTED", "field_32886", "field_32886", "f_173797_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32887
    [[maybe_unused]] static jboolean get_field_field_32887() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SHOW_MEMORIES_FOR_SELECTED", "field_32887", "field_32887", "f_173798_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32887
    [[maybe_unused]] static void set_field_field_32887(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SHOW_MEMORIES_FOR_SELECTED", "field_32887", "field_32887", "f_173798_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32888
    [[maybe_unused]] static jboolean get_field_field_32888() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SHOW_INVENTORY_FOR_SELECTED", "field_32888", "field_32888", "f_173799_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32888
    [[maybe_unused]] static void set_field_field_32888(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "SHOW_INVENTORY_FOR_SELECTED", "field_32888", "field_32888", "f_173799_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32889
    [[maybe_unused]] static jboolean get_field_field_32889() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SHOW_GOSSIPS_FOR_SELECTED", "field_32889", "field_32889", "f_173800_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32889
    [[maybe_unused]] static void set_field_field_32889(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SHOW_GOSSIPS_FOR_SELECTED", "field_32889", "field_32889", "f_173800_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32890
    [[maybe_unused]] static jboolean get_field_field_32890() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SHOW_PATH_FOR_SELECTED", "field_32890", "field_32890", "f_173801_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32890
    [[maybe_unused]] static void set_field_field_32890(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SHOW_PATH_FOR_SELECTED", "field_32890", "field_32890", "f_173801_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32891
    [[maybe_unused]] static jboolean get_field_field_32891() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SHOW_HEALTH_FOR_SELECTED", "field_32891", "field_32891", "f_173802_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32891
    [[maybe_unused]] static void set_field_field_32891(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SHOW_HEALTH_FOR_SELECTED", "field_32891", "field_32891", "f_173802_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32892
    [[maybe_unused]] static jboolean get_field_field_32892() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SHOW_WANTS_GOLEM_FOR_SELECTED", "field_32892", "field_32892", "f_173803_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32892
    [[maybe_unused]] static void set_field_field_32892(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "SHOW_WANTS_GOLEM_FOR_SELECTED", "field_32892", "field_32892", "f_173803_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_38347
    [[maybe_unused]] static jboolean get_field_field_38347() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SHOW_ANGER_LEVEL_FOR_SELECTED", "field_38347", "field_38347", "f_234494_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_38347
    [[maybe_unused]] static void set_field_field_38347(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SHOW_ANGER_LEVEL_FOR_SELECTED", "field_38347", "field_38347", "f_234494_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32893
    [[maybe_unused]] static jboolean get_field_field_32893() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SHOW_POI_INFO", "field_32893", "field_32893", "f_173804_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#field_32893
    [[maybe_unused]] static void set_field_field_32893(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "SHOW_POI_INFO", "field_32893", "field_32893", "f_173804_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#POI_RANGE
    [[maybe_unused]] static jint get_field_POI_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "MAX_RENDER_DIST_FOR_BRAIN_INFO", "field_32894", "POI_RANGE", "f_173805_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#POI_RANGE
    [[maybe_unused]] static void set_field_POI_RANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "MAX_RENDER_DIST_FOR_BRAIN_INFO", "field_32894", "POI_RANGE", "f_173805_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#BRAIN_RANGE
    [[maybe_unused]] static jint get_field_BRAIN_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "MAX_RENDER_DIST_FOR_POI_INFO", "field_32895", "BRAIN_RANGE", "f_173806_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#BRAIN_RANGE
    [[maybe_unused]] static void set_field_BRAIN_RANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "MAX_RENDER_DIST_FOR_POI_INFO", "field_32895", "BRAIN_RANGE", "f_173806_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#TARGET_ENTITY_RANGE
    [[maybe_unused]] static jint get_field_TARGET_ENTITY_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "MAX_TARGETING_DIST", "field_32896", "TARGET_ENTITY_RANGE", "f_173807_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#TARGET_ENTITY_RANGE
    [[maybe_unused]] static void set_field_TARGET_ENTITY_RANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "MAX_TARGETING_DIST", "field_32896", "TARGET_ENTITY_RANGE", "f_173807_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#DEFAULT_DRAWN_STRING_SIZE
    [[maybe_unused]] static jfloat get_field_DEFAULT_DRAWN_STRING_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "TEXT_SCALE", "field_32897", "DEFAULT_DRAWN_STRING_SIZE", "f_173808_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#DEFAULT_DRAWN_STRING_SIZE
    [[maybe_unused]] static void set_field_DEFAULT_DRAWN_STRING_SIZE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "TEXT_SCALE", "field_32897", "DEFAULT_DRAWN_STRING_SIZE", "f_173808_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#WHITE
    [[maybe_unused]] static jint get_field_WHITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "WHITE", "field_32898", "WHITE", "f_173809_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#WHITE
    [[maybe_unused]] static void set_field_WHITE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "WHITE", "field_32898", "WHITE", "f_173809_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#YELLOW
    [[maybe_unused]] static jint get_field_YELLOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "YELLOW", "field_32867", "YELLOW", "f_173778_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#YELLOW
    [[maybe_unused]] static void set_field_YELLOW(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "YELLOW", "field_32867", "YELLOW", "f_173778_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#AQUA
    [[maybe_unused]] static jint get_field_AQUA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "CYAN", "field_32868", "AQUA", "f_173779_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#AQUA
    [[maybe_unused]] static void set_field_AQUA(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "CYAN", "field_32868", "AQUA", "f_173779_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#GREEN
    [[maybe_unused]] static jint get_field_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "GREEN", "field_32869", "GREEN", "f_173780_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#GREEN
    [[maybe_unused]] static void set_field_GREEN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "GREEN", "field_32869", "GREEN", "f_173780_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#GRAY
    [[maybe_unused]] static jint get_field_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "GRAY", "field_32870", "GRAY", "f_173781_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#GRAY
    [[maybe_unused]] static void set_field_GRAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "GRAY", "field_32870", "GRAY", "f_173781_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#PINK
    [[maybe_unused]] static jint get_field_PINK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "PINK", "field_32871", "PINK", "f_173782_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#PINK
    [[maybe_unused]] static void set_field_PINK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "PINK", "field_32871", "PINK", "f_173782_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#RED
    [[maybe_unused]] static jint get_field_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "RED", "field_32872", "RED", "f_173783_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#RED
    [[maybe_unused]] static void set_field_RED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "RED", "field_32872", "RED", "f_173783_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#ORANGE
    [[maybe_unused]] static jint get_field_ORANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "ORANGE", "field_32873", "ORANGE", "f_173784_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#ORANGE
    [[maybe_unused]] static void set_field_ORANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "ORANGE", "field_32873", "ORANGE", "f_173784_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.VillageDebugRenderer#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "minecraft", "field_18786", "client", "f_113194_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "minecraft", "field_18786", "client", "f_113194_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.VillageDebugRenderer#pointsOfInterest
    static jobject get_field_pointsOfInterest(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "pois", "field_18787", "pointsOfInterest", "f_113195_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#pointsOfInterest
    static void set_field_pointsOfInterest(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "pois", "field_18787", "pointsOfInterest", "f_113195_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.VillageDebugRenderer#brains
    static jobject get_field_brains(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "brainDumpsPerEntity", "field_18921", "brains", "f_113196_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#brains
    static void set_field_brains(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "brainDumpsPerEntity", "field_18921", "brains", "f_113196_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.VillageDebugRenderer#targetedEntity
    static jobject get_field_targetedEntity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "lastLookedAtUuid", "field_18922", "targetedEntity", "f_113197_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageDebugRenderer#targetedEntity
    static void set_field_targetedEntity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "lastLookedAtUuid", "field_18922", "targetedEntity", "f_113197_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clear", "method_20414", "clear", "m_5630_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_addPointOfInterest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPoi", "method_19701", "addPointOfInterest", "m_113226_"), "(Lgih$a;)V");
    }

    static void addPointOfInterest(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addPointOfInterest();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removePointOfInterest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removePoi", "method_19434", "removePointOfInterest", "m_113228_"), "(Ljd;)V");
    }

    static void removePointOfInterest(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removePointOfInterest();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setFreeTicketCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setFreeTicketCount", "method_19702", "setFreeTicketCount", "m_113230_"), "(Ljd;I)V");
    }

    static void setFreeTicketCount(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setFreeTicketCount();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addOrUpdateBrainDump", "method_19432", "addBrain", "m_113219_"), "(Laag$a;)V");
    }

    static void addBrain(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addBrain();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeBrainDump", "method_35797", "removeBrain", "m_173810_"), "(I)V");
    }

    static void removeBrain(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_removeBrain();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_23109", "render", "m_7790_"), "(Lfbi;Lgez;DDD)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_removeRemovedBrains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "clearRemovedEntities", "method_24805", "removeRemovedBrains", "m_113264_"), "()V");
    }

    static void removeRemovedBrains(const jobject& obj) {
                
       const auto methodID = methodID_removeRemovedBrains();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_draw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "doRender", "method_23135", "draw", "m_269077_"), "(Lfbi;Lgez;DDD)V");
    }

    static void draw(const jobject& obj, const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_draw();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_drawPointOfInterest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "highlightPoi", "method_23138", "drawPointOfInterest", "m_269464_"), "(Lfbi;Lgez;Ljd;)V");
    }

    static void drawPointOfInterest(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_drawPointOfInterest();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_drawGhostPointOfInterest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderGhostPoi", "method_23131", "drawGhostPointOfInterest", "m_269509_"), "(Lfbi;Lgez;Ljd;Ljava/util/List;)V");
    }

    static void drawGhostPointOfInterest(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_drawGhostPointOfInterest();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawPointOfInterestInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderPoiInfo", "method_23137", "drawPointOfInterestInfo", "m_269122_"), "(Lfbi;Lgez;Lgih$a;)V");
    }

    static void drawPointOfInterestInfo(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_drawPointOfInterestInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_drawPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderPath", "method_23136", "drawPath", "m_269424_"), "(Lfbi;Lgez;Laag$a;DDD)V");
    }

    static void drawPath(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5) {
                
       const auto methodID = methodID_drawPath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_drawBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderBrainInfo", "method_23140", "drawBrain", "m_269312_"), "(Lfbi;Lgez;Laag$a;DDD)V");
    }

    static void drawBrain(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5) {
                
       const auto methodID = methodID_drawBrain();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_drawString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderTextOverPoi", "method_23133", "drawString", "m_269588_"), "(Lfbi;Lgez;Ljava/lang/String;Lgih$a;II)V");
    }

    static void drawString(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jint& arg4, const jint& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_drawString();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID__drawString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderTextOverPos", "method_23134", "drawString", "m_269385_"), "(Lfbi;Lgez;Ljava/lang/String;Ljd;II)V");
    }

    static void _drawString(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jint& arg4, const jint& arg5) {
       const auto clazz = self();
       const auto methodID = methodID__drawString();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID___drawString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderTextOverMob", "method_23132", "drawString", "m_269502_"), "(Lfbi;Lgez;Ljw;ILjava/lang/String;IF)V");
    }

    static void __drawString(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jobject& arg4, const jint& arg5, const jfloat& arg6) {
       const auto clazz = self();
       const auto methodID = methodID___drawString();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_getNamesOfPointOfInterestTicketHolders() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTicketHolderNames", "method_23141", "getNamesOfPointOfInterestTicketHolders", "m_113282_"), "(Lgih$a;)Ljava/util/Set;");
    }

    static jobject getNamesOfPointOfInterestTicketHolders(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getNamesOfPointOfInterestTicketHolders();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNamesOfJobSitePotentialOwners() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getPotentialTicketHolderNames", "method_29385", "getNamesOfJobSitePotentialOwners", "m_113287_"), "(Lgih$a;)Ljava/util/Set;");
    }

    static jobject getNamesOfJobSitePotentialOwners(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getNamesOfJobSitePotentialOwners();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isTargeted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isMobSelected", "method_23145", "isTargeted", "m_113265_"), "(Laag$a;)Z");
    }

    static jboolean isTargeted(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isTargeted();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isClose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isPlayerCloseEnoughToMob", "method_23147", "isClose", "m_113280_"), "(Laag$a;)Z");
    }

    static jboolean isClose(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isClose();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBrainsContainingPointOfInterest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTicketHolders", "method_23142", "getBrainsContainingPointOfInterest", "m_113284_"), "(Ljd;)Ljava/util/Collection;");
    }

    static jobject getBrainsContainingPointOfInterest(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBrainsContainingPointOfInterest();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBrainsContainingPotentialJobSite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getPotentialTicketHolders", "method_29386", "getBrainsContainingPotentialJobSite", "m_113289_"), "(Ljd;)Ljava/util/Collection;");
    }

    static jobject getBrainsContainingPotentialJobSite(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBrainsContainingPotentialJobSite();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getGhostPointsOfInterest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getGhostPois", "method_23144", "getGhostPointsOfInterest", "m_113279_"), "()Ljava/util/Map;");
    }

    static jobject getGhostPointsOfInterest(const jobject& obj) {
                
       const auto methodID = methodID_getGhostPointsOfInterest();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateTargetedEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "updateLastLookedAtUuid", "method_23146", "updateTargetedEntity", "m_113286_"), "()V");
    }

    static void updateTargetedEntity(const jobject& obj) {
                
       const auto methodID = methodID_updateTargetedEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_DEBUG_VILLAGEDEBUGRENDERER_HPP