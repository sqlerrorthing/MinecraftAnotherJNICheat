// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_DEBUG_BREEZEDEBUGRENDERER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_DEBUG_BREEZEDEBUGRENDERER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.debug.BreezeDebugRenderer
 * Remapped: gii
 */
namespace BreezeDebugRenderer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gii", "net/minecraft/client/renderer/debug/BreezeDebugRenderer", "net/minecraft/class_8985", "net/minecraft/client/render/debug/BreezeDebugRenderer", "net/minecraft/src/C_301981_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#PINK
    [[maybe_unused]] static jint get_field_PINK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "JUMP_TARGET_LINE_COLOR", "field_47465", "PINK", "f_302700_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#PINK
    [[maybe_unused]] static void set_field_PINK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "JUMP_TARGET_LINE_COLOR", "field_47465", "PINK", "f_302700_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#LIGHT_BLUE
    [[maybe_unused]] static jint get_field_LIGHT_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TARGET_LINE_COLOR", "field_47466", "LIGHT_BLUE", "f_303590_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#LIGHT_BLUE
    [[maybe_unused]] static void set_field_LIGHT_BLUE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TARGET_LINE_COLOR", "field_47466", "LIGHT_BLUE", "f_303590_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#GREEN
    [[maybe_unused]] static jint get_field_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "INNER_CIRCLE_COLOR", "field_47467", "GREEN", "f_303283_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#GREEN
    [[maybe_unused]] static void set_field_GREEN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "INNER_CIRCLE_COLOR", "field_47467", "GREEN", "f_303283_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#ORANGE
    [[maybe_unused]] static jint get_field_ORANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MIDDLE_CIRCLE_COLOR", "field_47468", "ORANGE", "f_303307_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#ORANGE
    [[maybe_unused]] static void set_field_ORANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MIDDLE_CIRCLE_COLOR", "field_47468", "ORANGE", "f_303307_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#RED
    [[maybe_unused]] static jint get_field_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "OUTER_CIRCLE_COLOR", "field_47469", "RED", "f_303863_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#RED
    [[maybe_unused]] static void set_field_RED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "OUTER_CIRCLE_COLOR", "field_47469", "RED", "f_303863_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#field_47470
    [[maybe_unused]] static jint get_field_field_47470() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CIRCLE_VERTICES", "field_47470", "field_47470", "f_303865_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#field_47470
    [[maybe_unused]] static void set_field_field_47470(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CIRCLE_VERTICES", "field_47470", "field_47470", "f_303865_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#field_47471
    [[maybe_unused]] static jfloat get_field_field_47471() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SEGMENT_SIZE_RADIANS", "field_47471", "field_47471", "f_302238_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#field_47471
    [[maybe_unused]] static void set_field_field_47471(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SEGMENT_SIZE_RADIANS", "field_47471", "field_47471", "f_302238_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.BreezeDebugRenderer#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "minecraft", "field_47472", "client", "f_303199_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "minecraft", "field_47472", "client", "f_303199_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.BreezeDebugRenderer#breezes
    static jobject get_field_breezes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "perEntity", "field_47473", "breezes", "f_303736_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BreezeDebugRenderer#breezes
    static void set_field_breezes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "perEntity", "field_47473", "breezes", "f_303736_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_55259", "render", "m_306567_"), "(Lfbi;Lgez;DDD)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_drawLine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "drawLine", "method_55262", "drawLine", "m_304788_"), "(Lfbi;Lgez;DDDLexc;Lexc;I)V");
    }

    static void drawLine(const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jobject& arg5, const jobject& arg6, const jint& arg7) {
       const auto clazz = self();
       const auto methodID = methodID_drawLine();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_drawCurve() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "drawCircle", "method_55265", "drawCurve", "m_307508_"), "(Lorg/joml/Matrix4f;DDDLfbm;Lexc;FI)V");
    }

    static void drawCurve(const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jobject& arg4, const jobject& arg5, const jfloat& arg6, const jint& arg7) {
       const auto clazz = self();
       const auto methodID = methodID_drawCurve();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_drawCurvePart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "drawCircleVertex", "method_55256", "drawCurvePart", "m_305544_"), "(ILorg/joml/Matrix4f;DDDLfbm;Lexc;FI)V");
    }

    static void drawCurvePart(const jint& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jobject& arg5, const jobject& arg6, const jfloat& arg7, const jint& arg8) {
       const auto clazz = self();
       const auto methodID = methodID_drawCurvePart();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clear", "method_55255", "clear", "m_307053_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_addBreezeDebugInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_55266", "addBreezeDebugInfo", "m_306647_"), "(Laai$a;)V");
    }

    static void addBreezeDebugInfo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addBreezeDebugInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_DEBUG_BREEZEDEBUGRENDERER_HPP