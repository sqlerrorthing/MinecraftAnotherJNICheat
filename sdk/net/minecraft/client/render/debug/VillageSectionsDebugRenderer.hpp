// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_DEBUG_VILLAGESECTIONSDEBUGRENDERER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_DEBUG_VILLAGESECTIONSDEBUGRENDERER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.debug.VillageSectionsDebugRenderer
 * Remapped: giz
 */
namespace VillageSectionsDebugRenderer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("giz", "net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer", "net/minecraft/class_4841", "net/minecraft/client/render/debug/VillageSectionsDebugRenderer", "net/minecraft/src/C_4301_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.debug.VillageSectionsDebugRenderer#RANGE
    [[maybe_unused]] static jint get_field_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_RENDER_DIST_FOR_VILLAGE_SECTIONS", "field_32917", "RANGE", "f_173904_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageSectionsDebugRenderer#RANGE
    [[maybe_unused]] static void set_field_RANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_RENDER_DIST_FOR_VILLAGE_SECTIONS", "field_32917", "RANGE", "f_173904_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.VillageSectionsDebugRenderer#sections
    static jobject get_field_sections(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "villageSections", "field_22409", "sections", "f_113693_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.VillageSectionsDebugRenderer#sections
    static void set_field_sections(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "villageSections", "field_22409", "sections", "f_113693_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clear", "method_20414", "clear", "m_5630_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_addSection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setVillageSection", "method_24808", "addSection", "m_113709_"), "(Lkf;)V");
    }

    static void addSection(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addSection();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeSection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setNotVillageSection", "method_24809", "removeSection", "m_113711_"), "(Lkf;)V");
    }

    static void removeSection(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeSection();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_23109", "render", "m_7790_"), "(Lfbi;Lgez;DDD)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_drawBoxAtCenterOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "highlightVillageSection", "method_24810", "drawBoxAtCenterOf", "m_269445_"), "(Lfbi;Lgez;Lkf;)V");
    }

    static void drawBoxAtCenterOf(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_drawBoxAtCenterOf();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_DEBUG_VILLAGESECTIONSDEBUGRENDERER_HPP