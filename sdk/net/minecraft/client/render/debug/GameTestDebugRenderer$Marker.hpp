// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_DEBUG_GAMETESTDEBUGRENDERER$MARKER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_DEBUG_GAMETESTDEBUGRENDERER$MARKER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.debug.GameTestDebugRenderer$Marker
 * Remapped: gio$a
 */
namespace GameTestDebugRenderer$Marker {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gio$a", "net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker", "net/minecraft/class_4503$class_4504", "net/minecraft/client/render/debug/GameTestDebugRenderer$Marker", "net/minecraft/src/C_4289_$C_4290_"));
        }
        return cachedClass;
    };

    // getter for public field net.minecraft.client.render.debug.GameTestDebugRenderer$Marker#color
    static jint get_field_color(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "color", "field_20521", "color", "f_113532_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.debug.GameTestDebugRenderer$Marker#color
    static void set_field_color(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "color", "field_20521", "color", "f_113532_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.debug.GameTestDebugRenderer$Marker#message
    static jobject get_field_message(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "text", "field_20522", "message", "f_113533_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.debug.GameTestDebugRenderer$Marker#message
    static void set_field_message(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "text", "field_20522", "message", "f_113533_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.debug.GameTestDebugRenderer$Marker#removalTime
    static jlong get_field_removalTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "removeAtTime", "field_20523", "removalTime", "f_113534_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.debug.GameTestDebugRenderer$Marker#removalTime
    static void set_field_removalTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "removeAtTime", "field_20523", "removalTime", "f_113534_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_getRed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getR", "method_23112", "getRed", "m_113539_"), "()F");
    }

    static jfloat getRed(const jobject& obj) {
                
       const auto methodID = methodID_getRed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getG", "method_23113", "getBlue", "m_113540_"), "()F");
    }

    static jfloat getBlue(const jobject& obj) {
                
       const auto methodID = methodID_getBlue();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getB", "method_23114", "getGreen", "m_113541_"), "()F");
    }

    static jfloat getGreen(const jobject& obj) {
                
       const auto methodID = methodID_getGreen();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAlpha() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getA", "method_23115", "getAlpha", "m_113542_"), "()F");
    }

    static jfloat getAlpha(const jobject& obj) {
                
       const auto methodID = methodID_getAlpha();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_DEBUG_GAMETESTDEBUGRENDERER$MARKER_HPP