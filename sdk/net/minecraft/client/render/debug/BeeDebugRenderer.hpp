// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_DEBUG_BEEDEBUGRENDERER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_DEBUG_BEEDEBUGRENDERER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.debug.BeeDebugRenderer
 * Remapped: gig
 */
namespace BeeDebugRenderer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gig", "net/minecraft/client/renderer/debug/BeeDebugRenderer", "net/minecraft/class_4703", "net/minecraft/client/render/debug/BeeDebugRenderer", "net/minecraft/src/C_4275_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32841
    [[maybe_unused]] static jboolean get_field_field_32841() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SHOW_GOAL_FOR_ALL_BEES", "field_32841", "field_32841", "f_173737_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32841
    [[maybe_unused]] static void set_field_field_32841(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SHOW_GOAL_FOR_ALL_BEES", "field_32841", "field_32841", "f_173737_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32842
    [[maybe_unused]] static jboolean get_field_field_32842() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SHOW_NAME_FOR_ALL_BEES", "field_32842", "field_32842", "f_173738_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32842
    [[maybe_unused]] static void set_field_field_32842(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SHOW_NAME_FOR_ALL_BEES", "field_32842", "field_32842", "f_173738_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32843
    [[maybe_unused]] static jboolean get_field_field_32843() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SHOW_HIVE_FOR_ALL_BEES", "field_32843", "field_32843", "f_173739_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32843
    [[maybe_unused]] static void set_field_field_32843(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SHOW_HIVE_FOR_ALL_BEES", "field_32843", "field_32843", "f_173739_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32844
    [[maybe_unused]] static jboolean get_field_field_32844() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SHOW_FLOWER_POS_FOR_ALL_BEES", "field_32844", "field_32844", "f_173740_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32844
    [[maybe_unused]] static void set_field_field_32844(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SHOW_FLOWER_POS_FOR_ALL_BEES", "field_32844", "field_32844", "f_173740_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32845
    [[maybe_unused]] static jboolean get_field_field_32845() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SHOW_TRAVEL_TICKS_FOR_ALL_BEES", "field_32845", "field_32845", "f_173741_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32845
    [[maybe_unused]] static void set_field_field_32845(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SHOW_TRAVEL_TICKS_FOR_ALL_BEES", "field_32845", "field_32845", "f_173741_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32846
    [[maybe_unused]] static jboolean get_field_field_32846() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SHOW_PATH_FOR_ALL_BEES", "field_32846", "field_32846", "f_173742_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32846
    [[maybe_unused]] static void set_field_field_32846(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SHOW_PATH_FOR_ALL_BEES", "field_32846", "field_32846", "f_173742_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32847
    [[maybe_unused]] static jboolean get_field_field_32847() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SHOW_GOAL_FOR_SELECTED_BEE", "field_32847", "field_32847", "f_173743_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32847
    [[maybe_unused]] static void set_field_field_32847(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SHOW_GOAL_FOR_SELECTED_BEE", "field_32847", "field_32847", "f_173743_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32848
    [[maybe_unused]] static jboolean get_field_field_32848() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SHOW_NAME_FOR_SELECTED_BEE", "field_32848", "field_32848", "f_173744_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32848
    [[maybe_unused]] static void set_field_field_32848(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SHOW_NAME_FOR_SELECTED_BEE", "field_32848", "field_32848", "f_173744_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32849
    [[maybe_unused]] static jboolean get_field_field_32849() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SHOW_HIVE_FOR_SELECTED_BEE", "field_32849", "field_32849", "f_173745_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32849
    [[maybe_unused]] static void set_field_field_32849(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SHOW_HIVE_FOR_SELECTED_BEE", "field_32849", "field_32849", "f_173745_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32850
    [[maybe_unused]] static jboolean get_field_field_32850() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SHOW_FLOWER_POS_FOR_SELECTED_BEE", "field_32850", "field_32850", "f_173746_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32850
    [[maybe_unused]] static void set_field_field_32850(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SHOW_FLOWER_POS_FOR_SELECTED_BEE", "field_32850", "field_32850", "f_173746_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32851
    [[maybe_unused]] static jboolean get_field_field_32851() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SHOW_TRAVEL_TICKS_FOR_SELECTED_BEE", "field_32851", "field_32851", "f_173747_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32851
    [[maybe_unused]] static void set_field_field_32851(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SHOW_TRAVEL_TICKS_FOR_SELECTED_BEE", "field_32851", "field_32851", "f_173747_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32852
    [[maybe_unused]] static jboolean get_field_field_32852() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SHOW_PATH_FOR_SELECTED_BEE", "field_32852", "field_32852", "f_173748_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32852
    [[maybe_unused]] static void set_field_field_32852(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SHOW_PATH_FOR_SELECTED_BEE", "field_32852", "field_32852", "f_173748_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32853
    [[maybe_unused]] static jboolean get_field_field_32853() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SHOW_HIVE_MEMBERS", "field_32853", "field_32853", "f_173749_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32853
    [[maybe_unused]] static void set_field_field_32853(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SHOW_HIVE_MEMBERS", "field_32853", "field_32853", "f_173749_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32854
    [[maybe_unused]] static jboolean get_field_field_32854() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SHOW_BLACKLISTS", "field_32854", "field_32854", "f_173750_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32854
    [[maybe_unused]] static void set_field_field_32854(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SHOW_BLACKLISTS", "field_32854", "field_32854", "f_173750_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#HIVE_RANGE
    [[maybe_unused]] static jint get_field_HIVE_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "MAX_RENDER_DIST_FOR_HIVE_OVERLAY", "field_32855", "HIVE_RANGE", "f_173751_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#HIVE_RANGE
    [[maybe_unused]] static void set_field_HIVE_RANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "MAX_RENDER_DIST_FOR_HIVE_OVERLAY", "field_32855", "HIVE_RANGE", "f_173751_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#BEE_RANGE
    [[maybe_unused]] static jint get_field_BEE_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MAX_RENDER_DIST_FOR_BEE_OVERLAY", "field_32856", "BEE_RANGE", "f_173752_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#BEE_RANGE
    [[maybe_unused]] static void set_field_BEE_RANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MAX_RENDER_DIST_FOR_BEE_OVERLAY", "field_32856", "BEE_RANGE", "f_173752_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#TARGET_ENTITY_RANGE
    [[maybe_unused]] static jint get_field_TARGET_ENTITY_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "MAX_TARGETING_DIST", "field_32857", "TARGET_ENTITY_RANGE", "f_173753_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#TARGET_ENTITY_RANGE
    [[maybe_unused]] static void set_field_TARGET_ENTITY_RANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "MAX_TARGETING_DIST", "field_32857", "TARGET_ENTITY_RANGE", "f_173753_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32858
    [[maybe_unused]] static jint get_field_field_32858() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "HIVE_TIMEOUT", "field_32858", "field_32858", "f_173754_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#field_32858
    [[maybe_unused]] static void set_field_field_32858(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "HIVE_TIMEOUT", "field_32858", "field_32858", "f_173754_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#DEFAULT_DRAWN_STRING_SIZE
    [[maybe_unused]] static jfloat get_field_DEFAULT_DRAWN_STRING_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "TEXT_SCALE", "field_32859", "DEFAULT_DRAWN_STRING_SIZE", "f_173755_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#DEFAULT_DRAWN_STRING_SIZE
    [[maybe_unused]] static void set_field_DEFAULT_DRAWN_STRING_SIZE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "TEXT_SCALE", "field_32859", "DEFAULT_DRAWN_STRING_SIZE", "f_173755_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#WHITE
    [[maybe_unused]] static jint get_field_WHITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "WHITE", "field_32860", "WHITE", "f_173756_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#WHITE
    [[maybe_unused]] static void set_field_WHITE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "WHITE", "field_32860", "WHITE", "f_173756_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#YELLOW
    [[maybe_unused]] static jint get_field_YELLOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "YELLOW", "field_32861", "YELLOW", "f_173757_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#YELLOW
    [[maybe_unused]] static void set_field_YELLOW(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "YELLOW", "field_32861", "YELLOW", "f_173757_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#ORANGE
    [[maybe_unused]] static jint get_field_ORANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "ORANGE", "field_32862", "ORANGE", "f_173758_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#ORANGE
    [[maybe_unused]] static void set_field_ORANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "ORANGE", "field_32862", "ORANGE", "f_173758_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#GREEN
    [[maybe_unused]] static jint get_field_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "GREEN", "field_32863", "GREEN", "f_173759_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#GREEN
    [[maybe_unused]] static void set_field_GREEN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "GREEN", "field_32863", "GREEN", "f_173759_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#GRAY
    [[maybe_unused]] static jint get_field_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "GRAY", "field_32864", "GRAY", "f_173760_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#GRAY
    [[maybe_unused]] static void set_field_GRAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "GRAY", "field_32864", "GRAY", "f_173760_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#PINK
    [[maybe_unused]] static jint get_field_PINK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "PINK", "field_32865", "PINK", "f_173761_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#PINK
    [[maybe_unused]] static void set_field_PINK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "PINK", "field_32865", "PINK", "f_173761_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#RED
    [[maybe_unused]] static jint get_field_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "RED", "field_32866", "RED", "f_173762_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#RED
    [[maybe_unused]] static void set_field_RED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "RED", "field_32866", "RED", "f_173762_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.BeeDebugRenderer#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "minecraft", "field_21532", "client", "f_113048_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "minecraft", "field_21532", "client", "f_113048_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.BeeDebugRenderer#hives
    static jobject get_field_hives(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "hives", "field_21533", "hives", "f_113049_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#hives
    static void set_field_hives(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "hives", "field_21533", "hives", "f_113049_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.BeeDebugRenderer#bees
    static jobject get_field_bees(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "beeInfosPerEntity", "field_21534", "bees", "f_113050_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#bees
    static void set_field_bees(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "beeInfosPerEntity", "field_21534", "bees", "f_113050_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.BeeDebugRenderer#targetedEntity
    static jobject get_field_targetedEntity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "lastLookedAtUuid", "field_21535", "targetedEntity", "f_113051_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.BeeDebugRenderer#targetedEntity
    static void set_field_targetedEntity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "lastLookedAtUuid", "field_21535", "targetedEntity", "f_113051_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clear", "method_20414", "clear", "m_5630_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_addHive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addOrUpdateHiveInfo", "method_23807", "addHive", "m_113071_"), "(Laaq$a;J)V");
    }

    static void addHive(const jobject& obj, const jobject& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_addHive();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addBee() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addOrUpdateBeeInfo", "method_23805", "addBee", "m_113066_"), "(Laaf$a;)V");
    }

    static void addBee(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addBee();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeBee() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeBeeInfo", "method_35794", "removeBee", "m_173763_"), "(I)V");
    }

    static void removeBee(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_removeBee();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_23109", "render", "m_7790_"), "(Lfbi;Lgez;DDD)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_removeInvalidBees() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "clearRemovedBees", "method_23952", "removeInvalidBees", "m_113126_"), "()V");
    }

    static void removeInvalidBees(const jobject& obj) {
                
       const auto methodID = methodID_removeInvalidBees();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeOutdatedHives() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "clearRemovedHives", "method_23819", "removeOutdatedHives", "m_113136_"), "()V");
    }

    static void removeOutdatedHives(const jobject& obj) {
                
       const auto methodID = methodID_removeOutdatedHives();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doRender", "method_23823", "render", "m_269283_"), "(Lfbi;Lgez;)V");
    }

    static void _render(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBlacklistingBees() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "createHiveBlacklistMap", "method_24084", "getBlacklistingBees", "m_113146_"), "()Ljava/util/Map;");
    }

    static jobject getBlacklistingBees(const jobject& obj) {
                
       const auto methodID = methodID_getBlacklistingBees();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_drawFlowers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderFlowerInfos", "method_23826", "drawFlowers", "m_269561_"), "(Lfbi;Lgez;)V");
    }

    static void drawFlowers(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_drawFlowers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_toString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getBeeUuidsAsString", "method_23825", "toString", "m_113115_"), "(Ljava/util/Collection;)Ljava/lang/String;");
    }

    static jobject toString(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_drawHive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "highlightHive", "method_23808", "drawHive", "m_269172_"), "(Lfbi;Lgez;Ljd;)V");
    }

    static void drawHive(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_drawHive();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_drawHiveBees() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderGhostHive", "method_23813", "drawHiveBees", "m_269584_"), "(Lfbi;Lgez;Ljd;Ljava/util/List;)V");
    }

    static void drawHiveBees(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_drawHiveBees();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawHiveInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderHiveInfo", "method_23821", "drawHiveInfo", "m_269169_"), "(Lfbi;Lgez;Laaq$a;Ljava/util/Collection;)V");
    }

    static void drawHiveInfo(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_drawHiveInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderPath", "method_23820", "drawPath", "m_269467_"), "(Lfbi;Lgez;Laaf$a;)V");
    }

    static void drawPath(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_drawPath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_drawBee() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderBeeInfo", "method_23824", "drawBee", "m_269284_"), "(Lfbi;Lgez;Laaf$a;)V");
    }

    static void drawBee(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_drawBee();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_drawString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderTextOverHive", "method_23815", "drawString", "m_269057_"), "(Lfbi;Lgez;Ljava/lang/String;Laaq$a;II)V");
    }

    static void drawString(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jint& arg4, const jint& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_drawString();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID__drawString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderTextOverPos", "method_23816", "drawString", "m_269380_"), "(Lfbi;Lgez;Ljava/lang/String;Ljd;II)V");
    }

    static void _drawString(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jint& arg4, const jint& arg5) {
       const auto clazz = self();
       const auto methodID = methodID__drawString();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID___drawString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderTextOverMob", "method_23814", "drawString", "m_269015_"), "(Lfbi;Lgez;Ljw;ILjava/lang/String;IF)V");
    }

    static void __drawString(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jobject& arg4, const jint& arg5, const jfloat& arg6) {
       const auto clazz = self();
       const auto methodID = methodID___drawString();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_getCameraPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getCamera", "method_23828", "getCameraPos", "m_113154_"), "()Lffy;");
    }

    static jobject getCameraPos(const jobject& obj) {
                
       const auto methodID = methodID_getCameraPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBeeNamesForHive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getHiveMemberNames", "method_35796", "getBeeNamesForHive", "m_173772_"), "(Laaq$a;)Ljava/util/Set;");
    }

    static jobject getBeeNamesForHive(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBeeNamesForHive();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPositionString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPosDescription", "method_23806", "getPositionString", "m_113068_"), "(Laaf$a;Ljd;)Ljava/lang/String;");
    }

    static jobject getPositionString(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getPositionString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isTargeted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isBeeSelected", "method_23827", "isTargeted", "m_113142_"), "(Laaf$a;)Z");
    }

    static jboolean isTargeted(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isTargeted();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isInRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isPlayerCloseEnoughToMob", "method_23829", "isInRange", "m_113147_"), "(Laaf$a;)Z");
    }

    static jboolean isInRange(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isInRange();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBeesForHive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getHiveMembers", "method_23822", "getBeesForHive", "m_113129_"), "(Ljd;)Ljava/util/Collection;");
    }

    static jobject getBeesForHive(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBeesForHive();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBeesByHive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getGhostHives", "method_23830", "getBeesByHive", "m_113155_"), "()Ljava/util/Map;");
    }

    static jobject getBeesByHive(const jobject& obj) {
                
       const auto methodID = methodID_getBeesByHive();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateTargetedEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "updateLastLookedAtUuid", "method_23832", "updateTargetedEntity", "m_113156_"), "()V");
    }

    static void updateTargetedEntity(const jobject& obj) {
                
       const auto methodID = methodID_updateTargetedEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_DEBUG_BEEDEBUGRENDERER_HPP