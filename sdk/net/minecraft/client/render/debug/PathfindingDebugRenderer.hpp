// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_DEBUG_PATHFINDINGDEBUGRENDERER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_DEBUG_PATHFINDINGDEBUGRENDERER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.debug.PathfindingDebugRenderer
 * Remapped: giu
 */
namespace PathfindingDebugRenderer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("giu", "net/minecraft/client/renderer/debug/PathfindingRenderer", "net/minecraft/class_868", "net/minecraft/client/render/debug/PathfindingDebugRenderer", "net/minecraft/src/C_4297_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.render.debug.PathfindingDebugRenderer#paths
    static jobject get_field_paths(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pathMap", "field_4616", "paths", "f_113607_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#paths
    static void set_field_paths(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pathMap", "field_4616", "paths", "f_113607_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.PathfindingDebugRenderer#nodeSizes
    static jobject get_field_nodeSizes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "pathMaxDist", "field_4617", "nodeSizes", "f_113608_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#nodeSizes
    static void set_field_nodeSizes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "pathMaxDist", "field_4617", "nodeSizes", "f_113608_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.PathfindingDebugRenderer#pathTimes
    static jobject get_field_pathTimes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "creationMap", "field_4615", "pathTimes", "f_113609_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#pathTimes
    static void set_field_pathTimes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "creationMap", "field_4615", "pathTimes", "f_113609_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#MAX_PATH_AGE
    [[maybe_unused]] static jlong get_field_MAX_PATH_AGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TIMEOUT", "field_32906", "MAX_PATH_AGE", "f_173893_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#MAX_PATH_AGE
    [[maybe_unused]] static void set_field_MAX_PATH_AGE(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TIMEOUT", "field_32906", "MAX_PATH_AGE", "f_173893_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#RANGE
    [[maybe_unused]] static jfloat get_field_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAX_RENDER_DIST", "field_32907", "RANGE", "f_173894_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#RANGE
    [[maybe_unused]] static void set_field_RANGE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAX_RENDER_DIST", "field_32907", "RANGE", "f_173894_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#field_32908
    [[maybe_unused]] static jboolean get_field_field_32908() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SHOW_OPEN_CLOSED", "field_32908", "field_32908", "f_173895_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#field_32908
    [[maybe_unused]] static void set_field_field_32908(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SHOW_OPEN_CLOSED", "field_32908", "field_32908", "f_173895_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#field_32909
    [[maybe_unused]] static jboolean get_field_field_32909() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SHOW_OPEN_CLOSED_COST_MALUS", "field_32909", "field_32909", "f_173896_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#field_32909
    [[maybe_unused]] static void set_field_field_32909(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SHOW_OPEN_CLOSED_COST_MALUS", "field_32909", "field_32909", "f_173896_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#field_32910
    [[maybe_unused]] static jboolean get_field_field_32910() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SHOW_OPEN_CLOSED_NODE_TYPE_WITH_TEXT", "field_32910", "field_32910", "f_173897_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#field_32910
    [[maybe_unused]] static void set_field_field_32910(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SHOW_OPEN_CLOSED_NODE_TYPE_WITH_TEXT", "field_32910", "field_32910", "f_173897_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#field_32911
    [[maybe_unused]] static jboolean get_field_field_32911() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SHOW_OPEN_CLOSED_NODE_TYPE_WITH_BOX", "field_32911", "field_32911", "f_173898_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#field_32911
    [[maybe_unused]] static void set_field_field_32911(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SHOW_OPEN_CLOSED_NODE_TYPE_WITH_BOX", "field_32911", "field_32911", "f_173898_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#field_32912
    [[maybe_unused]] static jboolean get_field_field_32912() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SHOW_GROUND_LABELS", "field_32912", "field_32912", "f_173899_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#field_32912
    [[maybe_unused]] static void set_field_field_32912(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SHOW_GROUND_LABELS", "field_32912", "field_32912", "f_173899_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#DRAWN_STRING_SIZE
    [[maybe_unused]] static jfloat get_field_DRAWN_STRING_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "TEXT_SCALE", "field_32913", "DRAWN_STRING_SIZE", "f_173900_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.PathfindingDebugRenderer#DRAWN_STRING_SIZE
    [[maybe_unused]] static void set_field_DRAWN_STRING_SIZE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "TEXT_SCALE", "field_32913", "DRAWN_STRING_SIZE", "f_173900_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    static jmethodID methodID_addPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPath", "method_3869", "addPath", "m_113611_"), "(ILeps;F)V");
    }

    static void addPath(const jobject& obj, const jint& arg0, const jobject& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_addPath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_23109", "render", "m_7790_"), "(Lfbi;Lgez;DDD)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_drawPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderPath", "method_23118", "drawPath", "m_269027_"), "(Lfbi;Lgez;Leps;FZZDDD)V");
    }

    static void drawPath(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3, const jboolean& arg4, const jboolean& arg5, const jdouble& arg6, const jdouble& arg7, const jdouble& arg8) {
       const auto clazz = self();
       const auto methodID = methodID_drawPath();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_drawPathLines() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderPathLine", "method_23117", "drawPathLines", "m_269170_"), "(Lfbi;Lfbm;Leps;DDD)V");
    }

    static void drawPathLines(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_drawPathLines();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getManhattanDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "distanceToCamera", "method_23119", "getManhattanDistance", "m_113634_"), "(Ljd;DDD)F");
    }

    static jfloat getManhattanDistance(const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getManhattanDistance();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_DEBUG_PATHFINDINGDEBUGRENDERER_HPP