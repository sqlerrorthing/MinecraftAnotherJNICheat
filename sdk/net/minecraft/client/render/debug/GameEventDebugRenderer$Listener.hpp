// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_DEBUG_GAMEEVENTDEBUGRENDERER$LISTENER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_DEBUG_GAMEEVENTDEBUGRENDERER$LISTENER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.debug.GameEventDebugRenderer$Listener
 * Remapped: gin$b
 */
namespace GameEventDebugRenderer$Listener {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gin$b", "net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedListener", "net/minecraft/class_5739$class_5741", "net/minecraft/client/render/debug/GameEventDebugRenderer$Listener", "net/minecraft/src/C_141737_$C_141739_"));
        }
        return cachedClass;
    };

    // getter for public field net.minecraft.client.render.debug.GameEventDebugRenderer$Listener#positionSource
    static jobject get_field_positionSource(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "listenerSource", "field_28261", "positionSource", "f_173869_"), "Ldyd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.debug.GameEventDebugRenderer$Listener#positionSource
    static void set_field_positionSource(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "listenerSource", "field_28261", "positionSource", "f_173869_"), "Ldyd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.debug.GameEventDebugRenderer$Listener#range
    static jint get_field_range(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "listenerRange", "field_28262", "range", "f_173870_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.debug.GameEventDebugRenderer$Listener#range
    static void set_field_range(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "listenerRange", "field_28262", "range", "f_173870_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_isTooFar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isExpired", "method_33095", "isTooFar", "m_234542_"), "(Ldcw;Lexc;)Z");
    }

    static jboolean isTooFar(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isTooFar();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPosition", "method_33094", "getPos", "m_173875_"), "(Ldcw;)Ljava/util/Optional;");
    }

    static jobject getPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPositionSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getListenerSource", "method_32946", "getPositionSource", "m_142460_"), "()Ldyd;");
    }

    static jobject getPositionSource(const jobject& obj) {
                
       const auto methodID = methodID_getPositionSource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getListenerRadius", "method_32948", "getRange", "m_142078_"), "()I");
    }

    static jint getRange(const jobject& obj) {
                
       const auto methodID = methodID_getRange();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_listen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleGameEvent", "method_32947", "listen", "m_214068_"), "(Laqu;Ljm;Ldxz$a;Lexc;)Z");
    }

    static jboolean listen(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_listen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_DEBUG_GAMEEVENTDEBUGRENDERER$LISTENER_HPP