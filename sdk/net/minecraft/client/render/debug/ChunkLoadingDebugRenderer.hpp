// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_DEBUG_CHUNKLOADINGDEBUGRENDERER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_DEBUG_CHUNKLOADINGDEBUGRENDERER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.debug.ChunkLoadingDebugRenderer
 * Remapped: gik
 */
namespace ChunkLoadingDebugRenderer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gik", "net/minecraft/client/renderer/debug/ChunkDebugRenderer", "net/minecraft/class_860", "net/minecraft/client/render/debug/ChunkLoadingDebugRenderer", "net/minecraft/src/C_4283_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.client.render.debug.ChunkLoadingDebugRenderer#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "minecraft", "field_4509", "client", "f_113363_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.debug.ChunkLoadingDebugRenderer#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "minecraft", "field_4509", "client", "f_113363_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.ChunkLoadingDebugRenderer#lastUpdateTime
    static jdouble get_field_lastUpdateTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lastUpdateTime", "field_4510", "lastUpdateTime", "f_113364_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.ChunkLoadingDebugRenderer#lastUpdateTime
    static void set_field_lastUpdateTime(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lastUpdateTime", "field_4510", "lastUpdateTime", "f_113364_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.ChunkLoadingDebugRenderer#LOADING_DATA_CHUNK_RANGE
    static jint get_field_LOADING_DATA_CHUNK_RANGE(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "radius", "field_4511", "LOADING_DATA_CHUNK_RANGE", "f_113365_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.ChunkLoadingDebugRenderer#LOADING_DATA_CHUNK_RANGE
    static void set_field_LOADING_DATA_CHUNK_RANGE(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "radius", "field_4511", "LOADING_DATA_CHUNK_RANGE", "f_113365_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.ChunkLoadingDebugRenderer#loadingData
    static jobject get_field_loadingData(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "data", "field_20998", "loadingData", "f_113366_"), "Lgik$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.ChunkLoadingDebugRenderer#loadingData
    static void set_field_loadingData(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "data", "field_20998", "loadingData", "f_113366_"), "Lgik$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_23109", "render", "m_7790_"), "(Lfbi;Lgez;DDD)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_DEBUG_CHUNKLOADINGDEBUGRENDERER_HPP