// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_DEBUG_LIGHTDEBUGRENDERER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_DEBUG_LIGHTDEBUGRENDERER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.debug.LightDebugRenderer
 * Remapped: gis
 */
namespace LightDebugRenderer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gis", "net/minecraft/client/renderer/debug/LightSectionDebugRenderer", "net/minecraft/class_8520", "net/minecraft/client/render/debug/LightDebugRenderer", "net/minecraft/src/C_279505_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.debug.LightDebugRenderer#UPDATE_INTERVAL
    [[maybe_unused]] static jobject get_field_UPDATE_INTERVAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "REFRESH_INTERVAL", "field_44675", "UPDATE_INTERVAL", "f_279526_"), "Ljava/time/Duration;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.LightDebugRenderer#UPDATE_INTERVAL
    [[maybe_unused]] static void set_field_UPDATE_INTERVAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "REFRESH_INTERVAL", "field_44675", "UPDATE_INTERVAL", "f_279526_"), "Ljava/time/Duration;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.LightDebugRenderer#RADIUS
    [[maybe_unused]] static jint get_field_RADIUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RADIUS", "field_44676", "RADIUS", "f_279660_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.LightDebugRenderer#RADIUS
    [[maybe_unused]] static void set_field_RADIUS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RADIUS", "field_44676", "RADIUS", "f_279660_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.LightDebugRenderer#READY_SHAPE_COLOR
    [[maybe_unused]] static jobject get_field_READY_SHAPE_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LIGHT_AND_BLOCKS_COLOR", "field_44677", "READY_SHAPE_COLOR", "f_279653_"), "Lorg/joml/Vector4f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.LightDebugRenderer#READY_SHAPE_COLOR
    [[maybe_unused]] static void set_field_READY_SHAPE_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LIGHT_AND_BLOCKS_COLOR", "field_44677", "READY_SHAPE_COLOR", "f_279653_"), "Lorg/joml/Vector4f;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.debug.LightDebugRenderer#DEFAULT_SHAPE_COLOR
    [[maybe_unused]] static jobject get_field_DEFAULT_SHAPE_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LIGHT_ONLY_COLOR", "field_44678", "DEFAULT_SHAPE_COLOR", "f_279579_"), "Lorg/joml/Vector4f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.LightDebugRenderer#DEFAULT_SHAPE_COLOR
    [[maybe_unused]] static void set_field_DEFAULT_SHAPE_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LIGHT_ONLY_COLOR", "field_44678", "DEFAULT_SHAPE_COLOR", "f_279579_"), "Lorg/joml/Vector4f;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.LightDebugRenderer#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "minecraft", "field_44679", "client", "f_279566_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.LightDebugRenderer#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "minecraft", "field_44679", "client", "f_279566_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.LightDebugRenderer#lightType
    static jobject get_field_lightType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lightLayer", "field_44680", "lightType", "f_279558_"), "Lddf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.LightDebugRenderer#lightType
    static void set_field_lightType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lightLayer", "field_44680", "lightType", "f_279558_"), "Lddf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.LightDebugRenderer#prevUpdateTime
    static jobject get_field_prevUpdateTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "lastUpdateTime", "field_44681", "prevUpdateTime", "f_279524_"), "Ljava/time/Instant;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.LightDebugRenderer#prevUpdateTime
    static void set_field_prevUpdateTime(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "lastUpdateTime", "field_44681", "prevUpdateTime", "f_279524_"), "Ljava/time/Instant;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.debug.LightDebugRenderer#data
    static jobject get_field_data(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "data", "field_44682", "data", "f_279532_"), "Lgis$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.debug.LightDebugRenderer#data
    static void set_field_data(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "data", "field_44682", "data", "f_279532_"), "Lgis$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_23109", "render", "m_7790_"), "(Lfbi;Lgez;DDD)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_drawFaces() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderFaces", "method_51457", "drawFaces", "m_280198_"), "(Lfbi;Lexl;Lkf;Lfbm;DDDLorg/joml/Vector4f;)V");
    }

    static void drawFaces(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6, const jobject& arg7) {
       const auto clazz = self();
       const auto methodID = methodID_drawFaces();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_drawEdges() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderEdges", "method_51458", "drawEdges", "m_280110_"), "(Lfbi;Lexl;Lkf;Lgez;DDDLorg/joml/Vector4f;)V");
    }

    static void drawEdges(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6, const jobject& arg7) {
       const auto clazz = self();
       const auto methodID = methodID_drawEdges();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_drawFace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderFace", "method_51460", "drawFace", "m_280142_"), "(Lfbi;Lfbm;Lji;DDDIIILorg/joml/Vector4f;)V");
    }

    static void drawFace(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jint& arg6, const jint& arg7, const jint& arg8, const jobject& arg9) {
       const auto clazz = self();
       const auto methodID = methodID_drawFace();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_drawEdge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderEdge", "method_51459", "drawEdge", "m_280135_"), "(Lfbi;Lfbm;DDDIIIIIILorg/joml/Vector4f;)V");
    }

    static void drawEdge(const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jint& arg8, const jint& arg9, const jint& arg10, const jobject& arg11) {
       const auto clazz = self();
       const auto methodID = methodID_drawEdge();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_DEBUG_LIGHTDEBUGRENDERER_HPP