// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_WORLDRENDERER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_WORLDRENDERER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.WorldRenderer
 * Remapped: gex
 */
namespace WorldRenderer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gex", "net/minecraft/client/renderer/LevelRenderer", "net/minecraft/class_761", "net/minecraft/client/render/WorldRenderer", "net/minecraft/src/C_4134_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.WorldRenderer#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LOGGER", "field_4060", "LOGGER", "f_109453_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LOGGER", "field_4060", "LOGGER", "f_109453_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.WorldRenderer#field_32759
    [[maybe_unused]] static jint get_field_field_32759() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SECTION_SIZE", "field_32759", "field_32759", "f_291639_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.WorldRenderer#field_32759
    [[maybe_unused]] static void set_field_field_32759(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SECTION_SIZE", "field_32759", "field_32759", "f_291639_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.WorldRenderer#field_34812
    [[maybe_unused]] static jint get_field_field_34812() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HALF_SECTION_SIZE", "field_34812", "field_34812", "f_291129_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.WorldRenderer#field_34812
    [[maybe_unused]] static void set_field_field_34812(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HALF_SECTION_SIZE", "field_34812", "field_34812", "f_291129_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.WorldRenderer#field_32762
    [[maybe_unused]] static jfloat get_field_field_32762() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SKY_DISC_RADIUS", "field_32762", "field_32762", "f_172941_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#field_32762
    [[maybe_unused]] static void set_field_field_32762(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SKY_DISC_RADIUS", "field_32762", "field_32762", "f_172941_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.WorldRenderer#field_32763
    [[maybe_unused]] static jint get_field_field_32763() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MIN_FOG_DISTANCE", "field_32763", "field_32763", "f_172942_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#field_32763
    [[maybe_unused]] static void set_field_field_32763(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MIN_FOG_DISTANCE", "field_32763", "field_32763", "f_172942_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.WorldRenderer#field_32764
    [[maybe_unused]] static jint get_field_field_32764() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "RAIN_RADIUS", "field_32764", "field_32764", "f_172943_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#field_32764
    [[maybe_unused]] static void set_field_field_32764(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "RAIN_RADIUS", "field_32764", "field_32764", "f_172943_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.WorldRenderer#field_32765
    [[maybe_unused]] static jint get_field_field_32765() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "RAIN_DIAMETER", "field_32765", "field_32765", "f_172944_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#field_32765
    [[maybe_unused]] static void set_field_field_32765(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "RAIN_DIAMETER", "field_32765", "field_32765", "f_172944_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.WorldRenderer#field_32766
    [[maybe_unused]] static jint get_field_field_32766() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TRANSPARENT_SORT_COUNT", "field_32766", "field_32766", "f_172945_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#field_32766
    [[maybe_unused]] static void set_field_field_32766(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "TRANSPARENT_SORT_COUNT", "field_32766", "field_32766", "f_172945_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.WorldRenderer#MOON_PHASES
    [[maybe_unused]] static jobject get_field_MOON_PHASES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "MOON_LOCATION", "field_4098", "MOON_PHASES", "f_109454_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#MOON_PHASES
    [[maybe_unused]] static void set_field_MOON_PHASES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "MOON_LOCATION", "field_4098", "MOON_PHASES", "f_109454_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.WorldRenderer#SUN
    [[maybe_unused]] static jobject get_field_SUN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SUN_LOCATION", "field_4111", "SUN", "f_109455_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#SUN
    [[maybe_unused]] static void set_field_SUN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SUN_LOCATION", "field_4111", "SUN", "f_109455_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.client.render.WorldRenderer#CLOUDS
    [[maybe_unused]] static jobject get_field_CLOUDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CLOUDS_LOCATION", "field_4108", "CLOUDS", "f_109456_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.WorldRenderer#CLOUDS
    [[maybe_unused]] static void set_field_CLOUDS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CLOUDS_LOCATION", "field_4108", "CLOUDS", "f_109456_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.WorldRenderer#END_SKY
    [[maybe_unused]] static jobject get_field_END_SKY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "END_SKY_LOCATION", "field_4061", "END_SKY", "f_109457_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#END_SKY
    [[maybe_unused]] static void set_field_END_SKY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "END_SKY_LOCATION", "field_4061", "END_SKY", "f_109457_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.WorldRenderer#FORCEFIELD
    [[maybe_unused]] static jobject get_field_FORCEFIELD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "FORCEFIELD_LOCATION", "field_4071", "FORCEFIELD", "f_109458_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#FORCEFIELD
    [[maybe_unused]] static void set_field_FORCEFIELD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "FORCEFIELD_LOCATION", "field_4071", "FORCEFIELD", "f_109458_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.WorldRenderer#RAIN
    [[maybe_unused]] static jobject get_field_RAIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "RAIN_LOCATION", "field_20797", "RAIN", "f_109459_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#RAIN
    [[maybe_unused]] static void set_field_RAIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "RAIN_LOCATION", "field_20797", "RAIN", "f_109459_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.WorldRenderer#SNOW
    [[maybe_unused]] static jobject get_field_SNOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SNOW_LOCATION", "field_20798", "SNOW", "f_109460_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#SNOW
    [[maybe_unused]] static void set_field_SNOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SNOW_LOCATION", "field_20798", "SNOW", "f_109460_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.WorldRenderer#DIRECTIONS
    [[maybe_unused]] static jobject get_field_DIRECTIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DIRECTIONS", "field_4095", "DIRECTIONS", "f_109434_"), "[Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.WorldRenderer#DIRECTIONS
    [[maybe_unused]] static void set_field_DIRECTIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DIRECTIONS", "field_4095", "DIRECTIONS", "f_109434_"), "[Lji;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "minecraft", "field_4088", "client", "f_109461_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "minecraft", "field_4088", "client", "f_109461_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#entityRenderDispatcher
    static jobject get_field_entityRenderDispatcher(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "entityRenderDispatcher", "field_4109", "entityRenderDispatcher", "f_109463_"), "Lgkh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#entityRenderDispatcher
    static void set_field_entityRenderDispatcher(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "entityRenderDispatcher", "field_4109", "entityRenderDispatcher", "f_109463_"), "Lgkh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#blockEntityRenderDispatcher
    static jobject get_field_blockEntityRenderDispatcher(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "blockEntityRenderDispatcher", "field_27741", "blockEntityRenderDispatcher", "f_172946_"), "Lggy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#blockEntityRenderDispatcher
    static void set_field_blockEntityRenderDispatcher(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "blockEntityRenderDispatcher", "field_27741", "blockEntityRenderDispatcher", "f_172946_"), "Lggy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#bufferBuilders
    static jobject get_field_bufferBuilders(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "renderBuffers", "field_20951", "bufferBuilders", "f_109464_"), "Lgff;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#bufferBuilders
    static void set_field_bufferBuilders(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "renderBuffers", "field_20951", "bufferBuilders", "f_109464_"), "Lgff;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "level", "field_4085", "world", "f_109465_"), "Lfzf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "level", "field_4085", "world", "f_109465_"), "Lfzf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#chunkRenderingDataPreparer
    static jobject get_field_chunkRenderingDataPreparer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "sectionOcclusionGraph", "field_45615", "chunkRenderingDataPreparer", "f_291822_"), "Lgfm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#chunkRenderingDataPreparer
    static void set_field_chunkRenderingDataPreparer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "sectionOcclusionGraph", "field_45615", "chunkRenderingDataPreparer", "f_291822_"), "Lgfm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#builtChunks
    static jobject get_field_builtChunks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "visibleSections", "field_45616", "builtChunks", "f_290776_"), "Lit/unimi/dsi/fastutil/objects/ObjectArrayList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#builtChunks
    static void set_field_builtChunks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "visibleSections", "field_45616", "builtChunks", "f_290776_"), "Lit/unimi/dsi/fastutil/objects/ObjectArrayList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#noCullingBlockEntities
    static jobject get_field_noCullingBlockEntities(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "globalBlockEntities", "field_4055", "noCullingBlockEntities", "f_109468_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#noCullingBlockEntities
    static void set_field_noCullingBlockEntities(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "globalBlockEntities", "field_4055", "noCullingBlockEntities", "f_109468_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#chunks
    static jobject get_field_chunks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "viewArea", "field_4112", "chunks", "f_109469_"), "Lgfq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#chunks
    static void set_field_chunks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "viewArea", "field_4112", "chunks", "f_109469_"), "Lgfq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#starsBuffer
    static jobject get_field_starsBuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "starBuffer", "field_4113", "starsBuffer", "f_109471_"), "Lfbl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#starsBuffer
    static void set_field_starsBuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "starBuffer", "field_4113", "starsBuffer", "f_109471_"), "Lfbl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lightSkyBuffer
    static jobject get_field_lightSkyBuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "skyBuffer", "field_4087", "lightSkyBuffer", "f_109472_"), "Lfbl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lightSkyBuffer
    static void set_field_lightSkyBuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "skyBuffer", "field_4087", "lightSkyBuffer", "f_109472_"), "Lfbl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#darkSkyBuffer
    static jobject get_field_darkSkyBuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "darkBuffer", "field_4102", "darkSkyBuffer", "f_109473_"), "Lfbl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#darkSkyBuffer
    static void set_field_darkSkyBuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "darkBuffer", "field_4102", "darkSkyBuffer", "f_109473_"), "Lfbl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#cloudsDirty
    static jboolean get_field_cloudsDirty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "generateClouds", "field_4107", "cloudsDirty", "f_109474_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#cloudsDirty
    static void set_field_cloudsDirty(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "generateClouds", "field_4107", "cloudsDirty", "f_109474_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#cloudsBuffer
    static jobject get_field_cloudsBuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "cloudBuffer", "field_4094", "cloudsBuffer", "f_109475_"), "Lfbl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#cloudsBuffer
    static void set_field_cloudsBuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "cloudBuffer", "field_4094", "cloudsBuffer", "f_109475_"), "Lfbl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#chunkUpdateSmoother
    static jobject get_field_chunkUpdateSmoother(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "frameTimes", "field_21799", "chunkUpdateSmoother", "f_109476_"), "Lgfi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#chunkUpdateSmoother
    static void set_field_chunkUpdateSmoother(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "frameTimes", "field_21799", "chunkUpdateSmoother", "f_109476_"), "Lgfi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#ticks
    static jint get_field_ticks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "ticks", "field_4073", "ticks", "f_109477_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#ticks
    static void set_field_ticks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "ticks", "field_4073", "ticks", "f_109477_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#blockBreakingInfos
    static jobject get_field_blockBreakingInfos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "destroyingBlocks", "field_4058", "blockBreakingInfos", "f_109408_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#blockBreakingInfos
    static void set_field_blockBreakingInfos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "destroyingBlocks", "field_4058", "blockBreakingInfos", "f_109408_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#blockBreakingProgressions
    static jobject get_field_blockBreakingProgressions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "destructionProgress", "field_20950", "blockBreakingProgressions", "f_109409_"), "Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#blockBreakingProgressions
    static void set_field_blockBreakingProgressions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "destructionProgress", "field_20950", "blockBreakingProgressions", "f_109409_"), "Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#playingSongs
    static jobject get_field_playingSongs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "playingJukeboxSongs", "field_4119", "playingSongs", "f_336897_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#playingSongs
    static void set_field_playingSongs(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "playingJukeboxSongs", "field_4119", "playingSongs", "f_336897_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#entityOutlinesFramebuffer
    static jobject get_field_entityOutlinesFramebuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "entityTarget", "field_4101", "entityOutlinesFramebuffer", "f_109411_"), "Lezv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#entityOutlinesFramebuffer
    static void set_field_entityOutlinesFramebuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "entityTarget", "field_4101", "entityOutlinesFramebuffer", "f_109411_"), "Lezv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#entityOutlinePostProcessor
    static jobject get_field_entityOutlinePostProcessor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "entityEffect", "field_4059", "entityOutlinePostProcessor", "f_109412_"), "Lgfc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#entityOutlinePostProcessor
    static void set_field_entityOutlinePostProcessor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "entityEffect", "field_4059", "entityOutlinePostProcessor", "f_109412_"), "Lgfc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#translucentFramebuffer
    static jobject get_field_translucentFramebuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "translucentTarget", "field_25274", "translucentFramebuffer", "f_109413_"), "Lezv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#translucentFramebuffer
    static void set_field_translucentFramebuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "translucentTarget", "field_25274", "translucentFramebuffer", "f_109413_"), "Lezv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#entityFramebuffer
    static jobject get_field_entityFramebuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "itemEntityTarget", "field_25275", "entityFramebuffer", "f_109414_"), "Lezv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#entityFramebuffer
    static void set_field_entityFramebuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "itemEntityTarget", "field_25275", "entityFramebuffer", "f_109414_"), "Lezv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#particlesFramebuffer
    static jobject get_field_particlesFramebuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "particlesTarget", "field_25276", "particlesFramebuffer", "f_109415_"), "Lezv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#particlesFramebuffer
    static void set_field_particlesFramebuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "particlesTarget", "field_25276", "particlesFramebuffer", "f_109415_"), "Lezv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#weatherFramebuffer
    static jobject get_field_weatherFramebuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "weatherTarget", "field_25277", "weatherFramebuffer", "f_109416_"), "Lezv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#weatherFramebuffer
    static void set_field_weatherFramebuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "weatherTarget", "field_25277", "weatherFramebuffer", "f_109416_"), "Lezv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#cloudsFramebuffer
    static jobject get_field_cloudsFramebuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "cloudsTarget", "field_25278", "cloudsFramebuffer", "f_109417_"), "Lezv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#cloudsFramebuffer
    static void set_field_cloudsFramebuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "cloudsTarget", "field_25278", "cloudsFramebuffer", "f_109417_"), "Lezv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#transparencyPostProcessor
    static jobject get_field_transparencyPostProcessor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "transparencyChain", "field_25279", "transparencyPostProcessor", "f_109418_"), "Lgfc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#transparencyPostProcessor
    static void set_field_transparencyPostProcessor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "transparencyChain", "field_25279", "transparencyPostProcessor", "f_109418_"), "Lgfc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#cameraChunkX
    static jint get_field_cameraChunkX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "lastCameraSectionX", "field_4084", "cameraChunkX", "f_291437_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#cameraChunkX
    static void set_field_cameraChunkX(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "lastCameraSectionX", "field_4084", "cameraChunkX", "f_291437_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#cameraChunkY
    static jint get_field_cameraChunkY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "lastCameraSectionY", "field_4105", "cameraChunkY", "f_291126_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#cameraChunkY
    static void set_field_cameraChunkY(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "lastCameraSectionY", "field_4105", "cameraChunkY", "f_291126_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#cameraChunkZ
    static jint get_field_cameraChunkZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "lastCameraSectionZ", "field_4121", "cameraChunkZ", "f_290828_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#cameraChunkZ
    static void set_field_cameraChunkZ(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "lastCameraSectionZ", "field_4121", "cameraChunkZ", "f_290828_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastCameraX
    static jdouble get_field_lastCameraX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "prevCamX", "field_4069", "lastCameraX", "f_109425_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastCameraX
    static void set_field_lastCameraX(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "prevCamX", "field_4069", "lastCameraX", "f_109425_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastCameraY
    static jdouble get_field_lastCameraY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "prevCamY", "field_4081", "lastCameraY", "f_109426_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastCameraY
    static void set_field_lastCameraY(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "prevCamY", "field_4081", "lastCameraY", "f_109426_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastCameraZ
    static jdouble get_field_lastCameraZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "prevCamZ", "field_4096", "lastCameraZ", "f_109427_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastCameraZ
    static void set_field_lastCameraZ(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "prevCamZ", "field_4096", "lastCameraZ", "f_109427_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastCameraPitch
    static jdouble get_field_lastCameraPitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "prevCamRotX", "field_4115", "lastCameraPitch", "f_109428_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastCameraPitch
    static void set_field_lastCameraPitch(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "prevCamRotX", "field_4115", "lastCameraPitch", "f_109428_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastCameraYaw
    static jdouble get_field_lastCameraYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "prevCamRotY", "field_4064", "lastCameraYaw", "f_109429_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastCameraYaw
    static void set_field_lastCameraYaw(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "prevCamRotY", "field_4064", "lastCameraYaw", "f_109429_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastCloudsBlockX
    static jint get_field_lastCloudsBlockX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "prevCloudX", "field_4082", "lastCloudsBlockX", "f_109430_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastCloudsBlockX
    static void set_field_lastCloudsBlockX(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "prevCloudX", "field_4082", "lastCloudsBlockX", "f_109430_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastCloudsBlockY
    static jint get_field_lastCloudsBlockY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "prevCloudY", "field_4097", "lastCloudsBlockY", "f_109431_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastCloudsBlockY
    static void set_field_lastCloudsBlockY(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "prevCloudY", "field_4097", "lastCloudsBlockY", "f_109431_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastCloudsBlockZ
    static jint get_field_lastCloudsBlockZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "prevCloudZ", "field_4116", "lastCloudsBlockZ", "f_109432_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastCloudsBlockZ
    static void set_field_lastCloudsBlockZ(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "prevCloudZ", "field_4116", "lastCloudsBlockZ", "f_109432_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastCloudsColor
    static jobject get_field_lastCloudsColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "prevCloudColor", "field_4072", "lastCloudsColor", "f_109433_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastCloudsColor
    static void set_field_lastCloudsColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "prevCloudColor", "field_4072", "lastCloudsColor", "f_109433_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastCloudRenderMode
    static jobject get_field_lastCloudRenderMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "prevCloudsType", "field_4080", "lastCloudRenderMode", "f_109435_"), "Lfgb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastCloudRenderMode
    static void set_field_lastCloudRenderMode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "prevCloudsType", "field_4080", "lastCloudRenderMode", "f_109435_"), "Lfgb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#chunkBuilder
    static jobject get_field_chunkBuilder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "sectionRenderDispatcher", "field_45614", "chunkBuilder", "f_290446_"), "Lgia;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#chunkBuilder
    static void set_field_chunkBuilder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "sectionRenderDispatcher", "field_45614", "chunkBuilder", "f_290446_"), "Lgia;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#viewDistance
    static jint get_field_viewDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "lastViewDistance", "field_4062", "viewDistance", "f_109438_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#viewDistance
    static void set_field_viewDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "lastViewDistance", "field_4062", "viewDistance", "f_109438_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#regularEntityCount
    static jint get_field_regularEntityCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ag", "renderedEntities", "field_4089", "regularEntityCount", "f_109439_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#regularEntityCount
    static void set_field_regularEntityCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ag", "renderedEntities", "field_4089", "regularEntityCount", "f_109439_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#blockEntityCount
    static jint get_field_blockEntityCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ah", "culledEntities", "field_4110", "blockEntityCount", "f_109440_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#blockEntityCount
    static void set_field_blockEntityCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ah", "culledEntities", "field_4110", "blockEntityCount", "f_109440_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#frustum
    static jobject get_field_frustum(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ai", "cullingFrustum", "field_27740", "frustum", "f_172938_"), "Lgie;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#frustum
    static void set_field_frustum(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ai", "cullingFrustum", "field_27740", "frustum", "f_172938_"), "Lgie;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#shouldCaptureFrustum
    static jboolean get_field_shouldCaptureFrustum(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aj", "captureFrustum", "field_4090", "shouldCaptureFrustum", "f_109441_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#shouldCaptureFrustum
    static void set_field_shouldCaptureFrustum(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aj", "captureFrustum", "field_4090", "shouldCaptureFrustum", "f_109441_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#capturedFrustum
    static jobject get_field_capturedFrustum(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "capturedFrustum", "field_4056", "capturedFrustum", "f_109442_"), "Lgie;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#capturedFrustum
    static void set_field_capturedFrustum(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "capturedFrustum", "field_4056", "capturedFrustum", "f_109442_"), "Lgie;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#capturedFrustumOrientation
    static jobject get_field_capturedFrustumOrientation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("al", "frustumPoints", "field_4065", "capturedFrustumOrientation", "f_109443_"), "[Lorg/joml/Vector4f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#capturedFrustumOrientation
    static void set_field_capturedFrustumOrientation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("al", "frustumPoints", "field_4065", "capturedFrustumOrientation", "f_109443_"), "[Lorg/joml/Vector4f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#capturedFrustumPosition
    static jobject get_field_capturedFrustumPosition(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("am", "frustumPos", "field_4091", "capturedFrustumPosition", "f_109444_"), "Lorg/joml/Vector3d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#capturedFrustumPosition
    static void set_field_capturedFrustumPosition(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("am", "frustumPos", "field_4091", "capturedFrustumPosition", "f_109444_"), "Lorg/joml/Vector3d;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastTranslucentSortX
    static jdouble get_field_lastTranslucentSortX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("an", "xTransparentOld", "field_4083", "lastTranslucentSortX", "f_109445_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastTranslucentSortX
    static void set_field_lastTranslucentSortX(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("an", "xTransparentOld", "field_4083", "lastTranslucentSortX", "f_109445_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastTranslucentSortY
    static jdouble get_field_lastTranslucentSortY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ao", "yTransparentOld", "field_4103", "lastTranslucentSortY", "f_109446_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastTranslucentSortY
    static void set_field_lastTranslucentSortY(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ao", "yTransparentOld", "field_4103", "lastTranslucentSortY", "f_109446_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#lastTranslucentSortZ
    static jdouble get_field_lastTranslucentSortZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ap", "zTransparentOld", "field_4118", "lastTranslucentSortZ", "f_109447_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#lastTranslucentSortZ
    static void set_field_lastTranslucentSortZ(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ap", "zTransparentOld", "field_4118", "lastTranslucentSortZ", "f_109447_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#rainSoundCounter
    static jint get_field_rainSoundCounter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aq", "rainSoundTime", "field_20793", "rainSoundCounter", "f_109450_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#rainSoundCounter
    static void set_field_rainSoundCounter(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aq", "rainSoundTime", "field_20793", "rainSoundCounter", "f_109450_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#NORMAL_LINE_DX
    static jfloat get_field_NORMAL_LINE_DX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ar", "rainSizeX", "field_20794", "NORMAL_LINE_DX", "f_109451_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#NORMAL_LINE_DX
    static void set_field_NORMAL_LINE_DX(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ar", "rainSizeX", "field_20794", "NORMAL_LINE_DX", "f_109451_"), "[F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.WorldRenderer#NORMAL_LINE_DZ
    static jfloat get_field_NORMAL_LINE_DZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("as", "rainSizeZ", "field_20795", "NORMAL_LINE_DZ", "f_109452_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.WorldRenderer#NORMAL_LINE_DZ
    static void set_field_NORMAL_LINE_DZ(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("as", "rainSizeZ", "field_20795", "NORMAL_LINE_DZ", "f_109452_"), "[F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_renderWeather() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSnowAndRain", "method_22714", "renderWeather", "m_109703_"), "(Lgey;FDDD)V");
    }

    static void renderWeather(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_renderWeather();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_tickRainSplashing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickRain", "method_22713", "tickRainSplashing", "m_109693_"), "(Lffy;)V");
    }

    static void tickRainSplashing(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tickRainSplashing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_reload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onResourceManagerReload", "method_14491", "reload", "m_6213_"), "(Laue;)V");
    }

    static void reload(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_reload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_loadEntityOutlinePostProcessor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "initOutline", "method_3296", "loadEntityOutlinePostProcessor", "m_109482_"), "()V");
    }

    static void loadEntityOutlinePostProcessor(const jobject& obj) {
                
       const auto methodID = methodID_loadEntityOutlinePostProcessor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadTransparencyPostProcessor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "initTransparency", "method_29365", "loadTransparencyPostProcessor", "m_109833_"), "()V");
    }

    static void loadTransparencyPostProcessor(const jobject& obj) {
                
       const auto methodID = methodID_loadTransparencyPostProcessor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_resetTransparencyPostProcessor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "deinitTransparency", "method_29701", "resetTransparencyPostProcessor", "m_109834_"), "()V");
    }

    static void resetTransparencyPostProcessor(const jobject& obj) {
                
       const auto methodID = methodID_resetTransparencyPostProcessor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_drawEntityOutlinesFramebuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "doEntityOutline", "method_3254", "drawEntityOutlinesFramebuffer", "m_109769_"), "()V");
    }

    static void drawEntityOutlinesFramebuffer(const jobject& obj) {
                
       const auto methodID = methodID_drawEntityOutlinesFramebuffer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canDrawEntityOutlines() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "shouldShowEntityOutlines", "method_3270", "canDrawEntityOutlines", "m_109817_"), "()Z");
    }

    static jboolean canDrawEntityOutlines(const jobject& obj) {
                
       const auto methodID = methodID_canDrawEntityOutlines();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_renderDarkSky() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "createDarkSky", "method_3265", "renderDarkSky", "m_109835_"), "()V");
    }

    static void renderDarkSky(const jobject& obj) {
                
       const auto methodID = methodID_renderDarkSky();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_renderLightSky() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "createLightSky", "method_3277", "renderLightSky", "m_109836_"), "()V");
    }

    static void renderLightSky(const jobject& obj) {
                
       const auto methodID = methodID_renderLightSky();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_renderSky() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "buildSkyDisc", "method_34550", "renderSky", "m_234267_"), "(Lfbk;F)Lfbh;");
    }

    static jobject renderSky(const jobject& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_renderSky();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renderStars() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "createStars", "method_3293", "renderStars", "m_109837_"), "()V");
    }

    static void renderStars(const jobject& obj) {
                
       const auto methodID = methodID_renderStars();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__renderStars() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "drawStars", "method_3255", "renderStars", "m_234259_"), "(Lfbk;)Lfbh;");
    }

    static jobject _renderStars(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__renderStars();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLevel", "method_3244", "setWorld", "m_109701_"), "(Lfzf;)V");
    }

    static void setWorld(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setWorld();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_reloadTransparencyPostProcessor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "graphicsChanged", "method_35774", "reloadTransparencyPostProcessor", "m_173014_"), "()V");
    }

    static void reloadTransparencyPostProcessor(const jobject& obj) {
                
       const auto methodID = methodID_reloadTransparencyPostProcessor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__reload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "allChanged", "method_3279", "reload", "m_109818_"), "()V");
    }

    static void _reload(const jobject& obj) {
                
       const auto methodID = methodID__reload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onResized() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resize", "method_3242", "onResized", "m_109487_"), "(II)V");
    }

    static void onResized(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_onResized();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getChunksDebugString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getSectionStatistics", "method_3289", "getChunksDebugString", "m_109820_"), "()Ljava/lang/String;");
    }

    static jobject getChunksDebugString(const jobject& obj) {
                
       const auto methodID = methodID_getChunksDebugString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChunkBuilder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getSectionRenderDispatcher", "method_34810", "getChunkBuilder", "m_295427_"), "()Lgia;");
    }

    static jobject getChunkBuilder(const jobject& obj) {
                
       const auto methodID = methodID_getChunkBuilder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChunkCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getTotalSections", "method_34811", "getChunkCount", "m_294933_"), "()D");
    }

    static jdouble getChunkCount(const jobject& obj) {
                
       const auto methodID = methodID_getChunkCount();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getViewDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getLastViewDistance", "method_34812", "getViewDistance", "m_173017_"), "()D");
    }

    static jdouble getViewDistance(const jobject& obj) {
                
       const auto methodID = methodID_getViewDistance();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCompletedChunkCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "countRenderedSections", "method_3246", "getCompletedChunkCount", "m_294574_"), "()I");
    }

    static jint getCompletedChunkCount(const jobject& obj) {
                
       const auto methodID = methodID_getCompletedChunkCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntitiesDebugString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getEntityStatistics", "method_3272", "getEntitiesDebugString", "m_109822_"), "()Ljava/lang/String;");
    }

    static jobject getEntitiesDebugString(const jobject& obj) {
                
       const auto methodID = methodID_getEntitiesDebugString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setupTerrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupRender", "method_3273", "setupTerrain", "m_194338_"), "(Lffy;Lgie;ZZ)V");
    }

    static void setupTerrain(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_setupTerrain();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_method_52816() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "offsetFrustum", "method_52816", "method_52816", "m_295345_"), "(Lgie;)Lgie;");
    }

    static jobject method_52816(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_method_52816();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_applyFrustum() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "applyFrustum", "method_38551", "applyFrustum", "m_194354_"), "(Lgie;)V");
    }

    static void applyFrustum(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_applyFrustum();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addBuiltChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addRecentlyCompiledSection", "method_38550", "addBuiltChunk", "m_294499_"), "(Lgia$b;)V");
    }

    static void addBuiltChunk(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addBuiltChunk();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_captureFrustum() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "captureFrustum", "method_3275", "captureFrustum", "m_252964_"), "(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;DDDLgie;)V");
    }

    static void captureFrustum(const jobject& obj, const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_captureFrustum();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_setupFrustum() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "prepareCullFrustum", "method_32133", "setupFrustum", "m_253210_"), "(Lexc;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;)V");
    }

    static void setupFrustum(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_setupFrustum();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderLevel", "method_22710", "render", "m_109599_"), "(Lfgf;ZLffy;Lges;Lgey;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_checkEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkPoseStack", "method_22979", "checkEmpty", "m_109588_"), "(Lfbi;)V");
    }

    static void checkEmpty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_checkEmpty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_renderEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderEntity", "method_22977", "renderEntity", "m_109517_"), "(Lbsr;DDDFLfbi;Lgez;)V");
    }

    static void renderEntity(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jfloat& arg4, const jobject& arg5, const jobject& arg6) {
                
       const auto methodID = methodID_renderEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_renderLayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSectionLayer", "method_3251", "renderLayer", "m_293111_"), "(Lgfh;DDDLorg/joml/Matrix4f;Lorg/joml/Matrix4f;)V");
    }

    static void renderLayer(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_renderLayer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_renderChunkDebugInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderDebug", "method_22989", "renderChunkDebugInfo", "m_269240_"), "(Lfbi;Lgez;Lffy;)V");
    }

    static void renderChunkDebugInfo(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_renderChunkDebugInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_renderCapturedFrustumVertex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addFrustumVertex", "method_22984", "renderCapturedFrustumVertex", "m_269236_"), "(Lfbm;Lorg/joml/Matrix4f;I)V");
    }

    static void renderCapturedFrustumVertex(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_renderCapturedFrustumVertex();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_renderCapturedFrustumFace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addFrustumQuad", "method_22985", "renderCapturedFrustumFace", "m_269092_"), "(Lfbm;Lorg/joml/Matrix4f;IIIIIII)V");
    }

    static void renderCapturedFrustumFace(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jint& arg8) {
                
       const auto methodID = methodID_renderCapturedFrustumFace();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID__captureFrustum() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "captureFrustum", "method_35775", "captureFrustum", "m_173018_"), "()V");
    }

    static void _captureFrustum(const jobject& obj) {
                
       const auto methodID = methodID__captureFrustum();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_killFrustum() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "killFrustum", "method_35776", "killFrustum", "m_173019_"), "()V");
    }

    static void killFrustum(const jobject& obj) {
                
       const auto methodID = methodID_killFrustum();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "tick", "method_3252", "tick", "m_109823_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeBlockBreakingInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeProgress", "method_22987", "removeBlockBreakingInfo", "m_109765_"), "(Lapx;)V");
    }

    static void removeBlockBreakingInfo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeBlockBreakingInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_renderEndSky() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderEndSky", "method_3250", "renderEndSky", "m_109780_"), "(Lfbi;)V");
    }

    static void renderEndSky(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_renderEndSky();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__renderSky() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderSky", "method_3257", "renderSky", "m_202423_"), "(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLffy;ZLjava/lang/Runnable;)V");
    }

    static void _renderSky(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jobject& arg3, const jboolean& arg4, const jobject& arg5) {
                
       const auto methodID = methodID__renderSky();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_hasBlindnessOrDarkness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "doesMobEffectBlockSky", "method_43788", "hasBlindnessOrDarkness", "m_234310_"), "(Lffy;)Z");
    }

    static jboolean hasBlindnessOrDarkness(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_hasBlindnessOrDarkness();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_renderClouds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderClouds", "method_3259", "renderClouds", "m_253054_"), "(Lfbi;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FDDD)V");
    }

    static void renderClouds(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6) {
                
       const auto methodID = methodID_renderClouds();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID__renderClouds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "buildClouds", "method_3239", "renderClouds", "m_234261_"), "(Lfbk;DDDLexc;)Lfbh;");
    }

    static jobject _renderClouds(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jobject& arg4) {
                
       const auto methodID = methodID__renderClouds();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_updateChunks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "compileSections", "method_3269", "updateChunks", "m_194370_"), "(Lffy;)V");
    }

    static void updateChunks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateChunks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_renderWorldBorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "renderWorldBorder", "method_3243", "renderWorldBorder", "m_173012_"), "(Lffy;)V");
    }

    static void renderWorldBorder(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_renderWorldBorder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drawBlockOutline() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderHitOutline", "method_22712", "drawBlockOutline", "m_109637_"), "(Lfbi;Lfbm;Lbsr;DDDLjd;Ldtc;)V");
    }

    static void drawBlockOutline(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jobject& arg6, const jobject& arg7) {
                
       const auto methodID = methodID_drawBlockOutline();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_getMaxIntensityColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "mixColor", "method_51778", "getMaxIntensityColor", "m_285956_"), "(F)Lexc;");
    }

    static jobject getMaxIntensityColor(const jfloat& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getMaxIntensityColor();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_shiftHue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "shiftHue", "method_51779", "shiftHue", "m_285739_"), "(FFFF)Lexc;");
    }

    static jobject shiftHue(const jfloat& arg0, const jfloat& arg1, const jfloat& arg2, const jfloat& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_shiftHue();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawShapeOutline() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderVoxelShape", "method_22983", "drawShapeOutline", "m_285900_"), "(Lfbi;Lfbm;Lexv;DDDFFFFZ)V");
    }

    static void drawShapeOutline(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jfloat& arg6, const jfloat& arg7, const jfloat& arg8, const jfloat& arg9, const jboolean& arg10) {
       const auto clazz = self();
       const auto methodID = methodID_drawShapeOutline();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    };
    
    static jmethodID methodID_drawCuboidShapeOutline() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderShape", "method_3291", "drawCuboidShapeOutline", "m_109782_"), "(Lfbi;Lfbm;Lexv;DDDFFFF)V");
    }

    static void drawCuboidShapeOutline(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jfloat& arg6, const jfloat& arg7, const jfloat& arg8, const jfloat& arg9) {
       const auto clazz = self();
       const auto methodID = methodID_drawCuboidShapeOutline();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_drawBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderLineBox", "method_35773", "drawBox", "m_172965_"), "(Lfbm;DDDDDDFFFF)V");
    }

    static void drawBox(const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6, const jfloat& arg7, const jfloat& arg8, const jfloat& arg9, const jfloat& arg10) {
       const auto clazz = self();
       const auto methodID = methodID_drawBox();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    };
    
    static jmethodID methodID__drawBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderLineBox", "method_22982", "drawBox", "m_109646_"), "(Lfbi;Lfbm;Lewx;FFFF)V");
    }

    static void _drawBox(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3, const jfloat& arg4, const jfloat& arg5, const jfloat& arg6) {
       const auto clazz = self();
       const auto methodID = methodID__drawBox();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID___drawBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderLineBox", "method_22980", "drawBox", "m_109608_"), "(Lfbi;Lfbm;DDDDDDFFFF)V");
    }

    static void __drawBox(const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6, const jdouble& arg7, const jfloat& arg8, const jfloat& arg9, const jfloat& arg10, const jfloat& arg11) {
       const auto clazz = self();
       const auto methodID = methodID___drawBox();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
    };
    
    static jmethodID methodID____drawBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderLineBox", "method_22981", "drawBox", "m_109621_"), "(Lfbi;Lfbm;DDDDDDFFFFFFF)V");
    }

    static void ___drawBox(const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6, const jdouble& arg7, const jfloat& arg8, const jfloat& arg9, const jfloat& arg10, const jfloat& arg11, const jfloat& arg12, const jfloat& arg13, const jfloat& arg14) {
       const auto clazz = self();
       const auto methodID = methodID____drawBox();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14);
    };
    
    static jmethodID methodID_renderFilledBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "addChainedFilledBoxVertices", "method_3258", "renderFilledBox", "m_269208_"), "(Lfbi;Lfbm;DDDDDDFFFF)V");
    }

    static void renderFilledBox(const jobject& arg0, const jobject& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6, const jdouble& arg7, const jfloat& arg8, const jfloat& arg9, const jfloat& arg10, const jfloat& arg11) {
       const auto clazz = self();
       const auto methodID = methodID_renderFilledBox();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
    };
    
    static jmethodID methodID__renderFilledBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addChainedFilledBoxVertices", "method_49041", "renderFilledBox", "m_269282_"), "(Lfbi;Lfbm;FFFFFFFFFF)V");
    }

    static void _renderFilledBox(const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jfloat& arg3, const jfloat& arg4, const jfloat& arg5, const jfloat& arg6, const jfloat& arg7, const jfloat& arg8, const jfloat& arg9, const jfloat& arg10, const jfloat& arg11) {
       const auto clazz = self();
       const auto methodID = methodID__renderFilledBox();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
    };
    
    static jmethodID methodID_renderFilledBoxFace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "renderFace", "method_61044", "renderFilledBoxFace", "m_340636_"), "(Lfbi;Lfbm;Lji;FFFFFFFFFF)V");
    }

    static void renderFilledBoxFace(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3, const jfloat& arg4, const jfloat& arg5, const jfloat& arg6, const jfloat& arg7, const jfloat& arg8, const jfloat& arg9, const jfloat& arg10, const jfloat& arg11, const jfloat& arg12) {
       const auto clazz = self();
       const auto methodID = methodID_renderFilledBoxFace();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12);
    };
    
    static jmethodID methodID_updateBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "blockChanged", "method_8570", "updateBlock", "m_109544_"), "(Ldcc;Ljd;Ldtc;Ldtc;I)V");
    }

    static void updateBlock(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jint& arg4) {
                
       const auto methodID = methodID_updateBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_scheduleSectionRender() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlockDirty", "method_16037", "scheduleSectionRender", "m_109732_"), "(Ljd;Z)V");
    }

    static void scheduleSectionRender(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_scheduleSectionRender();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_scheduleBlockRenders() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlocksDirty", "method_18146", "scheduleBlockRenders", "m_109494_"), "(IIIIII)V");
    }

    static void scheduleBlockRenders(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5) {
                
       const auto methodID = methodID_scheduleBlockRenders();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_scheduleBlockRerenderIfNeeded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlockDirty", "method_21596", "scheduleBlockRerenderIfNeeded", "m_109721_"), "(Ljd;Ldtc;Ldtc;)V");
    }

    static void scheduleBlockRerenderIfNeeded(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_scheduleBlockRerenderIfNeeded();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__scheduleBlockRenders() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSectionDirtyWithNeighbors", "method_18145", "scheduleBlockRenders", "m_109490_"), "(III)V");
    }

    static void _scheduleBlockRenders(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID__scheduleBlockRenders();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_scheduleBlockRender() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setSectionDirty", "method_8571", "scheduleBlockRender", "m_109770_"), "(III)V");
    }

    static void scheduleBlockRender(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_scheduleBlockRender();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_scheduleChunkRender() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSectionDirty", "method_3295", "scheduleChunkRender", "m_109501_"), "(IIIZ)V");
    }

    static void scheduleChunkRender(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_scheduleChunkRender();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_playJukeboxSong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playJukeboxSong", "method_60891", "playJukeboxSong", "m_338545_"), "(Ljm;Ljd;)V");
    }

    static void playJukeboxSong(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_playJukeboxSong();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_stopJukeboxSong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "stopJukeboxSong", "method_60892", "stopJukeboxSong", "m_340029_"), "(Ljd;)V");
    }

    static void stopJukeboxSong(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_stopJukeboxSong();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopJukeboxSongAndUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stopJukeboxSongAndNotifyNearby", "method_60889", "stopJukeboxSongAndUpdate", "m_340440_"), "(Ljd;)V");
    }

    static void stopJukeboxSongAndUpdate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_stopJukeboxSongAndUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateEntitiesForSong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "notifyNearbyEntities", "method_3247", "updateEntitiesForSong", "m_109550_"), "(Ldcw;Ljd;Z)V");
    }

    static void updateEntitiesForSong(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_updateEntitiesForSong();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addParticle", "method_8568", "addParticle", "m_109743_"), "(Llk;ZDDDDDD)V");
    }

    static void addParticle(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6, const jdouble& arg7) {
                
       const auto methodID = methodID_addParticle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID__addParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addParticle", "method_8563", "addParticle", "m_109752_"), "(Llk;ZZDDDDDD)V");
    }

    static void _addParticle(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jboolean& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6, const jdouble& arg7, const jdouble& arg8) {
                
       const auto methodID = methodID__addParticle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID___addParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addParticle", "method_3276", "addParticle", "m_109735_"), "(Llk;DDDDDD)V");
    }

    static void __addParticle(const jobject& obj, const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6) {
                
       const auto methodID = methodID___addParticle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_spawnParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addParticleInternal", "method_3282", "spawnParticle", "m_109795_"), "(Llk;ZDDDDDD)Lgcn;");
    }

    static jobject spawnParticle(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jdouble& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6, const jdouble& arg7) {
                
       const auto methodID = methodID_spawnParticle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID__spawnParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addParticleInternal", "method_3288", "spawnParticle", "m_109804_"), "(Llk;ZZDDDDDD)Lgcn;");
    }

    static jobject _spawnParticle(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jboolean& arg2, const jdouble& arg3, const jdouble& arg4, const jdouble& arg5, const jdouble& arg6, const jdouble& arg7, const jdouble& arg8) {
                
       const auto methodID = methodID__spawnParticle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_getRandomParticleSpawnChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateParticleLevel", "method_3268", "getRandomParticleSpawnChance", "m_109767_"), "(Z)Lfgt;");
    }

    static jobject getRandomParticleSpawnChance(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_getRandomParticleSpawnChance();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_cleanUp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "clear", "method_3267", "cleanUp", "m_109824_"), "()V");
    }

    static void cleanUp(const jobject& obj) {
                
       const auto methodID = methodID_cleanUp();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_processGlobalEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "globalLevelEvent", "method_8564", "processGlobalEvent", "m_109506_"), "(ILjd;I)V");
    }

    static void processGlobalEvent(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_processGlobalEvent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_processWorldEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "levelEvent", "method_8567", "processWorldEvent", "m_234304_"), "(ILjd;I)V");
    }

    static void processWorldEvent(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_processWorldEvent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setBlockBreakingInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "destroyBlockProgress", "method_8569", "setBlockBreakingInfo", "m_109774_"), "(ILjd;I)V");
    }

    static void setBlockBreakingInfo(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_setBlockBreakingInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isTerrainRenderComplete() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "hasRenderedAllSections", "method_3281", "isTerrainRenderComplete", "m_294493_"), "()Z");
    }

    static jboolean isTerrainRenderComplete(const jobject& obj) {
                
       const auto methodID = methodID_isTerrainRenderComplete();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_method_52815() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onChunkLoaded", "method_52815", "method_52815", "m_292785_"), "(Ldcd;)V");
    }

    static void method_52815(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_method_52815();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_scheduleTerrainUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "needsUpdate", "method_3292", "scheduleTerrainUpdate", "m_109826_"), "()V");
    }

    static void scheduleTerrainUpdate(const jobject& obj) {
                
       const auto methodID = methodID_scheduleTerrainUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateNoCullingBlockEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateGlobalBlockEntities", "method_3245", "updateNoCullingBlockEntities", "m_109762_"), "(Ljava/util/Collection;Ljava/util/Collection;)V");
    }

    static void updateNoCullingBlockEntities(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_updateNoCullingBlockEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLightmapCoordinates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getLightColor", "method_23794", "getLightmapCoordinates", "m_109541_"), "(Ldbz;Ljd;)I");
    }

    static jint getLightmapCoordinates(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getLightmapCoordinates();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getLightmapCoordinates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getLightColor", "method_23793", "getLightmapCoordinates", "m_109537_"), "(Ldbz;Ldtc;Ljd;)I");
    }

    static jint _getLightmapCoordinates(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__getLightmapCoordinates();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isRenderingReady() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isSectionCompiled", "method_40050", "isRenderingReady", "m_292727_"), "(Ljd;)Z");
    }

    static jboolean isRenderingReady(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isRenderingReady();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntityOutlinesFramebuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "entityTarget", "method_22990", "getEntityOutlinesFramebuffer", "m_109827_"), "()Lezv;");
    }

    static jobject getEntityOutlinesFramebuffer(const jobject& obj) {
                
       const auto methodID = methodID_getEntityOutlinesFramebuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTranslucentFramebuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getTranslucentTarget", "method_29360", "getTranslucentFramebuffer", "m_109828_"), "()Lezv;");
    }

    static jobject getTranslucentFramebuffer(const jobject& obj) {
                
       const auto methodID = methodID_getTranslucentFramebuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntityFramebuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "getItemEntityTarget", "method_29361", "getEntityFramebuffer", "m_109829_"), "()Lezv;");
    }

    static jobject getEntityFramebuffer(const jobject& obj) {
                
       const auto methodID = methodID_getEntityFramebuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getParticlesFramebuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getParticlesTarget", "method_29362", "getParticlesFramebuffer", "m_109830_"), "()Lezv;");
    }

    static jobject getParticlesFramebuffer(const jobject& obj) {
                
       const auto methodID = methodID_getParticlesFramebuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWeatherFramebuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getWeatherTarget", "method_29363", "getWeatherFramebuffer", "m_109831_"), "()Lezv;");
    }

    static jobject getWeatherFramebuffer(const jobject& obj) {
                
       const auto methodID = methodID_getWeatherFramebuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCloudsFramebuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getCloudsTarget", "method_29364", "getCloudsFramebuffer", "m_109832_"), "()Lezv;");
    }

    static jobject getCloudsFramebuffer(const jobject& obj) {
                
       const auto methodID = methodID_getCloudsFramebuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shootParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shootParticles", "method_54638", "shootParticles", "m_304955_"), "(ILjd;Layw;Llq;)V");
    }

    static void shootParticles(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_shootParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_WORLDRENDERER_HPP