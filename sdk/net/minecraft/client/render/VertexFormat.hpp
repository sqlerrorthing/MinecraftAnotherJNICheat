// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_VERTEXFORMAT_HPP
#define NET_MINECRAFT_CLIENT_RENDER_VERTEXFORMAT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.VertexFormat
 * Remapped: fbn
 */
namespace VertexFormat {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fbn", "com/mojang/blaze3d/vertex/VertexFormat", "net/minecraft/class_293", "net/minecraft/client/render/VertexFormat", "net/minecraft/src/C_3188_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.render.VertexFormat#field_52099
    [[maybe_unused]] static jint get_field_field_52099() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UNKNOWN_ELEMENT", "field_52099", "field_52099", "f_337347_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.VertexFormat#field_52099
    [[maybe_unused]] static void set_field_field_52099(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UNKNOWN_ELEMENT", "field_52099", "field_52099", "f_337347_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.VertexFormat#elements
    static jobject get_field_elements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "elements", "field_1602", "elements", "f_86012_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.VertexFormat#elements
    static void set_field_elements(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "elements", "field_1602", "elements", "f_86012_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.VertexFormat#names
    static jobject get_field_names(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "names", "field_52100", "names", "f_337579_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.VertexFormat#names
    static void set_field_names(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "names", "field_52100", "names", "f_337579_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.VertexFormat#vertexSizeByte
    static jint get_field_vertexSizeByte(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "vertexSize", "field_1600", "vertexSizeByte", "f_86014_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.VertexFormat#vertexSizeByte
    static void set_field_vertexSizeByte(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "vertexSize", "field_1600", "vertexSizeByte", "f_86014_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.VertexFormat#requiredMask
    static jint get_field_requiredMask(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "elementsMask", "field_52101", "requiredMask", "f_337518_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.VertexFormat#requiredMask
    static void set_field_requiredMask(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "elementsMask", "field_52101", "requiredMask", "f_337518_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.VertexFormat#offsetsByElementId
    static jint get_field_offsetsByElementId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "offsetsByElement", "field_52102", "offsetsByElementId", "f_337288_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.VertexFormat#offsetsByElementId
    static void set_field_offsetsByElementId(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "offsetsByElement", "field_52102", "offsetsByElementId", "f_337288_"), "[I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.VertexFormat#buffer
    static jobject get_field_buffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "immediateDrawVertexBuffer", "field_38984", "buffer", "f_231232_"), "Lfbl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.VertexFormat#buffer
    static void set_field_buffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "immediateDrawVertexBuffer", "field_38984", "buffer", "f_231232_"), "Lfbl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_builder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "builder", "method_60833", "builder", "m_339703_"), "()Lfbn$a;");
    }

    static jobject builder() {
       const auto clazz = self();
       const auto methodID = methodID_builder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getVertexSizeByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getVertexSize", "method_1362", "getVertexSizeByte", "m_86020_"), "()I");
    }

    static jint getVertexSizeByte(const jobject& obj) {
                
       const auto methodID = methodID_getVertexSizeByte();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getElements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getElements", "method_1357", "getElements", "m_86023_"), "()Ljava/util/List;");
    }

    static jobject getElements(const jobject& obj) {
                
       const auto methodID = methodID_getElements();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttributeNames() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getElementAttributeNames", "method_34445", "getAttributeNames", "m_166911_"), "()Ljava/util/List;");
    }

    static jobject getAttributeNames(const jobject& obj) {
                
       const auto methodID = methodID_getAttributeNames();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOffsetsByElementId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getOffsetsByElement", "method_60838", "getOffsetsByElementId", "m_338562_"), "()[I");
    }

    static jint getOffsetsByElementId(const jobject& obj) {
                
       const auto methodID = methodID_getOffsetsByElementId();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOffset", "method_60835", "getOffset", "m_338798_"), "(Lfbo;)I");
    }

    static jint getOffset(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOffset();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_has() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "contains", "method_60836", "has", "m_339292_"), "(Lfbo;)Z");
    }

    static jboolean has(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_has();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRequiredMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getElementsMask", "method_60839", "getRequiredMask", "m_340128_"), "()I");
    }

    static jint getRequiredMask(const jobject& obj) {
                
       const auto methodID = methodID_getRequiredMask();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getElementName", "method_60837", "getName", "m_340604_"), "(Lfbo;)Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setupState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "setupBufferState", "method_22649", "setupState", "m_166912_"), "()V");
    }

    static void setupState(const jobject& obj) {
                
       const auto methodID = methodID_setupState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setupStateInternal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "_setupBufferState", "method_34449", "setupStateInternal", "m_166916_"), "()V");
    }

    static void setupStateInternal(const jobject& obj) {
                
       const auto methodID = methodID_setupStateInternal();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_clearState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "clearBufferState", "method_22651", "clearState", "m_86024_"), "()V");
    }

    static void clearState(const jobject& obj) {
                
       const auto methodID = methodID_clearState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_clearStateInternal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "_clearBufferState", "method_34450", "clearStateInternal", "m_166917_"), "()V");
    }

    static void clearStateInternal(const jobject& obj) {
                
       const auto methodID = methodID_clearStateInternal();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getImmediateDrawVertexBuffer", "method_43446", "getBuffer", "m_231233_"), "()Lfbl;");
    }

    static jobject getBuffer(const jobject& obj) {
                
       const auto methodID = methodID_getBuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_VERTEXFORMAT_HPP