// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_BLOCKSTATESLOADER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_BLOCKSTATESLOADER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.BlockStatesLoader
 * Remapped: gso
 */
namespace BlockStatesLoader {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gso", "net/minecraft/client/resources/model/BlockStateModelLoader", "net/minecraft/class_9824", "net/minecraft/client/render/model/BlockStatesLoader", "net/minecraft/src/C_336451_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.model.BlockStatesLoader#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOGGER", "field_52261", "LOGGER", "f_337111_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOGGER", "field_52261", "LOGGER", "f_337111_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.render.model.BlockStatesLoader#field_52259
    [[maybe_unused]] static jint get_field_field_52259() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SINGLETON_MODEL_GROUP", "field_52259", "field_52259", "f_336854_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.render.model.BlockStatesLoader#field_52259
    [[maybe_unused]] static void set_field_field_52259(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SINGLETON_MODEL_GROUP", "field_52259", "field_52259", "f_336854_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.model.BlockStatesLoader#field_52262
    [[maybe_unused]] static jint get_field_field_52262() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "INVISIBLE_MODEL_GROUP", "field_52262", "field_52262", "f_337627_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#field_52262
    [[maybe_unused]] static void set_field_field_52262(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "INVISIBLE_MODEL_GROUP", "field_52262", "field_52262", "f_337627_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.model.BlockStatesLoader#FINDER
    [[maybe_unused]] static jobject get_field_FINDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BLOCKSTATE_LISTER", "field_52260", "FINDER", "f_337368_"), "Lakk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.model.BlockStatesLoader#FINDER
    [[maybe_unused]] static void set_field_FINDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BLOCKSTATE_LISTER", "field_52260", "FINDER", "f_337368_"), "Lakk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.model.BlockStatesLoader#COMMA_SPLITTER
    [[maybe_unused]] static jobject get_field_COMMA_SPLITTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "COMMA_SPLITTER", "field_52263", "COMMA_SPLITTER", "f_337641_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#COMMA_SPLITTER
    [[maybe_unused]] static void set_field_COMMA_SPLITTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "COMMA_SPLITTER", "field_52263", "COMMA_SPLITTER", "f_337641_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.model.BlockStatesLoader#EQUAL_SIGN_SPLITTER
    [[maybe_unused]] static jobject get_field_EQUAL_SIGN_SPLITTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "EQUAL_SPLITTER", "field_52264", "EQUAL_SIGN_SPLITTER", "f_336803_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#EQUAL_SIGN_SPLITTER
    [[maybe_unused]] static void set_field_EQUAL_SIGN_SPLITTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "EQUAL_SPLITTER", "field_52264", "EQUAL_SIGN_SPLITTER", "f_336803_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.model.BlockStatesLoader#ITEM_FRAME_STATE_MANAGER
    [[maybe_unused]] static jobject get_field_ITEM_FRAME_STATE_MANAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ITEM_FRAME_FAKE_DEFINITION", "field_52265", "ITEM_FRAME_STATE_MANAGER", "f_336962_"), "Ldtd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#ITEM_FRAME_STATE_MANAGER
    [[maybe_unused]] static void set_field_ITEM_FRAME_STATE_MANAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ITEM_FRAME_FAKE_DEFINITION", "field_52265", "ITEM_FRAME_STATE_MANAGER", "f_336962_"), "Ldtd;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.model.BlockStatesLoader#STATIC_DEFINITIONS
    [[maybe_unused]] static jobject get_field_STATIC_DEFINITIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "STATIC_DEFINITIONS", "field_52266", "STATIC_DEFINITIONS", "f_337705_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#STATIC_DEFINITIONS
    [[maybe_unused]] static void set_field_STATIC_DEFINITIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "STATIC_DEFINITIONS", "field_52266", "STATIC_DEFINITIONS", "f_337705_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BlockStatesLoader#blockStates
    static jobject get_field_blockStates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "blockStateResources", "field_52267", "blockStates", "f_337676_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#blockStates
    static void set_field_blockStates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "blockStateResources", "field_52267", "blockStates", "f_337676_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BlockStatesLoader#profiler
    static jobject get_field_profiler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "profiler", "field_52268", "profiler", "f_337018_"), "Lbnf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#profiler
    static void set_field_profiler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "profiler", "field_52268", "profiler", "f_337018_"), "Lbnf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BlockStatesLoader#blockColors
    static jobject get_field_blockColors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "blockColors", "field_52269", "blockColors", "f_337621_"), "Lfhq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#blockColors
    static void set_field_blockColors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "blockColors", "field_52269", "blockColors", "f_337621_"), "Lfhq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BlockStatesLoader#onLoad
    static jobject get_field_onLoad(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "discoveredModelOutput", "field_52270", "onLoad", "f_337708_"), "Ljava/util/function/BiConsumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#onLoad
    static void set_field_onLoad(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "discoveredModelOutput", "field_52270", "onLoad", "f_337708_"), "Ljava/util/function/BiConsumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BlockStatesLoader#lookupId
    static jint get_field_lookupId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "nextModelGroup", "field_52271", "lookupId", "f_336966_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#lookupId
    static void set_field_lookupId(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "nextModelGroup", "field_52271", "lookupId", "f_336966_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BlockStatesLoader#stateLookup
    static jobject get_field_stateLookup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "modelGroups", "field_52272", "stateLookup", "f_337591_"), "Lit/unimi/dsi/fastutil/objects/Object2IntMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#stateLookup
    static void set_field_stateLookup(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "modelGroups", "field_52272", "stateLookup", "f_337591_"), "Lit/unimi/dsi/fastutil/objects/Object2IntMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BlockStatesLoader#missingModel
    static jobject get_field_missingModel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "missingModel", "field_52273", "missingModel", "f_336883_"), "Lgso$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#missingModel
    static void set_field_missingModel(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "missingModel", "field_52273", "missingModel", "f_336883_"), "Lgso$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BlockStatesLoader#context
    static jobject get_field_context(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "context", "field_52274", "context", "f_336707_"), "Lggc$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BlockStatesLoader#context
    static void set_field_context(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "context", "field_52274", "context", "f_336707_"), "Lggc$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadAllBlockStates", "method_61051", "load", "m_338905_"), "()V");
    }

    static void load(const jobject& obj) {
                
       const auto methodID = methodID_load();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadBlockStates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadBlockStateDefinitions", "method_61053", "loadBlockStates", "m_339144_"), "(Lakr;Ldtd;)V");
    }

    static void loadBlockStates(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_loadBlockStates();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_toStatePredicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "predicate", "method_61057", "toStatePredicate", "m_338618_"), "(Ldtd;Ljava/lang/String;)Ljava/util/function/Predicate;");
    }

    static jobject toStatePredicate(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_toStatePredicate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_parseProperty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getValueHelper", "method_61058", "parseProperty", "m_338822_"), "(Lduf;Ljava/lang/String;)Ljava/lang/Comparable;");
    }

    static jobject parseProperty(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_parseProperty();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addStates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "registerModelGroup", "method_61063", "addStates", "m_339576_"), "(Ljava/lang/Iterable;)V");
    }

    static void addStates(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addStates();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getStateLookup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getModelGroups", "method_61069", "getStateLookup", "m_338779_"), "()Lit/unimi/dsi/fastutil/objects/Object2IntMap;");
    }

    static jobject getStateLookup(const jobject& obj) {
                
       const auto methodID = methodID_getStateLookup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_BLOCKSTATESLOADER_HPP