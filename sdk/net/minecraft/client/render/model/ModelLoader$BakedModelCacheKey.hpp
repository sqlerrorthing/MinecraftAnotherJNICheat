// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_MODELLOADER$BAKEDMODELCACHEKEY_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_MODELLOADER$BAKEDMODELCACHEKEY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.ModelLoader$BakedModelCacheKey
 * Remapped: gss$a
 */
namespace ModelLoader$BakedModelCacheKey {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gss$a", "net/minecraft/client/resources/model/ModelBakery$BakedCacheKey", "net/minecraft/class_1088$class_7776", "net/minecraft/client/render/model/ModelLoader$BakedModelCacheKey", "net/minecraft/src/C_4532_$C_243580_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.render.model.ModelLoader$BakedModelCacheKey#id
    static jobject get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "id", "comp_1053", "id", "f_243934_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.ModelLoader$BakedModelCacheKey#id
    static void set_field_id(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "id", "comp_1053", "id", "f_243934_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.ModelLoader$BakedModelCacheKey#transformation
    static jobject get_field_transformation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "transformation", "comp_1054", "transformation", "f_243798_"), "Lj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.ModelLoader$BakedModelCacheKey#transformation
    static void set_field_transformation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "transformation", "comp_1054", "transformation", "f_243798_"), "Lj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.ModelLoader$BakedModelCacheKey#isUvLocked
    static jboolean get_field_isUvLocked(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "isUvLocked", "comp_1055", "isUvLocked", "f_243915_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.ModelLoader$BakedModelCacheKey#isUvLocked
    static void set_field_isUvLocked(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "isUvLocked", "comp_1055", "isUvLocked", "f_243915_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID__id() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "id", "comp_1053", "id", "f_243934_"), "()Lakr;");
    }

    static jobject _id(const jobject& obj) {
                
       const auto methodID = methodID__id();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__transformation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "transformation", "comp_1054", "transformation", "f_243798_"), "()Lj;");
    }

    static jobject _transformation(const jobject& obj) {
                
       const auto methodID = methodID__transformation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__isUvLocked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isUvLocked", "comp_1055", "isUvLocked", "f_243915_"), "()Z");
    }

    static jboolean _isUvLocked(const jobject& obj) {
                
       const auto methodID = methodID__isUvLocked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_MODELLOADER$BAKEDMODELCACHEKEY_HPP