// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_SPRITEATLASMANAGER$ATLASPREPARATION_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_SPRITEATLASMANAGER$ATLASPREPARATION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.SpriteAtlasManager$AtlasPreparation
 * Remapped: gsl$b
 */
namespace SpriteAtlasManager$AtlasPreparation {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gsl$b", "net/minecraft/client/resources/model/AtlasSet$StitchResult", "net/minecraft/class_4724$class_7774", "net/minecraft/client/render/model/SpriteAtlasManager$AtlasPreparation", "net/minecraft/src/C_243561_$C_243596_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.render.model.SpriteAtlasManager$AtlasPreparation#atlasTexture
    static jobject get_field_atlasTexture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "atlas", "field_40564", "atlasTexture", "f_244080_"), "Lgqk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.SpriteAtlasManager$AtlasPreparation#atlasTexture
    static void set_field_atlasTexture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "atlas", "field_40564", "atlasTexture", "f_244080_"), "Lgqk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.SpriteAtlasManager$AtlasPreparation#stitchResult
    static jobject get_field_stitchResult(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "preparations", "field_40565", "stitchResult", "f_244211_"), "Lgqg$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.SpriteAtlasManager$AtlasPreparation#stitchResult
    static void set_field_stitchResult(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "preparations", "field_40565", "stitchResult", "f_244211_"), "Lgqg$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getSprite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSprite", "method_45869", "getSprite", "m_245551_"), "(Lakr;)Lgql;");
    }

    static jobject getSprite(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSprite();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMissingSprite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "missing", "method_45868", "getMissingSprite", "m_247223_"), "()Lgql;");
    }

    static jobject getMissingSprite(const jobject& obj) {
                
       const auto methodID = methodID_getMissingSprite();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_whenComplete() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "readyForUpload", "method_45870", "whenComplete", "m_246362_"), "()Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject whenComplete(const jobject& obj) {
                
       const auto methodID = methodID_whenComplete();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_upload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "upload", "method_45871", "upload", "m_246239_"), "()V");
    }

    static void upload(const jobject& obj) {
                
       const auto methodID = methodID_upload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_SPRITEATLASMANAGER$ATLASPREPARATION_HPP