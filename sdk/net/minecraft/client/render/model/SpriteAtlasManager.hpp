// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_SPRITEATLASMANAGER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_SPRITEATLASMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.SpriteAtlasManager
 * Remapped: gsl
 */
namespace SpriteAtlasManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gsl", "net/minecraft/client/resources/model/AtlasSet", "net/minecraft/class_4724", "net/minecraft/client/render/model/SpriteAtlasManager", "net/minecraft/src/C_243561_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.render.model.SpriteAtlasManager#atlases
    static jobject get_field_atlases(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "atlases", "field_21746", "atlases", "f_244518_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.SpriteAtlasManager#atlases
    static void set_field_atlases(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "atlases", "field_21746", "atlases", "f_244518_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getAtlas() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAtlas", "method_24098", "getAtlas", "m_245433_"), "(Lakr;)Lgqk;");
    }

    static jobject getAtlas(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAtlas();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_reload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "scheduleLoad", "method_45862", "reload", "m_247721_"), "(Laue;ILjava/util/concurrent/Executor;)Ljava/util/Map;");
    }

    static jobject reload(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_reload();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_SPRITEATLASMANAGER_HPP