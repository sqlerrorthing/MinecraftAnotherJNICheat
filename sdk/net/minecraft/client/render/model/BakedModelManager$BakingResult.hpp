// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_BAKEDMODELMANAGER$BAKINGRESULT_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_BAKEDMODELMANAGER$BAKINGRESULT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.BakedModelManager$BakingResult
 * Remapped: gst$a
 */
namespace BakedModelManager$BakingResult {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gst$a", "net/minecraft/client/resources/model/ModelManager$ReloadState", "net/minecraft/class_1092$class_7779", "net/minecraft/client/render/model/BakedModelManager$BakingResult", "net/minecraft/src/C_4535_$C_243437_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.client.render.model.BakedModelManager$BakingResult#modelLoader
    static jobject get_field_modelLoader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "modelBakery", "comp_1058", "modelLoader", "f_244394_"), "Lgss;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.model.BakedModelManager$BakingResult#modelLoader
    static void set_field_modelLoader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "modelBakery", "comp_1058", "modelLoader", "f_244394_"), "Lgss;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.render.model.BakedModelManager$BakingResult#missingModel
    static jobject get_field_missingModel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "missingModel", "comp_1059", "missingModel", "f_244619_"), "Lgsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.model.BakedModelManager$BakingResult#missingModel
    static void set_field_missingModel(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "missingModel", "comp_1059", "missingModel", "f_244619_"), "Lgsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.render.model.BakedModelManager$BakingResult#modelCache
    static jobject get_field_modelCache(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "modelCache", "comp_1060", "modelCache", "f_244561_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.model.BakedModelManager$BakingResult#modelCache
    static void set_field_modelCache(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "modelCache", "comp_1060", "modelCache", "f_244561_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.render.model.BakedModelManager$BakingResult#atlasPreparations
    static jobject get_field_atlasPreparations(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "atlasPreparations", "comp_1061", "atlasPreparations", "f_244177_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.model.BakedModelManager$BakingResult#atlasPreparations
    static void set_field_atlasPreparations(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "atlasPreparations", "comp_1061", "atlasPreparations", "f_244177_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.render.model.BakedModelManager$BakingResult#readyForUpload
    static jobject get_field_readyForUpload(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "readyForUpload", "comp_1062", "readyForUpload", "f_244037_"), "Ljava/util/concurrent/CompletableFuture;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.render.model.BakedModelManager$BakingResult#readyForUpload
    static void set_field_readyForUpload(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "readyForUpload", "comp_1062", "readyForUpload", "f_244037_"), "Ljava/util/concurrent/CompletableFuture;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID__modelLoader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "modelBakery", "comp_1058", "modelLoader", "f_244394_"), "()Lgss;");
    }

    static jobject _modelLoader(const jobject& obj) {
                
       const auto methodID = methodID__modelLoader();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__missingModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "missingModel", "comp_1059", "missingModel", "f_244619_"), "()Lgsm;");
    }

    static jobject _missingModel(const jobject& obj) {
                
       const auto methodID = methodID__missingModel();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__modelCache() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "modelCache", "comp_1060", "modelCache", "f_244561_"), "()Ljava/util/Map;");
    }

    static jobject _modelCache(const jobject& obj) {
                
       const auto methodID = methodID__modelCache();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__atlasPreparations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "atlasPreparations", "comp_1061", "atlasPreparations", "f_244177_"), "()Ljava/util/Map;");
    }

    static jobject _atlasPreparations(const jobject& obj) {
                
       const auto methodID = methodID__atlasPreparations();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__readyForUpload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "readyForUpload", "comp_1062", "readyForUpload", "f_244037_"), "()Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject _readyForUpload(const jobject& obj) {
                
       const auto methodID = methodID__readyForUpload();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_BAKEDMODELMANAGER$BAKINGRESULT_HPP