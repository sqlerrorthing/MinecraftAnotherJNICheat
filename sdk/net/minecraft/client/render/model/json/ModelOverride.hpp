// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_MODELOVERRIDE_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_MODELOVERRIDE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.json.ModelOverride
 * Remapped: ggf
 */
namespace ModelOverride {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ggf", "net/minecraft/client/renderer/block/model/ItemOverride", "net/minecraft/class_799", "net/minecraft/client/render/model/json/ModelOverride", "net/minecraft/src/C_4217_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.render.model.json.ModelOverride#modelId
    static jobject get_field_modelId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "model", "field_4268", "modelId", "f_111713_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.ModelOverride#modelId
    static void set_field_modelId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "model", "field_4268", "modelId", "f_111713_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.json.ModelOverride#conditions
    static jobject get_field_conditions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "predicates", "field_4269", "conditions", "f_111714_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.ModelOverride#conditions
    static void set_field_conditions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "predicates", "field_4269", "conditions", "f_111714_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getModelId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getModel", "method_3472", "getModelId", "m_111718_"), "()Lakr;");
    }

    static jobject getModelId(const jobject& obj) {
                
       const auto methodID = methodID_getModelId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_streamConditions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getPredicates", "method_33690", "streamConditions", "m_173449_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamConditions(const jobject& obj) {
                
       const auto methodID = methodID_streamConditions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_MODELOVERRIDE_HPP