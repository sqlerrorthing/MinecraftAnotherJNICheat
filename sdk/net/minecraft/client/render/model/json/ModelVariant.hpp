// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_MODELVARIANT_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_MODELVARIANT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.json.ModelVariant
 * Remapped: ggk
 */
namespace ModelVariant {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ggk", "net/minecraft/client/renderer/block/model/Variant", "net/minecraft/class_813", "net/minecraft/client/render/model/json/ModelVariant", "net/minecraft/src/C_4228_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.render.model.json.ModelVariant#location
    static jobject get_field_location(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "modelLocation", "field_4326", "location", "f_111874_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.ModelVariant#location
    static void set_field_location(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "modelLocation", "field_4326", "location", "f_111874_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.json.ModelVariant#rotation
    static jobject get_field_rotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "rotation", "field_4328", "rotation", "f_111875_"), "Lj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.ModelVariant#rotation
    static void set_field_rotation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "rotation", "field_4328", "rotation", "f_111875_"), "Lj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.json.ModelVariant#uvLock
    static jboolean get_field_uvLock(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "uvLock", "field_4327", "uvLock", "f_111876_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.ModelVariant#uvLock
    static void set_field_uvLock(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "uvLock", "field_4327", "uvLock", "f_111876_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.json.ModelVariant#weight
    static jint get_field_weight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "weight", "field_4325", "weight", "f_111877_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.ModelVariant#weight
    static void set_field_weight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "weight", "field_4325", "weight", "f_111877_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getLocation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getModelLocation", "method_3510", "getLocation", "m_111883_"), "()Lakr;");
    }

    static jobject getLocation(const jobject& obj) {
                
       const auto methodID = methodID_getLocation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRotation", "method_3509", "getRotation", "m_6189_"), "()Lj;");
    }

    static jobject getRotation(const jobject& obj) {
                
       const auto methodID = methodID_getRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isUvLocked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isUvLocked", "method_3512", "isUvLocked", "m_7538_"), "()Z");
    }

    static jboolean isUvLocked(const jobject& obj) {
                
       const auto methodID = methodID_isUvLocked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getWeight", "method_3511", "getWeight", "m_111886_"), "()I");
    }

    static jint getWeight(const jobject& obj) {
                
       const auto methodID = methodID_getWeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_MODELVARIANT_HPP