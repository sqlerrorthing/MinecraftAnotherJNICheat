// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_MODELELEMENT_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_MODELELEMENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.json.ModelElement
 * Remapped: gfx
 */
namespace ModelElement {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gfx", "net/minecraft/client/renderer/block/model/BlockElement", "net/minecraft/class_785", "net/minecraft/client/render/model/json/ModelElement", "net/minecraft/src/C_4197_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.model.json.ModelElement#field_32785
    [[maybe_unused]] static jboolean get_field_field_32785() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DEFAULT_RESCALE", "field_32785", "field_32785", "f_173411_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.ModelElement#field_32785
    [[maybe_unused]] static void set_field_field_32785(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DEFAULT_RESCALE", "field_32785", "field_32785", "f_173411_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.model.json.ModelElement#field_32786
    [[maybe_unused]] static jfloat get_field_field_32786() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MIN_EXTENT", "field_32786", "field_32786", "f_173412_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.ModelElement#field_32786
    [[maybe_unused]] static void set_field_field_32786(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MIN_EXTENT", "field_32786", "field_32786", "f_173412_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.model.json.ModelElement#field_32787
    [[maybe_unused]] static jfloat get_field_field_32787() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MAX_EXTENT", "field_32787", "field_32787", "f_173413_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.ModelElement#field_32787
    [[maybe_unused]] static void set_field_field_32787(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MAX_EXTENT", "field_32787", "field_32787", "f_173413_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.model.json.ModelElement#from
    static jobject get_field_from(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "from", "field_4228", "from", "f_111308_"), "Lorg/joml/Vector3f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.model.json.ModelElement#from
    static void set_field_from(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "from", "field_4228", "from", "f_111308_"), "Lorg/joml/Vector3f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.model.json.ModelElement#to
    static jobject get_field_to(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "to", "field_4231", "to", "f_111309_"), "Lorg/joml/Vector3f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.model.json.ModelElement#to
    static void set_field_to(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "to", "field_4231", "to", "f_111309_"), "Lorg/joml/Vector3f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.model.json.ModelElement#faces
    static jobject get_field_faces(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "faces", "field_4230", "faces", "f_111310_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.model.json.ModelElement#faces
    static void set_field_faces(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "faces", "field_4230", "faces", "f_111310_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.model.json.ModelElement#rotation
    static jobject get_field_rotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "rotation", "field_4232", "rotation", "f_111311_"), "Lgfz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.model.json.ModelElement#rotation
    static void set_field_rotation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "rotation", "field_4232", "rotation", "f_111311_"), "Lgfz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.model.json.ModelElement#shade
    static jboolean get_field_shade(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "shade", "field_4229", "shade", "f_111312_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.model.json.ModelElement#shade
    static void set_field_shade(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "shade", "field_4229", "shade", "f_111312_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_initTextures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillUvs", "method_3402", "initTextures", "m_111319_"), "()V");
    }

    static void initTextures(const jobject& obj) {
                
       const auto methodID = methodID_initTextures();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRotatedMatrix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "uvsByFace", "method_3401", "getRotatedMatrix", "m_111320_"), "(Lji;)[F");
    }

    static jfloat getRotatedMatrix(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getRotatedMatrix();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_MODELELEMENT_HPP