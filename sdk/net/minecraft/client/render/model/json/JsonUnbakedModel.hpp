// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_JSONUNBAKEDMODEL_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_JSONUNBAKEDMODEL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.json.JsonUnbakedModel
 * Remapped: ggb
 */
namespace JsonUnbakedModel {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ggb", "net/minecraft/client/renderer/block/model/BlockModel", "net/minecraft/class_793", "net/minecraft/client/render/model/json/JsonUnbakedModel", "net/minecraft/src/C_4205_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "LOGGER", "field_4248", "LOGGER", "f_111420_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "LOGGER", "field_4248", "LOGGER", "f_111420_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#QUAD_FACTORY
    [[maybe_unused]] static jobject get_field_QUAD_FACTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "FACE_BAKERY", "field_4249", "QUAD_FACTORY", "f_111421_"), "Lggd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#QUAD_FACTORY
    [[maybe_unused]] static void set_field_QUAD_FACTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "FACE_BAKERY", "field_4249", "QUAD_FACTORY", "f_111421_"), "Lggd;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.render.model.json.JsonUnbakedModel#GSON
    [[maybe_unused]] static jobject get_field_GSON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GSON", "field_4254", "GSON", "f_111415_"), "Lcom/google/gson/Gson;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.render.model.json.JsonUnbakedModel#GSON
    [[maybe_unused]] static void set_field_GSON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GSON", "field_4254", "GSON", "f_111415_"), "Lcom/google/gson/Gson;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#TEXTURE_REFERENCE_INITIAL
    [[maybe_unused]] static jchar get_field_TEXTURE_REFERENCE_INITIAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "REFERENCE_CHAR", "field_32793", "TEXTURE_REFERENCE_INITIAL", "f_173419_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#TEXTURE_REFERENCE_INITIAL
    [[maybe_unused]] static void set_field_TEXTURE_REFERENCE_INITIAL(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "REFERENCE_CHAR", "field_32793", "TEXTURE_REFERENCE_INITIAL", "f_173419_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.render.model.json.JsonUnbakedModel#PARTICLE_KEY
    [[maybe_unused]] static jobject get_field_PARTICLE_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PARTICLE_TEXTURE_REFERENCE", "field_32792", "PARTICLE_KEY", "f_173418_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.render.model.json.JsonUnbakedModel#PARTICLE_KEY
    [[maybe_unused]] static void set_field_PARTICLE_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PARTICLE_TEXTURE_REFERENCE", "field_32792", "PARTICLE_KEY", "f_173418_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#field_42912
    [[maybe_unused]] static jboolean get_field_field_42912() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DEFAULT_AMBIENT_OCCLUSION", "field_42912", "field_42912", "f_271537_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#field_42912
    [[maybe_unused]] static void set_field_field_42912(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DEFAULT_AMBIENT_OCCLUSION", "field_42912", "field_42912", "f_271537_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.json.JsonUnbakedModel#elements
    static jobject get_field_elements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "elements", "field_4245", "elements", "f_111422_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#elements
    static void set_field_elements(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "elements", "field_4245", "elements", "f_111422_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.json.JsonUnbakedModel#guiLight
    static jobject get_field_guiLight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "guiLight", "field_21857", "guiLight", "f_111423_"), "Lggb$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#guiLight
    static void set_field_guiLight(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "guiLight", "field_21857", "guiLight", "f_111423_"), "Lggb$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.json.JsonUnbakedModel#ambientOcclusion
    static jobject get_field_ambientOcclusion(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "hasAmbientOcclusion", "field_4244", "ambientOcclusion", "f_111424_"), "Ljava/lang/Boolean;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#ambientOcclusion
    static void set_field_ambientOcclusion(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "hasAmbientOcclusion", "field_4244", "ambientOcclusion", "f_111424_"), "Ljava/lang/Boolean;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.json.JsonUnbakedModel#transformations
    static jobject get_field_transformations(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "transforms", "field_4250", "transformations", "f_111425_"), "Lggi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#transformations
    static void set_field_transformations(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "transforms", "field_4250", "transformations", "f_111425_"), "Lggi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.json.JsonUnbakedModel#overrides
    static jobject get_field_overrides(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "overrides", "field_4255", "overrides", "f_111426_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.JsonUnbakedModel#overrides
    static void set_field_overrides(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "overrides", "field_4255", "overrides", "f_111426_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.render.model.json.JsonUnbakedModel#id
    static jobject get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "name", "field_4252", "id", "f_111416_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.render.model.json.JsonUnbakedModel#id
    static void set_field_id(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "name", "field_4252", "id", "f_111416_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.json.JsonUnbakedModel#textureMap
    static jobject get_field_textureMap(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "textureMap", "field_4251", "textureMap", "f_111417_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.json.JsonUnbakedModel#textureMap
    static void set_field_textureMap(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "textureMap", "field_4251", "textureMap", "f_111417_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.json.JsonUnbakedModel#parent
    static jobject get_field_parent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "parent", "field_4253", "parent", "f_111418_"), "Lggb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.json.JsonUnbakedModel#parent
    static void set_field_parent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "parent", "field_4253", "parent", "f_111418_"), "Lggb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.json.JsonUnbakedModel#parentId
    static jobject get_field_parentId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "parentLocation", "field_4247", "parentId", "f_111419_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.json.JsonUnbakedModel#parentId
    static void set_field_parentId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "parentLocation", "field_4247", "parentId", "f_111419_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_deserialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromStream", "method_3437", "deserialize", "m_111461_"), "(Ljava/io/Reader;)Lggb;");
    }

    static jobject deserialize(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_deserialize();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__deserialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromString", "method_3430", "deserialize", "m_111463_"), "(Ljava/lang/String;)Lggb;");
    }

    static jobject _deserialize(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__deserialize();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getElements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getElements", "method_3433", "getElements", "m_111436_"), "()Ljava/util/List;");
    }

    static jobject getElements(const jobject& obj) {
                
       const auto methodID = methodID_getElements();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_useAmbientOcclusion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasAmbientOcclusion", "method_3444", "useAmbientOcclusion", "m_111476_"), "()Z");
    }

    static jboolean useAmbientOcclusion(const jobject& obj) {
                
       const auto methodID = methodID_useAmbientOcclusion();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGuiLight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getGuiLight", "method_24298", "getGuiLight", "m_111479_"), "()Lggb$b;");
    }

    static jobject getGuiLight(const jobject& obj) {
                
       const auto methodID = methodID_getGuiLight();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_needsResolution() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isResolved", "method_35789", "needsResolution", "m_173420_"), "()Z");
    }

    static jboolean needsResolution(const jobject& obj) {
                
       const auto methodID = methodID_needsResolution();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOverrides() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getOverrides", "method_3434", "getOverrides", "m_111484_"), "()Ljava/util/List;");
    }

    static jobject getOverrides(const jobject& obj) {
                
       const auto methodID = methodID_getOverrides();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_compileOverrides() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getItemOverrides", "method_3440", "compileOverrides", "m_246736_"), "(Lgsr;Lggb;)Lggg;");
    }

    static jobject compileOverrides(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_compileOverrides();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getModelDependencies() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getDependencies", "method_4755", "getModelDependencies", "m_7970_"), "()Ljava/util/Collection;");
    }

    static jobject getModelDependencies(const jobject& obj) {
                
       const auto methodID = methodID_getModelDependencies();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setParents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resolveParents", "method_45785", "setParents", "m_5500_"), "(Ljava/util/function/Function;)V");
    }

    static void setParents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setParents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_bake() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "bake", "method_4753", "bake", "m_7611_"), "(Lgsr;Ljava/util/function/Function;Lgsv;)Lgsm;");
    }

    static jobject bake(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_bake();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__bake() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "bake", "method_3446", "bake", "m_111449_"), "(Lgsr;Lggb;Ljava/util/function/Function;Lgsv;Z)Lgsm;");
    }

    static jobject _bake(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jboolean& arg4) {
                
       const auto methodID = methodID__bake();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_createQuad() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bakeFace", "method_3447", "createQuad", "m_111437_"), "(Lgfx;Lgfy;Lgql;Lji;Lgsv;)Lgfw;");
    }

    static jobject createQuad(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_createQuad();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_textureExists() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasTexture", "method_3432", "textureExists", "m_111477_"), "(Ljava/lang/String;)Z");
    }

    static jboolean textureExists(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_textureExists();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_resolveSprite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getMaterial", "method_24077", "resolveSprite", "m_111480_"), "(Ljava/lang/String;)Lgsq;");
    }

    static jobject resolveSprite(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_resolveSprite();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_resolveTexture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "findTextureEntry", "method_3442", "resolveTexture", "m_111485_"), "(Ljava/lang/String;)Lcom/mojang/datafixers/util/Either;");
    }

    static jobject resolveTexture(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_resolveTexture();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isTextureReference() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "isTextureReference", "method_3439", "isTextureReference", "m_111488_"), "(Ljava/lang/String;)Z");
    }

    static jboolean isTextureReference(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isTextureReference();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getRootModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getRootModel", "method_3431", "getRootModel", "m_111490_"), "()Lggb;");
    }

    static jobject getRootModel(const jobject& obj) {
                
       const auto methodID = methodID_getRootModel();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTransformations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getTransforms", "method_3443", "getTransformations", "m_111491_"), "()Lggi;");
    }

    static jobject getTransformations(const jobject& obj) {
                
       const auto methodID = methodID_getTransformations();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTransformation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getTransform", "method_3438", "getTransformation", "m_269178_"), "(Lcun;)Lggh;");
    }

    static jobject getTransformation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTransformation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_JSONUNBAKEDMODEL_HPP