// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_MODELVARIANTMAP_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_MODELVARIANTMAP_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.json.ModelVariantMap
 * Remapped: ggc
 */
namespace ModelVariantMap {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ggc", "net/minecraft/client/renderer/block/model/BlockModelDefinition", "net/minecraft/class_790", "net/minecraft/client/render/model/json/ModelVariantMap", "net/minecraft/src/C_4208_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.render.model.json.ModelVariantMap#variantMap
    static jobject get_field_variantMap(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "variants", "field_4241", "variantMap", "f_111532_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.ModelVariantMap#variantMap
    static void set_field_variantMap(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "variants", "field_4241", "variantMap", "f_111532_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.json.ModelVariantMap#multipartModel
    static jobject get_field_multipartModel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "multiPart", "field_4240", "multipartModel", "f_111533_"), "Lggo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.json.ModelVariantMap#multipartModel
    static void set_field_multipartModel(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "multiPart", "field_4240", "multipartModel", "f_111533_"), "Lggo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_fromJson() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromStream", "method_3424", "fromJson", "m_111540_"), "(Lggc$a;Ljava/io/Reader;)Lggc;");
    }

    static jobject fromJson(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_fromJson();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__fromJson() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromJsonElement", "method_45787", "fromJson", "m_247114_"), "(Lggc$a;Lcom/google/gson/JsonElement;)Lggc;");
    }

    static jobject _fromJson(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__fromJson();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_containsVariant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasVariant", "method_35790", "containsVariant", "m_173425_"), "(Ljava/lang/String;)Z");
    }

    static jboolean containsVariant(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_containsVariant();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getVariant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getVariant", "method_35792", "getVariant", "m_173428_"), "(Ljava/lang/String;)Lggj;");
    }

    static jobject getVariant(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getVariant();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getVariantMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getVariants", "method_3423", "getVariantMap", "m_111539_"), "()Ljava/util/Map;");
    }

    static jobject getVariantMap(const jobject& obj) {
                
       const auto methodID = methodID_getVariantMap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAllModels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getMultiVariants", "method_35791", "getAllModels", "m_173427_"), "()Ljava/util/Set;");
    }

    static jobject getAllModels(const jobject& obj) {
                
       const auto methodID = methodID_getAllModels();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasMultipartModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isMultiPart", "method_3422", "hasMultipartModel", "m_111543_"), "()Z");
    }

    static jboolean hasMultipartModel(const jobject& obj) {
                
       const auto methodID = methodID_hasMultipartModel();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMultipartModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getMultiPart", "method_3421", "getMultipartModel", "m_111544_"), "()Lggo;");
    }

    static jobject getMultipartModel(const jobject& obj) {
                
       const auto methodID = methodID_getMultipartModel();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_JSON_MODELVARIANTMAP_HPP