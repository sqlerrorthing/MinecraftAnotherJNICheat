// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_BASICBAKEDMODEL$BUILDER_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_BASICBAKEDMODEL$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.BasicBakedModel$Builder
 * Remapped: gsx$a
 */
namespace BasicBakedModel$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gsx$a", "net/minecraft/client/resources/model/SimpleBakedModel$Builder", "net/minecraft/class_1093$class_1094", "net/minecraft/client/render/model/BasicBakedModel$Builder", "net/minecraft/src/C_4540_$C_4541_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.render.model.BasicBakedModel$Builder#quads
    static jobject get_field_quads(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "unculledFaces", "field_5419", "quads", "f_119508_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BasicBakedModel$Builder#quads
    static void set_field_quads(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "unculledFaces", "field_5419", "quads", "f_119508_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BasicBakedModel$Builder#faceQuads
    static jobject get_field_faceQuads(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "culledFaces", "field_5422", "faceQuads", "f_119509_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BasicBakedModel$Builder#faceQuads
    static void set_field_faceQuads(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "culledFaces", "field_5422", "faceQuads", "f_119509_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BasicBakedModel$Builder#itemPropertyOverrides
    static jobject get_field_itemPropertyOverrides(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "overrides", "field_5423", "itemPropertyOverrides", "f_119510_"), "Lggg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BasicBakedModel$Builder#itemPropertyOverrides
    static void set_field_itemPropertyOverrides(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "overrides", "field_5423", "itemPropertyOverrides", "f_119510_"), "Lggg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BasicBakedModel$Builder#usesAo
    static jboolean get_field_usesAo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "hasAmbientOcclusion", "field_5421", "usesAo", "f_119511_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BasicBakedModel$Builder#usesAo
    static void set_field_usesAo(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "hasAmbientOcclusion", "field_5421", "usesAo", "f_119511_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BasicBakedModel$Builder#particleTexture
    static jobject get_field_particleTexture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "particleIcon", "field_5424", "particleTexture", "f_119512_"), "Lgql;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BasicBakedModel$Builder#particleTexture
    static void set_field_particleTexture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "particleIcon", "field_5424", "particleTexture", "f_119512_"), "Lgql;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BasicBakedModel$Builder#isSideLit
    static jboolean get_field_isSideLit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "usesBlockLight", "field_5420", "isSideLit", "f_119513_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BasicBakedModel$Builder#isSideLit
    static void set_field_isSideLit(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "usesBlockLight", "field_5420", "isSideLit", "f_119513_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BasicBakedModel$Builder#hasDepth
    static jboolean get_field_hasDepth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "isGui3d", "field_21865", "hasDepth", "f_119514_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BasicBakedModel$Builder#hasDepth
    static void set_field_hasDepth(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "isGui3d", "field_21865", "hasDepth", "f_119514_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BasicBakedModel$Builder#transformation
    static jobject get_field_transformation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "transforms", "field_5418", "transformation", "f_119515_"), "Lggi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BasicBakedModel$Builder#transformation
    static void set_field_transformation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "transforms", "field_5418", "transformation", "f_119515_"), "Lggi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addQuad() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addCulledFace", "method_4745", "addQuad", "m_119530_"), "(Lji;Lgfw;)Lgsx$a;");
    }

    static jobject addQuad(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addQuad();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__addQuad() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addUnculledFace", "method_4748", "addQuad", "m_119526_"), "(Lgfw;)Lgsx$a;");
    }

    static jobject _addQuad(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__addQuad();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "particle", "method_4747", "setParticle", "m_119528_"), "(Lgql;)Lgsx$a;");
    }

    static jobject setParticle(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setParticle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_method_35809() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "item", "method_35809", "method_35809", "m_174911_"), "()Lgsx$a;");
    }

    static jobject method_35809(const jobject& obj) {
                
       const auto methodID = methodID_method_35809();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "build", "method_4746", "build", "m_119533_"), "()Lgsm;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_BASICBAKEDMODEL$BUILDER_HPP