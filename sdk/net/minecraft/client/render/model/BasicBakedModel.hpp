// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_BASICBAKEDMODEL_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_BASICBAKEDMODEL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.BasicBakedModel
 * Remapped: gsx
 */
namespace BasicBakedModel {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gsx", "net/minecraft/client/resources/model/SimpleBakedModel", "net/minecraft/class_1093", "net/minecraft/client/render/model/BasicBakedModel", "net/minecraft/src/C_4540_"));
        }
        return cachedClass;
    };

    // getter for protected field net.minecraft.client.render.model.BasicBakedModel#quads
    static jobject get_field_quads(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "unculledFaces", "field_5411", "quads", "f_119480_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.BasicBakedModel#quads
    static void set_field_quads(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "unculledFaces", "field_5411", "quads", "f_119480_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.BasicBakedModel#faceQuads
    static jobject get_field_faceQuads(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "culledFaces", "field_5414", "faceQuads", "f_119481_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.BasicBakedModel#faceQuads
    static void set_field_faceQuads(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "culledFaces", "field_5414", "faceQuads", "f_119481_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.BasicBakedModel#usesAo
    static jboolean get_field_usesAo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "hasAmbientOcclusion", "field_5415", "usesAo", "f_119482_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.BasicBakedModel#usesAo
    static void set_field_usesAo(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "hasAmbientOcclusion", "field_5415", "usesAo", "f_119482_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.BasicBakedModel#hasDepth
    static jboolean get_field_hasDepth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "isGui3d", "field_5413", "hasDepth", "f_119483_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.BasicBakedModel#hasDepth
    static void set_field_hasDepth(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "isGui3d", "field_5413", "hasDepth", "f_119483_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.BasicBakedModel#isSideLit
    static jboolean get_field_isSideLit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "usesBlockLight", "field_21864", "isSideLit", "f_119484_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.BasicBakedModel#isSideLit
    static void set_field_isSideLit(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "usesBlockLight", "field_21864", "isSideLit", "f_119484_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.BasicBakedModel#sprite
    static jobject get_field_sprite(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "particleIcon", "field_5416", "sprite", "f_119485_"), "Lgql;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.BasicBakedModel#sprite
    static void set_field_sprite(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "particleIcon", "field_5416", "sprite", "f_119485_"), "Lgql;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.BasicBakedModel#transformation
    static jobject get_field_transformation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "transforms", "field_5417", "transformation", "f_119486_"), "Lggi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.BasicBakedModel#transformation
    static void set_field_transformation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "transforms", "field_5417", "transformation", "f_119486_"), "Lggi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.BasicBakedModel#itemPropertyOverrides
    static jobject get_field_itemPropertyOverrides(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "overrides", "field_5412", "itemPropertyOverrides", "f_119487_"), "Lggg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.BasicBakedModel#itemPropertyOverrides
    static void set_field_itemPropertyOverrides(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "overrides", "field_5412", "itemPropertyOverrides", "f_119487_"), "Lggg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getQuads() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getQuads", "method_4707", "getQuads", "m_213637_"), "(Ldtc;Lji;Layw;)Ljava/util/List;");
    }

    static jobject getQuads(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getQuads();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_useAmbientOcclusion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "useAmbientOcclusion", "method_4708", "useAmbientOcclusion", "m_7541_"), "()Z");
    }

    static jboolean useAmbientOcclusion(const jobject& obj) {
                
       const auto methodID = methodID_useAmbientOcclusion();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__hasDepth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isGui3d", "method_4712", "hasDepth", "m_7539_"), "()Z");
    }

    static jboolean _hasDepth(const jobject& obj) {
                
       const auto methodID = methodID__hasDepth();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__isSideLit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "usesBlockLight", "method_24304", "isSideLit", "m_7547_"), "()Z");
    }

    static jboolean _isSideLit(const jobject& obj) {
                
       const auto methodID = methodID__isSideLit();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isBuiltin() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isCustomRenderer", "method_4713", "isBuiltin", "m_7521_"), "()Z");
    }

    static jboolean isBuiltin(const jobject& obj) {
                
       const auto methodID = methodID_isBuiltin();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getParticleSprite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getParticleIcon", "method_4711", "getParticleSprite", "m_6160_"), "()Lgql;");
    }

    static jobject getParticleSprite(const jobject& obj) {
                
       const auto methodID = methodID_getParticleSprite();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTransformation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getTransforms", "method_4709", "getTransformation", "m_7442_"), "()Lggi;");
    }

    static jobject getTransformation(const jobject& obj) {
                
       const auto methodID = methodID_getTransformation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOverrides() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getOverrides", "method_4710", "getOverrides", "m_7343_"), "()Lggg;");
    }

    static jobject getOverrides(const jobject& obj) {
                
       const auto methodID = methodID_getOverrides();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_BASICBAKEDMODEL_HPP