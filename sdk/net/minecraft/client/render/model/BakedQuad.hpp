// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RENDER_MODEL_BAKEDQUAD_HPP
#define NET_MINECRAFT_CLIENT_RENDER_MODEL_BAKEDQUAD_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.render.model.BakedQuad
 * Remapped: gfw
 */
namespace BakedQuad {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gfw", "net/minecraft/client/renderer/block/model/BakedQuad", "net/minecraft/class_777", "net/minecraft/client/render/model/BakedQuad", "net/minecraft/src/C_4196_"));
        }
        return cachedClass;
    };

    // getter for protected field net.minecraft.client.render.model.BakedQuad#vertexData
    static jint get_field_vertexData(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "vertices", "field_4175", "vertexData", "f_111292_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.BakedQuad#vertexData
    static void set_field_vertexData(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "vertices", "field_4175", "vertexData", "f_111292_"), "[I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.BakedQuad#colorIndex
    static jint get_field_colorIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "tintIndex", "field_4174", "colorIndex", "f_111293_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.BakedQuad#colorIndex
    static void set_field_colorIndex(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "tintIndex", "field_4174", "colorIndex", "f_111293_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.BakedQuad#face
    static jobject get_field_face(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "direction", "field_4173", "face", "f_111294_"), "Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.BakedQuad#face
    static void set_field_face(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "direction", "field_4173", "face", "f_111294_"), "Lji;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.render.model.BakedQuad#sprite
    static jobject get_field_sprite(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "sprite", "field_4176", "sprite", "f_111295_"), "Lgql;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.render.model.BakedQuad#sprite
    static void set_field_sprite(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "sprite", "field_4176", "sprite", "f_111295_"), "Lgql;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.render.model.BakedQuad#shade
    static jboolean get_field_shade(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "shade", "field_22441", "shade", "f_111296_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.render.model.BakedQuad#shade
    static void set_field_shade(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "shade", "field_22441", "shade", "f_111296_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getSprite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSprite", "method_35788", "getSprite", "m_173410_"), "()Lgql;");
    }

    static jobject getSprite(const jobject& obj) {
                
       const auto methodID = methodID_getSprite();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVertexData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getVertices", "method_3357", "getVertexData", "m_111303_"), "()[I");
    }

    static jint getVertexData(const jobject& obj) {
                
       const auto methodID = methodID_getVertexData();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isTinted", "method_3360", "hasColor", "m_111304_"), "()Z");
    }

    static jboolean hasColor(const jobject& obj) {
                
       const auto methodID = methodID_hasColor();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getColorIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getTintIndex", "method_3359", "getColorIndex", "m_111305_"), "()I");
    }

    static jint getColorIndex(const jobject& obj) {
                
       const auto methodID = methodID_getColorIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDirection", "method_3358", "getFace", "m_111306_"), "()Lji;");
    }

    static jobject getFace(const jobject& obj) {
                
       const auto methodID = methodID_getFace();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasShade() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isShade", "method_24874", "hasShade", "m_111307_"), "()Z");
    }

    static jboolean hasShade(const jobject& obj) {
                
       const auto methodID = methodID_hasShade();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RENDER_MODEL_BAKEDQUAD_HPP