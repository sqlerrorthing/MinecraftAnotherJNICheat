// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RESOURCE_LANGUAGE_I18N_HPP
#define NET_MINECRAFT_CLIENT_RESOURCE_LANGUAGE_I18N_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.resource.language.I18n
 * Remapped: grr
 */
namespace I18n {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("grr", "net/minecraft/client/resources/language/I18n", "net/minecraft/class_1074", "net/minecraft/client/resource/language/I18n", "net/minecraft/src/C_4513_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.resource.language.I18n#language
    [[maybe_unused]] static jobject get_field_language() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "language", "field_25290", "language", "f_118934_"), "Ltw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.language.I18n#language
    [[maybe_unused]] static void set_field_language(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "language", "field_25290", "language", "f_118934_"), "Ltw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_setLanguage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setLanguage", "method_29391", "setLanguage", "m_118941_"), "(Ltw;)V");
    }

    static void setLanguage(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_setLanguage();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_translate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_4662", "translate", "m_118938_"), "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;");
    }

    static jobject translate(const jobject& arg0, const jarray& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_translate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_hasTranslation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "exists", "method_4663", "hasTranslation", "m_118936_"), "(Ljava/lang/String;)Z");
    }

    static jboolean hasTranslation(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasTranslation();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RESOURCE_LANGUAGE_I18N_HPP