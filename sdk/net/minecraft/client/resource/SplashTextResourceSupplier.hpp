// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RESOURCE_SPLASHTEXTRESOURCESUPPLIER_HPP
#define NET_MINECRAFT_CLIENT_RESOURCE_SPLASHTEXTRESOURCESUPPLIER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.resource.SplashTextResourceSupplier
 * Remapped: grn
 */
namespace SplashTextResourceSupplier {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("grn", "net/minecraft/client/resources/SplashManager", "net/minecraft/class_4008", "net/minecraft/client/resource/SplashTextResourceSupplier", "net/minecraft/src/C_4509_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.resource.SplashTextResourceSupplier#RESOURCE_ID
    [[maybe_unused]] static jobject get_field_RESOURCE_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPLASHES_LOCATION", "field_17904", "RESOURCE_ID", "f_118860_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.SplashTextResourceSupplier#RESOURCE_ID
    [[maybe_unused]] static void set_field_RESOURCE_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPLASHES_LOCATION", "field_17904", "RESOURCE_ID", "f_118860_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.resource.SplashTextResourceSupplier#RANDOM
    [[maybe_unused]] static jobject get_field_RANDOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RANDOM", "field_17905", "RANDOM", "f_118861_"), "Layw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.SplashTextResourceSupplier#RANDOM
    [[maybe_unused]] static void set_field_RANDOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RANDOM", "field_17905", "RANDOM", "f_118861_"), "Layw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.SplashTextResourceSupplier#splashTexts
    static jobject get_field_splashTexts(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "splashes", "field_17906", "splashTexts", "f_118862_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.SplashTextResourceSupplier#splashTexts
    static void set_field_splashTexts(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "splashes", "field_17906", "splashTexts", "f_118862_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.SplashTextResourceSupplier#session
    static jobject get_field_session(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "user", "field_18934", "session", "f_118863_"), "Lfhb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.SplashTextResourceSupplier#session
    static void set_field_session(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "user", "field_18934", "session", "f_118863_"), "Lfhb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_prepare() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "prepare", "method_18176", "prepare", "m_5944_"), "(Laue;Lbnf;)Ljava/util/List;");
    }

    static jobject prepare(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_prepare();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_18175", "apply", "m_5787_"), "(Ljava/util/List;Laue;Lbnf;)V");
    }

    static void apply(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_apply();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSplash", "method_18174", "get", "m_280369_"), "()Lfjq;");
    }

    static jobject get(const jobject& obj) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RESOURCE_SPLASHTEXTRESOURCESUPPLIER_HPP