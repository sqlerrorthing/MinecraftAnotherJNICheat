// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RESOURCE_VIDEOWARNINGMANAGER_HPP
#define NET_MINECRAFT_CLIENT_RESOURCE_VIDEOWARNINGMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.resource.VideoWarningManager
 * Remapped: get
 */
namespace VideoWarningManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("get", "net/minecraft/client/renderer/GpuWarnlistManager", "net/minecraft/class_5407", "net/minecraft/client/resource/VideoWarningManager", "net/minecraft/src/C_4127_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.resource.VideoWarningManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_25716", "LOGGER", "f_109210_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.VideoWarningManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_25716", "LOGGER", "f_109210_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.resource.VideoWarningManager#GPU_WARNLIST_ID
    [[maybe_unused]] static jobject get_field_GPU_WARNLIST_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GPU_WARNLIST_LOCATION", "field_25689", "GPU_WARNLIST_ID", "f_109211_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.VideoWarningManager#GPU_WARNLIST_ID
    [[maybe_unused]] static void set_field_GPU_WARNLIST_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GPU_WARNLIST_LOCATION", "field_25689", "GPU_WARNLIST_ID", "f_109211_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.VideoWarningManager#warnings
    static jobject get_field_warnings(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "warnings", "field_25690", "warnings", "f_109212_"), "Lcom/google/common/collect/ImmutableMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.VideoWarningManager#warnings
    static void set_field_warnings(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "warnings", "field_25690", "warnings", "f_109212_"), "Lcom/google/common/collect/ImmutableMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.VideoWarningManager#warningScheduled
    static jboolean get_field_warningScheduled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "showWarning", "field_25717", "warningScheduled", "f_109213_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.VideoWarningManager#warningScheduled
    static void set_field_warningScheduled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "showWarning", "field_25717", "warningScheduled", "f_109213_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.VideoWarningManager#warned
    static jboolean get_field_warned(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "warningDismissed", "field_25718", "warned", "f_109214_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.VideoWarningManager#warned
    static void set_field_warned(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "warningDismissed", "field_25718", "warned", "f_109214_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.VideoWarningManager#cancelledAfterWarning
    static jboolean get_field_cancelledAfterWarning(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "skipFabulous", "field_25719", "cancelledAfterWarning", "f_109215_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.VideoWarningManager#cancelledAfterWarning
    static void set_field_cancelledAfterWarning(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "skipFabulous", "field_25719", "cancelledAfterWarning", "f_109215_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_hasWarning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasWarnings", "method_30055", "hasWarning", "m_109218_"), "()Z");
    }

    static jboolean hasWarning(const jobject& obj) {
                
       const auto methodID = methodID_hasWarning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canWarn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "willShowWarning", "method_30137", "canWarn", "m_109240_"), "()Z");
    }

    static jboolean canWarn(const jobject& obj) {
                
       const auto methodID = methodID_canWarn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_scheduleWarning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "showWarning", "method_30138", "scheduleWarning", "m_109247_"), "()V");
    }

    static void scheduleWarning(const jobject& obj) {
                
       const auto methodID = methodID_scheduleWarning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_acceptAfterWarnings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "dismissWarning", "method_30139", "acceptAfterWarnings", "m_109248_"), "()V");
    }

    static void acceptAfterWarnings(const jobject& obj) {
                
       const auto methodID = methodID_acceptAfterWarnings();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_cancelAfterWarnings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "dismissWarningAndSkipFabulous", "method_30140", "cancelAfterWarnings", "m_109249_"), "()V");
    }

    static void cancelAfterWarnings(const jobject& obj) {
                
       const auto methodID = methodID_cancelAfterWarnings();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldWarn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "isShowingWarning", "method_30141", "shouldWarn", "m_109250_"), "()Z");
    }

    static jboolean shouldWarn(const jobject& obj) {
                
       const auto methodID = methodID_shouldWarn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasCancelledAfterWarning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "isSkippingFabulous", "method_30142", "hasCancelledAfterWarning", "m_109251_"), "()Z");
    }

    static jboolean hasCancelledAfterWarning(const jobject& obj) {
                
       const auto methodID = methodID_hasCancelledAfterWarning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_reset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "resetWarnings", "method_30143", "reset", "m_109252_"), "()V");
    }

    static void reset(const jobject& obj) {
                
       const auto methodID = methodID_reset();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRendererWarning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getRendererWarnings", "method_30060", "getRendererWarning", "m_109253_"), "()Ljava/lang/String;");
    }

    static jobject getRendererWarning(const jobject& obj) {
                
       const auto methodID = methodID_getRendererWarning();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVersionWarning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getVersionWarnings", "method_30062", "getVersionWarning", "m_109254_"), "()Ljava/lang/String;");
    }

    static jobject getVersionWarning(const jobject& obj) {
                
       const auto methodID = methodID_getVersionWarning();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVendorWarning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getVendorWarnings", "method_30063", "getVendorWarning", "m_109255_"), "()Ljava/lang/String;");
    }

    static jobject getVendorWarning(const jobject& obj) {
                
       const auto methodID = methodID_getVendorWarning();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWarningsAsString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getAllWarnings", "method_30920", "getWarningsAsString", "m_109256_"), "()Ljava/lang/String;");
    }

    static jobject getWarningsAsString(const jobject& obj) {
                
       const auto methodID = methodID_getWarningsAsString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_prepare() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "prepare", "method_30056", "prepare", "m_5944_"), "(Laue;Lbnf;)Lget$a;");
    }

    static jobject prepare(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_prepare();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_30058", "apply", "m_5787_"), "(Lget$a;Laue;Lbnf;)V");
    }

    static void apply(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_apply();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_compilePatterns() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "compilePatterns", "method_30057", "compilePatterns", "m_109222_"), "(Lcom/google/gson/JsonArray;Ljava/util/List;)V");
    }

    static void compilePatterns(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_compilePatterns();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_loadWarnlist() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "parseJson", "method_30061", "loadWarnlist", "m_109244_"), "(Laue;Lbnf;)Lcom/google/gson/JsonObject;");
    }

    static jobject loadWarnlist(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_loadWarnlist();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RESOURCE_VIDEOWARNINGMANAGER_HPP