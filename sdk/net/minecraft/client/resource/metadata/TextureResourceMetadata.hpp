// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RESOURCE_METADATA_TEXTURERESOURCEMETADATA_HPP
#define NET_MINECRAFT_CLIENT_RESOURCE_METADATA_TEXTURERESOURCEMETADATA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.resource.metadata.TextureResourceMetadata
 * Remapped: gsi
 */
namespace TextureResourceMetadata {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gsi", "net/minecraft/client/resources/metadata/texture/TextureMetadataSection", "net/minecraft/class_1084", "net/minecraft/client/resource/metadata/TextureResourceMetadata", "net/minecraft/src/C_4526_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.resource.metadata.TextureResourceMetadata#READER
    [[maybe_unused]] static jobject get_field_READER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SERIALIZER", "field_5344", "READER", "f_119108_"), "Lgsj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.resource.metadata.TextureResourceMetadata#READER
    [[maybe_unused]] static void set_field_READER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SERIALIZER", "field_5344", "READER", "f_119108_"), "Lgsj;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.resource.metadata.TextureResourceMetadata#field_32980
    [[maybe_unused]] static jboolean get_field_field_32980() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_BLUR", "field_32980", "field_32980", "f_174870_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.resource.metadata.TextureResourceMetadata#field_32980
    [[maybe_unused]] static void set_field_field_32980(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_BLUR", "field_32980", "field_32980", "f_174870_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.resource.metadata.TextureResourceMetadata#field_32981
    [[maybe_unused]] static jboolean get_field_field_32981() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT_CLAMP", "field_32981", "field_32981", "f_174871_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.resource.metadata.TextureResourceMetadata#field_32981
    [[maybe_unused]] static void set_field_field_32981(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT_CLAMP", "field_32981", "field_32981", "f_174871_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.metadata.TextureResourceMetadata#blur
    static jboolean get_field_blur(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "blur", "field_5346", "blur", "f_119109_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.metadata.TextureResourceMetadata#blur
    static void set_field_blur(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "blur", "field_5346", "blur", "f_119109_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.metadata.TextureResourceMetadata#clamp
    static jboolean get_field_clamp(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "clamp", "field_5345", "clamp", "f_119110_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.metadata.TextureResourceMetadata#clamp
    static void set_field_clamp(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "clamp", "field_5345", "clamp", "f_119110_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_shouldBlur() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isBlur", "method_4696", "shouldBlur", "m_119115_"), "()Z");
    }

    static jboolean shouldBlur(const jobject& obj) {
                
       const auto methodID = methodID_shouldBlur();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldClamp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isClamp", "method_4697", "shouldClamp", "m_119116_"), "()Z");
    }

    static jboolean shouldClamp(const jobject& obj) {
                
       const auto methodID = methodID_shouldClamp();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RESOURCE_METADATA_TEXTURERESOURCEMETADATA_HPP