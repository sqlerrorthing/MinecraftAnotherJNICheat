// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RESOURCE_METADATA_ANIMATIONRESOURCEMETADATA_HPP
#define NET_MINECRAFT_CLIENT_RESOURCE_METADATA_ANIMATIONRESOURCEMETADATA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.resource.metadata.AnimationResourceMetadata
 * Remapped: grw
 */
namespace AnimationResourceMetadata {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("grw", "net/minecraft/client/resources/metadata/animation/AnimationMetadataSection", "net/minecraft/class_1079", "net/minecraft/client/resource/metadata/AnimationResourceMetadata", "net/minecraft/src/C_4518_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.resource.metadata.AnimationResourceMetadata#READER
    [[maybe_unused]] static jobject get_field_READER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SERIALIZER", "field_5337", "READER", "f_119011_"), "Lgrx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.resource.metadata.AnimationResourceMetadata#READER
    [[maybe_unused]] static void set_field_READER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SERIALIZER", "field_5337", "READER", "f_119011_"), "Lgrx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.resource.metadata.AnimationResourceMetadata#KEY
    [[maybe_unused]] static jobject get_field_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SECTION_NAME", "field_32974", "KEY", "f_174858_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.resource.metadata.AnimationResourceMetadata#KEY
    [[maybe_unused]] static void set_field_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SECTION_NAME", "field_32974", "KEY", "f_174858_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.resource.metadata.AnimationResourceMetadata#EMPTY_FRAME_TIME
    [[maybe_unused]] static jint get_field_EMPTY_FRAME_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT_FRAME_TIME", "field_32975", "EMPTY_FRAME_TIME", "f_174859_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.resource.metadata.AnimationResourceMetadata#EMPTY_FRAME_TIME
    [[maybe_unused]] static void set_field_EMPTY_FRAME_TIME(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT_FRAME_TIME", "field_32975", "EMPTY_FRAME_TIME", "f_174859_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.resource.metadata.AnimationResourceMetadata#UNDEFINED
    [[maybe_unused]] static jint get_field_UNDEFINED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "UNKNOWN_SIZE", "field_32976", "UNDEFINED", "f_174860_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.resource.metadata.AnimationResourceMetadata#UNDEFINED
    [[maybe_unused]] static void set_field_UNDEFINED(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "UNKNOWN_SIZE", "field_32976", "UNDEFINED", "f_174860_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.resource.metadata.AnimationResourceMetadata#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "EMPTY", "field_21768", "EMPTY", "f_119012_"), "Lgrw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.resource.metadata.AnimationResourceMetadata#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "EMPTY", "field_21768", "EMPTY", "f_119012_"), "Lgrw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.metadata.AnimationResourceMetadata#frames
    static jobject get_field_frames(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "frames", "field_5339", "frames", "f_119013_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.metadata.AnimationResourceMetadata#frames
    static void set_field_frames(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "frames", "field_5339", "frames", "f_119013_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.metadata.AnimationResourceMetadata#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "frameWidth", "field_5338", "width", "f_119014_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.metadata.AnimationResourceMetadata#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "frameWidth", "field_5338", "width", "f_119014_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.metadata.AnimationResourceMetadata#height
    static jint get_field_height(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "frameHeight", "field_5336", "height", "f_119015_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.metadata.AnimationResourceMetadata#height
    static void set_field_height(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "frameHeight", "field_5336", "height", "f_119015_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.metadata.AnimationResourceMetadata#defaultFrameTime
    static jint get_field_defaultFrameTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "defaultFrameTime", "field_5334", "defaultFrameTime", "f_119016_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.metadata.AnimationResourceMetadata#defaultFrameTime
    static void set_field_defaultFrameTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "defaultFrameTime", "field_5334", "defaultFrameTime", "f_119016_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.metadata.AnimationResourceMetadata#interpolate
    static jboolean get_field_interpolate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "interpolatedFrames", "field_5335", "interpolate", "f_119017_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.metadata.AnimationResourceMetadata#interpolate
    static void set_field_interpolate(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "interpolatedFrames", "field_5335", "interpolate", "f_119017_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateFrameSize", "method_24143", "getSize", "m_245821_"), "(II)Lgry;");
    }

    static jobject getSize(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_getSize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getDefaultFrameTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDefaultFrameTime", "method_4684", "getDefaultFrameTime", "m_119030_"), "()I");
    }

    static jint getDefaultFrameTime(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultFrameTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldInterpolate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isInterpolatedFrames", "method_4685", "shouldInterpolate", "m_119036_"), "()Z");
    }

    static jboolean shouldInterpolate(const jobject& obj) {
                
       const auto methodID = methodID_shouldInterpolate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_forEachFrame() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forEachFrame", "method_33460", "forEachFrame", "m_174861_"), "(Lgrw$a;)V");
    }

    static void forEachFrame(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEachFrame();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RESOURCE_METADATA_ANIMATIONRESOURCEMETADATA_HPP