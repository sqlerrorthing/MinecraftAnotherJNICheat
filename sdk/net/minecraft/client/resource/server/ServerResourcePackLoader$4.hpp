// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKLOADER$4_HPP
#define NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKLOADER$4_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.resource.server.ServerResourcePackLoader$4
 * Remapped: gtc$4
 */
namespace ServerResourcePackLoader$4 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gtc$4", "net/minecraft/client/resources/server/DownloadedPackSource$4", "net/minecraft/class_1066$4", "net/minecraft/client/resource/server/ServerResourcePackLoader$4", "net/minecraft/src/C_302037_$C_302170_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader$4#MAX_BYTES
    [[maybe_unused]] static jint get_field_MAX_BYTES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "MAX_PACK_SIZE_BYTES", "field_47614", "MAX_BYTES", "f_302329_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader$4#MAX_BYTES
    [[maybe_unused]] static void set_field_MAX_BYTES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "MAX_PACK_SIZE_BYTES", "field_47614", "MAX_BYTES", "f_302329_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader$4#SHA1
    [[maybe_unused]] static jobject get_field_SHA1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CACHE_HASHING_FUNCTION", "field_47615", "SHA1", "f_303022_"), "Lcom/google/common/hash/HashFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader$4#SHA1
    [[maybe_unused]] static void set_field_SHA1(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CACHE_HASHING_FUNCTION", "field_47615", "SHA1", "f_303022_"), "Lcom/google/common/hash/HashFunction;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getHeaders() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createDownloadHeaders", "method_55545", "getHeaders", "m_307287_"), "()Ljava/util/Map;");
    }

    static jobject getHeaders(const jobject& obj) {
                
       const auto methodID = methodID_getHeaders();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_enqueue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "download", "method_55546", "enqueue", "m_305313_"), "(Ljava/util/Map;Ljava/util/function/Consumer;)V");
    }

    static void enqueue(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_enqueue();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKLOADER$4_HPP