// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKLOADER$5_HPP
#define NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKLOADER$5_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.resource.server.ServerResourcePackLoader$5
 * Remapped: gtc$5
 */
namespace ServerResourcePackLoader$5 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gtc$5", "net/minecraft/client/resources/server/DownloadedPackSource$5", "net/minecraft/class_1066$5", "net/minecraft/client/resource/server/ServerResourcePackLoader$5", "net/minecraft/src/C_302037_$C_302136_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader$5#currentlyRunning
    static jboolean get_field_currentlyRunning(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "scheduledInMainExecutor", "field_47618", "currentlyRunning", "f_302430_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader$5#currentlyRunning
    static void set_field_currentlyRunning(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "scheduledInMainExecutor", "field_47618", "currentlyRunning", "f_302430_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader$5#shouldKeepRunning
    static jboolean get_field_shouldKeepRunning(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "hasUpdates", "field_47619", "shouldKeepRunning", "f_303443_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader$5#shouldKeepRunning
    static void set_field_shouldKeepRunning(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "hasUpdates", "field_47619", "shouldKeepRunning", "f_303443_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("run", "run", "", "", "run"), "()V");
    }

    static void run(const jobject& obj) {
                
       const auto methodID = methodID_run();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_runOnExecutor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "runAllUpdates", "method_55547", "runOnExecutor", "m_305126_"), "()V");
    }

    static void runOnExecutor(const jobject& obj) {
                
       const auto methodID = methodID_runOnExecutor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKLOADER$5_HPP