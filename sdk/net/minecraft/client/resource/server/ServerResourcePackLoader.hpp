// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKLOADER_HPP
#define NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKLOADER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.resource.server.ServerResourcePackLoader
 * Remapped: gtc
 */
namespace ServerResourcePackLoader {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gtc", "net/minecraft/client/resources/server/DownloadedPackSource", "net/minecraft/class_1066", "net/minecraft/client/resource/server/ServerResourcePackLoader", "net/minecraft/src/C_302037_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#SERVER_NAME_TEXT
    [[maybe_unused]] static jobject get_field_SERVER_NAME_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SERVER_NAME", "field_40562", "SERVER_NAME_TEXT", "f_303751_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#SERVER_NAME_TEXT
    [[maybe_unused]] static void set_field_SERVER_NAME_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SERVER_NAME", "field_40562", "SERVER_NAME_TEXT", "f_303751_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#SHA1_PATTERN
    [[maybe_unused]] static jobject get_field_SHA1_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SHA1", "field_5296", "SHA1_PATTERN", "f_303252_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#SHA1_PATTERN
    [[maybe_unused]] static void set_field_SHA1_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SHA1", "field_5296", "SHA1_PATTERN", "f_303252_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.resource.server.ServerResourcePackLoader#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOGGER", "field_5298", "LOGGER", "f_302532_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.resource.server.ServerResourcePackLoader#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOGGER", "field_5298", "LOGGER", "f_302532_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#NOOP_PROVIDER
    [[maybe_unused]] static jobject get_field_NOOP_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "EMPTY_SOURCE", "field_47593", "NOOP_PROVIDER", "f_302583_"), "Latr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#NOOP_PROVIDER
    [[maybe_unused]] static void set_field_NOOP_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "EMPTY_SOURCE", "field_47593", "NOOP_PROVIDER", "f_302583_"), "Latr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#POSITION
    [[maybe_unused]] static jobject get_field_POSITION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DOWNLOADED_PACK_SELECTION", "field_49134", "POSITION", "f_314007_"), "Lasr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#POSITION
    [[maybe_unused]] static void set_field_POSITION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DOWNLOADED_PACK_SELECTION", "field_49134", "POSITION", "f_314007_"), "Lasr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#DEBUG_PACK_STATE_CHANGE_CALLBACK
    [[maybe_unused]] static jobject get_field_DEBUG_PACK_STATE_CHANGE_CALLBACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "LOG_ONLY_FEEDBACK", "field_47594", "DEBUG_PACK_STATE_CHANGE_CALLBACK", "f_303352_"), "Lgte;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#DEBUG_PACK_STATE_CHANGE_CALLBACK
    [[maybe_unused]] static void set_field_DEBUG_PACK_STATE_CHANGE_CALLBACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "LOG_ONLY_FEEDBACK", "field_47594", "DEBUG_PACK_STATE_CHANGE_CALLBACK", "f_303352_"), "Lgte;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.client.resource.server.ServerResourcePackLoader#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "minecraft", "field_47595", "client", "f_302229_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.resource.server.ServerResourcePackLoader#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "minecraft", "field_47595", "client", "f_302229_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader#packProvider
    static jobject get_field_packProvider(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "packSource", "field_47596", "packProvider", "f_302893_"), "Latr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#packProvider
    static void set_field_packProvider(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "packSource", "field_47596", "packProvider", "f_302893_"), "Latr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader#reloadContext
    static jobject get_field_reloadContext(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "pendingReload", "field_47597", "reloadContext", "f_302526_"), "Lgtf$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#reloadContext
    static void set_field_reloadContext(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "pendingReload", "field_47597", "reloadContext", "f_302526_"), "Lgtf$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.resource.server.ServerResourcePackLoader#manager
    static jobject get_field_manager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "manager", "field_47598", "manager", "f_302848_"), "Lgtg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.resource.server.ServerResourcePackLoader#manager
    static void set_field_manager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "manager", "field_47598", "manager", "f_302848_"), "Lgtg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader#downloader
    static jobject get_field_downloader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "downloadQueue", "field_47599", "downloader", "f_303020_"), "Lasl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#downloader
    static void set_field_downloader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "downloadQueue", "field_47599", "downloader", "f_303020_"), "Lasl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader#packSource
    static jobject get_field_packSource(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "packType", "field_47600", "packSource", "f_303185_"), "Latq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#packSource
    static void set_field_packSource(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "packType", "field_47600", "packSource", "f_303185_"), "Latq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.resource.server.ServerResourcePackLoader#packStateChangeCallback
    static jobject get_field_packStateChangeCallback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "packFeedback", "field_47601", "packStateChangeCallback", "f_303843_"), "Lgte;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.resource.server.ServerResourcePackLoader#packStateChangeCallback
    static void set_field_packStateChangeCallback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "packFeedback", "field_47601", "packStateChangeCallback", "f_303843_"), "Lgte;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader#packIndex
    static jint get_field_packIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "packIdSerialNumber", "field_47690", "packIndex", "f_303014_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader#packIndex
    static void set_field_packIndex(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "packIdSerialNumber", "field_47690", "packIndex", "f_303014_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_createListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createDownloadNotifier", "method_55515", "createListener", "m_305402_"), "(I)Layf$a;");
    }

    static jobject createListener(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_createListener();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createDownloadQueuer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createDownloader", "method_55516", "createDownloadQueuer", "m_304744_"), "(Lasl;Ljava/util/concurrent/Executor;Lfhb;Ljava/net/Proxy;)Lgtd;");
    }

    static jobject createDownloadQueuer(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_createDownloadQueuer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createPackChangeCallback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createUpdateScheduler", "method_55525", "createPackChangeCallback", "m_305401_"), "(Ljava/util/concurrent/Executor;)Ljava/lang/Runnable;");
    }

    static jobject createPackChangeCallback(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createPackChangeCallback();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getReloadScheduler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "createReloadConfig", "method_55542", "getReloadScheduler", "m_307112_"), "()Lgtf;");
    }

    static jobject getReloadScheduler(const jobject& obj) {
                
       const auto methodID = methodID_getReloadScheduler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toProfiles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadRequestedPacks", "method_55519", "toProfiles", "m_305771_"), "(Ljava/util/List;)Ljava/util/List;");
    }

    static jobject toProfiles(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toProfiles();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPassthroughPackProvider() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createRepositorySource", "method_55514", "getPassthroughPackProvider", "m_307233_"), "()Latr;");
    }

    static jobject getPassthroughPackProvider(const jobject& obj) {
                
       const auto methodID = methodID_getPassthroughPackProvider();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPackProvider() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "configureSource", "method_55531", "getPackProvider", "m_305020_"), "(Ljava/util/List;)Latr;");
    }

    static jobject getPackProvider(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getPackProvider();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_reload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startReload", "method_55517", "reload", "m_304661_"), "(Lgtf$a;)V");
    }

    static void reload(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_reload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onReloadFailure() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onRecovery", "method_55530", "onReloadFailure", "m_306800_"), "()V");
    }

    static void onReloadFailure(const jobject& obj) {
                
       const auto methodID = methodID_onReloadFailure();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onForcedReloadFailure() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "onRecoveryFailure", "method_55535", "onForcedReloadFailure", "m_307354_"), "()V");
    }

    static void onForcedReloadFailure(const jobject& obj) {
                
       const auto methodID = methodID_onForcedReloadFailure();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onReloadSuccess() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "onReloadSuccess", "method_55536", "onReloadSuccess", "m_306059_"), "()V");
    }

    static void onReloadSuccess(const jobject& obj) {
                
       const auto methodID = methodID_onReloadSuccess();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_toHashCode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tryParseSha1Hash", "method_55518", "toHashCode", "m_305140_"), "(Ljava/lang/String;)Lcom/google/common/hash/HashCode;");
    }

    static jobject toHashCode(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toHashCode();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addResourcePack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pushPack", "method_55523", "addResourcePack", "m_304637_"), "(Ljava/util/UUID;Ljava/net/URL;Ljava/lang/String;)V");
    }

    static void addResourcePack(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_addResourcePack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__addResourcePack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pushLocalPack", "method_55524", "addResourcePack", "m_306353_"), "(Ljava/util/UUID;Ljava/nio/file/Path;)V");
    }

    static void _addResourcePack(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__addResourcePack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "popPack", "method_55520", "remove", "m_306043_"), "(Ljava/util/UUID;)V");
    }

    static void remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "popAll", "method_55537", "removeAll", "m_304654_"), "()V");
    }

    static void removeAll(const jobject& obj) {
                
       const auto methodID = methodID_removeAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStateChangeCallback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createPackResponseSender", "method_55527", "getStateChangeCallback", "m_307197_"), "(Lvt;)Lgte;");
    }

    static jobject getStateChangeCallback(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getStateChangeCallback();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "configureForServerControl", "method_55528", "init", "m_305368_"), "(Lvt;Lgtg$c;)V");
    }

    static void init(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_initWorldPack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "configureForLocalWorld", "method_55538", "initWorldPack", "m_306738_"), "()V");
    }

    static void initWorldPack(const jobject& obj) {
                
       const auto methodID = methodID_initWorldPack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_acceptAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "allowServerPacks", "method_55539", "acceptAll", "m_307345_"), "()V");
    }

    static void acceptAll(const jobject& obj) {
                
       const auto methodID = methodID_acceptAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_declineAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "rejectServerPacks", "method_55540", "declineAll", "m_306322_"), "()V");
    }

    static void declineAll(const jobject& obj) {
                
       const auto methodID = methodID_declineAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPackLoadFuture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "waitForPackFeedback", "method_55532", "getPackLoadFuture", "m_305490_"), "(Ljava/util/UUID;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject getPackLoadFuture(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPackLoadFuture();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "cleanupAfterDisconnect", "method_55541", "clear", "m_306775_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKLOADER_HPP