// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKMANAGER_HPP
#define NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.resource.server.ServerResourcePackManager
 * Remapped: gtg
 */
namespace ServerResourcePackManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gtg", "net/minecraft/client/resources/server/ServerPackManager", "net/minecraft/class_9044", "net/minecraft/client/resource/server/ServerResourcePackManager", "net/minecraft/src/C_302187_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackManager#queuer
    static jobject get_field_queuer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "downloader", "field_47629", "queuer", "f_302295_"), "Lgtd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackManager#queuer
    static void set_field_queuer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "downloader", "field_47629", "queuer", "f_302295_"), "Lgtd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.resource.server.ServerResourcePackManager#stateChangeCallback
    static jobject get_field_stateChangeCallback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "packLoadFeedback", "field_47630", "stateChangeCallback", "f_303189_"), "Lgte;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.resource.server.ServerResourcePackManager#stateChangeCallback
    static void set_field_stateChangeCallback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "packLoadFeedback", "field_47630", "stateChangeCallback", "f_303189_"), "Lgte;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackManager#reloadScheduler
    static jobject get_field_reloadScheduler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "reloadConfig", "field_47631", "reloadScheduler", "f_302993_"), "Lgtf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackManager#reloadScheduler
    static void set_field_reloadScheduler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "reloadConfig", "field_47631", "reloadScheduler", "f_302993_"), "Lgtf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackManager#packChangeCallback
    static jobject get_field_packChangeCallback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "updateRequest", "field_47632", "packChangeCallback", "f_302694_"), "Ljava/lang/Runnable;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackManager#packChangeCallback
    static void set_field_packChangeCallback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "updateRequest", "field_47632", "packChangeCallback", "f_302694_"), "Ljava/lang/Runnable;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackManager#acceptanceStatus
    static jobject get_field_acceptanceStatus(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "packPromptStatus", "field_47633", "acceptanceStatus", "f_303279_"), "Lgtg$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackManager#acceptanceStatus
    static void set_field_acceptanceStatus(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "packPromptStatus", "field_47633", "acceptanceStatus", "f_303279_"), "Lgtg$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.resource.server.ServerResourcePackManager#packs
    static jobject get_field_packs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "packs", "field_47634", "packs", "f_302451_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.resource.server.ServerResourcePackManager#packs
    static void set_field_packs(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "packs", "field_47634", "packs", "f_302451_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_onPackChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "registerForUpdate", "method_55567", "onPackChanged", "m_307110_"), "()V");
    }

    static void onPackChanged(const jobject& obj) {
                
       const auto methodID = methodID_onPackChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_markReplaced() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "markExistingPacksAsRemoved", "method_55562", "markReplaced", "m_307975_"), "(Ljava/util/UUID;)V");
    }

    static void markReplaced(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_markReplaced();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addResourcePack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pushPack", "method_55558", "addResourcePack", "m_307356_"), "(Ljava/util/UUID;Ljava/net/URL;Lcom/google/common/hash/HashCode;)V");
    }

    static void addResourcePack(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_addResourcePack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__addResourcePack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pushLocalPack", "method_55559", "addResourcePack", "m_306969_"), "(Ljava/util/UUID;Ljava/nio/file/Path;)V");
    }

    static void _addResourcePack(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__addResourcePack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onAdd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pushNewPack", "method_55557", "onAdd", "m_305562_"), "(Ljava/util/UUID;Lgtg$e;)V");
    }

    static void onAdd(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onAdd();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_accept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "acceptPack", "method_55553", "accept", "m_305809_"), "(Lgtg$e;)V");
    }

    static void accept(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_accept();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "findPackInfo", "method_55564", "get", "m_307563_"), "(Ljava/util/UUID;)Lgtg$e;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "popPack", "method_55556", "remove", "m_307735_"), "(Ljava/util/UUID;)V");
    }

    static void remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "popAll", "method_55552", "removeAll", "m_304731_"), "()V");
    }

    static void removeAll(const jobject& obj) {
                
       const auto methodID = methodID_removeAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_acceptAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "allowServerPacks", "method_55560", "acceptAll", "m_306539_"), "()V");
    }

    static void acceptAll(const jobject& obj) {
                
       const auto methodID = methodID_acceptAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_declineAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "rejectServerPacks", "method_55563", "declineAll", "m_305870_"), "()V");
    }

    static void declineAll(const jobject& obj) {
                
       const auto methodID = methodID_declineAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_resetAcceptanceStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "resetPromptStatus", "method_55565", "resetAcceptanceStatus", "m_305384_"), "()V");
    }

    static void resetAcceptanceStatus(const jobject& obj) {
                
       const auto methodID = methodID_resetAcceptanceStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "tick", "method_55566", "update", "m_307766_"), "()V");
    }

    static void update(const jobject& obj) {
                
       const auto methodID = methodID_update();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeInactivePacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "cleanupRemovedPacks", "method_55568", "removeInactivePacks", "m_307551_"), "()V");
    }

    static void removeInactivePacks(const jobject& obj) {
                
       const auto methodID = methodID_removeInactivePacks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onDownload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onDownload", "method_55554", "onDownload", "m_307666_"), "(Ljava/util/Collection;Lasl$b;)V");
    }

    static void onDownload(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onDownload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_enqueueDownloads() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "updateDownloads", "method_55569", "enqueueDownloads", "m_305887_"), "()Z");
    }

    static jboolean enqueueDownloads(const jobject& obj) {
                
       const auto methodID = methodID_enqueueDownloads();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_applyDownloadedPacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "triggerReloadIfNeeded", "method_55570", "applyDownloadedPacks", "m_307425_"), "()V");
    }

    static void applyDownloadedPacks(const jobject& obj) {
                
       const auto methodID = methodID_applyDownloadedPacks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKMANAGER_HPP