// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKLOADER$3_HPP
#define NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKLOADER$3_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.resource.server.ServerResourcePackLoader$3
 * Remapped: gtc$3
 */
namespace ServerResourcePackLoader$3 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gtc$3", "net/minecraft/client/resources/server/DownloadedPackSource$3", "net/minecraft/class_1066$3", "net/minecraft/client/resource/server/ServerResourcePackLoader$3", "net/minecraft/src/C_302037_$C_302167_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader$3#toastType
    static jobject get_field_toastType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "toastId", "field_47604", "toastType", "f_303200_"), "Lfku$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader$3#toastType
    static void set_field_toastType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "toastId", "field_47604", "toastType", "f_303200_"), "Lfku$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader$3#toastTitle
    static jobject get_field_toastTitle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "title", "field_47605", "toastTitle", "f_302398_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader$3#toastTitle
    static void set_field_toastTitle(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "title", "field_47605", "toastTitle", "f_302398_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader$3#toastDescription
    static jobject get_field_toastDescription(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "message", "field_47606", "toastDescription", "f_302645_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader$3#toastDescription
    static void set_field_toastDescription(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "message", "field_47606", "toastDescription", "f_302645_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader$3#current
    static jint get_field_current(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "count", "field_47607", "current", "f_303786_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader$3#current
    static void set_field_current(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "count", "field_47607", "current", "f_303786_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader$3#failureCount
    static jint get_field_failureCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "failCount", "field_47692", "failureCount", "f_302215_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader$3#failureCount
    static void set_field_failureCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "failCount", "field_47692", "failureCount", "f_302215_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.server.ServerResourcePackLoader$3#contentLength
    static jobject get_field_contentLength(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "totalBytes", "field_47608", "contentLength", "f_302237_"), "Ljava/util/OptionalLong;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.server.ServerResourcePackLoader$3#contentLength
    static void set_field_contentLength(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "totalBytes", "field_47608", "contentLength", "f_302237_"), "Ljava/util/OptionalLong;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_showToast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updateToast", "method_55544", "showToast", "m_306973_"), "()V");
    }

    static void showToast(const jobject& obj) {
                
       const auto methodID = methodID_showToast();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_showProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updateProgress", "method_55543", "showProgress", "m_307167_"), "(J)V");
    }

    static void showProgress(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_showProgress();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "requestStart", "method_55497", "onStart", "m_305410_"), "()V");
    }

    static void onStart(const jobject& obj) {
                
       const auto methodID = methodID_onStart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onContentLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "downloadStart", "method_55499", "onContentLength", "m_306050_"), "(Ljava/util/OptionalLong;)V");
    }

    static void onContentLength(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onContentLength();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "downloadedBytes", "method_55498", "onProgress", "m_305341_"), "(J)V");
    }

    static void onProgress(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_onProgress();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onFinish() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "requestFinished", "method_55500", "onFinish", "m_304846_"), "(Z)V");
    }

    static void onFinish(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_onFinish();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RESOURCE_SERVER_SERVERRESOURCEPACKLOADER$3_HPP