// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_RESOURCE_PERIODICNOTIFICATIONMANAGER_HPP
#define NET_MINECRAFT_CLIENT_RESOURCE_PERIODICNOTIFICATIONMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.resource.PeriodicNotificationManager
 * Remapped: fgu
 */
namespace PeriodicNotificationManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fgu", "net/minecraft/client/PeriodicNotificationManager", "net/minecraft/class_6877", "net/minecraft/client/resource/PeriodicNotificationManager", "net/minecraft/src/C_203225_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.resource.PeriodicNotificationManager#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_36435", "CODEC", "f_205285_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.PeriodicNotificationManager#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_36435", "CODEC", "f_205285_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.resource.PeriodicNotificationManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_36436", "LOGGER", "f_205286_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.PeriodicNotificationManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_36436", "LOGGER", "f_205286_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.PeriodicNotificationManager#id
    static jobject get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "notifications", "field_36437", "id", "f_205287_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.PeriodicNotificationManager#id
    static void set_field_id(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "notifications", "field_36437", "id", "f_205287_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.PeriodicNotificationManager#countryPredicate
    static jobject get_field_countryPredicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "selector", "field_36438", "countryPredicate", "f_205288_"), "Lit/unimi/dsi/fastutil/objects/Object2BooleanFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.PeriodicNotificationManager#countryPredicate
    static void set_field_countryPredicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "selector", "field_36438", "countryPredicate", "f_205288_"), "Lit/unimi/dsi/fastutil/objects/Object2BooleanFunction;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.PeriodicNotificationManager#timer
    static jobject get_field_timer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "timer", "field_36439", "timer", "f_205289_"), "Ljava/util/Timer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.PeriodicNotificationManager#timer
    static void set_field_timer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "timer", "field_36439", "timer", "f_205289_"), "Ljava/util/Timer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.resource.PeriodicNotificationManager#task
    static jobject get_field_task(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "notificationTask", "field_36440", "task", "f_205290_"), "Lfgu$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.resource.PeriodicNotificationManager#task
    static void set_field_task(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "notificationTask", "field_36440", "task", "f_205290_"), "Lfgu$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_prepare() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "prepare", "method_40192", "prepare", "m_5944_"), "(Laue;Lbnf;)Ljava/util/Map;");
    }

    static jobject prepare(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_prepare();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_40198", "apply", "m_5787_"), "(Ljava/util/Map;Laue;Lbnf;)V");
    }

    static void apply(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_apply();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_cancelTimer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stopTimer", "method_40190", "cancelTimer", "m_205295_"), "()V");
    }

    static void cancelTimer(const jobject& obj) {
                
       const auto methodID = methodID_cancelTimer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPeriod() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateOptimalPeriod", "method_40196", "getPeriod", "m_205312_"), "(Ljava/util/List;J)J");
    }

    static jlong getPeriod(const jobject& obj, const jobject& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_getPeriod();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getMinDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateInitialDelay", "method_40195", "getMinDelay", "m_205310_"), "(Ljava/util/List;)J");
    }

    static jlong getMinDelay(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getMinDelay();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_RESOURCE_PERIODICNOTIFICATIONMANAGER_HPP