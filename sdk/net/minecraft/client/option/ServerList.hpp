// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_OPTION_SERVERLIST_HPP
#define NET_MINECRAFT_CLIENT_OPTION_SERVERLIST_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.option.ServerList
 * Remapped: fzu
 */
namespace ServerList {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fzu", "net/minecraft/client/multiplayer/ServerList", "net/minecraft/class_641", "net/minecraft/client/option/ServerList", "net/minecraft/src/C_3913_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.option.ServerList#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_3751", "LOGGER", "f_105425_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.ServerList#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_3751", "LOGGER", "f_105425_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.ServerList#IO_EXECUTOR
    [[maybe_unused]] static jobject get_field_IO_EXECUTOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "IO_MAILBOX", "field_39360", "IO_EXECUTOR", "f_233836_"), "Lbpk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.ServerList#IO_EXECUTOR
    [[maybe_unused]] static void set_field_IO_EXECUTOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "IO_MAILBOX", "field_39360", "IO_EXECUTOR", "f_233836_"), "Lbpk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.ServerList#MAX_HIDDEN_ENTRIES
    [[maybe_unused]] static jint get_field_MAX_HIDDEN_ENTRIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_HIDDEN_SERVERS", "field_39437", "MAX_HIDDEN_ENTRIES", "f_233837_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.ServerList#MAX_HIDDEN_ENTRIES
    [[maybe_unused]] static void set_field_MAX_HIDDEN_ENTRIES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_HIDDEN_SERVERS", "field_39437", "MAX_HIDDEN_ENTRIES", "f_233837_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.ServerList#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "minecraft", "field_3750", "client", "f_105426_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.ServerList#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "minecraft", "field_3750", "client", "f_105426_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.ServerList#servers
    static jobject get_field_servers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "serverList", "field_3749", "servers", "f_105427_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.ServerList#servers
    static void set_field_servers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "serverList", "field_3749", "servers", "f_105427_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.ServerList#hiddenServers
    static jobject get_field_hiddenServers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "hiddenServerList", "field_39438", "hiddenServers", "f_233838_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.ServerList#hiddenServers
    static void set_field_hiddenServers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "hiddenServerList", "field_39438", "hiddenServers", "f_233838_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_loadFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_2981", "loadFile", "m_105431_"), "()V");
    }

    static void loadFile(const jobject& obj) {
                
       const auto methodID = methodID_loadFile();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_saveFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "save", "method_2987", "saveFile", "m_105442_"), "()V");
    }

    static void saveFile(const jobject& obj) {
                
       const auto methodID = methodID_saveFile();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_2982", "get", "m_105432_"), "(I)Lfzt;");
    }

    static jobject get(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_44295", "get", "m_233845_"), "(Ljava/lang/String;)Lfzt;");
    }

    static jobject _get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tryUnhide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "unhide", "method_44296", "tryUnhide", "m_233847_"), "(Ljava/lang/String;)Lfzt;");
    }

    static jobject tryUnhide(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryUnhide();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "remove", "method_2983", "remove", "m_105440_"), "(Lfzt;)V");
    }

    static void remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_2988", "add", "m_233842_"), "(Lfzt;Z)V");
    }

    static void add(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_size() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "size", "method_2984", "size", "m_105445_"), "()I");
    }

    static jint size(const jobject& obj) {
                
       const auto methodID = methodID_size();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_swapEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "swap", "method_2985", "swapEntries", "m_105434_"), "(II)V");
    }

    static void swapEntries(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_swapEntries();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "replace", "method_2980", "set", "m_105437_"), "(ILfzt;)V");
    }

    static void set(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_set();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_replace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "set", "method_44294", "replace", "m_233839_"), "(Lfzt;Ljava/util/List;)Z");
    }

    static jboolean replace(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_replace();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateServerListEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "saveSingleServer", "method_2986", "updateServerListEntry", "m_105446_"), "(Lfzt;)V");
    }

    static void updateServerListEntry(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_updateServerListEntry();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_OPTION_SERVERLIST_HPP