// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_OPTION_HOTBARSTORAGEENTRY_HPP
#define NET_MINECRAFT_CLIENT_OPTION_HOTBARSTORAGEENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.option.HotbarStorageEntry
 * Remapped: ged
 */
namespace HotbarStorageEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ged", "net/minecraft/client/player/inventory/Hotbar", "net/minecraft/class_748", "net/minecraft/client/option/HotbarStorageEntry", "net/minecraft/src/C_4107_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.option.HotbarStorageEntry#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_48943", "LOGGER", "f_315832_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.HotbarStorageEntry#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_48943", "LOGGER", "f_315832_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.HotbarStorageEntry#HOTBAR_SIZE
    [[maybe_unused]] static jint get_field_HOTBAR_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SIZE", "field_48944", "HOTBAR_SIZE", "f_317035_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.HotbarStorageEntry#HOTBAR_SIZE
    [[maybe_unused]] static void set_field_HOTBAR_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SIZE", "field_48944", "HOTBAR_SIZE", "f_317035_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.option.HotbarStorageEntry#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_48942", "CODEC", "f_316903_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.option.HotbarStorageEntry#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_48942", "CODEC", "f_316903_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.HotbarStorageEntry#NBT_OPS
    [[maybe_unused]] static jobject get_field_NBT_OPS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_OPS", "field_48945", "NBT_OPS", "f_314316_"), "Lcom/mojang/serialization/DynamicOps;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.HotbarStorageEntry#NBT_OPS
    [[maybe_unused]] static void set_field_NBT_OPS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_OPS", "field_48945", "NBT_OPS", "f_314316_"), "Lcom/mojang/serialization/DynamicOps;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.HotbarStorageEntry#EMPTY_STACK
    [[maybe_unused]] static jobject get_field_EMPTY_STACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "EMPTY_STACK", "field_48946", "EMPTY_STACK", "f_315257_"), "Lcom/mojang/serialization/Dynamic;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.HotbarStorageEntry#EMPTY_STACK
    [[maybe_unused]] static void set_field_EMPTY_STACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "EMPTY_STACK", "field_48946", "EMPTY_STACK", "f_315257_"), "Lcom/mojang/serialization/Dynamic;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.HotbarStorageEntry#stacks
    static jobject get_field_stacks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "items", "field_48947", "stacks", "f_108780_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.HotbarStorageEntry#stacks
    static void set_field_stacks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "items", "field_48947", "stacks", "f_108780_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_deserialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_56839", "deserialize", "m_318641_"), "(Ljo$a;)Ljava/util/List;");
    }

    static jobject deserialize(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_deserialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_serialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "storeFrom", "method_56836", "serialize", "m_324536_"), "(Lcmw;Lka;)V");
    }

    static void serialize(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_serialize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isEmpty", "method_56835", "isEmpty", "m_108788_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isEmpty", "method_56837", "isEmpty", "m_323331_"), "(Lcom/mojang/serialization/Dynamic;)Z");
    }

    static jboolean _isEmpty(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__isEmpty();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_OPTION_HOTBARSTORAGEENTRY_HPP