// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_OPTION_SIMPLEOPTION$DOUBLESLIDERCALLBACKS_HPP
#define NET_MINECRAFT_CLIENT_OPTION_SIMPLEOPTION$DOUBLESLIDERCALLBACKS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.option.SimpleOption$DoubleSliderCallbacks
 * Remapped: fgr$m
 */
namespace SimpleOption$DoubleSliderCallbacks {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fgr$m", "net/minecraft/client/OptionInstance$UnitDouble", "net/minecraft/class_7172$class_7177", "net/minecraft/client/option/SimpleOption$DoubleSliderCallbacks", "net/minecraft/src/C_213334_$C_213350_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.option.SimpleOption$DoubleSliderCallbacks#INSTANCE
    [[maybe_unused]] static jobject get_field_INSTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INSTANCE", "field_37875", "INSTANCE", "INSTANCE"), "Lfgr$m;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.option.SimpleOption$DoubleSliderCallbacks#INSTANCE
    [[maybe_unused]] static void set_field_INSTANCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INSTANCE", "field_37875", "INSTANCE", "INSTANCE"), "Lfgr$m;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lfgr$m;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lfgr$m;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "validateValue", "method_41770", "validate", "m_214064_"), "(Ljava/lang/Double;)Ljava/util/Optional;");
    }

    static jobject validate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_validate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toSliderProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "toSliderValue", "method_41771", "toSliderProgress", "m_213640_"), "(Ljava/lang/Double;)D");
    }

    static jdouble toSliderProgress(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toSliderProgress();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fromSliderValue", "method_41768", "toValue", "m_213729_"), "(D)Ljava/lang/Double;");
    }

    static jobject toValue(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_toValue();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withModifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "xmap", "method_42420", "withModifier", "m_231750_"), "(Ljava/util/function/DoubleFunction;Ljava/util/function/ToDoubleFunction;)Lfgr$k;");
    }

    static jobject withModifier(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_withModifier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_codec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "codec", "comp_675", "codec", "m_213664_"), "()Lcom/mojang/serialization/Codec;");
    }

    static jobject codec(const jobject& obj) {
                
       const auto methodID = methodID_codec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_OPTION_SIMPLEOPTION$DOUBLESLIDERCALLBACKS_HPP