// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_OPTION_GAMEOPTIONS_HPP
#define NET_MINECRAFT_CLIENT_OPTION_GAMEOPTIONS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.option.GameOptions
 * Remapped: fgs
 */
namespace GameOptions {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fgs", "net/minecraft/client/Options", "net/minecraft/class_315", "net/minecraft/client/option/GameOptions", "net/minecraft/src/C_3401_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.client.option.GameOptions#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "LOGGER", "field_1834", "LOGGER", "f_92077_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.option.GameOptions#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "LOGGER", "field_1834", "LOGGER", "f_92077_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.client.option.GameOptions#GSON
    [[maybe_unused]] static jobject get_field_GSON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "GSON", "field_1823", "GSON", "f_92078_"), "Lcom/google/gson/Gson;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.option.GameOptions#GSON
    [[maybe_unused]] static void set_field_GSON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "GSON", "field_1823", "GSON", "f_92078_"), "Lcom/google/gson/Gson;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#STRING_LIST_TYPE
    [[maybe_unused]] static jobject get_field_STRING_LIST_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "LIST_OF_STRINGS_TYPE", "field_1859", "STRING_LIST_TYPE", "f_290931_"), "Lcom/google/gson/reflect/TypeToken;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#STRING_LIST_TYPE
    [[maybe_unused]] static void set_field_STRING_LIST_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "LIST_OF_STRINGS_TYPE", "field_1859", "STRING_LIST_TYPE", "f_290931_"), "Lcom/google/gson/reflect/TypeToken;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.option.GameOptions#field_32149
    [[maybe_unused]] static jint get_field_field_32149() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RENDER_DISTANCE_TINY", "field_32149", "field_32149", "f_168406_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#field_32149
    [[maybe_unused]] static void set_field_field_32149(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RENDER_DISTANCE_TINY", "field_32149", "field_32149", "f_168406_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.option.GameOptions#field_32150
    [[maybe_unused]] static jint get_field_field_32150() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RENDER_DISTANCE_SHORT", "field_32150", "field_32150", "f_168407_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#field_32150
    [[maybe_unused]] static void set_field_field_32150(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RENDER_DISTANCE_SHORT", "field_32150", "field_32150", "f_168407_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.option.GameOptions#field_32152
    [[maybe_unused]] static jint get_field_field_32152() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RENDER_DISTANCE_NORMAL", "field_32152", "field_32152", "f_168409_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#field_32152
    [[maybe_unused]] static void set_field_field_32152(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RENDER_DISTANCE_NORMAL", "field_32152", "field_32152", "f_168409_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.option.GameOptions#field_32153
    [[maybe_unused]] static jint get_field_field_32153() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RENDER_DISTANCE_FAR", "field_32153", "field_32153", "f_168410_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#field_32153
    [[maybe_unused]] static void set_field_field_32153(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RENDER_DISTANCE_FAR", "field_32153", "field_32153", "f_168410_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.option.GameOptions#field_32154
    [[maybe_unused]] static jint get_field_field_32154() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "RENDER_DISTANCE_REALLY_FAR", "field_32154", "field_32154", "f_168411_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#field_32154
    [[maybe_unused]] static void set_field_field_32154(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "RENDER_DISTANCE_REALLY_FAR", "field_32154", "field_32154", "f_168411_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.option.GameOptions#field_32155
    [[maybe_unused]] static jint get_field_field_32155() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RENDER_DISTANCE_EXTREME", "field_32155", "field_32155", "f_168412_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#field_32155
    [[maybe_unused]] static void set_field_field_32155(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RENDER_DISTANCE_EXTREME", "field_32155", "field_32155", "f_168412_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#COLON_SPLITTER
    [[maybe_unused]] static jobject get_field_COLON_SPLITTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "OPTION_SPLITTER", "field_1853", "COLON_SPLITTER", "f_92107_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#COLON_SPLITTER
    [[maybe_unused]] static void set_field_COLON_SPLITTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "OPTION_SPLITTER", "field_1853", "COLON_SPLITTER", "f_92107_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.option.GameOptions#EMPTY_STRING
    [[maybe_unused]] static jobject get_field_EMPTY_STRING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DEFAULT_SOUND_DEVICE", "field_34785", "EMPTY_STRING", "f_193766_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#EMPTY_STRING
    [[maybe_unused]] static void set_field_EMPTY_STRING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DEFAULT_SOUND_DEVICE", "field_34785", "EMPTY_STRING", "f_193766_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#DARK_MOJANG_STUDIOS_BACKGROUND_COLOR_TOOLTIP
    [[maybe_unused]] static jobject get_field_DARK_MOJANG_STUDIOS_BACKGROUND_COLOR_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "ACCESSIBILITY_TOOLTIP_DARK_MOJANG_BACKGROUND", "field_37878", "DARK_MOJANG_STUDIOS_BACKGROUND_COLOR_TOOLTIP", "f_231789_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#DARK_MOJANG_STUDIOS_BACKGROUND_COLOR_TOOLTIP
    [[maybe_unused]] static void set_field_DARK_MOJANG_STUDIOS_BACKGROUND_COLOR_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "ACCESSIBILITY_TOOLTIP_DARK_MOJANG_BACKGROUND", "field_37878", "DARK_MOJANG_STUDIOS_BACKGROUND_COLOR_TOOLTIP", "f_231789_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#monochromeLogo
    static jobject get_field_monochromeLogo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "darkMojangStudiosBackground", "field_32156", "monochromeLogo", "f_168413_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#monochromeLogo
    static void set_field_monochromeLogo(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "darkMojangStudiosBackground", "field_32156", "monochromeLogo", "f_168413_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#HIDE_LIGHTNING_FLASHES_TOOLTIP
    [[maybe_unused]] static jobject get_field_HIDE_LIGHTNING_FLASHES_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "ACCESSIBILITY_TOOLTIP_HIDE_LIGHTNING_FLASHES", "field_37879", "HIDE_LIGHTNING_FLASHES_TOOLTIP", "f_231790_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#HIDE_LIGHTNING_FLASHES_TOOLTIP
    [[maybe_unused]] static void set_field_HIDE_LIGHTNING_FLASHES_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "ACCESSIBILITY_TOOLTIP_HIDE_LIGHTNING_FLASHES", "field_37879", "HIDE_LIGHTNING_FLASHES_TOOLTIP", "f_231790_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#hideLightningFlashes
    static jobject get_field_hideLightningFlashes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("am", "hideLightningFlash", "field_34786", "hideLightningFlashes", "f_231791_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#hideLightningFlashes
    static void set_field_hideLightningFlashes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("am", "hideLightningFlash", "field_34786", "hideLightningFlashes", "f_231791_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#HIDE_SPLASH_TEXTS_TOOLTIP
    [[maybe_unused]] static jobject get_field_HIDE_SPLASH_TEXTS_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "ACCESSIBILITY_TOOLTIP_HIDE_SPLASH_TEXTS", "field_46854", "HIDE_SPLASH_TEXTS_TOOLTIP", "f_302626_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#HIDE_SPLASH_TEXTS_TOOLTIP
    [[maybe_unused]] static void set_field_HIDE_SPLASH_TEXTS_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "ACCESSIBILITY_TOOLTIP_HIDE_SPLASH_TEXTS", "field_46854", "HIDE_SPLASH_TEXTS_TOOLTIP", "f_302626_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#hideSplashTexts
    static jobject get_field_hideSplashTexts(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ao", "hideSplashTexts", "field_46855", "hideSplashTexts", "f_302346_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#hideSplashTexts
    static void set_field_hideSplashTexts(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ao", "hideSplashTexts", "field_46855", "hideSplashTexts", "f_302346_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#mouseSensitivity
    static jobject get_field_mouseSensitivity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ap", "sensitivity", "field_1843", "mouseSensitivity", "f_92053_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#mouseSensitivity
    static void set_field_mouseSensitivity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ap", "sensitivity", "field_1843", "mouseSensitivity", "f_92053_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#viewDistance
    static jobject get_field_viewDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aq", "renderDistance", "field_1870", "viewDistance", "f_92106_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#viewDistance
    static void set_field_viewDistance(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aq", "renderDistance", "field_1870", "viewDistance", "f_92106_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#simulationDistance
    static jobject get_field_simulationDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ar", "simulationDistance", "field_34959", "simulationDistance", "f_193768_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#simulationDistance
    static void set_field_simulationDistance(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ar", "simulationDistance", "field_34959", "simulationDistance", "f_193768_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#serverViewDistance
    static jint get_field_serverViewDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("as", "serverRenderDistance", "field_34784", "serverViewDistance", "f_193765_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#serverViewDistance
    static void set_field_serverViewDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("as", "serverRenderDistance", "field_34784", "serverViewDistance", "f_193765_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#entityDistanceScaling
    static jobject get_field_entityDistanceScaling(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("at", "entityDistanceScaling", "field_24214", "entityDistanceScaling", "f_92112_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#entityDistanceScaling
    static void set_field_entityDistanceScaling(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("at", "entityDistanceScaling", "field_24214", "entityDistanceScaling", "f_92112_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.client.option.GameOptions#MAX_FRAMERATE
    [[maybe_unused]] static jint get_field_MAX_FRAMERATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "UNLIMITED_FRAMERATE_CUTOFF", "field_38300", "MAX_FRAMERATE", "f_231811_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#MAX_FRAMERATE
    [[maybe_unused]] static void set_field_MAX_FRAMERATE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "UNLIMITED_FRAMERATE_CUTOFF", "field_38300", "MAX_FRAMERATE", "f_231811_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#maxFps
    static jobject get_field_maxFps(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("au", "framerateLimit", "field_1909", "maxFps", "f_92113_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#maxFps
    static void set_field_maxFps(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("au", "framerateLimit", "field_1909", "maxFps", "f_92113_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#cloudRenderMode
    static jobject get_field_cloudRenderMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("av", "cloudStatus", "field_1814", "cloudRenderMode", "f_231792_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#cloudRenderMode
    static void set_field_cloudRenderMode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("av", "cloudStatus", "field_1814", "cloudRenderMode", "f_231792_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#FAST_GRAPHICS_TOOLTIP
    [[maybe_unused]] static jobject get_field_FAST_GRAPHICS_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "GRAPHICS_TOOLTIP_FAST", "field_38289", "FAST_GRAPHICS_TOOLTIP", "f_231793_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#FAST_GRAPHICS_TOOLTIP
    [[maybe_unused]] static void set_field_FAST_GRAPHICS_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "GRAPHICS_TOOLTIP_FAST", "field_38289", "FAST_GRAPHICS_TOOLTIP", "f_231793_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#FABULOUS_GRAPHICS_TOOLTIP
    [[maybe_unused]] static jobject get_field_FABULOUS_GRAPHICS_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "GRAPHICS_TOOLTIP_FABULOUS", "field_38286", "FABULOUS_GRAPHICS_TOOLTIP", "f_231794_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#FABULOUS_GRAPHICS_TOOLTIP
    [[maybe_unused]] static void set_field_FABULOUS_GRAPHICS_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "GRAPHICS_TOOLTIP_FABULOUS", "field_38286", "FABULOUS_GRAPHICS_TOOLTIP", "f_231794_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#FANCY_GRAPHICS_TOOLTIP
    [[maybe_unused]] static jobject get_field_FANCY_GRAPHICS_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "GRAPHICS_TOOLTIP_FANCY", "field_38287", "FANCY_GRAPHICS_TOOLTIP", "f_231785_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#FANCY_GRAPHICS_TOOLTIP
    [[maybe_unused]] static void set_field_FANCY_GRAPHICS_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "GRAPHICS_TOOLTIP_FANCY", "field_38287", "FANCY_GRAPHICS_TOOLTIP", "f_231785_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#graphicsMode
    static jobject get_field_graphicsMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("az", "graphicsMode", "field_25444", "graphicsMode", "f_92115_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#graphicsMode
    static void set_field_graphicsMode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("az", "graphicsMode", "field_25444", "graphicsMode", "f_92115_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#ao
    static jobject get_field_ao(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aA", "ambientOcclusion", "field_1841", "ao", "f_92116_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#ao
    static void set_field_ao(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aA", "ambientOcclusion", "field_1841", "ao", "f_92116_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#NONE_CHUNK_BUILDER_MODE_TOOLTIP
    [[maybe_unused]] static jobject get_field_NONE_CHUNK_BUILDER_MODE_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "PRIORITIZE_CHUNK_TOOLTIP_NONE", "field_37880", "NONE_CHUNK_BUILDER_MODE_TOOLTIP", "f_231786_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#NONE_CHUNK_BUILDER_MODE_TOOLTIP
    [[maybe_unused]] static void set_field_NONE_CHUNK_BUILDER_MODE_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "PRIORITIZE_CHUNK_TOOLTIP_NONE", "field_37880", "NONE_CHUNK_BUILDER_MODE_TOOLTIP", "f_231786_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#BY_PLAYER_CHUNK_BUILDER_MODE_TOOLTIP
    [[maybe_unused]] static jobject get_field_BY_PLAYER_CHUNK_BUILDER_MODE_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "PRIORITIZE_CHUNK_TOOLTIP_PLAYER_AFFECTED", "field_37881", "BY_PLAYER_CHUNK_BUILDER_MODE_TOOLTIP", "f_231787_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#BY_PLAYER_CHUNK_BUILDER_MODE_TOOLTIP
    [[maybe_unused]] static void set_field_BY_PLAYER_CHUNK_BUILDER_MODE_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "PRIORITIZE_CHUNK_TOOLTIP_PLAYER_AFFECTED", "field_37881", "BY_PLAYER_CHUNK_BUILDER_MODE_TOOLTIP", "f_231787_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#NEARBY_CHUNK_BUILDER_MODE_TOOLTIP
    [[maybe_unused]] static jobject get_field_NEARBY_CHUNK_BUILDER_MODE_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "PRIORITIZE_CHUNK_TOOLTIP_NEARBY", "field_37882", "NEARBY_CHUNK_BUILDER_MODE_TOOLTIP", "f_231788_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#NEARBY_CHUNK_BUILDER_MODE_TOOLTIP
    [[maybe_unused]] static void set_field_NEARBY_CHUNK_BUILDER_MODE_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "PRIORITIZE_CHUNK_TOOLTIP_NEARBY", "field_37882", "NEARBY_CHUNK_BUILDER_MODE_TOOLTIP", "f_231788_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#chunkBuilderMode
    static jobject get_field_chunkBuilderMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aE", "prioritizeChunkUpdates", "field_34787", "chunkBuilderMode", "f_193769_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#chunkBuilderMode
    static void set_field_chunkBuilderMode(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aE", "prioritizeChunkUpdates", "field_34787", "chunkBuilderMode", "f_193769_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#resourcePacks
    static jobject get_field_resourcePacks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "resourcePacks", "field_1887", "resourcePacks", "f_92117_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#resourcePacks
    static void set_field_resourcePacks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "resourcePacks", "field_1887", "resourcePacks", "f_92117_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#incompatibleResourcePacks
    static jobject get_field_incompatibleResourcePacks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "incompatibleResourcePacks", "field_1846", "incompatibleResourcePacks", "f_92118_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#incompatibleResourcePacks
    static void set_field_incompatibleResourcePacks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "incompatibleResourcePacks", "field_1846", "incompatibleResourcePacks", "f_92118_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#chatVisibility
    static jobject get_field_chatVisibility(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aF", "chatVisibility", "field_1877", "chatVisibility", "f_92119_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#chatVisibility
    static void set_field_chatVisibility(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aF", "chatVisibility", "field_1877", "chatVisibility", "f_92119_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#chatOpacity
    static jobject get_field_chatOpacity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aG", "chatOpacity", "field_1820", "chatOpacity", "f_92120_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#chatOpacity
    static void set_field_chatOpacity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aG", "chatOpacity", "field_1820", "chatOpacity", "f_92120_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#chatLineSpacing
    static jobject get_field_chatLineSpacing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aH", "chatLineSpacing", "field_23932", "chatLineSpacing", "f_92121_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#chatLineSpacing
    static void set_field_chatLineSpacing(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aH", "chatLineSpacing", "field_23932", "chatLineSpacing", "f_92121_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#MENU_BACKGROUND_BLURRINESS_TOOLTIP
    [[maybe_unused]] static jobject get_field_MENU_BACKGROUND_BLURRINESS_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "MENU_BACKGROUND_BLURRINESS_TOOLTIP", "field_49474", "MENU_BACKGROUND_BLURRINESS_TOOLTIP", "f_315005_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#MENU_BACKGROUND_BLURRINESS_TOOLTIP
    [[maybe_unused]] static void set_field_MENU_BACKGROUND_BLURRINESS_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "MENU_BACKGROUND_BLURRINESS_TOOLTIP", "field_49474", "MENU_BACKGROUND_BLURRINESS_TOOLTIP", "f_315005_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#DEFAULT_MENU_BACKGROUND_BLURRINESS
    [[maybe_unused]] static jint get_field_DEFAULT_MENU_BACKGROUND_BLURRINESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "BLURRINESS_DEFAULT_VALUE", "field_49475", "DEFAULT_MENU_BACKGROUND_BLURRINESS", "f_315767_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#DEFAULT_MENU_BACKGROUND_BLURRINESS
    [[maybe_unused]] static void set_field_DEFAULT_MENU_BACKGROUND_BLURRINESS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "BLURRINESS_DEFAULT_VALUE", "field_49475", "DEFAULT_MENU_BACKGROUND_BLURRINESS", "f_315767_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#menuBackgroundBlurriness
    static jobject get_field_menuBackgroundBlurriness(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aK", "menuBackgroundBlurriness", "field_49476", "menuBackgroundBlurriness", "f_317010_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#menuBackgroundBlurriness
    static void set_field_menuBackgroundBlurriness(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aK", "menuBackgroundBlurriness", "field_49476", "menuBackgroundBlurriness", "f_317010_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#textBackgroundOpacity
    static jobject get_field_textBackgroundOpacity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aL", "textBackgroundOpacity", "field_18726", "textBackgroundOpacity", "f_92122_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#textBackgroundOpacity
    static void set_field_textBackgroundOpacity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aL", "textBackgroundOpacity", "field_18726", "textBackgroundOpacity", "f_92122_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#panoramaSpeed
    static jobject get_field_panoramaSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aM", "panoramaSpeed", "field_40382", "panoramaSpeed", "f_244402_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#panoramaSpeed
    static void set_field_panoramaSpeed(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aM", "panoramaSpeed", "field_40382", "panoramaSpeed", "f_244402_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#HIGH_CONTRAST_TOOLTIP
    [[maybe_unused]] static jobject get_field_HIGH_CONTRAST_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "ACCESSIBILITY_TOOLTIP_CONTRAST_MODE", "field_43043", "HIGH_CONTRAST_TOOLTIP", "f_273812_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#HIGH_CONTRAST_TOOLTIP
    [[maybe_unused]] static void set_field_HIGH_CONTRAST_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "ACCESSIBILITY_TOOLTIP_CONTRAST_MODE", "field_43043", "HIGH_CONTRAST_TOOLTIP", "f_273812_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#highContrast
    static jobject get_field_highContrast(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aO", "highContrast", "field_43044", "highContrast", "f_273910_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#highContrast
    static void set_field_highContrast(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aO", "highContrast", "field_43044", "highContrast", "f_273910_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#narratorHotkey
    static jobject get_field_narratorHotkey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aP", "narratorHotkey", "field_45987", "narratorHotkey", "f_290977_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#narratorHotkey
    static void set_field_narratorHotkey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aP", "narratorHotkey", "field_45987", "narratorHotkey", "f_290977_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#fullscreenResolution
    static jobject get_field_fullscreenResolution(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "fullscreenVideoModeString", "field_1828", "fullscreenResolution", "f_92123_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#fullscreenResolution
    static void set_field_fullscreenResolution(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "fullscreenVideoModeString", "field_1828", "fullscreenResolution", "f_92123_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#hideServerAddress
    static jboolean get_field_hideServerAddress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "hideServerAddress", "field_1815", "hideServerAddress", "f_92124_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#hideServerAddress
    static void set_field_hideServerAddress(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "hideServerAddress", "field_1815", "hideServerAddress", "f_92124_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#advancedItemTooltips
    static jboolean get_field_advancedItemTooltips(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "advancedItemTooltips", "field_1827", "advancedItemTooltips", "f_92125_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#advancedItemTooltips
    static void set_field_advancedItemTooltips(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "advancedItemTooltips", "field_1827", "advancedItemTooltips", "f_92125_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#pauseOnLostFocus
    static jboolean get_field_pauseOnLostFocus(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "pauseOnLostFocus", "field_1837", "pauseOnLostFocus", "f_92126_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#pauseOnLostFocus
    static void set_field_pauseOnLostFocus(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "pauseOnLostFocus", "field_1837", "pauseOnLostFocus", "f_92126_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#enabledPlayerModelParts
    static jobject get_field_enabledPlayerModelParts(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aQ", "modelParts", "field_1892", "enabledPlayerModelParts", "f_92108_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#enabledPlayerModelParts
    static void set_field_enabledPlayerModelParts(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aQ", "modelParts", "field_1892", "enabledPlayerModelParts", "f_92108_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#mainArm
    static jobject get_field_mainArm(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aR", "mainHand", "field_1829", "mainArm", "f_92127_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#mainArm
    static void set_field_mainArm(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aR", "mainHand", "field_1829", "mainArm", "f_92127_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#overrideWidth
    static jint get_field_overrideWidth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "overrideWidth", "field_1872", "overrideWidth", "f_92128_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#overrideWidth
    static void set_field_overrideWidth(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "overrideWidth", "field_1872", "overrideWidth", "f_92128_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#overrideHeight
    static jint get_field_overrideHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "overrideHeight", "field_1885", "overrideHeight", "f_92129_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#overrideHeight
    static void set_field_overrideHeight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "overrideHeight", "field_1885", "overrideHeight", "f_92129_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#chatScale
    static jobject get_field_chatScale(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aS", "chatScale", "field_1908", "chatScale", "f_92131_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#chatScale
    static void set_field_chatScale(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aS", "chatScale", "field_1908", "chatScale", "f_92131_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#chatWidth
    static jobject get_field_chatWidth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aT", "chatWidth", "field_1915", "chatWidth", "f_92132_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#chatWidth
    static void set_field_chatWidth(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aT", "chatWidth", "field_1915", "chatWidth", "f_92132_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#chatHeightUnfocused
    static jobject get_field_chatHeightUnfocused(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aU", "chatHeightUnfocused", "field_1825", "chatHeightUnfocused", "f_92133_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#chatHeightUnfocused
    static void set_field_chatHeightUnfocused(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aU", "chatHeightUnfocused", "field_1825", "chatHeightUnfocused", "f_92133_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#chatHeightFocused
    static jobject get_field_chatHeightFocused(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aV", "chatHeightFocused", "field_1838", "chatHeightFocused", "f_92134_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#chatHeightFocused
    static void set_field_chatHeightFocused(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aV", "chatHeightFocused", "field_1838", "chatHeightFocused", "f_92134_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#chatDelay
    static jobject get_field_chatDelay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aW", "chatDelay", "field_23933", "chatDelay", "f_92135_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#chatDelay
    static void set_field_chatDelay(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aW", "chatDelay", "field_23933", "chatDelay", "f_92135_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#NOTIFICATION_DISPLAY_TIME_TOOLTIP
    [[maybe_unused]] static jobject get_field_NOTIFICATION_DISPLAY_TIME_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "ACCESSIBILITY_TOOLTIP_NOTIFICATION_DISPLAY_TIME", "field_41783", "NOTIFICATION_DISPLAY_TIME_TOOLTIP", "f_263815_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#NOTIFICATION_DISPLAY_TIME_TOOLTIP
    [[maybe_unused]] static void set_field_NOTIFICATION_DISPLAY_TIME_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "ACCESSIBILITY_TOOLTIP_NOTIFICATION_DISPLAY_TIME", "field_41783", "NOTIFICATION_DISPLAY_TIME_TOOLTIP", "f_263815_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#notificationDisplayTime
    static jobject get_field_notificationDisplayTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aY", "notificationDisplayTime", "field_41784", "notificationDisplayTime", "f_263718_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#notificationDisplayTime
    static void set_field_notificationDisplayTime(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aY", "notificationDisplayTime", "field_41784", "notificationDisplayTime", "f_263718_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#mipmapLevels
    static jobject get_field_mipmapLevels(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aZ", "mipmapLevels", "field_1856", "mipmapLevels", "f_92027_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#mipmapLevels
    static void set_field_mipmapLevels(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aZ", "mipmapLevels", "field_1856", "mipmapLevels", "f_92027_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#useNativeTransport
    static jboolean get_field_useNativeTransport(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "useNativeTransport", "field_1876", "useNativeTransport", "f_92028_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#useNativeTransport
    static void set_field_useNativeTransport(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "useNativeTransport", "field_1876", "useNativeTransport", "f_92028_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#attackIndicator
    static jobject get_field_attackIndicator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ba", "attackIndicator", "field_1895", "attackIndicator", "f_92029_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#attackIndicator
    static void set_field_attackIndicator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ba", "attackIndicator", "field_1895", "attackIndicator", "f_92029_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#tutorialStep
    static jobject get_field_tutorialStep(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "tutorialStep", "field_1875", "tutorialStep", "f_92030_"), "Lgwk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#tutorialStep
    static void set_field_tutorialStep(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "tutorialStep", "field_1875", "tutorialStep", "f_92030_"), "Lgwk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#joinedFirstServer
    static jboolean get_field_joinedFirstServer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "joinedFirstServer", "field_26844", "joinedFirstServer", "f_92031_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#joinedFirstServer
    static void set_field_joinedFirstServer(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "joinedFirstServer", "field_26844", "joinedFirstServer", "f_92031_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#hideBundleTutorial
    static jboolean get_field_hideBundleTutorial(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "hideBundleTutorial", "field_28777", "hideBundleTutorial", "f_168405_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#hideBundleTutorial
    static void set_field_hideBundleTutorial(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "hideBundleTutorial", "field_28777", "hideBundleTutorial", "f_168405_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#biomeBlendRadius
    static jobject get_field_biomeBlendRadius(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bb", "biomeBlendRadius", "field_1878", "biomeBlendRadius", "f_92032_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#biomeBlendRadius
    static void set_field_biomeBlendRadius(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bb", "biomeBlendRadius", "field_1878", "biomeBlendRadius", "f_92032_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#mouseWheelSensitivity
    static jobject get_field_mouseWheelSensitivity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bc", "mouseWheelSensitivity", "field_1889", "mouseWheelSensitivity", "f_92033_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#mouseWheelSensitivity
    static void set_field_mouseWheelSensitivity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bc", "mouseWheelSensitivity", "field_1889", "mouseWheelSensitivity", "f_92033_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#rawMouseInput
    static jobject get_field_rawMouseInput(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bd", "rawMouseInput", "field_20308", "rawMouseInput", "f_92034_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#rawMouseInput
    static void set_field_rawMouseInput(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bd", "rawMouseInput", "field_20308", "rawMouseInput", "f_92034_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#glDebugVerbosity
    static jint get_field_glDebugVerbosity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "glDebugVerbosity", "field_1901", "glDebugVerbosity", "f_92035_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#glDebugVerbosity
    static void set_field_glDebugVerbosity(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "glDebugVerbosity", "field_1901", "glDebugVerbosity", "f_92035_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#autoJump
    static jobject get_field_autoJump(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("be", "autoJump", "field_1848", "autoJump", "f_92036_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#autoJump
    static void set_field_autoJump(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("be", "autoJump", "field_1848", "autoJump", "f_92036_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#operatorItemsTab
    static jobject get_field_operatorItemsTab(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bf", "operatorItemsTab", "field_41094", "operatorItemsTab", "f_256834_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#operatorItemsTab
    static void set_field_operatorItemsTab(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bf", "operatorItemsTab", "field_41094", "operatorItemsTab", "f_256834_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#autoSuggestions
    static jobject get_field_autoSuggestions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bg", "autoSuggestions", "field_1873", "autoSuggestions", "f_92037_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#autoSuggestions
    static void set_field_autoSuggestions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bg", "autoSuggestions", "field_1873", "autoSuggestions", "f_92037_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#chatColors
    static jobject get_field_chatColors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bh", "chatColors", "field_1900", "chatColors", "f_92038_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#chatColors
    static void set_field_chatColors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bh", "chatColors", "field_1900", "chatColors", "f_92038_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#chatLinks
    static jobject get_field_chatLinks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bi", "chatLinks", "field_1911", "chatLinks", "f_92039_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#chatLinks
    static void set_field_chatLinks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bi", "chatLinks", "field_1911", "chatLinks", "f_92039_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#chatLinksPrompt
    static jobject get_field_chatLinksPrompt(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bj", "chatLinksPrompt", "field_1817", "chatLinksPrompt", "f_92040_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#chatLinksPrompt
    static void set_field_chatLinksPrompt(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bj", "chatLinksPrompt", "field_1817", "chatLinksPrompt", "f_92040_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#enableVsync
    static jobject get_field_enableVsync(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bk", "enableVsync", "field_1884", "enableVsync", "f_92041_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#enableVsync
    static void set_field_enableVsync(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bk", "enableVsync", "field_1884", "enableVsync", "f_92041_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#entityShadows
    static jobject get_field_entityShadows(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bl", "entityShadows", "field_1888", "entityShadows", "f_92042_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#entityShadows
    static void set_field_entityShadows(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bl", "entityShadows", "field_1888", "entityShadows", "f_92042_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#forceUnicodeFont
    static jobject get_field_forceUnicodeFont(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bm", "forceUnicodeFont", "field_1819", "forceUnicodeFont", "f_92043_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#forceUnicodeFont
    static void set_field_forceUnicodeFont(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bm", "forceUnicodeFont", "field_1819", "forceUnicodeFont", "f_92043_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#japaneseGlyphVariants
    static jobject get_field_japaneseGlyphVariants(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bn", "japaneseGlyphVariants", "field_49105", "japaneseGlyphVariants", "f_314642_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#japaneseGlyphVariants
    static void set_field_japaneseGlyphVariants(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bn", "japaneseGlyphVariants", "field_49105", "japaneseGlyphVariants", "f_314642_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#invertYMouse
    static jobject get_field_invertYMouse(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bo", "invertYMouse", "field_1865", "invertYMouse", "f_92044_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#invertYMouse
    static void set_field_invertYMouse(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bo", "invertYMouse", "field_1865", "invertYMouse", "f_92044_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#discreteMouseScroll
    static jobject get_field_discreteMouseScroll(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bp", "discreteMouseScroll", "field_19244", "discreteMouseScroll", "f_92045_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#discreteMouseScroll
    static void set_field_discreteMouseScroll(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bp", "discreteMouseScroll", "field_19244", "discreteMouseScroll", "f_92045_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#REALMS_NOTIFICATIONS_TOOLTIP
    [[maybe_unused]] static jobject get_field_REALMS_NOTIFICATIONS_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "REALMS_NOTIFICATIONS_TOOLTIP", "field_52127", "REALMS_NOTIFICATIONS_TOOLTIP", "f_337252_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#REALMS_NOTIFICATIONS_TOOLTIP
    [[maybe_unused]] static void set_field_REALMS_NOTIFICATIONS_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "REALMS_NOTIFICATIONS_TOOLTIP", "field_52127", "REALMS_NOTIFICATIONS_TOOLTIP", "f_337252_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#realmsNotifications
    static jobject get_field_realmsNotifications(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("br", "realmsNotifications", "field_1830", "realmsNotifications", "f_92046_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#realmsNotifications
    static void set_field_realmsNotifications(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("br", "realmsNotifications", "field_1830", "realmsNotifications", "f_92046_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#ALLOW_SERVER_LISTING_TOOLTIP
    [[maybe_unused]] static jobject get_field_ALLOW_SERVER_LISTING_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "ALLOW_SERVER_LISTING_TOOLTIP", "field_38294", "ALLOW_SERVER_LISTING_TOOLTIP", "f_231804_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#ALLOW_SERVER_LISTING_TOOLTIP
    [[maybe_unused]] static void set_field_ALLOW_SERVER_LISTING_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "ALLOW_SERVER_LISTING_TOOLTIP", "field_38294", "ALLOW_SERVER_LISTING_TOOLTIP", "f_231804_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#allowServerListing
    static jobject get_field_allowServerListing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bt", "allowServerListing", "field_35637", "allowServerListing", "f_193762_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#allowServerListing
    static void set_field_allowServerListing(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bt", "allowServerListing", "field_35637", "allowServerListing", "f_193762_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#reducedDebugInfo
    static jobject get_field_reducedDebugInfo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bu", "reducedDebugInfo", "field_1910", "reducedDebugInfo", "f_92047_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#reducedDebugInfo
    static void set_field_reducedDebugInfo(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bu", "reducedDebugInfo", "field_1910", "reducedDebugInfo", "f_92047_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#soundVolumeLevels
    static jobject get_field_soundVolumeLevels(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bv", "soundSourceVolumes", "field_1916", "soundVolumeLevels", "f_244498_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#soundVolumeLevels
    static void set_field_soundVolumeLevels(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bv", "soundSourceVolumes", "field_1916", "soundVolumeLevels", "f_244498_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#showSubtitles
    static jobject get_field_showSubtitles(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bw", "showSubtitles", "field_1818", "showSubtitles", "f_92049_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#showSubtitles
    static void set_field_showSubtitles(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bw", "showSubtitles", "field_1818", "showSubtitles", "f_92049_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#DIRECTIONAL_AUDIO_ON_TOOLTIP
    [[maybe_unused]] static jobject get_field_DIRECTIONAL_AUDIO_ON_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "DIRECTIONAL_AUDIO_TOOLTIP_ON", "field_38295", "DIRECTIONAL_AUDIO_ON_TOOLTIP", "f_231805_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#DIRECTIONAL_AUDIO_ON_TOOLTIP
    [[maybe_unused]] static void set_field_DIRECTIONAL_AUDIO_ON_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "DIRECTIONAL_AUDIO_TOOLTIP_ON", "field_38295", "DIRECTIONAL_AUDIO_ON_TOOLTIP", "f_231805_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#DIRECTIONAL_AUDIO_OFF_TOOLTIP
    [[maybe_unused]] static jobject get_field_DIRECTIONAL_AUDIO_OFF_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("by", "DIRECTIONAL_AUDIO_TOOLTIP_OFF", "field_38296", "DIRECTIONAL_AUDIO_OFF_TOOLTIP", "f_231806_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#DIRECTIONAL_AUDIO_OFF_TOOLTIP
    [[maybe_unused]] static void set_field_DIRECTIONAL_AUDIO_OFF_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("by", "DIRECTIONAL_AUDIO_TOOLTIP_OFF", "field_38296", "DIRECTIONAL_AUDIO_OFF_TOOLTIP", "f_231806_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#directionalAudio
    static jobject get_field_directionalAudio(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bz", "directionalAudio", "field_37877", "directionalAudio", "f_231807_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#directionalAudio
    static void set_field_directionalAudio(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bz", "directionalAudio", "field_37877", "directionalAudio", "f_231807_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#backgroundForChatOnly
    static jobject get_field_backgroundForChatOnly(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bA", "backgroundForChatOnly", "field_18725", "backgroundForChatOnly", "f_92050_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#backgroundForChatOnly
    static void set_field_backgroundForChatOnly(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bA", "backgroundForChatOnly", "field_18725", "backgroundForChatOnly", "f_92050_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#touchscreen
    static jobject get_field_touchscreen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bB", "touchscreen", "field_1854", "touchscreen", "f_92051_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#touchscreen
    static void set_field_touchscreen(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bB", "touchscreen", "field_1854", "touchscreen", "f_92051_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#fullscreen
    static jobject get_field_fullscreen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bC", "fullscreen", "field_1857", "fullscreen", "f_92052_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#fullscreen
    static void set_field_fullscreen(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bC", "fullscreen", "field_1857", "fullscreen", "f_92052_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#bobView
    static jobject get_field_bobView(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bD", "bobView", "field_1891", "bobView", "f_92080_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#bobView
    static void set_field_bobView(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bD", "bobView", "field_1891", "bobView", "f_92080_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#TOGGLE_KEY_TEXT
    [[maybe_unused]] static jobject get_field_TOGGLE_KEY_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bE", "MOVEMENT_TOGGLE", "field_38297", "TOGGLE_KEY_TEXT", "f_231808_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#TOGGLE_KEY_TEXT
    [[maybe_unused]] static void set_field_TOGGLE_KEY_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bE", "MOVEMENT_TOGGLE", "field_38297", "TOGGLE_KEY_TEXT", "f_231808_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#HOLD_KEY_TEXT
    [[maybe_unused]] static jobject get_field_HOLD_KEY_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bF", "MOVEMENT_HOLD", "field_38298", "HOLD_KEY_TEXT", "f_231809_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#HOLD_KEY_TEXT
    [[maybe_unused]] static void set_field_HOLD_KEY_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bF", "MOVEMENT_HOLD", "field_38298", "HOLD_KEY_TEXT", "f_231809_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#sneakToggled
    static jobject get_field_sneakToggled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bG", "toggleCrouch", "field_21332", "sneakToggled", "f_92081_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#sneakToggled
    static void set_field_sneakToggled(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bG", "toggleCrouch", "field_21332", "sneakToggled", "f_92081_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#sprintToggled
    static jobject get_field_sprintToggled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bH", "toggleSprint", "field_21333", "sprintToggled", "f_92082_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#sprintToggled
    static void set_field_sprintToggled(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bH", "toggleSprint", "field_21333", "sprintToggled", "f_92082_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#skipMultiplayerWarning
    static jboolean get_field_skipMultiplayerWarning(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "skipMultiplayerWarning", "field_21840", "skipMultiplayerWarning", "f_92083_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#skipMultiplayerWarning
    static void set_field_skipMultiplayerWarning(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "skipMultiplayerWarning", "field_21840", "skipMultiplayerWarning", "f_92083_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#HIDE_MATCHED_NAMES_TOOLTIP
    [[maybe_unused]] static jobject get_field_HIDE_MATCHED_NAMES_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "CHAT_TOOLTIP_HIDE_MATCHED_NAMES", "field_38299", "HIDE_MATCHED_NAMES_TOOLTIP", "f_231810_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#HIDE_MATCHED_NAMES_TOOLTIP
    [[maybe_unused]] static void set_field_HIDE_MATCHED_NAMES_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "CHAT_TOOLTIP_HIDE_MATCHED_NAMES", "field_38299", "HIDE_MATCHED_NAMES_TOOLTIP", "f_231810_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#hideMatchedNames
    static jobject get_field_hideMatchedNames(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bJ", "hideMatchedNames", "field_26926", "hideMatchedNames", "f_92084_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#hideMatchedNames
    static void set_field_hideMatchedNames(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bJ", "hideMatchedNames", "field_26926", "hideMatchedNames", "f_92084_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#showAutosaveIndicator
    static jobject get_field_showAutosaveIndicator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bK", "showAutosaveIndicator", "field_35426", "showAutosaveIndicator", "f_193763_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#showAutosaveIndicator
    static void set_field_showAutosaveIndicator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bK", "showAutosaveIndicator", "field_35426", "showAutosaveIndicator", "f_193763_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#ONLY_SHOW_SECURE_CHAT_TOOLTIP
    [[maybe_unused]] static jobject get_field_ONLY_SHOW_SECURE_CHAT_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "CHAT_TOOLTIP_ONLY_SHOW_SECURE", "field_39320", "ONLY_SHOW_SECURE_CHAT_TOOLTIP", "f_231797_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#ONLY_SHOW_SECURE_CHAT_TOOLTIP
    [[maybe_unused]] static void set_field_ONLY_SHOW_SECURE_CHAT_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "CHAT_TOOLTIP_ONLY_SHOW_SECURE", "field_39320", "ONLY_SHOW_SECURE_CHAT_TOOLTIP", "f_231797_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#onlyShowSecureChat
    static jobject get_field_onlyShowSecureChat(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bM", "onlyShowSecureChat", "field_39321", "onlyShowSecureChat", "f_231798_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#onlyShowSecureChat
    static void set_field_onlyShowSecureChat(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bM", "onlyShowSecureChat", "field_39321", "onlyShowSecureChat", "f_231798_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#forwardKey
    static jobject get_field_forwardKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "keyUp", "field_1894", "forwardKey", "f_92085_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#forwardKey
    static void set_field_forwardKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "keyUp", "field_1894", "forwardKey", "f_92085_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#leftKey
    static jobject get_field_leftKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "keyLeft", "field_1913", "leftKey", "f_92086_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#leftKey
    static void set_field_leftKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "keyLeft", "field_1913", "leftKey", "f_92086_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#backKey
    static jobject get_field_backKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "keyDown", "field_1881", "backKey", "f_92087_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#backKey
    static void set_field_backKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "keyDown", "field_1881", "backKey", "f_92087_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#rightKey
    static jobject get_field_rightKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "keyRight", "field_1849", "rightKey", "f_92088_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#rightKey
    static void set_field_rightKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "keyRight", "field_1849", "rightKey", "f_92088_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#jumpKey
    static jobject get_field_jumpKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "keyJump", "field_1903", "jumpKey", "f_92089_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#jumpKey
    static void set_field_jumpKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "keyJump", "field_1903", "jumpKey", "f_92089_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#sneakKey
    static jobject get_field_sneakKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "keyShift", "field_1832", "sneakKey", "f_92090_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#sneakKey
    static void set_field_sneakKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "keyShift", "field_1832", "sneakKey", "f_92090_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#sprintKey
    static jobject get_field_sprintKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "keySprint", "field_1867", "sprintKey", "f_92091_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#sprintKey
    static void set_field_sprintKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "keySprint", "field_1867", "sprintKey", "f_92091_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#inventoryKey
    static jobject get_field_inventoryKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "keyInventory", "field_1822", "inventoryKey", "f_92092_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#inventoryKey
    static void set_field_inventoryKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "keyInventory", "field_1822", "inventoryKey", "f_92092_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#swapHandsKey
    static jobject get_field_swapHandsKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "keySwapOffhand", "field_1831", "swapHandsKey", "f_92093_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#swapHandsKey
    static void set_field_swapHandsKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "keySwapOffhand", "field_1831", "swapHandsKey", "f_92093_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#dropKey
    static jobject get_field_dropKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "keyDrop", "field_1869", "dropKey", "f_92094_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#dropKey
    static void set_field_dropKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "keyDrop", "field_1869", "dropKey", "f_92094_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#useKey
    static jobject get_field_useKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "keyUse", "field_1904", "useKey", "f_92095_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#useKey
    static void set_field_useKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("G", "keyUse", "field_1904", "useKey", "f_92095_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#attackKey
    static jobject get_field_attackKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "keyAttack", "field_1886", "attackKey", "f_92096_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#attackKey
    static void set_field_attackKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("H", "keyAttack", "field_1886", "attackKey", "f_92096_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#pickItemKey
    static jobject get_field_pickItemKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "keyPickItem", "field_1871", "pickItemKey", "f_92097_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#pickItemKey
    static void set_field_pickItemKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("I", "keyPickItem", "field_1871", "pickItemKey", "f_92097_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#chatKey
    static jobject get_field_chatKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "keyChat", "field_1890", "chatKey", "f_92098_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#chatKey
    static void set_field_chatKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "keyChat", "field_1890", "chatKey", "f_92098_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#playerListKey
    static jobject get_field_playerListKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "keyPlayerList", "field_1907", "playerListKey", "f_92099_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#playerListKey
    static void set_field_playerListKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "keyPlayerList", "field_1907", "playerListKey", "f_92099_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#commandKey
    static jobject get_field_commandKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "keyCommand", "field_1845", "commandKey", "f_92100_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#commandKey
    static void set_field_commandKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "keyCommand", "field_1845", "commandKey", "f_92100_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#socialInteractionsKey
    static jobject get_field_socialInteractionsKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "keySocialInteractions", "field_26845", "socialInteractionsKey", "f_92101_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#socialInteractionsKey
    static void set_field_socialInteractionsKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "keySocialInteractions", "field_26845", "socialInteractionsKey", "f_92101_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#screenshotKey
    static jobject get_field_screenshotKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "keyScreenshot", "field_1835", "screenshotKey", "f_92102_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#screenshotKey
    static void set_field_screenshotKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "keyScreenshot", "field_1835", "screenshotKey", "f_92102_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#togglePerspectiveKey
    static jobject get_field_togglePerspectiveKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "keyTogglePerspective", "field_1824", "togglePerspectiveKey", "f_92103_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#togglePerspectiveKey
    static void set_field_togglePerspectiveKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "keyTogglePerspective", "field_1824", "togglePerspectiveKey", "f_92103_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#smoothCameraKey
    static jobject get_field_smoothCameraKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "keySmoothCamera", "field_1816", "smoothCameraKey", "f_92104_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#smoothCameraKey
    static void set_field_smoothCameraKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "keySmoothCamera", "field_1816", "smoothCameraKey", "f_92104_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#fullscreenKey
    static jobject get_field_fullscreenKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "keyFullscreen", "field_1836", "fullscreenKey", "f_92105_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#fullscreenKey
    static void set_field_fullscreenKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "keyFullscreen", "field_1836", "fullscreenKey", "f_92105_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#spectatorOutlinesKey
    static jobject get_field_spectatorOutlinesKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "keySpectatorOutlines", "field_1906", "spectatorOutlinesKey", "f_92054_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#spectatorOutlinesKey
    static void set_field_spectatorOutlinesKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "keySpectatorOutlines", "field_1906", "spectatorOutlinesKey", "f_92054_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#advancementsKey
    static jobject get_field_advancementsKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "keyAdvancements", "field_1844", "advancementsKey", "f_92055_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#advancementsKey
    static void set_field_advancementsKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "keyAdvancements", "field_1844", "advancementsKey", "f_92055_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#hotbarKeys
    static jobject get_field_hotbarKeys(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "keyHotbarSlots", "field_1852", "hotbarKeys", "f_92056_"), "[Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#hotbarKeys
    static void set_field_hotbarKeys(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "keyHotbarSlots", "field_1852", "hotbarKeys", "f_92056_"), "[Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#saveToolbarActivatorKey
    static jobject get_field_saveToolbarActivatorKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "keySaveHotbarActivator", "field_1879", "saveToolbarActivatorKey", "f_92057_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#saveToolbarActivatorKey
    static void set_field_saveToolbarActivatorKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "keySaveHotbarActivator", "field_1879", "saveToolbarActivatorKey", "f_92057_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#loadToolbarActivatorKey
    static jobject get_field_loadToolbarActivatorKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "keyLoadHotbarActivator", "field_1874", "loadToolbarActivatorKey", "f_92058_"), "Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#loadToolbarActivatorKey
    static void set_field_loadToolbarActivatorKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "keyLoadHotbarActivator", "field_1874", "loadToolbarActivatorKey", "f_92058_"), "Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#allKeys
    static jobject get_field_allKeys(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "keyMappings", "field_1839", "allKeys", "f_92059_"), "[Lfgm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#allKeys
    static void set_field_allKeys(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "keyMappings", "field_1839", "allKeys", "f_92059_"), "[Lfgm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.option.GameOptions#client
    static jobject get_field_client(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "minecraft", "field_1863", "client", "f_92060_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.option.GameOptions#client
    static void set_field_client(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "minecraft", "field_1863", "client", "f_92060_"), "Lfgo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#optionsFile
    static jobject get_field_optionsFile(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bN", "optionsFile", "field_1897", "optionsFile", "f_92110_"), "Ljava/io/File;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#optionsFile
    static void set_field_optionsFile(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bN", "optionsFile", "field_1897", "optionsFile", "f_92110_"), "Ljava/io/File;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#hudHidden
    static jboolean get_field_hudHidden(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "hideGui", "field_1842", "hudHidden", "f_92062_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#hudHidden
    static void set_field_hudHidden(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "hideGui", "field_1842", "hudHidden", "f_92062_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#perspective
    static jobject get_field_perspective(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bO", "cameraType", "field_26677", "perspective", "f_92111_"), "Lffz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#perspective
    static void set_field_perspective(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bO", "cameraType", "field_26677", "perspective", "f_92111_"), "Lffz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#lastServer
    static jobject get_field_lastServer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "lastMpIp", "field_1864", "lastServer", "f_92066_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#lastServer
    static void set_field_lastServer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "lastMpIp", "field_1864", "lastServer", "f_92066_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#smoothCameraEnabled
    static jboolean get_field_smoothCameraEnabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "smoothCamera", "field_1914", "smoothCameraEnabled", "f_92067_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#smoothCameraEnabled
    static void set_field_smoothCameraEnabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "smoothCamera", "field_1914", "smoothCameraEnabled", "f_92067_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#fov
    static jobject get_field_fov(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bP", "fov", "field_1826", "fov", "f_92068_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#fov
    static void set_field_fov(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bP", "fov", "field_1826", "fov", "f_92068_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#TELEMETRY_TOOLTIP
    [[maybe_unused]] static jobject get_field_TELEMETRY_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bQ", "TELEMETRY_TOOLTIP", "field_41335", "TELEMETRY_TOOLTIP", "f_260656_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#TELEMETRY_TOOLTIP
    [[maybe_unused]] static void set_field_TELEMETRY_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bQ", "TELEMETRY_TOOLTIP", "field_41335", "TELEMETRY_TOOLTIP", "f_260656_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#telemetryOptInExtra
    static jobject get_field_telemetryOptInExtra(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bR", "telemetryOptInExtra", "field_41336", "telemetryOptInExtra", "f_260461_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#telemetryOptInExtra
    static void set_field_telemetryOptInExtra(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bR", "telemetryOptInExtra", "field_41336", "telemetryOptInExtra", "f_260461_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#SCREEN_EFFECT_SCALE_TOOLTIP
    [[maybe_unused]] static jobject get_field_SCREEN_EFFECT_SCALE_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bS", "ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT", "field_38290", "SCREEN_EFFECT_SCALE_TOOLTIP", "f_231799_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#SCREEN_EFFECT_SCALE_TOOLTIP
    [[maybe_unused]] static void set_field_SCREEN_EFFECT_SCALE_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bS", "ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT", "field_38290", "SCREEN_EFFECT_SCALE_TOOLTIP", "f_231799_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#distortionEffectScale
    static jobject get_field_distortionEffectScale(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bT", "screenEffectScale", "field_26675", "distortionEffectScale", "f_92069_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#distortionEffectScale
    static void set_field_distortionEffectScale(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bT", "screenEffectScale", "field_26675", "distortionEffectScale", "f_92069_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#FOV_EFFECT_SCALE_TOOLTIP
    [[maybe_unused]] static jobject get_field_FOV_EFFECT_SCALE_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bU", "ACCESSIBILITY_TOOLTIP_FOV_EFFECT", "field_38291", "FOV_EFFECT_SCALE_TOOLTIP", "f_231800_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#FOV_EFFECT_SCALE_TOOLTIP
    [[maybe_unused]] static void set_field_FOV_EFFECT_SCALE_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bU", "ACCESSIBILITY_TOOLTIP_FOV_EFFECT", "field_38291", "FOV_EFFECT_SCALE_TOOLTIP", "f_231800_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#fovEffectScale
    static jobject get_field_fovEffectScale(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bV", "fovEffectScale", "field_26676", "fovEffectScale", "f_92070_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#fovEffectScale
    static void set_field_fovEffectScale(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bV", "fovEffectScale", "field_26676", "fovEffectScale", "f_92070_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#DARKNESS_EFFECT_SCALE_TOOLTIP
    [[maybe_unused]] static jobject get_field_DARKNESS_EFFECT_SCALE_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bW", "ACCESSIBILITY_TOOLTIP_DARKNESS_EFFECT", "field_38292", "DARKNESS_EFFECT_SCALE_TOOLTIP", "f_231801_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#DARKNESS_EFFECT_SCALE_TOOLTIP
    [[maybe_unused]] static void set_field_DARKNESS_EFFECT_SCALE_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bW", "ACCESSIBILITY_TOOLTIP_DARKNESS_EFFECT", "field_38292", "DARKNESS_EFFECT_SCALE_TOOLTIP", "f_231801_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#darknessEffectScale
    static jobject get_field_darknessEffectScale(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bX", "darknessEffectScale", "field_38293", "darknessEffectScale", "f_231802_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#darknessEffectScale
    static void set_field_darknessEffectScale(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bX", "darknessEffectScale", "field_38293", "darknessEffectScale", "f_231802_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#GLINT_SPEED_TOOLTIP
    [[maybe_unused]] static jobject get_field_GLINT_SPEED_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bY", "ACCESSIBILITY_TOOLTIP_GLINT_SPEED", "field_42112", "GLINT_SPEED_TOOLTIP", "f_267409_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#GLINT_SPEED_TOOLTIP
    [[maybe_unused]] static void set_field_GLINT_SPEED_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bY", "ACCESSIBILITY_TOOLTIP_GLINT_SPEED", "field_42112", "GLINT_SPEED_TOOLTIP", "f_267409_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#glintSpeed
    static jobject get_field_glintSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bZ", "glintSpeed", "field_42113", "glintSpeed", "f_267458_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#glintSpeed
    static void set_field_glintSpeed(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bZ", "glintSpeed", "field_42113", "glintSpeed", "f_267458_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#GLINT_STRENGTH_TOOLTIP
    [[maybe_unused]] static jobject get_field_GLINT_STRENGTH_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ca", "ACCESSIBILITY_TOOLTIP_GLINT_STRENGTH", "field_42114", "GLINT_STRENGTH_TOOLTIP", "f_267450_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#GLINT_STRENGTH_TOOLTIP
    [[maybe_unused]] static void set_field_GLINT_STRENGTH_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ca", "ACCESSIBILITY_TOOLTIP_GLINT_STRENGTH", "field_42114", "GLINT_STRENGTH_TOOLTIP", "f_267450_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#glintStrength
    static jobject get_field_glintStrength(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cb", "glintStrength", "field_42115", "glintStrength", "f_267462_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#glintStrength
    static void set_field_glintStrength(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cb", "glintStrength", "field_42115", "glintStrength", "f_267462_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#DAMAGE_TILT_STRENGTH_TOOLTIP
    [[maybe_unused]] static jobject get_field_DAMAGE_TILT_STRENGTH_TOOLTIP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "ACCESSIBILITY_TOOLTIP_DAMAGE_TILT_STRENGTH", "field_42481", "DAMAGE_TILT_STRENGTH_TOOLTIP", "f_268597_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#DAMAGE_TILT_STRENGTH_TOOLTIP
    [[maybe_unused]] static void set_field_DAMAGE_TILT_STRENGTH_TOOLTIP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "ACCESSIBILITY_TOOLTIP_DAMAGE_TILT_STRENGTH", "field_42481", "DAMAGE_TILT_STRENGTH_TOOLTIP", "f_268597_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#damageTiltStrength
    static jobject get_field_damageTiltStrength(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "damageTiltStrength", "field_42482", "damageTiltStrength", "f_268427_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#damageTiltStrength
    static void set_field_damageTiltStrength(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "damageTiltStrength", "field_42482", "damageTiltStrength", "f_268427_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#gamma
    static jobject get_field_gamma(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "gamma", "field_1840", "gamma", "f_92071_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#gamma
    static void set_field_gamma(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "gamma", "field_1840", "gamma", "f_92071_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.client.option.GameOptions#field_43405
    [[maybe_unused]] static jint get_field_field_43405() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "AUTO_GUI_SCALE", "field_43405", "field_43405", "f_278127_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#field_43405
    [[maybe_unused]] static void set_field_field_43405(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "AUTO_GUI_SCALE", "field_43405", "field_43405", "f_278127_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.option.GameOptions#MAX_SERIALIZABLE_GUI_SCALE
    [[maybe_unused]] static jint get_field_MAX_SERIALIZABLE_GUI_SCALE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "MAX_GUI_SCALE_INCLUSIVE", "field_43110", "MAX_SERIALIZABLE_GUI_SCALE", "f_276073_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#MAX_SERIALIZABLE_GUI_SCALE
    [[maybe_unused]] static void set_field_MAX_SERIALIZABLE_GUI_SCALE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "MAX_GUI_SCALE_INCLUSIVE", "field_43110", "MAX_SERIALIZABLE_GUI_SCALE", "f_276073_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#guiScale
    static jobject get_field_guiScale(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "guiScale", "field_1868", "guiScale", "f_92072_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#guiScale
    static void set_field_guiScale(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "guiScale", "field_1868", "guiScale", "f_92072_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#particles
    static jobject get_field_particles(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "particles", "field_1882", "particles", "f_92073_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#particles
    static void set_field_particles(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "particles", "field_1882", "particles", "f_92073_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#narrator
    static jobject get_field_narrator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "narrator", "field_1896", "narrator", "f_231803_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#narrator
    static void set_field_narrator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "narrator", "field_1896", "narrator", "f_231803_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#language
    static jobject get_field_language(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "languageCode", "field_1883", "language", "f_92075_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#language
    static void set_field_language(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "languageCode", "field_1883", "language", "f_92075_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.option.GameOptions#soundDevice
    static jobject get_field_soundDevice(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "soundDevice", "field_34783", "soundDevice", "f_193764_"), "Lfgr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.option.GameOptions#soundDevice
    static void set_field_soundDevice(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "soundDevice", "field_34783", "soundDevice", "f_193764_"), "Lfgr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#onboardAccessibility
    static jboolean get_field_onboardAccessibility(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "onboardAccessibility", "field_41785", "onboardAccessibility", "f_263744_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#onboardAccessibility
    static void set_field_onboardAccessibility(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "onboardAccessibility", "field_41785", "onboardAccessibility", "f_263744_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.option.GameOptions#syncChunkWrites
    static jboolean get_field_syncChunkWrites(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "syncWrites", "field_25623", "syncChunkWrites", "f_92076_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.option.GameOptions#syncChunkWrites
    static void set_field_syncChunkWrites(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "syncWrites", "field_25623", "syncChunkWrites", "f_92076_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getMonochromeLogo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "darkMojangStudiosBackground", "method_41772", "getMonochromeLogo", "m_231838_"), "()Lfgr;");
    }

    static jobject getMonochromeLogo(const jobject& obj) {
                
       const auto methodID = methodID_getMonochromeLogo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHideLightningFlashes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hideLightningFlash", "method_41784", "getHideLightningFlashes", "m_231935_"), "()Lfgr;");
    }

    static jobject getHideLightningFlashes(const jobject& obj) {
                
       const auto methodID = methodID_getHideLightningFlashes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHideSplashTexts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "hideSplashTexts", "method_54581", "getHideSplashTexts", "m_307023_"), "()Lfgr;");
    }

    static jobject getHideSplashTexts(const jobject& obj) {
                
       const auto methodID = methodID_getHideSplashTexts();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMouseSensitivity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "sensitivity", "method_42495", "getMouseSensitivity", "m_231964_"), "()Lfgr;");
    }

    static jobject getMouseSensitivity(const jobject& obj) {
                
       const auto methodID = methodID_getMouseSensitivity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getViewDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "renderDistance", "method_42503", "getViewDistance", "m_231984_"), "()Lfgr;");
    }

    static jobject getViewDistance(const jobject& obj) {
                
       const auto methodID = methodID_getViewDistance();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSimulationDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "simulationDistance", "method_42510", "getSimulationDistance", "m_232001_"), "()Lfgr;");
    }

    static jobject getSimulationDistance(const jobject& obj) {
                
       const auto methodID = methodID_getSimulationDistance();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntityDistanceScaling() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "entityDistanceScaling", "method_42517", "getEntityDistanceScaling", "m_232018_"), "()Lfgr;");
    }

    static jobject getEntityDistanceScaling(const jobject& obj) {
                
       const auto methodID = methodID_getEntityDistanceScaling();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxFps() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "framerateLimit", "method_42524", "getMaxFps", "m_232035_"), "()Lfgr;");
    }

    static jobject getMaxFps(const jobject& obj) {
                
       const auto methodID = methodID_getMaxFps();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCloudRenderMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "cloudStatus", "method_42528", "getCloudRenderMode", "m_232050_"), "()Lfgr;");
    }

    static jobject getCloudRenderMode(const jobject& obj) {
                
       const auto methodID = methodID_getCloudRenderMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGraphicsMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "graphicsMode", "method_42534", "getGraphicsMode", "m_232060_"), "()Lfgr;");
    }

    static jobject getGraphicsMode(const jobject& obj) {
                
       const auto methodID = methodID_getGraphicsMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "ambientOcclusion", "method_41792", "getAo", "m_232070_"), "()Lfgr;");
    }

    static jobject getAo(const jobject& obj) {
                
       const auto methodID = methodID_getAo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChunkBuilderMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "prioritizeChunkUpdates", "method_41798", "getChunkBuilderMode", "m_232080_"), "()Lfgr;");
    }

    static jobject getChunkBuilderMode(const jobject& obj) {
                
       const auto methodID = methodID_getChunkBuilderMode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_refreshResourcePacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateResourcePacks", "method_49598", "refreshResourcePacks", "m_274546_"), "(Latp;)V");
    }

    static void refreshResourcePacks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_refreshResourcePacks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getChatVisibility() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "chatVisibility", "method_42539", "getChatVisibility", "m_232090_"), "()Lfgr;");
    }

    static jobject getChatVisibility(const jobject& obj) {
                
       const auto methodID = methodID_getChatVisibility();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChatOpacity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "chatOpacity", "method_42542", "getChatOpacity", "m_232098_"), "()Lfgr;");
    }

    static jobject getChatOpacity(const jobject& obj) {
                
       const auto methodID = methodID_getChatOpacity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChatLineSpacing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "chatLineSpacing", "method_42546", "getChatLineSpacing", "m_232101_"), "()Lfgr;");
    }

    static jobject getChatLineSpacing(const jobject& obj) {
                
       const auto methodID = methodID_getChatLineSpacing();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMenuBackgroundBlurriness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "menuBackgroundBlurriness", "method_57702", "getMenuBackgroundBlurriness", "m_323040_"), "()Lfgr;");
    }

    static jobject getMenuBackgroundBlurriness(const jobject& obj) {
                
       const auto methodID = methodID_getMenuBackgroundBlurriness();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMenuBackgroundBlurrinessValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getMenuBackgroundBlurriness", "method_57703", "getMenuBackgroundBlurrinessValue", "m_321110_"), "()I");
    }

    static jint getMenuBackgroundBlurrinessValue(const jobject& obj) {
                
       const auto methodID = methodID_getMenuBackgroundBlurrinessValue();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTextBackgroundOpacity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "textBackgroundOpacity", "method_42550", "getTextBackgroundOpacity", "m_232104_"), "()Lfgr;");
    }

    static jobject getTextBackgroundOpacity(const jobject& obj) {
                
       const auto methodID = methodID_getTextBackgroundOpacity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPanoramaSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "panoramaSpeed", "method_45581", "getPanoramaSpeed", "m_245201_"), "()Lfgr;");
    }

    static jobject getPanoramaSpeed(const jobject& obj) {
                
       const auto methodID = methodID_getPanoramaSpeed();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHighContrast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "highContrast", "method_49600", "getHighContrast", "m_274330_"), "()Lfgr;");
    }

    static jobject getHighContrast(const jobject& obj) {
                
       const auto methodID = methodID_getHighContrast();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNarratorHotkey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "narratorHotkey", "method_53530", "getNarratorHotkey", "m_292959_"), "()Lfgr;");
    }

    static jobject getNarratorHotkey(const jobject& obj) {
                
       const auto methodID = methodID_getNarratorHotkey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMainArm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "mainHand", "method_42552", "getMainArm", "m_232107_"), "()Lfgr;");
    }

    static jobject getMainArm(const jobject& obj) {
                
       const auto methodID = methodID_getMainArm();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChatScale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "chatScale", "method_42554", "getChatScale", "m_232110_"), "()Lfgr;");
    }

    static jobject getChatScale(const jobject& obj) {
                
       const auto methodID = methodID_getChatScale();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChatWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "chatWidth", "method_42556", "getChatWidth", "m_232113_"), "()Lfgr;");
    }

    static jobject getChatWidth(const jobject& obj) {
                
       const auto methodID = methodID_getChatWidth();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChatHeightUnfocused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "chatHeightUnfocused", "method_41801", "getChatHeightUnfocused", "m_232116_"), "()Lfgr;");
    }

    static jobject getChatHeightUnfocused(const jobject& obj) {
                
       const auto methodID = methodID_getChatHeightUnfocused();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChatHeightFocused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "chatHeightFocused", "method_41803", "getChatHeightFocused", "m_232117_"), "()Lfgr;");
    }

    static jobject getChatHeightFocused(const jobject& obj) {
                
       const auto methodID = methodID_getChatHeightFocused();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChatDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "chatDelay", "method_42561", "getChatDelay", "m_232118_"), "()Lfgr;");
    }

    static jobject getChatDelay(const jobject& obj) {
                
       const auto methodID = methodID_getChatDelay();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNotificationDisplayTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "notificationDisplayTime", "method_48191", "getNotificationDisplayTime", "m_264038_"), "()Lfgr;");
    }

    static jobject getNotificationDisplayTime(const jobject& obj) {
                
       const auto methodID = methodID_getNotificationDisplayTime();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMipmapLevels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "mipmapLevels", "method_42563", "getMipmapLevels", "m_232119_"), "()Lfgr;");
    }

    static jobject getMipmapLevels(const jobject& obj) {
                
       const auto methodID = methodID_getMipmapLevels();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttackIndicator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "attackIndicator", "method_42565", "getAttackIndicator", "m_232120_"), "()Lfgr;");
    }

    static jobject getAttackIndicator(const jobject& obj) {
                
       const auto methodID = methodID_getAttackIndicator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBiomeBlendRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "biomeBlendRadius", "method_41805", "getBiomeBlendRadius", "m_232121_"), "()Lfgr;");
    }

    static jobject getBiomeBlendRadius(const jobject& obj) {
                
       const auto methodID = methodID_getBiomeBlendRadius();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toMouseWheelSensitivityValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "logMouse", "method_41793", "toMouseWheelSensitivityValue", "m_231965_"), "(I)D");
    }

    static jdouble toMouseWheelSensitivityValue(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toMouseWheelSensitivityValue();
       return MinecraftSDK::env->CallStaticDoubleMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toMouseWheelSensitivitySliderProgressValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "unlogMouse", "method_41773", "toMouseWheelSensitivitySliderProgressValue", "m_231839_"), "(D)I");
    }

    static jint toMouseWheelSensitivitySliderProgressValue(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toMouseWheelSensitivitySliderProgressValue();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getMouseWheelSensitivity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "mouseWheelSensitivity", "method_41806", "getMouseWheelSensitivity", "m_232122_"), "()Lfgr;");
    }

    static jobject getMouseWheelSensitivity(const jobject& obj) {
                
       const auto methodID = methodID_getMouseWheelSensitivity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRawMouseInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "rawMouseInput", "method_41807", "getRawMouseInput", "m_232123_"), "()Lfgr;");
    }

    static jobject getRawMouseInput(const jobject& obj) {
                
       const auto methodID = methodID_getRawMouseInput();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAutoJump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "autoJump", "method_42423", "getAutoJump", "m_231812_"), "()Lfgr;");
    }

    static jobject getAutoJump(const jobject& obj) {
                
       const auto methodID = methodID_getAutoJump();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOperatorItemsTab() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "operatorItemsTab", "method_47395", "getOperatorItemsTab", "m_257871_"), "()Lfgr;");
    }

    static jobject getOperatorItemsTab(const jobject& obj) {
                
       const auto methodID = methodID_getOperatorItemsTab();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAutoSuggestions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "autoSuggestions", "method_42425", "getAutoSuggestions", "m_231813_"), "()Lfgr;");
    }

    static jobject getAutoSuggestions(const jobject& obj) {
                
       const auto methodID = methodID_getAutoSuggestions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChatColors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "chatColors", "method_42427", "getChatColors", "m_231814_"), "()Lfgr;");
    }

    static jobject getChatColors(const jobject& obj) {
                
       const auto methodID = methodID_getChatColors();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChatLinks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L", "chatLinks", "method_42429", "getChatLinks", "m_231815_"), "()Lfgr;");
    }

    static jobject getChatLinks(const jobject& obj) {
                
       const auto methodID = methodID_getChatLinks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChatLinksPrompt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("M", "chatLinksPrompt", "method_42431", "getChatLinksPrompt", "m_231816_"), "()Lfgr;");
    }

    static jobject getChatLinksPrompt(const jobject& obj) {
                
       const auto methodID = methodID_getChatLinksPrompt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEnableVsync() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("N", "enableVsync", "method_42433", "getEnableVsync", "m_231817_"), "()Lfgr;");
    }

    static jobject getEnableVsync(const jobject& obj) {
                
       const auto methodID = methodID_getEnableVsync();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntityShadows() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("O", "entityShadows", "method_42435", "getEntityShadows", "m_231818_"), "()Lfgr;");
    }

    static jobject getEntityShadows(const jobject& obj) {
                
       const auto methodID = methodID_getEntityShadows();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onFontOptionsChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("aF", "updateFontOptions", "method_57020", "onFontOptionsChanged", "m_320153_"), "()V");
    }

    static void onFontOptionsChanged() {
       const auto clazz = self();
       const auto methodID = methodID_onFontOptionsChanged();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getForceUnicodeFont() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("P", "forceUnicodeFont", "method_42437", "getForceUnicodeFont", "m_231819_"), "()Lfgr;");
    }

    static jobject getForceUnicodeFont(const jobject& obj) {
                
       const auto methodID = methodID_getForceUnicodeFont();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldUseJapaneseGlyphsByDefault() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("aG", "japaneseGlyphVariantsDefault", "method_57021", "shouldUseJapaneseGlyphsByDefault", "m_324081_"), "()Z");
    }

    static jboolean shouldUseJapaneseGlyphsByDefault() {
       const auto clazz = self();
       const auto methodID = methodID_shouldUseJapaneseGlyphsByDefault();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getJapaneseGlyphVariants() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Q", "japaneseGlyphVariants", "method_57018", "getJapaneseGlyphVariants", "m_321442_"), "()Lfgr;");
    }

    static jobject getJapaneseGlyphVariants(const jobject& obj) {
                
       const auto methodID = methodID_getJapaneseGlyphVariants();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getInvertYMouse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R", "invertYMouse", "method_42438", "getInvertYMouse", "m_231820_"), "()Lfgr;");
    }

    static jobject getInvertYMouse(const jobject& obj) {
                
       const auto methodID = methodID_getInvertYMouse();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDiscreteMouseScroll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("S", "discreteMouseScroll", "method_42439", "getDiscreteMouseScroll", "m_231821_"), "()Lfgr;");
    }

    static jobject getDiscreteMouseScroll(const jobject& obj) {
                
       const auto methodID = methodID_getDiscreteMouseScroll();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRealmsNotifications() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("T", "realmsNotifications", "method_42440", "getRealmsNotifications", "m_231822_"), "()Lfgr;");
    }

    static jobject getRealmsNotifications(const jobject& obj) {
                
       const auto methodID = methodID_getRealmsNotifications();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAllowServerListing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("U", "allowServerListing", "method_42441", "getAllowServerListing", "m_231823_"), "()Lfgr;");
    }

    static jobject getAllowServerListing(const jobject& obj) {
                
       const auto methodID = methodID_getAllowServerListing();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getReducedDebugInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("V", "reducedDebugInfo", "method_42442", "getReducedDebugInfo", "m_231824_"), "()Lfgr;");
    }

    static jobject getReducedDebugInfo(const jobject& obj) {
                
       const auto methodID = methodID_getReducedDebugInfo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSoundVolume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSoundSourceVolume", "method_1630", "getSoundVolume", "m_92147_"), "(Lavq;)F");
    }

    static jfloat getSoundVolume(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSoundVolume();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSoundVolumeOption() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getSoundSourceOptionInstance", "method_45578", "getSoundVolumeOption", "m_246669_"), "(Lavq;)Lfgr;");
    }

    static jobject getSoundVolumeOption(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSoundVolumeOption();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createSoundVolumeOption() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createSoundSliderOptionInstance", "method_45576", "createSoundVolumeOption", "m_247249_"), "(Ljava/lang/String;Lavq;)Lfgr;");
    }

    static jobject createSoundVolumeOption(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createSoundVolumeOption();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getShowSubtitles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("W", "showSubtitles", "method_42443", "getShowSubtitles", "m_231825_"), "()Lfgr;");
    }

    static jobject getShowSubtitles(const jobject& obj) {
                
       const auto methodID = methodID_getShowSubtitles();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDirectionalAudio() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("X", "directionalAudio", "method_42444", "getDirectionalAudio", "m_231826_"), "()Lfgr;");
    }

    static jobject getDirectionalAudio(const jobject& obj) {
                
       const auto methodID = methodID_getDirectionalAudio();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBackgroundForChatOnly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Y", "backgroundForChatOnly", "method_42445", "getBackgroundForChatOnly", "m_231827_"), "()Lfgr;");
    }

    static jobject getBackgroundForChatOnly(const jobject& obj) {
                
       const auto methodID = methodID_getBackgroundForChatOnly();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTouchscreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Z", "touchscreen", "method_42446", "getTouchscreen", "m_231828_"), "()Lfgr;");
    }

    static jobject getTouchscreen(const jobject& obj) {
                
       const auto methodID = methodID_getTouchscreen();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFullscreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "fullscreen", "method_42447", "getFullscreen", "m_231829_"), "()Lfgr;");
    }

    static jobject getFullscreen(const jobject& obj) {
                
       const auto methodID = methodID_getFullscreen();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBobView() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "bobView", "method_42448", "getBobView", "m_231830_"), "()Lfgr;");
    }

    static jobject getBobView(const jobject& obj) {
                
       const auto methodID = methodID_getBobView();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSneakToggled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ac", "toggleCrouch", "method_42449", "getSneakToggled", "m_231831_"), "()Lfgr;");
    }

    static jobject getSneakToggled(const jobject& obj) {
                
       const auto methodID = methodID_getSneakToggled();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSprintToggled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ad", "toggleSprint", "method_42450", "getSprintToggled", "m_231832_"), "()Lfgr;");
    }

    static jobject getSprintToggled(const jobject& obj) {
                
       const auto methodID = methodID_getSprintToggled();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHideMatchedNames() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ae", "hideMatchedNames", "method_42451", "getHideMatchedNames", "m_231833_"), "()Lfgr;");
    }

    static jobject getHideMatchedNames(const jobject& obj) {
                
       const auto methodID = methodID_getHideMatchedNames();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getShowAutosaveIndicator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("af", "showAutosaveIndicator", "method_42452", "getShowAutosaveIndicator", "m_231834_"), "()Lfgr;");
    }

    static jobject getShowAutosaveIndicator(const jobject& obj) {
                
       const auto methodID = methodID_getShowAutosaveIndicator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOnlyShowSecureChat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ag", "onlyShowSecureChat", "method_44026", "getOnlyShowSecureChat", "m_231836_"), "()Lfgr;");
    }

    static jobject getOnlyShowSecureChat(const jobject& obj) {
                
       const auto methodID = methodID_getOnlyShowSecureChat();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFov() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ah", "fov", "method_41808", "getFov", "m_231837_"), "()Lfgr;");
    }

    static jobject getFov(const jobject& obj) {
                
       const auto methodID = methodID_getFov();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTelemetryOptInExtra() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ai", "telemetryOptInExtra", "method_47609", "getTelemetryOptInExtra", "m_261324_"), "()Lfgr;");
    }

    static jobject getTelemetryOptInExtra(const jobject& obj) {
                
       const auto methodID = methodID_getTelemetryOptInExtra();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDistortionEffectScale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aj", "screenEffectScale", "method_42453", "getDistortionEffectScale", "m_231924_"), "()Lfgr;");
    }

    static jobject getDistortionEffectScale(const jobject& obj) {
                
       const auto methodID = methodID_getDistortionEffectScale();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFovEffectScale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ak", "fovEffectScale", "method_42454", "getFovEffectScale", "m_231925_"), "()Lfgr;");
    }

    static jobject getFovEffectScale(const jobject& obj) {
                
       const auto methodID = methodID_getFovEffectScale();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDarknessEffectScale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("al", "darknessEffectScale", "method_42472", "getDarknessEffectScale", "m_231926_"), "()Lfgr;");
    }

    static jobject getDarknessEffectScale(const jobject& obj) {
                
       const auto methodID = methodID_getDarknessEffectScale();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGlintSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("am", "glintSpeed", "method_48580", "getGlintSpeed", "m_267805_"), "()Lfgr;");
    }

    static jobject getGlintSpeed(const jobject& obj) {
                
       const auto methodID = methodID_getGlintSpeed();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGlintStrength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("an", "glintStrength", "method_48581", "getGlintStrength", "m_267782_"), "()Lfgr;");
    }

    static jobject getGlintStrength(const jobject& obj) {
                
       const auto methodID = methodID_getGlintStrength();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDamageTiltStrength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ao", "damageTiltStrength", "method_48974", "getDamageTiltStrength", "m_269326_"), "()Lfgr;");
    }

    static jobject getDamageTiltStrength(const jobject& obj) {
                
       const auto methodID = methodID_getDamageTiltStrength();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGamma() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ap", "gamma", "method_42473", "getGamma", "m_231927_"), "()Lfgr;");
    }

    static jobject getGamma(const jobject& obj) {
                
       const auto methodID = methodID_getGamma();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGuiScale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aq", "guiScale", "method_42474", "getGuiScale", "m_231928_"), "()Lfgr;");
    }

    static jobject getGuiScale(const jobject& obj) {
                
       const auto methodID = methodID_getGuiScale();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ar", "particles", "method_42475", "getParticles", "m_231929_"), "()Lfgr;");
    }

    static jobject getParticles(const jobject& obj) {
                
       const auto methodID = methodID_getParticles();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNarrator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("as", "narrator", "method_42476", "getNarrator", "m_231930_"), "()Lfgr;");
    }

    static jobject getNarrator(const jobject& obj) {
                
       const auto methodID = methodID_getNarrator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSoundDevice() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("at", "soundDevice", "method_42477", "getSoundDevice", "m_231931_"), "()Lfgr;");
    }

    static jobject getSoundDevice(const jobject& obj) {
                
       const auto methodID = methodID_getSoundDevice();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setAccessibilityOnboarded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("au", "onboardingAccessibilityFinished", "method_61127", "setAccessibilityOnboarded", "m_338485_"), "()V");
    }

    static void setAccessibilityOnboarded(const jobject& obj) {
                
       const auto methodID = methodID_setAccessibilityOnboarded();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__getTextBackgroundOpacity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBackgroundOpacity", "method_19343", "getTextBackgroundOpacity", "m_92141_"), "(F)F");
    }

    static jfloat _getTextBackgroundOpacity(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID__getTextBackgroundOpacity();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTextBackgroundColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getBackgroundColor", "method_19345", "getTextBackgroundColor", "m_92170_"), "(F)I");
    }

    static jint getTextBackgroundColor(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getTextBackgroundColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getTextBackgroundColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBackgroundColor", "method_19344", "getTextBackgroundColor", "m_92143_"), "(I)I");
    }

    static jint _getTextBackgroundColor(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__getTextBackgroundColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setKeyCode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setKey", "method_1641", "setKeyCode", "m_92159_"), "(Lfgm;Lfae$a;)V");
    }

    static void setKeyCode(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setKeyCode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_acceptProfiledOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "processDumpedOptions", "method_57019", "acceptProfiledOptions", "m_323232_"), "(Lfgs$b;)V");
    }

    static void acceptProfiledOptions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_acceptProfiledOptions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_accept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "processOptions", "method_33666", "accept", "m_168427_"), "(Lfgs$a;)V");
    }

    static void accept(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_accept();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("av", "load", "method_1636", "load", "m_92140_"), "()V");
    }

    static void load(const jobject& obj) {
                
       const auto methodID = methodID_load();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isTrue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isTrue", "method_32595", "isTrue", "m_168435_"), "(Ljava/lang/String;)Z");
    }

    static jboolean isTrue(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isTrue();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isFalse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isFalse", "method_32596", "isFalse", "m_168440_"), "(Ljava/lang/String;)Z");
    }

    static jboolean isFalse(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isFalse();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dataFix", "method_1626", "update", "m_92164_"), "(Lub;)Lub;");
    }

    static jobject update(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_update();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aw", "save", "method_1640", "write", "m_92169_"), "()V");
    }

    static void write(const jobject& obj) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSyncedOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ax", "buildPlayerInformation", "method_53842", "getSyncedOptions", "m_294596_"), "()Laqh;");
    }

    static jobject getSyncedOptions(const jobject& obj) {
                
       const auto methodID = methodID_getSyncedOptions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendClientSettings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ay", "broadcastOptions", "method_1643", "sendClientSettings", "m_92172_"), "()V");
    }

    static void sendClientSettings(const jobject& obj) {
                
       const auto methodID = methodID_sendClientSettings();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPlayerModelPart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setModelPart", "method_1635", "setPlayerModelPart", "m_92154_"), "(Lcmy;Z)V");
    }

    static void setPlayerModelPart(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setPlayerModelPart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isPlayerModelPartEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isModelPartEnabled", "method_32594", "isPlayerModelPartEnabled", "m_168416_"), "(Lcmy;)Z");
    }

    static jboolean isPlayerModelPartEnabled(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isPlayerModelPartEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_togglePlayerModelPart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "toggleModelPart", "method_1631", "togglePlayerModelPart", "m_168418_"), "(Lcmy;Z)V");
    }

    static void togglePlayerModelPart(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_togglePlayerModelPart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getCloudRenderModeValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("az", "getCloudsType", "method_1632", "getCloudRenderModeValue", "m_92174_"), "()Lfgb;");
    }

    static jobject getCloudRenderModeValue(const jobject& obj) {
                
       const auto methodID = methodID_getCloudRenderModeValue();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldUseNativeTransport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aA", "useNativeTransport", "method_1639", "shouldUseNativeTransport", "m_92175_"), "()Z");
    }

    static jboolean shouldUseNativeTransport(const jobject& obj) {
                
       const auto methodID = methodID_shouldUseNativeTransport();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_addResourcePackProfilesToManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "loadSelectedResourcePacks", "method_1627", "addResourcePackProfilesToManager", "m_92145_"), "(Latp;)V");
    }

    static void addResourcePackProfilesToManager(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addResourcePackProfilesToManager();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPerspective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aB", "getCameraType", "method_31044", "getPerspective", "m_92176_"), "()Lffz;");
    }

    static jobject getPerspective(const jobject& obj) {
                
       const auto methodID = methodID_getPerspective();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPerspective() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCameraType", "method_31043", "setPerspective", "m_92157_"), "(Lffz;)V");
    }

    static void setPerspective(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPerspective();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_parseList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "readListOfStrings", "method_33671", "parseList", "m_292893_"), "(Ljava/lang/String;)Ljava/util/List;");
    }

    static jobject parseList(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_parseList();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getOptionsFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aC", "getFile", "method_37294", "getOptionsFile", "m_168450_"), "()Ljava/io/File;");
    }

    static jobject getOptionsFile(const jobject& obj) {
                
       const auto methodID = methodID_getOptionsFile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_collectProfiledOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aD", "dumpOptionsForReport", "method_37295", "collectProfiledOptions", "m_168451_"), "()Ljava/lang/String;");
    }

    static jobject collectProfiledOptions(const jobject& obj) {
                
       const auto methodID = methodID_collectProfiledOptions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setServerViewDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setServerRenderDistance", "method_38520", "setServerViewDistance", "m_193770_"), "(I)V");
    }

    static void setServerViewDistance(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setServerViewDistance();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getClampedViewDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aE", "getEffectiveRenderDistance", "method_38521", "getClampedViewDistance", "m_193772_"), "()I");
    }

    static jint getClampedViewDistance(const jobject& obj) {
                
       const auto methodID = methodID_getClampedViewDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPixelValueText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "pixelValueLabel", "method_41791", "getPixelValueText", "m_231952_"), "(Lwz;I)Lwz;");
    }

    static jobject getPixelValueText(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getPixelValueText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getPercentValueText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "percentValueLabel", "method_41781", "getPercentValueText", "m_231897_"), "(Lwz;D)Lwz;");
    }

    static jobject getPercentValueText(const jobject& arg0, const jdouble& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getPercentValueText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getGenericValueText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "genericValueLabel", "method_41783", "getGenericValueText", "m_231921_"), "(Lwz;Lwz;)Lwz;");
    }

    static jobject getGenericValueText(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getGenericValueText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getGenericValueText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "genericValueLabel", "method_41782", "getGenericValueText", "m_231900_"), "(Lwz;I)Lwz;");
    }

    static jobject _getGenericValueText(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__getGenericValueText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getGenericValueOrOffText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "genericValueOrOffLabel", "method_60648", "getGenericValueOrOffText", "m_338389_"), "(Lwz;I)Lwz;");
    }

    static jobject getGenericValueOrOffText(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getGenericValueOrOffText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getPercentValueOrOffText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "percentValueOrOffLabel", "method_59835", "getPercentValueOrOffText", "m_324758_"), "(Lwz;D)Lwz;");
    }

    static jobject getPercentValueOrOffText(const jobject& arg0, const jdouble& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getPercentValueOrOffText();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_OPTION_GAMEOPTIONS_HPP