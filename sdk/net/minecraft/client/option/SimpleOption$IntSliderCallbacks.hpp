// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_OPTION_SIMPLEOPTION$INTSLIDERCALLBACKS_HPP
#define NET_MINECRAFT_CLIENT_OPTION_SIMPLEOPTION$INTSLIDERCALLBACKS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.option.SimpleOption$IntSliderCallbacks
 * Remapped: fgr$g
 */
namespace SimpleOption$IntSliderCallbacks {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fgr$g", "net/minecraft/client/OptionInstance$IntRangeBase", "net/minecraft/class_7172$class_7275", "net/minecraft/client/option/SimpleOption$IntSliderCallbacks", "net/minecraft/src/C_213334_$C_213342_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_minInclusive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "minInclusive", "comp_593", "minInclusive", "m_214123_"), "()I");
    }

    static jint minInclusive(const jobject& obj) {
                
       const auto methodID = methodID_minInclusive();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_maxInclusive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "maxInclusive", "comp_594", "maxInclusive", "m_214118_"), "()I");
    }

    static jint maxInclusive(const jobject& obj) {
                
       const auto methodID = methodID_maxInclusive();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_toSliderProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "toSliderValue", "method_42415", "toSliderProgress", "m_213640_"), "(Ljava/lang/Integer;)D");
    }

    static jdouble toSliderProgress(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toSliderProgress();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fromSliderValue", "method_42412", "toValue", "m_213729_"), "(D)Ljava/lang/Integer;");
    }

    static jobject toValue(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_toValue();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withModifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "xmap", "method_42414", "withModifier", "m_231657_"), "(Ljava/util/function/IntFunction;Ljava/util/function/ToIntFunction;)Lfgr$k;");
    }

    static jobject withModifier(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_withModifier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_OPTION_SIMPLEOPTION$INTSLIDERCALLBACKS_HPP