// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_MINECRAFTCLIENT_HPP
#define NET_MINECRAFT_CLIENT_MINECRAFTCLIENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.MinecraftClient
 * Remapped: fgo
 */
namespace MinecraftClient {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fgo", "net/minecraft/client/Minecraft", "net/minecraft/class_310", "net/minecraft/client/MinecraftClient", "net/minecraft/src/C_3391_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.client.MinecraftClient#instance
    [[maybe_unused]] static jobject get_field_instance() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "instance", "field_1700", "instance", "f_90981_"), "Lfgo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.MinecraftClient#instance
    [[maybe_unused]] static void set_field_instance(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "instance", "field_1700", "instance", "f_90981_"), "Lfgo;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.MinecraftClient#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "LOGGER", "field_1762", "LOGGER", "f_90982_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "LOGGER", "field_1762", "LOGGER", "f_90982_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.MinecraftClient#IS_SYSTEM_MAC
    [[maybe_unused]] static jboolean get_field_IS_SYSTEM_MAC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ON_OSX", "field_1703", "IS_SYSTEM_MAC", "f_91002_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#IS_SYSTEM_MAC
    [[maybe_unused]] static void set_field_IS_SYSTEM_MAC(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ON_OSX", "field_1703", "IS_SYSTEM_MAC", "f_91002_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.MinecraftClient#field_32145
    [[maybe_unused]] static jint get_field_field_32145() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "MAX_TICKS_PER_UPDATE", "field_32145", "field_32145", "f_167843_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#field_32145
    [[maybe_unused]] static void set_field_field_32145(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "MAX_TICKS_PER_UPDATE", "field_32145", "field_32145", "f_167843_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.MinecraftClient#DEFAULT_FONT_ID
    [[maybe_unused]] static jobject get_field_DEFAULT_FONT_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_FONT", "field_1740", "DEFAULT_FONT_ID", "f_91055_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#DEFAULT_FONT_ID
    [[maybe_unused]] static void set_field_DEFAULT_FONT_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_FONT", "field_1740", "DEFAULT_FONT_ID", "f_91055_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.MinecraftClient#UNICODE_FONT_ID
    [[maybe_unused]] static jobject get_field_UNICODE_FONT_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "UNIFORM_FONT", "field_24211", "UNICODE_FONT_ID", "f_91058_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#UNICODE_FONT_ID
    [[maybe_unused]] static void set_field_UNICODE_FONT_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "UNIFORM_FONT", "field_24211", "UNICODE_FONT_ID", "f_91058_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.MinecraftClient#ALT_TEXT_RENDERER_ID
    [[maybe_unused]] static jobject get_field_ALT_TEXT_RENDERER_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ALT_FONT", "field_1749", "ALT_TEXT_RENDERER_ID", "f_91059_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#ALT_TEXT_RENDERER_ID
    [[maybe_unused]] static void set_field_ALT_TEXT_RENDERER_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ALT_FONT", "field_1749", "ALT_TEXT_RENDERER_ID", "f_91059_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.MinecraftClient#REGIONAL_COMPLIANCIES_ID
    [[maybe_unused]] static jobject get_field_REGIONAL_COMPLIANCIES_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "REGIONAL_COMPLIANCIES", "field_36433", "REGIONAL_COMPLIANCIES_ID", "f_205119_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#REGIONAL_COMPLIANCIES_ID
    [[maybe_unused]] static void set_field_REGIONAL_COMPLIANCIES_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "REGIONAL_COMPLIANCIES", "field_36433", "REGIONAL_COMPLIANCIES_ID", "f_205119_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.MinecraftClient#COMPLETED_UNIT_FUTURE
    [[maybe_unused]] static jobject get_field_COMPLETED_UNIT_FUTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "RESOURCE_RELOAD_INITIAL_TASK", "field_18009", "COMPLETED_UNIT_FUTURE", "f_90983_"), "Ljava/util/concurrent/CompletableFuture;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#COMPLETED_UNIT_FUTURE
    [[maybe_unused]] static void set_field_COMPLETED_UNIT_FUTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "RESOURCE_RELOAD_INITIAL_TASK", "field_18009", "COMPLETED_UNIT_FUTURE", "f_90983_"), "Ljava/util/concurrent/CompletableFuture;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.MinecraftClient#SOCIAL_INTERACTIONS_NOT_AVAILABLE
    [[maybe_unused]] static jobject get_field_SOCIAL_INTERACTIONS_NOT_AVAILABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SOCIAL_INTERACTIONS_NOT_AVAILABLE", "field_26841", "SOCIAL_INTERACTIONS_NOT_AVAILABLE", "f_90984_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#SOCIAL_INTERACTIONS_NOT_AVAILABLE
    [[maybe_unused]] static void set_field_SOCIAL_INTERACTIONS_NOT_AVAILABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SOCIAL_INTERACTIONS_NOT_AVAILABLE", "field_26841", "SOCIAL_INTERACTIONS_NOT_AVAILABLE", "f_90984_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.MinecraftClient#GL_ERROR_DIALOGUE
    [[maybe_unused]] static jobject get_field_GL_ERROR_DIALOGUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "UPDATE_DRIVERS_ADVICE", "field_33735", "GL_ERROR_DIALOGUE", "f_167848_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#GL_ERROR_DIALOGUE
    [[maybe_unused]] static void set_field_GL_ERROR_DIALOGUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "UPDATE_DRIVERS_ADVICE", "field_33735", "GL_ERROR_DIALOGUE", "f_167848_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#field_46550
    static jlong get_field_field_46550(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "canary", "field_46550", "field_46550", "f_302824_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#field_46550
    static void set_field_field_46550(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "canary", "field_46550", "field_46550", "f_302824_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#resourcePackDir
    static jobject get_field_resourcePackDir(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "resourcePackDirectory", "field_1757", "resourcePackDir", "f_90985_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#resourcePackDir
    static void set_field_resourcePackDir(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("L", "resourcePackDirectory", "field_1757", "resourcePackDir", "f_90985_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#gameProfileFuture
    static jobject get_field_gameProfileFuture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "profileFuture", "field_45899", "gameProfileFuture", "f_290411_"), "Ljava/util/concurrent/CompletableFuture;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#gameProfileFuture
    static void set_field_gameProfileFuture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "profileFuture", "field_45899", "gameProfileFuture", "f_290411_"), "Ljava/util/concurrent/CompletableFuture;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#textureManager
    static jobject get_field_textureManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "textureManager", "field_1764", "textureManager", "f_90987_"), "Lgqm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#textureManager
    static void set_field_textureManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "textureManager", "field_1764", "textureManager", "f_90987_"), "Lgqm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#dataFixer
    static jobject get_field_dataFixer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "fixerUpper", "field_1768", "dataFixer", "f_90988_"), "Lcom/mojang/datafixers/DataFixer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#dataFixer
    static void set_field_dataFixer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "fixerUpper", "field_1768", "dataFixer", "f_90988_"), "Lcom/mojang/datafixers/DataFixer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#windowProvider
    static jobject get_field_windowProvider(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "virtualScreen", "field_1686", "windowProvider", "f_90989_"), "Lgfr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#windowProvider
    static void set_field_windowProvider(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "virtualScreen", "field_1686", "windowProvider", "f_90989_"), "Lgfr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#window
    static jobject get_field_window(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "window", "field_1704", "window", "f_90990_"), "Lfam;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#window
    static void set_field_window(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "window", "field_1704", "window", "f_90990_"), "Lfam;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#renderTickCounter
    static jobject get_field_renderTickCounter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "timer", "field_1728", "renderTickCounter", "f_90991_"), "Lfgf$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#renderTickCounter
    static void set_field_renderTickCounter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "timer", "field_1728", "renderTickCounter", "f_90991_"), "Lfgf$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#bufferBuilders
    static jobject get_field_bufferBuilders(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "renderBuffers", "field_20909", "bufferBuilders", "f_90993_"), "Lgff;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#bufferBuilders
    static void set_field_bufferBuilders(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("S", "renderBuffers", "field_20909", "bufferBuilders", "f_90993_"), "Lgff;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#worldRenderer
    static jobject get_field_worldRenderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "levelRenderer", "field_1769", "worldRenderer", "f_91060_"), "Lgex;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#worldRenderer
    static void set_field_worldRenderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "levelRenderer", "field_1769", "worldRenderer", "f_91060_"), "Lgex;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#entityRenderDispatcher
    static jobject get_field_entityRenderDispatcher(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "entityRenderDispatcher", "field_1731", "entityRenderDispatcher", "f_90994_"), "Lgkh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#entityRenderDispatcher
    static void set_field_entityRenderDispatcher(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("T", "entityRenderDispatcher", "field_1731", "entityRenderDispatcher", "f_90994_"), "Lgkh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#itemRenderer
    static jobject get_field_itemRenderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "itemRenderer", "field_1742", "itemRenderer", "f_90995_"), "Lglh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#itemRenderer
    static void set_field_itemRenderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("U", "itemRenderer", "field_1742", "itemRenderer", "f_90995_"), "Lglh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#particleManager
    static jobject get_field_particleManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "particleEngine", "field_1713", "particleManager", "f_91061_"), "Lgcp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#particleManager
    static void set_field_particleManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "particleEngine", "field_1713", "particleManager", "f_91061_"), "Lgcp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#session
    static jobject get_field_session(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "user", "field_1726", "session", "f_90998_"), "Lfhb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#session
    static void set_field_session(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("V", "user", "field_1726", "session", "f_90998_"), "Lfhb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#textRenderer
    static jobject get_field_textRenderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "font", "field_1772", "textRenderer", "f_91062_"), "Lfhx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#textRenderer
    static void set_field_textRenderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "font", "field_1772", "textRenderer", "f_91062_"), "Lfhx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#advanceValidatingTextRenderer
    static jobject get_field_advanceValidatingTextRenderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "fontFilterFishy", "field_39924", "advanceValidatingTextRenderer", "f_243022_"), "Lfhx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#advanceValidatingTextRenderer
    static void set_field_advanceValidatingTextRenderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "fontFilterFishy", "field_39924", "advanceValidatingTextRenderer", "f_243022_"), "Lfhx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#gameRenderer
    static jobject get_field_gameRenderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "gameRenderer", "field_1773", "gameRenderer", "f_91063_"), "Lges;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#gameRenderer
    static void set_field_gameRenderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "gameRenderer", "field_1773", "gameRenderer", "f_91063_"), "Lges;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#debugRenderer
    static jobject get_field_debugRenderer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "debugRenderer", "field_1709", "debugRenderer", "f_91064_"), "Lgim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#debugRenderer
    static void set_field_debugRenderer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "debugRenderer", "field_1709", "debugRenderer", "f_91064_"), "Lgim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#worldGenProgressTracker
    static jobject get_field_worldGenProgressTracker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "progressListener", "field_17405", "worldGenProgressTracker", "f_90999_"), "Ljava/util/concurrent/atomic/AtomicReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#worldGenProgressTracker
    static void set_field_worldGenProgressTracker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("W", "progressListener", "field_17405", "worldGenProgressTracker", "f_90999_"), "Ljava/util/concurrent/atomic/AtomicReference;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#inGameHud
    static jobject get_field_inGameHud(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "gui", "field_1705", "inGameHud", "f_91065_"), "Lfhy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#inGameHud
    static void set_field_inGameHud(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "gui", "field_1705", "inGameHud", "f_91065_"), "Lfhy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#options
    static jobject get_field_options(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "options", "field_1690", "options", "f_91066_"), "Lfgs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#options
    static void set_field_options(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "options", "field_1690", "options", "f_91066_"), "Lfgs;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#creativeHotbarStorage
    static jobject get_field_creativeHotbarStorage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "hotbarManager", "field_1732", "creativeHotbarStorage", "f_91000_"), "Lfgk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#creativeHotbarStorage
    static void set_field_creativeHotbarStorage(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "hotbarManager", "field_1732", "creativeHotbarStorage", "f_91000_"), "Lfgk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#mouse
    static jobject get_field_mouse(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "mouseHandler", "field_1729", "mouse", "f_91067_"), "Lfgp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#mouse
    static void set_field_mouse(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "mouseHandler", "field_1729", "mouse", "f_91067_"), "Lfgp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#keyboard
    static jobject get_field_keyboard(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "keyboardHandler", "field_1774", "keyboard", "f_91068_"), "Lfgn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#keyboard
    static void set_field_keyboard(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "keyboardHandler", "field_1774", "keyboard", "f_91068_"), "Lfgn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#navigationType
    static jobject get_field_navigationType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "lastInputType", "field_41782", "navigationType", "f_263699_"), "Lfgl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#navigationType
    static void set_field_navigationType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "lastInputType", "field_41782", "navigationType", "f_263699_"), "Lfgl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#runDirectory
    static jobject get_field_runDirectory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "gameDirectory", "field_1697", "runDirectory", "f_91069_"), "Ljava/io/File;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#runDirectory
    static void set_field_runDirectory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "gameDirectory", "field_1697", "runDirectory", "f_91069_"), "Ljava/io/File;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#gameVersion
    static jobject get_field_gameVersion(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "launchedVersion", "field_1711", "gameVersion", "f_91001_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#gameVersion
    static void set_field_gameVersion(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "launchedVersion", "field_1711", "gameVersion", "f_91001_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#versionType
    static jobject get_field_versionType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "versionType", "field_1720", "versionType", "f_91029_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#versionType
    static void set_field_versionType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "versionType", "field_1720", "versionType", "f_91029_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#networkProxy
    static jobject get_field_networkProxy(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "proxy", "field_1739", "networkProxy", "f_91030_"), "Ljava/net/Proxy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#networkProxy
    static void set_field_networkProxy(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "proxy", "field_1739", "networkProxy", "f_91030_"), "Ljava/net/Proxy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#levelStorage
    static jobject get_field_levelStorage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "levelSource", "field_1748", "levelStorage", "f_91031_"), "Lerf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#levelStorage
    static void set_field_levelStorage(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "levelSource", "field_1748", "levelStorage", "f_91031_"), "Lerf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#isDemo
    static jboolean get_field_isDemo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "demo", "field_1721", "isDemo", "f_91033_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#isDemo
    static void set_field_isDemo(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "demo", "field_1721", "isDemo", "f_91033_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#multiplayerEnabled
    static jboolean get_field_multiplayerEnabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "allowsMultiplayer", "field_25033", "multiplayerEnabled", "f_91034_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#multiplayerEnabled
    static void set_field_multiplayerEnabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ae", "allowsMultiplayer", "field_25033", "multiplayerEnabled", "f_91034_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#onlineChatEnabled
    static jboolean get_field_onlineChatEnabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "allowsChat", "field_25034", "onlineChatEnabled", "f_91035_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#onlineChatEnabled
    static void set_field_onlineChatEnabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("af", "allowsChat", "field_25034", "onlineChatEnabled", "f_91035_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#resourceManager
    static jobject get_field_resourceManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ag", "resourceManager", "field_1745", "resourceManager", "f_91036_"), "Laub;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#resourceManager
    static void set_field_resourceManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ag", "resourceManager", "field_1745", "resourceManager", "f_91036_"), "Laub;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#defaultResourcePack
    static jobject get_field_defaultResourcePack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ah", "vanillaPackResources", "field_40380", "defaultResourcePack", "f_243783_"), "Lasu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#defaultResourcePack
    static void set_field_defaultResourcePack(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ah", "vanillaPackResources", "field_40380", "defaultResourcePack", "f_243783_"), "Lasu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#serverResourcePackLoader
    static jobject get_field_serverResourcePackLoader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ai", "downloadedPackSource", "field_40381", "serverResourcePackLoader", "f_243981_"), "Lgtc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#serverResourcePackLoader
    static void set_field_serverResourcePackLoader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ai", "downloadedPackSource", "field_40381", "serverResourcePackLoader", "f_243981_"), "Lgtc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#resourcePackManager
    static jobject get_field_resourcePackManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aj", "resourcePackRepository", "field_1715", "resourcePackManager", "f_91038_"), "Latp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#resourcePackManager
    static void set_field_resourcePackManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aj", "resourcePackRepository", "field_1715", "resourcePackManager", "f_91038_"), "Latp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#languageManager
    static jobject get_field_languageManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "languageManager", "field_1717", "languageManager", "f_91039_"), "Lgrt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#languageManager
    static void set_field_languageManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ak", "languageManager", "field_1717", "languageManager", "f_91039_"), "Lgrt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#blockColors
    static jobject get_field_blockColors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("al", "blockColors", "field_1751", "blockColors", "f_91040_"), "Lfhq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#blockColors
    static void set_field_blockColors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("al", "blockColors", "field_1751", "blockColors", "f_91040_"), "Lfhq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#itemColors
    static jobject get_field_itemColors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("am", "itemColors", "field_1760", "itemColors", "f_91041_"), "Lfhu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#itemColors
    static void set_field_itemColors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("am", "itemColors", "field_1760", "itemColors", "f_91041_"), "Lfhu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#framebuffer
    static jobject get_field_framebuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("an", "mainRenderTarget", "field_1689", "framebuffer", "f_91042_"), "Lezv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#framebuffer
    static void set_field_framebuffer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("an", "mainRenderTarget", "field_1689", "framebuffer", "f_91042_"), "Lezv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#soundManager
    static jobject get_field_soundManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ao", "soundManager", "field_1727", "soundManager", "f_91043_"), "Lgvf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#soundManager
    static void set_field_soundManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ao", "soundManager", "field_1727", "soundManager", "f_91043_"), "Lgvf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#musicTracker
    static jobject get_field_musicTracker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ap", "musicManager", "field_1714", "musicTracker", "f_91044_"), "Lgva;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#musicTracker
    static void set_field_musicTracker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ap", "musicManager", "field_1714", "musicTracker", "f_91044_"), "Lgva;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#fontManager
    static jobject get_field_fontManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aq", "fontManager", "field_1708", "fontManager", "f_91045_"), "Lflb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#fontManager
    static void set_field_fontManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aq", "fontManager", "field_1708", "fontManager", "f_91045_"), "Lflb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#splashTextLoader
    static jobject get_field_splashTextLoader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ar", "splashManager", "field_17763", "splashTextLoader", "f_91046_"), "Lgrn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#splashTextLoader
    static void set_field_splashTextLoader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ar", "splashManager", "field_17763", "splashTextLoader", "f_91046_"), "Lgrn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#videoWarningManager
    static jobject get_field_videoWarningManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("as", "gpuWarnlistManager", "field_25671", "videoWarningManager", "f_91047_"), "Lget;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#videoWarningManager
    static void set_field_videoWarningManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("as", "gpuWarnlistManager", "field_25671", "videoWarningManager", "f_91047_"), "Lget;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#regionalComplianciesManager
    static jobject get_field_regionalComplianciesManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("at", "regionalCompliancies", "field_36434", "regionalComplianciesManager", "f_205120_"), "Lfgu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#regionalComplianciesManager
    static void set_field_regionalComplianciesManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("at", "regionalCompliancies", "field_36434", "regionalComplianciesManager", "f_205120_"), "Lfgu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#authenticationService
    static jobject get_field_authenticationService(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("au", "authenticationService", "field_39420", "authenticationService", "f_231338_"), "Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#authenticationService
    static void set_field_authenticationService(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("au", "authenticationService", "field_39420", "authenticationService", "f_231338_"), "Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#sessionService
    static jobject get_field_sessionService(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("av", "minecraftSessionService", "field_1723", "sessionService", "f_91048_"), "Lcom/mojang/authlib/minecraft/MinecraftSessionService;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#sessionService
    static void set_field_sessionService(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("av", "minecraftSessionService", "field_1723", "sessionService", "f_91048_"), "Lcom/mojang/authlib/minecraft/MinecraftSessionService;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#userApiService
    static jobject get_field_userApiService(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aw", "userApiService", "field_26902", "userApiService", "f_193584_"), "Lcom/mojang/authlib/minecraft/UserApiService;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#userApiService
    static void set_field_userApiService(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aw", "userApiService", "field_26902", "userApiService", "f_193584_"), "Lcom/mojang/authlib/minecraft/UserApiService;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#userPropertiesFuture
    static jobject get_field_userPropertiesFuture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ax", "userPropertiesFuture", "field_47680", "userPropertiesFuture", "f_302344_"), "Ljava/util/concurrent/CompletableFuture;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#userPropertiesFuture
    static void set_field_userPropertiesFuture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ax", "userPropertiesFuture", "field_47680", "userPropertiesFuture", "f_302344_"), "Ljava/util/concurrent/CompletableFuture;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#skinProvider
    static jobject get_field_skinProvider(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ay", "skinManager", "field_1707", "skinProvider", "f_91050_"), "Lgrm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#skinProvider
    static void set_field_skinProvider(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ay", "skinManager", "field_1707", "skinProvider", "f_91050_"), "Lgrm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#bakedModelManager
    static jobject get_field_bakedModelManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("az", "modelManager", "field_1763", "bakedModelManager", "f_91051_"), "Lgst;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#bakedModelManager
    static void set_field_bakedModelManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("az", "modelManager", "field_1763", "bakedModelManager", "f_91051_"), "Lgst;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#blockRenderManager
    static jobject get_field_blockRenderManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aA", "blockRenderer", "field_1756", "blockRenderManager", "f_91052_"), "Lgft;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#blockRenderManager
    static void set_field_blockRenderManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aA", "blockRenderer", "field_1756", "blockRenderManager", "f_91052_"), "Lgft;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#paintingManager
    static jobject get_field_paintingManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aB", "paintingTextures", "field_18008", "paintingManager", "f_91053_"), "Lgrk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#paintingManager
    static void set_field_paintingManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aB", "paintingTextures", "field_18008", "paintingManager", "f_91053_"), "Lgrk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#statusEffectSpriteManager
    static jobject get_field_statusEffectSpriteManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aC", "mobEffectTextures", "field_18173", "statusEffectSpriteManager", "f_91054_"), "Lgrj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#statusEffectSpriteManager
    static void set_field_statusEffectSpriteManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aC", "mobEffectTextures", "field_18173", "statusEffectSpriteManager", "f_91054_"), "Lgrj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#mapDecorationsAtlasManager
    static jobject get_field_mapDecorationsAtlasManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aD", "mapDecorationTextures", "field_50035", "mapDecorationsAtlasManager", "f_315453_"), "Lgri;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#mapDecorationsAtlasManager
    static void set_field_mapDecorationsAtlasManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aD", "mapDecorationTextures", "field_50035", "mapDecorationsAtlasManager", "f_315453_"), "Lgri;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#guiAtlasManager
    static jobject get_field_guiAtlasManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aE", "guiSprites", "field_45293", "guiAtlasManager", "f_291132_"), "Lfia;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#guiAtlasManager
    static void set_field_guiAtlasManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aE", "guiSprites", "field_45293", "guiAtlasManager", "f_291132_"), "Lfia;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#toastManager
    static jobject get_field_toastManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aF", "toast", "field_1702", "toastManager", "f_91003_"), "Lfkw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#toastManager
    static void set_field_toastManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aF", "toast", "field_1702", "toastManager", "f_91003_"), "Lfkw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#tutorialManager
    static jobject get_field_tutorialManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aG", "tutorial", "field_1758", "tutorialManager", "f_91005_"), "Lgwi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#tutorialManager
    static void set_field_tutorialManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aG", "tutorial", "field_1758", "tutorialManager", "f_91005_"), "Lgwi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#socialInteractionsManager
    static jobject get_field_socialInteractionsManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aH", "playerSocialManager", "field_26842", "socialInteractionsManager", "f_91006_"), "Lfsu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#socialInteractionsManager
    static void set_field_socialInteractionsManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aH", "playerSocialManager", "field_26842", "socialInteractionsManager", "f_91006_"), "Lfsu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#entityModelLoader
    static jobject get_field_entityModelLoader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aI", "entityModels", "field_27387", "entityModelLoader", "f_167844_"), "Lfyg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#entityModelLoader
    static void set_field_entityModelLoader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aI", "entityModels", "field_27387", "entityModelLoader", "f_167844_"), "Lfyg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#blockEntityRenderDispatcher
    static jobject get_field_blockEntityRenderDispatcher(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aJ", "blockEntityRenderDispatcher", "field_27388", "blockEntityRenderDispatcher", "f_167845_"), "Lggy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#blockEntityRenderDispatcher
    static void set_field_blockEntityRenderDispatcher(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aJ", "blockEntityRenderDispatcher", "field_27388", "blockEntityRenderDispatcher", "f_167845_"), "Lggy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#telemetryManager
    static jobject get_field_telemetryManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aK", "telemetryManager", "field_41331", "telemetryManager", "f_260676_"), "Lgvj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#telemetryManager
    static void set_field_telemetryManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aK", "telemetryManager", "field_41331", "telemetryManager", "f_260676_"), "Lgvj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#profileKeys
    static jobject get_field_profileKeys(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aL", "profileKeyPairManager", "field_39068", "profileKeys", "f_231337_"), "Lfzr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#profileKeys
    static void set_field_profileKeys(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aL", "profileKeyPairManager", "field_39068", "profileKeys", "f_231337_"), "Lfzr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#realmsPeriodicCheckers
    static jobject get_field_realmsPeriodicCheckers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aM", "realmsDataFetcher", "field_39718", "realmsPeriodicCheckers", "f_238717_"), "Lfdm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#realmsPeriodicCheckers
    static void set_field_realmsPeriodicCheckers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aM", "realmsDataFetcher", "field_39718", "realmsPeriodicCheckers", "f_238717_"), "Lfdm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#quickPlayLogger
    static jobject get_field_quickPlayLogger(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aN", "quickPlayLog", "field_44539", "quickPlayLogger", "f_278504_"), "Lgej;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#quickPlayLogger
    static void set_field_quickPlayLogger(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aN", "quickPlayLog", "field_44539", "quickPlayLogger", "f_278504_"), "Lgej;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#interactionManager
    static jobject get_field_interactionManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "gameMode", "field_1761", "interactionManager", "f_91072_"), "Lfzo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#interactionManager
    static void set_field_interactionManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "gameMode", "field_1761", "interactionManager", "f_91072_"), "Lfzo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "level", "field_1687", "world", "f_91073_"), "Lfzf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "level", "field_1687", "world", "f_91073_"), "Lfzf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#player
    static jobject get_field_player(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "player", "field_1724", "player", "f_91074_"), "Lgeb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#player
    static void set_field_player(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "player", "field_1724", "player", "f_91074_"), "Lgeb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#server
    static jobject get_field_server(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aO", "singleplayerServer", "field_1766", "server", "f_91007_"), "Lguo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#server
    static void set_field_server(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aO", "singleplayerServer", "field_1766", "server", "f_91007_"), "Lguo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#integratedServerConnection
    static jobject get_field_integratedServerConnection(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aP", "pendingConnection", "field_1746", "integratedServerConnection", "f_91009_"), "Lvt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#integratedServerConnection
    static void set_field_integratedServerConnection(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aP", "pendingConnection", "field_1746", "integratedServerConnection", "f_91009_"), "Lvt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#integratedServerRunning
    static jboolean get_field_integratedServerRunning(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aQ", "isLocalServer", "field_1759", "integratedServerRunning", "f_91010_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#integratedServerRunning
    static void set_field_integratedServerRunning(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aQ", "isLocalServer", "field_1759", "integratedServerRunning", "f_91010_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#cameraEntity
    static jobject get_field_cameraEntity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "cameraEntity", "field_1719", "cameraEntity", "f_91075_"), "Lbsr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#cameraEntity
    static void set_field_cameraEntity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "cameraEntity", "field_1719", "cameraEntity", "f_91075_"), "Lbsr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#targetedEntity
    static jobject get_field_targetedEntity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "crosshairPickEntity", "field_1692", "targetedEntity", "f_91076_"), "Lbsr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#targetedEntity
    static void set_field_targetedEntity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "crosshairPickEntity", "field_1692", "targetedEntity", "f_91076_"), "Lbsr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#crosshairTarget
    static jobject get_field_crosshairTarget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "hitResult", "field_1765", "crosshairTarget", "f_91077_"), "Lexa;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#crosshairTarget
    static void set_field_crosshairTarget(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "hitResult", "field_1765", "crosshairTarget", "f_91077_"), "Lexa;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#itemUseCooldown
    static jint get_field_itemUseCooldown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aR", "rightClickDelay", "field_1752", "itemUseCooldown", "f_91011_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#itemUseCooldown
    static void set_field_itemUseCooldown(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aR", "rightClickDelay", "field_1752", "itemUseCooldown", "f_91011_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.client.MinecraftClient#attackCooldown
    static jint get_field_attackCooldown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "missTime", "field_1771", "attackCooldown", "f_91078_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.MinecraftClient#attackCooldown
    static void set_field_attackCooldown(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "missTime", "field_1771", "attackCooldown", "f_91078_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#paused
    static jboolean get_field_paused(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aS", "pause", "field_1734", "paused", "f_91012_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#paused
    static void set_field_paused(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aS", "pause", "field_1734", "paused", "f_91012_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#lastMetricsSampleTime
    static jlong get_field_lastMetricsSampleTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aT", "lastNanoTime", "field_1750", "lastMetricsSampleTime", "f_91014_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#lastMetricsSampleTime
    static void set_field_lastMetricsSampleTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aT", "lastNanoTime", "field_1750", "lastMetricsSampleTime", "f_91014_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#nextDebugInfoUpdateTime
    static jlong get_field_nextDebugInfoUpdateTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aU", "lastTime", "field_1712", "nextDebugInfoUpdateTime", "f_91015_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#nextDebugInfoUpdateTime
    static void set_field_nextDebugInfoUpdateTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aU", "lastTime", "field_1712", "nextDebugInfoUpdateTime", "f_91015_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#fpsCounter
    static jint get_field_fpsCounter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aV", "frames", "field_1735", "fpsCounter", "f_91016_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#fpsCounter
    static void set_field_fpsCounter(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aV", "frames", "field_1735", "fpsCounter", "f_91016_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#skipGameRender
    static jboolean get_field_skipGameRender(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "noRender", "field_1743", "skipGameRender", "f_91079_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#skipGameRender
    static void set_field_skipGameRender(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "noRender", "field_1743", "skipGameRender", "f_91079_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#currentScreen
    static jobject get_field_currentScreen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "screen", "field_1755", "currentScreen", "f_91080_"), "Lfod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#currentScreen
    static void set_field_currentScreen(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "screen", "field_1755", "currentScreen", "f_91080_"), "Lfod;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#overlay
    static jobject get_field_overlay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aW", "overlay", "field_18175", "overlay", "f_91081_"), "Lfnx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#overlay
    static void set_field_overlay(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aW", "overlay", "field_18175", "overlay", "f_91081_"), "Lfnx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#disconnecting
    static jboolean get_field_disconnecting(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aX", "clientLevelTeardownInProgress", "field_46551", "disconnecting", "f_302283_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#disconnecting
    static void set_field_disconnecting(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aX", "clientLevelTeardownInProgress", "field_46551", "disconnecting", "f_302283_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#thread
    static jobject get_field_thread(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aY", "gameThread", "field_1696", "thread", "f_91018_"), "Ljava/lang/Thread;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#thread
    static void set_field_thread(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aY", "gameThread", "field_1696", "thread", "f_91018_"), "Ljava/lang/Thread;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#running
    static jboolean get_field_running(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aZ", "running", "field_1698", "running", "f_91019_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#running
    static void set_field_running(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aZ", "running", "field_1698", "running", "f_91019_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#crashReportSupplier
    static jobject get_field_crashReportSupplier(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ba", "delayedCrash", "field_1747", "crashReportSupplier", "f_91020_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#crashReportSupplier
    static void set_field_crashReportSupplier(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ba", "delayedCrash", "field_1747", "crashReportSupplier", "f_91020_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.MinecraftClient#currentFps
    [[maybe_unused]] static jint get_field_currentFps() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "fps", "field_1738", "currentFps", "f_91021_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#currentFps
    [[maybe_unused]] static void set_field_currentFps(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "fps", "field_1738", "currentFps", "f_91021_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#fpsDebugString
    static jobject get_field_fpsDebugString(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "fpsString", "field_1770", "fpsDebugString", "f_90977_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#fpsDebugString
    static void set_field_fpsDebugString(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "fpsString", "field_1770", "fpsDebugString", "f_90977_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#renderTime
    static jlong get_field_renderTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bc", "frameTimeNs", "field_41332", "renderTime", "f_260560_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#renderTime
    static void set_field_renderTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bc", "frameTimeNs", "field_41332", "renderTime", "f_260560_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#wireFrame
    static jboolean get_field_wireFrame(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "wireframe", "field_32144", "wireFrame", "f_167842_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#wireFrame
    static void set_field_wireFrame(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "wireframe", "field_32144", "wireFrame", "f_167842_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#debugChunkInfo
    static jboolean get_field_debugChunkInfo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "sectionPath", "field_20907", "debugChunkInfo", "f_291316_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#debugChunkInfo
    static void set_field_debugChunkInfo(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "sectionPath", "field_20907", "debugChunkInfo", "f_291316_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#debugChunkOcclusion
    static jboolean get_field_debugChunkOcclusion(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "sectionVisibility", "field_20908", "debugChunkOcclusion", "f_291317_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#debugChunkOcclusion
    static void set_field_debugChunkOcclusion(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "sectionVisibility", "field_20908", "debugChunkOcclusion", "f_291317_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.MinecraftClient#chunkCullingEnabled
    static jboolean get_field_chunkCullingEnabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "smartCull", "field_1730", "chunkCullingEnabled", "f_90980_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.MinecraftClient#chunkCullingEnabled
    static void set_field_chunkCullingEnabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "smartCull", "field_1730", "chunkCullingEnabled", "f_90980_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#windowFocused
    static jboolean get_field_windowFocused(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bd", "windowActive", "field_1695", "windowFocused", "f_91022_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#windowFocused
    static void set_field_windowFocused(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bd", "windowActive", "field_1695", "windowFocused", "f_91022_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#renderTaskQueue
    static jobject get_field_renderTaskQueue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("be", "progressTasks", "field_17404", "renderTaskQueue", "f_91023_"), "Ljava/util/Queue;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#renderTaskQueue
    static void set_field_renderTaskQueue(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("be", "progressTasks", "field_17404", "renderTaskQueue", "f_91023_"), "Ljava/util/Queue;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#resourceReloadFuture
    static jobject get_field_resourceReloadFuture(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bf", "pendingReload", "field_18174", "resourceReloadFuture", "f_91024_"), "Ljava/util/concurrent/CompletableFuture;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#resourceReloadFuture
    static void set_field_resourceReloadFuture(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bf", "pendingReload", "field_18174", "resourceReloadFuture", "f_91024_"), "Ljava/util/concurrent/CompletableFuture;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#socialInteractionsToast
    static jobject get_field_socialInteractionsToast(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bg", "socialInteractionsToast", "field_26843", "socialInteractionsToast", "f_91025_"), "Lfkx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#socialInteractionsToast
    static void set_field_socialInteractionsToast(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bg", "socialInteractionsToast", "field_26843", "socialInteractionsToast", "f_91025_"), "Lfkx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#profiler
    static jobject get_field_profiler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bh", "profiler", "field_16240", "profiler", "f_91026_"), "Lbnf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#profiler
    static void set_field_profiler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bh", "profiler", "field_16240", "profiler", "f_91026_"), "Lbnf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#trackingTick
    static jint get_field_trackingTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bi", "fpsPieRenderTicks", "field_22224", "trackingTick", "f_91027_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#trackingTick
    static void set_field_trackingTick(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bi", "fpsPieRenderTicks", "field_22224", "trackingTick", "f_91027_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#tickTimeTracker
    static jobject get_field_tickTimeTracker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bj", "fpsPieProfiler", "field_22225", "tickTimeTracker", "f_91028_"), "Lbmz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#tickTimeTracker
    static void set_field_tickTimeTracker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bj", "fpsPieProfiler", "field_22225", "tickTimeTracker", "f_91028_"), "Lbmz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#tickProfilerResult
    static jobject get_field_tickProfilerResult(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bk", "fpsPieResults", "field_22226", "tickProfilerResult", "f_91056_"), "Lbne;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#tickProfilerResult
    static void set_field_tickProfilerResult(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bk", "fpsPieResults", "field_22226", "tickProfilerResult", "f_91056_"), "Lbne;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#recorder
    static jobject get_field_recorder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bl", "metricsRecorder", "field_29569", "recorder", "f_167846_"), "Lbot;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#recorder
    static void set_field_recorder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bl", "metricsRecorder", "field_29569", "recorder", "f_167846_"), "Lbot;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#resourceReloadLogger
    static jobject get_field_resourceReloadLogger(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bm", "reloadStateTracker", "field_33697", "resourceReloadLogger", "f_167847_"), "Lfgx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#resourceReloadLogger
    static void set_field_resourceReloadLogger(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bm", "reloadStateTracker", "field_33697", "resourceReloadLogger", "f_167847_"), "Lfgx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#metricsSampleDuration
    static jlong get_field_metricsSampleDuration(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bn", "savedCpuDuration", "field_37855", "metricsSampleDuration", "f_231340_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#metricsSampleDuration
    static void set_field_metricsSampleDuration(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bn", "savedCpuDuration", "field_37855", "metricsSampleDuration", "f_231340_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#gpuUtilizationPercentage
    static jdouble get_field_gpuUtilizationPercentage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bo", "gpuUtilization", "field_37856", "gpuUtilizationPercentage", "f_231341_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#gpuUtilizationPercentage
    static void set_field_gpuUtilizationPercentage(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bo", "gpuUtilization", "field_37856", "gpuUtilizationPercentage", "f_231341_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#currentGlTimerQuery
    static jobject get_field_currentGlTimerQuery(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bp", "currentFrameProfile", "field_37857", "currentGlTimerQuery", "f_231342_"), "Lfbb$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#currentGlTimerQuery
    static void set_field_currentGlTimerQuery(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bp", "currentFrameProfile", "field_37857", "currentGlTimerQuery", "f_231342_"), "Lfbb$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#narratorManager
    static jobject get_field_narratorManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bq", "narrator", "field_39769", "narratorManager", "f_240365_"), "Lfgg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#narratorManager
    static void set_field_narratorManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bq", "narrator", "field_39769", "narratorManager", "f_240365_"), "Lfgg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#messageHandler
    static jobject get_field_messageHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("br", "chatListener", "field_39770", "messageHandler", "f_240378_"), "Lfzz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#messageHandler
    static void set_field_messageHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("br", "chatListener", "field_39770", "messageHandler", "f_240378_"), "Lfzz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#abuseReportContext
    static jobject get_field_abuseReportContext(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bs", "reportingContext", "field_39492", "abuseReportContext", "f_238638_"), "Lgao;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#abuseReportContext
    static void set_field_abuseReportContext(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bs", "reportingContext", "field_39492", "abuseReportContext", "f_238638_"), "Lgao;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#commandHistoryManager
    static jobject get_field_commandHistoryManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bt", "commandHistory", "field_45294", "commandHistoryManager", "f_290676_"), "Lfgc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#commandHistoryManager
    static void set_field_commandHistoryManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bt", "commandHistory", "field_45294", "commandHistoryManager", "f_290676_"), "Lfgc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#symlinkFinder
    static jobject get_field_symlinkFinder(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bu", "directoryValidator", "field_45295", "symlinkFinder", "f_291644_"), "Lews;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#symlinkFinder
    static void set_field_symlinkFinder(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bu", "directoryValidator", "field_45295", "symlinkFinder", "f_291644_"), "Lews;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#finishedLoading
    static jboolean get_field_finishedLoading(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bv", "gameLoadFinished", "field_45900", "finishedLoading", "f_290785_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#finishedLoading
    static void set_field_finishedLoading(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bv", "gameLoadFinished", "field_45900", "finishedLoading", "f_290785_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#startTime
    static jlong get_field_startTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bw", "clientStartTimeMs", "field_46552", "startTime", "f_302469_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#startTime
    static void set_field_startTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bw", "clientStartTimeMs", "field_46552", "startTime", "f_302469_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#uptimeInTicks
    static jlong get_field_uptimeInTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bx", "clientTickCount", "field_46553", "uptimeInTicks", "f_303581_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#uptimeInTicks
    static void set_field_uptimeInTicks(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bx", "clientTickCount", "field_46553", "uptimeInTicks", "f_303581_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.MinecraftClient#openProfilerSection
    static jobject get_field_openProfilerSection(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("by", "debugPath", "field_1701", "openProfilerSection", "f_91057_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.MinecraftClient#openProfilerSection
    static void set_field_openProfilerSection(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("by", "debugPath", "field_1701", "openProfilerSection", "f_91057_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_onFinishedLoading() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onResourceLoadFinished", "method_53465", "onFinishedLoading", "m_293750_"), "(Lfgo$b;)V");
    }

    static void onFinishedLoading(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onFinishedLoading();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_collectLoadTimes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onGameLoadFinished", "method_51736", "collectLoadTimes", "m_286052_"), "(Lfgo$b;)V");
    }

    static void collectLoadTimes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_collectLoadTimes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isFinishedLoading() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isGameLoadFinished", "method_53466", "isFinishedLoading", "m_293453_"), "()Z");
    }

    static jboolean isFinishedLoading(const jobject& obj) {
                
       const auto methodID = methodID_isFinishedLoading();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_onInitFinished() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "buildInitialScreens", "method_53527", "onInitFinished", "m_293152_"), "(Lfgo$b;)Ljava/lang/Runnable;");
    }

    static jobject onInitFinished(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onInitFinished();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createInitScreens() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addInitialScreens", "method_53525", "createInitScreens", "m_295067_"), "(Ljava/util/List;)V");
    }

    static void createInitScreens(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createInitScreens();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isCountrySetTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "countryEqualsISO3", "method_40189", "isCountrySetTo", "m_210782_"), "(Ljava/lang/Object;)Z");
    }

    static jboolean isCountrySetTo(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isCountrySetTo();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_updateWindowTitle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "updateTitle", "method_24288", "updateWindowTitle", "m_91341_"), "()V");
    }

    static void updateWindowTitle(const jobject& obj) {
                
       const auto methodID = methodID_updateWindowTitle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWindowTitle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bd", "createTitle", "method_24287", "getWindowTitle", "m_91270_"), "()Ljava/lang/String;");
    }

    static jobject getWindowTitle(const jobject& obj) {
                
       const auto methodID = methodID_getWindowTitle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createUserApiService() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createUserApiService", "method_31382", "createUserApiService", "m_193585_"), "(Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Lfua;)Lcom/mojang/authlib/minecraft/UserApiService;");
    }

    static jobject createUserApiService(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createUserApiService();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getModStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "checkModStatus", "method_24289", "getModStatus", "m_193589_"), "()Layn;");
    }

    static jobject getModStatus() {
       const auto clazz = self();
       const auto methodID = methodID_getModStatus();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_handleResourceReloadException() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "rollbackResourcePacks", "method_24226", "handleResourceReloadException", "m_91239_"), "(Ljava/lang/Throwable;Lfgo$b;)V");
    }

    static void handleResourceReloadException(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_handleResourceReloadException();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onResourceReloadFailure() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clearResourcePacksOnError", "method_31186", "onResourceReloadFailure", "m_91241_"), "(Ljava/lang/Throwable;Lwz;Lfgo$b;)V");
    }

    static void onResourceReloadFailure(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onResourceReloadFailure();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onForcedResourceReloadFailure() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("be", "abortResourcePackRecovery", "method_49294", "onForcedResourceReloadFailure", "m_272186_"), "()V");
    }

    static void onForcedResourceReloadFailure(const jobject& obj) {
                
       const auto methodID = methodID_onForcedResourceReloadFailure();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_showResourceReloadFailureToast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addResourcePackLoadFailToast", "method_49292", "showResourceReloadFailureToast", "m_271937_"), "(Lwz;)V");
    }

    static void showResourceReloadFailureToast(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_showResourceReloadFailureToast();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "run", "method_1514", "run", "m_91374_"), "()V");
    }

    static void run(const jobject& obj) {
                
       const auto methodID = methodID_run();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onFontOptionsChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "updateFontOptions", "method_57017", "onFontOptionsChanged", "m_323618_"), "()V");
    }

    static void onFontOptionsChanged(const jobject& obj) {
                
       const auto methodID = methodID_onFontOptionsChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleGlErrorByDisableVsync() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onFullscreenError", "method_1506", "handleGlErrorByDisableVsync", "m_91113_"), "(IJ)V");
    }

    static void handleGlErrorByDisableVsync(const jobject& obj, const jint& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_handleGlErrorByDisableVsync();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getFramebuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getMainRenderTarget", "method_1522", "getFramebuffer", "m_91385_"), "()Lezv;");
    }

    static jobject getFramebuffer(const jobject& obj) {
                
       const auto methodID = methodID_getFramebuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGameVersion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getLaunchedVersion", "method_1515", "getGameVersion", "m_91388_"), "()Ljava/lang/String;");
    }

    static jobject getGameVersion(const jobject& obj) {
                
       const auto methodID = methodID_getGameVersion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVersionType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getVersionType", "method_1547", "getVersionType", "m_91389_"), "()Ljava/lang/String;");
    }

    static jobject getVersionType(const jobject& obj) {
                
       const auto methodID = methodID_getVersionType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCrashReportSupplierAndAddDetails() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "delayCrash", "method_1494", "setCrashReportSupplierAndAddDetails", "m_231412_"), "(Lo;)V");
    }

    static void setCrashReportSupplierAndAddDetails(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCrashReportSupplierAndAddDetails();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setCrashReportSupplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "delayCrashRaw", "method_43587", "setCrashReportSupplier", "m_231439_"), "(Lo;)V");
    }

    static void setCrashReportSupplier(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCrashReportSupplier();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_printCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bf", "handleDelayedCrash", "method_54579", "printCrashReport", "m_306172_"), "()V");
    }

    static void printCrashReport(const jobject& obj) {
                
       const auto methodID = methodID_printCrashReport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__printCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "emergencySaveAndCrash", "method_54580", "printCrashReport", "m_306708_"), "(Lo;)V");
    }

    static void _printCrashReport(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__printCrashReport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___printCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "crash", "method_1565", "printCrashReport", "m_91332_"), "(Lfgo;Ljava/io/File;Lo;)V");
    }

    static void __printCrashReport(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID___printCrashReport();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_forcesUnicodeFont() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "isEnforceUnicode", "method_1573", "forcesUnicodeFont", "m_91390_"), "()Z");
    }

    static jboolean forcesUnicodeFont(const jobject& obj) {
                
       const auto methodID = methodID_forcesUnicodeFont();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_reloadResources() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "reloadResourcePacks", "method_1521", "reloadResources", "m_91391_"), "()Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject reloadResources(const jobject& obj) {
                
       const auto methodID = methodID_reloadResources();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__reloadResources() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "reloadResourcePacks", "method_36561", "reloadResources", "m_168019_"), "(ZLfgo$b;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject _reloadResources(const jobject& obj, const jboolean& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__reloadResources();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_checkGameData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bg", "selfTest", "method_17044", "checkGameData", "m_91273_"), "()V");
    }

    static void checkGameData(const jobject& obj) {
                
       const auto methodID = methodID_checkGameData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLevelStorage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getLevelSource", "method_1586", "getLevelStorage", "m_91392_"), "()Lerf;");
    }

    static jobject getLevelStorage(const jobject& obj) {
                
       const auto methodID = methodID_getLevelStorage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_openChatScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openChatScreen", "method_29041", "openChatScreen", "m_91326_"), "(Ljava/lang/String;)V");
    }

    static void openChatScreen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openChatScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setScreen", "method_1507", "setScreen", "m_91152_"), "(Lfod;)V");
    }

    static void setScreen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setOverlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOverlay", "method_18502", "setOverlay", "m_91150_"), "(Lfnx;)V");
    }

    static void setOverlay(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOverlay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "destroy", "method_1490", "stop", "m_91393_"), "()V");
    }

    static void stop(const jobject& obj) {
                
       const auto methodID = methodID_stop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "runTick", "method_1523", "render", "m_91383_"), "(Z)V");
    }

    static void render(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_startMonitor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "constructProfiler", "method_24458", "startMonitor", "m_167970_"), "(ZLbni;)Lbnf;");
    }

    static jobject startMonitor(const jobject& obj, const jboolean& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_startMonitor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_endMonitor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "finishProfilers", "method_24460", "endMonitor", "m_91338_"), "(ZLbni;)V");
    }

    static void endMonitor(const jobject& obj, const jboolean& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_endMonitor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onResolutionChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resizeDisplay", "method_15993", "onResolutionChanged", "m_5741_"), "()V");
    }

    static void onResolutionChanged(const jobject& obj) {
                
       const auto methodID = methodID_onResolutionChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onCursorEnterChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "cursorEntered", "method_30133", "onCursorEnterChanged", "m_5740_"), "()V");
    }

    static void onCursorEnterChanged(const jobject& obj) {
                
       const auto methodID = methodID_onCursorEnterChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCurrentFps() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getFps", "method_47599", "getCurrentFps", "m_260875_"), "()I");
    }

    static jint getCurrentFps(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentFps();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRenderTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getFrameTimeNs", "method_47600", "getRenderTime", "m_261169_"), "()J");
    }

    static jlong getRenderTime(const jobject& obj) {
                
       const auto methodID = methodID_getRenderTime();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFramerateLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bh", "getFramerateLimit", "method_16009", "getFramerateLimit", "m_91275_"), "()I");
    }

    static jint getFramerateLimit(const jobject& obj) {
                
       const auto methodID = methodID_getFramerateLimit();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_cleanUpAfterCrash() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bi", "emergencySave", "method_1519", "cleanUpAfterCrash", "m_91394_"), "()V");
    }

    static void cleanUpAfterCrash(const jobject& obj) {
                
       const auto methodID = methodID_cleanUpAfterCrash();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_toggleDebugProfiler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "debugClientMetricsStart", "method_34745", "toggleDebugProfiler", "m_167946_"), "(Ljava/util/function/Consumer;)Z");
    }

    static jboolean toggleDebugProfiler(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toggleDebugProfiler();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopRecorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bj", "debugClientMetricsStop", "method_37286", "stopRecorder", "m_167975_"), "()V");
    }

    static void stopRecorder(const jobject& obj) {
                
       const auto methodID = methodID_stopRecorder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_forceStopRecorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bk", "debugClientMetricsCancel", "method_41733", "forceStopRecorder", "m_231418_"), "()V");
    }

    static void forceStopRecorder(const jobject& obj) {
                
       const auto methodID = methodID_forceStopRecorder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_saveProfilingResult() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "archiveProfilingReport", "method_37275", "saveProfilingResult", "m_167856_"), "(Lac;Ljava/util/List;)Ljava/nio/file/Path;");
    }

    static jobject saveProfilingResult(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_saveProfilingResult();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_handleProfilerKeyPress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "debugFpsMeterKeyPress", "method_1524", "handleProfilerKeyPress", "m_91111_"), "(I)V");
    }

    static void handleProfilerKeyPress(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_handleProfilerKeyPress();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drawProfilerResults() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "renderFpsMeter", "method_1492", "drawProfilerResults", "m_280564_"), "(Lfhz;Lbne;)V");
    }

    static void drawProfilerResults(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_drawProfilerResults();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_scheduleStop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "stop", "method_1592", "scheduleStop", "m_91395_"), "()V");
    }

    static void scheduleStop(const jobject& obj) {
                
       const auto methodID = methodID_scheduleStop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "isRunning", "method_22108", "isRunning", "m_91396_"), "()Z");
    }

    static jboolean isRunning(const jobject& obj) {
                
       const auto methodID = methodID_isRunning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_openGameMenu() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "pauseGame", "method_20539", "openGameMenu", "m_91358_"), "(Z)V");
    }

    static void openGameMenu(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_openGameMenu();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_handleBlockBreaking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "continueAttack", "method_1590", "handleBlockBreaking", "m_91386_"), "(Z)V");
    }

    static void handleBlockBreaking(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_handleBlockBreaking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_doAttack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bl", "startAttack", "method_1536", "doAttack", "m_202354_"), "()Z");
    }

    static jboolean doAttack(const jobject& obj) {
                
       const auto methodID = methodID_doAttack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_doItemUse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bm", "startUseItem", "method_1583", "doItemUse", "m_91277_"), "()V");
    }

    static void doItemUse(const jobject& obj) {
                
       const auto methodID = methodID_doItemUse();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMusicTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getMusicManager", "method_1538", "getMusicTracker", "m_91397_"), "()Lgva;");
    }

    static jobject getMusicTracker(const jobject& obj) {
                
       const auto methodID = methodID_getMusicTracker();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "tick", "method_1574", "tick", "m_91398_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bn", "isLevelRunningNormally", "method_60647", "shouldTick", "m_339976_"), "()Z");
    }

    static jboolean shouldTick(const jobject& obj) {
                
       const auto methodID = methodID_shouldTick();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isConnectedToServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bo", "isMultiplayerServer", "method_31321", "isConnectedToServer", "m_91278_"), "()Z");
    }

    static jboolean isConnectedToServer(const jobject& obj) {
                
       const auto methodID = methodID_isConnectedToServer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleInputEvents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bp", "handleKeybinds", "method_1508", "handleInputEvents", "m_91279_"), "()V");
    }

    static void handleInputEvents(const jobject& obj) {
                
       const auto methodID = methodID_handleInputEvents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTelemetryManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "getTelemetryManager", "method_47601", "getTelemetryManager", "m_261007_"), "()Lgvj;");
    }

    static jobject getTelemetryManager(const jobject& obj) {
                
       const auto methodID = methodID_getTelemetryManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGpuUtilizationPercentage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getGpuUtilization", "method_41734", "getGpuUtilizationPercentage", "m_231464_"), "()D");
    }

    static jdouble getGpuUtilizationPercentage(const jobject& obj) {
                
       const auto methodID = methodID_getGpuUtilizationPercentage();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getProfileKeys() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getProfileKeyPairManager", "method_43590", "getProfileKeys", "m_231465_"), "()Lfzr;");
    }

    static jobject getProfileKeys(const jobject& obj) {
                
       const auto methodID = methodID_getProfileKeys();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createIntegratedServerLoader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "createWorldOpenFlows", "method_41735", "createIntegratedServerLoader", "m_231466_"), "()Lftm;");
    }

    static jobject createIntegratedServerLoader(const jobject& obj) {
                
       const auto methodID = methodID_createIntegratedServerLoader();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_startIntegratedServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doWorldLoad", "method_29610", "startIntegratedServer", "m_261031_"), "(Lerf$c;Latp;Lalp;Z)V");
    }

    static void startIntegratedServer(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_startIntegratedServer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_joinWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLevel", "method_1481", "joinWorld", "m_91156_"), "(Lfzf;Lfob$a;)V");
    }

    static void joinWorld(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_joinWorld();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_disconnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "disconnect", "method_18099", "disconnect", "m_293444_"), "()V");
    }

    static void disconnect(const jobject& obj) {
                
       const auto methodID = methodID_disconnect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__disconnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "disconnect", "method_56134", "disconnect", "m_91320_"), "(Lfod;)V");
    }

    static void _disconnect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__disconnect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___disconnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "disconnect", "method_18096", "disconnect", "m_322774_"), "(Lfod;Z)V");
    }

    static void __disconnect(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID___disconnect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onDisconnected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "clearDownloadedResourcePacks", "method_55505", "onDisconnected", "m_305121_"), "()V");
    }

    static void onDisconnected(const jobject& obj) {
                
       const auto methodID = methodID_onDisconnected();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_enterReconfiguration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "clearClientLevel", "method_52703", "enterReconfiguration", "m_294188_"), "(Lfod;)V");
    }

    static void enterReconfiguration(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_enterReconfiguration();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_reset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "updateScreenAndTick", "method_18098", "reset", "m_91362_"), "(Lfod;)V");
    }

    static void reset(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_reset();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setScreenAndRender() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "forceSetScreen", "method_29970", "setScreenAndRender", "m_91346_"), "(Lfod;)V");
    }

    static void setScreenAndRender(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setScreenAndRender();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateLevelInEngines", "method_18097", "setWorld", "m_91324_"), "(Lfzf;)V");
    }

    static void setWorld(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setWorld();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getUserProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bq", "userProperties", "method_55607", "getUserProperties", "m_307512_"), "()Lcom/mojang/authlib/minecraft/UserApiService$UserProperties;");
    }

    static jobject getUserProperties(const jobject& obj) {
                
       const auto methodID = methodID_getUserProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isOptionalTelemetryEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "telemetryOptInExtra", "method_47602", "isOptionalTelemetryEnabled", "m_260979_"), "()Z");
    }

    static jboolean isOptionalTelemetryEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isOptionalTelemetryEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isOptionalTelemetryEnabledByApi() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "extraTelemetryAvailable", "method_47595", "isOptionalTelemetryEnabledByApi", "m_261227_"), "()Z");
    }

    static jboolean isOptionalTelemetryEnabledByApi(const jobject& obj) {
                
       const auto methodID = methodID_isOptionalTelemetryEnabledByApi();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isTelemetryEnabledByApi() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "allowsTelemetry", "method_47596", "isTelemetryEnabledByApi", "m_261210_"), "()Z");
    }

    static jboolean isTelemetryEnabledByApi(const jobject& obj) {
                
       const auto methodID = methodID_isTelemetryEnabledByApi();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isMultiplayerEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "allowsMultiplayer", "method_29043", "isMultiplayerEnabled", "m_91400_"), "()Z");
    }

    static jboolean isMultiplayerEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isMultiplayerEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isRealmsEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "allowsRealms", "method_35706", "isRealmsEnabled", "m_168021_"), "()Z");
    }

    static jboolean isRealmsEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isRealmsEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMultiplayerBanDetails() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "multiplayerBan", "method_44647", "getMultiplayerBanDetails", "m_239210_"), "()Lcom/mojang/authlib/minecraft/BanDetails;");
    }

    static jobject getMultiplayerBanDetails(const jobject& obj) {
                
       const auto methodID = methodID_getMultiplayerBanDetails();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isUsernameBanned() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "isNameBanned", "method_53518", "isUsernameBanned", "m_294837_"), "()Z");
    }

    static jboolean isUsernameBanned(const jobject& obj) {
                
       const auto methodID = methodID_isUsernameBanned();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldBlockMessages() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isBlocked", "method_29042", "shouldBlockMessages", "m_91246_"), "(Ljava/util/UUID;)Z");
    }

    static jboolean shouldBlockMessages(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldBlockMessages();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getChatRestriction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "getChatStatus", "method_33884", "getChatRestriction", "m_168022_"), "()Lfgo$a;");
    }

    static jobject getChatRestriction(const jobject& obj) {
                
       const auto methodID = methodID_getChatRestriction();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__isDemo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "isDemo", "method_1530", "isDemo", "m_91402_"), "()Z");
    }

    static jboolean _isDemo(const jobject& obj) {
                
       const auto methodID = methodID__isDemo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNetworkHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L", "getConnection", "method_1562", "getNetworkHandler", "m_91403_"), "()Lfzg;");
    }

    static jobject getNetworkHandler(const jobject& obj) {
                
       const auto methodID = methodID_getNetworkHandler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isHudEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("M", "renderNames", "method_1498", "isHudEnabled", "m_91404_"), "()Z");
    }

    static jboolean isHudEnabled() {
       const auto clazz = self();
       const auto methodID = methodID_isHudEnabled();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID);
    };
    
    static jmethodID methodID_isFancyGraphicsOrBetter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("N", "useFancyGraphics", "method_1517", "isFancyGraphicsOrBetter", "m_91405_"), "()Z");
    }

    static jboolean isFancyGraphicsOrBetter() {
       const auto clazz = self();
       const auto methodID = methodID_isFancyGraphicsOrBetter();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID);
    };
    
    static jmethodID methodID_isFabulousGraphicsOrBetter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("O", "useShaderTransparency", "method_29611", "isFabulousGraphicsOrBetter", "m_91085_"), "()Z");
    }

    static jboolean isFabulousGraphicsOrBetter() {
       const auto clazz = self();
       const auto methodID = methodID_isFabulousGraphicsOrBetter();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID);
    };
    
    static jmethodID methodID_isAmbientOcclusionEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("P", "useAmbientOcclusion", "method_1588", "isAmbientOcclusionEnabled", "m_91086_"), "()Z");
    }

    static jboolean isAmbientOcclusionEnabled() {
       const auto clazz = self();
       const auto methodID = methodID_isAmbientOcclusionEnabled();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID);
    };
    
    static jmethodID methodID_doItemPick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("br", "pickBlock", "method_1511", "doItemPick", "m_91280_"), "()V");
    }

    static void doItemPick(const jobject& obj) {
                
       const auto methodID = methodID_doItemPick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_addBlockEntityNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addCustomNbtData", "method_1499", "addBlockEntityNbt", "m_263196_"), "(Lcuq;Ldqh;Lka;)V");
    }

    static void addBlockEntityNbt(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_addBlockEntityNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addDetailsToCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "fillReport", "method_1587", "addDetailsToCrashReport", "m_91354_"), "(Lo;)Lo;");
    }

    static jobject addDetailsToCrashReport(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addDetailsToCrashReport();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addSystemDetailsToCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fillReport", "method_22681", "addSystemDetailsToCrashReport", "m_167872_"), "(Lfgo;Lgrt;Ljava/lang/String;Lfgs;Lo;)V");
    }

    static void addSystemDetailsToCrashReport(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_addSystemDetailsToCrashReport();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_formatSeconds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "formatSeconds", "method_54116", "formatSeconds", "m_306888_"), "(D)Ljava/lang/String;");
    }

    static jobject formatSeconds(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_formatSeconds();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addUptimesToCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillUptime", "method_54117", "addUptimesToCrashReport", "m_304722_"), "(Lp;)V");
    }

    static void addUptimesToCrashReport(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addUptimesToCrashReport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__addSystemDetailsToCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fillSystemReport", "method_37274", "addSystemDetailsToCrashReport", "m_167850_"), "(Lac;Lfgo;Lgrt;Ljava/lang/String;Lfgs;)Lac;");
    }

    static jobject _addSystemDetailsToCrashReport(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID__addSystemDetailsToCrashReport();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getInstance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("Q", "getInstance", "method_1551", "getInstance", "m_91087_"), "()Lfgo;");
    }

    static jobject getInstance() {
       const auto clazz = self();
       const auto methodID = methodID_getInstance();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_reloadResourcesConcurrently() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R", "delayTextureReload", "method_1513", "reloadResourcesConcurrently", "m_91088_"), "()Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject reloadResourcesConcurrently(const jobject& obj) {
                
       const auto methodID = methodID_reloadResourcesConcurrently();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_ensureAbuseReportContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateReportEnvironment", "method_44376", "ensureAbuseReportContext", "m_239476_"), "(Lgal;)V");
    }

    static void ensureAbuseReportContext(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_ensureAbuseReportContext();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCurrentServerEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("S", "getCurrentServer", "method_1558", "getCurrentServerEntry", "m_91089_"), "()Lfzt;");
    }

    static jobject getCurrentServerEntry(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentServerEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInSingleplayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("T", "isLocalServer", "method_1542", "isInSingleplayer", "m_91090_"), "()Z");
    }

    static jboolean isInSingleplayer(const jobject& obj) {
                
       const auto methodID = methodID_isInSingleplayer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isIntegratedServerRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("U", "hasSingleplayerServer", "method_1496", "isIntegratedServerRunning", "m_91091_"), "()Z");
    }

    static jboolean isIntegratedServerRunning(const jobject& obj) {
                
       const auto methodID = methodID_isIntegratedServerRunning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("V", "getSingleplayerServer", "method_1576", "getServer", "m_91092_"), "()Lguo;");
    }

    static jobject getServer(const jobject& obj) {
                
       const auto methodID = methodID_getServer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isConnectedToLocalServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("W", "isSingleplayer", "method_47392", "isConnectedToLocalServer", "m_257720_"), "()Z");
    }

    static jboolean isConnectedToLocalServer(const jobject& obj) {
                
       const auto methodID = methodID_isConnectedToLocalServer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_uuidEquals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isLocalPlayer", "method_52701", "uuidEquals", "m_292661_"), "(Ljava/util/UUID;)Z");
    }

    static jboolean uuidEquals(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_uuidEquals();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSession() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("X", "getUser", "method_1548", "getSession", "m_91094_"), "()Lfhb;");
    }

    static jobject getSession(const jobject& obj) {
                
       const auto methodID = methodID_getSession();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGameProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Y", "getGameProfile", "method_53462", "getGameProfile", "m_294346_"), "()Lcom/mojang/authlib/GameProfile;");
    }

    static jobject getGameProfile(const jobject& obj) {
                
       const auto methodID = methodID_getGameProfile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNetworkProxy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Z", "getProxy", "method_1487", "getNetworkProxy", "m_91096_"), "()Ljava/net/Proxy;");
    }

    static jobject getNetworkProxy(const jobject& obj) {
                
       const auto methodID = methodID_getNetworkProxy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTextureManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "getTextureManager", "method_1531", "getTextureManager", "m_91097_"), "()Lgqm;");
    }

    static jobject getTextureManager(const jobject& obj) {
                
       const auto methodID = methodID_getTextureManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getResourceManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "getResourceManager", "method_1478", "getResourceManager", "m_91098_"), "()Laue;");
    }

    static jobject getResourceManager(const jobject& obj) {
                
       const auto methodID = methodID_getResourceManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getResourcePackManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ac", "getResourcePackRepository", "method_1520", "getResourcePackManager", "m_91099_"), "()Latp;");
    }

    static jobject getResourcePackManager(const jobject& obj) {
                
       const auto methodID = methodID_getResourcePackManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultResourcePack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ad", "getVanillaPackResources", "method_45573", "getDefaultResourcePack", "m_246804_"), "()Lasu;");
    }

    static jobject getDefaultResourcePack(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultResourcePack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServerResourcePackProvider() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ae", "getDownloadedPackSource", "method_1516", "getServerResourcePackProvider", "m_247489_"), "()Lgtc;");
    }

    static jobject getServerResourcePackProvider(const jobject& obj) {
                
       const auto methodID = methodID_getServerResourcePackProvider();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getResourcePackDir() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("af", "getResourcePackDirectory", "method_1479", "getResourcePackDir", "m_245161_"), "()Ljava/nio/file/Path;");
    }

    static jobject getResourcePackDir(const jobject& obj) {
                
       const auto methodID = methodID_getResourcePackDir();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLanguageManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ag", "getLanguageManager", "method_1526", "getLanguageManager", "m_91102_"), "()Lgrt;");
    }

    static jobject getLanguageManager(const jobject& obj) {
                
       const auto methodID = methodID_getLanguageManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpriteAtlas() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getTextureAtlas", "method_1549", "getSpriteAtlas", "m_91258_"), "(Lakr;)Ljava/util/function/Function;");
    }

    static jobject getSpriteAtlas(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSpriteAtlas();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPaused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ah", "isPaused", "method_1493", "isPaused", "m_91104_"), "()Z");
    }

    static jboolean isPaused(const jobject& obj) {
                
       const auto methodID = methodID_isPaused();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVideoWarningManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ai", "getGpuWarnlistManager", "method_30049", "getVideoWarningManager", "m_91105_"), "()Lget;");
    }

    static jobject getVideoWarningManager(const jobject& obj) {
                
       const auto methodID = methodID_getVideoWarningManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSoundManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aj", "getSoundManager", "method_1483", "getSoundManager", "m_91106_"), "()Lgvf;");
    }

    static jobject getSoundManager(const jobject& obj) {
                
       const auto methodID = methodID_getSoundManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMusicType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ak", "getSituationalMusic", "method_1544", "getMusicType", "m_91107_"), "()Lavm;");
    }

    static jobject getMusicType(const jobject& obj) {
                
       const auto methodID = methodID_getMusicType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSessionService() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("al", "getMinecraftSessionService", "method_1495", "getSessionService", "m_91108_"), "()Lcom/mojang/authlib/minecraft/MinecraftSessionService;");
    }

    static jobject getSessionService(const jobject& obj) {
                
       const auto methodID = methodID_getSessionService();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSkinProvider() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("am", "getSkinManager", "method_1582", "getSkinProvider", "m_91109_"), "()Lgrm;");
    }

    static jobject getSkinProvider(const jobject& obj) {
                
       const auto methodID = methodID_getSkinProvider();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCameraEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("an", "getCameraEntity", "method_1560", "getCameraEntity", "m_91288_"), "()Lbsr;");
    }

    static jobject getCameraEntity(const jobject& obj) {
                
       const auto methodID = methodID_getCameraEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCameraEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCameraEntity", "method_1504", "setCameraEntity", "m_91118_"), "(Lbsr;)V");
    }

    static void setCameraEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCameraEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasOutline() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "shouldEntityAppearGlowing", "method_27022", "hasOutline", "m_91314_"), "(Lbsr;)Z");
    }

    static jboolean hasOutline(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_hasOutline();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getThread() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("az", "getRunningThread", "method_3777", "getThread", "m_6304_"), "()Ljava/lang/Thread;");
    }

    static jobject getThread(const jobject& obj) {
                
       const auto methodID = methodID_getThread();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "wrapRunnable", "method_16211", "createTask", "m_6681_"), "(Ljava/lang/Runnable;)Ljava/lang/Runnable;");
    }

    static jobject createTask(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createTask();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canExecute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "shouldRun", "method_18856", "canExecute", "m_6362_"), "(Ljava/lang/Runnable;)Z");
    }

    static jboolean canExecute(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canExecute();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBlockRenderManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ao", "getBlockRenderer", "method_1541", "getBlockRenderManager", "m_91289_"), "()Lgft;");
    }

    static jobject getBlockRenderManager(const jobject& obj) {
                
       const auto methodID = methodID_getBlockRenderManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntityRenderDispatcher() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ap", "getEntityRenderDispatcher", "method_1561", "getEntityRenderDispatcher", "m_91290_"), "()Lgkh;");
    }

    static jobject getEntityRenderDispatcher(const jobject& obj) {
                
       const auto methodID = methodID_getEntityRenderDispatcher();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockEntityRenderDispatcher() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aq", "getBlockEntityRenderDispatcher", "method_31975", "getBlockEntityRenderDispatcher", "m_167982_"), "()Lggy;");
    }

    static jobject getBlockEntityRenderDispatcher(const jobject& obj) {
                
       const auto methodID = methodID_getBlockEntityRenderDispatcher();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getItemRenderer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ar", "getItemRenderer", "method_1480", "getItemRenderer", "m_91291_"), "()Lglh;");
    }

    static jobject getItemRenderer(const jobject& obj) {
                
       const auto methodID = methodID_getItemRenderer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDataFixer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("as", "getFixerUpper", "method_1543", "getDataFixer", "m_91295_"), "()Lcom/mojang/datafixers/DataFixer;");
    }

    static jobject getDataFixer(const jobject& obj) {
                
       const auto methodID = methodID_getDataFixer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRenderTickCounter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("at", "getTimer", "method_60646", "getRenderTickCounter", "m_338668_"), "()Lfgf;");
    }

    static jobject getRenderTickCounter(const jobject& obj) {
                
       const auto methodID = methodID_getRenderTickCounter();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockColors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("au", "getBlockColors", "method_1505", "getBlockColors", "m_91298_"), "()Lfhq;");
    }

    static jobject getBlockColors(const jobject& obj) {
                
       const auto methodID = methodID_getBlockColors();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasReducedDebugInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("av", "showOnlyReducedInfo", "method_1555", "hasReducedDebugInfo", "m_91299_"), "()Z");
    }

    static jboolean hasReducedDebugInfo(const jobject& obj) {
                
       const auto methodID = methodID_hasReducedDebugInfo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getToastManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aw", "getToasts", "method_1566", "getToastManager", "m_91300_"), "()Lfkw;");
    }

    static jobject getToastManager(const jobject& obj) {
                
       const auto methodID = methodID_getToastManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTutorialManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ax", "getTutorial", "method_1577", "getTutorialManager", "m_91301_"), "()Lgwi;");
    }

    static jobject getTutorialManager(const jobject& obj) {
                
       const auto methodID = methodID_getTutorialManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isWindowFocused() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aA", "isWindowActive", "method_1569", "isWindowFocused", "m_91302_"), "()Z");
    }

    static jboolean isWindowFocused(const jobject& obj) {
                
       const auto methodID = methodID_isWindowFocused();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCreativeHotbarStorage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aB", "getHotbarManager", "method_1571", "getCreativeHotbarStorage", "m_91303_"), "()Lfgk;");
    }

    static jobject getCreativeHotbarStorage(const jobject& obj) {
                
       const auto methodID = methodID_getCreativeHotbarStorage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBakedModelManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aC", "getModelManager", "method_1554", "getBakedModelManager", "m_91304_"), "()Lgst;");
    }

    static jobject getBakedModelManager(const jobject& obj) {
                
       const auto methodID = methodID_getBakedModelManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPaintingManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aD", "getPaintingTextures", "method_18321", "getPaintingManager", "m_91305_"), "()Lgrk;");
    }

    static jobject getPaintingManager(const jobject& obj) {
                
       const auto methodID = methodID_getPaintingManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStatusEffectSpriteManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aE", "getMobEffectTextures", "method_18505", "getStatusEffectSpriteManager", "m_91306_"), "()Lgrj;");
    }

    static jobject getStatusEffectSpriteManager(const jobject& obj) {
                
       const auto methodID = methodID_getStatusEffectSpriteManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMapDecorationsAtlasManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aF", "getMapDecorationTextures", "method_58476", "getMapDecorationsAtlasManager", "m_319582_"), "()Lgri;");
    }

    static jobject getMapDecorationsAtlasManager(const jobject& obj) {
                
       const auto methodID = methodID_getMapDecorationsAtlasManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGuiAtlasManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aG", "getGuiSprites", "method_52699", "getGuiAtlasManager", "m_292761_"), "()Lfia;");
    }

    static jobject getGuiAtlasManager(const jobject& obj) {
                
       const auto methodID = methodID_getGuiAtlasManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onWindowFocusChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWindowActive", "method_15995", "onWindowFocusChanged", "m_7440_"), "(Z)V");
    }

    static void onWindowFocusChanged(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_onWindowFocusChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_takePanorama() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "grabPanoramixScreenshot", "method_35698", "takePanorama", "m_167899_"), "(Ljava/io/File;II)Lwz;");
    }

    static jobject takePanorama(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_takePanorama();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_takeHugeScreenshot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "grabHugeScreenshot", "method_35699", "takeHugeScreenshot", "m_167903_"), "(Ljava/io/File;IIII)Lwz;");
    }

    static jobject takeHugeScreenshot(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_takeHugeScreenshot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getProfiler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aH", "getProfiler", "method_16011", "getProfiler", "m_91307_"), "()Lbnf;");
    }

    static jobject getProfiler(const jobject& obj) {
                
       const auto methodID = methodID_getProfiler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWorldGenerationProgressTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aI", "getProgressListener", "method_35703", "getWorldGenerationProgressTracker", "m_167983_"), "()Larh;");
    }

    static jobject getWorldGenerationProgressTracker(const jobject& obj) {
                
       const auto methodID = methodID_getWorldGenerationProgressTracker();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSplashTextLoader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aJ", "getSplashManager", "method_18095", "getSplashTextLoader", "m_91310_"), "()Lgrn;");
    }

    static jobject getSplashTextLoader(const jobject& obj) {
                
       const auto methodID = methodID_getSplashTextLoader();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOverlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aK", "getOverlay", "method_18506", "getOverlay", "m_91265_"), "()Lfnx;");
    }

    static jobject getOverlay(const jobject& obj) {
                
       const auto methodID = methodID_getOverlay();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSocialInteractionsManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aL", "getPlayerSocialManager", "method_31320", "getSocialInteractionsManager", "m_91266_"), "()Lfsu;");
    }

    static jobject getSocialInteractionsManager(const jobject& obj) {
                
       const auto methodID = methodID_getSocialInteractionsManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWindow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aM", "getWindow", "method_22683", "getWindow", "m_91268_"), "()Lfam;");
    }

    static jobject getWindow(const jobject& obj) {
                
       const auto methodID = methodID_getWindow();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDebugHud() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aN", "getDebugOverlay", "method_53526", "getDebugHud", "m_293199_"), "()Lfiu;");
    }

    static jobject getDebugHud(const jobject& obj) {
                
       const auto methodID = methodID_getDebugHud();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBufferBuilders() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aO", "renderBuffers", "method_22940", "getBufferBuilders", "m_91269_"), "()Lgff;");
    }

    static jobject getBufferBuilders(const jobject& obj) {
                
       const auto methodID = methodID_getBufferBuilders();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setMipmapLevels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "updateMaxMipLevel", "method_24041", "setMipmapLevels", "m_91312_"), "(I)V");
    }

    static void setMipmapLevels(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setMipmapLevels();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntityModelLoader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aP", "getEntityModels", "method_31974", "getEntityModelLoader", "m_167973_"), "()Lfyg;");
    }

    static jobject getEntityModelLoader(const jobject& obj) {
                
       const auto methodID = methodID_getEntityModelLoader();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldFilterText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aQ", "isTextFilteringEnabled", "method_33883", "shouldFilterText", "m_167974_"), "()Z");
    }

    static jboolean shouldFilterText(const jobject& obj) {
                
       const auto methodID = methodID_shouldFilterText();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadBlockList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aR", "prepareForMultiplayer", "method_38932", "loadBlockList", "m_193588_"), "()V");
    }

    static void loadBlockList(const jobject& obj) {
                
       const auto methodID = methodID_loadBlockList();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getServicesSignatureVerifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aS", "getProfileKeySignatureValidator", "method_44256", "getServicesSignatureVerifier", "m_231417_"), "()Lazb;");
    }

    static jobject getServicesSignatureVerifier(const jobject& obj) {
                
       const auto methodID = methodID_getServicesSignatureVerifier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_providesProfileKeys() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT", "canValidateProfileKeys", "method_55606", "providesProfileKeys", "m_307493_"), "()Z");
    }

    static jboolean providesProfileKeys(const jobject& obj) {
                
       const auto methodID = methodID_providesProfileKeys();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNavigationType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aU", "getLastInputType", "method_48186", "getNavigationType", "m_264529_"), "()Lfgl;");
    }

    static jobject getNavigationType(const jobject& obj) {
                
       const auto methodID = methodID_getNavigationType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setNavigationType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLastInputType", "method_48185", "setNavigationType", "m_264033_"), "(Lfgl;)V");
    }

    static void setNavigationType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setNavigationType();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNarratorManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aV", "getNarrator", "method_44713", "getNarratorManager", "m_240477_"), "()Lfgg;");
    }

    static jobject getNarratorManager(const jobject& obj) {
                
       const auto methodID = methodID_getNarratorManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMessageHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aW", "getChatListener", "method_44714", "getMessageHandler", "m_240442_"), "()Lfzz;");
    }

    static jobject getMessageHandler(const jobject& obj) {
                
       const auto methodID = methodID_getMessageHandler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAbuseReportContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aX", "getReportingContext", "method_44377", "getAbuseReportContext", "m_239211_"), "()Lgao;");
    }

    static jobject getAbuseReportContext(const jobject& obj) {
                
       const auto methodID = methodID_getAbuseReportContext();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRealmsPeriodicCheckers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aY", "realmsDataFetcher", "method_44646", "getRealmsPeriodicCheckers", "m_239420_"), "()Lfdm;");
    }

    static jobject getRealmsPeriodicCheckers(const jobject& obj) {
                
       const auto methodID = methodID_getRealmsPeriodicCheckers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getQuickPlayLogger() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aZ", "quickPlayLog", "method_51253", "getQuickPlayLogger", "m_278644_"), "()Lgej;");
    }

    static jobject getQuickPlayLogger(const jobject& obj) {
                
       const auto methodID = methodID_getQuickPlayLogger();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCommandHistoryManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ba", "commandHistory", "method_52700", "getCommandHistoryManager", "m_294504_"), "()Lfgc;");
    }

    static jobject getCommandHistoryManager(const jobject& obj) {
                
       const auto methodID = methodID_getCommandHistoryManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSymlinkFinder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bb", "directoryValidator", "method_52702", "getSymlinkFinder", "m_294312_"), "()Lews;");
    }

    static jobject getSymlinkFinder(const jobject& obj) {
                
       const auto methodID = methodID_getSymlinkFinder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTargetMillisPerTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getTickTargetMillis", "method_54785", "getTargetMillisPerTick", "m_306069_"), "(F)F");
    }

    static jfloat getTargetMillisPerTick(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getTargetMillisPerTick();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLauncherBrand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("bc", "getLauncherBrand", "method_54578", "getLauncherBrand", "m_307030_"), "()Ljava/lang/String;");
    }

    static jobject getLauncherBrand() {
       const auto clazz = self();
       const auto methodID = methodID_getLauncherBrand();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_MINECRAFTCLIENT_HPP