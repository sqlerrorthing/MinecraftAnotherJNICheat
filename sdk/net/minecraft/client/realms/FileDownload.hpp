// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_REALMS_FILEDOWNLOAD_HPP
#define NET_MINECRAFT_CLIENT_REALMS_FILEDOWNLOAD_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.realms.FileDownload
 * Remapped: fbv
 */
namespace FileDownload {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fbv", "com/mojang/realmsclient/client/FileDownload", "net/minecraft/class_4333", "net/minecraft/client/realms/FileDownload", "net/minecraft/src/C_3213_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.client.realms.FileDownload#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_19522", "LOGGER", "f_86953_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.realms.FileDownload#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_19522", "LOGGER", "f_86953_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.client.realms.FileDownload#cancelled
    static jboolean get_field_cancelled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "cancelled", "field_19523", "cancelled", "f_86954_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.realms.FileDownload#cancelled
    static void set_field_cancelled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "cancelled", "field_19523", "cancelled", "f_86954_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.realms.FileDownload#finished
    static jboolean get_field_finished(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "finished", "field_19524", "finished", "f_86955_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.realms.FileDownload#finished
    static void set_field_finished(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "finished", "field_19524", "finished", "f_86955_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.realms.FileDownload#error
    static jboolean get_field_error(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "error", "field_19525", "error", "f_86956_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.realms.FileDownload#error
    static void set_field_error(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "error", "field_19525", "error", "f_86956_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.realms.FileDownload#extracting
    static jboolean get_field_extracting(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "extracting", "field_19526", "extracting", "f_86957_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.realms.FileDownload#extracting
    static void set_field_extracting(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "extracting", "field_19526", "extracting", "f_86957_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.FileDownload#backupFile
    static jobject get_field_backupFile(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "tempFile", "field_20490", "backupFile", "f_86958_"), "Ljava/io/File;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.FileDownload#backupFile
    static void set_field_backupFile(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "tempFile", "field_20490", "backupFile", "f_86958_"), "Ljava/io/File;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.realms.FileDownload#resourcePackPath
    static jobject get_field_resourcePackPath(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "resourcePackPath", "field_19528", "resourcePackPath", "f_86959_"), "Ljava/io/File;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.realms.FileDownload#resourcePackPath
    static void set_field_resourcePackPath(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "resourcePackPath", "field_19528", "resourcePackPath", "f_86959_"), "Ljava/io/File;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.FileDownload#httpRequest
    static jobject get_field_httpRequest(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "request", "field_20491", "httpRequest", "f_86960_"), "Lorg/apache/http/client/methods/HttpGet;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.FileDownload#httpRequest
    static void set_field_httpRequest(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "request", "field_20491", "httpRequest", "f_86960_"), "Lorg/apache/http/client/methods/HttpGet;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.FileDownload#currentThread
    static jobject get_field_currentThread(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "currentThread", "field_19530", "currentThread", "f_86961_"), "Ljava/lang/Thread;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.FileDownload#currentThread
    static void set_field_currentThread(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "currentThread", "field_19530", "currentThread", "f_86961_"), "Ljava/lang/Thread;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.FileDownload#requestConfig
    static jobject get_field_requestConfig(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "requestConfig", "field_19531", "requestConfig", "f_86962_"), "Lorg/apache/http/client/config/RequestConfig;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.FileDownload#requestConfig
    static void set_field_requestConfig(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "requestConfig", "field_19531", "requestConfig", "f_86962_"), "Lorg/apache/http/client/config/RequestConfig;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.FileDownload#INVALID_FILE_NAMES
    [[maybe_unused]] static jobject get_field_INVALID_FILE_NAMES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "INVALID_FILE_NAMES", "field_19532", "INVALID_FILE_NAMES", "f_86963_"), "[Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.FileDownload#INVALID_FILE_NAMES
    [[maybe_unused]] static void set_field_INVALID_FILE_NAMES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "INVALID_FILE_NAMES", "field_19532", "INVALID_FILE_NAMES", "f_86963_"), "[Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_contentLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "contentLength", "method_20955", "contentLength", "m_86989_"), "(Ljava/lang/String;)J");
    }

    static jlong contentLength(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contentLength();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_downloadWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "download", "method_22100", "downloadWorld", "m_86982_"), "(Lfdd;Ljava/lang/String;Lfea$a;Lerf;)V");
    }

    static void downloadWorld(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_downloadWorld();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_cancel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "cancel", "method_20948", "cancel", "m_86966_"), "()V");
    }

    static void cancel(const jobject& obj) {
                
       const auto methodID = methodID_cancel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFinished() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isFinished", "method_20957", "isFinished", "m_86995_"), "()Z");
    }

    static jboolean isFinished(const jobject& obj) {
                
       const auto methodID = methodID_isFinished();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isError() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isError", "method_20961", "isError", "m_87003_"), "()Z");
    }

    static jboolean isError(const jobject& obj) {
                
       const auto methodID = methodID_isError();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isExtracting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isExtracting", "method_20964", "isExtracting", "m_87009_"), "()Z");
    }

    static jboolean isExtracting(const jobject& obj) {
                
       const auto methodID = methodID_isExtracting();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_findAvailableFolderName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "findAvailableFolderName", "method_20960", "findAvailableFolderName", "m_87001_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject findAvailableFolderName(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_findAvailableFolderName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_untarGzipArchive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "untarGzipArchive", "method_20956", "untarGzipArchive", "m_86991_"), "(Ljava/lang/String;Ljava/io/File;Lerf;)V");
    }

    static void untarGzipArchive(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_untarGzipArchive();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_REALMS_FILEDOWNLOAD_HPP