// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_REALMS_UTIL_PERIODICRUNNERFACTORY$RUNNERSMANAGER_HPP
#define NET_MINECRAFT_CLIENT_REALMS_UTIL_PERIODICRUNNERFACTORY$RUNNERSMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.realms.util.PeriodicRunnerFactory$RunnersManager
 * Remapped: fev$c
 */
namespace PeriodicRunnerFactory$RunnersManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fev$c", "com/mojang/realmsclient/gui/task/DataFetcher$Subscription", "net/minecraft/class_7581$class_7584", "net/minecraft/client/realms/util/PeriodicRunnerFactory$RunnersManager", "net/minecraft/src/C_238486_$C_238494_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.realms.util.PeriodicRunnerFactory$RunnersManager#runners
    static jobject get_field_runners(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "subscriptions", "field_39705", "runners", "f_238520_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.util.PeriodicRunnerFactory$RunnersManager#runners
    static void set_field_runners(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "subscriptions", "field_39705", "runners", "f_238520_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "subscribe", "method_44635", "add", "m_239441_"), "(Lfev$e;Ljava/util/function/Consumer;)V");
    }

    static void add(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_forceRunListeners() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forceUpdate", "method_44634", "forceRunListeners", "m_240009_"), "()V");
    }

    static void forceRunListeners(const jobject& obj) {
                
       const auto methodID = methodID_forceRunListeners();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_runAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "tick", "method_44636", "runAll", "m_239355_"), "()V");
    }

    static void runAll(const jobject& obj) {
                
       const auto methodID = methodID_runAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_resetAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "reset", "method_44637", "resetAll", "m_240120_"), "()V");
    }

    static void resetAll(const jobject& obj) {
                
       const auto methodID = methodID_resetAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_REALMS_UTIL_PERIODICRUNNERFACTORY$RUNNERSMANAGER_HPP