// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_REALMS_REALMSERROR$SIMPLEHTTPERROR_HPP
#define NET_MINECRAFT_CLIENT_REALMS_REALMSERROR$SIMPLEHTTPERROR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.realms.RealmsError$SimpleHttpError
 * Remapped: fca$b
 */
namespace RealmsError$SimpleHttpError {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fca$b", "com/mojang/realmsclient/client/RealmsError$CustomError", "net/minecraft/class_4345$class_8653", "net/minecraft/client/realms/RealmsError$SimpleHttpError", "net/minecraft/src/C_3227_$C_290158_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.realms.RealmsError$SimpleHttpError#httpCode
    static jint get_field_httpCode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "httpCode", "comp_1596", "httpCode", "f_290502_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.RealmsError$SimpleHttpError#httpCode
    static void set_field_httpCode(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "httpCode", "comp_1596", "httpCode", "f_290502_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.RealmsError$SimpleHttpError#payload
    static jobject get_field_payload(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "payload", "comp_1597", "payload", "f_290469_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.RealmsError$SimpleHttpError#payload
    static void set_field_payload(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "payload", "comp_1597", "payload", "f_290469_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.client.realms.RealmsError$SimpleHttpError#SERVICE_BUSY
    [[maybe_unused]] static jobject get_field_SERVICE_BUSY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SERVICE_BUSY", "field_45235", "SERVICE_BUSY", "f_290429_"), "Lfca$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.RealmsError$SimpleHttpError#SERVICE_BUSY
    [[maybe_unused]] static void set_field_SERVICE_BUSY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SERVICE_BUSY", "field_45235", "SERVICE_BUSY", "f_290429_"), "Lfca$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.realms.RealmsError$SimpleHttpError#RETRY_TEXT
    [[maybe_unused]] static jobject get_field_RETRY_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RETRY_MESSAGE", "field_45236", "RETRY_TEXT", "f_290843_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.RealmsError$SimpleHttpError#RETRY_TEXT
    [[maybe_unused]] static void set_field_RETRY_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RETRY_MESSAGE", "field_45236", "RETRY_TEXT", "f_290843_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_unknownCompatibility() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "unknownCompatibilityResponse", "method_52660", "unknownCompatibility", "m_293774_"), "(Ljava/lang/String;)Lfca$b;");
    }

    static jobject unknownCompatibility(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_unknownCompatibility();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_connectivity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "connectivityError", "method_52659", "connectivity", "m_294899_"), "(Lfdi;)Lfca$b;");
    }

    static jobject connectivity(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_connectivity();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_retryable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "retry", "method_52658", "retryable", "m_293569_"), "(I)Lfca$b;");
    }

    static jobject retryable(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_retryable();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_statusCodeOnly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "noPayload", "method_52661", "statusCodeOnly", "m_296023_"), "(I)Lfca$b;");
    }

    static jobject statusCodeOnly(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_statusCodeOnly();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getErrorCode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "errorCode", "method_21037", "getErrorCode", "m_294199_"), "()I");
    }

    static jint getErrorCode(const jobject& obj) {
                
       const auto methodID = methodID_getErrorCode();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "errorMessage", "method_52657", "getText", "m_292809_"), "()Lwz;");
    }

    static jobject getText(const jobject& obj) {
                
       const auto methodID = methodID_getText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getErrorMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "logMessage", "method_21036", "getErrorMessage", "m_293097_"), "()Ljava/lang/String;");
    }

    static jobject getErrorMessage(const jobject& obj) {
                
       const auto methodID = methodID_getErrorMessage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__httpCode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "httpCode", "comp_1596", "httpCode", "f_290502_"), "()I");
    }

    static jint _httpCode(const jobject& obj) {
                
       const auto methodID = methodID__httpCode();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__payload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "payload", "comp_1597", "payload", "f_290469_"), "()Lwz;");
    }

    static jobject _payload(const jobject& obj) {
                
       const auto methodID = methodID__payload();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_REALMS_REALMSERROR$SIMPLEHTTPERROR_HPP