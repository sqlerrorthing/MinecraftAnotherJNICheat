// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_REALMS_GUI_SCREEN_REALMSSELECTWORLDTEMPLATESCREEN$WORLDTEMPLATEOBJECTSELECTIONLISTENTRY_HPP
#define NET_MINECRAFT_CLIENT_REALMS_GUI_SCREEN_REALMSSELECTWORLDTEMPLATESCREEN$WORLDTEMPLATEOBJECTSELECTIONLISTENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry
 * Remapped: fen$a
 */
namespace RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fen$a", "com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry", "net/minecraft/class_4419$class_4421", "net/minecraft/client/realms/gui/screen/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry", "net/minecraft/src/C_3330_$C_3332_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#LINK_TEXTURES
    [[maybe_unused]] static jobject get_field_LINK_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WEBSITE_LINK_SPRITES", "field_45980", "LINK_TEXTURES", "f_291729_"), "Lfjz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#LINK_TEXTURES
    [[maybe_unused]] static void set_field_LINK_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WEBSITE_LINK_SPRITES", "field_45980", "LINK_TEXTURES", "f_291729_"), "Lfjz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#VIDEO_LINK_TEXTURES
    [[maybe_unused]] static jobject get_field_VIDEO_LINK_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TRAILER_LINK_SPRITES", "field_45981", "VIDEO_LINK_TEXTURES", "f_291679_"), "Lfjz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#VIDEO_LINK_TEXTURES
    [[maybe_unused]] static void set_field_VIDEO_LINK_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TRAILER_LINK_SPRITES", "field_45981", "VIDEO_LINK_TEXTURES", "f_291679_"), "Lfjz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#INFO_TOOLTIP_TEXT
    [[maybe_unused]] static jobject get_field_INFO_TOOLTIP_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PUBLISHER_LINK_TOOLTIP", "field_45982", "INFO_TOOLTIP_TEXT", "f_291061_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#INFO_TOOLTIP_TEXT
    [[maybe_unused]] static void set_field_INFO_TOOLTIP_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PUBLISHER_LINK_TOOLTIP", "field_45982", "INFO_TOOLTIP_TEXT", "f_291061_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#TRAILER_TOOLTIP_TEXT
    [[maybe_unused]] static jobject get_field_TRAILER_TOOLTIP_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TRAILER_LINK_TOOLTIP", "field_45983", "TRAILER_TOOLTIP_TEXT", "f_291117_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#TRAILER_TOOLTIP_TEXT
    [[maybe_unused]] static void set_field_TRAILER_TOOLTIP_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TRAILER_LINK_TOOLTIP", "field_45983", "TRAILER_TOOLTIP_TEXT", "f_291117_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#mTemplate
    static jobject get_field_mTemplate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "template", "field_20094", "mTemplate", "f_89750_"), "Lfde;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#mTemplate
    static void set_field_mTemplate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "template", "field_20094", "mTemplate", "f_89750_"), "Lfde;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#prevClickTime
    static jlong get_field_prevClickTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "lastClickTime", "field_45984", "prevClickTime", "f_290925_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#prevClickTime
    static void set_field_prevClickTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "lastClickTime", "field_45984", "prevClickTime", "f_290925_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#infoButton
    static jobject get_field_infoButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "websiteButton", "field_45985", "infoButton", "f_290742_"), "Lfiy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#infoButton
    static void set_field_infoButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "websiteButton", "field_45985", "infoButton", "f_290742_"), "Lfiy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#trailerButton
    static jobject get_field_trailerButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "trailerButton", "field_45986", "trailerButton", "f_291756_"), "Lfiy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry#trailerButton
    static void set_field_trailerButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "trailerButton", "field_45986", "trailerButton", "f_291756_"), "Lfiy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_mouseClicked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mouseClicked", "method_25402", "mouseClicked", "m_6375_"), "(DDI)Z");
    }

    static jboolean mouseClicked(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jint& arg2) {
                
       const auto methodID = methodID_mouseClicked();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25343", "render", "m_6311_"), "(Lfhz;IIIIIIIZF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jboolean& arg8, const jfloat& arg9) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_getNarration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getNarration", "method_37006", "getNarration", "m_142172_"), "()Lwz;");
    }

    static jobject getNarration(const jobject& obj) {
                
       const auto methodID = methodID_getNarration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_REALMS_GUI_SCREEN_REALMSSELECTWORLDTEMPLATESCREEN$WORLDTEMPLATEOBJECTSELECTIONLISTENTRY_HPP