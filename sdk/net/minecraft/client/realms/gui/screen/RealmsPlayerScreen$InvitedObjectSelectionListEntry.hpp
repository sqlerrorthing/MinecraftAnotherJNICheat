// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_REALMS_GUI_SCREEN_REALMSPLAYERSCREEN$INVITEDOBJECTSELECTIONLISTENTRY_HPP
#define NET_MINECRAFT_CLIENT_REALMS_GUI_SCREEN_REALMSPLAYERSCREEN$INVITEDOBJECTSELECTIONLISTENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry
 * Remapped: fei$a
 */
namespace RealmsPlayerScreen$InvitedObjectSelectionListEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fei$a", "com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry", "net/minecraft/class_4406$class_4408", "net/minecraft/client/realms/gui/screen/RealmsPlayerScreen$InvitedObjectSelectionListEntry", "net/minecraft/src/C_3315_$C_3316_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#NORMAL_TOOLTIP_TEXT
    [[maybe_unused]] static jobject get_field_NORMAL_TOOLTIP_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NORMAL_USER_TEXT", "field_49464", "NORMAL_TOOLTIP_TEXT", "f_315568_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#NORMAL_TOOLTIP_TEXT
    [[maybe_unused]] static void set_field_NORMAL_TOOLTIP_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NORMAL_USER_TEXT", "field_49464", "NORMAL_TOOLTIP_TEXT", "f_315568_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#OPS_TOOLTIP_TEXT
    [[maybe_unused]] static jobject get_field_OPS_TOOLTIP_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "OP_TEXT", "field_49465", "OPS_TOOLTIP_TEXT", "f_314898_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#OPS_TOOLTIP_TEXT
    [[maybe_unused]] static void set_field_OPS_TOOLTIP_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "OP_TEXT", "field_49465", "OPS_TOOLTIP_TEXT", "f_314898_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#REMOVE_TOOLTIP_TEXT
    [[maybe_unused]] static jobject get_field_REMOVE_TOOLTIP_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "REMOVE_TEXT", "field_49466", "REMOVE_TOOLTIP_TEXT", "f_314763_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#REMOVE_TOOLTIP_TEXT
    [[maybe_unused]] static void set_field_REMOVE_TOOLTIP_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "REMOVE_TEXT", "field_49466", "REMOVE_TOOLTIP_TEXT", "f_314763_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#MAKE_OPERATOR_TEXTURE
    [[maybe_unused]] static jobject get_field_MAKE_OPERATOR_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAKE_OP_SPRITE", "field_49467", "MAKE_OPERATOR_TEXTURE", "f_314103_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#MAKE_OPERATOR_TEXTURE
    [[maybe_unused]] static void set_field_MAKE_OPERATOR_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAKE_OP_SPRITE", "field_49467", "MAKE_OPERATOR_TEXTURE", "f_314103_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#REMOVE_OPERATOR_TEXTURE
    [[maybe_unused]] static jobject get_field_REMOVE_OPERATOR_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "REMOVE_OP_SPRITE", "field_49468", "REMOVE_OPERATOR_TEXTURE", "f_315396_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#REMOVE_OPERATOR_TEXTURE
    [[maybe_unused]] static void set_field_REMOVE_OPERATOR_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "REMOVE_OP_SPRITE", "field_49468", "REMOVE_OPERATOR_TEXTURE", "f_315396_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#REMOVE_PLAYER_TEXTURE
    [[maybe_unused]] static jobject get_field_REMOVE_PLAYER_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "REMOVE_PLAYER_SPRITE", "field_49469", "REMOVE_PLAYER_TEXTURE", "f_315491_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#REMOVE_PLAYER_TEXTURE
    [[maybe_unused]] static void set_field_REMOVE_PLAYER_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "REMOVE_PLAYER_SPRITE", "field_49469", "REMOVE_PLAYER_TEXTURE", "f_315491_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#field_49470
    [[maybe_unused]] static jint get_field_field_49470() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ICON_WIDTH", "field_49470", "field_49470", "f_314289_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#field_49470
    [[maybe_unused]] static void set_field_field_49470(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ICON_WIDTH", "field_49470", "field_49470", "f_314289_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#field_49471
    [[maybe_unused]] static jint get_field_field_49471() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ICON_HEIGHT", "field_49471", "field_49471", "f_315129_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#field_49471
    [[maybe_unused]] static void set_field_field_49471(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ICON_HEIGHT", "field_49471", "field_49471", "f_315129_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#playerInfo
    static jobject get_field_playerInfo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "playerInfo", "field_19979", "playerInfo", "f_89201_"), "Lfcl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#playerInfo
    static void set_field_playerInfo(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "playerInfo", "field_19979", "playerInfo", "f_89201_"), "Lfcl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#uninviteButton
    static jobject get_field_uninviteButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "removeButton", "field_44536", "uninviteButton", "f_278432_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#uninviteButton
    static void set_field_uninviteButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "removeButton", "field_44536", "uninviteButton", "f_278432_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#opButton
    static jobject get_field_opButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "makeOpButton", "field_44537", "opButton", "f_278388_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#opButton
    static void set_field_opButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "makeOpButton", "field_44537", "opButton", "f_278388_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#deopButton
    static jobject get_field_deopButton(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "removeOpButton", "field_44538", "deopButton", "f_278510_"), "Lfim;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsPlayerScreen$InvitedObjectSelectionListEntry#deopButton
    static void set_field_deopButton(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "removeOpButton", "field_44538", "deopButton", "f_278510_"), "Lfim;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_op() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "op", "method_57691", "op", "m_321065_"), "(I)V");
    }

    static void op(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_op();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_deop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "deop", "method_57695", "deop", "m_323386_"), "(I)V");
    }

    static void deop(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_deop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_uninvite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "uninvite", "method_57698", "uninvite", "m_324131_"), "(I)V");
    }

    static void uninvite(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_uninvite();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setOps() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateOps", "method_57692", "setOps", "m_322209_"), "(Lfch;)V");
    }

    static void setOps(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOps();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_refreshOpButtonsVisibility() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "updateOpButtons", "method_57697", "refreshOpButtonsVisibility", "m_324967_"), "()V");
    }

    static void refreshOpButtonsVisibility(const jobject& obj) {
                
       const auto methodID = methodID_refreshOpButtonsVisibility();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOpButton() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "activeOpButton", "method_57700", "getOpButton", "m_318770_"), "()Lfim;");
    }

    static jobject getOpButton(const jobject& obj) {
                
       const auto methodID = methodID_getOpButton();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_children() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aK_", "children", "method_25396", "children", "m_6702_"), "()Ljava/util/List;");
    }

    static jobject children(const jobject& obj) {
                
       const auto methodID = methodID_children();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_selectableChildren() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "narratables", "method_37025", "selectableChildren", "m_142437_"), "()Ljava/util/List;");
    }

    static jobject selectableChildren(const jobject& obj) {
                
       const auto methodID = methodID_selectableChildren();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25343", "render", "m_6311_"), "(Lfhz;IIIIIIIZF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jboolean& arg8, const jfloat& arg9) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_REALMS_GUI_SCREEN_REALMSPLAYERSCREEN$INVITEDOBJECTSELECTIONLISTENTRY_HPP