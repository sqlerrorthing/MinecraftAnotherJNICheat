// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_REALMS_GUI_SCREEN_REALMSNOTIFICATIONSSCREEN_HPP
#define NET_MINECRAFT_CLIENT_REALMS_GUI_SCREEN_REALMSNOTIFICATIONSSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen
 * Remapped: fef
 */
namespace RealmsNotificationsScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fef", "com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen", "net/minecraft/class_4399", "net/minecraft/client/realms/gui/screen/RealmsNotificationsScreen", "net/minecraft/src/C_3304_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#UNSEEN_NOTIFICATION_ICON_TEXTURE
    [[maybe_unused]] static jobject get_field_UNSEEN_NOTIFICATION_ICON_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UNSEEN_NOTIFICATION_SPRITE", "field_45245", "UNSEEN_NOTIFICATION_ICON_TEXTURE", "f_290620_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#UNSEEN_NOTIFICATION_ICON_TEXTURE
    [[maybe_unused]] static void set_field_UNSEEN_NOTIFICATION_ICON_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "UNSEEN_NOTIFICATION_SPRITE", "field_45245", "UNSEEN_NOTIFICATION_ICON_TEXTURE", "f_290620_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#NEWS_ICON_TEXTURE
    [[maybe_unused]] static jobject get_field_NEWS_ICON_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NEWS_SPRITE", "field_45246", "NEWS_ICON_TEXTURE", "f_291115_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#NEWS_ICON_TEXTURE
    [[maybe_unused]] static void set_field_NEWS_ICON_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NEWS_SPRITE", "field_45246", "NEWS_ICON_TEXTURE", "f_291115_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#INVITE_ICON_TEXTURE
    [[maybe_unused]] static jobject get_field_INVITE_ICON_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "INVITE_SPRITE", "field_45247", "INVITE_ICON_TEXTURE", "f_291099_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#INVITE_ICON_TEXTURE
    [[maybe_unused]] static void set_field_INVITE_ICON_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "INVITE_SPRITE", "field_45247", "INVITE_ICON_TEXTURE", "f_291099_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#TRIAL_AVAILABLE_ICON_TEXTURE
    [[maybe_unused]] static jobject get_field_TRIAL_AVAILABLE_ICON_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "TRIAL_AVAILABLE_SPRITE", "field_45248", "TRIAL_AVAILABLE_ICON_TEXTURE", "f_291702_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#TRIAL_AVAILABLE_ICON_TEXTURE
    [[maybe_unused]] static void set_field_TRIAL_AVAILABLE_ICON_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "TRIAL_AVAILABLE_SPRITE", "field_45248", "TRIAL_AVAILABLE_ICON_TEXTURE", "f_291702_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#validClient
    static jobject get_field_validClient(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "validClient", "field_19927", "validClient", "f_88828_"), "Ljava/util/concurrent/CompletableFuture;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#validClient
    static void set_field_validClient(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "validClient", "field_19927", "validClient", "f_88828_"), "Ljava/util/concurrent/CompletableFuture;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#periodicRunnersManager
    static jobject get_field_periodicRunnersManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "realmsDataSubscription", "field_39695", "periodicRunnersManager", "f_238623_"), "Lfev$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#periodicRunnersManager
    static void set_field_periodicRunnersManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "realmsDataSubscription", "field_39695", "periodicRunnersManager", "f_238623_"), "Lfev$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#currentRunnersFactory
    static jobject get_field_currentRunnersFactory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "currentConfiguration", "field_43037", "currentRunnersFactory", "f_273898_"), "Lfef$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#currentRunnersFactory
    static void set_field_currentRunnersFactory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "currentConfiguration", "field_43037", "currentRunnersFactory", "f_273898_"), "Lfef$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#pendingInvitesCount
    static jint get_field_pendingInvitesCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "numberOfPendingInvites", "field_19924", "pendingInvitesCount", "f_88825_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#pendingInvitesCount
    static void set_field_pendingInvitesCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "numberOfPendingInvites", "field_19924", "pendingInvitesCount", "f_88825_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#trialAvailable
    [[maybe_unused]] static jboolean get_field_trialAvailable() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "trialAvailable", "field_19926", "trialAvailable", "f_88827_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#trialAvailable
    [[maybe_unused]] static void set_field_trialAvailable(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "trialAvailable", "field_19926", "trialAvailable", "f_88827_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#hasUnreadNews
    [[maybe_unused]] static jboolean get_field_hasUnreadNews() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "hasUnreadNews", "field_19928", "hasUnreadNews", "f_88829_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#hasUnreadNews
    [[maybe_unused]] static void set_field_hasUnreadNews(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "hasUnreadNews", "field_19928", "hasUnreadNews", "f_88829_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#hasUnseenNotification
    [[maybe_unused]] static jboolean get_field_hasUnseenNotification() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "hasUnseenNotifications", "field_43038", "hasUnseenNotification", "f_273905_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#hasUnseenNotification
    [[maybe_unused]] static void set_field_hasUnseenNotification(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "hasUnseenNotifications", "field_43038", "hasUnseenNotification", "f_273905_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#newsAndNotifications
    static jobject get_field_newsAndNotifications(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "showAll", "field_43039", "newsAndNotifications", "f_273899_"), "Lfef$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#newsAndNotifications
    static void set_field_newsAndNotifications(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("J", "showAll", "field_43039", "newsAndNotifications", "f_273899_"), "Lfef$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#notificationsOnly
    static jobject get_field_notificationsOnly(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "onlyNotifications", "field_43040", "notificationsOnly", "f_273849_"), "Lfef$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsNotificationsScreen#notificationsOnly
    static void set_field_notificationsOnly(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("K", "onlyNotifications", "field_43040", "notificationsOnly", "f_273849_"), "Lfef$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT_", "init", "method_25426", "init", "m_7856_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onDisplayed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aL_", "added", "method_49589", "onDisplayed", "m_274333_"), "()V");
    }

    static void onDisplayed(const jobject& obj) {
                
       const auto methodID = methodID_onDisplayed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRunnersFactory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "getConfiguration", "method_49584", "getRunnersFactory", "m_274595_"), "()Lfef$a;");
    }

    static jobject getRunnersFactory(const jobject& obj) {
                
       const auto methodID = methodID_getRunnersFactory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "tick", "method_25393", "tick", "m_86600_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldShowRealmsNews() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "getRealmsNotificationsEnabled", "method_25169", "shouldShowRealmsNews", "m_88848_"), "()Z");
    }

    static jboolean shouldShowRealmsNews(const jobject& obj) {
                
       const auto methodID = methodID_shouldShowRealmsNews();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isTitleScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "inTitleScreen", "method_25170", "isTitleScreen", "m_88849_"), "()Z");
    }

    static jboolean isTitleScreen(const jobject& obj) {
                
       const auto methodID = methodID_isTitleScreen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_render() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_25394", "render", "m_88315_"), "(Lfhz;IIF)V");
    }

    static void render(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_render();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_renderBackground() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "renderBackground", "method_25420", "renderBackground", "m_280273_"), "(Lfhz;IIF)V");
    }

    static void renderBackground(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_renderBackground();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_drawIcons() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "drawIcons", "method_21295", "drawIcons", "m_280451_"), "(Lfhz;)V");
    }

    static void drawIcons(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_drawIcons();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addRunners() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addNewsAndInvitesSubscriptions", "method_49586", "addRunners", "m_274584_"), "(Lfdm;Lfev$c;)V");
    }

    static void addRunners(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addRunners();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addNotificationRunner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addNotificationsSubscriptions", "method_49590", "addNotificationRunner", "m_274585_"), "(Lfdm;Lfev$c;)V");
    }

    static void addNotificationRunner(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addNotificationRunner();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_REALMS_GUI_SCREEN_REALMSNOTIFICATIONSSCREEN_HPP