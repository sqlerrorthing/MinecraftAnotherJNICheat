// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_REALMS_GUI_SCREEN_REALMSCREATEWORLDSCREEN_HPP
#define NET_MINECRAFT_CLIENT_REALMS_GUI_SCREEN_REALMSCREATEWORLDSCREEN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen
 * Remapped: fel
 */
namespace RealmsCreateWorldScreen {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fel", "com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen", "net/minecraft/class_4410", "net/minecraft/client/realms/gui/screen/RealmsCreateWorldScreen", "net/minecraft/src/C_3320_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOGGER", "field_19999", "LOGGER", "f_89314_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOGGER", "field_19999", "LOGGER", "f_89314_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#CREATE_REALM_TITLE
    [[maybe_unused]] static jobject get_field_CREATE_REALM_TITLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "CREATE_REALM_TITLE", "field_46127", "CREATE_REALM_TITLE", "f_290557_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#CREATE_REALM_TITLE
    [[maybe_unused]] static void set_field_CREATE_REALM_TITLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "CREATE_REALM_TITLE", "field_46127", "CREATE_REALM_TITLE", "f_290557_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#CREATE_REALM_SUBTITLE
    [[maybe_unused]] static jobject get_field_CREATE_REALM_SUBTITLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "CREATE_REALM_SUBTITLE", "field_46115", "CREATE_REALM_SUBTITLE", "f_291182_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#CREATE_REALM_SUBTITLE
    [[maybe_unused]] static void set_field_CREATE_REALM_SUBTITLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "CREATE_REALM_SUBTITLE", "field_46115", "CREATE_REALM_SUBTITLE", "f_291182_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#CREATE_WORLD_TITLE
    [[maybe_unused]] static jobject get_field_CREATE_WORLD_TITLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "CREATE_WORLD_TITLE", "field_46116", "CREATE_WORLD_TITLE", "f_291523_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#CREATE_WORLD_TITLE
    [[maybe_unused]] static void set_field_CREATE_WORLD_TITLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "CREATE_WORLD_TITLE", "field_46116", "CREATE_WORLD_TITLE", "f_291523_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#CREATE_WORLD_SUBTITLE
    [[maybe_unused]] static jobject get_field_CREATE_WORLD_SUBTITLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "CREATE_WORLD_SUBTITLE", "field_46117", "CREATE_WORLD_SUBTITLE", "f_290804_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#CREATE_WORLD_SUBTITLE
    [[maybe_unused]] static void set_field_CREATE_WORLD_SUBTITLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "CREATE_WORLD_SUBTITLE", "field_46117", "CREATE_WORLD_SUBTITLE", "f_290804_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#RESET_WORLD_TITLE
    [[maybe_unused]] static jobject get_field_RESET_WORLD_TITLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "RESET_WORLD_TITLE", "field_46118", "RESET_WORLD_TITLE", "f_291359_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#RESET_WORLD_TITLE
    [[maybe_unused]] static void set_field_RESET_WORLD_TITLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "RESET_WORLD_TITLE", "field_46118", "RESET_WORLD_TITLE", "f_291359_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#RESET_WORLD_SUBTITLE
    [[maybe_unused]] static jobject get_field_RESET_WORLD_SUBTITLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "RESET_WORLD_SUBTITLE", "field_46119", "RESET_WORLD_SUBTITLE", "f_290382_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#RESET_WORLD_SUBTITLE
    [[maybe_unused]] static void set_field_RESET_WORLD_SUBTITLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "RESET_WORLD_SUBTITLE", "field_46119", "RESET_WORLD_SUBTITLE", "f_290382_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#CREATING_TEXT
    [[maybe_unused]] static jobject get_field_CREATING_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CREATE_WORLD_RESET_TASK_TITLE", "field_46125", "CREATING_TEXT", "f_290482_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#CREATING_TEXT
    [[maybe_unused]] static void set_field_CREATING_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CREATE_WORLD_RESET_TASK_TITLE", "field_46125", "CREATING_TEXT", "f_290482_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#RESETTING_TEXT
    [[maybe_unused]] static jobject get_field_RESETTING_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "RESET_WORLD_RESET_TASK_TITLE", "field_46120", "RESETTING_TEXT", "f_291435_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#RESETTING_TEXT
    [[maybe_unused]] static void set_field_RESETTING_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "RESET_WORLD_RESET_TASK_TITLE", "field_46120", "RESETTING_TEXT", "f_291435_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#TEMPLATE_TEXT
    [[maybe_unused]] static jobject get_field_TEMPLATE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "WORLD_TEMPLATES_TITLE", "field_46121", "TEMPLATE_TEXT", "f_291738_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#TEMPLATE_TEXT
    [[maybe_unused]] static void set_field_TEMPLATE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "WORLD_TEMPLATES_TITLE", "field_46121", "TEMPLATE_TEXT", "f_291738_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#ADVENTURE_TEXT
    [[maybe_unused]] static jobject get_field_ADVENTURE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "ADVENTURES_TITLE", "field_46122", "ADVENTURE_TEXT", "f_290635_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#ADVENTURE_TEXT
    [[maybe_unused]] static void set_field_ADVENTURE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "ADVENTURES_TITLE", "field_46122", "ADVENTURE_TEXT", "f_290635_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#EXPERIENCE_TEXT
    [[maybe_unused]] static jobject get_field_EXPERIENCE_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "EXPERIENCES_TITLE", "field_46123", "EXPERIENCE_TEXT", "f_290531_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#EXPERIENCE_TEXT
    [[maybe_unused]] static void set_field_EXPERIENCE_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "EXPERIENCES_TITLE", "field_46123", "EXPERIENCE_TEXT", "f_290531_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#INSPIRATION_TEXT
    [[maybe_unused]] static jobject get_field_INSPIRATION_TEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "INSPIRATION_TITLE", "field_46124", "INSPIRATION_TEXT", "f_291399_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#INSPIRATION_TEXT
    [[maybe_unused]] static void set_field_INSPIRATION_TEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "INSPIRATION_TITLE", "field_46124", "INSPIRATION_TEXT", "f_291399_"), "Lwz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#parent
    static jobject get_field_parent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "lastScreen", "field_20000", "parent", "f_89315_"), "Lfod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#parent
    static void set_field_parent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("M", "lastScreen", "field_20000", "parent", "f_89315_"), "Lfod;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#serverData
    static jobject get_field_serverData(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "serverData", "field_20001", "serverData", "f_89316_"), "Lfcp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#serverData
    static void set_field_serverData(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("N", "serverData", "field_20001", "serverData", "f_89316_"), "Lfcp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#subtitle
    static jobject get_field_subtitle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "subtitle", "field_20006", "subtitle", "f_89320_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#subtitle
    static void set_field_subtitle(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("O", "subtitle", "field_20006", "subtitle", "f_89320_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#subtitleColor
    static jint get_field_subtitleColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "subtitleColor", "field_20008", "subtitleColor", "f_89322_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#subtitleColor
    static void set_field_subtitleColor(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("P", "subtitleColor", "field_20008", "subtitleColor", "f_89322_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#taskTitle
    static jobject get_field_taskTitle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "resetTaskTitle", "field_20501", "taskTitle", "f_290548_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#taskTitle
    static void set_field_taskTitle(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "resetTaskTitle", "field_20501", "taskTitle", "f_290548_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#UPLOAD_TEXTURE
    [[maybe_unused]] static jobject get_field_UPLOAD_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "UPLOAD_LOCATION", "field_22714", "UPLOAD_TEXTURE", "f_89324_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#UPLOAD_TEXTURE
    [[maybe_unused]] static void set_field_UPLOAD_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "UPLOAD_LOCATION", "field_22714", "UPLOAD_TEXTURE", "f_89324_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#ADVENTURE_TEXTURE
    [[maybe_unused]] static jobject get_field_ADVENTURE_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "ADVENTURE_MAP_LOCATION", "field_22715", "ADVENTURE_TEXTURE", "f_89325_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#ADVENTURE_TEXTURE
    [[maybe_unused]] static void set_field_ADVENTURE_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "ADVENTURE_MAP_LOCATION", "field_22715", "ADVENTURE_TEXTURE", "f_89325_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#SURVIVAL_SPAWN_TEXTURE
    [[maybe_unused]] static jobject get_field_SURVIVAL_SPAWN_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "SURVIVAL_SPAWN_LOCATION", "field_22716", "SURVIVAL_SPAWN_TEXTURE", "f_89326_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#SURVIVAL_SPAWN_TEXTURE
    [[maybe_unused]] static void set_field_SURVIVAL_SPAWN_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "SURVIVAL_SPAWN_LOCATION", "field_22716", "SURVIVAL_SPAWN_TEXTURE", "f_89326_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#NEW_WORLD_TEXTURE
    [[maybe_unused]] static jobject get_field_NEW_WORLD_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "NEW_WORLD_LOCATION", "field_22708", "NEW_WORLD_TEXTURE", "f_89300_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#NEW_WORLD_TEXTURE
    [[maybe_unused]] static void set_field_NEW_WORLD_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "NEW_WORLD_LOCATION", "field_22708", "NEW_WORLD_TEXTURE", "f_89300_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#EXPERIENCE_TEXTURE
    [[maybe_unused]] static jobject get_field_EXPERIENCE_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "EXPERIENCE_LOCATION", "field_22709", "EXPERIENCE_TEXTURE", "f_89301_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#EXPERIENCE_TEXTURE
    [[maybe_unused]] static void set_field_EXPERIENCE_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "EXPERIENCE_LOCATION", "field_22709", "EXPERIENCE_TEXTURE", "f_89301_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#INSPIRATION_TEXTURE
    [[maybe_unused]] static jobject get_field_INSPIRATION_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "INSPIRATION_LOCATION", "field_22710", "INSPIRATION_TEXTURE", "f_89302_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#INSPIRATION_TEXTURE
    [[maybe_unused]] static void set_field_INSPIRATION_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "INSPIRATION_LOCATION", "field_22710", "INSPIRATION_TEXTURE", "f_89302_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#normalWorldTemplates
    static jobject get_field_normalWorldTemplates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "templates", "field_20495", "normalWorldTemplates", "f_89303_"), "Lfdf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#normalWorldTemplates
    static void set_field_normalWorldTemplates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "templates", "field_20495", "normalWorldTemplates", "f_89303_"), "Lfdf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#adventureWorldTemplates
    static jobject get_field_adventureWorldTemplates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "adventuremaps", "field_20496", "adventureWorldTemplates", "f_89304_"), "Lfdf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#adventureWorldTemplates
    static void set_field_adventureWorldTemplates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "adventuremaps", "field_20496", "adventureWorldTemplates", "f_89304_"), "Lfdf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#experienceWorldTemplates
    static jobject get_field_experienceWorldTemplates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "experiences", "field_20497", "experienceWorldTemplates", "f_89305_"), "Lfdf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#experienceWorldTemplates
    static void set_field_experienceWorldTemplates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "experiences", "field_20497", "experienceWorldTemplates", "f_89305_"), "Lfdf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#inspirationWorldTemplates
    static jobject get_field_inspirationWorldTemplates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "inspirations", "field_20498", "inspirationWorldTemplates", "f_89306_"), "Lfdf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#inspirationWorldTemplates
    static void set_field_inspirationWorldTemplates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "inspirations", "field_20498", "inspirationWorldTemplates", "f_89306_"), "Lfdf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#slot
    static jint get_field_slot(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "slot", "field_19998", "slot", "f_89313_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#slot
    static void set_field_slot(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "slot", "field_19998", "slot", "f_89313_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#creationTask
    static jobject get_field_creationTask(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "realmCreationTask", "field_46709", "creationTask", "f_314298_"), "Lffp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#creationTask
    static void set_field_creationTask(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "realmCreationTask", "field_46709", "creationTask", "f_314298_"), "Lffp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#callback
    static jobject get_field_callback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "resetWorldRunnable", "field_22711", "callback", "f_89311_"), "Ljava/lang/Runnable;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#callback
    static void set_field_callback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "resetWorldRunnable", "field_22711", "callback", "f_89311_"), "Ljava/lang/Runnable;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#layout
    static jobject get_field_layout(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "layout", "field_46126", "layout", "f_291273_"), "Lflz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.gui.screen.RealmsCreateWorldScreen#layout
    static void set_field_layout(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "layout", "field_46126", "layout", "f_291273_"), "Lflz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_newRealm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forNewRealm", "method_53802", "newRealm", "m_294089_"), "(Lfod;Lfcp;Lffp;Ljava/lang/Runnable;)Lfel;");
    }

    static jobject newRealm(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_newRealm();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_newWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forEmptySlot", "method_53801", "newWorld", "m_294326_"), "(Lfod;ILfcp;Ljava/lang/Runnable;)Lfel;");
    }

    static jobject newWorld(const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_newWorld();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_resetWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forResetSlot", "method_53805", "resetWorld", "m_295443_"), "(Lfod;Lfcp;Ljava/lang/Runnable;)Lfel;");
    }

    static jobject resetWorld(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_resetWorld();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aT_", "init", "method_25426", "init", "m_7856_"), "()V");
    }

    static void init(const jobject& obj) {
                
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_initTabNavigation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "repositionElements", "method_48640", "initTabNavigation", "m_267719_"), "()V");
    }

    static void initTabNavigation(const jobject& obj) {
                
       const auto methodID = methodID_initTabNavigation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNarratedTitle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getNarrationMessage", "method_25435", "getNarratedTitle", "m_142562_"), "()Lwz;");
    }

    static jobject getNarratedTitle(const jobject& obj) {
                
       const auto methodID = methodID_getNarratedTitle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "onClose", "method_25419", "close", "m_7379_"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onSelectWorldTemplate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "templateSelectionCallback", "method_32488", "onSelectWorldTemplate", "m_167453_"), "(Lfde;)V");
    }

    static void onSelectWorldTemplate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onSelectWorldTemplate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onResetNormalWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "generationSelectionCallback", "method_32489", "onResetNormalWorld", "m_167455_"), "(Lffg;)V");
    }

    static void onResetNormalWorld(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onResetNormalWorld();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_runTasks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "runResetTasks", "method_54380", "runTasks", "m_306545_"), "(Lffn;)V");
    }

    static void runTasks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_runTasks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_REALMS_GUI_SCREEN_REALMSCREATEWORLDSCREEN_HPP