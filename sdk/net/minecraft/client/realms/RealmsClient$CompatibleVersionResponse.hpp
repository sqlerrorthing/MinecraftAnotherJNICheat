// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_REALMS_REALMSCLIENT$COMPATIBLEVERSIONRESPONSE_HPP
#define NET_MINECRAFT_CLIENT_REALMS_REALMSCLIENT$COMPATIBLEVERSIONRESPONSE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.realms.RealmsClient$CompatibleVersionResponse
 * Remapped: fby$a
 */
namespace RealmsClient$CompatibleVersionResponse {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fby$a", "com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse", "net/minecraft/class_4341$class_4342", "net/minecraft/client/realms/RealmsClient$CompatibleVersionResponse", "net/minecraft/src/C_3223_$C_3224_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.realms.RealmsClient$CompatibleVersionResponse#COMPATIBLE
    [[maybe_unused]] static jobject get_field_COMPATIBLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "COMPATIBLE", "field_19582", "COMPATIBLE", "COMPATIBLE"), "Lfby$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.RealmsClient$CompatibleVersionResponse#COMPATIBLE
    [[maybe_unused]] static void set_field_COMPATIBLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "COMPATIBLE", "field_19582", "COMPATIBLE", "COMPATIBLE"), "Lfby$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.realms.RealmsClient$CompatibleVersionResponse#OUTDATED
    [[maybe_unused]] static jobject get_field_OUTDATED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "OUTDATED", "field_19583", "OUTDATED", "OUTDATED"), "Lfby$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.RealmsClient$CompatibleVersionResponse#OUTDATED
    [[maybe_unused]] static void set_field_OUTDATED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "OUTDATED", "field_19583", "OUTDATED", "OUTDATED"), "Lfby$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.realms.RealmsClient$CompatibleVersionResponse#OTHER
    [[maybe_unused]] static jobject get_field_OTHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "OTHER", "field_19584", "OTHER", "OTHER"), "Lfby$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.RealmsClient$CompatibleVersionResponse#OTHER
    [[maybe_unused]] static void set_field_OTHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "OTHER", "field_19584", "OTHER", "OTHER"), "Lfby$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lfby$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lfby$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_REALMS_REALMSCLIENT$COMPATIBLEVERSIONRESPONSE_HPP