// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_REALMS_DTO_REALMSWORLDOPTIONS_HPP
#define NET_MINECRAFT_CLIENT_REALMS_DTO_REALMSWORLDOPTIONS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.realms.dto.RealmsWorldOptions
 * Remapped: fcu
 */
namespace RealmsWorldOptions {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fcu", "com/mojang/realmsclient/dto/RealmsWorldOptions", "net/minecraft/class_4883", "net/minecraft/client/realms/dto/RealmsWorldOptions", "net/minecraft/src/C_3253_"));
        }
        return cachedClass;
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#pvp
    static jboolean get_field_pvp(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pvp", "field_22632", "pvp", "f_87598_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#pvp
    static void set_field_pvp(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pvp", "field_22632", "pvp", "f_87598_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#spawnAnimals
    static jboolean get_field_spawnAnimals(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "spawnAnimals", "field_22633", "spawnAnimals", "f_87599_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#spawnAnimals
    static void set_field_spawnAnimals(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "spawnAnimals", "field_22633", "spawnAnimals", "f_87599_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#spawnMonsters
    static jboolean get_field_spawnMonsters(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "spawnMonsters", "field_22634", "spawnMonsters", "f_87600_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#spawnMonsters
    static void set_field_spawnMonsters(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "spawnMonsters", "field_22634", "spawnMonsters", "f_87600_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#spawnNpcs
    static jboolean get_field_spawnNpcs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "spawnNPCs", "field_22635", "spawnNpcs", "f_87601_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#spawnNpcs
    static void set_field_spawnNpcs(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "spawnNPCs", "field_22635", "spawnNpcs", "f_87601_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#spawnProtection
    static jint get_field_spawnProtection(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "spawnProtection", "field_22636", "spawnProtection", "f_87602_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#spawnProtection
    static void set_field_spawnProtection(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "spawnProtection", "field_22636", "spawnProtection", "f_87602_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#commandBlocks
    static jboolean get_field_commandBlocks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "commandBlocks", "field_22637", "commandBlocks", "f_87603_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#commandBlocks
    static void set_field_commandBlocks(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "commandBlocks", "field_22637", "commandBlocks", "f_87603_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#forceGameMode
    static jboolean get_field_forceGameMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "forceGameMode", "field_22638", "forceGameMode", "f_87604_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#forceGameMode
    static void set_field_forceGameMode(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "forceGameMode", "field_22638", "forceGameMode", "f_87604_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#difficulty
    static jint get_field_difficulty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "difficulty", "field_22639", "difficulty", "f_87605_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#difficulty
    static void set_field_difficulty(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "difficulty", "field_22639", "difficulty", "f_87605_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#gameMode
    static jint get_field_gameMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "gameMode", "field_22640", "gameMode", "f_87606_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#gameMode
    static void set_field_gameMode(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "gameMode", "field_22640", "gameMode", "f_87606_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.realms.dto.RealmsWorldOptions#slotName
    static jobject get_field_slotName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "slotName", "field_22641", "slotName", "f_87607_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#slotName
    static void set_field_slotName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "slotName", "field_22641", "slotName", "f_87607_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#version
    static jobject get_field_version(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "version", "field_46843", "version", "f_303798_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#version
    static void set_field_version(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "version", "field_46843", "version", "f_303798_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#compatibility
    static jobject get_field_compatibility(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "compatibility", "field_46844", "compatibility", "f_302886_"), "Lfcp$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#compatibility
    static void set_field_compatibility(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "compatibility", "field_46844", "compatibility", "f_302886_"), "Lfcp$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#templateId
    static jlong get_field_templateId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "templateId", "field_22642", "templateId", "f_87608_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#templateId
    static void set_field_templateId(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "templateId", "field_22642", "templateId", "f_87608_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#templateImage
    static jobject get_field_templateImage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "templateImage", "field_22643", "templateImage", "f_87609_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#templateImage
    static void set_field_templateImage(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "templateImage", "field_22643", "templateImage", "f_87609_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.client.realms.dto.RealmsWorldOptions#empty
    static jboolean get_field_empty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "empty", "field_22645", "empty", "f_87611_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.RealmsWorldOptions#empty
    static void set_field_empty(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "empty", "field_22645", "empty", "f_87611_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32100
    [[maybe_unused]] static jboolean get_field_field_32100() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "DEFAULT_FORCE_GAME_MODE", "field_32100", "field_32100", "f_167290_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32100
    [[maybe_unused]] static void set_field_field_32100(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "DEFAULT_FORCE_GAME_MODE", "field_32100", "field_32100", "f_167290_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32101
    [[maybe_unused]] static jboolean get_field_field_32101() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DEFAULT_PVP", "field_32101", "field_32101", "f_167291_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32101
    [[maybe_unused]] static void set_field_field_32101(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DEFAULT_PVP", "field_32101", "field_32101", "f_167291_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32102
    [[maybe_unused]] static jboolean get_field_field_32102() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "DEFAULT_SPAWN_ANIMALS", "field_32102", "field_32102", "f_167292_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32102
    [[maybe_unused]] static void set_field_field_32102(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "DEFAULT_SPAWN_ANIMALS", "field_32102", "field_32102", "f_167292_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32103
    [[maybe_unused]] static jboolean get_field_field_32103() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "DEFAULT_SPAWN_MONSTERS", "field_32103", "field_32103", "f_167293_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32103
    [[maybe_unused]] static void set_field_field_32103(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "DEFAULT_SPAWN_MONSTERS", "field_32103", "field_32103", "f_167293_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32104
    [[maybe_unused]] static jboolean get_field_field_32104() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "DEFAULT_SPAWN_NPCS", "field_32104", "field_32104", "f_167294_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32104
    [[maybe_unused]] static void set_field_field_32104(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "DEFAULT_SPAWN_NPCS", "field_32104", "field_32104", "f_167294_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32105
    [[maybe_unused]] static jint get_field_field_32105() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "DEFAULT_SPAWN_PROTECTION", "field_32105", "field_32105", "f_167295_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32105
    [[maybe_unused]] static void set_field_field_32105(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "DEFAULT_SPAWN_PROTECTION", "field_32105", "field_32105", "f_167295_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32106
    [[maybe_unused]] static jboolean get_field_field_32106() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "DEFAULT_COMMAND_BLOCKS", "field_32106", "field_32106", "f_167296_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32106
    [[maybe_unused]] static void set_field_field_32106(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "DEFAULT_COMMAND_BLOCKS", "field_32106", "field_32106", "f_167296_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#DEFAULT_DIFFICULTY
    [[maybe_unused]] static jint get_field_DEFAULT_DIFFICULTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "DEFAULT_DIFFICULTY", "field_32107", "DEFAULT_DIFFICULTY", "f_167297_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#DEFAULT_DIFFICULTY
    [[maybe_unused]] static void set_field_DEFAULT_DIFFICULTY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "DEFAULT_DIFFICULTY", "field_32107", "DEFAULT_DIFFICULTY", "f_167297_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32108
    [[maybe_unused]] static jint get_field_field_32108() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "DEFAULT_GAME_MODE", "field_32108", "field_32108", "f_167298_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_32108
    [[maybe_unused]] static void set_field_field_32108(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "DEFAULT_GAME_MODE", "field_32108", "field_32108", "f_167298_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#DEFAULT_SLOT_NAME
    [[maybe_unused]] static jobject get_field_DEFAULT_SLOT_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "DEFAULT_SLOT_NAME", "field_32109", "DEFAULT_SLOT_NAME", "f_167299_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#DEFAULT_SLOT_NAME
    [[maybe_unused]] static void set_field_DEFAULT_SLOT_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "DEFAULT_SLOT_NAME", "field_32109", "DEFAULT_SLOT_NAME", "f_167299_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_46845
    [[maybe_unused]] static jobject get_field_field_46845() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DEFAULT_VERSION", "field_46845", "field_46845", "f_302703_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#field_46845
    [[maybe_unused]] static void set_field_field_46845(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DEFAULT_VERSION", "field_46845", "field_46845", "f_302703_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#DEFAULT_COMPATIBILITY
    [[maybe_unused]] static jobject get_field_DEFAULT_COMPATIBILITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "DEFAULT_COMPATIBILITY", "field_46842", "DEFAULT_COMPATIBILITY", "f_302303_"), "Lfcp$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#DEFAULT_COMPATIBILITY
    [[maybe_unused]] static void set_field_DEFAULT_COMPATIBILITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "DEFAULT_COMPATIBILITY", "field_46842", "DEFAULT_COMPATIBILITY", "f_302303_"), "Lfcp$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#DEFAULT_WORLD_TEMPLATE_ID
    [[maybe_unused]] static jlong get_field_DEFAULT_WORLD_TEMPLATE_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DEFAULT_TEMPLATE_ID", "field_32110", "DEFAULT_WORLD_TEMPLATE_ID", "f_167300_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#DEFAULT_WORLD_TEMPLATE_ID
    [[maybe_unused]] static void set_field_DEFAULT_WORLD_TEMPLATE_ID(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DEFAULT_TEMPLATE_ID", "field_32110", "DEFAULT_WORLD_TEMPLATE_ID", "f_167300_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#DEFAULT_WORLD_TEMPLATE_IMAGE
    [[maybe_unused]] static jobject get_field_DEFAULT_WORLD_TEMPLATE_IMAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "DEFAULT_TEMPLATE_IMAGE", "field_22646", "DEFAULT_WORLD_TEMPLATE_IMAGE", "f_87612_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.client.realms.dto.RealmsWorldOptions#DEFAULT_WORLD_TEMPLATE_IMAGE
    [[maybe_unused]] static void set_field_DEFAULT_WORLD_TEMPLATE_IMAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "DEFAULT_TEMPLATE_IMAGE", "field_22646", "DEFAULT_WORLD_TEMPLATE_IMAGE", "f_87612_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getDefaults() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createDefaults", "method_25076", "getDefaults", "m_87625_"), "()Lfcu;");
    }

    static jobject getDefaults() {
       const auto clazz = self();
       const auto methodID = methodID_getDefaults();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getEmptyDefaults() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createEmptyDefaults", "method_25080", "getEmptyDefaults", "m_87632_"), "()Lfcu;");
    }

    static jobject getEmptyDefaults() {
       const auto clazz = self();
       const auto methodID = methodID_getEmptyDefaults();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_setEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setEmpty", "method_25079", "setEmpty", "m_87630_"), "(Z)V");
    }

    static void setEmpty(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setEmpty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_25078", "parse", "m_87628_"), "(Lcom/google/gson/JsonObject;)Lfcu;");
    }

    static jobject parse(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_parse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getSlotName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSlotName", "method_25077", "getSlotName", "m_87626_"), "(I)Ljava/lang/String;");
    }

    static jobject getSlotName(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getSlotName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDefaultSlotName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getDefaultSlotName", "method_25081", "getDefaultSlotName", "m_87633_"), "(I)Ljava/lang/String;");
    }

    static jobject getDefaultSlotName(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getDefaultSlotName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toJson() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "toJson", "method_25082", "toJson", "m_87635_"), "()Ljava/lang/String;");
    }

    static jobject toJson(const jobject& obj) {
                
       const auto methodID = methodID_toJson();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_clone() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "clone", "method_25083", "clone", "clone"), "()Lfcu;");
    }

    static jobject clone(const jobject& obj) {
                
       const auto methodID = methodID_clone();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_REALMS_DTO_REALMSWORLDOPTIONS_HPP