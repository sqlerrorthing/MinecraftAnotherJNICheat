// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_REALMS_DTO_WORLDTEMPLATE$WORLDTEMPLATETYPE_HPP
#define NET_MINECRAFT_CLIENT_REALMS_DTO_WORLDTEMPLATE$WORLDTEMPLATETYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.realms.dto.WorldTemplate$WorldTemplateType
 * Remapped: fde$a
 */
namespace WorldTemplate$WorldTemplateType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("fde$a", "com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType", "net/minecraft/class_4890$class_4323", "net/minecraft/client/realms/dto/WorldTemplate$WorldTemplateType", "net/minecraft/src/C_3263_$C_3264_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.client.realms.dto.WorldTemplate$WorldTemplateType#WORLD_TEMPLATE
    [[maybe_unused]] static jobject get_field_WORLD_TEMPLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WORLD_TEMPLATE", "field_19447", "WORLD_TEMPLATE", "WORLD_TEMPLATE"), "Lfde$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.WorldTemplate$WorldTemplateType#WORLD_TEMPLATE
    [[maybe_unused]] static void set_field_WORLD_TEMPLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WORLD_TEMPLATE", "field_19447", "WORLD_TEMPLATE", "WORLD_TEMPLATE"), "Lfde$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.realms.dto.WorldTemplate$WorldTemplateType#MINIGAME
    [[maybe_unused]] static jobject get_field_MINIGAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MINIGAME", "field_19448", "MINIGAME", "MINIGAME"), "Lfde$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.WorldTemplate$WorldTemplateType#MINIGAME
    [[maybe_unused]] static void set_field_MINIGAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MINIGAME", "field_19448", "MINIGAME", "MINIGAME"), "Lfde$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.realms.dto.WorldTemplate$WorldTemplateType#ADVENTUREMAP
    [[maybe_unused]] static jobject get_field_ADVENTUREMAP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ADVENTUREMAP", "field_19449", "ADVENTUREMAP", "ADVENTUREMAP"), "Lfde$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.WorldTemplate$WorldTemplateType#ADVENTUREMAP
    [[maybe_unused]] static void set_field_ADVENTUREMAP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ADVENTUREMAP", "field_19449", "ADVENTUREMAP", "ADVENTUREMAP"), "Lfde$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.realms.dto.WorldTemplate$WorldTemplateType#EXPERIENCE
    [[maybe_unused]] static jobject get_field_EXPERIENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "EXPERIENCE", "field_19450", "EXPERIENCE", "EXPERIENCE"), "Lfde$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.WorldTemplate$WorldTemplateType#EXPERIENCE
    [[maybe_unused]] static void set_field_EXPERIENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "EXPERIENCE", "field_19450", "EXPERIENCE", "EXPERIENCE"), "Lfde$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.client.realms.dto.WorldTemplate$WorldTemplateType#INSPIRATION
    [[maybe_unused]] static jobject get_field_INSPIRATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "INSPIRATION", "field_19451", "INSPIRATION", "INSPIRATION"), "Lfde$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.realms.dto.WorldTemplate$WorldTemplateType#INSPIRATION
    [[maybe_unused]] static void set_field_INSPIRATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "INSPIRATION", "field_19451", "INSPIRATION", "INSPIRATION"), "Lfde$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lfde$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lfde$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_REALMS_DTO_WORLDTEMPLATE$WORLDTEMPLATETYPE_HPP