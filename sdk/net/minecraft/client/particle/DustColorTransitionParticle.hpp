// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_PARTICLE_DUSTCOLORTRANSITIONPARTICLE_HPP
#define NET_MINECRAFT_CLIENT_PARTICLE_DUSTCOLORTRANSITIONPARTICLE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.particle.DustColorTransitionParticle
 * Remapped: gbq
 */
namespace DustColorTransitionParticle {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gbq", "net/minecraft/client/particle/DustColorTransitionParticle", "net/minecraft/class_5734", "net/minecraft/client/particle/DustColorTransitionParticle", "net/minecraft/src/C_141690_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.particle.DustColorTransitionParticle#startColor
    static jobject get_field_startColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "fromColor", "field_28244", "startColor", "f_172050_"), "Lorg/joml/Vector3f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.particle.DustColorTransitionParticle#startColor
    static void set_field_startColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "fromColor", "field_28244", "startColor", "f_172050_"), "Lorg/joml/Vector3f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.particle.DustColorTransitionParticle#endColor
    static jobject get_field_endColor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "toColor", "field_28245", "endColor", "f_172051_"), "Lorg/joml/Vector3f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.particle.DustColorTransitionParticle#endColor
    static void set_field_endColor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "toColor", "field_28245", "endColor", "f_172051_"), "Lorg/joml/Vector3f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_darken() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "randomizeColor", "method_33073", "darken", "m_252968_"), "(Lorg/joml/Vector3f;F)Lorg/joml/Vector3f;");
    }

    static jobject darken(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_darken();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "lerpColors", "method_33074", "updateColor", "m_172069_"), "(F)V");
    }

    static void updateColor(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_updateColor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_buildGeometry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "render", "method_3074", "buildGeometry", "m_5744_"), "(Lfbm;Lffy;F)V");
    }

    static void buildGeometry(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_buildGeometry();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_PARTICLE_DUSTCOLORTRANSITIONPARTICLE_HPP