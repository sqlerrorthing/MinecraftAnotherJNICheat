// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_PARTICLE_PARTICLEMANAGER$RELOADRESULT_HPP
#define NET_MINECRAFT_CLIENT_PARTICLE_PARTICLEMANAGER$RELOADRESULT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.particle.ParticleManager$ReloadResult
 * Remapped: gcp$a
 */
namespace ParticleManager$ReloadResult {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gcp$a", "net/minecraft/client/particle/ParticleEngine$1ParticleDefinition", "net/minecraft/class_702$class_7759", "net/minecraft/client/particle/ParticleManager$ReloadResult", "net/minecraft/src/C_4024_$C_243491_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.particle.ParticleManager$ReloadResult#id
    static jobject get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "id", "comp_1036", "id", "f_244103_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.particle.ParticleManager$ReloadResult#id
    static void set_field_id(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "id", "comp_1036", "id", "f_244103_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.particle.ParticleManager$ReloadResult#sprites
    static jobject get_field_sprites(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "sprites", "comp_1037", "sprites", "f_243741_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.particle.ParticleManager$ReloadResult#sprites
    static void set_field_sprites(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "sprites", "comp_1037", "sprites", "f_243741_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID__id() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "id", "comp_1036", "id", "f_244103_"), "()Lakr;");
    }

    static jobject _id(const jobject& obj) {
                
       const auto methodID = methodID__id();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__sprites() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "sprites", "comp_1037", "sprites", "f_243741_"), "()Ljava/util/Optional;");
    }

    static jobject _sprites(const jobject& obj) {
                
       const auto methodID = methodID__sprites();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_PARTICLE_PARTICLEMANAGER$RELOADRESULT_HPP