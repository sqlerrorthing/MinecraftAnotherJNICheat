// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_PARTICLE_PARTICLE$DYNAMICALPHA_HPP
#define NET_MINECRAFT_CLIENT_PARTICLE_PARTICLE$DYNAMICALPHA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.particle.Particle$DynamicAlpha
 * Remapped: gcn$a
 */
namespace Particle$DynamicAlpha {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gcn$a", "net/minecraft/client/particle/Particle$LifetimeAlpha", "net/minecraft/class_703$class_9213", "net/minecraft/client/particle/Particle$DynamicAlpha", "net/minecraft/src/C_4022_$C_313259_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.client.particle.Particle$DynamicAlpha#startAlpha
    static jfloat get_field_startAlpha(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "startAlpha", "comp_2321", "startAlpha", "f_315806_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.particle.Particle$DynamicAlpha#startAlpha
    static void set_field_startAlpha(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "startAlpha", "comp_2321", "startAlpha", "f_315806_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.particle.Particle$DynamicAlpha#endAlpha
    static jfloat get_field_endAlpha(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "endAlpha", "comp_2322", "endAlpha", "f_316797_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.particle.Particle$DynamicAlpha#endAlpha
    static void set_field_endAlpha(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "endAlpha", "comp_2322", "endAlpha", "f_316797_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.particle.Particle$DynamicAlpha#startAtNormalizedAge
    static jfloat get_field_startAtNormalizedAge(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "startAtNormalizedAge", "comp_2323", "startAtNormalizedAge", "f_315332_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.particle.Particle$DynamicAlpha#startAtNormalizedAge
    static void set_field_startAtNormalizedAge(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "startAtNormalizedAge", "comp_2323", "startAtNormalizedAge", "f_315332_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.client.particle.Particle$DynamicAlpha#endAtNormalizedAge
    static jfloat get_field_endAtNormalizedAge(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "endAtNormalizedAge", "comp_2324", "endAtNormalizedAge", "f_315978_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.client.particle.Particle$DynamicAlpha#endAtNormalizedAge
    static void set_field_endAtNormalizedAge(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "endAtNormalizedAge", "comp_2324", "endAtNormalizedAge", "f_315978_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.client.particle.Particle$DynamicAlpha#OPAQUE
    [[maybe_unused]] static jobject get_field_OPAQUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ALWAYS_OPAQUE", "field_48941", "OPAQUE", "f_314120_"), "Lgcn$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.client.particle.Particle$DynamicAlpha#OPAQUE
    [[maybe_unused]] static void set_field_OPAQUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ALWAYS_OPAQUE", "field_48941", "OPAQUE", "f_314120_"), "Lgcn$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_isOpaque() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isOpaque", "method_56833", "isOpaque", "m_320160_"), "()Z");
    }

    static jboolean isOpaque(const jobject& obj) {
                
       const auto methodID = methodID_isOpaque();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAlpha() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "currentAlphaForAge", "method_56834", "getAlpha", "m_320282_"), "(IIF)F");
    }

    static jfloat getAlpha(const jobject& obj, const jint& arg0, const jint& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_getAlpha();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__startAlpha() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "startAlpha", "comp_2321", "startAlpha", "f_315806_"), "()F");
    }

    static jfloat _startAlpha(const jobject& obj) {
                
       const auto methodID = methodID__startAlpha();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__endAlpha() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "endAlpha", "comp_2322", "endAlpha", "f_316797_"), "()F");
    }

    static jfloat _endAlpha(const jobject& obj) {
                
       const auto methodID = methodID__endAlpha();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__startAtNormalizedAge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "startAtNormalizedAge", "comp_2323", "startAtNormalizedAge", "f_315332_"), "()F");
    }

    static jfloat _startAtNormalizedAge(const jobject& obj) {
                
       const auto methodID = methodID__startAtNormalizedAge();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__endAtNormalizedAge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "endAtNormalizedAge", "comp_2324", "endAtNormalizedAge", "f_315978_"), "()F");
    }

    static jfloat _endAtNormalizedAge(const jobject& obj) {
                
       const auto methodID = methodID__endAtNormalizedAge();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_PARTICLE_PARTICLE$DYNAMICALPHA_HPP