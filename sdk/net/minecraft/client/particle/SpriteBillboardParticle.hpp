// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_CLIENT_PARTICLE_SPRITEBILLBOARDPARTICLE_HPP
#define NET_MINECRAFT_CLIENT_PARTICLE_SPRITEBILLBOARDPARTICLE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.client.particle.SpriteBillboardParticle
 * Remapped: gdn
 */
namespace SpriteBillboardParticle {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("gdn", "net/minecraft/client/particle/TextureSheetParticle", "net/minecraft/class_4003", "net/minecraft/client/particle/SpriteBillboardParticle", "net/minecraft/src/C_4087_"));
        }
        return cachedClass;
    };

    // getter for protected field net.minecraft.client.particle.SpriteBillboardParticle#sprite
    static jobject get_field_sprite(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "sprite", "field_17886", "sprite", "f_108321_"), "Lgql;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.client.particle.SpriteBillboardParticle#sprite
    static void set_field_sprite(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "sprite", "field_17886", "sprite", "f_108321_"), "Lgql;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_setSprite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSprite", "method_18141", "setSprite", "m_108337_"), "(Lgql;)V");
    }

    static void setSprite(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setSprite();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMinU() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getU0", "method_18133", "getMinU", "m_5970_"), "()F");
    }

    static jfloat getMinU(const jobject& obj) {
                
       const auto methodID = methodID_getMinU();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxU() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getU1", "method_18134", "getMaxU", "m_5952_"), "()F");
    }

    static jfloat getMaxU(const jobject& obj) {
                
       const auto methodID = methodID_getMaxU();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMinV() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getV0", "method_18135", "getMinV", "m_5951_"), "()F");
    }

    static jfloat getMinV(const jobject& obj) {
                
       const auto methodID = methodID_getMinV();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxV() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getV1", "method_18136", "getMaxV", "m_5950_"), "()F");
    }

    static jfloat getMaxV(const jobject& obj) {
                
       const auto methodID = methodID_getMaxV();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__setSprite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pickSprite", "method_18140", "setSprite", "m_108335_"), "(Lgdi;)V");
    }

    static void _setSprite(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__setSprite();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setSpriteForAge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setSpriteFromAge", "method_18142", "setSpriteForAge", "m_108339_"), "(Lgdi;)V");
    }

    static void setSpriteForAge(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setSpriteForAge();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_CLIENT_PARTICLE_SPRITEBILLBOARDPARTICLE_HPP