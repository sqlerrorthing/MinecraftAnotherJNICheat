// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SCREEN_SLOT_FORGINGSLOTSMANAGER$BUILDER_HPP
#define NET_MINECRAFT_SCREEN_SLOT_FORGINGSLOTSMANAGER$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.screen.slot.ForgingSlotsManager$Builder
 * Remapped: cqy$a
 */
namespace ForgingSlotsManager$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cqy$a", "net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder", "net/minecraft/class_8047$class_8048", "net/minecraft/screen/slot/ForgingSlotsManager$Builder", "net/minecraft/src/C_265801_$C_265820_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.screen.slot.ForgingSlotsManager$Builder#inputSlots
    static jobject get_field_inputSlots(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "slots", "field_41909", "inputSlots", "f_265930_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.slot.ForgingSlotsManager$Builder#inputSlots
    static void set_field_inputSlots(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "slots", "field_41909", "inputSlots", "f_265930_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.slot.ForgingSlotsManager$Builder#resultSlot
    static jobject get_field_resultSlot(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "resultSlot", "field_41910", "resultSlot", "f_266115_"), "Lcqy$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.slot.ForgingSlotsManager$Builder#resultSlot
    static void set_field_resultSlot(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "resultSlot", "field_41910", "resultSlot", "f_266115_"), "Lcqy$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_input() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withSlot", "method_48374", "input", "m_266197_"), "(IIILjava/util/function/Predicate;)Lcqy$a;");
    }

    static jobject input(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_input();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_output() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withResultSlot", "method_48373", "output", "m_266198_"), "(III)Lcqy$a;");
    }

    static jobject output(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_output();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "build", "method_48372", "build", "m_266441_"), "()Lcqy;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SCREEN_SLOT_FORGINGSLOTSMANAGER$BUILDER_HPP