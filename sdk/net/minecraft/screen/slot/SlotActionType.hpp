// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SCREEN_SLOT_SLOTACTIONTYPE_HPP
#define NET_MINECRAFT_SCREEN_SLOT_SLOTACTIONTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.screen.slot.SlotActionType
 * Remapped: cqe
 */
namespace SlotActionType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cqe", "net/minecraft/world/inventory/ClickType", "net/minecraft/class_1713", "net/minecraft/screen/slot/SlotActionType", "net/minecraft/src/C_1245_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.screen.slot.SlotActionType#PICKUP
    [[maybe_unused]] static jobject get_field_PICKUP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PICKUP", "field_7790", "PICKUP", "PICKUP"), "Lcqe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.screen.slot.SlotActionType#PICKUP
    [[maybe_unused]] static void set_field_PICKUP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PICKUP", "field_7790", "PICKUP", "PICKUP"), "Lcqe;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.screen.slot.SlotActionType#QUICK_MOVE
    [[maybe_unused]] static jobject get_field_QUICK_MOVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "QUICK_MOVE", "field_7794", "QUICK_MOVE", "QUICK_MOVE"), "Lcqe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.screen.slot.SlotActionType#QUICK_MOVE
    [[maybe_unused]] static void set_field_QUICK_MOVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "QUICK_MOVE", "field_7794", "QUICK_MOVE", "QUICK_MOVE"), "Lcqe;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.screen.slot.SlotActionType#SWAP
    [[maybe_unused]] static jobject get_field_SWAP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SWAP", "field_7791", "SWAP", "SWAP"), "Lcqe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.screen.slot.SlotActionType#SWAP
    [[maybe_unused]] static void set_field_SWAP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SWAP", "field_7791", "SWAP", "SWAP"), "Lcqe;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.screen.slot.SlotActionType#CLONE
    [[maybe_unused]] static jobject get_field_CLONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CLONE", "field_7796", "CLONE", "CLONE"), "Lcqe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.screen.slot.SlotActionType#CLONE
    [[maybe_unused]] static void set_field_CLONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CLONE", "field_7796", "CLONE", "CLONE"), "Lcqe;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.screen.slot.SlotActionType#THROW
    [[maybe_unused]] static jobject get_field_THROW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "THROW", "field_7795", "THROW", "THROW"), "Lcqe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.screen.slot.SlotActionType#THROW
    [[maybe_unused]] static void set_field_THROW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "THROW", "field_7795", "THROW", "THROW"), "Lcqe;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.screen.slot.SlotActionType#QUICK_CRAFT
    [[maybe_unused]] static jobject get_field_QUICK_CRAFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "QUICK_CRAFT", "field_7789", "QUICK_CRAFT", "QUICK_CRAFT"), "Lcqe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.screen.slot.SlotActionType#QUICK_CRAFT
    [[maybe_unused]] static void set_field_QUICK_CRAFT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "QUICK_CRAFT", "field_7789", "QUICK_CRAFT", "QUICK_CRAFT"), "Lcqe;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.screen.slot.SlotActionType#PICKUP_ALL
    [[maybe_unused]] static jobject get_field_PICKUP_ALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PICKUP_ALL", "field_7793", "PICKUP_ALL", "PICKUP_ALL"), "Lcqe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.screen.slot.SlotActionType#PICKUP_ALL
    [[maybe_unused]] static void set_field_PICKUP_ALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PICKUP_ALL", "field_7793", "PICKUP_ALL", "PICKUP_ALL"), "Lcqe;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lcqe;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lcqe;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SCREEN_SLOT_SLOTACTIONTYPE_HPP