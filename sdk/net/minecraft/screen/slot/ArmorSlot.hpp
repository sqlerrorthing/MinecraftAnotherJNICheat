// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SCREEN_SLOT_ARMORSLOT_HPP
#define NET_MINECRAFT_SCREEN_SLOT_ARMORSLOT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.screen.slot.ArmorSlot
 * Remapped: cpx
 */
namespace ArmorSlot {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cpx", "net/minecraft/world/inventory/ArmorSlot", "net/minecraft/class_9692", "net/minecraft/screen/slot/ArmorSlot", "net/minecraft/src/C_336533_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.screen.slot.ArmorSlot#entity
    static jobject get_field_entity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "owner", "field_51622", "entity", "f_337233_"), "Lbtn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.slot.ArmorSlot#entity
    static void set_field_entity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "owner", "field_51622", "entity", "f_337233_"), "Lbtn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.slot.ArmorSlot#equipmentSlot
    static jobject get_field_equipmentSlot(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "slot", "field_51623", "equipmentSlot", "f_337717_"), "Lbsy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.slot.ArmorSlot#equipmentSlot
    static void set_field_equipmentSlot(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "slot", "field_51623", "equipmentSlot", "f_337717_"), "Lbsy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.slot.ArmorSlot#backgroundSprite
    static jobject get_field_backgroundSprite(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "emptyIcon", "field_51624", "backgroundSprite", "f_337238_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.slot.ArmorSlot#backgroundSprite
    static void set_field_backgroundSprite(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "emptyIcon", "field_51624", "backgroundSprite", "f_337238_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_setStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setByPlayer", "method_48931", "setStack", "m_269206_"), "(Lcuq;Lcuq;)V");
    }

    static void setStack(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getMaxItemCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMaxStackSize", "method_7675", "getMaxItemCount", "m_6641_"), "()I");
    }

    static jint getMaxItemCount(const jobject& obj) {
                
       const auto methodID = methodID_getMaxItemCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_canInsert() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mayPlace", "method_7680", "canInsert", "m_5857_"), "(Lcuq;)Z");
    }

    static jboolean canInsert(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canInsert();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canTakeItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mayPickup", "method_7674", "canTakeItems", "m_8010_"), "(Lcmx;)Z");
    }

    static jboolean canTakeItems(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canTakeItems();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBackgroundSprite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getNoItemIcon", "method_7679", "getBackgroundSprite", "m_7543_"), "()Lcom/mojang/datafixers/util/Pair;");
    }

    static jobject getBackgroundSprite(const jobject& obj) {
                
       const auto methodID = methodID_getBackgroundSprite();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SCREEN_SLOT_ARMORSLOT_HPP