// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SCREEN_LOOMSCREENHANDLER_HPP
#define NET_MINECRAFT_SCREEN_LOOMSCREENHANDLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.screen.LoomScreenHandler
 * Remapped: cra
 */
namespace LoomScreenHandler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cra", "net/minecraft/world/inventory/LoomMenu", "net/minecraft/class_1726", "net/minecraft/screen/LoomScreenHandler", "net/minecraft/src/C_1283_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.screen.LoomScreenHandler#NO_PATTERN
    [[maybe_unused]] static jint get_field_NO_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PATTERN_NOT_SET", "field_39120", "NO_PATTERN", "f_219989_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.LoomScreenHandler#NO_PATTERN
    [[maybe_unused]] static void set_field_NO_PATTERN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PATTERN_NOT_SET", "field_39120", "NO_PATTERN", "f_219989_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.screen.LoomScreenHandler#INVENTORY_START
    [[maybe_unused]] static jint get_field_INVENTORY_START() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "INV_SLOT_START", "field_30826", "INVENTORY_START", "f_150612_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.LoomScreenHandler#INVENTORY_START
    [[maybe_unused]] static void set_field_INVENTORY_START(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "INV_SLOT_START", "field_30826", "INVENTORY_START", "f_150612_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.screen.LoomScreenHandler#INVENTORY_END
    [[maybe_unused]] static jint get_field_INVENTORY_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "INV_SLOT_END", "field_30827", "INVENTORY_END", "f_150613_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.LoomScreenHandler#INVENTORY_END
    [[maybe_unused]] static void set_field_INVENTORY_END(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "INV_SLOT_END", "field_30827", "INVENTORY_END", "f_150613_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.screen.LoomScreenHandler#HOTBAR_START
    [[maybe_unused]] static jint get_field_HOTBAR_START() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "USE_ROW_SLOT_START", "field_30828", "HOTBAR_START", "f_150614_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.LoomScreenHandler#HOTBAR_START
    [[maybe_unused]] static void set_field_HOTBAR_START(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "USE_ROW_SLOT_START", "field_30828", "HOTBAR_START", "f_150614_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.screen.LoomScreenHandler#HOTBAR_END
    [[maybe_unused]] static jint get_field_HOTBAR_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "USE_ROW_SLOT_END", "field_30829", "HOTBAR_END", "f_150615_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.LoomScreenHandler#HOTBAR_END
    [[maybe_unused]] static void set_field_HOTBAR_END(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "USE_ROW_SLOT_END", "field_30829", "HOTBAR_END", "f_150615_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.screen.LoomScreenHandler#context
    static jobject get_field_context(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "access", "field_17316", "context", "f_39845_"), "Lcqg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.LoomScreenHandler#context
    static void set_field_context(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "access", "field_17316", "context", "f_39845_"), "Lcqg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.screen.LoomScreenHandler#selectedPattern
    static jobject get_field_selectedPattern(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "selectedBannerPatternIndex", "field_17317", "selectedPattern", "f_39846_"), "Lcqn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.screen.LoomScreenHandler#selectedPattern
    static void set_field_selectedPattern(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "selectedBannerPatternIndex", "field_17317", "selectedPattern", "f_39846_"), "Lcqn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.LoomScreenHandler#bannerPatterns
    static jobject get_field_bannerPatterns(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "selectablePatterns", "field_39121", "bannerPatterns", "f_219990_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.LoomScreenHandler#bannerPatterns
    static void set_field_bannerPatterns(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "selectablePatterns", "field_39121", "bannerPatterns", "f_219990_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.screen.LoomScreenHandler#inventoryChangeListener
    static jobject get_field_inventoryChangeListener(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "slotUpdateListener", "field_17318", "inventoryChangeListener", "f_39847_"), "Ljava/lang/Runnable;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.screen.LoomScreenHandler#inventoryChangeListener
    static void set_field_inventoryChangeListener(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "slotUpdateListener", "field_17318", "inventoryChangeListener", "f_39847_"), "Ljava/lang/Runnable;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.LoomScreenHandler#bannerPatternLookup
    static jobject get_field_bannerPatternLookup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "patternGetter", "field_49741", "bannerPatternLookup", "f_316655_"), "Ljn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.LoomScreenHandler#bannerPatternLookup
    static void set_field_bannerPatternLookup(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "patternGetter", "field_49741", "bannerPatternLookup", "f_316655_"), "Ljn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.screen.LoomScreenHandler#bannerSlot
    static jobject get_field_bannerSlot(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "bannerSlot", "field_17319", "bannerSlot", "f_39848_"), "Lcrq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.screen.LoomScreenHandler#bannerSlot
    static void set_field_bannerSlot(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "bannerSlot", "field_17319", "bannerSlot", "f_39848_"), "Lcrq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.screen.LoomScreenHandler#dyeSlot
    static jobject get_field_dyeSlot(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "dyeSlot", "field_17320", "dyeSlot", "f_39849_"), "Lcrq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.screen.LoomScreenHandler#dyeSlot
    static void set_field_dyeSlot(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "dyeSlot", "field_17320", "dyeSlot", "f_39849_"), "Lcrq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.LoomScreenHandler#patternSlot
    static jobject get_field_patternSlot(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "patternSlot", "field_17321", "patternSlot", "f_39850_"), "Lcrq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.LoomScreenHandler#patternSlot
    static void set_field_patternSlot(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "patternSlot", "field_17321", "patternSlot", "f_39850_"), "Lcrq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.LoomScreenHandler#outputSlot
    static jobject get_field_outputSlot(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "resultSlot", "field_17322", "outputSlot", "f_39851_"), "Lcrq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.LoomScreenHandler#outputSlot
    static void set_field_outputSlot(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "resultSlot", "field_17322", "outputSlot", "f_39851_"), "Lcrq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.screen.LoomScreenHandler#lastTakeResultTime
    static jlong get_field_lastTakeResultTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "lastSoundTime", "field_20383", "lastTakeResultTime", "f_39852_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static default field net.minecraft.screen.LoomScreenHandler#lastTakeResultTime
    static void set_field_lastTakeResultTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "lastSoundTime", "field_20383", "lastTakeResultTime", "f_39852_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.LoomScreenHandler#input
    static jobject get_field_input(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "inputContainer", "field_7850", "input", "f_39853_"), "Lbqk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.LoomScreenHandler#input
    static void set_field_input(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "inputContainer", "field_7850", "input", "f_39853_"), "Lbqk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.LoomScreenHandler#output
    static jobject get_field_output(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "outputContainer", "field_17323", "output", "f_39854_"), "Lbqk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.LoomScreenHandler#output
    static void set_field_output(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "outputContainer", "field_17323", "output", "f_39854_"), "Lbqk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_canUse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "stillValid", "method_7597", "canUse", "m_6875_"), "(Lcmx;)Z");
    }

    static jboolean canUse(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canUse();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onButtonClick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clickMenuButton", "method_7604", "onButtonClick", "m_6366_"), "(Lcmx;I)Z");
    }

    static jboolean onButtonClick(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_onButtonClick();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getPatternsFor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getSelectablePatterns", "method_43705", "getPatternsFor", "m_219993_"), "(Lcuq;)Ljava/util/List;");
    }

    static jobject getPatternsFor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPatternsFor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPatternIndexValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isValidPatternIndex", "method_45016", "isPatternIndexValid", "m_242642_"), "(I)Z");
    }

    static jboolean isPatternIndexValid(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_isPatternIndexValid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onContentChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "slotsChanged", "method_7609", "onContentChanged", "m_6199_"), "(Lbqk;)V");
    }

    static void onContentChanged(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onContentChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBannerPatterns() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getSelectablePatterns", "method_43706", "getBannerPatterns", "m_219995_"), "()Ljava/util/List;");
    }

    static jobject getBannerPatterns(const jobject& obj) {
                
       const auto methodID = methodID_getBannerPatterns();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSelectedPattern() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getSelectedBannerPatternIndex", "method_7647", "getSelectedPattern", "m_39891_"), "()I");
    }

    static jint getSelectedPattern(const jobject& obj) {
                
       const auto methodID = methodID_getSelectedPattern();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setInventoryChangeListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "registerUpdateListener", "method_17423", "setInventoryChangeListener", "m_39878_"), "(Ljava/lang/Runnable;)V");
    }

    static void setInventoryChangeListener(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setInventoryChangeListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_quickMove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "quickMoveStack", "method_7601", "quickMove", "m_7648_"), "(Lcmx;I)Lcuq;");
    }

    static jobject quickMove(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_quickMove();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onClosed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removed", "method_7595", "onClosed", "m_6877_"), "(Lcmx;)V");
    }

    static void onClosed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onClosed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateOutputSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupResultSlot", "method_7648", "updateOutputSlot", "m_219991_"), "(Ljm;)V");
    }

    static void updateOutputSlot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateOutputSlot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBannerSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getBannerSlot", "method_17428", "getBannerSlot", "m_39894_"), "()Lcrq;");
    }

    static jobject getBannerSlot(const jobject& obj) {
                
       const auto methodID = methodID_getBannerSlot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDyeSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getDyeSlot", "method_17429", "getDyeSlot", "m_39895_"), "()Lcrq;");
    }

    static jobject getDyeSlot(const jobject& obj) {
                
       const auto methodID = methodID_getDyeSlot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPatternSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getPatternSlot", "method_17430", "getPatternSlot", "m_39896_"), "()Lcrq;");
    }

    static jobject getPatternSlot(const jobject& obj) {
                
       const auto methodID = methodID_getPatternSlot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOutputSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getResultSlot", "method_17431", "getOutputSlot", "m_39897_"), "()Lcrq;");
    }

    static jobject getOutputSlot(const jobject& obj) {
                
       const auto methodID = methodID_getOutputSlot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SCREEN_LOOMSCREENHANDLER_HPP