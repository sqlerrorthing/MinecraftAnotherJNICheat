// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SCREEN_ABSTRACTRECIPESCREENHANDLER_HPP
#define NET_MINECRAFT_SCREEN_ABSTRACTRECIPESCREENHANDLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.screen.AbstractRecipeScreenHandler
 * Remapped: cri
 */
namespace AbstractRecipeScreenHandler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cri", "net/minecraft/world/inventory/RecipeBookMenu", "net/minecraft/class_1729", "net/minecraft/screen/AbstractRecipeScreenHandler", "net/minecraft/src/C_1297_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_fillInputSlots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handlePlacement", "method_17697", "fillInputSlots", "m_6951_"), "(ZLczb;Laqv;)V");
    }

    static void fillInputSlots(const jobject& obj, const jboolean& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_fillInputSlots();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onInputSlotFillStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("an_", "beginPlacingRecipe", "method_59963", "onInputSlotFillStart", "m_340196_"), "()V");
    }

    static void onInputSlotFillStart(const jobject& obj) {
                
       const auto methodID = methodID_onInputSlotFillStart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onInputSlotFillFinish() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "finishPlacingRecipe", "method_59964", "onInputSlotFillFinish", "m_338706_"), "(Lczb;)V");
    }

    static void onInputSlotFillFinish(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onInputSlotFillFinish();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_populateRecipeFinder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillCraftSlotsStackedContents", "method_7654", "populateRecipeFinder", "m_5816_"), "(Lcnb;)V");
    }

    static void populateRecipeFinder(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_populateRecipeFinder();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clearCraftingSlots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "clearCraftingContent", "method_7657", "clearCraftingSlots", "m_6650_"), "()V");
    }

    static void clearCraftingSlots(const jobject& obj) {
                
       const auto methodID = methodID_clearCraftingSlots();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_matches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "recipeMatches", "method_7652", "matches", "m_6032_"), "(Lczb;)Z");
    }

    static jboolean matches(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_matches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCraftingResultSlotIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getResultSlotIndex", "method_7655", "getCraftingResultSlotIndex", "m_6636_"), "()I");
    }

    static jint getCraftingResultSlotIndex(const jobject& obj) {
                
       const auto methodID = methodID_getCraftingResultSlotIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCraftingWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getGridWidth", "method_7653", "getCraftingWidth", "m_6635_"), "()I");
    }

    static jint getCraftingWidth(const jobject& obj) {
                
       const auto methodID = methodID_getCraftingWidth();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCraftingHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getGridHeight", "method_7656", "getCraftingHeight", "m_6656_"), "()I");
    }

    static jint getCraftingHeight(const jobject& obj) {
                
       const auto methodID = methodID_getCraftingHeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCraftingSlotCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getSize", "method_7658", "getCraftingSlotCount", "m_6653_"), "()I");
    }

    static jint getCraftingSlotCount(const jobject& obj) {
                
       const auto methodID = methodID_getCraftingSlotCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCategory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getRecipeBookType", "method_30264", "getCategory", "m_5867_"), "()Lcrj;");
    }

    static jobject getCategory(const jobject& obj) {
                
       const auto methodID = methodID_getCategory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canInsertIntoSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "shouldMoveToInventory", "method_32339", "canInsertIntoSlot", "m_142157_"), "(I)Z");
    }

    static jboolean canInsertIntoSlot(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_canInsertIntoSlot();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_SCREEN_ABSTRACTRECIPESCREENHANDLER_HPP