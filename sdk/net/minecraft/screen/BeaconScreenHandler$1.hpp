// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SCREEN_BEACONSCREENHANDLER$1_HPP
#define NET_MINECRAFT_SCREEN_BEACONSCREENHANDLER$1_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.screen.BeaconScreenHandler$1
 * Remapped: cpy$1
 */
namespace BeaconScreenHandler$1 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cpy$1", "net/minecraft/world/inventory/BeaconMenu$1", "net/minecraft/class_1704$1", "net/minecraft/screen/BeaconScreenHandler$1", "net/minecraft/src/C_1230_$C_1231_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_isValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canPlaceItem", "method_5437", "isValid", "m_7013_"), "(ILcuq;)Z");
    }

    static jboolean isValid(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isValid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getMaxCountPerStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("al_", "getMaxStackSize", "method_5444", "getMaxCountPerStack", "m_6893_"), "()I");
    }

    static jint getMaxCountPerStack(const jobject& obj) {
                
       const auto methodID = methodID_getMaxCountPerStack();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SCREEN_BEACONSCREENHANDLER$1_HPP