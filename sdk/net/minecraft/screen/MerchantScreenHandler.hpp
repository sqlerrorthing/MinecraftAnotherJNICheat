// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_SCREEN_MERCHANTSCREENHANDLER_HPP
#define NET_MINECRAFT_SCREEN_MERCHANTSCREENHANDLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.screen.MerchantScreenHandler
 * Remapped: cre
 */
namespace MerchantScreenHandler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cre", "net/minecraft/world/inventory/MerchantMenu", "net/minecraft/class_1728", "net/minecraft/screen/MerchantScreenHandler", "net/minecraft/src/C_1294_"));
        }
        return cachedClass;
    };

    // getter for static protected field net.minecraft.screen.MerchantScreenHandler#INPUT_1_ID
    [[maybe_unused]] static jint get_field_INPUT_1_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PAYMENT1_SLOT", "field_30830", "INPUT_1_ID", "f_150619_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.screen.MerchantScreenHandler#INPUT_1_ID
    [[maybe_unused]] static void set_field_INPUT_1_ID(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PAYMENT1_SLOT", "field_30830", "INPUT_1_ID", "f_150619_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.screen.MerchantScreenHandler#INPUT_2_ID
    [[maybe_unused]] static jint get_field_INPUT_2_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PAYMENT2_SLOT", "field_30831", "INPUT_2_ID", "f_150620_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.screen.MerchantScreenHandler#INPUT_2_ID
    [[maybe_unused]] static void set_field_INPUT_2_ID(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PAYMENT2_SLOT", "field_30831", "INPUT_2_ID", "f_150620_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.screen.MerchantScreenHandler#OUTPUT_ID
    [[maybe_unused]] static jint get_field_OUTPUT_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "RESULT_SLOT", "field_30832", "OUTPUT_ID", "f_150621_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.screen.MerchantScreenHandler#OUTPUT_ID
    [[maybe_unused]] static void set_field_OUTPUT_ID(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "RESULT_SLOT", "field_30832", "OUTPUT_ID", "f_150621_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.screen.MerchantScreenHandler#INVENTORY_START
    [[maybe_unused]] static jint get_field_INVENTORY_START() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "INV_SLOT_START", "field_30833", "INVENTORY_START", "f_150622_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#INVENTORY_START
    [[maybe_unused]] static void set_field_INVENTORY_START(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "INV_SLOT_START", "field_30833", "INVENTORY_START", "f_150622_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.screen.MerchantScreenHandler#INVENTORY_END
    [[maybe_unused]] static jint get_field_INVENTORY_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "INV_SLOT_END", "field_30834", "INVENTORY_END", "f_150623_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#INVENTORY_END
    [[maybe_unused]] static void set_field_INVENTORY_END(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "INV_SLOT_END", "field_30834", "INVENTORY_END", "f_150623_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.screen.MerchantScreenHandler#HOTBAR_START
    [[maybe_unused]] static jint get_field_HOTBAR_START() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "USE_ROW_SLOT_START", "field_30835", "HOTBAR_START", "f_150624_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#HOTBAR_START
    [[maybe_unused]] static void set_field_HOTBAR_START(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "USE_ROW_SLOT_START", "field_30835", "HOTBAR_START", "f_150624_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.screen.MerchantScreenHandler#HOTBAR_END
    [[maybe_unused]] static jint get_field_HOTBAR_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "USE_ROW_SLOT_END", "field_30836", "HOTBAR_END", "f_150625_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#HOTBAR_END
    [[maybe_unused]] static void set_field_HOTBAR_END(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "USE_ROW_SLOT_END", "field_30836", "HOTBAR_END", "f_150625_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.screen.MerchantScreenHandler#INPUT_1_X
    [[maybe_unused]] static jint get_field_INPUT_1_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SELLSLOT1_X", "field_30837", "INPUT_1_X", "f_150626_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#INPUT_1_X
    [[maybe_unused]] static void set_field_INPUT_1_X(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SELLSLOT1_X", "field_30837", "INPUT_1_X", "f_150626_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.screen.MerchantScreenHandler#INPUT_2_X
    [[maybe_unused]] static jint get_field_INPUT_2_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SELLSLOT2_X", "field_30838", "INPUT_2_X", "f_150627_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#INPUT_2_X
    [[maybe_unused]] static void set_field_INPUT_2_X(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SELLSLOT2_X", "field_30838", "INPUT_2_X", "f_150627_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.screen.MerchantScreenHandler#OUTPUT_X
    [[maybe_unused]] static jint get_field_OUTPUT_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "BUYSLOT_X", "field_30839", "OUTPUT_X", "f_150628_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#OUTPUT_X
    [[maybe_unused]] static void set_field_OUTPUT_X(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "BUYSLOT_X", "field_30839", "OUTPUT_X", "f_150628_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.screen.MerchantScreenHandler#SLOT_Y
    [[maybe_unused]] static jint get_field_SLOT_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ROW_Y", "field_30840", "SLOT_Y", "f_150629_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#SLOT_Y
    [[maybe_unused]] static void set_field_SLOT_Y(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ROW_Y", "field_30840", "SLOT_Y", "f_150629_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.screen.MerchantScreenHandler#merchant
    static jobject get_field_merchant(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "trader", "field_7863", "merchant", "f_40027_"), "Ldbt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#merchant
    static void set_field_merchant(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "trader", "field_7863", "merchant", "f_40027_"), "Ldbt;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.MerchantScreenHandler#merchantInventory
    static jobject get_field_merchantInventory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "tradeContainer", "field_7861", "merchantInventory", "f_40028_"), "Lcrd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#merchantInventory
    static void set_field_merchantInventory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "tradeContainer", "field_7861", "merchantInventory", "f_40028_"), "Lcrd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.MerchantScreenHandler#levelProgress
    static jint get_field_levelProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "merchantLevel", "field_18669", "levelProgress", "f_40029_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#levelProgress
    static void set_field_levelProgress(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "merchantLevel", "field_18669", "levelProgress", "f_40029_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.MerchantScreenHandler#leveled
    static jboolean get_field_leveled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "showProgressBar", "field_18670", "leveled", "f_40030_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#leveled
    static void set_field_leveled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "showProgressBar", "field_18670", "leveled", "f_40030_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.screen.MerchantScreenHandler#canRefreshTrades
    static jboolean get_field_canRefreshTrades(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "canRestock", "field_19358", "canRefreshTrades", "f_40031_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.screen.MerchantScreenHandler#canRefreshTrades
    static void set_field_canRefreshTrades(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "canRestock", "field_19358", "canRefreshTrades", "f_40031_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_setLeveled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setShowProgressBar", "method_19253", "setLeveled", "m_40048_"), "(Z)V");
    }

    static void setLeveled(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setLeveled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onContentChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "slotsChanged", "method_7609", "onContentChanged", "m_6199_"), "(Lbqk;)V");
    }

    static void onContentChanged(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onContentChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setRecipeIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setSelectionHint", "method_7650", "setRecipeIndex", "m_40063_"), "(I)V");
    }

    static void setRecipeIndex(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setRecipeIndex();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canUse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "stillValid", "method_7597", "canUse", "m_6875_"), "(Lcmx;)Z");
    }

    static jboolean canUse(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canUse();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getTraderXp", "method_19254", "getExperience", "m_40065_"), "()I");
    }

    static jint getExperience(const jobject& obj) {
                
       const auto methodID = methodID_getExperience();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMerchantRewardedExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getFutureTraderXp", "method_19256", "getMerchantRewardedExperience", "m_40068_"), "()I");
    }

    static jint getMerchantRewardedExperience(const jobject& obj) {
                
       const auto methodID = methodID_getMerchantRewardedExperience();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setExperienceFromServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "setXp", "method_19255", "setExperienceFromServer", "m_40066_"), "(I)V");
    }

    static void setExperienceFromServer(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setExperienceFromServer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLevelProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getTraderLevel", "method_19258", "getLevelProgress", "m_40071_"), "()I");
    }

    static jint getLevelProgress(const jobject& obj) {
                
       const auto methodID = methodID_getLevelProgress();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setLevelProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "setMerchantLevel", "method_19257", "setLevelProgress", "m_40069_"), "(I)V");
    }

    static void setLevelProgress(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setLevelProgress();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setCanRefreshTrades() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setCanRestock", "method_20700", "setCanRefreshTrades", "m_40058_"), "(Z)V");
    }

    static void setCanRefreshTrades(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setCanRefreshTrades();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__canRefreshTrades() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "canRestock", "method_20701", "canRefreshTrades", "m_40074_"), "()Z");
    }

    static jboolean _canRefreshTrades(const jobject& obj) {
                
       const auto methodID = methodID__canRefreshTrades();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canInsertIntoSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canTakeItemForPickAll", "method_7613", "canInsertIntoSlot", "m_5882_"), "(Lcuq;Lcrq;)Z");
    }

    static jboolean canInsertIntoSlot(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canInsertIntoSlot();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_quickMove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "quickMoveStack", "method_7601", "quickMove", "m_7648_"), "(Lcmx;I)Lcuq;");
    }

    static jobject quickMove(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_quickMove();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_playYesSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "playTradeSound", "method_20595", "playYesSound", "m_40077_"), "()V");
    }

    static void playYesSound(const jobject& obj) {
                
       const auto methodID = methodID_playYesSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onClosed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removed", "method_7595", "onClosed", "m_6877_"), "(Lcmx;)V");
    }

    static void onClosed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onClosed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_switchTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "tryMoveItems", "method_20215", "switchTo", "m_40072_"), "(I)V");
    }

    static void switchTo(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_switchTo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_autofill() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "moveFromInventoryToPaymentSlot", "method_20214", "autofill", "m_40060_"), "(ILdbs;)V");
    }

    static void autofill(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_autofill();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setOffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOffers", "method_17437", "setOffers", "m_40046_"), "(Ldbv;)V");
    }

    static void setOffers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOffers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRecipes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getOffers", "method_17438", "getRecipes", "m_40075_"), "()Ldbv;");
    }

    static jobject getRecipes(const jobject& obj) {
                
       const auto methodID = methodID_getRecipes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isLeveled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "showProgressBar", "method_19259", "isLeveled", "m_40076_"), "()Z");
    }

    static jboolean isLeveled(const jobject& obj) {
                
       const auto methodID = methodID_isLeveled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_SCREEN_MERCHANTSCREENHANDLER_HPP