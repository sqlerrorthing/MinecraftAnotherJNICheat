// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_SERVER_LOOTTABLE_ENTITYLOOTTABLEGENERATOR_HPP
#define NET_MINECRAFT_DATA_SERVER_LOOTTABLE_ENTITYLOOTTABLEGENERATOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.server.loottable.EntityLootTableGenerator
 * Remapped: mv
 */
namespace EntityLootTableGenerator {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("mv", "net/minecraft/data/loot/EntityLootSubProvider", "net/minecraft/class_7789", "net/minecraft/data/server/loottable/EntityLootTableGenerator", "net/minecraft/src/C_243464_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.data.server.loottable.EntityLootTableGenerator#ENTITY_TYPES_IN_MISC_GROUP_TO_CHECK
    [[maybe_unused]] static jobject get_field_ENTITY_TYPES_IN_MISC_GROUP_TO_CHECK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPECIAL_LOOT_TABLE_TYPES", "field_40613", "ENTITY_TYPES_IN_MISC_GROUP_TO_CHECK", "f_244591_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.data.server.loottable.EntityLootTableGenerator#ENTITY_TYPES_IN_MISC_GROUP_TO_CHECK
    [[maybe_unused]] static void set_field_ENTITY_TYPES_IN_MISC_GROUP_TO_CHECK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPECIAL_LOOT_TABLE_TYPES", "field_40613", "ENTITY_TYPES_IN_MISC_GROUP_TO_CHECK", "f_244591_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.data.server.loottable.EntityLootTableGenerator#registryLookup
    static jobject get_field_registryLookup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "registries", "field_51846", "registryLookup", "f_337320_"), "Ljo$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.data.server.loottable.EntityLootTableGenerator#registryLookup
    static void set_field_registryLookup(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "registries", "field_51846", "registryLookup", "f_337320_"), "Ljo$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.server.loottable.EntityLootTableGenerator#requiredFeatures
    static jobject get_field_requiredFeatures(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "allowed", "field_42084", "requiredFeatures", "f_265862_"), "Lcpl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.server.loottable.EntityLootTableGenerator#requiredFeatures
    static void set_field_requiredFeatures(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "allowed", "field_42084", "requiredFeatures", "f_265862_"), "Lcpl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.server.loottable.EntityLootTableGenerator#featureSet
    static jobject get_field_featureSet(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "required", "field_42085", "featureSet", "f_266009_"), "Lcpl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.server.loottable.EntityLootTableGenerator#featureSet
    static void set_field_featureSet(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "required", "field_42085", "featureSet", "f_266009_"), "Lcpl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.server.loottable.EntityLootTableGenerator#lootTables
    static jobject get_field_lootTables(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "map", "field_40615", "lootTables", "f_244213_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.server.loottable.EntityLootTableGenerator#lootTables
    static void set_field_lootTables(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "map", "field_40615", "lootTables", "f_244213_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_createSmeltLootCondition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldSmeltLoot", "method_60394", "createSmeltLootCondition", "m_340326_"), "()Leuq$a;");
    }

    static jobject createSmeltLootCondition(const jobject& obj) {
                
       const auto methodID = methodID_createSmeltLootCondition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createForSheep() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createSheepTable", "method_46031", "createForSheep", "m_246752_"), "(Ldcv;)Lerw$a;");
    }

    static jobject createForSheep(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createForSheep();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_generate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "generate", "method_10400", "generate", "m_246942_"), "()V");
    }

    static void generate(const jobject& obj) {
                
       const auto methodID = methodID_generate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_accept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("generate", "generate", "method_10399", "accept", "m_245126_"), "(Ljava/util/function/BiConsumer;)V");
    }

    static void accept(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_accept();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldCheck() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canHaveLootTable", "method_46027", "shouldCheck", "m_245552_"), "(Lbsx;)Z");
    }

    static jboolean shouldCheck(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_shouldCheck();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_killedByFrog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "killedByFrog", "method_46034", "killedByFrog", "m_245873_"), "()Levc$a;");
    }

    static jobject killedByFrog(const jobject& obj) {
                
       const auto methodID = methodID_killedByFrog();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__killedByFrog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "killedByFrogVariant", "method_46030", "killedByFrog", "m_247253_"), "(Lakq;)Levc$a;");
    }

    static jobject _killedByFrog(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__killedByFrog();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_46029", "register", "m_245309_"), "(Lbsx;Lerw$a;)V");
    }

    static void register(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_46028", "register", "m_247520_"), "(Lbsx;Lakq;Lerw$a;)V");
    }

    static void _register(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__register();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_DATA_SERVER_LOOTTABLE_ENTITYLOOTTABLEGENERATOR_HPP