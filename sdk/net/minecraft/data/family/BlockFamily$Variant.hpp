// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_FAMILY_BLOCKFAMILY$VARIANT_HPP
#define NET_MINECRAFT_DATA_FAMILY_BLOCKFAMILY$VARIANT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.family.BlockFamily$Variant
 * Remapped: lx$b
 */
namespace BlockFamily$Variant {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("lx$b", "net/minecraft/data/BlockFamily$Variant", "net/minecraft/class_5794$class_5796", "net/minecraft/data/family/BlockFamily$Variant", "net/minecraft/src/C_141796_$C_141798_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#BUTTON
    [[maybe_unused]] static jobject get_field_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BUTTON", "field_28533", "BUTTON", "BUTTON"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#BUTTON
    [[maybe_unused]] static void set_field_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BUTTON", "field_28533", "BUTTON", "BUTTON"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#CHISELED
    [[maybe_unused]] static jobject get_field_CHISELED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CHISELED", "field_28534", "CHISELED", "CHISELED"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#CHISELED
    [[maybe_unused]] static void set_field_CHISELED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CHISELED", "field_28534", "CHISELED", "CHISELED"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#CRACKED
    [[maybe_unused]] static jobject get_field_CRACKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CRACKED", "field_29503", "CRACKED", "CRACKED"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#CRACKED
    [[maybe_unused]] static void set_field_CRACKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CRACKED", "field_29503", "CRACKED", "CRACKED"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#CUT
    [[maybe_unused]] static jobject get_field_CUT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CUT", "field_33689", "CUT", "CUT"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#CUT
    [[maybe_unused]] static void set_field_CUT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CUT", "field_33689", "CUT", "CUT"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#DOOR
    [[maybe_unused]] static jobject get_field_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DOOR", "field_28535", "DOOR", "DOOR"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#DOOR
    [[maybe_unused]] static void set_field_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DOOR", "field_28535", "DOOR", "DOOR"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#CUSTOM_FENCE
    [[maybe_unused]] static jobject get_field_CUSTOM_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CUSTOM_FENCE", "field_40592", "CUSTOM_FENCE", "CUSTOM_FENCE"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#CUSTOM_FENCE
    [[maybe_unused]] static void set_field_CUSTOM_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CUSTOM_FENCE", "field_40592", "CUSTOM_FENCE", "CUSTOM_FENCE"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#FENCE
    [[maybe_unused]] static jobject get_field_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "FENCE", "field_28536", "FENCE", "FENCE"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#FENCE
    [[maybe_unused]] static void set_field_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "FENCE", "field_28536", "FENCE", "FENCE"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#CUSTOM_FENCE_GATE
    [[maybe_unused]] static jobject get_field_CUSTOM_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CUSTOM_FENCE_GATE", "field_40593", "CUSTOM_FENCE_GATE", "CUSTOM_FENCE_GATE"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#CUSTOM_FENCE_GATE
    [[maybe_unused]] static void set_field_CUSTOM_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CUSTOM_FENCE_GATE", "field_40593", "CUSTOM_FENCE_GATE", "CUSTOM_FENCE_GATE"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#FENCE_GATE
    [[maybe_unused]] static jobject get_field_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "FENCE_GATE", "field_28537", "FENCE_GATE", "FENCE_GATE"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#FENCE_GATE
    [[maybe_unused]] static void set_field_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "FENCE_GATE", "field_28537", "FENCE_GATE", "FENCE_GATE"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#MOSAIC
    [[maybe_unused]] static jobject get_field_MOSAIC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MOSAIC", "field_40594", "MOSAIC", "MOSAIC"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#MOSAIC
    [[maybe_unused]] static void set_field_MOSAIC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MOSAIC", "field_40594", "MOSAIC", "MOSAIC"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#SIGN
    [[maybe_unused]] static jobject get_field_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SIGN", "field_28538", "SIGN", "SIGN"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#SIGN
    [[maybe_unused]] static void set_field_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SIGN", "field_28538", "SIGN", "SIGN"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#SLAB
    [[maybe_unused]] static jobject get_field_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SLAB", "field_28539", "SLAB", "SLAB"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#SLAB
    [[maybe_unused]] static void set_field_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SLAB", "field_28539", "SLAB", "SLAB"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#STAIRS
    [[maybe_unused]] static jobject get_field_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "STAIRS", "field_28540", "STAIRS", "STAIRS"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#STAIRS
    [[maybe_unused]] static void set_field_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "STAIRS", "field_28540", "STAIRS", "STAIRS"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#PRESSURE_PLATE
    [[maybe_unused]] static jobject get_field_PRESSURE_PLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "PRESSURE_PLATE", "field_28541", "PRESSURE_PLATE", "PRESSURE_PLATE"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#PRESSURE_PLATE
    [[maybe_unused]] static void set_field_PRESSURE_PLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "PRESSURE_PLATE", "field_28541", "PRESSURE_PLATE", "PRESSURE_PLATE"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#POLISHED
    [[maybe_unused]] static jobject get_field_POLISHED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "POLISHED", "field_28542", "POLISHED", "POLISHED"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#POLISHED
    [[maybe_unused]] static void set_field_POLISHED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "POLISHED", "field_28542", "POLISHED", "POLISHED"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#TRAPDOOR
    [[maybe_unused]] static jobject get_field_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "TRAPDOOR", "field_28543", "TRAPDOOR", "TRAPDOOR"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#TRAPDOOR
    [[maybe_unused]] static void set_field_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "TRAPDOOR", "field_28543", "TRAPDOOR", "TRAPDOOR"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#WALL
    [[maybe_unused]] static jobject get_field_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "WALL", "field_28544", "WALL", "WALL"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#WALL
    [[maybe_unused]] static void set_field_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "WALL", "field_28544", "WALL", "WALL"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamily$Variant#WALL_SIGN
    [[maybe_unused]] static jobject get_field_WALL_SIGN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "WALL_SIGN", "field_28545", "WALL_SIGN", "WALL_SIGN"), "Llx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamily$Variant#WALL_SIGN
    [[maybe_unused]] static void set_field_WALL_SIGN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "WALL_SIGN", "field_28545", "WALL_SIGN", "WALL_SIGN"), "Llx$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.data.family.BlockFamily$Variant#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "recipeGroup", "field_28546", "name", "f_291163_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.family.BlockFamily$Variant#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "recipeGroup", "field_28546", "name", "f_291163_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Llx$b;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Llx$b;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRecipeGroup", "method_33498", "getName", "m_294338_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_DATA_FAMILY_BLOCKFAMILY$VARIANT_HPP