// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_FAMILY_BLOCKFAMILIES_HPP
#define NET_MINECRAFT_DATA_FAMILY_BLOCKFAMILIES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.family.BlockFamilies
 * Remapped: lw
 */
namespace BlockFamilies {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("lw", "net/minecraft/data/BlockFamilies", "net/minecraft/class_5793", "net/minecraft/data/family/BlockFamilies", "net/minecraft/src/C_141795_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.data.family.BlockFamilies#BASE_BLOCKS_TO_FAMILIES
    [[maybe_unused]] static jobject get_field_BASE_BLOCKS_TO_FAMILIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "MAP", "field_28499", "BASE_BLOCKS_TO_FAMILIES", "f_175904_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.data.family.BlockFamilies#BASE_BLOCKS_TO_FAMILIES
    [[maybe_unused]] static void set_field_BASE_BLOCKS_TO_FAMILIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "MAP", "field_28499", "BASE_BLOCKS_TO_FAMILIES", "f_175904_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.data.family.BlockFamilies#WOODEN_GROUP
    [[maybe_unused]] static jobject get_field_WOODEN_GROUP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "RECIPE_GROUP_PREFIX_WOODEN", "field_33117", "WOODEN_GROUP", "f_175905_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.data.family.BlockFamilies#WOODEN_GROUP
    [[maybe_unused]] static void set_field_WOODEN_GROUP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "RECIPE_GROUP_PREFIX_WOODEN", "field_33117", "WOODEN_GROUP", "f_175905_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.data.family.BlockFamilies#WOODEN_UNLOCK_CRITERION_NAME
    [[maybe_unused]] static jobject get_field_WOODEN_UNLOCK_CRITERION_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "RECIPE_UNLOCKED_BY_HAS_PLANKS", "field_33118", "WOODEN_UNLOCK_CRITERION_NAME", "f_175906_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.data.family.BlockFamilies#WOODEN_UNLOCK_CRITERION_NAME
    [[maybe_unused]] static void set_field_WOODEN_UNLOCK_CRITERION_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "RECIPE_UNLOCKED_BY_HAS_PLANKS", "field_33118", "WOODEN_UNLOCK_CRITERION_NAME", "f_175906_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#ACACIA
    [[maybe_unused]] static jobject get_field_ACACIA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ACACIA_PLANKS", "field_28500", "ACACIA", "f_175896_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#ACACIA
    [[maybe_unused]] static void set_field_ACACIA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ACACIA_PLANKS", "field_28500", "ACACIA", "f_175896_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#CHERRY
    [[maybe_unused]] static jobject get_field_CHERRY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CHERRY_PLANKS", "field_42942", "CHERRY", "f_271218_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#CHERRY
    [[maybe_unused]] static void set_field_CHERRY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CHERRY_PLANKS", "field_42942", "CHERRY", "f_271218_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#BIRCH
    [[maybe_unused]] static jobject get_field_BIRCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BIRCH_PLANKS", "field_28501", "BIRCH", "f_175907_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#BIRCH
    [[maybe_unused]] static void set_field_BIRCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BIRCH_PLANKS", "field_28501", "BIRCH", "f_175907_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#CRIMSON
    [[maybe_unused]] static jobject get_field_CRIMSON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CRIMSON_PLANKS", "field_28502", "CRIMSON", "f_175908_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#CRIMSON
    [[maybe_unused]] static void set_field_CRIMSON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CRIMSON_PLANKS", "field_28502", "CRIMSON", "f_175908_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#JUNGLE
    [[maybe_unused]] static jobject get_field_JUNGLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "JUNGLE_PLANKS", "field_28503", "JUNGLE", "f_175909_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#JUNGLE
    [[maybe_unused]] static void set_field_JUNGLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "JUNGLE_PLANKS", "field_28503", "JUNGLE", "f_175909_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#OAK
    [[maybe_unused]] static jobject get_field_OAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "OAK_PLANKS", "field_28504", "OAK", "f_175910_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#OAK
    [[maybe_unused]] static void set_field_OAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "OAK_PLANKS", "field_28504", "OAK", "f_175910_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#DARK_OAK
    [[maybe_unused]] static jobject get_field_DARK_OAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DARK_OAK_PLANKS", "field_28505", "DARK_OAK", "f_175911_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#DARK_OAK
    [[maybe_unused]] static void set_field_DARK_OAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DARK_OAK_PLANKS", "field_28505", "DARK_OAK", "f_175911_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#SPRUCE
    [[maybe_unused]] static jobject get_field_SPRUCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SPRUCE_PLANKS", "field_28506", "SPRUCE", "f_175912_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#SPRUCE
    [[maybe_unused]] static void set_field_SPRUCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SPRUCE_PLANKS", "field_28506", "SPRUCE", "f_175912_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#WARPED
    [[maybe_unused]] static jobject get_field_WARPED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "WARPED_PLANKS", "field_28507", "WARPED", "f_175913_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#WARPED
    [[maybe_unused]] static void set_field_WARPED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "WARPED_PLANKS", "field_28507", "WARPED", "f_175913_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#MANGROVE
    [[maybe_unused]] static jobject get_field_MANGROVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MANGROVE_PLANKS", "field_38007", "MANGROVE", "f_235985_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#MANGROVE
    [[maybe_unused]] static void set_field_MANGROVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MANGROVE_PLANKS", "field_38007", "MANGROVE", "f_235985_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#BAMBOO
    [[maybe_unused]] static jobject get_field_BAMBOO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BAMBOO_PLANKS", "field_40589", "BAMBOO", "f_244546_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#BAMBOO
    [[maybe_unused]] static void set_field_BAMBOO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BAMBOO_PLANKS", "field_40589", "BAMBOO", "f_244546_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#BAMBOO_MOSAIC
    [[maybe_unused]] static jobject get_field_BAMBOO_MOSAIC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BAMBOO_MOSAIC", "field_40590", "BAMBOO_MOSAIC", "f_244520_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#BAMBOO_MOSAIC
    [[maybe_unused]] static void set_field_BAMBOO_MOSAIC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BAMBOO_MOSAIC", "field_40590", "BAMBOO_MOSAIC", "f_244520_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#MUD_BRICK
    [[maybe_unused]] static jobject get_field_MUD_BRICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "MUD_BRICKS", "field_38008", "MUD_BRICK", "f_235986_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#MUD_BRICK
    [[maybe_unused]] static void set_field_MUD_BRICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "MUD_BRICKS", "field_38008", "MUD_BRICK", "f_235986_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#ANDESITE
    [[maybe_unused]] static jobject get_field_ANDESITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ANDESITE", "field_28508", "ANDESITE", "f_175914_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#ANDESITE
    [[maybe_unused]] static void set_field_ANDESITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ANDESITE", "field_28508", "ANDESITE", "f_175914_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_ANDESITE
    [[maybe_unused]] static jobject get_field_POLISHED_ANDESITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "POLISHED_ANDESITE", "field_28509", "POLISHED_ANDESITE", "f_175915_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_ANDESITE
    [[maybe_unused]] static void set_field_POLISHED_ANDESITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "POLISHED_ANDESITE", "field_28509", "POLISHED_ANDESITE", "f_175915_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#BLACKSTONE
    [[maybe_unused]] static jobject get_field_BLACKSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "BLACKSTONE", "field_28510", "BLACKSTONE", "f_175916_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#BLACKSTONE
    [[maybe_unused]] static void set_field_BLACKSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "BLACKSTONE", "field_28510", "BLACKSTONE", "f_175916_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_BLACKSTONE
    [[maybe_unused]] static jobject get_field_POLISHED_BLACKSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "POLISHED_BLACKSTONE", "field_28511", "POLISHED_BLACKSTONE", "f_175917_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_BLACKSTONE
    [[maybe_unused]] static void set_field_POLISHED_BLACKSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "POLISHED_BLACKSTONE", "field_28511", "POLISHED_BLACKSTONE", "f_175917_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_BLACKSTONE_BRICK
    [[maybe_unused]] static jobject get_field_POLISHED_BLACKSTONE_BRICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "POLISHED_BLACKSTONE_BRICKS", "field_28512", "POLISHED_BLACKSTONE_BRICK", "f_175918_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_BLACKSTONE_BRICK
    [[maybe_unused]] static void set_field_POLISHED_BLACKSTONE_BRICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "POLISHED_BLACKSTONE_BRICKS", "field_28512", "POLISHED_BLACKSTONE_BRICK", "f_175918_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#BRICK
    [[maybe_unused]] static jobject get_field_BRICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BRICKS", "field_28513", "BRICK", "f_175919_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#BRICK
    [[maybe_unused]] static void set_field_BRICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BRICKS", "field_28513", "BRICK", "f_175919_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#END_STONE_BRICK
    [[maybe_unused]] static jobject get_field_END_STONE_BRICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "END_STONE_BRICKS", "field_28514", "END_STONE_BRICK", "f_175920_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#END_STONE_BRICK
    [[maybe_unused]] static void set_field_END_STONE_BRICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "END_STONE_BRICKS", "field_28514", "END_STONE_BRICK", "f_175920_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#MOSSY_STONE_BRICK
    [[maybe_unused]] static jobject get_field_MOSSY_STONE_BRICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "MOSSY_STONE_BRICKS", "field_28515", "MOSSY_STONE_BRICK", "f_175921_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#MOSSY_STONE_BRICK
    [[maybe_unused]] static void set_field_MOSSY_STONE_BRICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "MOSSY_STONE_BRICKS", "field_28515", "MOSSY_STONE_BRICK", "f_175921_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#COPPER_BLOCK
    [[maybe_unused]] static jobject get_field_COPPER_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "COPPER_BLOCK", "field_33684", "COPPER_BLOCK", "f_175922_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#COPPER_BLOCK
    [[maybe_unused]] static void set_field_COPPER_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "COPPER_BLOCK", "field_33684", "COPPER_BLOCK", "f_175922_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#CUT_COPPER
    [[maybe_unused]] static jobject get_field_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "CUT_COPPER", "field_28516", "CUT_COPPER", "f_175923_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#CUT_COPPER
    [[maybe_unused]] static void set_field_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "CUT_COPPER", "field_28516", "CUT_COPPER", "f_175923_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#WAXED_COPPER_BLOCK
    [[maybe_unused]] static jobject get_field_WAXED_COPPER_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "WAXED_COPPER_BLOCK", "field_33685", "WAXED_COPPER_BLOCK", "f_175924_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#WAXED_COPPER_BLOCK
    [[maybe_unused]] static void set_field_WAXED_COPPER_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "WAXED_COPPER_BLOCK", "field_33685", "WAXED_COPPER_BLOCK", "f_175924_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#WAXED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "WAXED_CUT_COPPER", "field_28517", "WAXED_CUT_COPPER", "f_175925_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#WAXED_CUT_COPPER
    [[maybe_unused]] static void set_field_WAXED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "WAXED_CUT_COPPER", "field_28517", "WAXED_CUT_COPPER", "f_175925_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#EXPOSED_COPPER
    [[maybe_unused]] static jobject get_field_EXPOSED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "EXPOSED_COPPER", "field_33686", "EXPOSED_COPPER", "f_175926_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#EXPOSED_COPPER
    [[maybe_unused]] static void set_field_EXPOSED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "EXPOSED_COPPER", "field_33686", "EXPOSED_COPPER", "f_175926_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#EXPOSED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_EXPOSED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "EXPOSED_CUT_COPPER", "field_28518", "EXPOSED_CUT_COPPER", "f_175927_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#EXPOSED_CUT_COPPER
    [[maybe_unused]] static void set_field_EXPOSED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "EXPOSED_CUT_COPPER", "field_28518", "EXPOSED_CUT_COPPER", "f_175927_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#WAXED_EXPOSED_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_EXPOSED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "WAXED_EXPOSED_COPPER", "field_33687", "WAXED_EXPOSED_COPPER", "f_175928_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#WAXED_EXPOSED_COPPER
    [[maybe_unused]] static void set_field_WAXED_EXPOSED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "WAXED_EXPOSED_COPPER", "field_33687", "WAXED_EXPOSED_COPPER", "f_175928_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#WAXED_EXPOSED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_EXPOSED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "WAXED_EXPOSED_CUT_COPPER", "field_28519", "WAXED_EXPOSED_CUT_COPPER", "f_175929_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#WAXED_EXPOSED_CUT_COPPER
    [[maybe_unused]] static void set_field_WAXED_EXPOSED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "WAXED_EXPOSED_CUT_COPPER", "field_28519", "WAXED_EXPOSED_CUT_COPPER", "f_175929_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#WEATHERED_COPPER
    [[maybe_unused]] static jobject get_field_WEATHERED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "WEATHERED_COPPER", "field_33688", "WEATHERED_COPPER", "f_175930_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#WEATHERED_COPPER
    [[maybe_unused]] static void set_field_WEATHERED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "WEATHERED_COPPER", "field_33688", "WEATHERED_COPPER", "f_175930_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#WEATHERED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_WEATHERED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "WEATHERED_CUT_COPPER", "field_28520", "WEATHERED_CUT_COPPER", "f_175931_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#WEATHERED_CUT_COPPER
    [[maybe_unused]] static void set_field_WEATHERED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "WEATHERED_CUT_COPPER", "field_28520", "WEATHERED_CUT_COPPER", "f_175931_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#WAXED_WEATHERED_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_WEATHERED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "WAXED_WEATHERED_COPPER", "field_33681", "WAXED_WEATHERED_COPPER", "f_175870_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#WAXED_WEATHERED_COPPER
    [[maybe_unused]] static void set_field_WAXED_WEATHERED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "WAXED_WEATHERED_COPPER", "field_33681", "WAXED_WEATHERED_COPPER", "f_175870_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#WAXED_WEATHERED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_WEATHERED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "WAXED_WEATHERED_CUT_COPPER", "field_28521", "WAXED_WEATHERED_CUT_COPPER", "f_175871_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#WAXED_WEATHERED_CUT_COPPER
    [[maybe_unused]] static void set_field_WAXED_WEATHERED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "WAXED_WEATHERED_CUT_COPPER", "field_28521", "WAXED_WEATHERED_CUT_COPPER", "f_175871_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#OXIDIZED_COPPER
    [[maybe_unused]] static jobject get_field_OXIDIZED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "OXIDIZED_COPPER", "field_33682", "OXIDIZED_COPPER", "f_175872_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#OXIDIZED_COPPER
    [[maybe_unused]] static void set_field_OXIDIZED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "OXIDIZED_COPPER", "field_33682", "OXIDIZED_COPPER", "f_175872_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#OXIDIZED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_OXIDIZED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "OXIDIZED_CUT_COPPER", "field_28522", "OXIDIZED_CUT_COPPER", "f_175873_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#OXIDIZED_CUT_COPPER
    [[maybe_unused]] static void set_field_OXIDIZED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "OXIDIZED_CUT_COPPER", "field_28522", "OXIDIZED_CUT_COPPER", "f_175873_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#WAXED_OXIDIZED_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_OXIDIZED_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "WAXED_OXIDIZED_COPPER", "field_33683", "WAXED_OXIDIZED_COPPER", "f_175874_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#WAXED_OXIDIZED_COPPER
    [[maybe_unused]] static void set_field_WAXED_OXIDIZED_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "WAXED_OXIDIZED_COPPER", "field_33683", "WAXED_OXIDIZED_COPPER", "f_175874_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#WAXED_OXIDIZED_CUT_COPPER
    [[maybe_unused]] static jobject get_field_WAXED_OXIDIZED_CUT_COPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "WAXED_OXIDIZED_CUT_COPPER", "field_33419", "WAXED_OXIDIZED_CUT_COPPER", "f_175875_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#WAXED_OXIDIZED_CUT_COPPER
    [[maybe_unused]] static void set_field_WAXED_OXIDIZED_CUT_COPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "WAXED_OXIDIZED_CUT_COPPER", "field_33419", "WAXED_OXIDIZED_CUT_COPPER", "f_175875_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#COBBLESTONE
    [[maybe_unused]] static jobject get_field_COBBLESTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "COBBLESTONE", "field_28523", "COBBLESTONE", "f_175876_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#COBBLESTONE
    [[maybe_unused]] static void set_field_COBBLESTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "COBBLESTONE", "field_28523", "COBBLESTONE", "f_175876_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#MOSSY_COBBLESTONE
    [[maybe_unused]] static jobject get_field_MOSSY_COBBLESTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "MOSSY_COBBLESTONE", "field_28524", "MOSSY_COBBLESTONE", "f_175877_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#MOSSY_COBBLESTONE
    [[maybe_unused]] static void set_field_MOSSY_COBBLESTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "MOSSY_COBBLESTONE", "field_28524", "MOSSY_COBBLESTONE", "f_175877_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#DIORITE
    [[maybe_unused]] static jobject get_field_DIORITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "DIORITE", "field_28525", "DIORITE", "f_175878_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#DIORITE
    [[maybe_unused]] static void set_field_DIORITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "DIORITE", "field_28525", "DIORITE", "f_175878_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_DIORITE
    [[maybe_unused]] static jobject get_field_POLISHED_DIORITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "POLISHED_DIORITE", "field_28480", "POLISHED_DIORITE", "f_175879_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_DIORITE
    [[maybe_unused]] static void set_field_POLISHED_DIORITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "POLISHED_DIORITE", "field_28480", "POLISHED_DIORITE", "f_175879_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#GRANITE
    [[maybe_unused]] static jobject get_field_GRANITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "GRANITE", "field_28481", "GRANITE", "f_175880_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#GRANITE
    [[maybe_unused]] static void set_field_GRANITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "GRANITE", "field_28481", "GRANITE", "f_175880_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_GRANITE
    [[maybe_unused]] static jobject get_field_POLISHED_GRANITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "POLISHED_GRANITE", "field_28482", "POLISHED_GRANITE", "f_175881_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_GRANITE
    [[maybe_unused]] static void set_field_POLISHED_GRANITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "POLISHED_GRANITE", "field_28482", "POLISHED_GRANITE", "f_175881_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#TUFF
    [[maybe_unused]] static jobject get_field_TUFF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "TUFF", "field_47131", "TUFF", "f_303603_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#TUFF
    [[maybe_unused]] static void set_field_TUFF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "TUFF", "field_47131", "TUFF", "f_303603_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_TUFF
    [[maybe_unused]] static jobject get_field_POLISHED_TUFF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "POLISHED_TUFF", "field_47132", "POLISHED_TUFF", "f_303214_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_TUFF
    [[maybe_unused]] static void set_field_POLISHED_TUFF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "POLISHED_TUFF", "field_47132", "POLISHED_TUFF", "f_303214_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#TUFF_BRICK
    [[maybe_unused]] static jobject get_field_TUFF_BRICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "TUFF_BRICKS", "field_47133", "TUFF_BRICK", "f_303123_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#TUFF_BRICK
    [[maybe_unused]] static void set_field_TUFF_BRICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "TUFF_BRICKS", "field_47133", "TUFF_BRICK", "f_303123_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#NETHER_BRICK
    [[maybe_unused]] static jobject get_field_NETHER_BRICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "NETHER_BRICKS", "field_28483", "NETHER_BRICK", "f_175882_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#NETHER_BRICK
    [[maybe_unused]] static void set_field_NETHER_BRICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "NETHER_BRICKS", "field_28483", "NETHER_BRICK", "f_175882_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#RED_NETHER_BRICK
    [[maybe_unused]] static jobject get_field_RED_NETHER_BRICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "RED_NETHER_BRICKS", "field_28484", "RED_NETHER_BRICK", "f_175883_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#RED_NETHER_BRICK
    [[maybe_unused]] static void set_field_RED_NETHER_BRICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "RED_NETHER_BRICKS", "field_28484", "RED_NETHER_BRICK", "f_175883_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#PRISMARINE
    [[maybe_unused]] static jobject get_field_PRISMARINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "PRISMARINE", "field_28485", "PRISMARINE", "f_175884_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#PRISMARINE
    [[maybe_unused]] static void set_field_PRISMARINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "PRISMARINE", "field_28485", "PRISMARINE", "f_175884_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#PURPUR
    [[maybe_unused]] static jobject get_field_PURPUR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "PURPUR", "field_28486", "PURPUR", "f_175885_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#PURPUR
    [[maybe_unused]] static void set_field_PURPUR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "PURPUR", "field_28486", "PURPUR", "f_175885_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#PRISMARINE_BRICK
    [[maybe_unused]] static jobject get_field_PRISMARINE_BRICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "PRISMARINE_BRICKS", "field_28487", "PRISMARINE_BRICK", "f_175886_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#PRISMARINE_BRICK
    [[maybe_unused]] static void set_field_PRISMARINE_BRICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "PRISMARINE_BRICKS", "field_28487", "PRISMARINE_BRICK", "f_175886_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#DARK_PRISMARINE
    [[maybe_unused]] static jobject get_field_DARK_PRISMARINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "DARK_PRISMARINE", "field_28488", "DARK_PRISMARINE", "f_175887_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#DARK_PRISMARINE
    [[maybe_unused]] static void set_field_DARK_PRISMARINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "DARK_PRISMARINE", "field_28488", "DARK_PRISMARINE", "f_175887_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#QUARTZ_BLOCK
    [[maybe_unused]] static jobject get_field_QUARTZ_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "QUARTZ", "field_28489", "QUARTZ_BLOCK", "f_175888_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#QUARTZ_BLOCK
    [[maybe_unused]] static void set_field_QUARTZ_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "QUARTZ", "field_28489", "QUARTZ_BLOCK", "f_175888_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#SMOOTH_QUARTZ
    [[maybe_unused]] static jobject get_field_SMOOTH_QUARTZ() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "SMOOTH_QUARTZ", "field_28490", "SMOOTH_QUARTZ", "f_175889_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#SMOOTH_QUARTZ
    [[maybe_unused]] static void set_field_SMOOTH_QUARTZ(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "SMOOTH_QUARTZ", "field_28490", "SMOOTH_QUARTZ", "f_175889_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#SANDSTONE
    [[maybe_unused]] static jobject get_field_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "SANDSTONE", "field_28491", "SANDSTONE", "f_175890_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#SANDSTONE
    [[maybe_unused]] static void set_field_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "SANDSTONE", "field_28491", "SANDSTONE", "f_175890_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#CUT_SANDSTONE
    [[maybe_unused]] static jobject get_field_CUT_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "CUT_SANDSTONE", "field_28492", "CUT_SANDSTONE", "f_175891_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#CUT_SANDSTONE
    [[maybe_unused]] static void set_field_CUT_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "CUT_SANDSTONE", "field_28492", "CUT_SANDSTONE", "f_175891_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#SMOOTH_SANDSTONE
    [[maybe_unused]] static jobject get_field_SMOOTH_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "SMOOTH_SANDSTONE", "field_28493", "SMOOTH_SANDSTONE", "f_175892_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#SMOOTH_SANDSTONE
    [[maybe_unused]] static void set_field_SMOOTH_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "SMOOTH_SANDSTONE", "field_28493", "SMOOTH_SANDSTONE", "f_175892_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#RED_SANDSTONE
    [[maybe_unused]] static jobject get_field_RED_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "RED_SANDSTONE", "field_28494", "RED_SANDSTONE", "f_175893_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#RED_SANDSTONE
    [[maybe_unused]] static void set_field_RED_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "RED_SANDSTONE", "field_28494", "RED_SANDSTONE", "f_175893_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#CUT_RED_SANDSTONE
    [[maybe_unused]] static jobject get_field_CUT_RED_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "CUT_RED_SANDSTONE", "field_28495", "CUT_RED_SANDSTONE", "f_175894_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#CUT_RED_SANDSTONE
    [[maybe_unused]] static void set_field_CUT_RED_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "CUT_RED_SANDSTONE", "field_28495", "CUT_RED_SANDSTONE", "f_175894_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#SMOOTH_RED_SANDSTONE
    [[maybe_unused]] static jobject get_field_SMOOTH_RED_SANDSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "SMOOTH_RED_SANDSTONE", "field_28496", "SMOOTH_RED_SANDSTONE", "f_175895_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#SMOOTH_RED_SANDSTONE
    [[maybe_unused]] static void set_field_SMOOTH_RED_SANDSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "SMOOTH_RED_SANDSTONE", "field_28496", "SMOOTH_RED_SANDSTONE", "f_175895_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#STONE
    [[maybe_unused]] static jobject get_field_STONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "STONE", "field_28497", "STONE", "f_175897_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#STONE
    [[maybe_unused]] static void set_field_STONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "STONE", "field_28497", "STONE", "f_175897_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#STONE_BRICK
    [[maybe_unused]] static jobject get_field_STONE_BRICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "STONE_BRICK", "field_28498", "STONE_BRICK", "f_175898_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#STONE_BRICK
    [[maybe_unused]] static void set_field_STONE_BRICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "STONE_BRICK", "field_28498", "STONE_BRICK", "f_175898_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#DEEPSLATE
    [[maybe_unused]] static jobject get_field_DEEPSLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "DEEPSLATE", "field_28946", "DEEPSLATE", "f_175899_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#DEEPSLATE
    [[maybe_unused]] static void set_field_DEEPSLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "DEEPSLATE", "field_28946", "DEEPSLATE", "f_175899_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#COBBLED_DEEPSLATE
    [[maybe_unused]] static jobject get_field_COBBLED_DEEPSLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "COBBLED_DEEPSLATE", "field_29079", "COBBLED_DEEPSLATE", "f_175900_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#COBBLED_DEEPSLATE
    [[maybe_unused]] static void set_field_COBBLED_DEEPSLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "COBBLED_DEEPSLATE", "field_29079", "COBBLED_DEEPSLATE", "f_175900_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_DEEPSLATE
    [[maybe_unused]] static jobject get_field_POLISHED_DEEPSLATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "POLISHED_DEEPSLATE", "field_28947", "POLISHED_DEEPSLATE", "f_175901_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#POLISHED_DEEPSLATE
    [[maybe_unused]] static void set_field_POLISHED_DEEPSLATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "POLISHED_DEEPSLATE", "field_28947", "POLISHED_DEEPSLATE", "f_175901_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#DEEPSLATE_BRICK
    [[maybe_unused]] static jobject get_field_DEEPSLATE_BRICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "DEEPSLATE_BRICKS", "field_28949", "DEEPSLATE_BRICK", "f_175902_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#DEEPSLATE_BRICK
    [[maybe_unused]] static void set_field_DEEPSLATE_BRICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "DEEPSLATE_BRICKS", "field_28949", "DEEPSLATE_BRICK", "f_175902_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.family.BlockFamilies#DEEPSLATE_TILE
    [[maybe_unused]] static jobject get_field_DEEPSLATE_TILE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "DEEPSLATE_TILES", "field_28948", "DEEPSLATE_TILE", "f_175903_"), "Llx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.family.BlockFamilies#DEEPSLATE_TILE
    [[maybe_unused]] static void set_field_DEEPSLATE_TILE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "DEEPSLATE_TILES", "field_28948", "DEEPSLATE_TILE", "f_175903_"), "Llx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "familyBuilder", "method_33468", "register", "m_175935_"), "(Ldfy;)Llx$a;");
    }

    static jobject register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getFamilies() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getAllFamilies", "method_33467", "getFamilies", "m_175934_"), "()Ljava/util/stream/Stream;");
    }

    static jobject getFamilies() {
       const auto clazz = self();
       const auto methodID = methodID_getFamilies();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_DATA_FAMILY_BLOCKFAMILIES_HPP