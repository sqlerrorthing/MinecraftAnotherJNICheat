// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_FAMILY_BLOCKFAMILY_HPP
#define NET_MINECRAFT_DATA_FAMILY_BLOCKFAMILY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.family.BlockFamily
 * Remapped: lx
 */
namespace BlockFamily {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("lx", "net/minecraft/data/BlockFamily", "net/minecraft/class_5794", "net/minecraft/data/family/BlockFamily", "net/minecraft/src/C_141796_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.data.family.BlockFamily#baseBlock
    static jobject get_field_baseBlock(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "baseBlock", "field_28526", "baseBlock", "f_175943_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.family.BlockFamily#baseBlock
    static void set_field_baseBlock(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "baseBlock", "field_28526", "baseBlock", "f_175943_"), "Ldfy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.data.family.BlockFamily#variants
    static jobject get_field_variants(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "variants", "field_28527", "variants", "f_175944_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.data.family.BlockFamily#variants
    static void set_field_variants(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "variants", "field_28527", "variants", "f_175944_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.data.family.BlockFamily#generateModels
    static jboolean get_field_generateModels(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "generateModel", "field_28528", "generateModels", "f_175945_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.data.family.BlockFamily#generateModels
    static void set_field_generateModels(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "generateModel", "field_28528", "generateModels", "f_175945_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.data.family.BlockFamily#generateRecipes
    static jboolean get_field_generateRecipes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "generateRecipe", "field_28529", "generateRecipes", "f_175946_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.data.family.BlockFamily#generateRecipes
    static void set_field_generateRecipes(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "generateRecipe", "field_28529", "generateRecipes", "f_175946_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.data.family.BlockFamily#group
    static jobject get_field_group(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "recipeGroupPrefix", "field_28530", "group", "f_175947_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.data.family.BlockFamily#group
    static void set_field_group(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "recipeGroupPrefix", "field_28530", "group", "f_175947_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.data.family.BlockFamily#unlockCriterionName
    static jobject get_field_unlockCriterionName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "recipeUnlockedBy", "field_28531", "unlockCriterionName", "f_175948_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.data.family.BlockFamily#unlockCriterionName
    static void set_field_unlockCriterionName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "recipeUnlockedBy", "field_28531", "unlockCriterionName", "f_175948_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getBaseBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBaseBlock", "method_33469", "getBaseBlock", "m_175951_"), "()Ldfy;");
    }

    static jobject getBaseBlock(const jobject& obj) {
                
       const auto methodID = methodID_getBaseBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVariants() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getVariants", "method_33474", "getVariants", "m_175954_"), "()Ljava/util/Map;");
    }

    static jobject getVariants(const jobject& obj) {
                
       const auto methodID = methodID_getVariants();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVariant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_33470", "getVariant", "m_175952_"), "(Llx$b;)Ldfy;");
    }

    static jobject getVariant(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getVariant();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldGenerateModels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "shouldGenerateModel", "method_33477", "shouldGenerateModels", "m_175955_"), "()Z");
    }

    static jboolean shouldGenerateModels(const jobject& obj) {
                
       const auto methodID = methodID_shouldGenerateModels();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldGenerateRecipes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "shouldGenerateRecipe", "method_33478", "shouldGenerateRecipes", "m_245288_"), "()Z");
    }

    static jboolean shouldGenerateRecipes(const jobject& obj) {
                
       const auto methodID = methodID_shouldGenerateRecipes();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGroup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getRecipeGroupPrefix", "method_33479", "getGroup", "m_175957_"), "()Ljava/util/Optional;");
    }

    static jobject getGroup(const jobject& obj) {
                
       const auto methodID = methodID_getGroup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getUnlockCriterionName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getRecipeUnlockedBy", "method_33480", "getUnlockCriterionName", "m_175958_"), "()Ljava/util/Optional;");
    }

    static jobject getUnlockCriterionName(const jobject& obj) {
                
       const auto methodID = methodID_getUnlockCriterionName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_DATA_FAMILY_BLOCKFAMILY_HPP