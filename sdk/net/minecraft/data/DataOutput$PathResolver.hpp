// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_DATAOUTPUT$PATHRESOLVER_HPP
#define NET_MINECRAFT_DATA_DATAOUTPUT$PATHRESOLVER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.DataOutput$PathResolver
 * Remapped: mc$a
 */
namespace DataOutput$PathResolver {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("mc$a", "net/minecraft/data/PackOutput$PathProvider", "net/minecraft/class_7784$class_7489", "net/minecraft/data/DataOutput$PathResolver", "net/minecraft/src/C_243603_$C_243406_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.data.DataOutput$PathResolver#rootPath
    static jobject get_field_rootPath(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "root", "field_39365", "rootPath", "f_244594_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.DataOutput$PathResolver#rootPath
    static void set_field_rootPath(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "root", "field_39365", "rootPath", "f_244594_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.DataOutput$PathResolver#directoryName
    static jobject get_field_directoryName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "kind", "field_39366", "directoryName", "f_244198_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.DataOutput$PathResolver#directoryName
    static void set_field_directoryName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "kind", "field_39366", "directoryName", "f_244198_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_resolve() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "file", "method_44108", "resolve", "m_245527_"), "(Lakr;Ljava/lang/String;)Ljava/nio/file/Path;");
    }

    static jobject resolve(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_resolve();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_resolveJson() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "json", "method_44107", "resolveJson", "m_245731_"), "(Lakr;)Ljava/nio/file/Path;");
    }

    static jobject resolveJson(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_resolveJson();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_DATA_DATAOUTPUT$PATHRESOLVER_HPP