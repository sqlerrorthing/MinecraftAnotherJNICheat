// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_CLIENT_TEXTUREKEY_HPP
#define NET_MINECRAFT_DATA_CLIENT_TEXTUREKEY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.client.TextureKey
 * Remapped: og
 */
namespace TextureKey {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("og", "net/minecraft/data/models/model/TextureSlot", "net/minecraft/class_4945", "net/minecraft/data/client/TextureKey", "net/minecraft/src/C_4825_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.data.client.TextureKey#ALL
    [[maybe_unused]] static jobject get_field_ALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ALL", "field_23010", "ALL", "f_125867_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#ALL
    [[maybe_unused]] static void set_field_ALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ALL", "field_23010", "ALL", "f_125867_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#TEXTURE
    [[maybe_unused]] static jobject get_field_TEXTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TEXTURE", "field_23011", "TEXTURE", "f_125868_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#TEXTURE
    [[maybe_unused]] static void set_field_TEXTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TEXTURE", "field_23011", "TEXTURE", "f_125868_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#PARTICLE
    [[maybe_unused]] static jobject get_field_PARTICLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PARTICLE", "field_23012", "PARTICLE", "f_125869_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#PARTICLE
    [[maybe_unused]] static void set_field_PARTICLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PARTICLE", "field_23012", "PARTICLE", "f_125869_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#END
    [[maybe_unused]] static jobject get_field_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "END", "field_23013", "END", "f_125870_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#END
    [[maybe_unused]] static void set_field_END(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "END", "field_23013", "END", "f_125870_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#BOTTOM
    [[maybe_unused]] static jobject get_field_BOTTOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "BOTTOM", "field_23014", "BOTTOM", "f_125871_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#BOTTOM
    [[maybe_unused]] static void set_field_BOTTOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "BOTTOM", "field_23014", "BOTTOM", "f_125871_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#TOP
    [[maybe_unused]] static jobject get_field_TOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TOP", "field_23015", "TOP", "f_125872_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#TOP
    [[maybe_unused]] static void set_field_TOP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TOP", "field_23015", "TOP", "f_125872_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#FRONT
    [[maybe_unused]] static jobject get_field_FRONT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "FRONT", "field_23016", "FRONT", "f_125873_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#FRONT
    [[maybe_unused]] static void set_field_FRONT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "FRONT", "field_23016", "FRONT", "f_125873_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#BACK
    [[maybe_unused]] static jobject get_field_BACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "BACK", "field_23017", "BACK", "f_125874_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#BACK
    [[maybe_unused]] static void set_field_BACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "BACK", "field_23017", "BACK", "f_125874_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#SIDE
    [[maybe_unused]] static jobject get_field_SIDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SIDE", "field_23018", "SIDE", "f_125875_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#SIDE
    [[maybe_unused]] static void set_field_SIDE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SIDE", "field_23018", "SIDE", "f_125875_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#NORTH
    [[maybe_unused]] static jobject get_field_NORTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "NORTH", "field_23019", "NORTH", "f_125876_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#NORTH
    [[maybe_unused]] static void set_field_NORTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "NORTH", "field_23019", "NORTH", "f_125876_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#SOUTH
    [[maybe_unused]] static jobject get_field_SOUTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SOUTH", "field_23020", "SOUTH", "f_125877_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#SOUTH
    [[maybe_unused]] static void set_field_SOUTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SOUTH", "field_23020", "SOUTH", "f_125877_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#EAST
    [[maybe_unused]] static jobject get_field_EAST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "EAST", "field_23021", "EAST", "f_125878_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#EAST
    [[maybe_unused]] static void set_field_EAST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "EAST", "field_23021", "EAST", "f_125878_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#WEST
    [[maybe_unused]] static jobject get_field_WEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "WEST", "field_23022", "WEST", "f_125879_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#WEST
    [[maybe_unused]] static void set_field_WEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "WEST", "field_23022", "WEST", "f_125879_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#UP
    [[maybe_unused]] static jobject get_field_UP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "UP", "field_23023", "UP", "f_125880_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#UP
    [[maybe_unused]] static void set_field_UP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "UP", "field_23023", "UP", "f_125880_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#DOWN
    [[maybe_unused]] static jobject get_field_DOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "DOWN", "field_23024", "DOWN", "f_125881_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#DOWN
    [[maybe_unused]] static void set_field_DOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "DOWN", "field_23024", "DOWN", "f_125881_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#CROSS
    [[maybe_unused]] static jobject get_field_CROSS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "CROSS", "field_23025", "CROSS", "f_125882_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#CROSS
    [[maybe_unused]] static void set_field_CROSS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "CROSS", "field_23025", "CROSS", "f_125882_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#PLANT
    [[maybe_unused]] static jobject get_field_PLANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "PLANT", "field_23026", "PLANT", "f_125883_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#PLANT
    [[maybe_unused]] static void set_field_PLANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "PLANT", "field_23026", "PLANT", "f_125883_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#WALL
    [[maybe_unused]] static jobject get_field_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "WALL", "field_23027", "WALL", "f_125884_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#WALL
    [[maybe_unused]] static void set_field_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "WALL", "field_23027", "WALL", "f_125884_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#RAIL
    [[maybe_unused]] static jobject get_field_RAIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "RAIL", "field_23028", "RAIL", "f_125885_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#RAIL
    [[maybe_unused]] static void set_field_RAIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "RAIL", "field_23028", "RAIL", "f_125885_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#WOOL
    [[maybe_unused]] static jobject get_field_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "WOOL", "field_23029", "WOOL", "f_125886_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#WOOL
    [[maybe_unused]] static void set_field_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "WOOL", "field_23029", "WOOL", "f_125886_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#PATTERN
    [[maybe_unused]] static jobject get_field_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "PATTERN", "field_23030", "PATTERN", "f_125887_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#PATTERN
    [[maybe_unused]] static void set_field_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "PATTERN", "field_23030", "PATTERN", "f_125887_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#PANE
    [[maybe_unused]] static jobject get_field_PANE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "PANE", "field_23031", "PANE", "f_125888_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#PANE
    [[maybe_unused]] static void set_field_PANE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "PANE", "field_23031", "PANE", "f_125888_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#EDGE
    [[maybe_unused]] static jobject get_field_EDGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "EDGE", "field_23032", "EDGE", "f_125889_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#EDGE
    [[maybe_unused]] static void set_field_EDGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "EDGE", "field_23032", "EDGE", "f_125889_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#FAN
    [[maybe_unused]] static jobject get_field_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "FAN", "field_23033", "FAN", "f_125890_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#FAN
    [[maybe_unused]] static void set_field_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "FAN", "field_23033", "FAN", "f_125890_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#STEM
    [[maybe_unused]] static jobject get_field_STEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "STEM", "field_23034", "STEM", "f_125891_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#STEM
    [[maybe_unused]] static void set_field_STEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "STEM", "field_23034", "STEM", "f_125891_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#UPPERSTEM
    [[maybe_unused]] static jobject get_field_UPPERSTEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "UPPER_STEM", "field_23035", "UPPERSTEM", "f_125892_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#UPPERSTEM
    [[maybe_unused]] static void set_field_UPPERSTEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "UPPER_STEM", "field_23035", "UPPERSTEM", "f_125892_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#CROP
    [[maybe_unused]] static jobject get_field_CROP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "CROP", "field_22999", "CROP", "f_125856_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#CROP
    [[maybe_unused]] static void set_field_CROP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "CROP", "field_22999", "CROP", "f_125856_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#DIRT
    [[maybe_unused]] static jobject get_field_DIRT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DIRT", "field_23000", "DIRT", "f_125857_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#DIRT
    [[maybe_unused]] static void set_field_DIRT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DIRT", "field_23000", "DIRT", "f_125857_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#FIRE
    [[maybe_unused]] static jobject get_field_FIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "FIRE", "field_23001", "FIRE", "f_125858_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#FIRE
    [[maybe_unused]] static void set_field_FIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "FIRE", "field_23001", "FIRE", "f_125858_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#LANTERN
    [[maybe_unused]] static jobject get_field_LANTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "LANTERN", "field_23002", "LANTERN", "f_125859_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#LANTERN
    [[maybe_unused]] static void set_field_LANTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "LANTERN", "field_23002", "LANTERN", "f_125859_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#PLATFORM
    [[maybe_unused]] static jobject get_field_PLATFORM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "PLATFORM", "field_23003", "PLATFORM", "f_125860_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#PLATFORM
    [[maybe_unused]] static void set_field_PLATFORM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "PLATFORM", "field_23003", "PLATFORM", "f_125860_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#UNSTICKY
    [[maybe_unused]] static jobject get_field_UNSTICKY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "UNSTICKY", "field_23004", "UNSTICKY", "f_125861_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#UNSTICKY
    [[maybe_unused]] static void set_field_UNSTICKY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "UNSTICKY", "field_23004", "UNSTICKY", "f_125861_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#TORCH
    [[maybe_unused]] static jobject get_field_TORCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "TORCH", "field_23005", "TORCH", "f_125862_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#TORCH
    [[maybe_unused]] static void set_field_TORCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "TORCH", "field_23005", "TORCH", "f_125862_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#LAYER0
    [[maybe_unused]] static jobject get_field_LAYER0() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "LAYER0", "field_23006", "LAYER0", "f_125863_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#LAYER0
    [[maybe_unused]] static void set_field_LAYER0(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "LAYER0", "field_23006", "LAYER0", "f_125863_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#LAYER1
    [[maybe_unused]] static jobject get_field_LAYER1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "LAYER1", "field_42089", "LAYER1", "f_265929_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#LAYER1
    [[maybe_unused]] static void set_field_LAYER1(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "LAYER1", "field_42089", "LAYER1", "f_265929_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#LAYER2
    [[maybe_unused]] static jobject get_field_LAYER2() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "LAYER2", "field_42234", "LAYER2", "f_267385_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#LAYER2
    [[maybe_unused]] static void set_field_LAYER2(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "LAYER2", "field_42234", "LAYER2", "f_267385_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#LIT_LOG
    [[maybe_unused]] static jobject get_field_LIT_LOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "LIT_LOG", "field_23958", "LIT_LOG", "f_125864_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#LIT_LOG
    [[maybe_unused]] static void set_field_LIT_LOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "LIT_LOG", "field_23958", "LIT_LOG", "f_125864_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#CANDLE
    [[maybe_unused]] static jobject get_field_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "CANDLE", "field_27790", "CANDLE", "f_176490_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#CANDLE
    [[maybe_unused]] static void set_field_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "CANDLE", "field_27790", "CANDLE", "f_176490_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#INSIDE
    [[maybe_unused]] static jobject get_field_INSIDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "INSIDE", "field_27791", "INSIDE", "f_176491_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#INSIDE
    [[maybe_unused]] static void set_field_INSIDE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "INSIDE", "field_27791", "INSIDE", "f_176491_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#CONTENT
    [[maybe_unused]] static jobject get_field_CONTENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "CONTENT", "field_27792", "CONTENT", "f_176492_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#CONTENT
    [[maybe_unused]] static void set_field_CONTENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "CONTENT", "field_27792", "CONTENT", "f_176492_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#INNER_TOP
    [[maybe_unused]] static jobject get_field_INNER_TOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "INNER_TOP", "field_38470", "INNER_TOP", "f_236352_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#INNER_TOP
    [[maybe_unused]] static void set_field_INNER_TOP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "INNER_TOP", "field_38470", "INNER_TOP", "f_236352_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.TextureKey#FLOWERBED
    [[maybe_unused]] static jobject get_field_FLOWERBED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "FLOWERBED", "field_42951", "FLOWERBED", "f_271285_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.TextureKey#FLOWERBED
    [[maybe_unused]] static void set_field_FLOWERBED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "FLOWERBED", "field_42951", "FLOWERBED", "f_271285_"), "Log;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.data.client.TextureKey#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "id", "field_23007", "name", "f_125865_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.client.TextureKey#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Q", "id", "field_23007", "name", "f_125865_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.client.TextureKey#parent
    static jobject get_field_parent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "parent", "field_23008", "parent", "f_125866_"), "Log;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.client.TextureKey#parent
    static void set_field_parent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("R", "parent", "field_23008", "parent", "f_125866_"), "Log;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_27043", "of", "m_125898_"), "(Ljava/lang/String;)Log;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_27044", "of", "m_125900_"), "(Ljava/lang/String;Log;)Log;");
    }

    static jobject _of(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getId", "method_25912", "getName", "m_125897_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getParent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getParent", "method_25913", "getParent", "m_125903_"), "()Log;");
    }

    static jobject getParent(const jobject& obj) {
                
       const auto methodID = methodID_getParent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_DATA_CLIENT_TEXTUREKEY_HPP