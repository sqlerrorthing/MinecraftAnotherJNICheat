// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_CLIENT_BLOCKSTATEMODELGENERATOR_HPP
#define NET_MINECRAFT_DATA_CLIENT_BLOCKSTATEMODELGENERATOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.client.BlockStateModelGenerator
 * Remapped: no
 */
namespace BlockStateModelGenerator {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("no", "net/minecraft/data/models/BlockModelGenerators", "net/minecraft/class_4910", "net/minecraft/data/client/BlockStateModelGenerator", "net/minecraft/src/C_4786_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.data.client.BlockStateModelGenerator#blockStateCollector
    static jobject get_field_blockStateCollector(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "blockStateOutput", "field_22830", "blockStateCollector", "f_124477_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.data.client.BlockStateModelGenerator#blockStateCollector
    static void set_field_blockStateCollector(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "blockStateOutput", "field_22830", "blockStateCollector", "f_124477_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.data.client.BlockStateModelGenerator#modelCollector
    static jobject get_field_modelCollector(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "modelOutput", "field_22831", "modelCollector", "f_124478_"), "Ljava/util/function/BiConsumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.data.client.BlockStateModelGenerator#modelCollector
    static void set_field_modelCollector(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "modelOutput", "field_22831", "modelCollector", "f_124478_"), "Ljava/util/function/BiConsumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.client.BlockStateModelGenerator#simpleItemModelExemptionCollector
    static jobject get_field_simpleItemModelExemptionCollector(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "skippedAutoModelsOutput", "field_22832", "simpleItemModelExemptionCollector", "f_124479_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.client.BlockStateModelGenerator#simpleItemModelExemptionCollector
    static void set_field_simpleItemModelExemptionCollector(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "skippedAutoModelsOutput", "field_22832", "simpleItemModelExemptionCollector", "f_124479_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.data.client.BlockStateModelGenerator#nonOrientableTrapdoors
    static jobject get_field_nonOrientableTrapdoors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "nonOrientableTrapdoor", "field_28549", "nonOrientableTrapdoors", "f_176080_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.data.client.BlockStateModelGenerator#nonOrientableTrapdoors
    static void set_field_nonOrientableTrapdoors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "nonOrientableTrapdoor", "field_28549", "nonOrientableTrapdoors", "f_176080_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.data.client.BlockStateModelGenerator#stoneStateFactories
    static jobject get_field_stoneStateFactories(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "fullBlockModelCustomGenerators", "field_29504", "stoneStateFactories", "f_176081_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.data.client.BlockStateModelGenerator#stoneStateFactories
    static void set_field_stoneStateFactories(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "fullBlockModelCustomGenerators", "field_29504", "stoneStateFactories", "f_176081_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.data.client.BlockStateModelGenerator#texturedModels
    static jobject get_field_texturedModels(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "texturedModels", "field_28551", "texturedModels", "f_176082_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.data.client.BlockStateModelGenerator#texturedModels
    static void set_field_texturedModels(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "texturedModels", "field_28551", "texturedModels", "f_176082_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static default field net.minecraft.data.client.BlockStateModelGenerator#VARIANT_POOL_FUNCTIONS
    [[maybe_unused]] static jobject get_field_VARIANT_POOL_FUNCTIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SHAPE_CONSUMERS", "field_28552", "VARIANT_POOL_FUNCTIONS", "f_176083_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.data.client.BlockStateModelGenerator#VARIANT_POOL_FUNCTIONS
    [[maybe_unused]] static void set_field_VARIANT_POOL_FUNCTIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SHAPE_CONSUMERS", "field_28552", "VARIANT_POOL_FUNCTIONS", "f_176083_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.BlockStateModelGenerator#CONNECTION_VARIANT_FUNCTIONS
    [[maybe_unused]] static jobject get_field_CONNECTION_VARIANT_FUNCTIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MULTIFACE_GENERATOR", "field_28548", "CONNECTION_VARIANT_FUNCTIONS", "f_176079_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.BlockStateModelGenerator#CONNECTION_VARIANT_FUNCTIONS
    [[maybe_unused]] static void set_field_CONNECTION_VARIANT_FUNCTIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MULTIFACE_GENERATOR", "field_28548", "CONNECTION_VARIANT_FUNCTIONS", "f_176079_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.data.client.BlockStateModelGenerator#CHISELED_BOOKSHELF_MODEL_CACHE
    [[maybe_unused]] static jobject get_field_CHISELED_BOOKSHELF_MODEL_CACHE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "CHISELED_BOOKSHELF_SLOT_MODEL_CACHE", "field_41526", "CHISELED_BOOKSHELF_MODEL_CACHE", "f_260595_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.data.client.BlockStateModelGenerator#CHISELED_BOOKSHELF_MODEL_CACHE
    [[maybe_unused]] static void set_field_CHISELED_BOOKSHELF_MODEL_CACHE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "CHISELED_BOOKSHELF_SLOT_MODEL_CACHE", "field_41526", "CHISELED_BOOKSHELF_MODEL_CACHE", "f_260595_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createStoneState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createMirroredCubeGenerator", "method_34608", "createStoneState", "m_176109_"), "(Ldfy;Lakr;Lof;Ljava/util/function/BiConsumer;)Lnr;");
    }

    static jobject createStoneState(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createStoneState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createMudBrickState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createNorthWestMirroredCubeGenerator", "method_42039", "createMudBrickState", "m_236316_"), "(Ldfy;Lakr;Lof;Ljava/util/function/BiConsumer;)Lnr;");
    }

    static jobject createMudBrickState(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createMudBrickState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createDeepslateState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "createMirroredColumnGenerator", "method_34631", "createDeepslateState", "m_176179_"), "(Ldfy;Lakr;Lof;Ljava/util/function/BiConsumer;)Lnr;");
    }

    static jobject createDeepslateState(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createDeepslateState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_excludeFromSimpleItemModelGeneration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "skipAutoItemBlock", "method_25540", "excludeFromSimpleItemModelGeneration", "m_124524_"), "(Ldfy;)V");
    }

    static void excludeFromSimpleItemModelGeneration(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_excludeFromSimpleItemModelGeneration();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerParentedItemModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "delegateItemModel", "method_25623", "registerParentedItemModel", "m_124797_"), "(Ldfy;Lakr;)V");
    }

    static void registerParentedItemModel(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerParentedItemModel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__registerParentedItemModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "delegateItemModel", "method_25538", "registerParentedItemModel", "m_124519_"), "(Lcul;Lakr;)V");
    }

    static void _registerParentedItemModel(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__registerParentedItemModel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerItemModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createSimpleFlatItemModel", "method_25537", "registerItemModel", "m_124517_"), "(Lcul;)V");
    }

    static void registerItemModel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerItemModel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__registerItemModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "createSimpleFlatItemModel", "method_25600", "registerItemModel", "m_124728_"), "(Ldfy;)V");
    }

    static void _registerItemModel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__registerItemModel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___registerItemModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createSimpleFlatItemModel", "method_25556", "registerItemModel", "m_124575_"), "(Ldfy;Ljava/lang/String;)V");
    }

    static void __registerItemModel(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID___registerItemModel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createNorthDefaultHorizontalRotationStates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createHorizontalFacingDispatch", "method_25599", "createNorthDefaultHorizontalRotationStates", "m_124727_"), "()Lnv;");
    }

    static jobject createNorthDefaultHorizontalRotationStates() {
       const auto clazz = self();
       const auto methodID = methodID_createNorthDefaultHorizontalRotationStates();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createSouthDefaultHorizontalRotationStates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "createHorizontalFacingDispatchAlt", "method_25618", "createSouthDefaultHorizontalRotationStates", "m_124785_"), "()Lnv;");
    }

    static jobject createSouthDefaultHorizontalRotationStates() {
       const auto clazz = self();
       const auto methodID = methodID_createSouthDefaultHorizontalRotationStates();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createEastDefaultHorizontalRotationStates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "createTorchHorizontalDispatch", "method_25630", "createEastDefaultHorizontalRotationStates", "m_124822_"), "()Lnv;");
    }

    static jobject createEastDefaultHorizontalRotationStates() {
       const auto clazz = self();
       const auto methodID = methodID_createEastDefaultHorizontalRotationStates();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createNorthDefaultRotationStates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "createFacingDispatch", "method_25640", "createNorthDefaultRotationStates", "m_124850_"), "()Lnv;");
    }

    static jobject createNorthDefaultRotationStates() {
       const auto clazz = self();
       const auto methodID = methodID_createNorthDefaultRotationStates();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createBlockStateWithRandomHorizontalRotations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createRotatedVariant", "method_25634", "createBlockStateWithRandomHorizontalRotations", "m_124831_"), "(Ldfy;Lakr;)Lnu;");
    }

    static jobject createBlockStateWithRandomHorizontalRotations(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createBlockStateWithRandomHorizontalRotations();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createModelVariantWithRandomHorizontalRotations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createRotatedVariants", "method_25584", "createModelVariantWithRandomHorizontalRotations", "m_124688_"), "(Lakr;)[Lnx;");
    }

    static jobject createModelVariantWithRandomHorizontalRotations(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createModelVariantWithRandomHorizontalRotations();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createBlockStateWithTwoModelAndRandomInversion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createRotatedVariant", "method_25645", "createBlockStateWithTwoModelAndRandomInversion", "m_124862_"), "(Ldfy;Lakr;Lakr;)Lnu;");
    }

    static jobject createBlockStateWithTwoModelAndRandomInversion(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createBlockStateWithTwoModelAndRandomInversion();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createBooleanModelMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createBooleanModelDispatch", "method_25565", "createBooleanModelMap", "m_124622_"), "(Ldtt;Lakr;Lakr;)Lnv;");
    }

    static jobject createBooleanModelMap(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createBooleanModelMap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerMirrorable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "createRotatedMirroredVariantBlock", "method_25619", "registerMirrorable", "m_124786_"), "(Ldfy;)V");
    }

    static void registerMirrorable(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerMirrorable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerRotatable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "createRotatedVariantBlock", "method_25631", "registerRotatable", "m_124823_"), "(Ldfy;)V");
    }

    static void registerRotatable(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerRotatable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerBrushableBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "createBrushableBlock", "method_49377", "registerBrushableBlock", "m_276953_"), "(Ldfy;)V");
    }

    static void registerBrushableBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerBrushableBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createButtonBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createButton", "method_25654", "createButtonBlockState", "m_124884_"), "(Ldfy;Lakr;Lakr;)Lnr;");
    }

    static jobject createButtonBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createButtonBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_fillDoorVariantMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "configureDoorHalf", "method_25572", "fillDoorVariantMap", "m_236304_"), "(Lnv$d;Ldty;Lakr;Lakr;Lakr;Lakr;)Lnv$d;");
    }

    static jobject fillDoorVariantMap(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_fillDoorVariantMap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_createDoorBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createDoor", "method_25609", "createDoorBlockState", "m_236283_"), "(Ldfy;Lakr;Lakr;Lakr;Lakr;Lakr;Lakr;Lakr;Lakr;)Lnr;");
    }

    static jobject createDoorBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6, const jobject& arg7, const jobject& arg8) {
       const auto clazz = self();
       const auto methodID = methodID_createDoorBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_createCustomFenceBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createCustomFence", "method_46189", "createCustomFenceBlockState", "m_247086_"), "(Ldfy;Lakr;Lakr;Lakr;Lakr;Lakr;)Lnr;");
    }

    static jobject createCustomFenceBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_createCustomFenceBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_createFenceBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "createFence", "method_25661", "createFenceBlockState", "m_124904_"), "(Ldfy;Lakr;Lakr;)Lnr;");
    }

    static jobject createFenceBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createFenceBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createWallBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createWall", "method_25636", "createWallBlockState", "m_124838_"), "(Ldfy;Lakr;Lakr;Lakr;)Lnr;");
    }

    static jobject createWallBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createWallBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createFenceGateBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createFenceGate", "method_25626", "createFenceGateBlockState", "m_124809_"), "(Ldfy;Lakr;Lakr;Lakr;Lakr;Z)Lnr;");
    }

    static jobject createFenceGateBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jboolean& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_createFenceGateBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_createStairsBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createStairs", "method_25646", "createStairsBlockState", "m_124866_"), "(Ldfy;Lakr;Lakr;Lakr;)Lnr;");
    }

    static jobject createStairsBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createStairsBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createOrientableTrapdoorBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "createOrientableTrapdoor", "method_25655", "createOrientableTrapdoorBlockState", "m_124888_"), "(Ldfy;Lakr;Lakr;Lakr;)Lnr;");
    }

    static jobject createOrientableTrapdoorBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createOrientableTrapdoorBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createTrapdoorBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "createTrapdoor", "method_25662", "createTrapdoorBlockState", "m_124908_"), "(Ldfy;Lakr;Lakr;Lakr;)Lnr;");
    }

    static jobject createTrapdoorBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createTrapdoorBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createSingletonBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "createSimpleBlock", "method_25644", "createSingletonBlockState", "m_124859_"), "(Ldfy;Lakr;)Lnu;");
    }

    static jobject createSingletonBlockState(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createSingletonBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createAxisRotatedVariantMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "createRotatedPillar", "method_25649", "createAxisRotatedVariantMap", "m_124875_"), "()Lnv;");
    }

    static jobject createAxisRotatedVariantMap() {
       const auto clazz = self();
       const auto methodID = methodID_createAxisRotatedVariantMap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createUvLockedColumnBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createPillarBlockUVLocked", "method_47519", "createUvLockedColumnBlockState", "m_257856_"), "(Ldfy;Lof;Ljava/util/function/BiConsumer;)Lnr;");
    }

    static jobject createUvLockedColumnBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createUvLockedColumnBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createAxisRotatedBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "createAxisAlignedPillarBlock", "method_25653", "createAxisRotatedBlockState", "m_124881_"), "(Ldfy;Lakr;)Lnr;");
    }

    static jobject createAxisRotatedBlockState(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createAxisRotatedBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerAxisRotated() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "createAxisAlignedPillarBlockCustomModel", "method_31063", "registerAxisRotated", "m_124901_"), "(Ldfy;Lakr;)V");
    }

    static void registerAxisRotated(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerAxisRotated();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__registerAxisRotated() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createAxisAlignedPillarBlock", "method_25553", "registerAxisRotated", "m_124586_"), "(Ldfy;Loh$a;)V");
    }

    static void _registerAxisRotated(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__registerAxisRotated();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerNorthDefaultHorizontalRotated() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "createHorizontallyRotatedBlock", "method_25605", "registerNorthDefaultHorizontalRotated", "m_124744_"), "(Ldfy;Loh$a;)V");
    }

    static void registerNorthDefaultHorizontalRotated(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerNorthDefaultHorizontalRotated();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__createAxisRotatedBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "createRotatedPillarWithHorizontalVariant", "method_25667", "createAxisRotatedBlockState", "m_124924_"), "(Ldfy;Lakr;Lakr;)Lnr;");
    }

    static jobject _createAxisRotatedBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__createAxisRotatedBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___registerAxisRotated() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createRotatedPillarWithHorizontalVariant", "method_25554", "registerAxisRotated", "m_124589_"), "(Ldfy;Loh$a;Loh$a;)V");
    }

    static void __registerAxisRotated(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID___registerAxisRotated();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createSubModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createSuffixedVariant", "method_25557", "createSubModel", "m_124578_"), "(Ldfy;Ljava/lang/String;Lod;Ljava/util/function/Function;)Lakr;");
    }

    static jobject createSubModel(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_createSubModel();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createPressurePlateBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "createPressurePlate", "method_25673", "createPressurePlateBlockState", "m_124941_"), "(Ldfy;Lakr;Lakr;)Lnr;");
    }

    static jobject createPressurePlateBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createPressurePlateBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createSlabBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "createSlab", "method_25668", "createSlabBlockState", "m_124928_"), "(Ldfy;Lakr;Lakr;Lakr;)Lnr;");
    }

    static jobject createSlabBlockState(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createSlabBlockState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_registerSimpleCubeAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTrivialCube", "method_25641", "registerSimpleCubeAll", "m_124851_"), "(Ldfy;)V");
    }

    static void registerSimpleCubeAll(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerSimpleCubeAll();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerSingleton() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createTrivialBlock", "method_25622", "registerSingleton", "m_124794_"), "(Ldfy;Loh$a;)V");
    }

    static void registerSingleton(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerSingleton();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__registerSingleton() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTrivialBlock", "method_35868", "registerSingleton", "m_124567_"), "(Ldfy;Lof;Lod;)V");
    }

    static void _registerSingleton(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__registerSingleton();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerCubeAllModelTexturePool() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "family", "method_25650", "registerCubeAllModelTexturePool", "m_124876_"), "(Ldfy;)Lno$b;");
    }

    static jobject registerCubeAllModelTexturePool(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerCubeAllModelTexturePool();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerHangingSign() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createHangingSign", "method_46190", "registerHangingSign", "m_246674_"), "(Ldfy;Ldfy;Ldfy;)V");
    }

    static void registerHangingSign(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_registerHangingSign();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerDoor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "createDoor", "method_25658", "registerDoor", "m_124896_"), "(Ldfy;)V");
    }

    static void registerDoor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerDoor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerParentedDoor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "copyDoorModel", "method_54823", "registerParentedDoor", "m_306694_"), "(Ldfy;Ldfy;)V");
    }

    static void registerParentedDoor(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerParentedDoor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerOrientableTrapdoor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "createOrientableTrapdoor", "method_25665", "registerOrientableTrapdoor", "m_124916_"), "(Ldfy;)V");
    }

    static void registerOrientableTrapdoor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerOrientableTrapdoor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerTrapdoor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "createTrapdoor", "method_25671", "registerTrapdoor", "m_124936_"), "(Ldfy;)V");
    }

    static void registerTrapdoor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerTrapdoor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerParentedTrapdoor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "copyTrapdoorModel", "method_54824", "registerParentedTrapdoor", "m_306005_"), "(Ldfy;Ldfy;)V");
    }

    static void registerParentedTrapdoor(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerParentedTrapdoor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerBigDripleaf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "createBigDripLeafBlock", "method_33711", "registerBigDripleaf", "m_176230_"), "()V");
    }

    static void registerBigDripleaf(const jobject& obj) {
                
       const auto methodID = methodID_registerBigDripleaf();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "woodProvider", "method_25676", "registerLog", "m_124948_"), "(Ldfy;)Lno$f;");
    }

    static jobject registerLog(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerLog();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerSimpleState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "createNonTemplateModelBlock", "method_25681", "registerSimpleState", "m_124960_"), "(Ldfy;)V");
    }

    static void registerSimpleState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerSimpleState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerStateWithModelReference() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "createNonTemplateModelBlock", "method_25543", "registerStateWithModelReference", "m_124533_"), "(Ldfy;Ldfy;)V");
    }

    static void registerStateWithModelReference(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerStateWithModelReference();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerTintableCross() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createCrossBlockWithDefaultItem", "method_25548", "registerTintableCross", "m_124557_"), "(Ldfy;Lno$e;)V");
    }

    static void registerTintableCross(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerTintableCross();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__registerTintableCross() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createCrossBlockWithDefaultItem", "method_25549", "registerTintableCross", "m_124560_"), "(Ldfy;Lno$e;Lof;)V");
    }

    static void _registerTintableCross(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__registerTintableCross();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerTintableCrossBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createCrossBlock", "method_25603", "registerTintableCrossBlockState", "m_124737_"), "(Ldfy;Lno$e;)V");
    }

    static void registerTintableCrossBlockState(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerTintableCrossBlockState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__registerTintableCrossBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createCrossBlock", "method_25604", "registerTintableCrossBlockState", "m_124740_"), "(Ldfy;Lno$e;Lof;)V");
    }

    static void _registerTintableCrossBlockState(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__registerTintableCrossBlockState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerTintableCrossBlockStateWithStages() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createCrossBlock", "method_49374", "registerTintableCrossBlockStateWithStages", "m_271994_"), "(Ldfy;Lno$e;Lduf;[I)V");
    }

    static void registerTintableCrossBlockStateWithStages(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jarray& arg3, const jint& arg4) {
                
       const auto methodID = methodID_registerTintableCrossBlockStateWithStages();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_registerFlowerPotPlant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPlant", "method_25545", "registerFlowerPotPlant", "m_124545_"), "(Ldfy;Ldfy;Lno$e;)V");
    }

    static void registerFlowerPotPlant(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_registerFlowerPotPlant();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerCoralFan() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "createCoralFans", "method_25601", "registerCoralFan", "m_124730_"), "(Ldfy;Ldfy;)V");
    }

    static void registerCoralFan(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerCoralFan();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerGourd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "createStems", "method_25620", "registerGourd", "m_124788_"), "(Ldfy;Ldfy;)V");
    }

    static void registerGourd(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerGourd();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerPitcherPlant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "createPitcherPlant", "method_49991", "registerPitcherPlant", "m_277101_"), "()V");
    }

    static void registerPitcherPlant(const jobject& obj) {
                
       const auto methodID = methodID_registerPitcherPlant();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerPitcherCrop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "createPitcherCrop", "method_49992", "registerPitcherCrop", "m_277126_"), "()V");
    }

    static void registerPitcherCrop(const jobject& obj) {
                
       const auto methodID = methodID_registerPitcherCrop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerCoral() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createCoral", "method_25544", "registerCoral", "m_124536_"), "(Ldfy;Ldfy;Ldfy;Ldfy;Ldfy;Ldfy;Ldfy;Ldfy;)V");
    }

    static void registerCoral(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6, const jobject& arg7) {
                
       const auto methodID = methodID_registerCoral();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_registerDoubleBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "createDoublePlant", "method_25621", "registerDoubleBlock", "m_124791_"), "(Ldfy;Lno$e;)V");
    }

    static void registerDoubleBlock(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerDoubleBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerSunflower() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "createSunflower", "method_25657", "registerSunflower", "m_124895_"), "()V");
    }

    static void registerSunflower(const jobject& obj) {
                
       const auto methodID = methodID_registerSunflower();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerTallSeagrass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "createTallSeagrass", "method_25664", "registerTallSeagrass", "m_124915_"), "()V");
    }

    static void registerTallSeagrass(const jobject& obj) {
                
       const auto methodID = methodID_registerTallSeagrass();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerSmallDripleaf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "createSmallDripleaf", "method_33712", "registerSmallDripleaf", "m_176241_"), "()V");
    }

    static void registerSmallDripleaf(const jobject& obj) {
                
       const auto methodID = methodID_registerSmallDripleaf();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__registerDoubleBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "createDoubleBlock", "method_25678", "registerDoubleBlock", "m_124953_"), "(Ldfy;Lakr;Lakr;)V");
    }

    static void _registerDoubleBlock(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__registerDoubleBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerTurnableRail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "createPassiveRail", "method_25685", "registerTurnableRail", "m_124968_"), "(Ldfy;)V");
    }

    static void registerTurnableRail(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerTurnableRail();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerStraightRail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "createActiveRail", "method_25688", "registerStraightRail", "m_124974_"), "(Ldfy;)V");
    }

    static void registerStraightRail(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerStraightRail();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerBuiltin() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "blockEntityModels", "method_25585", "registerBuiltin", "m_124690_"), "(Lakr;Ldfy;)Lno$a;");
    }

    static jobject registerBuiltin(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerBuiltin();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__registerBuiltin() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "blockEntityModels", "method_25632", "registerBuiltin", "m_124825_"), "(Ldfy;Ldfy;)Lno$a;");
    }

    static jobject _registerBuiltin(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__registerBuiltin();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerBuiltinWithParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createAirLikeBlock", "method_25542", "registerBuiltinWithParticle", "m_124530_"), "(Ldfy;Lcul;)V");
    }

    static void registerBuiltinWithParticle(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerBuiltinWithParticle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__registerBuiltinWithParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "createAirLikeBlock", "method_25660", "registerBuiltinWithParticle", "m_124921_"), "(Ldfy;Lakr;)V");
    }

    static void _registerBuiltinWithParticle(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__registerBuiltinWithParticle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerWoolAndCarpet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "createFullAndCarpetBlocks", "method_25642", "registerWoolAndCarpet", "m_176217_"), "(Ldfy;Ldfy;)V");
    }

    static void registerWoolAndCarpet(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerWoolAndCarpet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerFlowerbed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "createFlowerBed", "method_49378", "registerFlowerbed", "m_272099_"), "(Ldfy;)V");
    }

    static void registerFlowerbed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerFlowerbed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerRandomHorizontalRotations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createColoredBlockWithRandomRotations", "method_25576", "registerRandomHorizontalRotations", "m_124685_"), "(Loh$a;[Ldfy;)V");
    }

    static void registerRandomHorizontalRotations(const jobject& obj, const jobject& arg0, const jarray& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_registerRandomHorizontalRotations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerSouthDefaultHorizontalFacing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createColoredBlockWithStateRotations", "method_25614", "registerSouthDefaultHorizontalFacing", "m_124777_"), "(Loh$a;[Ldfy;)V");
    }

    static void registerSouthDefaultHorizontalFacing(const jobject& obj, const jobject& arg0, const jarray& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_registerSouthDefaultHorizontalFacing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerGlassPane() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "createGlassBlocks", "method_25651", "registerGlassPane", "m_124878_"), "(Ldfy;Ldfy;)V");
    }

    static void registerGlassPane(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerGlassPane();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerCommandBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "createCommandBlock", "method_25690", "registerCommandBlock", "m_124977_"), "(Ldfy;)V");
    }

    static void registerCommandBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerCommandBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerAnvil() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "createAnvil", "method_25692", "registerAnvil", "m_124980_"), "(Ldfy;)V");
    }

    static void registerAnvil(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerAnvil();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBambooBlockStateVariants() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createBambooModels", "method_25535", "getBambooBlockStateVariants", "m_124511_"), "(I)Ljava/util/List;");
    }

    static jobject getBambooBlockStateVariants(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getBambooBlockStateVariants();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerBamboo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "createBamboo", "method_25670", "registerBamboo", "m_124935_"), "()V");
    }

    static void registerBamboo(const jobject& obj) {
                
       const auto methodID = methodID_registerBamboo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createUpDefaultFacingVariantMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "createColumnWithFacing", "method_25675", "createUpDefaultFacingVariantMap", "m_124947_"), "()Lnv;");
    }

    static jobject createUpDefaultFacingVariantMap(const jobject& obj) {
                
       const auto methodID = methodID_createUpDefaultFacingVariantMap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerBarrel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "createBarrel", "method_25680", "registerBarrel", "m_124959_"), "()V");
    }

    static void registerBarrel(const jobject& obj) {
                
       const auto methodID = methodID_registerBarrel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createValueFencedModelMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createEmptyOrFullDispatch", "method_25566", "createValueFencedModelMap", "m_124626_"), "(Lduf;Ljava/lang/Comparable;Lakr;Lakr;)Lnv;");
    }

    static jobject createValueFencedModelMap(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createValueFencedModelMap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_registerBeehive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createBeeNest", "method_25558", "registerBeehive", "m_124583_"), "(Ldfy;Ljava/util/function/Function;)V");
    }

    static void registerBeehive(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerBeehive();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerCrop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createCropBlock", "method_25547", "registerCrop", "m_124553_"), "(Ldfy;Lduf;[I)V");
    }

    static void registerCrop(const jobject& obj, const jobject& arg0, const jobject& arg1, const jarray& arg2, const jint& arg3) {
                
       const auto methodID = methodID_registerCrop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_registerBell() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "createBell", "method_25684", "registerBell", "m_124967_"), "()V");
    }

    static void registerBell(const jobject& obj) {
                
       const auto methodID = methodID_registerBell();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerGrindstone() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "createGrindstone", "method_25687", "registerGrindstone", "m_124973_"), "()V");
    }

    static void registerGrindstone(const jobject& obj) {
                
       const auto methodID = methodID_registerGrindstone();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerCooker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "createFurnace", "method_25652", "registerCooker", "m_124856_"), "(Ldfy;Loh$a;)V");
    }

    static void registerCooker(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerCooker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerCampfire() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createCampfires", "method_27166", "registerCampfire", "m_124713_"), "([Ldfy;)V");
    }

    static void registerCampfire(const jobject& obj, const jarray& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerCampfire();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerAzalea() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "createAzalea", "method_33713", "registerAzalea", "m_176247_"), "(Ldfy;)V");
    }

    static void registerAzalea(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerAzalea();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerPottedAzaleaBush() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "createPottedAzalea", "method_37317", "registerPottedAzaleaBush", "m_176249_"), "(Ldfy;)V");
    }

    static void registerPottedAzaleaBush(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerPottedAzaleaBush();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerBookshelf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "createBookshelf", "method_25691", "registerBookshelf", "m_124976_"), "()V");
    }

    static void registerBookshelf(const jobject& obj) {
                
       const auto methodID = methodID_registerBookshelf();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerRedstone() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "createRedstoneWire", "method_25693", "registerRedstone", "m_124979_"), "()V");
    }

    static void registerRedstone(const jobject& obj) {
                
       const auto methodID = methodID_registerRedstone();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerComparator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "createComparator", "method_25695", "registerComparator", "m_124982_"), "()V");
    }

    static void registerComparator(const jobject& obj) {
                
       const auto methodID = methodID_registerComparator();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerSmoothStone() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "createSmoothStoneSlab", "method_25697", "registerSmoothStone", "m_124985_"), "()V");
    }

    static void registerSmoothStone(const jobject& obj) {
                
       const auto methodID = methodID_registerSmoothStone();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerBrewingStand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "createBrewingStand", "method_25699", "registerBrewingStand", "m_124988_"), "()V");
    }

    static void registerBrewingStand(const jobject& obj) {
                
       const auto methodID = methodID_registerBrewingStand();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerMushroomBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "createMushroomBlock", "method_25694", "registerMushroomBlock", "m_124983_"), "(Ldfy;)V");
    }

    static void registerMushroomBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerMushroomBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerCake() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "createCakeBlock", "method_25701", "registerCake", "m_124991_"), "()V");
    }

    static void registerCake(const jobject& obj) {
                
       const auto methodID = methodID_registerCake();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerCartographyTable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "createCartographyTable", "method_25703", "registerCartographyTable", "m_124994_"), "()V");
    }

    static void registerCartographyTable(const jobject& obj) {
                
       const auto methodID = methodID_registerCartographyTable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerSmithingTable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "createSmithingTable", "method_25705", "registerSmithingTable", "m_124997_"), "()V");
    }

    static void registerSmithingTable(const jobject& obj) {
                
       const auto methodID = methodID_registerSmithingTable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerCubeWithCustomTextures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createCraftingTableLike", "method_25546", "registerCubeWithCustomTextures", "m_124549_"), "(Ldfy;Ldfy;Ljava/util/function/BiFunction;)V");
    }

    static void registerCubeWithCustomTextures(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_registerCubeWithCustomTextures();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerGeneric() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createGenericCube", "method_51463", "registerGeneric", "m_280054_"), "(Ldfy;)V");
    }

    static void registerGeneric(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerGeneric();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerPumpkins() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "createPumpkins", "method_25707", "registerPumpkins", "m_125000_"), "()V");
    }

    static void registerPumpkins(const jobject& obj) {
                
       const auto methodID = methodID_registerPumpkins();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerNorthDefaultHorizontalRotatable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPumpkinVariant", "method_25550", "registerNorthDefaultHorizontalRotatable", "m_124564_"), "(Ldfy;Lof;)V");
    }

    static void registerNorthDefaultHorizontalRotatable(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerNorthDefaultHorizontalRotatable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerCauldrons() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "createCauldrons", "method_25709", "registerCauldrons", "m_176253_"), "()V");
    }

    static void registerCauldrons(const jobject& obj) {
                
       const auto methodID = methodID_registerCauldrons();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerChorusFlower() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "createChorusFlower", "method_25711", "registerChorusFlower", "m_125006_"), "()V");
    }

    static void registerChorusFlower(const jobject& obj) {
                
       const auto methodID = methodID_registerChorusFlower();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerCrafter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "createCrafterBlock", "method_54654", "registerCrafter", "m_305326_"), "()V");
    }

    static void registerCrafter(const jobject& obj) {
                
       const auto methodID = methodID_registerCrafter();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerDispenserLikeOrientable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "createDispenserBlock", "method_25696", "registerDispenserLikeOrientable", "m_124986_"), "(Ldfy;)V");
    }

    static void registerDispenserLikeOrientable(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerDispenserLikeOrientable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerEndPortalFrame() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "createEndPortalFrame", "method_25712", "registerEndPortalFrame", "m_125009_"), "()V");
    }

    static void registerEndPortalFrame(const jobject& obj) {
                
       const auto methodID = methodID_registerEndPortalFrame();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerChorusPlant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "createChorusPlant", "method_25508", "registerChorusPlant", "m_125012_"), "()V");
    }

    static void registerChorusPlant(const jobject& obj) {
                
       const auto methodID = methodID_registerChorusPlant();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerComposter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "createComposter", "method_25509", "registerComposter", "m_124484_"), "()V");
    }

    static void registerComposter(const jobject& obj) {
                
       const auto methodID = methodID_registerComposter();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerCopperBulb() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "createCopperBulb", "method_54826", "registerCopperBulb", "m_306304_"), "(Ldfy;)V");
    }

    static void registerCopperBulb(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerCopperBulb();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createCopperBulbBlockState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createCopperBulb", "method_54822", "createCopperBulbBlockState", "m_305465_"), "(Ldfy;Lakr;Lakr;Lakr;Lakr;)Lnr;");
    }

    static jobject createCopperBulbBlockState(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_createCopperBulbBlockState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_registerWaxedCopperBulb() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "copyCopperBulbModel", "method_54825", "registerWaxedCopperBulb", "m_306319_"), "(Ldfy;Ldfy;)V");
    }

    static void registerWaxedCopperBulb(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerWaxedCopperBulb();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerAmethyst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "createAmethystCluster", "method_32229", "registerAmethyst", "m_176251_"), "(Ldfy;)V");
    }

    static void registerAmethyst(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerAmethyst();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerAmethysts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "createAmethystClusters", "method_32227", "registerAmethysts", "m_176087_"), "()V");
    }

    static void registerAmethysts(const jobject& obj) {
                
       const auto methodID = methodID_registerAmethysts();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerPointedDripstone() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "createPointedDripstone", "method_32802", "registerPointedDripstone", "m_176088_"), "()V");
    }

    static void registerPointedDripstone(const jobject& obj) {
                
       const auto methodID = methodID_registerPointedDripstone();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDripstoneVariant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPointedDripstoneVariant", "method_32803", "getDripstoneVariant", "m_176116_"), "(Lji;Ldtz;)Lnx;");
    }

    static jobject getDripstoneVariant(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getDripstoneVariant();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerNetherrackBottomCustomTop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "createNyliumBlock", "method_25698", "registerNetherrackBottomCustomTop", "m_124989_"), "(Ldfy;)V");
    }

    static void registerNetherrackBottomCustomTop(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerNetherrackBottomCustomTop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerDaylightDetector() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "createDaylightDetector", "method_25510", "registerDaylightDetector", "m_124485_"), "()V");
    }

    static void registerDaylightDetector(const jobject& obj) {
                
       const auto methodID = methodID_registerDaylightDetector();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerRod() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "createRotatableColumn", "method_31064", "registerRod", "m_124992_"), "(Ldfy;)V");
    }

    static void registerRod(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerRod();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerLightningRod() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "createLightningRod", "method_34852", "registerLightningRod", "m_176089_"), "()V");
    }

    static void registerLightningRod(const jobject& obj) {
                
       const auto methodID = methodID_registerLightningRod();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerFarmland() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "createFarmland", "method_25512", "registerFarmland", "m_124486_"), "()V");
    }

    static void registerFarmland(const jobject& obj) {
                
       const auto methodID = methodID_registerFarmland();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFireFloorModels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "createFloorFireModels", "method_25700", "getFireFloorModels", "m_124995_"), "(Ldfy;)Ljava/util/List;");
    }

    static jobject getFireFloorModels(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFireFloorModels();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFireSideModels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "createSideFireModels", "method_25702", "getFireSideModels", "m_124998_"), "(Ldfy;)Ljava/util/List;");
    }

    static jobject getFireSideModels(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFireSideModels();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFireUpModels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "createTopFireModels", "method_25704", "getFireUpModels", "m_125001_"), "(Ldfy;)Ljava/util/List;");
    }

    static jobject getFireUpModels(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFireUpModels();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_buildBlockStateVariants() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "wrapModels", "method_25583", "buildBlockStateVariants", "m_124682_"), "(Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List;");
    }

    static jobject buildBlockStateVariants(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_buildBlockStateVariants();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerFire() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L", "createFire", "method_25513", "registerFire", "m_124487_"), "()V");
    }

    static void registerFire(const jobject& obj) {
                
       const auto methodID = methodID_registerFire();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerSoulFire() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("M", "createSoulFire", "method_25514", "registerSoulFire", "m_124488_"), "()V");
    }

    static void registerSoulFire(const jobject& obj) {
                
       const auto methodID = methodID_registerSoulFire();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerLantern() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "createLantern", "method_25706", "registerLantern", "m_125004_"), "(Ldfy;)V");
    }

    static void registerLantern(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerLantern();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerMuddyMangroveRoots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("N", "createMuddyMangroveRoots", "method_42033", "registerMuddyMangroveRoots", "m_236274_"), "()V");
    }

    static void registerMuddyMangroveRoots(const jobject& obj) {
                
       const auto methodID = methodID_registerMuddyMangroveRoots();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerMangrovePropagule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("O", "createMangrovePropagule", "method_42034", "registerMangrovePropagule", "m_236275_"), "()V");
    }

    static void registerMangrovePropagule(const jobject& obj) {
                
       const auto methodID = methodID_registerMangrovePropagule();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerFrostedIce() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("P", "createFrostedIce", "method_25515", "registerFrostedIce", "m_124489_"), "()V");
    }

    static void registerFrostedIce(const jobject& obj) {
                
       const auto methodID = methodID_registerFrostedIce();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerTopSoils() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Q", "createGrassBlocks", "method_25516", "registerTopSoils", "m_124490_"), "()V");
    }

    static void registerTopSoils(const jobject& obj) {
                
       const auto methodID = methodID_registerTopSoils();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerTopSoil() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createGrassLikeBlock", "method_25560", "registerTopSoil", "m_124599_"), "(Ldfy;Lakr;Lnx;)V");
    }

    static void registerTopSoil(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_registerTopSoil();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerCocoa() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R", "createCocoa", "method_25517", "registerCocoa", "m_124491_"), "()V");
    }

    static void registerCocoa(const jobject& obj) {
                
       const auto methodID = methodID_registerCocoa();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerDirtPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("S", "createDirtPath", "method_25518", "registerDirtPath", "m_176090_"), "()V");
    }

    static void registerDirtPath(const jobject& obj) {
                
       const auto methodID = methodID_registerDirtPath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerWeightedPressurePlate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "createWeightedPressurePlate", "method_25666", "registerWeightedPressurePlate", "m_124918_"), "(Ldfy;Ldfy;)V");
    }

    static void registerWeightedPressurePlate(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerWeightedPressurePlate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerHopper() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("T", "createHopper", "method_25519", "registerHopper", "m_124493_"), "()V");
    }

    static void registerHopper(const jobject& obj) {
                
       const auto methodID = methodID_registerHopper();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerParented() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "copyModel", "method_25672", "registerParented", "m_124938_"), "(Ldfy;Ldfy;)V");
    }

    static void registerParented(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerParented();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerIronBars() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("U", "createIronBars", "method_25520", "registerIronBars", "m_124494_"), "()V");
    }

    static void registerIronBars(const jobject& obj) {
                
       const auto methodID = methodID_registerIronBars();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerNorthDefaultHorizontalRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "createNonTemplateHorizontalBlock", "method_25708", "registerNorthDefaultHorizontalRotation", "m_125007_"), "(Ldfy;)V");
    }

    static void registerNorthDefaultHorizontalRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerNorthDefaultHorizontalRotation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerLever() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("V", "createLever", "method_25521", "registerLever", "m_124495_"), "()V");
    }

    static void registerLever(const jobject& obj) {
                
       const auto methodID = methodID_registerLever();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerLilyPad() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("W", "createLilyPad", "method_25522", "registerLilyPad", "m_124496_"), "()V");
    }

    static void registerLilyPad(const jobject& obj) {
                
       const auto methodID = methodID_registerLilyPad();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerFrogspawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("X", "createFrogspawnBlock", "method_42035", "registerFrogspawn", "m_236276_"), "()V");
    }

    static void registerFrogspawn(const jobject& obj) {
                
       const auto methodID = methodID_registerFrogspawn();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerNetherPortal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Y", "createNetherPortalBlock", "method_25523", "registerNetherPortal", "m_124497_"), "()V");
    }

    static void registerNetherPortal(const jobject& obj) {
                
       const auto methodID = methodID_registerNetherPortal();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerNetherrack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Z", "createNetherrack", "method_25524", "registerNetherrack", "m_124498_"), "()V");
    }

    static void registerNetherrack(const jobject& obj) {
                
       const auto methodID = methodID_registerNetherrack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerObserver() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "createObserver", "method_25525", "registerObserver", "m_124499_"), "()V");
    }

    static void registerObserver(const jobject& obj) {
                
       const auto methodID = methodID_registerObserver();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerPistons() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "createPistons", "method_25526", "registerPistons", "m_124500_"), "()V");
    }

    static void registerPistons(const jobject& obj) {
                
       const auto methodID = methodID_registerPistons();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerPiston() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPistonVariant", "method_25561", "registerPiston", "m_124603_"), "(Ldfy;Lakr;Lof;)V");
    }

    static void registerPiston(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_registerPiston();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerPistonHead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ac", "createPistonHeads", "method_25527", "registerPistonHead", "m_124501_"), "()V");
    }

    static void registerPistonHead(const jobject& obj) {
                
       const auto methodID = methodID_registerPistonHead();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerTrialSpawner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ad", "createTrialSpawner", "method_55306", "registerTrialSpawner", "m_307870_"), "()V");
    }

    static void registerTrialSpawner(const jobject& obj) {
                
       const auto methodID = methodID_registerTrialSpawner();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerVault() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ae", "createVault", "method_56886", "registerVault", "m_320317_"), "()V");
    }

    static void registerVault(const jobject& obj) {
                
       const auto methodID = methodID_registerVault();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerSculkSensor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("af", "createSculkSensor", "method_33128", "registerSculkSensor", "m_176091_"), "()V");
    }

    static void registerSculkSensor(const jobject& obj) {
                
       const auto methodID = methodID_registerSculkSensor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerCalibratedSculkSensor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ag", "createCalibratedSculkSensor", "method_49989", "registerCalibratedSculkSensor", "m_276871_"), "()V");
    }

    static void registerCalibratedSculkSensor(const jobject& obj) {
                
       const auto methodID = methodID_registerCalibratedSculkSensor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerSculkShrieker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ah", "createSculkShrieker", "method_42037", "registerSculkShrieker", "m_236314_"), "()V");
    }

    static void registerSculkShrieker(const jobject& obj) {
                
       const auto methodID = methodID_registerSculkShrieker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerScaffolding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ai", "createScaffolding", "method_25528", "registerScaffolding", "m_124502_"), "()V");
    }

    static void registerScaffolding(const jobject& obj) {
                
       const auto methodID = methodID_registerScaffolding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerCaveVines() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aj", "createCaveVines", "method_33710", "registerCaveVines", "m_176092_"), "()V");
    }

    static void registerCaveVines(const jobject& obj) {
                
       const auto methodID = methodID_registerCaveVines();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerRedstoneLamp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ak", "createRedstoneLamp", "method_25529", "registerRedstoneLamp", "m_124503_"), "()V");
    }

    static void registerRedstoneLamp(const jobject& obj) {
                
       const auto methodID = methodID_registerRedstoneLamp();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerTorch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "createNormalTorch", "method_25677", "registerTorch", "m_124950_"), "(Ldfy;Ldfy;)V");
    }

    static void registerTorch(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerTorch();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerRedstoneTorch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("al", "createRedstoneTorch", "method_25530", "registerRedstoneTorch", "m_124504_"), "()V");
    }

    static void registerRedstoneTorch(const jobject& obj) {
                
       const auto methodID = methodID_registerRedstoneTorch();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerRepeater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("am", "createRepeater", "method_25531", "registerRepeater", "m_124505_"), "()V");
    }

    static void registerRepeater(const jobject& obj) {
                
       const auto methodID = methodID_registerRepeater();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerSeaPickle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("an", "createSeaPickle", "method_25532", "registerSeaPickle", "m_124506_"), "()V");
    }

    static void registerSeaPickle(const jobject& obj) {
                
       const auto methodID = methodID_registerSeaPickle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerSnows() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ao", "createSnowBlocks", "method_25533", "registerSnows", "m_124507_"), "()V");
    }

    static void registerSnows(const jobject& obj) {
                
       const auto methodID = methodID_registerSnows();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerStonecutter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ap", "createStonecutter", "method_25590", "registerStonecutter", "m_124508_"), "()V");
    }

    static void registerStonecutter(const jobject& obj) {
                
       const auto methodID = methodID_registerStonecutter();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerStructureBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aq", "createStructureBlock", "method_25591", "registerStructureBlock", "m_124509_"), "()V");
    }

    static void registerStructureBlock(const jobject& obj) {
                
       const auto methodID = methodID_registerStructureBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerSweetBerryBush() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ar", "createSweetBerryBush", "method_25592", "registerSweetBerryBush", "m_124718_"), "()V");
    }

    static void registerSweetBerryBush(const jobject& obj) {
                
       const auto methodID = methodID_registerSweetBerryBush();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerTripwire() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("as", "createTripwire", "method_25593", "registerTripwire", "m_124719_"), "()V");
    }

    static void registerTripwire(const jobject& obj) {
                
       const auto methodID = methodID_registerTripwire();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerTripwireHook() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("at", "createTripwireHook", "method_25594", "registerTripwireHook", "m_124720_"), "()V");
    }

    static void registerTripwireHook(const jobject& obj) {
                
       const auto methodID = methodID_registerTripwireHook();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTurtleEggModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTurtleEggModel", "method_25536", "getTurtleEggModel", "m_124513_"), "(ILjava/lang/String;Lof;)Lakr;");
    }

    static jobject getTurtleEggModel(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getTurtleEggModel();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__getTurtleEggModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTurtleEggModel", "method_25581", "getTurtleEggModel", "m_124676_"), "(Ljava/lang/Integer;Ljava/lang/Integer;)Lakr;");
    }

    static jobject _getTurtleEggModel(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__getTurtleEggModel();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerTurtleEgg() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("au", "createTurtleEgg", "method_25595", "registerTurtleEgg", "m_124721_"), "()V");
    }

    static void registerTurtleEgg(const jobject& obj) {
                
       const auto methodID = methodID_registerTurtleEgg();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerSnifferEgg() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("av", "createSnifferEgg", "method_49990", "registerSnifferEgg", "m_277113_"), "()V");
    }

    static void registerSnifferEgg(const jobject& obj) {
                
       const auto methodID = methodID_registerSnifferEgg();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerWallPlant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "createMultiface", "method_33520", "registerWallPlant", "m_176085_"), "(Ldfy;)V");
    }

    static void registerWallPlant(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerWallPlant();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerSculkCatalyst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aw", "createSculkCatalyst", "method_42038", "registerSculkCatalyst", "m_236315_"), "()V");
    }

    static void registerSculkCatalyst(const jobject& obj) {
                
       const auto methodID = methodID_registerSculkCatalyst();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerChiseledBookshelf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ax", "createChiseledBookshelf", "method_46193", "registerChiseledBookshelf", "m_247160_"), "()V");
    }

    static void registerChiseledBookshelf(const jobject& obj) {
                
       const auto methodID = methodID_registerChiseledBookshelf();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_supplyChiseledBookshelfModels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addSlotStateAndRotationVariants", "method_47812", "supplyChiseledBookshelfModels", "m_261107_"), "(Lnt;Lns$c;Lny$a;)V");
    }

    static void supplyChiseledBookshelfModels(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_supplyChiseledBookshelfModels();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_supplyChiseledBookshelfModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addBookSlotModel", "method_47814", "supplyChiseledBookshelfModel", "m_260948_"), "(Lnt;Lns$c;Lny$a;Ldtt;Lod;Z)V");
    }

    static void supplyChiseledBookshelfModel(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID_supplyChiseledBookshelfModel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_registerMagmaBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ay", "createMagmaBlock", "method_25597", "registerMagmaBlock", "m_124723_"), "()V");
    }

    static void registerMagmaBlock(const jobject& obj) {
                
       const auto methodID = methodID_registerMagmaBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerShulkerBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "createShulkerBox", "method_25710", "registerShulkerBox", "m_125010_"), "(Ldfy;)V");
    }

    static void registerShulkerBox(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_registerShulkerBox();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_registerPlantPart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createGrowingPlant", "method_25602", "registerPlantPart", "m_124733_"), "(Ldfy;Ldfy;Lno$e;)V");
    }

    static void registerPlantPart(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_registerPlantPart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_registerBed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "createBedItem", "method_25682", "registerBed", "m_124962_"), "(Ldfy;Ldfy;)V");
    }

    static void registerBed(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerBed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerInfestedStone() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("az", "createInfestedStone", "method_25598", "registerInfestedStone", "m_124724_"), "()V");
    }

    static void registerInfestedStone(const jobject& obj) {
                
       const auto methodID = methodID_registerInfestedStone();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerInfestedDeepslate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aA", "createInfestedDeepslate", "method_36440", "registerInfestedDeepslate", "m_176176_"), "()V");
    }

    static void registerInfestedDeepslate(const jobject& obj) {
                
       const auto methodID = methodID_registerInfestedDeepslate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerRoots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "createNetherRoots", "method_25686", "registerRoots", "m_124970_"), "(Ldfy;Ldfy;)V");
    }

    static void registerRoots(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerRoots();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerRespawnAnchor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aB", "createRespawnAnchor", "method_26279", "registerRespawnAnchor", "m_124725_"), "()V");
    }

    static void registerRespawnAnchor(const jobject& obj) {
                
       const auto methodID = methodID_registerRespawnAnchor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_addJigsawOrientationToVariant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyRotation", "method_26433", "addJigsawOrientationToVariant", "m_124635_"), "(Ljk;Lnx;)Lnx;");
    }

    static jobject addJigsawOrientationToVariant(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addJigsawOrientationToVariant();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registerJigsaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aC", "createJigsaw", "method_26434", "registerJigsaw", "m_124726_"), "()V");
    }

    static void registerJigsaw(const jobject& obj) {
                
       const auto methodID = methodID_registerJigsaw();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerPetrifiedOakSlab() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aD", "createPetrifiedOakSlab", "method_33504", "registerPetrifiedOakSlab", "m_176177_"), "()V");
    }

    static void registerPetrifiedOakSlab(const jobject& obj) {
                
       const auto methodID = methodID_registerPetrifiedOakSlab();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "run", "method_25534", "register", "m_124510_"), "()V");
    }

    static void register(const jobject& obj) {
                
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerLightBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aE", "createLightBlock", "method_39204", "registerLightBlock", "m_194715_"), "()V");
    }

    static void registerLightBlock(const jobject& obj) {
                
       const auto methodID = methodID_registerLightBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_registerCandle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "createCandleAndCandleCake", "method_32228", "registerCandle", "m_176244_"), "(Ldfy;Ldfy;)V");
    }

    static void registerCandle(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_registerCandle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_DATA_CLIENT_BLOCKSTATEMODELGENERATOR_HPP