// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_CLIENT_BLOCKSTATEMODELGENERATOR$TINTTYPE_HPP
#define NET_MINECRAFT_DATA_CLIENT_BLOCKSTATEMODELGENERATOR$TINTTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.client.BlockStateModelGenerator$TintType
 * Remapped: no$e
 */
namespace BlockStateModelGenerator$TintType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("no$e", "net/minecraft/data/models/BlockModelGenerators$TintState", "net/minecraft/class_4910$class_4913", "net/minecraft/data/client/BlockStateModelGenerator$TintType", "net/minecraft/src/C_4786_$C_4790_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.data.client.BlockStateModelGenerator$TintType#TINTED
    [[maybe_unused]] static jobject get_field_TINTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TINTED", "field_22839", "TINTED", "TINTED"), "Lno$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.BlockStateModelGenerator$TintType#TINTED
    [[maybe_unused]] static void set_field_TINTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TINTED", "field_22839", "TINTED", "TINTED"), "Lno$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.BlockStateModelGenerator$TintType#NOT_TINTED
    [[maybe_unused]] static jobject get_field_NOT_TINTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NOT_TINTED", "field_22840", "NOT_TINTED", "NOT_TINTED"), "Lno$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.BlockStateModelGenerator$TintType#NOT_TINTED
    [[maybe_unused]] static void set_field_NOT_TINTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NOT_TINTED", "field_22840", "NOT_TINTED", "NOT_TINTED"), "Lno$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lno$e;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lno$e;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getCrossModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getCross", "method_25726", "getCrossModel", "m_125064_"), "()Lod;");
    }

    static jobject getCrossModel(const jobject& obj) {
                
       const auto methodID = methodID_getCrossModel();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFlowerPotCrossModel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getCrossPot", "method_25727", "getFlowerPotCrossModel", "m_125065_"), "()Lod;");
    }

    static jobject getFlowerPotCrossModel(const jobject& obj) {
                
       const auto methodID = methodID_getFlowerPotCrossModel();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_DATA_CLIENT_BLOCKSTATEMODELGENERATOR$TINTTYPE_HPP