// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_CLIENT_MODELS_HPP
#define NET_MINECRAFT_DATA_CLIENT_MODELS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.client.Models
 * Remapped: oe
 */
namespace Models {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("oe", "net/minecraft/data/models/model/ModelTemplates", "net/minecraft/class_4943", "net/minecraft/data/client/Models", "net/minecraft/src/C_4822_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE
    [[maybe_unused]] static jobject get_field_CUBE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CUBE", "field_22942", "CUBE", "f_125647_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE
    [[maybe_unused]] static void set_field_CUBE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CUBE", "field_22942", "CUBE", "f_125647_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_DIRECTIONAL
    [[maybe_unused]] static jobject get_field_CUBE_DIRECTIONAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CUBE_DIRECTIONAL", "field_23400", "CUBE_DIRECTIONAL", "f_125691_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_DIRECTIONAL
    [[maybe_unused]] static void set_field_CUBE_DIRECTIONAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CUBE_DIRECTIONAL", "field_23400", "CUBE_DIRECTIONAL", "f_125691_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_ALL
    [[maybe_unused]] static jobject get_field_CUBE_ALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CUBE_ALL", "field_22972", "CUBE_ALL", "f_125692_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_ALL
    [[maybe_unused]] static void set_field_CUBE_ALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CUBE_ALL", "field_22972", "CUBE_ALL", "f_125692_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_ALL_INNER_FACES
    [[maybe_unused]] static jobject get_field_CUBE_ALL_INNER_FACES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CUBE_ALL_INNER_FACES", "field_47500", "CUBE_ALL_INNER_FACES", "f_303032_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_ALL_INNER_FACES
    [[maybe_unused]] static void set_field_CUBE_ALL_INNER_FACES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CUBE_ALL_INNER_FACES", "field_47500", "CUBE_ALL_INNER_FACES", "f_303032_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_MIRRORED_ALL
    [[maybe_unused]] static jobject get_field_CUBE_MIRRORED_ALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CUBE_MIRRORED_ALL", "field_22973", "CUBE_MIRRORED_ALL", "f_125693_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_MIRRORED_ALL
    [[maybe_unused]] static void set_field_CUBE_MIRRORED_ALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CUBE_MIRRORED_ALL", "field_22973", "CUBE_MIRRORED_ALL", "f_125693_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_NORTH_WEST_MIRRORED_ALL
    [[maybe_unused]] static jobject get_field_CUBE_NORTH_WEST_MIRRORED_ALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CUBE_NORTH_WEST_MIRRORED_ALL", "field_38015", "CUBE_NORTH_WEST_MIRRORED_ALL", "f_236341_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_NORTH_WEST_MIRRORED_ALL
    [[maybe_unused]] static void set_field_CUBE_NORTH_WEST_MIRRORED_ALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CUBE_NORTH_WEST_MIRRORED_ALL", "field_38015", "CUBE_NORTH_WEST_MIRRORED_ALL", "f_236341_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_COLUMN_UV_LOCKED_X
    [[maybe_unused]] static jobject get_field_CUBE_COLUMN_UV_LOCKED_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CUBE_COLUMN_UV_LOCKED_X", "field_41276", "CUBE_COLUMN_UV_LOCKED_X", "f_256886_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_COLUMN_UV_LOCKED_X
    [[maybe_unused]] static void set_field_CUBE_COLUMN_UV_LOCKED_X(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CUBE_COLUMN_UV_LOCKED_X", "field_41276", "CUBE_COLUMN_UV_LOCKED_X", "f_256886_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_COLUMN_UV_LOCKED_Y
    [[maybe_unused]] static jobject get_field_CUBE_COLUMN_UV_LOCKED_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CUBE_COLUMN_UV_LOCKED_Y", "field_41277", "CUBE_COLUMN_UV_LOCKED_Y", "f_256809_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_COLUMN_UV_LOCKED_Y
    [[maybe_unused]] static void set_field_CUBE_COLUMN_UV_LOCKED_Y(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CUBE_COLUMN_UV_LOCKED_Y", "field_41277", "CUBE_COLUMN_UV_LOCKED_Y", "f_256809_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_COLUMN_UV_LOCKED_Z
    [[maybe_unused]] static jobject get_field_CUBE_COLUMN_UV_LOCKED_Z() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "CUBE_COLUMN_UV_LOCKED_Z", "field_41278", "CUBE_COLUMN_UV_LOCKED_Z", "f_256910_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_COLUMN_UV_LOCKED_Z
    [[maybe_unused]] static void set_field_CUBE_COLUMN_UV_LOCKED_Z(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "CUBE_COLUMN_UV_LOCKED_Z", "field_41278", "CUBE_COLUMN_UV_LOCKED_Z", "f_256910_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_COLUMN
    [[maybe_unused]] static jobject get_field_CUBE_COLUMN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "CUBE_COLUMN", "field_22974", "CUBE_COLUMN", "f_125694_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_COLUMN
    [[maybe_unused]] static void set_field_CUBE_COLUMN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "CUBE_COLUMN", "field_22974", "CUBE_COLUMN", "f_125694_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_COLUMN_HORIZONTAL
    [[maybe_unused]] static jobject get_field_CUBE_COLUMN_HORIZONTAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "CUBE_COLUMN_HORIZONTAL", "field_22975", "CUBE_COLUMN_HORIZONTAL", "f_125695_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_COLUMN_HORIZONTAL
    [[maybe_unused]] static void set_field_CUBE_COLUMN_HORIZONTAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "CUBE_COLUMN_HORIZONTAL", "field_22975", "CUBE_COLUMN_HORIZONTAL", "f_125695_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_COLUMN_MIRRORED
    [[maybe_unused]] static jobject get_field_CUBE_COLUMN_MIRRORED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "CUBE_COLUMN_MIRRORED", "field_29081", "CUBE_COLUMN_MIRRORED", "f_176473_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_COLUMN_MIRRORED
    [[maybe_unused]] static void set_field_CUBE_COLUMN_MIRRORED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "CUBE_COLUMN_MIRRORED", "field_29081", "CUBE_COLUMN_MIRRORED", "f_176473_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_TOP
    [[maybe_unused]] static jobject get_field_CUBE_TOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "CUBE_TOP", "field_22976", "CUBE_TOP", "f_125696_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_TOP
    [[maybe_unused]] static void set_field_CUBE_TOP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "CUBE_TOP", "field_22976", "CUBE_TOP", "f_125696_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_BOTTOM_TOP
    [[maybe_unused]] static jobject get_field_CUBE_BOTTOM_TOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "CUBE_BOTTOM_TOP", "field_22977", "CUBE_BOTTOM_TOP", "f_125697_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_BOTTOM_TOP
    [[maybe_unused]] static void set_field_CUBE_BOTTOM_TOP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "CUBE_BOTTOM_TOP", "field_22977", "CUBE_BOTTOM_TOP", "f_125697_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUBE_BOTTOM_TOP_INNER_FACES
    [[maybe_unused]] static jobject get_field_CUBE_BOTTOM_TOP_INNER_FACES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CUBE_BOTTOM_TOP_INNER_FACES", "field_47501", "CUBE_BOTTOM_TOP_INNER_FACES", "f_302568_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUBE_BOTTOM_TOP_INNER_FACES
    [[maybe_unused]] static void set_field_CUBE_BOTTOM_TOP_INNER_FACES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CUBE_BOTTOM_TOP_INNER_FACES", "field_47501", "CUBE_BOTTOM_TOP_INNER_FACES", "f_302568_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#ORIENTABLE
    [[maybe_unused]] static jobject get_field_ORIENTABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "CUBE_ORIENTABLE", "field_22978", "ORIENTABLE", "f_125698_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#ORIENTABLE
    [[maybe_unused]] static void set_field_ORIENTABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "CUBE_ORIENTABLE", "field_22978", "ORIENTABLE", "f_125698_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#ORIENTABLE_WITH_BOTTOM
    [[maybe_unused]] static jobject get_field_ORIENTABLE_WITH_BOTTOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "CUBE_ORIENTABLE_TOP_BOTTOM", "field_22979", "ORIENTABLE_WITH_BOTTOM", "f_125699_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#ORIENTABLE_WITH_BOTTOM
    [[maybe_unused]] static void set_field_ORIENTABLE_WITH_BOTTOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "CUBE_ORIENTABLE_TOP_BOTTOM", "field_22979", "ORIENTABLE_WITH_BOTTOM", "f_125699_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#ORIENTABLE_VERTICAL
    [[maybe_unused]] static jobject get_field_ORIENTABLE_VERTICAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "CUBE_ORIENTABLE_VERTICAL", "field_22980", "ORIENTABLE_VERTICAL", "f_125700_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#ORIENTABLE_VERTICAL
    [[maybe_unused]] static void set_field_ORIENTABLE_VERTICAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "CUBE_ORIENTABLE_VERTICAL", "field_22980", "ORIENTABLE_VERTICAL", "f_125700_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#BUTTON
    [[maybe_unused]] static jobject get_field_BUTTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BUTTON", "field_22981", "BUTTON", "f_125701_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#BUTTON
    [[maybe_unused]] static void set_field_BUTTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BUTTON", "field_22981", "BUTTON", "f_125701_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#BUTTON_PRESSED
    [[maybe_unused]] static jobject get_field_BUTTON_PRESSED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "BUTTON_PRESSED", "field_22982", "BUTTON_PRESSED", "f_125702_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#BUTTON_PRESSED
    [[maybe_unused]] static void set_field_BUTTON_PRESSED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "BUTTON_PRESSED", "field_22982", "BUTTON_PRESSED", "f_125702_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#BUTTON_INVENTORY
    [[maybe_unused]] static jobject get_field_BUTTON_INVENTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BUTTON_INVENTORY", "field_22983", "BUTTON_INVENTORY", "f_125703_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#BUTTON_INVENTORY
    [[maybe_unused]] static void set_field_BUTTON_INVENTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BUTTON_INVENTORY", "field_22983", "BUTTON_INVENTORY", "f_125703_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#DOOR_BOTTOM_LEFT
    [[maybe_unused]] static jobject get_field_DOOR_BOTTOM_LEFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "DOOR_BOTTOM_LEFT", "field_38016", "DOOR_BOTTOM_LEFT", "f_236342_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#DOOR_BOTTOM_LEFT
    [[maybe_unused]] static void set_field_DOOR_BOTTOM_LEFT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "DOOR_BOTTOM_LEFT", "field_38016", "DOOR_BOTTOM_LEFT", "f_236342_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#DOOR_BOTTOM_LEFT_OPEN
    [[maybe_unused]] static jobject get_field_DOOR_BOTTOM_LEFT_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "DOOR_BOTTOM_LEFT_OPEN", "field_38017", "DOOR_BOTTOM_LEFT_OPEN", "f_236343_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#DOOR_BOTTOM_LEFT_OPEN
    [[maybe_unused]] static void set_field_DOOR_BOTTOM_LEFT_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "DOOR_BOTTOM_LEFT_OPEN", "field_38017", "DOOR_BOTTOM_LEFT_OPEN", "f_236343_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#DOOR_BOTTOM_RIGHT
    [[maybe_unused]] static jobject get_field_DOOR_BOTTOM_RIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "DOOR_BOTTOM_RIGHT", "field_38018", "DOOR_BOTTOM_RIGHT", "f_236344_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#DOOR_BOTTOM_RIGHT
    [[maybe_unused]] static void set_field_DOOR_BOTTOM_RIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "DOOR_BOTTOM_RIGHT", "field_38018", "DOOR_BOTTOM_RIGHT", "f_236344_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#DOOR_BOTTOM_RIGHT_OPEN
    [[maybe_unused]] static jobject get_field_DOOR_BOTTOM_RIGHT_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "DOOR_BOTTOM_RIGHT_OPEN", "field_38019", "DOOR_BOTTOM_RIGHT_OPEN", "f_236345_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#DOOR_BOTTOM_RIGHT_OPEN
    [[maybe_unused]] static void set_field_DOOR_BOTTOM_RIGHT_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "DOOR_BOTTOM_RIGHT_OPEN", "field_38019", "DOOR_BOTTOM_RIGHT_OPEN", "f_236345_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#DOOR_TOP_LEFT
    [[maybe_unused]] static jobject get_field_DOOR_TOP_LEFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DOOR_TOP_LEFT", "field_38020", "DOOR_TOP_LEFT", "f_236346_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#DOOR_TOP_LEFT
    [[maybe_unused]] static void set_field_DOOR_TOP_LEFT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DOOR_TOP_LEFT", "field_38020", "DOOR_TOP_LEFT", "f_236346_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#DOOR_TOP_LEFT_OPEN
    [[maybe_unused]] static jobject get_field_DOOR_TOP_LEFT_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "DOOR_TOP_LEFT_OPEN", "field_38021", "DOOR_TOP_LEFT_OPEN", "f_236347_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#DOOR_TOP_LEFT_OPEN
    [[maybe_unused]] static void set_field_DOOR_TOP_LEFT_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "DOOR_TOP_LEFT_OPEN", "field_38021", "DOOR_TOP_LEFT_OPEN", "f_236347_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#DOOR_TOP_RIGHT
    [[maybe_unused]] static jobject get_field_DOOR_TOP_RIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DOOR_TOP_RIGHT", "field_38022", "DOOR_TOP_RIGHT", "f_236348_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#DOOR_TOP_RIGHT
    [[maybe_unused]] static void set_field_DOOR_TOP_RIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DOOR_TOP_RIGHT", "field_38022", "DOOR_TOP_RIGHT", "f_236348_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#DOOR_TOP_RIGHT_OPEN
    [[maybe_unused]] static jobject get_field_DOOR_TOP_RIGHT_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "DOOR_TOP_RIGHT_OPEN", "field_38023", "DOOR_TOP_RIGHT_OPEN", "f_236349_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#DOOR_TOP_RIGHT_OPEN
    [[maybe_unused]] static void set_field_DOOR_TOP_RIGHT_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "DOOR_TOP_RIGHT_OPEN", "field_38023", "DOOR_TOP_RIGHT_OPEN", "f_236349_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUSTOM_FENCE_POST
    [[maybe_unused]] static jobject get_field_CUSTOM_FENCE_POST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "CUSTOM_FENCE_POST", "field_40630", "CUSTOM_FENCE_POST", "f_243784_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUSTOM_FENCE_POST
    [[maybe_unused]] static void set_field_CUSTOM_FENCE_POST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "CUSTOM_FENCE_POST", "field_40630", "CUSTOM_FENCE_POST", "f_243784_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUSTOM_FENCE_SIDE_NORTH
    [[maybe_unused]] static jobject get_field_CUSTOM_FENCE_SIDE_NORTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "CUSTOM_FENCE_SIDE_NORTH", "field_40631", "CUSTOM_FENCE_SIDE_NORTH", "f_244191_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUSTOM_FENCE_SIDE_NORTH
    [[maybe_unused]] static void set_field_CUSTOM_FENCE_SIDE_NORTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "CUSTOM_FENCE_SIDE_NORTH", "field_40631", "CUSTOM_FENCE_SIDE_NORTH", "f_244191_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUSTOM_FENCE_SIDE_EAST
    [[maybe_unused]] static jobject get_field_CUSTOM_FENCE_SIDE_EAST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "CUSTOM_FENCE_SIDE_EAST", "field_40621", "CUSTOM_FENCE_SIDE_EAST", "f_244408_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUSTOM_FENCE_SIDE_EAST
    [[maybe_unused]] static void set_field_CUSTOM_FENCE_SIDE_EAST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "CUSTOM_FENCE_SIDE_EAST", "field_40621", "CUSTOM_FENCE_SIDE_EAST", "f_244408_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUSTOM_FENCE_SIDE_SOUTH
    [[maybe_unused]] static jobject get_field_CUSTOM_FENCE_SIDE_SOUTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "CUSTOM_FENCE_SIDE_SOUTH", "field_40622", "CUSTOM_FENCE_SIDE_SOUTH", "f_244216_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUSTOM_FENCE_SIDE_SOUTH
    [[maybe_unused]] static void set_field_CUSTOM_FENCE_SIDE_SOUTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "CUSTOM_FENCE_SIDE_SOUTH", "field_40622", "CUSTOM_FENCE_SIDE_SOUTH", "f_244216_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUSTOM_FENCE_SIDE_WEST
    [[maybe_unused]] static jobject get_field_CUSTOM_FENCE_SIDE_WEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "CUSTOM_FENCE_SIDE_WEST", "field_40623", "CUSTOM_FENCE_SIDE_WEST", "f_243943_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUSTOM_FENCE_SIDE_WEST
    [[maybe_unused]] static void set_field_CUSTOM_FENCE_SIDE_WEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "CUSTOM_FENCE_SIDE_WEST", "field_40623", "CUSTOM_FENCE_SIDE_WEST", "f_243943_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CUSTOM_FENCE_INVENTORY
    [[maybe_unused]] static jobject get_field_CUSTOM_FENCE_INVENTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "CUSTOM_FENCE_INVENTORY", "field_40624", "CUSTOM_FENCE_INVENTORY", "f_243867_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CUSTOM_FENCE_INVENTORY
    [[maybe_unused]] static void set_field_CUSTOM_FENCE_INVENTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "CUSTOM_FENCE_INVENTORY", "field_40624", "CUSTOM_FENCE_INVENTORY", "f_243867_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#FENCE_POST
    [[maybe_unused]] static jobject get_field_FENCE_POST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "FENCE_POST", "field_22988", "FENCE_POST", "f_125708_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#FENCE_POST
    [[maybe_unused]] static void set_field_FENCE_POST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "FENCE_POST", "field_22988", "FENCE_POST", "f_125708_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#FENCE_SIDE
    [[maybe_unused]] static jobject get_field_FENCE_SIDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "FENCE_SIDE", "field_22989", "FENCE_SIDE", "f_125709_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#FENCE_SIDE
    [[maybe_unused]] static void set_field_FENCE_SIDE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "FENCE_SIDE", "field_22989", "FENCE_SIDE", "f_125709_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#FENCE_INVENTORY
    [[maybe_unused]] static jobject get_field_FENCE_INVENTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "FENCE_INVENTORY", "field_22990", "FENCE_INVENTORY", "f_125710_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#FENCE_INVENTORY
    [[maybe_unused]] static void set_field_FENCE_INVENTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "FENCE_INVENTORY", "field_22990", "FENCE_INVENTORY", "f_125710_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_WALL_POST
    [[maybe_unused]] static jobject get_field_TEMPLATE_WALL_POST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "WALL_POST", "field_22991", "TEMPLATE_WALL_POST", "f_125711_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_WALL_POST
    [[maybe_unused]] static void set_field_TEMPLATE_WALL_POST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "WALL_POST", "field_22991", "TEMPLATE_WALL_POST", "f_125711_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_WALL_SIDE
    [[maybe_unused]] static jobject get_field_TEMPLATE_WALL_SIDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "WALL_LOW_SIDE", "field_22992", "TEMPLATE_WALL_SIDE", "f_125712_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_WALL_SIDE
    [[maybe_unused]] static void set_field_TEMPLATE_WALL_SIDE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "WALL_LOW_SIDE", "field_22992", "TEMPLATE_WALL_SIDE", "f_125712_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_WALL_SIDE_TALL
    [[maybe_unused]] static jobject get_field_TEMPLATE_WALL_SIDE_TALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "WALL_TALL_SIDE", "field_22993", "TEMPLATE_WALL_SIDE_TALL", "f_125713_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_WALL_SIDE_TALL
    [[maybe_unused]] static void set_field_TEMPLATE_WALL_SIDE_TALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "WALL_TALL_SIDE", "field_22993", "TEMPLATE_WALL_SIDE_TALL", "f_125713_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#WALL_INVENTORY
    [[maybe_unused]] static jobject get_field_WALL_INVENTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "WALL_INVENTORY", "field_22994", "WALL_INVENTORY", "f_125714_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#WALL_INVENTORY
    [[maybe_unused]] static void set_field_WALL_INVENTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "WALL_INVENTORY", "field_22994", "WALL_INVENTORY", "f_125714_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CUSTOM_FENCE_GATE
    [[maybe_unused]] static jobject get_field_TEMPLATE_CUSTOM_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "CUSTOM_FENCE_GATE_CLOSED", "field_40625", "TEMPLATE_CUSTOM_FENCE_GATE", "f_243715_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CUSTOM_FENCE_GATE
    [[maybe_unused]] static void set_field_TEMPLATE_CUSTOM_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "CUSTOM_FENCE_GATE_CLOSED", "field_40625", "TEMPLATE_CUSTOM_FENCE_GATE", "f_243715_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CUSTOM_FENCE_GATE_OPEN
    [[maybe_unused]] static jobject get_field_TEMPLATE_CUSTOM_FENCE_GATE_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "CUSTOM_FENCE_GATE_OPEN", "field_40626", "TEMPLATE_CUSTOM_FENCE_GATE_OPEN", "f_243831_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CUSTOM_FENCE_GATE_OPEN
    [[maybe_unused]] static void set_field_TEMPLATE_CUSTOM_FENCE_GATE_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "CUSTOM_FENCE_GATE_OPEN", "field_40626", "TEMPLATE_CUSTOM_FENCE_GATE_OPEN", "f_243831_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CUSTOM_FENCE_GATE_WALL
    [[maybe_unused]] static jobject get_field_TEMPLATE_CUSTOM_FENCE_GATE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "CUSTOM_FENCE_GATE_WALL_CLOSED", "field_40627", "TEMPLATE_CUSTOM_FENCE_GATE_WALL", "f_244273_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CUSTOM_FENCE_GATE_WALL
    [[maybe_unused]] static void set_field_TEMPLATE_CUSTOM_FENCE_GATE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "CUSTOM_FENCE_GATE_WALL_CLOSED", "field_40627", "TEMPLATE_CUSTOM_FENCE_GATE_WALL", "f_244273_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CUSTOM_FENCE_GATE_WALL_OPEN
    [[maybe_unused]] static jobject get_field_TEMPLATE_CUSTOM_FENCE_GATE_WALL_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "CUSTOM_FENCE_GATE_WALL_OPEN", "field_40628", "TEMPLATE_CUSTOM_FENCE_GATE_WALL_OPEN", "f_243925_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CUSTOM_FENCE_GATE_WALL_OPEN
    [[maybe_unused]] static void set_field_TEMPLATE_CUSTOM_FENCE_GATE_WALL_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "CUSTOM_FENCE_GATE_WALL_OPEN", "field_40628", "TEMPLATE_CUSTOM_FENCE_GATE_WALL_OPEN", "f_243925_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_FENCE_GATE
    [[maybe_unused]] static jobject get_field_TEMPLATE_FENCE_GATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "FENCE_GATE_CLOSED", "field_22995", "TEMPLATE_FENCE_GATE", "f_125715_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_FENCE_GATE
    [[maybe_unused]] static void set_field_TEMPLATE_FENCE_GATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "FENCE_GATE_CLOSED", "field_22995", "TEMPLATE_FENCE_GATE", "f_125715_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_FENCE_GATE_OPEN
    [[maybe_unused]] static jobject get_field_TEMPLATE_FENCE_GATE_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "FENCE_GATE_OPEN", "field_22996", "TEMPLATE_FENCE_GATE_OPEN", "f_125621_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_FENCE_GATE_OPEN
    [[maybe_unused]] static void set_field_TEMPLATE_FENCE_GATE_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "FENCE_GATE_OPEN", "field_22996", "TEMPLATE_FENCE_GATE_OPEN", "f_125621_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_FENCE_GATE_WALL
    [[maybe_unused]] static jobject get_field_TEMPLATE_FENCE_GATE_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "FENCE_GATE_WALL_CLOSED", "field_22904", "TEMPLATE_FENCE_GATE_WALL", "f_125622_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_FENCE_GATE_WALL
    [[maybe_unused]] static void set_field_TEMPLATE_FENCE_GATE_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "FENCE_GATE_WALL_CLOSED", "field_22904", "TEMPLATE_FENCE_GATE_WALL", "f_125622_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_FENCE_GATE_WALL_OPEN
    [[maybe_unused]] static jobject get_field_TEMPLATE_FENCE_GATE_WALL_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "FENCE_GATE_WALL_OPEN", "field_22905", "TEMPLATE_FENCE_GATE_WALL_OPEN", "f_125623_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_FENCE_GATE_WALL_OPEN
    [[maybe_unused]] static void set_field_TEMPLATE_FENCE_GATE_WALL_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "FENCE_GATE_WALL_OPEN", "field_22905", "TEMPLATE_FENCE_GATE_WALL_OPEN", "f_125623_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#PRESSURE_PLATE_UP
    [[maybe_unused]] static jobject get_field_PRESSURE_PLATE_UP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "PRESSURE_PLATE_UP", "field_22906", "PRESSURE_PLATE_UP", "f_125624_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#PRESSURE_PLATE_UP
    [[maybe_unused]] static void set_field_PRESSURE_PLATE_UP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "PRESSURE_PLATE_UP", "field_22906", "PRESSURE_PLATE_UP", "f_125624_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#PRESSURE_PLATE_DOWN
    [[maybe_unused]] static jobject get_field_PRESSURE_PLATE_DOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "PRESSURE_PLATE_DOWN", "field_22907", "PRESSURE_PLATE_DOWN", "f_125625_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#PRESSURE_PLATE_DOWN
    [[maybe_unused]] static void set_field_PRESSURE_PLATE_DOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "PRESSURE_PLATE_DOWN", "field_22907", "PRESSURE_PLATE_DOWN", "f_125625_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#PARTICLE
    [[maybe_unused]] static jobject get_field_PARTICLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "PARTICLE_ONLY", "field_22908", "PARTICLE", "f_125626_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#PARTICLE
    [[maybe_unused]] static void set_field_PARTICLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "PARTICLE_ONLY", "field_22908", "PARTICLE", "f_125626_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#SLAB
    [[maybe_unused]] static jobject get_field_SLAB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "SLAB_BOTTOM", "field_22909", "SLAB", "f_125627_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#SLAB
    [[maybe_unused]] static void set_field_SLAB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "SLAB_BOTTOM", "field_22909", "SLAB", "f_125627_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#SLAB_TOP
    [[maybe_unused]] static jobject get_field_SLAB_TOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "SLAB_TOP", "field_22910", "SLAB_TOP", "f_125628_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#SLAB_TOP
    [[maybe_unused]] static void set_field_SLAB_TOP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "SLAB_TOP", "field_22910", "SLAB_TOP", "f_125628_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#LEAVES
    [[maybe_unused]] static jobject get_field_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "LEAVES", "field_22911", "LEAVES", "f_125629_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#LEAVES
    [[maybe_unused]] static void set_field_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "LEAVES", "field_22911", "LEAVES", "f_125629_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#STAIRS
    [[maybe_unused]] static jobject get_field_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "STAIRS_STRAIGHT", "field_22912", "STAIRS", "f_125630_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#STAIRS
    [[maybe_unused]] static void set_field_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "STAIRS_STRAIGHT", "field_22912", "STAIRS", "f_125630_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#INNER_STAIRS
    [[maybe_unused]] static jobject get_field_INNER_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "STAIRS_INNER", "field_22913", "INNER_STAIRS", "f_125631_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#INNER_STAIRS
    [[maybe_unused]] static void set_field_INNER_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "STAIRS_INNER", "field_22913", "INNER_STAIRS", "f_125631_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#OUTER_STAIRS
    [[maybe_unused]] static jobject get_field_OUTER_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "STAIRS_OUTER", "field_22914", "OUTER_STAIRS", "f_125632_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#OUTER_STAIRS
    [[maybe_unused]] static void set_field_OUTER_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "STAIRS_OUTER", "field_22914", "OUTER_STAIRS", "f_125632_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_TRAPDOOR_TOP
    [[maybe_unused]] static jobject get_field_TEMPLATE_TRAPDOOR_TOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "TRAPDOOR_TOP", "field_22915", "TEMPLATE_TRAPDOOR_TOP", "f_125633_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_TRAPDOOR_TOP
    [[maybe_unused]] static void set_field_TEMPLATE_TRAPDOOR_TOP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "TRAPDOOR_TOP", "field_22915", "TEMPLATE_TRAPDOOR_TOP", "f_125633_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_TRAPDOOR_BOTTOM
    [[maybe_unused]] static jobject get_field_TEMPLATE_TRAPDOOR_BOTTOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "TRAPDOOR_BOTTOM", "field_22916", "TEMPLATE_TRAPDOOR_BOTTOM", "f_125634_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_TRAPDOOR_BOTTOM
    [[maybe_unused]] static void set_field_TEMPLATE_TRAPDOOR_BOTTOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "TRAPDOOR_BOTTOM", "field_22916", "TEMPLATE_TRAPDOOR_BOTTOM", "f_125634_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_TRAPDOOR_OPEN
    [[maybe_unused]] static jobject get_field_TEMPLATE_TRAPDOOR_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "TRAPDOOR_OPEN", "field_22917", "TEMPLATE_TRAPDOOR_OPEN", "f_125635_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_TRAPDOOR_OPEN
    [[maybe_unused]] static void set_field_TEMPLATE_TRAPDOOR_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "TRAPDOOR_OPEN", "field_22917", "TEMPLATE_TRAPDOOR_OPEN", "f_125635_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_ORIENTABLE_TRAPDOOR_TOP
    [[maybe_unused]] static jobject get_field_TEMPLATE_ORIENTABLE_TRAPDOOR_TOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "ORIENTABLE_TRAPDOOR_TOP", "field_22918", "TEMPLATE_ORIENTABLE_TRAPDOOR_TOP", "f_125636_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_ORIENTABLE_TRAPDOOR_TOP
    [[maybe_unused]] static void set_field_TEMPLATE_ORIENTABLE_TRAPDOOR_TOP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "ORIENTABLE_TRAPDOOR_TOP", "field_22918", "TEMPLATE_ORIENTABLE_TRAPDOOR_TOP", "f_125636_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_ORIENTABLE_TRAPDOOR_BOTTOM
    [[maybe_unused]] static jobject get_field_TEMPLATE_ORIENTABLE_TRAPDOOR_BOTTOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "ORIENTABLE_TRAPDOOR_BOTTOM", "field_22919", "TEMPLATE_ORIENTABLE_TRAPDOOR_BOTTOM", "f_125637_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_ORIENTABLE_TRAPDOOR_BOTTOM
    [[maybe_unused]] static void set_field_TEMPLATE_ORIENTABLE_TRAPDOOR_BOTTOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "ORIENTABLE_TRAPDOOR_BOTTOM", "field_22919", "TEMPLATE_ORIENTABLE_TRAPDOOR_BOTTOM", "f_125637_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_ORIENTABLE_TRAPDOOR_OPEN
    [[maybe_unused]] static jobject get_field_TEMPLATE_ORIENTABLE_TRAPDOOR_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "ORIENTABLE_TRAPDOOR_OPEN", "field_22920", "TEMPLATE_ORIENTABLE_TRAPDOOR_OPEN", "f_125638_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_ORIENTABLE_TRAPDOOR_OPEN
    [[maybe_unused]] static void set_field_TEMPLATE_ORIENTABLE_TRAPDOOR_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "ORIENTABLE_TRAPDOOR_OPEN", "field_22920", "TEMPLATE_ORIENTABLE_TRAPDOOR_OPEN", "f_125638_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#POINTED_DRIPSTONE
    [[maybe_unused]] static jobject get_field_POINTED_DRIPSTONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "POINTED_DRIPSTONE", "field_28080", "POINTED_DRIPSTONE", "f_176462_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#POINTED_DRIPSTONE
    [[maybe_unused]] static void set_field_POINTED_DRIPSTONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "POINTED_DRIPSTONE", "field_28080", "POINTED_DRIPSTONE", "f_176462_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CROSS
    [[maybe_unused]] static jobject get_field_CROSS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "CROSS", "field_22921", "CROSS", "f_125639_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CROSS
    [[maybe_unused]] static void set_field_CROSS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "CROSS", "field_22921", "CROSS", "f_125639_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TINTED_CROSS
    [[maybe_unused]] static jobject get_field_TINTED_CROSS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "TINTED_CROSS", "field_22922", "TINTED_CROSS", "f_125640_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TINTED_CROSS
    [[maybe_unused]] static void set_field_TINTED_CROSS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "TINTED_CROSS", "field_22922", "TINTED_CROSS", "f_125640_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#FLOWER_POT_CROSS
    [[maybe_unused]] static jobject get_field_FLOWER_POT_CROSS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "FLOWER_POT_CROSS", "field_22923", "FLOWER_POT_CROSS", "f_125641_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#FLOWER_POT_CROSS
    [[maybe_unused]] static void set_field_FLOWER_POT_CROSS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "FLOWER_POT_CROSS", "field_22923", "FLOWER_POT_CROSS", "f_125641_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TINTED_FLOWER_POT_CROSS
    [[maybe_unused]] static jobject get_field_TINTED_FLOWER_POT_CROSS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "TINTED_FLOWER_POT_CROSS", "field_22924", "TINTED_FLOWER_POT_CROSS", "f_125642_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TINTED_FLOWER_POT_CROSS
    [[maybe_unused]] static void set_field_TINTED_FLOWER_POT_CROSS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "TINTED_FLOWER_POT_CROSS", "field_22924", "TINTED_FLOWER_POT_CROSS", "f_125642_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#RAIL_FLAT
    [[maybe_unused]] static jobject get_field_RAIL_FLAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "RAIL_FLAT", "field_22925", "RAIL_FLAT", "f_125643_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#RAIL_FLAT
    [[maybe_unused]] static void set_field_RAIL_FLAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "RAIL_FLAT", "field_22925", "RAIL_FLAT", "f_125643_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#RAIL_CURVED
    [[maybe_unused]] static jobject get_field_RAIL_CURVED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "RAIL_CURVED", "field_22926", "RAIL_CURVED", "f_125644_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#RAIL_CURVED
    [[maybe_unused]] static void set_field_RAIL_CURVED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "RAIL_CURVED", "field_22926", "RAIL_CURVED", "f_125644_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_RAIL_RAISED_NE
    [[maybe_unused]] static jobject get_field_TEMPLATE_RAIL_RAISED_NE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "RAIL_RAISED_NE", "field_22927", "TEMPLATE_RAIL_RAISED_NE", "f_125645_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_RAIL_RAISED_NE
    [[maybe_unused]] static void set_field_TEMPLATE_RAIL_RAISED_NE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "RAIL_RAISED_NE", "field_22927", "TEMPLATE_RAIL_RAISED_NE", "f_125645_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_RAIL_RAISED_SW
    [[maybe_unused]] static jobject get_field_TEMPLATE_RAIL_RAISED_SW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "RAIL_RAISED_SW", "field_22928", "TEMPLATE_RAIL_RAISED_SW", "f_125646_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_RAIL_RAISED_SW
    [[maybe_unused]] static void set_field_TEMPLATE_RAIL_RAISED_SW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "RAIL_RAISED_SW", "field_22928", "TEMPLATE_RAIL_RAISED_SW", "f_125646_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CARPET
    [[maybe_unused]] static jobject get_field_CARPET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "CARPET", "field_22929", "CARPET", "f_125665_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CARPET
    [[maybe_unused]] static void set_field_CARPET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "CARPET", "field_22929", "CARPET", "f_125665_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#FLOWERBED_1
    [[maybe_unused]] static jobject get_field_FLOWERBED_1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "FLOWERBED_1", "field_42947", "FLOWERBED_1", "f_271241_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#FLOWERBED_1
    [[maybe_unused]] static void set_field_FLOWERBED_1(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "FLOWERBED_1", "field_42947", "FLOWERBED_1", "f_271241_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#FLOWERBED_2
    [[maybe_unused]] static jobject get_field_FLOWERBED_2() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "FLOWERBED_2", "field_42948", "FLOWERBED_2", "f_271417_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#FLOWERBED_2
    [[maybe_unused]] static void set_field_FLOWERBED_2(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "FLOWERBED_2", "field_42948", "FLOWERBED_2", "f_271417_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#FLOWERBED_3
    [[maybe_unused]] static jobject get_field_FLOWERBED_3() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "FLOWERBED_3", "field_42949", "FLOWERBED_3", "f_271276_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#FLOWERBED_3
    [[maybe_unused]] static void set_field_FLOWERBED_3(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "FLOWERBED_3", "field_42949", "FLOWERBED_3", "f_271276_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#FLOWERBED_4
    [[maybe_unused]] static jobject get_field_FLOWERBED_4() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "FLOWERBED_4", "field_42950", "FLOWERBED_4", "f_271172_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#FLOWERBED_4
    [[maybe_unused]] static void set_field_FLOWERBED_4(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "FLOWERBED_4", "field_42950", "FLOWERBED_4", "f_271172_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CORAL_FAN
    [[maybe_unused]] static jobject get_field_CORAL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "CORAL_FAN", "field_22946", "CORAL_FAN", "f_125666_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CORAL_FAN
    [[maybe_unused]] static void set_field_CORAL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "CORAL_FAN", "field_22946", "CORAL_FAN", "f_125666_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CORAL_WALL_FAN
    [[maybe_unused]] static jobject get_field_CORAL_WALL_FAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "CORAL_WALL_FAN", "field_22947", "CORAL_WALL_FAN", "f_125667_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CORAL_WALL_FAN
    [[maybe_unused]] static void set_field_CORAL_WALL_FAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "CORAL_WALL_FAN", "field_22947", "CORAL_WALL_FAN", "f_125667_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_GLAZED_TERRACOTTA
    [[maybe_unused]] static jobject get_field_TEMPLATE_GLAZED_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "GLAZED_TERRACOTTA", "field_22948", "TEMPLATE_GLAZED_TERRACOTTA", "f_125668_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_GLAZED_TERRACOTTA
    [[maybe_unused]] static void set_field_TEMPLATE_GLAZED_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "GLAZED_TERRACOTTA", "field_22948", "TEMPLATE_GLAZED_TERRACOTTA", "f_125668_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CHORUS_FLOWER
    [[maybe_unused]] static jobject get_field_TEMPLATE_CHORUS_FLOWER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "CHORUS_FLOWER", "field_22949", "TEMPLATE_CHORUS_FLOWER", "f_125669_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CHORUS_FLOWER
    [[maybe_unused]] static void set_field_TEMPLATE_CHORUS_FLOWER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "CHORUS_FLOWER", "field_22949", "TEMPLATE_CHORUS_FLOWER", "f_125669_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_DAYLIGHT_DETECTOR
    [[maybe_unused]] static jobject get_field_TEMPLATE_DAYLIGHT_DETECTOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "DAYLIGHT_DETECTOR", "field_22950", "TEMPLATE_DAYLIGHT_DETECTOR", "f_125670_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_DAYLIGHT_DETECTOR
    [[maybe_unused]] static void set_field_TEMPLATE_DAYLIGHT_DETECTOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "DAYLIGHT_DETECTOR", "field_22950", "TEMPLATE_DAYLIGHT_DETECTOR", "f_125670_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_GLASS_PANE_NOSIDE
    [[maybe_unused]] static jobject get_field_TEMPLATE_GLASS_PANE_NOSIDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "STAINED_GLASS_PANE_NOSIDE", "field_22951", "TEMPLATE_GLASS_PANE_NOSIDE", "f_125671_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_GLASS_PANE_NOSIDE
    [[maybe_unused]] static void set_field_TEMPLATE_GLASS_PANE_NOSIDE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "STAINED_GLASS_PANE_NOSIDE", "field_22951", "TEMPLATE_GLASS_PANE_NOSIDE", "f_125671_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_GLASS_PANE_NOSIDE_ALT
    [[maybe_unused]] static jobject get_field_TEMPLATE_GLASS_PANE_NOSIDE_ALT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "STAINED_GLASS_PANE_NOSIDE_ALT", "field_22952", "TEMPLATE_GLASS_PANE_NOSIDE_ALT", "f_125672_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_GLASS_PANE_NOSIDE_ALT
    [[maybe_unused]] static void set_field_TEMPLATE_GLASS_PANE_NOSIDE_ALT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "STAINED_GLASS_PANE_NOSIDE_ALT", "field_22952", "TEMPLATE_GLASS_PANE_NOSIDE_ALT", "f_125672_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_GLASS_PANE_POST
    [[maybe_unused]] static jobject get_field_TEMPLATE_GLASS_PANE_POST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "STAINED_GLASS_PANE_POST", "field_22953", "TEMPLATE_GLASS_PANE_POST", "f_125673_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_GLASS_PANE_POST
    [[maybe_unused]] static void set_field_TEMPLATE_GLASS_PANE_POST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "STAINED_GLASS_PANE_POST", "field_22953", "TEMPLATE_GLASS_PANE_POST", "f_125673_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_GLASS_PANE_SIDE
    [[maybe_unused]] static jobject get_field_TEMPLATE_GLASS_PANE_SIDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "STAINED_GLASS_PANE_SIDE", "field_22954", "TEMPLATE_GLASS_PANE_SIDE", "f_125674_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_GLASS_PANE_SIDE
    [[maybe_unused]] static void set_field_TEMPLATE_GLASS_PANE_SIDE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "STAINED_GLASS_PANE_SIDE", "field_22954", "TEMPLATE_GLASS_PANE_SIDE", "f_125674_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_GLASS_PANE_SIDE_ALT
    [[maybe_unused]] static jobject get_field_TEMPLATE_GLASS_PANE_SIDE_ALT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "STAINED_GLASS_PANE_SIDE_ALT", "field_22955", "TEMPLATE_GLASS_PANE_SIDE_ALT", "f_125675_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_GLASS_PANE_SIDE_ALT
    [[maybe_unused]] static void set_field_TEMPLATE_GLASS_PANE_SIDE_ALT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "STAINED_GLASS_PANE_SIDE_ALT", "field_22955", "TEMPLATE_GLASS_PANE_SIDE_ALT", "f_125675_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_COMMAND_BLOCK
    [[maybe_unused]] static jobject get_field_TEMPLATE_COMMAND_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "COMMAND_BLOCK", "field_22956", "TEMPLATE_COMMAND_BLOCK", "f_125676_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_COMMAND_BLOCK
    [[maybe_unused]] static void set_field_TEMPLATE_COMMAND_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "COMMAND_BLOCK", "field_22956", "TEMPLATE_COMMAND_BLOCK", "f_125676_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_LEFT
    [[maybe_unused]] static jobject get_field_TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_LEFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "CHISELED_BOOKSHELF_SLOT_TOP_LEFT", "field_41527", "TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_LEFT", "f_260688_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_LEFT
    [[maybe_unused]] static void set_field_TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_LEFT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "CHISELED_BOOKSHELF_SLOT_TOP_LEFT", "field_41527", "TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_LEFT", "f_260688_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_MID
    [[maybe_unused]] static jobject get_field_TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_MID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "CHISELED_BOOKSHELF_SLOT_TOP_MID", "field_41528", "TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_MID", "f_260577_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_MID
    [[maybe_unused]] static void set_field_TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_MID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "CHISELED_BOOKSHELF_SLOT_TOP_MID", "field_41528", "TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_MID", "f_260577_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_RIGHT
    [[maybe_unused]] static jobject get_field_TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_RIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "CHISELED_BOOKSHELF_SLOT_TOP_RIGHT", "field_41529", "TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_RIGHT", "f_260631_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_RIGHT
    [[maybe_unused]] static void set_field_TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_RIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "CHISELED_BOOKSHELF_SLOT_TOP_RIGHT", "field_41529", "TEMPLATE_CHISELED_BOOKSHELF_SLOT_TOP_RIGHT", "f_260631_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT
    [[maybe_unused]] static jobject get_field_TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT", "field_41530", "TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT", "f_260440_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT
    [[maybe_unused]] static void set_field_TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT", "field_41530", "TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT", "f_260440_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_MID
    [[maybe_unused]] static jobject get_field_TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_MID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "CHISELED_BOOKSHELF_SLOT_BOTTOM_MID", "field_41531", "TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_MID", "f_260622_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_MID
    [[maybe_unused]] static void set_field_TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_MID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "CHISELED_BOOKSHELF_SLOT_BOTTOM_MID", "field_41531", "TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_MID", "f_260622_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT
    [[maybe_unused]] static jobject get_field_TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT", "field_41532", "TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT", "f_260613_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT
    [[maybe_unused]] static void set_field_TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT", "field_41532", "TEMPLATE_CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT", "f_260613_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_ANVIL
    [[maybe_unused]] static jobject get_field_TEMPLATE_ANVIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "ANVIL", "field_22957", "TEMPLATE_ANVIL", "f_125677_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_ANVIL
    [[maybe_unused]] static void set_field_TEMPLATE_ANVIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "ANVIL", "field_22957", "TEMPLATE_ANVIL", "f_125677_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#STEM_GROWTH_STAGES
    [[maybe_unused]] static jobject get_field_STEM_GROWTH_STAGES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "STEMS", "field_22958", "STEM_GROWTH_STAGES", "f_125678_"), "[Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#STEM_GROWTH_STAGES
    [[maybe_unused]] static void set_field_STEM_GROWTH_STAGES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "STEMS", "field_22958", "STEM_GROWTH_STAGES", "f_125678_"), "[Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#STEM_FRUIT
    [[maybe_unused]] static jobject get_field_STEM_FRUIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "ATTACHED_STEM", "field_22959", "STEM_FRUIT", "f_125679_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#STEM_FRUIT
    [[maybe_unused]] static void set_field_STEM_FRUIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "ATTACHED_STEM", "field_22959", "STEM_FRUIT", "f_125679_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#CROP
    [[maybe_unused]] static jobject get_field_CROP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "CROP", "field_22960", "CROP", "f_125680_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#CROP
    [[maybe_unused]] static void set_field_CROP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "CROP", "field_22960", "CROP", "f_125680_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_FARMLAND
    [[maybe_unused]] static jobject get_field_TEMPLATE_FARMLAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "FARMLAND", "field_22961", "TEMPLATE_FARMLAND", "f_125681_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_FARMLAND
    [[maybe_unused]] static void set_field_TEMPLATE_FARMLAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "FARMLAND", "field_22961", "TEMPLATE_FARMLAND", "f_125681_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_FIRE_FLOOR
    [[maybe_unused]] static jobject get_field_TEMPLATE_FIRE_FLOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "FIRE_FLOOR", "field_22962", "TEMPLATE_FIRE_FLOOR", "f_125682_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_FIRE_FLOOR
    [[maybe_unused]] static void set_field_TEMPLATE_FIRE_FLOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "FIRE_FLOOR", "field_22962", "TEMPLATE_FIRE_FLOOR", "f_125682_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_FIRE_SIDE
    [[maybe_unused]] static jobject get_field_TEMPLATE_FIRE_SIDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "FIRE_SIDE", "field_22963", "TEMPLATE_FIRE_SIDE", "f_125683_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_FIRE_SIDE
    [[maybe_unused]] static void set_field_TEMPLATE_FIRE_SIDE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "FIRE_SIDE", "field_22963", "TEMPLATE_FIRE_SIDE", "f_125683_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_FIRE_SIDE_ALT
    [[maybe_unused]] static jobject get_field_TEMPLATE_FIRE_SIDE_ALT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "FIRE_SIDE_ALT", "field_22964", "TEMPLATE_FIRE_SIDE_ALT", "f_125684_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_FIRE_SIDE_ALT
    [[maybe_unused]] static void set_field_TEMPLATE_FIRE_SIDE_ALT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "FIRE_SIDE_ALT", "field_22964", "TEMPLATE_FIRE_SIDE_ALT", "f_125684_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_FIRE_UP
    [[maybe_unused]] static jobject get_field_TEMPLATE_FIRE_UP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "FIRE_UP", "field_22965", "TEMPLATE_FIRE_UP", "f_125685_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_FIRE_UP
    [[maybe_unused]] static void set_field_TEMPLATE_FIRE_UP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "FIRE_UP", "field_22965", "TEMPLATE_FIRE_UP", "f_125685_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_FIRE_UP_ALT
    [[maybe_unused]] static jobject get_field_TEMPLATE_FIRE_UP_ALT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "FIRE_UP_ALT", "field_22966", "TEMPLATE_FIRE_UP_ALT", "f_125686_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_FIRE_UP_ALT
    [[maybe_unused]] static void set_field_TEMPLATE_FIRE_UP_ALT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "FIRE_UP_ALT", "field_22966", "TEMPLATE_FIRE_UP_ALT", "f_125686_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CAMPFIRE
    [[maybe_unused]] static jobject get_field_TEMPLATE_CAMPFIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "CAMPFIRE", "field_23957", "TEMPLATE_CAMPFIRE", "f_125687_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CAMPFIRE
    [[maybe_unused]] static void set_field_TEMPLATE_CAMPFIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "CAMPFIRE", "field_23957", "TEMPLATE_CAMPFIRE", "f_125687_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_LANTERN
    [[maybe_unused]] static jobject get_field_TEMPLATE_LANTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "LANTERN", "field_22967", "TEMPLATE_LANTERN", "f_125688_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_LANTERN
    [[maybe_unused]] static void set_field_TEMPLATE_LANTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "LANTERN", "field_22967", "TEMPLATE_LANTERN", "f_125688_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_HANGING_LANTERN
    [[maybe_unused]] static jobject get_field_TEMPLATE_HANGING_LANTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "HANGING_LANTERN", "field_22968", "TEMPLATE_HANGING_LANTERN", "f_125689_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_HANGING_LANTERN
    [[maybe_unused]] static void set_field_TEMPLATE_HANGING_LANTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "HANGING_LANTERN", "field_22968", "TEMPLATE_HANGING_LANTERN", "f_125689_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_TORCH
    [[maybe_unused]] static jobject get_field_TEMPLATE_TORCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "TORCH", "field_22969", "TEMPLATE_TORCH", "f_125690_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_TORCH
    [[maybe_unused]] static void set_field_TEMPLATE_TORCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "TORCH", "field_22969", "TEMPLATE_TORCH", "f_125690_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_TORCH_WALL
    [[maybe_unused]] static jobject get_field_TEMPLATE_TORCH_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "WALL_TORCH", "field_22970", "TEMPLATE_TORCH_WALL", "f_125648_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_TORCH_WALL
    [[maybe_unused]] static void set_field_TEMPLATE_TORCH_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "WALL_TORCH", "field_22970", "TEMPLATE_TORCH_WALL", "f_125648_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_PISTON
    [[maybe_unused]] static jobject get_field_TEMPLATE_PISTON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "PISTON", "field_22971", "TEMPLATE_PISTON", "f_125649_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_PISTON
    [[maybe_unused]] static void set_field_TEMPLATE_PISTON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "PISTON", "field_22971", "TEMPLATE_PISTON", "f_125649_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_PISTON_HEAD
    [[maybe_unused]] static jobject get_field_TEMPLATE_PISTON_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "PISTON_HEAD", "field_22930", "TEMPLATE_PISTON_HEAD", "f_125650_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_PISTON_HEAD
    [[maybe_unused]] static void set_field_TEMPLATE_PISTON_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "PISTON_HEAD", "field_22930", "TEMPLATE_PISTON_HEAD", "f_125650_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_PISTON_HEAD_SHORT
    [[maybe_unused]] static jobject get_field_TEMPLATE_PISTON_HEAD_SHORT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "PISTON_HEAD_SHORT", "field_22931", "TEMPLATE_PISTON_HEAD_SHORT", "f_125651_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_PISTON_HEAD_SHORT
    [[maybe_unused]] static void set_field_TEMPLATE_PISTON_HEAD_SHORT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "PISTON_HEAD_SHORT", "field_22931", "TEMPLATE_PISTON_HEAD_SHORT", "f_125651_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_SEAGRASS
    [[maybe_unused]] static jobject get_field_TEMPLATE_SEAGRASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "SEAGRASS", "field_22932", "TEMPLATE_SEAGRASS", "f_125652_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_SEAGRASS
    [[maybe_unused]] static void set_field_TEMPLATE_SEAGRASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "SEAGRASS", "field_22932", "TEMPLATE_SEAGRASS", "f_125652_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_TURTLE_EGG
    [[maybe_unused]] static jobject get_field_TEMPLATE_TURTLE_EGG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "TURTLE_EGG", "field_22933", "TEMPLATE_TURTLE_EGG", "f_125653_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_TURTLE_EGG
    [[maybe_unused]] static void set_field_TEMPLATE_TURTLE_EGG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "TURTLE_EGG", "field_22933", "TEMPLATE_TURTLE_EGG", "f_125653_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_TWO_TURTLE_EGGS
    [[maybe_unused]] static jobject get_field_TEMPLATE_TWO_TURTLE_EGGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "TWO_TURTLE_EGGS", "field_22934", "TEMPLATE_TWO_TURTLE_EGGS", "f_125654_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_TWO_TURTLE_EGGS
    [[maybe_unused]] static void set_field_TEMPLATE_TWO_TURTLE_EGGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "TWO_TURTLE_EGGS", "field_22934", "TEMPLATE_TWO_TURTLE_EGGS", "f_125654_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_THREE_TURTLE_EGGS
    [[maybe_unused]] static jobject get_field_TEMPLATE_THREE_TURTLE_EGGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "THREE_TURTLE_EGGS", "field_22935", "TEMPLATE_THREE_TURTLE_EGGS", "f_125655_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_THREE_TURTLE_EGGS
    [[maybe_unused]] static void set_field_TEMPLATE_THREE_TURTLE_EGGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "THREE_TURTLE_EGGS", "field_22935", "TEMPLATE_THREE_TURTLE_EGGS", "f_125655_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_FOUR_TURTLE_EGGS
    [[maybe_unused]] static jobject get_field_TEMPLATE_FOUR_TURTLE_EGGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bo", "FOUR_TURTLE_EGGS", "field_22936", "TEMPLATE_FOUR_TURTLE_EGGS", "f_125656_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_FOUR_TURTLE_EGGS
    [[maybe_unused]] static void set_field_TEMPLATE_FOUR_TURTLE_EGGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bo", "FOUR_TURTLE_EGGS", "field_22936", "TEMPLATE_FOUR_TURTLE_EGGS", "f_125656_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_SINGLE_FACE
    [[maybe_unused]] static jobject get_field_TEMPLATE_SINGLE_FACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bp", "SINGLE_FACE", "field_22937", "TEMPLATE_SINGLE_FACE", "f_125657_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_SINGLE_FACE
    [[maybe_unused]] static void set_field_TEMPLATE_SINGLE_FACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bp", "SINGLE_FACE", "field_22937", "TEMPLATE_SINGLE_FACE", "f_125657_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CAULDRON_LEVEL1
    [[maybe_unused]] static jobject get_field_TEMPLATE_CAULDRON_LEVEL1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "CAULDRON_LEVEL1", "field_28014", "TEMPLATE_CAULDRON_LEVEL1", "f_176463_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CAULDRON_LEVEL1
    [[maybe_unused]] static void set_field_TEMPLATE_CAULDRON_LEVEL1(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "CAULDRON_LEVEL1", "field_28014", "TEMPLATE_CAULDRON_LEVEL1", "f_176463_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CAULDRON_LEVEL2
    [[maybe_unused]] static jobject get_field_TEMPLATE_CAULDRON_LEVEL2() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("br", "CAULDRON_LEVEL2", "field_28015", "TEMPLATE_CAULDRON_LEVEL2", "f_176464_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CAULDRON_LEVEL2
    [[maybe_unused]] static void set_field_TEMPLATE_CAULDRON_LEVEL2(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("br", "CAULDRON_LEVEL2", "field_28015", "TEMPLATE_CAULDRON_LEVEL2", "f_176464_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CAULDRON_FULL
    [[maybe_unused]] static jobject get_field_TEMPLATE_CAULDRON_FULL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "CAULDRON_FULL", "field_27784", "TEMPLATE_CAULDRON_FULL", "f_176465_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CAULDRON_FULL
    [[maybe_unused]] static void set_field_TEMPLATE_CAULDRON_FULL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "CAULDRON_FULL", "field_27784", "TEMPLATE_CAULDRON_FULL", "f_176465_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_AZALEA
    [[maybe_unused]] static jobject get_field_TEMPLATE_AZALEA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bt", "AZALEA", "field_28804", "TEMPLATE_AZALEA", "f_176466_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_AZALEA
    [[maybe_unused]] static void set_field_TEMPLATE_AZALEA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bt", "AZALEA", "field_28804", "TEMPLATE_AZALEA", "f_176466_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_POTTED_AZALEA_BUSH
    [[maybe_unused]] static jobject get_field_TEMPLATE_POTTED_AZALEA_BUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bu", "POTTED_AZALEA", "field_33965", "TEMPLATE_POTTED_AZALEA_BUSH", "f_176467_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_POTTED_AZALEA_BUSH
    [[maybe_unused]] static void set_field_TEMPLATE_POTTED_AZALEA_BUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bu", "POTTED_AZALEA", "field_33965", "TEMPLATE_POTTED_AZALEA_BUSH", "f_176467_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_POTTED_FLOWERING_AZALEA_BUSH
    [[maybe_unused]] static jobject get_field_TEMPLATE_POTTED_FLOWERING_AZALEA_BUSH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bv", "POTTED_FLOWERING_AZALEA", "field_43408", "TEMPLATE_POTTED_FLOWERING_AZALEA_BUSH", "f_278116_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_POTTED_FLOWERING_AZALEA_BUSH
    [[maybe_unused]] static void set_field_TEMPLATE_POTTED_FLOWERING_AZALEA_BUSH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bv", "POTTED_FLOWERING_AZALEA", "field_43408", "TEMPLATE_POTTED_FLOWERING_AZALEA_BUSH", "f_278116_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#SNIFFER_EGG
    [[maybe_unused]] static jobject get_field_SNIFFER_EGG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bw", "SNIFFER_EGG", "field_43384", "SNIFFER_EGG", "f_276458_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#SNIFFER_EGG
    [[maybe_unused]] static void set_field_SNIFFER_EGG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bw", "SNIFFER_EGG", "field_43384", "SNIFFER_EGG", "f_276458_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#GENERATED
    [[maybe_unused]] static jobject get_field_GENERATED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "FLAT_ITEM", "field_22938", "GENERATED", "f_125658_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#GENERATED
    [[maybe_unused]] static void set_field_GENERATED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "FLAT_ITEM", "field_22938", "GENERATED", "f_125658_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_MUSIC_DISC
    [[maybe_unused]] static jobject get_field_TEMPLATE_MUSIC_DISC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("by", "MUSIC_DISC", "field_44581", "TEMPLATE_MUSIC_DISC", "f_278495_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_MUSIC_DISC
    [[maybe_unused]] static void set_field_TEMPLATE_MUSIC_DISC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("by", "MUSIC_DISC", "field_44581", "TEMPLATE_MUSIC_DISC", "f_278495_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#HANDHELD
    [[maybe_unused]] static jobject get_field_HANDHELD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bz", "FLAT_HANDHELD_ITEM", "field_22939", "HANDHELD", "f_125659_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#HANDHELD
    [[maybe_unused]] static void set_field_HANDHELD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bz", "FLAT_HANDHELD_ITEM", "field_22939", "HANDHELD", "f_125659_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#HANDHELD_ROD
    [[maybe_unused]] static jobject get_field_HANDHELD_ROD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bA", "FLAT_HANDHELD_ROD_ITEM", "field_22940", "HANDHELD_ROD", "f_125660_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#HANDHELD_ROD
    [[maybe_unused]] static void set_field_HANDHELD_ROD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bA", "FLAT_HANDHELD_ROD_ITEM", "field_22940", "HANDHELD_ROD", "f_125660_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#GENERATED_TWO_LAYERS
    [[maybe_unused]] static jobject get_field_GENERATED_TWO_LAYERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bB", "TWO_LAYERED_ITEM", "field_42232", "GENERATED_TWO_LAYERS", "f_267493_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#GENERATED_TWO_LAYERS
    [[maybe_unused]] static void set_field_GENERATED_TWO_LAYERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bB", "TWO_LAYERED_ITEM", "field_42232", "GENERATED_TWO_LAYERS", "f_267493_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#GENERATED_THREE_LAYERS
    [[maybe_unused]] static jobject get_field_GENERATED_THREE_LAYERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bC", "THREE_LAYERED_ITEM", "field_42233", "GENERATED_THREE_LAYERS", "f_267487_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#GENERATED_THREE_LAYERS
    [[maybe_unused]] static void set_field_GENERATED_THREE_LAYERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bC", "THREE_LAYERED_ITEM", "field_42233", "GENERATED_THREE_LAYERS", "f_267487_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_SHULKER_BOX
    [[maybe_unused]] static jobject get_field_TEMPLATE_SHULKER_BOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bD", "SHULKER_BOX_INVENTORY", "field_22941", "TEMPLATE_SHULKER_BOX", "f_125661_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_SHULKER_BOX
    [[maybe_unused]] static void set_field_TEMPLATE_SHULKER_BOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bD", "SHULKER_BOX_INVENTORY", "field_22941", "TEMPLATE_SHULKER_BOX", "f_125661_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_BED
    [[maybe_unused]] static jobject get_field_TEMPLATE_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bE", "BED_INVENTORY", "field_22943", "TEMPLATE_BED", "f_125662_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_BED
    [[maybe_unused]] static void set_field_TEMPLATE_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bE", "BED_INVENTORY", "field_22943", "TEMPLATE_BED", "f_125662_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_BANNER
    [[maybe_unused]] static jobject get_field_TEMPLATE_BANNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bF", "BANNER_INVENTORY", "field_22944", "TEMPLATE_BANNER", "f_125663_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_BANNER
    [[maybe_unused]] static void set_field_TEMPLATE_BANNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bF", "BANNER_INVENTORY", "field_22944", "TEMPLATE_BANNER", "f_125663_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_SKULL
    [[maybe_unused]] static jobject get_field_TEMPLATE_SKULL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bG", "SKULL_INVENTORY", "field_22945", "TEMPLATE_SKULL", "f_125664_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_SKULL
    [[maybe_unused]] static void set_field_TEMPLATE_SKULL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bG", "SKULL_INVENTORY", "field_22945", "TEMPLATE_SKULL", "f_125664_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CANDLE
    [[maybe_unused]] static jobject get_field_TEMPLATE_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "CANDLE", "field_27785", "TEMPLATE_CANDLE", "f_176468_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CANDLE
    [[maybe_unused]] static void set_field_TEMPLATE_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "CANDLE", "field_27785", "TEMPLATE_CANDLE", "f_176468_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_TWO_CANDLES
    [[maybe_unused]] static jobject get_field_TEMPLATE_TWO_CANDLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "TWO_CANDLES", "field_27786", "TEMPLATE_TWO_CANDLES", "f_176469_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_TWO_CANDLES
    [[maybe_unused]] static void set_field_TEMPLATE_TWO_CANDLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "TWO_CANDLES", "field_27786", "TEMPLATE_TWO_CANDLES", "f_176469_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_THREE_CANDLES
    [[maybe_unused]] static jobject get_field_TEMPLATE_THREE_CANDLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "THREE_CANDLES", "field_27787", "TEMPLATE_THREE_CANDLES", "f_176470_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_THREE_CANDLES
    [[maybe_unused]] static void set_field_TEMPLATE_THREE_CANDLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "THREE_CANDLES", "field_27787", "TEMPLATE_THREE_CANDLES", "f_176470_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_FOUR_CANDLES
    [[maybe_unused]] static jobject get_field_TEMPLATE_FOUR_CANDLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "FOUR_CANDLES", "field_27788", "TEMPLATE_FOUR_CANDLES", "f_176471_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_FOUR_CANDLES
    [[maybe_unused]] static void set_field_TEMPLATE_FOUR_CANDLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "FOUR_CANDLES", "field_27788", "TEMPLATE_FOUR_CANDLES", "f_176471_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_CAKE_WITH_CANDLE
    [[maybe_unused]] static jobject get_field_TEMPLATE_CAKE_WITH_CANDLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "CANDLE_CAKE", "field_27789", "TEMPLATE_CAKE_WITH_CANDLE", "f_176472_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_CAKE_WITH_CANDLE
    [[maybe_unused]] static void set_field_TEMPLATE_CAKE_WITH_CANDLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "CANDLE_CAKE", "field_27789", "TEMPLATE_CAKE_WITH_CANDLE", "f_176472_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_SCULK_SHRIEKER
    [[maybe_unused]] static jobject get_field_TEMPLATE_SCULK_SHRIEKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "SCULK_SHRIEKER", "field_38469", "TEMPLATE_SCULK_SHRIEKER", "f_236340_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_SCULK_SHRIEKER
    [[maybe_unused]] static void set_field_TEMPLATE_SCULK_SHRIEKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "SCULK_SHRIEKER", "field_38469", "TEMPLATE_SCULK_SHRIEKER", "f_236340_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#TEMPLATE_VAULT
    [[maybe_unused]] static jobject get_field_TEMPLATE_VAULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "VAULT", "field_48980", "TEMPLATE_VAULT", "f_315019_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#TEMPLATE_VAULT
    [[maybe_unused]] static void set_field_TEMPLATE_VAULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "VAULT", "field_48980", "TEMPLATE_VAULT", "f_315019_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.Models#HANDHELD_MACE
    [[maybe_unused]] static jobject get_field_HANDHELD_MACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bO", "FLAT_HANDHELD_MACE_ITEM", "field_49915", "HANDHELD_MACE", "f_315587_"), "Lod;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.Models#HANDHELD_MACE
    [[maybe_unused]] static void set_field_HANDHELD_MACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bO", "FLAT_HANDHELD_MACE_ITEM", "field_49915", "HANDHELD_MACE", "f_315587_"), "Lod;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_make() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_25857", "make", "m_125726_"), "([Log;)Lod;");
    }

    static jobject make(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_make();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_block() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_25856", "block", "m_125723_"), "(Ljava/lang/String;[Log;)Lod;");
    }

    static jobject block(const jobject& arg0, const jarray& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_block();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_item() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createItem", "method_25859", "item", "m_125730_"), "(Ljava/lang/String;[Log;)Lod;");
    }

    static jobject item(const jobject& arg0, const jarray& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_item();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__block() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_25855", "block", "m_125719_"), "(Ljava/lang/String;Ljava/lang/String;[Log;)Lod;");
    }

    static jobject _block(const jobject& arg0, const jobject& arg1, const jarray& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__block();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_DATA_CLIENT_MODELS_HPP