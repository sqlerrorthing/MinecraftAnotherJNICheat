// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_CLIENT_MODEL_HPP
#define NET_MINECRAFT_DATA_CLIENT_MODEL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.client.Model
 * Remapped: od
 */
namespace Model {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("od", "net/minecraft/data/models/model/ModelTemplate", "net/minecraft/class_4942", "net/minecraft/data/client/Model", "net/minecraft/src/C_4821_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.data.client.Model#parent
    static jobject get_field_parent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "model", "field_22901", "parent", "f_125585_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.client.Model#parent
    static void set_field_parent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "model", "field_22901", "parent", "f_125585_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.client.Model#requiredTextures
    static jobject get_field_requiredTextures(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "requiredSlots", "field_22902", "requiredTextures", "f_125586_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.client.Model#requiredTextures
    static void set_field_requiredTextures(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "requiredSlots", "field_22902", "requiredTextures", "f_125586_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.client.Model#variant
    static jobject get_field_variant(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "suffix", "field_22903", "variant", "f_125587_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.client.Model#variant
    static void set_field_variant(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "suffix", "field_22903", "variant", "f_125587_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getBlockSubModelId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDefaultModelLocation", "method_54828", "getBlockSubModelId", "m_305275_"), "(Ldfy;)Lakr;");
    }

    static jobject getBlockSubModelId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBlockSubModelId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_upload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_25846", "upload", "m_125592_"), "(Ldfy;Lof;Ljava/util/function/BiConsumer;)Lakr;");
    }

    static jobject upload(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_upload();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__upload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createWithSuffix", "method_25847", "upload", "m_125596_"), "(Ldfy;Ljava/lang/String;Lof;Ljava/util/function/BiConsumer;)Lakr;");
    }

    static jobject _upload(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID__upload();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_uploadWithoutVariant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createWithOverride", "method_25853", "uploadWithoutVariant", "m_125616_"), "(Ldfy;Ljava/lang/String;Lof;Ljava/util/function/BiConsumer;)Lakr;");
    }

    static jobject uploadWithoutVariant(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_uploadWithoutVariant();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID___upload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_25852", "upload", "m_125612_"), "(Lakr;Lof;Ljava/util/function/BiConsumer;)Lakr;");
    }

    static jobject __upload(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID___upload();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID____upload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_48525", "upload", "m_266561_"), "(Lakr;Lof;Ljava/util/function/BiConsumer;Lod$a;)Lakr;");
    }

    static jobject ___upload(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID____upload();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createJson() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createBaseTemplate", "method_48524", "createJson", "m_266532_"), "(Lakr;Ljava/util/Map;)Lcom/google/gson/JsonObject;");
    }

    static jobject createJson(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createJson();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createTextureMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createMap", "method_25850", "createTextureMap", "m_125608_"), "(Lof;)Ljava/util/Map;");
    }

    static jobject createTextureMap(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createTextureMap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_DATA_CLIENT_MODEL_HPP