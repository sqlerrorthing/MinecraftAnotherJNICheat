// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_CLIENT_VARIANTSBLOCKSTATESUPPLIER_HPP
#define NET_MINECRAFT_DATA_CLIENT_VARIANTSBLOCKSTATESUPPLIER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.client.VariantsBlockStateSupplier
 * Remapped: nu
 */
namespace VariantsBlockStateSupplier {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("nu", "net/minecraft/data/models/blockstates/MultiVariantGenerator", "net/minecraft/class_4925", "net/minecraft/data/client/VariantsBlockStateSupplier", "net/minecraft/src/C_4804_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.data.client.VariantsBlockStateSupplier#block
    static jobject get_field_block(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "block", "field_22859", "block", "f_125246_"), "Ldfy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.client.VariantsBlockStateSupplier#block
    static void set_field_block(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "block", "field_22859", "block", "f_125246_"), "Ldfy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.client.VariantsBlockStateSupplier#variants
    static jobject get_field_variants(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "baseVariants", "field_22860", "variants", "f_125247_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.client.VariantsBlockStateSupplier#variants
    static void set_field_variants(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "baseVariants", "field_22860", "variants", "f_125247_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.client.VariantsBlockStateSupplier#definedProperties
    static jobject get_field_definedProperties(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "seenProperties", "field_22861", "definedProperties", "f_125248_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.client.VariantsBlockStateSupplier#definedProperties
    static void set_field_definedProperties(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "seenProperties", "field_22861", "definedProperties", "f_125248_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.client.VariantsBlockStateSupplier#variantMaps
    static jobject get_field_variantMaps(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "declaredPropertySets", "field_22862", "variantMaps", "f_125249_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.client.VariantsBlockStateSupplier#variantMaps
    static void set_field_variantMaps(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "declaredPropertySets", "field_22862", "variantMaps", "f_125249_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_coordinate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "with", "method_25775", "coordinate", "m_125271_"), "(Lnv;)Lnu;");
    }

    static jobject coordinate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_coordinate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "get", "method_25780", "get", "get"), "()Lcom/google/gson/JsonElement;");
    }

    static jobject get(const jobject& obj) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_intersect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "mergeVariants", "method_25777", "intersect", "m_125277_"), "(Ljava/util/List;Ljava/util/List;)Ljava/util/List;");
    }

    static jobject intersect(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_intersect();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlock", "method_25743", "getBlock", "m_6968_"), "()Ldfy;");
    }

    static jobject getBlock(const jobject& obj) {
                
       const auto methodID = methodID_getBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "multiVariant", "method_25769", "create", "m_125254_"), "(Ldfy;)Lnu;");
    }

    static jobject create(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "multiVariant", "method_25770", "create", "m_125256_"), "(Ldfy;Lnx;)Lnu;");
    }

    static jobject _create(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "multiVariant", "method_25771", "create", "m_125259_"), "(Ldfy;[Lnx;)Lnu;");
    }

    static jobject __create(const jobject& arg0, const jarray& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID___create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_DATA_CLIENT_VARIANTSBLOCKSTATESUPPLIER_HPP