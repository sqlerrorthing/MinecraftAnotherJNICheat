// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_CLIENT_VARIANTSETTINGS_HPP
#define NET_MINECRAFT_DATA_CLIENT_VARIANTSETTINGS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.client.VariantSettings
 * Remapped: ny
 */
namespace VariantSettings {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ny", "net/minecraft/data/models/blockstates/VariantProperties", "net/minecraft/class_4936", "net/minecraft/data/client/VariantSettings", "net/minecraft/src/C_4815_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.data.client.VariantSettings#X
    [[maybe_unused]] static jobject get_field_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "X_ROT", "field_22885", "X", "f_125518_"), "Lnz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.VariantSettings#X
    [[maybe_unused]] static void set_field_X(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "X_ROT", "field_22885", "X", "f_125518_"), "Lnz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.VariantSettings#Y
    [[maybe_unused]] static jobject get_field_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "Y_ROT", "field_22886", "Y", "f_125519_"), "Lnz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.VariantSettings#Y
    [[maybe_unused]] static void set_field_Y(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "Y_ROT", "field_22886", "Y", "f_125519_"), "Lnz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.VariantSettings#MODEL
    [[maybe_unused]] static jobject get_field_MODEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MODEL", "field_22887", "MODEL", "f_125520_"), "Lnz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.VariantSettings#MODEL
    [[maybe_unused]] static void set_field_MODEL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MODEL", "field_22887", "MODEL", "f_125520_"), "Lnz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.VariantSettings#UVLOCK
    [[maybe_unused]] static jobject get_field_UVLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "UV_LOCK", "field_22888", "UVLOCK", "f_125521_"), "Lnz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.VariantSettings#UVLOCK
    [[maybe_unused]] static void set_field_UVLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "UV_LOCK", "field_22888", "UVLOCK", "f_125521_"), "Lnz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.data.client.VariantSettings#WEIGHT
    [[maybe_unused]] static jobject get_field_WEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "WEIGHT", "field_22889", "WEIGHT", "f_125522_"), "Lnz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.data.client.VariantSettings#WEIGHT
    [[maybe_unused]] static void set_field_WEIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "WEIGHT", "field_22889", "WEIGHT", "f_125522_"), "Lnz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

};

#endif // NET_MINECRAFT_DATA_CLIENT_VARIANTSETTINGS_HPP