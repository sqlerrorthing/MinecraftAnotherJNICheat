// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_CLIENT_BLOCKSTATEVARIANT_HPP
#define NET_MINECRAFT_DATA_CLIENT_BLOCKSTATEVARIANT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.client.BlockStateVariant
 * Remapped: nx
 */
namespace BlockStateVariant {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("nx", "net/minecraft/data/models/blockstates/Variant", "net/minecraft/class_4935", "net/minecraft/data/client/BlockStateVariant", "net/minecraft/src/C_4814_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.data.client.BlockStateVariant#properties
    static jobject get_field_properties(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "values", "field_22884", "properties", "f_125499_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.client.BlockStateVariant#properties
    static void set_field_properties(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "values", "field_22884", "properties", "f_125499_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_put() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "with", "method_25828", "put", "m_125511_"), "(Lnz;Ljava/lang/Object;)Lnx;");
    }

    static jobject put(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_put();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "variant", "method_25824", "create", "m_125501_"), "()Lnx;");
    }

    static jobject create() {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_union() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "merge", "method_25827", "union", "m_125508_"), "(Lnx;Lnx;)Lnx;");
    }

    static jobject union(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_union();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "get", "method_25830", "get", "get"), "()Lcom/google/gson/JsonElement;");
    }

    static jobject get(const jobject& obj) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toJson() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "convertList", "method_25829", "toJson", "m_125514_"), "(Ljava/util/List;)Lcom/google/gson/JsonElement;");
    }

    static jobject toJson(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toJson();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_DATA_CLIENT_BLOCKSTATEVARIANT_HPP