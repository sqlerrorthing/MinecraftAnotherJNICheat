// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_DATACACHE$CACHEDDATA_HPP
#define NET_MINECRAFT_DATA_DATACACHE$CACHEDDATA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.DataCache$CachedData
 * Remapped: mb$b
 */
namespace DataCache$CachedData {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("mb$b", "net/minecraft/data/HashCache$ProviderCache", "net/minecraft/class_2408$class_7405", "net/minecraft/data/DataCache$CachedData", "net/minecraft/src/C_4766_$C_213479_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.data.DataCache$CachedData#version
    static jobject get_field_version(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "version", "comp_729", "version", "f_236126_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.data.DataCache$CachedData#version
    static void set_field_version(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "version", "comp_729", "version", "f_236126_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.DataCache$CachedData#data
    static jobject get_field_data(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "data", "comp_730", "data", "f_236127_"), "Lcom/google/common/collect/ImmutableMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.DataCache$CachedData#data
    static void set_field_data(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "data", "comp_730", "data", "f_236127_"), "Lcom/google/common/collect/ImmutableMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_43357", "get", "m_236134_"), "(Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_size() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "count", "method_43356", "size", "m_236133_"), "()I");
    }

    static jint size(const jobject& obj) {
                
       const auto methodID = methodID_size();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_parseCache() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_43359", "parseCache", "m_236139_"), "(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lmb$b;");
    }

    static jobject parseCache(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_parseCache();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "save", "method_43360", "write", "m_236142_"), "(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V");
    }

    static void write(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__version() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "version", "comp_729", "version", "f_236126_"), "()Ljava/lang/String;");
    }

    static jobject _version(const jobject& obj) {
                
       const auto methodID = methodID__version();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__data() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "data", "comp_730", "data", "f_236127_"), "()Lcom/google/common/collect/ImmutableMap;");
    }

    static jobject _data(const jobject& obj) {
                
       const auto methodID = methodID__data();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_DATA_DATACACHE$CACHEDDATA_HPP