// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATA_DATACACHE$RUNRESULT_HPP
#define NET_MINECRAFT_DATA_DATACACHE$RUNRESULT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.data.DataCache$RunResult
 * Remapped: mb$e
 */
namespace DataCache$RunResult {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("mb$e", "net/minecraft/data/HashCache$UpdateResult", "net/minecraft/class_2408$class_7860", "net/minecraft/data/DataCache$RunResult", "net/minecraft/src/C_4766_$C_252367_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.data.DataCache$RunResult#providerName
    static jobject get_field_providerName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "providerId", "comp_1124", "providerName", "f_252422_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.DataCache$RunResult#providerName
    static void set_field_providerName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "providerId", "comp_1124", "providerName", "f_252422_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.DataCache$RunResult#cache
    static jobject get_field_cache(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "cache", "comp_1125", "cache", "f_252528_"), "Lmb$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.DataCache$RunResult#cache
    static void set_field_cache(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "cache", "comp_1125", "cache", "f_252528_"), "Lmb$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.data.DataCache$RunResult#cacheMissCount
    static jint get_field_cacheMissCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "writes", "comp_1126", "cacheMissCount", "f_252492_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.data.DataCache$RunResult#cacheMissCount
    static void set_field_cacheMissCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "writes", "comp_1126", "cacheMissCount", "f_252492_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID__providerName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "providerId", "comp_1124", "providerName", "f_252422_"), "()Ljava/lang/String;");
    }

    static jobject _providerName(const jobject& obj) {
                
       const auto methodID = methodID__providerName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__cache() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "cache", "comp_1125", "cache", "f_252528_"), "()Lmb$b;");
    }

    static jobject _cache(const jobject& obj) {
                
       const auto methodID = methodID__cache();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__cacheMissCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "writes", "comp_1126", "cacheMissCount", "f_252492_"), "()I");
    }

    static jint _cacheMissCount(const jobject& obj) {
                
       const auto methodID = methodID__cacheMissCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_DATA_DATACACHE$RUNRESULT_HPP