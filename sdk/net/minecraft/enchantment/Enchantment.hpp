// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENCHANTMENT_ENCHANTMENT_HPP
#define NET_MINECRAFT_ENCHANTMENT_ENCHANTMENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.enchantment.Enchantment
 * Remapped: dac
 */
namespace Enchantment {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dac", "net/minecraft/world/item/enchantment/Enchantment", "net/minecraft/class_1887", "net/minecraft/enchantment/Enchantment", "net/minecraft/src/C_1505_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.enchantment.Enchantment#description
    static jobject get_field_description(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "description", "comp_2686", "description", "f_337607_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.enchantment.Enchantment#description
    static void set_field_description(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "description", "comp_2686", "description", "f_337607_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.enchantment.Enchantment#definition
    static jobject get_field_definition(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "definition", "comp_2687", "definition", "f_316889_"), "Ldac$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.enchantment.Enchantment#definition
    static void set_field_definition(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "definition", "comp_2687", "definition", "f_316889_"), "Ldac$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.enchantment.Enchantment#exclusiveSet
    static jobject get_field_exclusiveSet(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "exclusiveSet", "comp_2688", "exclusiveSet", "f_336996_"), "Ljq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.enchantment.Enchantment#exclusiveSet
    static void set_field_exclusiveSet(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "exclusiveSet", "comp_2688", "exclusiveSet", "f_336996_"), "Ljq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.enchantment.Enchantment#effects
    static jobject get_field_effects(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "effects", "comp_2689", "effects", "f_336810_"), "Lkm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.enchantment.Enchantment#effects
    static void set_field_effects(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "effects", "comp_2689", "effects", "f_336810_"), "Lkm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantment#MAX_LEVEL
    [[maybe_unused]] static jint get_field_MAX_LEVEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_LEVEL", "field_51949", "MAX_LEVEL", "f_336973_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantment#MAX_LEVEL
    [[maybe_unused]] static void set_field_MAX_LEVEL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_LEVEL", "field_51949", "MAX_LEVEL", "f_336973_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantment#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DIRECT_CODEC", "field_51643", "CODEC", "f_337147_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantment#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DIRECT_CODEC", "field_51643", "CODEC", "f_337147_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantment#ENTRY_CODEC
    [[maybe_unused]] static jobject get_field_ENTRY_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CODEC", "field_51644", "ENTRY_CODEC", "f_337121_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantment#ENTRY_CODEC
    [[maybe_unused]] static void set_field_ENTRY_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CODEC", "field_51644", "ENTRY_CODEC", "f_337121_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantment#ENTRY_PACKET_CODEC
    [[maybe_unused]] static jobject get_field_ENTRY_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STREAM_CODEC", "field_51950", "ENTRY_PACKET_CODEC", "f_337378_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantment#ENTRY_PACKET_CODEC
    [[maybe_unused]] static void set_field_ENTRY_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STREAM_CODEC", "field_51950", "ENTRY_PACKET_CODEC", "f_337378_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_constantCost() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "constantCost", "method_58440", "constantCost", "m_322287_"), "(I)Ldac$b;");
    }

    static jobject constantCost(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_constantCost();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_leveledCost() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "dynamicCost", "method_58441", "leveledCost", "m_318803_"), "(II)Ldac$b;");
    }

    static jobject leveledCost(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_leveledCost();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__definition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "definition", "method_58443", "definition", "m_322764_"), "(Ljq;Ljq;IILdac$b;Ldac$b;I[Lbsz;)Ldac$c;");
    }

    static jobject _definition(const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jobject& arg4, const jobject& arg5, const jint& arg6, const jarray& arg7, const jobject& arg8) {
       const auto clazz = self();
       const auto methodID = methodID__definition();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID___definition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "definition", "method_58442", "definition", "m_319628_"), "(Ljq;IILdac$b;Ldac$b;I[Lbsz;)Ldac$c;");
    }

    static jobject __definition(const jobject& arg0, const jint& arg1, const jint& arg2, const jobject& arg3, const jobject& arg4, const jint& arg5, const jarray& arg6, const jobject& arg7) {
       const auto clazz = self();
       const auto methodID = methodID___definition();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_getEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSlotItems", "method_8185", "getEquipment", "m_44684_"), "(Lbtn;)Ljava/util/Map;");
    }

    static jobject getEquipment(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEquipment();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getApplicableItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSupportedItems", "method_56109", "getApplicableItems", "m_318986_"), "()Ljq;");
    }

    static jobject getApplicableItems(const jobject& obj) {
                
       const auto methodID = methodID_getApplicableItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_slotMatches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "matchingSlot", "method_60026", "slotMatches", "m_340448_"), "(Lbsy;)Z");
    }

    static jboolean slotMatches(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_slotMatches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPrimaryItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isPrimaryItem", "method_58444", "isPrimaryItem", "m_320566_"), "(Lcuq;)Z");
    }

    static jboolean isPrimaryItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isPrimaryItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSupportedItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isSupportedItem", "method_60046", "isSupportedItem", "m_340333_"), "(Lcuq;)Z");
    }

    static jboolean isSupportedItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isSupportedItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getWeight", "method_58445", "getWeight", "m_322444_"), "()I");
    }

    static jint getWeight(const jobject& obj) {
                
       const auto methodID = methodID_getWeight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAnvilCost() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getAnvilCost", "method_58446", "getAnvilCost", "m_320305_"), "()I");
    }

    static jint getAnvilCost(const jobject& obj) {
                
       const auto methodID = methodID_getAnvilCost();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMinLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getMinLevel", "method_8187", "getMinLevel", "m_44702_"), "()I");
    }

    static jint getMinLevel(const jobject& obj) {
                
       const auto methodID = methodID_getMinLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getMaxLevel", "method_8183", "getMaxLevel", "m_6586_"), "()I");
    }

    static jint getMaxLevel(const jobject& obj) {
                
       const auto methodID = methodID_getMaxLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMinPower() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getMinCost", "method_8182", "getMinPower", "m_6183_"), "(I)I");
    }

    static jint getMinPower(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getMinPower();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMaxPower() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getMaxCost", "method_20742", "getMaxPower", "m_6175_"), "(I)I");
    }

    static jint getMaxPower(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getMaxPower();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canBeCombined() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "areCompatible", "method_60033", "canBeCombined", "m_339848_"), "(Ljm;Ljm;)Z");
    }

    static jboolean canBeCombined(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canBeCombined();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getFullname", "method_8179", "getName", "m_44700_"), "(Ljm;I)Lwz;");
    }

    static jobject getName(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isAcceptableItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "canEnchant", "method_8192", "isAcceptableItem", "m_6081_"), "(Lcuq;)Z");
    }

    static jboolean isAcceptableItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isAcceptableItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEffects", "method_60034", "getEffect", "m_339699_"), "(Lkp;)Ljava/util/List;");
    }

    static jobject getEffect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEffect();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasDamageImmunityTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isImmuneToDamage", "method_60014", "hasDamageImmunityTo", "m_339556_"), "(Laqu;ILbsr;Lbrk;)Z");
    }

    static jboolean hasDamageImmunityTo(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_hasDamageImmunityTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_modifyDamageProtection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "modifyDamageProtection", "method_60018", "modifyDamageProtection", "m_339392_"), "(Laqu;ILcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyDamageProtection(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_modifyDamageProtection();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_modifyItemDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "modifyDurabilityChange", "method_60020", "modifyItemDamage", "m_338445_"), "(Laqu;ILcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyItemDamage(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_modifyItemDamage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_modifyAmmoUse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "modifyAmmoCount", "method_60043", "modifyAmmoUse", "m_338670_"), "(Laqu;ILcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyAmmoUse(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_modifyAmmoUse();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_modifyProjectilePiercing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "modifyPiercingCount", "method_60050", "modifyProjectilePiercing", "m_340203_"), "(Laqu;ILcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyProjectilePiercing(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_modifyProjectilePiercing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_modifyBlockExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "modifyBlockExperience", "method_60053", "modifyBlockExperience", "m_339476_"), "(Laqu;ILcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyBlockExperience(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_modifyBlockExperience();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_modifyMobExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "modifyMobExperience", "method_60019", "modifyMobExperience", "m_339285_"), "(Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyMobExperience(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_modifyMobExperience();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_modifyRepairWithXp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "modifyDurabilityToRepairFromXp", "method_60056", "modifyRepairWithXp", "m_339458_"), "(Laqu;ILcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyRepairWithXp(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_modifyRepairWithXp();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_modifyTridentReturnAcceleration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "modifyTridentReturnToOwnerAcceleration", "method_60042", "modifyTridentReturnAcceleration", "m_338740_"), "(Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyTridentReturnAcceleration(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_modifyTridentReturnAcceleration();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_modifyTridentSpinAttackStrength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "modifyTridentSpinAttackStrength", "method_60049", "modifyTridentSpinAttackStrength", "m_340467_"), "(Layw;ILorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyTridentSpinAttackStrength(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_modifyTridentSpinAttackStrength();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_modifyFishingTimeReduction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "modifyFishingTimeReduction", "method_60052", "modifyFishingTimeReduction", "m_339279_"), "(Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyFishingTimeReduction(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_modifyFishingTimeReduction();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_modifyFishingLuckBonus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "modifyFishingLuckBonus", "method_60055", "modifyFishingLuckBonus", "m_338592_"), "(Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyFishingLuckBonus(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_modifyFishingLuckBonus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_modifyDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "modifyDamage", "method_60041", "modifyDamage", "m_339305_"), "(Laqu;ILcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyDamage(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_modifyDamage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_modifySmashDamagePerFallenBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "modifyFallBasedDamage", "method_60048", "modifySmashDamagePerFallenBlock", "m_339857_"), "(Laqu;ILcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifySmashDamagePerFallenBlock(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_modifySmashDamagePerFallenBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_modifyKnockback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "modifyKnockback", "method_60051", "modifyKnockback", "m_340270_"), "(Laqu;ILcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyKnockback(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_modifyKnockback();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_modifyArmorEffectiveness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "modifyArmorEffectivness", "method_60054", "modifyArmorEffectiveness", "m_339549_"), "(Laqu;ILcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyArmorEffectiveness(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_modifyArmorEffectiveness();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_applyTargetedEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "doPostAttack", "method_60031", "applyTargetedEffect", "m_7677_"), "(Ldak;Laqu;ILdab;Lbsr;Lbrk;)V");
    }

    static void applyTargetedEffect(const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_applyTargetedEffect();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_onTargetDamaged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doPostAttack", "method_8189", "onTargetDamaged", "m_338982_"), "(Laqu;ILdab;Ldag;Lbsr;Lbrk;)V");
    }

    static void onTargetDamaged(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_onTargetDamaged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_modifyProjectileCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "modifyProjectileCount", "method_60057", "modifyProjectileCount", "m_340107_"), "(Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyProjectileCount(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_modifyProjectileCount();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_modifyProjectileSpread() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "modifyProjectileSpread", "method_60059", "modifyProjectileSpread", "m_339143_"), "(Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyProjectileSpread(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_modifyProjectileSpread();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_modifyCrossbowChargeTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "modifyCrossbowChargeTime", "method_60058", "modifyCrossbowChargeTime", "m_339334_"), "(Layw;ILorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyCrossbowChargeTime(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_modifyCrossbowChargeTime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_modifyValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "modifyUnfilteredValue", "method_60506", "modifyValue", "m_339735_"), "(Lkp;Layw;ILorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void modifyValue(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_modifyValue();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_60021", "onTick", "m_339048_"), "(Laqu;ILdab;Lbsr;)V");
    }

    static void onTick(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_onTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onProjectileSpawned() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onProjectileSpawned", "method_60044", "onProjectileSpawned", "m_339114_"), "(Laqu;ILdab;Lbsr;)V");
    }

    static void onProjectileSpawned(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_onProjectileSpawned();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onHitBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onHitBlock", "method_60023", "onHitBlock", "m_338612_"), "(Laqu;ILdab;Lbsr;Lexc;Ldtc;)V");
    }

    static void onHitBlock(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_onHitBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID__modifyValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "modifyItemFilteredCount", "method_60037", "modifyValue", "m_338936_"), "(Lkp;Laqu;ILcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void _modifyValue(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID__modifyValue();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID___modifyValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "modifyEntityFilteredValue", "method_60036", "modifyValue", "m_338415_"), "(Lkp;Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void __modifyValue(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID___modifyValue();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID____modifyValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "modifyDamageFilteredValue", "method_60035", "modifyValue", "m_338395_"), "(Lkp;Laqu;ILcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;)V");
    }

    static void ___modifyValue(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6) {
                
       const auto methodID = methodID____modifyValue();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_createEnchantedDamageLootContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "damageContext", "method_60040", "createEnchantedDamageLootContext", "m_338687_"), "(Laqu;ILbsr;Lbrk;)Lerr;");
    }

    static jobject createEnchantedDamageLootContext(const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createEnchantedDamageLootContext();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createEnchantedItemLootContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "itemContext", "method_60017", "createEnchantedItemLootContext", "m_340267_"), "(Laqu;ILcuq;)Lerr;");
    }

    static jobject createEnchantedItemLootContext(const jobject& arg0, const jint& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createEnchantedItemLootContext();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createEnchantedLocationLootContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "locationContext", "method_60016", "createEnchantedLocationLootContext", "m_338917_"), "(Laqu;ILbsr;Z)Lerr;");
    }

    static jobject createEnchantedLocationLootContext(const jobject& arg0, const jint& arg1, const jobject& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createEnchantedLocationLootContext();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createEnchantedEntityLootContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "entityContext", "method_60015", "createEnchantedEntityLootContext", "m_338852_"), "(Laqu;ILbsr;Lexc;)Lerr;");
    }

    static jobject createEnchantedEntityLootContext(const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_createEnchantedEntityLootContext();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createHitBlockLootContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "blockHitContext", "method_60768", "createHitBlockLootContext", "m_340550_"), "(Laqu;ILbsr;Lexc;Ldtc;)Lerr;");
    }

    static jobject createHitBlockLootContext(const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_createHitBlockLootContext();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_applyEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "applyEffects", "method_60032", "applyEffects", "m_339822_"), "(Ljava/util/List;Lerr;Ljava/util/function/Consumer;)V");
    }

    static void applyEffects(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_applyEffects();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_applyLocationBasedEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "runLocationChangedEffects", "method_60025", "applyLocationBasedEffects", "m_339772_"), "(Laqu;ILdab;Lbtn;)V");
    }

    static void applyLocationBasedEffects(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_applyLocationBasedEffects();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_removeLocationBasedEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stopLocationBasedEffects", "method_60013", "removeLocationBasedEffects", "m_338727_"), "(ILdab;Lbtn;)V");
    }

    static void removeLocationBasedEffects(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_removeLocationBasedEffects();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_builder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "enchantment", "method_60030", "builder", "m_339092_"), "(Ldac$c;)Ldac$a;");
    }

    static jobject builder(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_builder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__description() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "description", "comp_2686", "description", "f_337607_"), "()Lwz;");
    }

    static jobject _description(const jobject& obj) {
                
       const auto methodID = methodID__description();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID____definition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "definition", "comp_2687", "definition", "f_316889_"), "()Ldac$c;");
    }

    static jobject ___definition(const jobject& obj) {
                
       const auto methodID = methodID____definition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__exclusiveSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "exclusiveSet", "comp_2688", "exclusiveSet", "f_336996_"), "()Ljq;");
    }

    static jobject _exclusiveSet(const jobject& obj) {
                
       const auto methodID = methodID__exclusiveSet();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__effects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "effects", "comp_2689", "effects", "f_336810_"), "()Lkm;");
    }

    static jobject _effects(const jobject& obj) {
                
       const auto methodID = methodID__effects();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENCHANTMENT_ENCHANTMENT_HPP