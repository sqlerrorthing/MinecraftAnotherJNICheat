// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENCHANTMENT_EFFECT_ENCHANTMENTEFFECTENTRY_HPP
#define NET_MINECRAFT_ENCHANTMENT_EFFECT_ENCHANTMENTEFFECTENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.enchantment.effect.EnchantmentEffectEntry
 * Remapped: daa
 */
namespace EnchantmentEffectEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("daa", "net/minecraft/world/item/enchantment/ConditionalEffect", "net/minecraft/class_9698", "net/minecraft/enchantment/effect/EnchantmentEffectEntry", "net/minecraft/src/C_336434_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.enchantment.effect.EnchantmentEffectEntry#effect
    static jobject get_field_effect(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "effect", "comp_2680", "effect", "f_337100_"), "Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.enchantment.effect.EnchantmentEffectEntry#effect
    static void set_field_effect(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "effect", "comp_2680", "effect", "f_337100_"), "Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.enchantment.effect.EnchantmentEffectEntry#requirements
    static jobject get_field_requirements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "requirements", "comp_2681", "requirements", "f_337200_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.enchantment.effect.EnchantmentEffectEntry#requirements
    static void set_field_requirements(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "requirements", "comp_2681", "requirements", "f_337200_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_createRequirementsCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "conditionCodec", "method_60007", "createRequirementsCodec", "m_340625_"), "(Leul;)Lcom/mojang/serialization/Codec;");
    }

    static jobject createRequirementsCodec(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createRequirementsCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "codec", "method_60004", "createCodec", "m_340218_"), "(Lcom/mojang/serialization/Codec;Leul;)Lcom/mojang/serialization/Codec;");
    }

    static jobject createCodec(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_test() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "matches", "method_60006", "test", "m_339110_"), "(Lerr;)Z");
    }

    static jboolean test(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_test();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__effect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "effect", "comp_2680", "effect", "f_337100_"), "()Ljava/lang/Object;");
    }

    static jobject _effect(const jobject& obj) {
                
       const auto methodID = methodID__effect();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__requirements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "requirements", "comp_2681", "requirements", "f_337200_"), "()Ljava/util/Optional;");
    }

    static jobject _requirements(const jobject& obj) {
                
       const auto methodID = methodID__requirements();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENCHANTMENT_EFFECT_ENCHANTMENTEFFECTENTRY_HPP