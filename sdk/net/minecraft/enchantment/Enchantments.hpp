// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENCHANTMENT_ENCHANTMENTS_HPP
#define NET_MINECRAFT_ENCHANTMENT_ENCHANTMENTS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.enchantment.Enchantments
 * Remapped: dah
 */
namespace Enchantments {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dah", "net/minecraft/world/item/enchantment/Enchantments", "net/minecraft/class_1893", "net/minecraft/enchantment/Enchantments", "net/minecraft/src/C_1525_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#PROTECTION
    [[maybe_unused]] static jobject get_field_PROTECTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PROTECTION", "field_9111", "PROTECTION", "f_314710_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#PROTECTION
    [[maybe_unused]] static void set_field_PROTECTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PROTECTION", "field_9111", "PROTECTION", "f_314710_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#FIRE_PROTECTION
    [[maybe_unused]] static jobject get_field_FIRE_PROTECTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FIRE_PROTECTION", "field_9095", "FIRE_PROTECTION", "f_44966_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#FIRE_PROTECTION
    [[maybe_unused]] static void set_field_FIRE_PROTECTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FIRE_PROTECTION", "field_9095", "FIRE_PROTECTION", "f_44966_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#FEATHER_FALLING
    [[maybe_unused]] static jobject get_field_FEATHER_FALLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FEATHER_FALLING", "field_9129", "FEATHER_FALLING", "f_315602_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#FEATHER_FALLING
    [[maybe_unused]] static void set_field_FEATHER_FALLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FEATHER_FALLING", "field_9129", "FEATHER_FALLING", "f_315602_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#BLAST_PROTECTION
    [[maybe_unused]] static jobject get_field_BLAST_PROTECTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BLAST_PROTECTION", "field_9107", "BLAST_PROTECTION", "f_44968_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#BLAST_PROTECTION
    [[maybe_unused]] static void set_field_BLAST_PROTECTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BLAST_PROTECTION", "field_9107", "BLAST_PROTECTION", "f_44968_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#PROJECTILE_PROTECTION
    [[maybe_unused]] static jobject get_field_PROJECTILE_PROTECTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PROJECTILE_PROTECTION", "field_9096", "PROJECTILE_PROTECTION", "f_44969_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#PROJECTILE_PROTECTION
    [[maybe_unused]] static void set_field_PROJECTILE_PROTECTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PROJECTILE_PROTECTION", "field_9096", "PROJECTILE_PROTECTION", "f_44969_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#RESPIRATION
    [[maybe_unused]] static jobject get_field_RESPIRATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RESPIRATION", "field_9127", "RESPIRATION", "f_44970_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#RESPIRATION
    [[maybe_unused]] static void set_field_RESPIRATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RESPIRATION", "field_9127", "RESPIRATION", "f_44970_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#AQUA_AFFINITY
    [[maybe_unused]] static jobject get_field_AQUA_AFFINITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "AQUA_AFFINITY", "field_9105", "AQUA_AFFINITY", "f_44971_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#AQUA_AFFINITY
    [[maybe_unused]] static void set_field_AQUA_AFFINITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "AQUA_AFFINITY", "field_9105", "AQUA_AFFINITY", "f_44971_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#THORNS
    [[maybe_unused]] static jobject get_field_THORNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "THORNS", "field_9097", "THORNS", "f_44972_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#THORNS
    [[maybe_unused]] static void set_field_THORNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "THORNS", "field_9097", "THORNS", "f_44972_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#DEPTH_STRIDER
    [[maybe_unused]] static jobject get_field_DEPTH_STRIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DEPTH_STRIDER", "field_9128", "DEPTH_STRIDER", "f_44973_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#DEPTH_STRIDER
    [[maybe_unused]] static void set_field_DEPTH_STRIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DEPTH_STRIDER", "field_9128", "DEPTH_STRIDER", "f_44973_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#FROST_WALKER
    [[maybe_unused]] static jobject get_field_FROST_WALKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "FROST_WALKER", "field_9122", "FROST_WALKER", "f_44974_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#FROST_WALKER
    [[maybe_unused]] static void set_field_FROST_WALKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "FROST_WALKER", "field_9122", "FROST_WALKER", "f_44974_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#BINDING_CURSE
    [[maybe_unused]] static jobject get_field_BINDING_CURSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BINDING_CURSE", "field_9113", "BINDING_CURSE", "f_44975_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#BINDING_CURSE
    [[maybe_unused]] static void set_field_BINDING_CURSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BINDING_CURSE", "field_9113", "BINDING_CURSE", "f_44975_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#SOUL_SPEED
    [[maybe_unused]] static jobject get_field_SOUL_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SOUL_SPEED", "field_23071", "SOUL_SPEED", "f_44976_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#SOUL_SPEED
    [[maybe_unused]] static void set_field_SOUL_SPEED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SOUL_SPEED", "field_23071", "SOUL_SPEED", "f_44976_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#SWIFT_SNEAK
    [[maybe_unused]] static jobject get_field_SWIFT_SNEAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SWIFT_SNEAK", "field_38223", "SWIFT_SNEAK", "f_220304_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#SWIFT_SNEAK
    [[maybe_unused]] static void set_field_SWIFT_SNEAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SWIFT_SNEAK", "field_38223", "SWIFT_SNEAK", "f_220304_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#SHARPNESS
    [[maybe_unused]] static jobject get_field_SHARPNESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SHARPNESS", "field_9118", "SHARPNESS", "f_44977_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#SHARPNESS
    [[maybe_unused]] static void set_field_SHARPNESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SHARPNESS", "field_9118", "SHARPNESS", "f_44977_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#SMITE
    [[maybe_unused]] static jobject get_field_SMITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SMITE", "field_9123", "SMITE", "f_44978_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#SMITE
    [[maybe_unused]] static void set_field_SMITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SMITE", "field_9123", "SMITE", "f_44978_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#BANE_OF_ARTHROPODS
    [[maybe_unused]] static jobject get_field_BANE_OF_ARTHROPODS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "BANE_OF_ARTHROPODS", "field_9112", "BANE_OF_ARTHROPODS", "f_44979_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#BANE_OF_ARTHROPODS
    [[maybe_unused]] static void set_field_BANE_OF_ARTHROPODS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "BANE_OF_ARTHROPODS", "field_9112", "BANE_OF_ARTHROPODS", "f_44979_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#KNOCKBACK
    [[maybe_unused]] static jobject get_field_KNOCKBACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "KNOCKBACK", "field_9121", "KNOCKBACK", "f_44980_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#KNOCKBACK
    [[maybe_unused]] static void set_field_KNOCKBACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "KNOCKBACK", "field_9121", "KNOCKBACK", "f_44980_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#FIRE_ASPECT
    [[maybe_unused]] static jobject get_field_FIRE_ASPECT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "FIRE_ASPECT", "field_9124", "FIRE_ASPECT", "f_44981_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#FIRE_ASPECT
    [[maybe_unused]] static void set_field_FIRE_ASPECT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "FIRE_ASPECT", "field_9124", "FIRE_ASPECT", "f_44981_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#LOOTING
    [[maybe_unused]] static jobject get_field_LOOTING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LOOTING", "field_9110", "LOOTING", "f_316023_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#LOOTING
    [[maybe_unused]] static void set_field_LOOTING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LOOTING", "field_9110", "LOOTING", "f_316023_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#SWEEPING_EDGE
    [[maybe_unused]] static jobject get_field_SWEEPING_EDGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SWEEPING_EDGE", "field_9115", "SWEEPING_EDGE", "f_44983_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#SWEEPING_EDGE
    [[maybe_unused]] static void set_field_SWEEPING_EDGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SWEEPING_EDGE", "field_9115", "SWEEPING_EDGE", "f_44983_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#EFFICIENCY
    [[maybe_unused]] static jobject get_field_EFFICIENCY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "EFFICIENCY", "field_9131", "EFFICIENCY", "f_316758_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#EFFICIENCY
    [[maybe_unused]] static void set_field_EFFICIENCY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "EFFICIENCY", "field_9131", "EFFICIENCY", "f_316758_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#SILK_TOUCH
    [[maybe_unused]] static jobject get_field_SILK_TOUCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SILK_TOUCH", "field_9099", "SILK_TOUCH", "f_44985_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#SILK_TOUCH
    [[maybe_unused]] static void set_field_SILK_TOUCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "SILK_TOUCH", "field_9099", "SILK_TOUCH", "f_44985_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#UNBREAKING
    [[maybe_unused]] static jobject get_field_UNBREAKING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "UNBREAKING", "field_9119", "UNBREAKING", "f_44986_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#UNBREAKING
    [[maybe_unused]] static void set_field_UNBREAKING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "UNBREAKING", "field_9119", "UNBREAKING", "f_44986_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#FORTUNE
    [[maybe_unused]] static jobject get_field_FORTUNE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "FORTUNE", "field_9130", "FORTUNE", "f_316753_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#FORTUNE
    [[maybe_unused]] static void set_field_FORTUNE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "FORTUNE", "field_9130", "FORTUNE", "f_316753_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#POWER
    [[maybe_unused]] static jobject get_field_POWER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "POWER", "field_9103", "POWER", "f_314636_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#POWER
    [[maybe_unused]] static void set_field_POWER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "POWER", "field_9103", "POWER", "f_314636_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#PUNCH
    [[maybe_unused]] static jobject get_field_PUNCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "PUNCH", "field_9116", "PUNCH", "f_316860_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#PUNCH
    [[maybe_unused]] static void set_field_PUNCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "PUNCH", "field_9116", "PUNCH", "f_316860_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#FLAME
    [[maybe_unused]] static jobject get_field_FLAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "FLAME", "field_9126", "FLAME", "f_316779_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#FLAME
    [[maybe_unused]] static void set_field_FLAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "FLAME", "field_9126", "FLAME", "f_316779_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#INFINITY
    [[maybe_unused]] static jobject get_field_INFINITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "INFINITY", "field_9125", "INFINITY", "f_316098_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#INFINITY
    [[maybe_unused]] static void set_field_INFINITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "INFINITY", "field_9125", "INFINITY", "f_316098_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#LUCK_OF_THE_SEA
    [[maybe_unused]] static jobject get_field_LUCK_OF_THE_SEA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "LUCK_OF_THE_SEA", "field_9114", "LUCK_OF_THE_SEA", "f_314659_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#LUCK_OF_THE_SEA
    [[maybe_unused]] static void set_field_LUCK_OF_THE_SEA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "LUCK_OF_THE_SEA", "field_9114", "LUCK_OF_THE_SEA", "f_314659_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#LURE
    [[maybe_unused]] static jobject get_field_LURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "LURE", "field_9100", "LURE", "f_314874_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#LURE
    [[maybe_unused]] static void set_field_LURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "LURE", "field_9100", "LURE", "f_314874_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#LOYALTY
    [[maybe_unused]] static jobject get_field_LOYALTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "LOYALTY", "field_9120", "LOYALTY", "f_44955_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#LOYALTY
    [[maybe_unused]] static void set_field_LOYALTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "LOYALTY", "field_9120", "LOYALTY", "f_44955_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#IMPALING
    [[maybe_unused]] static jobject get_field_IMPALING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "IMPALING", "field_9106", "IMPALING", "f_44956_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#IMPALING
    [[maybe_unused]] static void set_field_IMPALING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "IMPALING", "field_9106", "IMPALING", "f_44956_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#RIPTIDE
    [[maybe_unused]] static jobject get_field_RIPTIDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "RIPTIDE", "field_9104", "RIPTIDE", "f_44957_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#RIPTIDE
    [[maybe_unused]] static void set_field_RIPTIDE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "RIPTIDE", "field_9104", "RIPTIDE", "f_44957_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#CHANNELING
    [[maybe_unused]] static jobject get_field_CHANNELING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "CHANNELING", "field_9117", "CHANNELING", "f_44958_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#CHANNELING
    [[maybe_unused]] static void set_field_CHANNELING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "CHANNELING", "field_9117", "CHANNELING", "f_44958_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#MULTISHOT
    [[maybe_unused]] static jobject get_field_MULTISHOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "MULTISHOT", "field_9108", "MULTISHOT", "f_44959_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#MULTISHOT
    [[maybe_unused]] static void set_field_MULTISHOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "MULTISHOT", "field_9108", "MULTISHOT", "f_44959_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#QUICK_CHARGE
    [[maybe_unused]] static jobject get_field_QUICK_CHARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "QUICK_CHARGE", "field_9098", "QUICK_CHARGE", "f_44960_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#QUICK_CHARGE
    [[maybe_unused]] static void set_field_QUICK_CHARGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "QUICK_CHARGE", "field_9098", "QUICK_CHARGE", "f_44960_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#PIERCING
    [[maybe_unused]] static jobject get_field_PIERCING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "PIERCING", "field_9132", "PIERCING", "f_44961_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#PIERCING
    [[maybe_unused]] static void set_field_PIERCING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "PIERCING", "field_9132", "PIERCING", "f_44961_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#DENSITY
    [[maybe_unused]] static jobject get_field_DENSITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "DENSITY", "field_50157", "DENSITY", "f_314294_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#DENSITY
    [[maybe_unused]] static void set_field_DENSITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "DENSITY", "field_50157", "DENSITY", "f_314294_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#BREACH
    [[maybe_unused]] static jobject get_field_BREACH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "BREACH", "field_50158", "BREACH", "f_316771_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#BREACH
    [[maybe_unused]] static void set_field_BREACH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "BREACH", "field_50158", "BREACH", "f_316771_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#WIND_BURST
    [[maybe_unused]] static jobject get_field_WIND_BURST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "WIND_BURST", "field_50159", "WIND_BURST", "f_316259_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#WIND_BURST
    [[maybe_unused]] static void set_field_WIND_BURST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "WIND_BURST", "field_50159", "WIND_BURST", "f_316259_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#MENDING
    [[maybe_unused]] static jobject get_field_MENDING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "MENDING", "field_9101", "MENDING", "f_44962_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#MENDING
    [[maybe_unused]] static void set_field_MENDING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "MENDING", "field_9101", "MENDING", "f_44962_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantments#VANISHING_CURSE
    [[maybe_unused]] static jobject get_field_VANISHING_CURSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "VANISHING_CURSE", "field_9109", "VANISHING_CURSE", "f_44963_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantments#VANISHING_CURSE
    [[maybe_unused]] static void set_field_VANISHING_CURSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "VANISHING_CURSE", "field_9109", "VANISHING_CURSE", "f_44963_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_bootstrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootstrap", "method_60184", "bootstrap", "m_339752_"), "(Lqq;)V");
    }

    static void bootstrap(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_bootstrap();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_8235", "register", "m_44992_"), "(Lqq;Lakq;Ldac$a;)V");
    }

    static void register(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "key", "method_60183", "of", "m_339811_"), "(Ljava/lang/String;)Lakq;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENCHANTMENT_ENCHANTMENTS_HPP