// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENCHANTMENT_ENCHANTMENT$DEFINITION_HPP
#define NET_MINECRAFT_ENCHANTMENT_ENCHANTMENT$DEFINITION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.enchantment.Enchantment$Definition
 * Remapped: dac$c
 */
namespace Enchantment$Definition {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dac$c", "net/minecraft/world/item/enchantment/Enchantment$EnchantmentDefinition", "net/minecraft/class_1887$class_9427", "net/minecraft/enchantment/Enchantment$Definition", "net/minecraft/src/C_1505_$C_313387_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.enchantment.Enchantment$Definition#supportedItems
    static jobject get_field_supportedItems(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "supportedItems", "comp_2506", "supportedItems", "f_316739_"), "Ljq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.enchantment.Enchantment$Definition#supportedItems
    static void set_field_supportedItems(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "supportedItems", "comp_2506", "supportedItems", "f_316739_"), "Ljq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.enchantment.Enchantment$Definition#primaryItems
    static jobject get_field_primaryItems(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "primaryItems", "comp_2507", "primaryItems", "f_314876_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.enchantment.Enchantment$Definition#primaryItems
    static void set_field_primaryItems(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "primaryItems", "comp_2507", "primaryItems", "f_314876_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.enchantment.Enchantment$Definition#weight
    static jint get_field_weight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "weight", "comp_2508", "weight", "f_315386_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.enchantment.Enchantment$Definition#weight
    static void set_field_weight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "weight", "comp_2508", "weight", "f_315386_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.enchantment.Enchantment$Definition#maxLevel
    static jint get_field_maxLevel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "maxLevel", "comp_2509", "maxLevel", "f_315828_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.enchantment.Enchantment$Definition#maxLevel
    static void set_field_maxLevel(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "maxLevel", "comp_2509", "maxLevel", "f_315828_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.enchantment.Enchantment$Definition#minCost
    static jobject get_field_minCost(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "minCost", "comp_2510", "minCost", "f_316239_"), "Ldac$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.enchantment.Enchantment$Definition#minCost
    static void set_field_minCost(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "minCost", "comp_2510", "minCost", "f_316239_"), "Ldac$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.enchantment.Enchantment$Definition#maxCost
    static jobject get_field_maxCost(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "maxCost", "comp_2511", "maxCost", "f_316226_"), "Ldac$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.enchantment.Enchantment$Definition#maxCost
    static void set_field_maxCost(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "maxCost", "comp_2511", "maxCost", "f_316226_"), "Ldac$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.enchantment.Enchantment$Definition#anvilCost
    static jint get_field_anvilCost(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "anvilCost", "comp_2512", "anvilCost", "f_317020_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.enchantment.Enchantment$Definition#anvilCost
    static void set_field_anvilCost(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "anvilCost", "comp_2512", "anvilCost", "f_317020_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.enchantment.Enchantment$Definition#slots
    static jobject get_field_slots(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "slots", "comp_2513", "slots", "f_315895_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.enchantment.Enchantment$Definition#slots
    static void set_field_slots(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "slots", "comp_2513", "slots", "f_315895_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.enchantment.Enchantment$Definition#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_51650", "CODEC", "f_336673_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.enchantment.Enchantment$Definition#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_51650", "CODEC", "f_336673_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID__supportedItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "supportedItems", "comp_2506", "supportedItems", "f_316739_"), "()Ljq;");
    }

    static jobject _supportedItems(const jobject& obj) {
                
       const auto methodID = methodID__supportedItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__primaryItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "primaryItems", "comp_2507", "primaryItems", "f_314876_"), "()Ljava/util/Optional;");
    }

    static jobject _primaryItems(const jobject& obj) {
                
       const auto methodID = methodID__primaryItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__weight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "weight", "comp_2508", "weight", "f_315386_"), "()I");
    }

    static jint _weight(const jobject& obj) {
                
       const auto methodID = methodID__weight();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__maxLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "maxLevel", "comp_2509", "maxLevel", "f_315828_"), "()I");
    }

    static jint _maxLevel(const jobject& obj) {
                
       const auto methodID = methodID__maxLevel();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__minCost() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "minCost", "comp_2510", "minCost", "f_316239_"), "()Ldac$b;");
    }

    static jobject _minCost(const jobject& obj) {
                
       const auto methodID = methodID__minCost();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__maxCost() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "maxCost", "comp_2511", "maxCost", "f_316226_"), "()Ldac$b;");
    }

    static jobject _maxCost(const jobject& obj) {
                
       const auto methodID = methodID__maxCost();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__anvilCost() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "anvilCost", "comp_2512", "anvilCost", "f_317020_"), "()I");
    }

    static jint _anvilCost(const jobject& obj) {
                
       const auto methodID = methodID__anvilCost();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__slots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "slots", "comp_2513", "slots", "f_315895_"), "()Ljava/util/List;");
    }

    static jobject _slots(const jobject& obj) {
                
       const auto methodID = methodID__slots();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENCHANTMENT_ENCHANTMENT$DEFINITION_HPP